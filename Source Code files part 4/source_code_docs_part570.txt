e="M:System.Web.Configuration.BrowserCapabilitiesFactory.ChromeProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Chrome browser handling the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Crawler browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.ChromeProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Chrome gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.ConfigureBrowserCapabilities(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Used internally by the configuration system to produce request-specific instances of the <see cref="T:System.Web.HttpBrowserCapabilities" /> class that are publicly accessed through the ASP.NET-intrinsic Request.Browser property.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.CpuProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Cpu browser handling the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Cpu browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.CpuProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Cpu gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.CrawlerProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Crawler browser making the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Crawler browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.CrawlerProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Crawler gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.DefaultDefaultProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the DefaultDefault browser making the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Default browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.DefaultProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Default browser making the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Default browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.DefaultProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Default gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.DefaultWmlProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the DefaultWml browser making the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the DefaultWml browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.DefaultXhtmlmpProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the DefaultXhtmlmp browser making the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the DefaultXhtmlmp browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Firefox35ProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Firefox35 browser handling the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Firefox35 browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Firefox35ProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Firefox35 gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Firefox3ProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Firefox3 browser handling the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Firefox3 browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Firefox3ProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Firefox3 gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.FirefoxProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Firefox browser handling the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Firefox browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.FirefoxProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Firefox gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.GenericdownlevelProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Genericdownlevel browser making the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Genericdownlevel browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.GenericdownlevelProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Genericdownlevel gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Ie6to9ProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Ie6to9 browser making the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Ie6to9 browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Ie6to9ProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Ie6to9 gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Ie7ProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the IE7 browser handling the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the IE7 browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Ie7ProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the IE7 gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Ie8ProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the IE8 browser handling the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the IE8 browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Ie8ProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the IE8 gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.IebetaProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Iebeta browser making the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Iebeta browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.IebetaProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Iebeta gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.IemobileProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Iemobile browser handling the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Iemobile browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.IemobileProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Iemobile gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.IeProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Ie browser making the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Ie browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.IeProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Ie gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.IphoneProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Iphone browser handling the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Iephone browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.IphoneProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Iephone gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.IpodProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Ipod browser handling the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Ipod browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.IpodProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Ipod gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.MonoProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Mono browser handling the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Mono browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.MonoProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Mono gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.MozillaProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Mozilla browser handling the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Mozilla browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.MozillaProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Mozilla gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Opera10ProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Opera10 browser handling the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Opera10 browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Opera10ProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Opera10 gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Opera8to9ProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Opera8to9 browser making the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Opera8to9 browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Opera8to9ProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Opera8to9 gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.OperaProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Opera browser making the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Opera browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.OperaProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Opera gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.OSProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the OS browser handling the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the OS browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.OSProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the OS gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.PixelsProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Pixels browser handling the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Pixels browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.PixelsProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Pixels gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Platformmac68kProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Platformmac68k browser making the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Platformmac68k browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Platformmac68kProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Platformmac68k gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.PlatformmacppcProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Platformmacppc browser making the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Platformmacppc browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.PlatformmacppcProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Platformmacppc gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.PlatformProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Platform browser making the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Platform browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.PlatformProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Platform gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.PlatformunixProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Platformunix browser making the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Platformunix browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.PlatformunixProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Platformunix gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.PlatformwebtvProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Platformwebtv browser making the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Platformwebtv browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.PlatformwebtvProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Platformwebtv gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Platformwin16ProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Platformwin16 browser making the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Platformwin16 browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Platformwin16ProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Platformwin16 gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Platformwin2000aProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Platformwin2000a browser making the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Platformwin2000a browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Platformwin2000aProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Platformwin2000a gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Platformwin2000bProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Platformwin2000b browser making the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Platformwin2000b browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Platformwin2000bProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Platformwin2000b gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Platformwin95ProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Platformwin95 browser making the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Platformwin95 browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Platformwin95ProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Platformwin95 gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Platformwin98ProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Platformwin98 browser making the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Platformwin98 browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Platformwin98ProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Platformwin98 gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.PlatformwinceProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Platformwince browser making the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Platformwince browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.PlatformwinceProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Platformwince gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.PlatformwinntProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Platformwinnt browser making the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Platformwinnt browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.PlatformwinntProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Platformwinnt gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.PlatformwinxpProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Platformwinxp browser making the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Platformwinxp browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.PlatformwinxpProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Platformwinxp gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.PopulateBrowserElements(System.Collections.IDictionary)">
      <summary>Used internally by the configuration system to produce request-specific instances of <see cref="T:System.Web.HttpBrowserCapabilities" /> that are publicly accessed through the ASP.NET-intrinsic Request.Browser property.</summary>
      <param name="dictionary">A collection of browser capabilities.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.PopulateMatchedHeaders(System.Collections.IDictionary)">
      <summary>Used internally by the configuration system to produce request-specific instances of <see cref="T:System.Web.HttpBrowserCapabilities" /> that are publicly accessed through the ASP.NET-intrinsic Request.Browser property.</summary>
      <param name="dictionary">A collection of request headers.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Safari3to4ProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Safari3to4 browsers handling the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Safari3to4 browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Safari3to4ProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Safari3to4 gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Safari4ProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Safari4 browser handling the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Safari4 browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Safari4ProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Safari4 gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.SafariProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Safari browser making the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Safari browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.SafariProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Safari gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.VoiceProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Voice browser handling the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Voice browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.VoiceProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Voice gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Win16ProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Win16 browser making the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Win16 browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Win16ProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Win16 gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Win32ProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Win32 browser making the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Win32 browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.Win32ProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Win32 gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.WinProcessBrowsers(System.Boolean,System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Win browser making the current request.</summary>
      <param name="ignoreApplicationBrowsers">true to ignore definitions for the Win browser in application-level browser definition files; otherwise, false.</param>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactory.WinProcessGateways(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Initializes an <see cref="T:System.Web.HttpBrowserCapabilities" /> object that represents the capabilities of the Win gateway handling the current request.</summary>
      <param name="headers">The collection of headers included in the current request.</param>
      <param name="browserCaps">The <see cref="T:System.Web.HttpBrowserCapabilities" /> object to initialize.</param>
    </member>
    <member name="T:System.Web.Configuration.BrowserCapabilitiesFactoryBase">
      <summary>The <see cref="T:System.Web.Configuration.BrowserCapabilitiesFactoryBase" /> class is the base class from which <see cref="T:System.Web.Configuration.BrowserCapabilitiesFactory" /> is derived. It is used internally at run time by the configuration system to create request-specific instances of the <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> class, publicly accessed through the ASP.NET intrinsic Request.Browser property.</summary>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactoryBase.#ctor">
      <summary>Used internally by the configuration system to create a new instance of this class.</summary>
    </member>
    <member name="P:System.Web.Configuration.BrowserCapabilitiesFactoryBase.BrowserElements">
      <summary>Used internally by the configuration system to represent a collection of information relating to various browser capabilities.</summary>
      <returns>A dictionary of browser capabilities.</returns>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactoryBase.ConfigureBrowserCapabilities(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Used internally at run time to configure an <see cref="T:System.Web.HttpBrowserCapabilities" /> object.</summary>
      <param name="headers">A collection of request headers.</param>
      <param name="browserCaps">An <see cref="T:System.Web.HttpBrowserCapabilities" /> object.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactoryBase.ConfigureCustomCapabilities(System.Collections.Specialized.NameValueCollection,System.Web.HttpBrowserCapabilities)">
      <summary>Used internally at run time to configure custom hierarchies of browser capabilities.</summary>
      <param name="headers">A collection of request headers.</param>
      <param name="browserCaps">An object that specifies the capabilities of the browser.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactoryBase.IsBrowserUnknown(System.Web.Configuration.HttpCapabilitiesBase)">
      <summary>Used internally by the configuration system to determine whether the browser represented by the specified <see cref="T:System.Web.HttpBrowserCapabilities" /> object does not have an available adapter.</summary>
      <returns>true if the represented browser does not have an available adapter; otherwise, false.</returns>
      <param name="browserCaps">An <see cref="T:System.Web.HttpBrowserCapabilities" /> object.</param>
    </member>
    <member name="P:System.Web.Configuration.BrowserCapabilitiesFactoryBase.MatchedHeaders">
      <summary>Used internally by the configuration system to represent a collection of request-header values.</summary>
      <returns>A collection of request headers.</returns>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactoryBase.PopulateBrowserElements(System.Collections.IDictionary)">
      <summary>Used internally by the configuration system to populate a collection of browser capabilities based on the supported browser.</summary>
      <param name="dictionary">A collection of key/value pairs representing the browser capabilities.</param>
    </member>
    <member name="M:System.Web.Configuration.BrowserCapabilitiesFactoryBase.PopulateMatchedHeaders(System.Collections.IDictionary)">
      <summary>Used internally by the configuration system to populate a collection of request headers based on the supported browser.</summary>
      <param name="dictionary">A collection of key/value pairs representing the browser capabilities.</param>
    </member>
    <member name="T:System.Web.Configuration.BufferModesCollection">
      <summary>A collection of <see cref="T:System.Web.Configuration.BufferModeSettings" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.BufferModesCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.BufferModesCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.BufferModesCollection.Add(System.Web.Configuration.BufferModeSettings)">
      <summary>Adds a <see cref="T:System.Web.Configuration.BufferModeSettings" /> object to the collection.</summary>
      <param name="bufferModeSettings">A <see cref="T:System.Web.Configuration.BufferModeSettings" /> object to add to the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Web.Configuration.BufferModeSettings" /> object to add already exists in the collection, or the collection is read-only.</exception>
    </member>
    <member name="M:System.Web.Configuration.BufferModesCollection.Clear">
      <summary>Removes all <see cref="T:System.Web.Configuration.BufferModeSettings" /> objects from the collection.</summary>
    </member>
    <member name="P:System.Web.Configuration.BufferModesCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Web.Configuration.BufferModeSettings" /> object with the specified numeric index in the collection.</summary>
      <returns>The <see cref="T:System.Web.Configuration.BufferModeSettings" /> object at the specified index.</returns>
      <param name="index">A valid index of a <see cref="T:System.Web.Configuration.BufferModeSettings" /> object in the collection.</param>
    </member>
    <member name="P:System.Web.Configuration.BufferModesCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.Web.Configuration.BufferModeSettings" /> object based on the specified key in the collection.</summary>
      <returns>A <see cref="T:System.Web.Configuration.BufferModeSettings" /> object.</returns>
      <param name="key">The name of the <see cref="T:System.Web.Configuration.BufferModeSettings" /> object contained in the collection.</param>
    </member>
    <member name="M:System.Web.Configuration.BufferModesCollection.Remove(System.String)">
      <summary>Removes a <see cref="T:System.Web.Configuration.BufferModeSettings" /> object from the collection.</summary>
      <param name="s">The name of a <see cref="T:System.Web.Configuration.BufferModeSettings" /> object in the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationException">There is no <see cref="T:System.Web.Configuration.BufferModeSettings" /> object with the specified key in the collection, the element has already been removed, or the collection is read-only.</exception>
    </member>
    <member name="T:System.Web.Configuration.BufferModeSettings">
      <summary>Configures the ASP.NET event-buffering settings for event providers. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.BufferModeSettings.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.TimeSpan,System.TimeSpan,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.BufferModeSettings" /> class using specified settings.</summary>
      <param name="name">The name of the <see cref="T:System.Web.Configuration.BufferModeSettings" /> object being created.</param>
      <param name="maxBufferSize">The maximum number of events buffered at one time. The value must be greater than zero.</param>
      <param name="maxFlushSize">The maximum number of events per buffer flush. Must be greater than zero.</param>
      <param name="urgentFlushThreshold">The number of events buffered before a buffer flush is triggered. The value must be greater than zero and less than or equal to <paramref name="maxBufferSize" />.</param>
      <param name="regularFlushInterval">The standard amount of time between buffer flushes. The value can be made infinite by setting it to <see cref="F:System.Int32.MaxValue" /> ticks.</param>
      <param name="urgentFlushInterval">The minimum length of time that can pass between buffer flushes. The value must be less than or equal to <paramref name="regularFlushInterval" />.</param>
      <param name="maxBufferThreads">The maximum number of buffer-flushing threads that can be active at one time.</param>
    </member>
    <member name="P:System.Web.Configuration.BufferModeSettings.MaxBufferSize">
      <summary>Gets or sets the maximum number of events that can be buffered at one time.</summary>
      <returns>The maximum number of events that can be buffered at one time.</returns>
    </member>
    <member name="P:System.Web.Configuration.BufferModeSettings.MaxBufferThreads">
      <summary>Gets or sets the maximum number of flushing threads that can be active at one time.</summary>
      <returns>The maximum number of flushing threads that can be active at one time. The default is 1.</returns>
    </member>
    <member name="P:System.Web.Configuration.BufferModeSettings.MaxFlushSize">
      <summary>Gets or sets the maximum number of events per flush.</summary>
      <returns>The maximum number of events per flush.</returns>
    </member>
    <member name="P:System.Web.Configuration.BufferModeSettings.Name">
      <summary>Gets or sets the name of the <see cref="T:System.Web.Configuration.BufferModeSettings" /> object.</summary>
      <returns>The name of the <see cref="T:System.Web.Configuration.BufferModeSettings" /> object. The default value is an empty string.</returns>
    </member>
    <member name="P:System.Web.Configuration.BufferModeSettings.RegularFlushInterval">
      <summary>Gets or sets the amount of time between buffer flushes.</summary>
      <returns>The regular amount of time between buffer flushes.</returns>
    </member>
    <member name="P:System.Web.Configuration.BufferModeSettings.UrgentFlushInterval">
      <summary>Gets or sets the minimum amount of time that can pass between buffer flushes. </summary>
      <returns>The minimum amount of time that can pass between buffer flushes.</returns>
    </member>
    <member name="P:System.Web.Configuration.BufferModeSettings.UrgentFlushThreshold">
      <summary>Gets or sets the number of events that can be buffered before a flush is triggered.</summary>
      <returns>The number of events that can be buffered before a flush is triggered.</returns>
    </member>
    <member name="T:System.Web.Configuration.BuildProvider">
      <summary>Provides functionality to parse a particular file type and generate code during compilation of a dynamic resource. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.BuildProvider.#ctor(System.String,System.String)">
      <summary>Creates an instance of a <see cref="T:System.Web.Configuration.BuildProvider" /> class, initialized to the provided values.</summary>
      <param name="extension">The file extension of the dynamic resource used during compilation.</param>
      <param name="type">The type that represents the <see cref="T:System.Web.Configuration.BuildProvider" /> instance to use when parsing and compiling the given extension.</param>
    </member>
    <member name="M:System.Web.Configuration.BuildProvider.Equals(System.Object)">
      <summary>Determines whether the specified build provider object is equal to the current object.</summary>
      <returns>true if the objects are equal; otherwise, false.</returns>
      <param name="provider">The build provider object to compare with the current object.</param>
    </member>
    <member name="P:System.Web.Configuration.BuildProvider.Extension">
      <summary>Gets or sets the file extension to map to during compilation of a dynamic resource.</summary>
      <returns>A string specifying the file extension to map to during compilation of a dynamic resource.</returns>
    </member>
    <member name="M:System.Web.Configuration.BuildProvider.GetHashCode">
      <summary>Generates the hash code for the build provider.</summary>
      <returns>An integer representing the hash code for the build provider.</returns>
    </member>
    <member name="P:System.Web.Configuration.BuildProvider.Type">
      <summary>Gets or set the comma-separated class and assembly combination that indicates the <see cref="T:System.Web.Configuration.BuildProvider" /> instance to use.</summary>
      <returns>A comma-separated class and assembly combination that indicates the <see cref="T:System.Web.Configuration.BuildProvider" /> instance to use.</returns>
    </member>
    <member name="T:System.Web.Configuration.BuildProviderCollection">
      <summary>Represents a collection of <see cref="T:System.Web.Configuration.BuildProvider" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.BuildProviderCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.BuildProviderCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.BuildProviderCollection.Add(System.Web.Configuration.BuildProvider)">
      <summary>Adds a <see cref="T:System.Web.Configuration.BuildProvider" /> object to the <see cref="T:System.Web.Configuration.BuildProviderCollection" />.</summary>
      <param name="buildProvider">A <see cref="T:System.Web.Configuration.BuildProvider" /> object.</param>
    </member>
    <member name="M:System.Web.Configuration.BuildProviderCollection.Clear">
      <summary>Clears all <see cref="T:System.Web.Configuration.BuildProvider" /> objects from the <see cref="T:System.Web.Configuration.BuildProviderCollection" />.</summary>
    </member>
    <member name="P:System.Web.Configuration.BuildProviderCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Web.Configuration.BuildProvider" /> object at the specified index of the collection.</summary>
      <returns>A <see cref="T:System.Web.Configuration.BuildProvider" /> object.</returns>
      <param name="index">An integer value specifying a particular <see cref="T:System.Web.Configuration.BuildProvider" /> object within the <see cref="T:System.Web.Configuration.BuildProviderCollection" />.</param>
    </member>
    <member name="P:System.Web.Configuration.BuildProviderCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.Web.Configuration.BuildProvider" /> collection element based on the specified name.</summary>
      <returns>A <see cref="T:System.Web.Configuration.BuildProvider" /> object.</returns>
      <param name="name">The name of the <see cref="T:System.Web.Configuration.BuildProvider" /> object to return from the collection.</param>
    </member>
    <member name="M:System.Web.Configuration.BuildProviderCollection.Remove(System.String)">
      <summary>Removes a <see cref="T:System.Web.Configuration.BuildProvider" /> object from the <see cref="T:System.Web.Configuration.BuildProviderCollection" />.</summary>
      <param name="name">A string value specifying the <see cref="T:System.Web.Configuration.BuildProvider" /> reference.</param>
    </member>
    <member name="M:System.Web.Configuration.BuildProviderCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Web.Configuration.BuildProvider" /> object at the specified index from the <see cref="T:System.Web.Configuration.BuildProviderCollection" />.</summary>
      <param name="index">An integer value specifying the location of a specific <see cref="T:System.Web.Configuration.BuildProvider" /> object within the <see cref="T:System.Web.Configuration.BuildProviderCollection" />.</param>
    </member>
    <member name="T:System.Web.Configuration.CacheSection">
      <summary>Configures the global cache settings for an ASP.NET application. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.CacheSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.CacheSection" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.CacheSection.DisableExpiration">
      <summary>Gets or sets a value indicating whether the cache expiration is disabled.</summary>
      <returns>true if the cache expiration is disabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.CacheSection.DisableMemoryCollection">
      <summary>Gets or sets a value indicating whether the cache memory collection is disabled.</summary>
      <returns>true if the cache memory collection is disabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.CacheSection.PercentagePhysicalMemoryUsedLimit">
      <summary>Gets or sets a value indicating the maximum percentage of virtual memory usage.</summary>
      <returns>The maximum percentage of virtual memory usage. The default value is 90%.</returns>
    </member>
    <member name="P:System.Web.Configuration.CacheSection.PrivateBytesLimit">
      <summary>Gets or sets a value indicating the maximum size of the working-process private space.</summary>
      <returns>The maximum number, in bytes, of the private space allocated to the working process. The default value is 0.</returns>
    </member>
    <member name="P:System.Web.Configuration.CacheSection.PrivateBytesPollTime">
      <summary>Gets or sets a value indicating the time interval between polling for the worker-process memory usage.</summary>
      <returns>The time interval between polling for the worker process memory usage. The default value is 1 second.</returns>
    </member>
    <member name="T:System.Web.Configuration.ClientTarget">
      <summary>Defines the alias associated with the target user agent for which ASP.NET server controls should render content. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.ClientTarget.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ClientTarget" /> class.</summary>
      <param name="alias">The name used to refer to a specific user agent.</param>
      <param name="userAgent">The user agent's identification name.</param>
    </member>
    <member name="P:System.Web.Configuration.ClientTarget.Alias">
      <summary>Gets the user agent's alias.</summary>
      <returns>The name used to refer to a specific user agent. </returns>
    </member>
    <member name="P:System.Web.Configuration.ClientTarget.UserAgent">
      <summary>Gets the user agent's identification name.</summary>
      <returns>The user agent's identification name.</returns>
    </member>
    <member name="T:System.Web.Configuration.ClientTargetCollection">
      <summary>Represents a collection of <see cref="T:System.Web.Configuration.ClientTarget" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.ClientTargetCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ClientTargetCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.ClientTargetCollection.Add(System.Web.Configuration.ClientTarget)">
      <summary>Adds the specified <see cref="T:System.Web.Configuration.ClientTarget" /> object to the collection.</summary>
      <param name="clientTarget">The <see cref="T:System.Web.Configuration.ClientTarget" /> to add to the collection.</param>
    </member>
    <member name="P:System.Web.Configuration.ClientTargetCollection.AllKeys">
      <summary>Returns an array of the keys for all the configuration elements contained in the <see cref="T:System.Web.Configuration.ClientTargetCollection" /> collection.</summary>
      <returns>The array of the keys for all of the <see cref="T:System.Web.Configuration.ClientTarget" /> objects contained in the <see cref="T:System.Web.Configuration.ClientTargetCollection" />.</returns>
    </member>
    <member name="M:System.Web.Configuration.ClientTargetCollection.Clear">
      <summary>Removes all the <see cref="T:System.Web.Configuration.ClientTarget" /> objects from the collection.</summary>
    </member>
    <member name="M:System.Web.Configuration.ClientTargetCollection.GetKey(System.Int32)">
      <summary>Gets the collection key for the specified element.</summary>
      <returns>A string containing the value of the key.</returns>
      <param name="index">The collection index of the element to get.</param>
    </member>
    <member name="P:System.Web.Configuration.ClientTargetCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Web.Configuration.ClientTarget" /> object at the specified index.</summary>
      <returns>The <see cref="T:System.Web.Configuration.ClientTarget" /> object at the specified index.</returns>
      <param name="index">The collection index of the object.</param>
    </member>
    <member name="P:System.Web.Configuration.ClientTargetCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.Web.Configuration.ClientTarget" /> object with the specified name.</summary>
      <returns>The <see cref="T:System.Web.Configuration.ClientTarget" /> object with the specified name.</returns>
      <param name="name">The user agent's name.</param>
    </member>
    <member name="M:System.Web.Configuration.ClientTargetCollection.Remove(System.String)">
      <summary>Removes the <see cref="T:System.Web.Configuration.ClientTarget" /> object with the specified alias from the collection.</summary>
      <param name="name">The alias of the <see cref="T:System.Web.Configuration.ClientTarget" /> to remove.</param>
    </member>
    <member name="M:System.Web.Configuration.ClientTargetCollection.Remove(System.Web.Configuration.ClientTarget)">
      <summary>Removes the specified <see cref="T:System.Web.Configuration.ClientTarget" /> object from the collection.</summary>
      <param name="clientTarget">The <see cref="T:System.Web.Configuration.ClientTarget" /> to remove.</param>
    </member>
    <member name="M:System.Web.Configuration.ClientTargetCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Web.Configuration.ClientTarget" /> object with the specified collection index.</summary>
      <param name="index">The collection index of the <see cref="T:System.Web.Configuration.ClientTarget" /> to remove.</param>
    </member>
    <member name="T:System.Web.Configuration.ClientTargetSection">
      <summary>Configures the clientTarget section. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.ClientTargetSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ClientTargetSection" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.ClientTargetSection.ClientTargets">
      <summary>Gets the collection of <see cref="T:System.Web.Configuration.ClientTarget" /> objects.</summary>
      <returns>A <see cref="T:System.Web.Configuration.ClientTargetCollection" /> that contains the <see cref="T:System.Web.Configuration.ClientTarget" /> objects.</returns>
    </member>
    <member name="T:System.Web.Configuration.CodeSubDirectoriesCollection">
      <summary>Represents a collection of <see cref="T:System.Web.Configuration.CodeSubDirectory" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.CodeSubDirectoriesCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.CodeSubDirectoriesCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.CodeSubDirectoriesCollection.Add(System.Web.Configuration.CodeSubDirectory)">
      <summary>Adds a <see cref="T:System.Web.Configuration.CodeSubDirectory" /> object to the <see cref="T:System.Web.Configuration.CodeSubDirectoriesCollection" />.</summary>
      <param name="codeSubDirectory">A string value specifying the <see cref="T:System.Web.Configuration.CodeSubDirectory" /> reference.</param>
    </member>
    <member name="M:System.Web.Configuration.CodeSubDirectoriesCollection.Clear">
      <summary>Removes all items from the collection</summary>
    </member>
    <member name="P:System.Web.Configuration.CodeSubDirectoriesCollection.CollectionType">
      <summary>Gets the type of the configuration collection.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> object of the collection.</returns>
    </member>
    <member name="P:System.Web.Configuration.CodeSubDirectoriesCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Web.Configuration.CodeSubDirectory" /> at the specified index in the <see cref="T:System.Web.Configuration.CodeSubDirectoriesCollection" /> collection.</summary>
      <returns>A <see cref="T:System.Web.Configuration.CodeSubDirectory" /> object.</returns>
      <param name="index">An integer value specifying a specific <see cref="T:System.Web.Configuration.CodeSubDirectory" /> object within the <see cref="T:System.Web.Configuration.CodeSubDirectoriesCollection" /> collection.</param>
    </member>
    <member name="M:System.Web.Configuration.CodeSubDirectoriesCollection.Remove(System.String)">
      <summary>Removes the specified item from the collection.</summary>
      <param name="directoryName">The name of the directory to remove.</param>
    </member>
    <member name="M:System.Web.Configuration.CodeSubDirectoriesCollection.RemoveAt(System.Int32)">
      <summary>Removes the item at the specified index in the collection.</summary>
      <param name="index">The index position of the item to be removed.</param>
    </member>
    <member name="T:System.Web.Configuration.CodeSubDirectory">
      <summary>References a directory location that is used during compilation of a dynamic resource. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.CodeSubDirectory.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.CodeSubDirectory" /> class.</summary>
      <param name="directoryName">A string value specifying the <see cref="T:System.Web.Configuration.CodeSubDirectory" /> reference.</param>
    </member>
    <member name="P:System.Web.Configuration.CodeSubDirectory.DirectoryName">
      <summary>Gets or sets the name of the directory that contains files compiled at run time.</summary>
      <returns>A string value specifying the name of the directory reference used during compilation.</returns>
    </member>
    <member name="T:System.Web.Configuration.CompilationSection">
      <summary>Defines configuration settings that are used to support the compilation infrastructure of Web applications. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.CompilationSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.CompilationSection" /> class by using default settings.</summary>
    </member>
    <member name="P:System.Web.Configuration.CompilationSection.Assemblies">
      <summary>Gets the <see cref="T:System.Web.Configuration.AssemblyCollection" /> of the <see cref="T:System.Web.Configuration.CompilationSection" />.</summary>
      <returns>A <see cref="T:System.Web.Configuration.AssemblyCollection" /> that contains the assembly objects used during compilation of an ASP.NET resource.</returns>
    </member>
    <member name="P:System.Web.Configuration.CompilationSection.AssemblyPostProcessorType">
      <summary>Gets or sets a value specifying a post-process compilation step for an assembly.</summary>
      <returns>A string value specifying the post-process compilation step for an assembly.</returns>
    </member>
    <member name="P:System.Web.Configuration.CompilationSection.Batch">
      <summary>Gets or sets a value indicating whether batch compilation is attempted.</summary>
      <returns>true if batch compilation is attempted; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.CompilationSection.BatchTimeout">
      <summary>Gets or sets the time-out period, in seconds, for batch compilation.</summary>
      <returns>A value indicating the amount of time in seconds granted for batch compilation to occur.  </returns>
    </member>
    <member name="P:System.Web.Configuration.CompilationSection.BuildProviders">
      <summary>Gets the <see cref="T:System.Web.Configuration.BuildProviderCollection" />  collection of the <see cref="T:System.Web.Configuration.CompilationSection" /> class.</summary>
      <returns>A <see cref="T:System.Web.Configuration.BuildProviderCollection" /> that contains the build providers used during a compilation.</returns>
    </member>
    <member name="P:System.Web.Configuration.CompilationSection.CodeSubDirectories">
      <summary>Gets the <see cref="T:System.Web.Configuration.CodeSubDirectoriesCollection" /> of the <see cref="T:System.Web.Configuration.CompilationSection" />.</summary>
      <returns>A <see cref="T:System.Web.Configuration.CodeSubDirectoriesCollection" /> collection that contains an ordered collection of subdirectories containing files compiled at run time.</returns>
    </member>
    <member name="P:System.Web.Configuration.CompilationSection.Compilers">
      <summary>Gets the <see cref="T:System.Web.Configuration.CompilerCollection" /> collection of the <see cref="T:System.Web.Configuration.CompilationSection" /> class.</summary>
      <returns>A <see cref="T:System.Web.Configuration.CompilerCollection" /> collection that contains a collection of <see cref="T:System.Web.Configuration.Compiler" /> objects.</returns>
    </member>
    <member name="P:System.Web.Configuration.CompilationSection.Debug">
      <summary>Gets or sets a value specifying whether to compile release binaries or debug binaries. </summary>
      <returns>true if debug binaries will be used for compilation; otherwise, false. false specifies that release binaries will be used for compilation. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.CompilationSection.DefaultLanguage">
      <summary>Gets or sets the default programming language to use in dynamic-compilation files.</summary>
      <returns>A value specifying the default programming language to use in dynamic-compilation files.</returns>
    </member>
    <member name="P:System.Web.Configuration.CompilationSection.Explicit">
      <summary>Gets or sets a value indicating whether to use the Microsoft Visual Basic explicit compile option.</summary>
      <returns>true if the Visual Basic explicit compile option is enabled; otherwise, false. false specifies that the Visual Basic explicit compile option is disabled. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.CompilationSection.ExpressionBuilders">
      <summary>Gets the <see cref="T:System.Web.Configuration.ExpressionBuilderCollection" /> of the <see cref="T:System.Web.Configuration.CompilationSection" />.</summary>
      <returns>A <see cref="T:System.Web.Configuration.ExpressionBuilderCollection" /> that contains <see cref="T:System.Web.Configuration.ExpressionBuilder" /> objects.</returns>
    </member>
    <member name="P:System.Web.Configuration.CompilationSection.FolderLevelBuildProviders">
      <summary>Gets the <see cref="T:System.Web.Configuration.FolderLevelBuildProviderCollection" /> collection of the <see cref="T:System.Web.Configuration.CompilationSection" /> class, which represents the build providers that are used during compilation.</summary>
      <returns>The build providers that are used during compilation.</returns>
    </member>
    <member name="P:System.Web.Configuration.CompilationSection.MaxBatchGeneratedFileSize">
      <summary>Gets or sets the maximum combined size of the generated source files per batched compilation.</summary>
      <returns>An integer value indicating the maximum combined size of the generated source files per batched compilation.</returns>
    </member>
    <member name="P:System.Web.Configuration.CompilationSection.MaxBatchSize">
      <summary>Gets or sets the maximum number of pages per batched compilation.</summary>
      <returns>An integer value indicating the maximum number of pages that will be compiled into a single batch. The default number of pages is 1000.</returns>
    </member>
    <member name="P:System.Web.Configuration.CompilationSection.NumRecompilesBeforeAppRestart">
      <summary>Gets or sets the number of dynamic recompiles of resources that can occur before the application restarts.</summary>
      <returns>A value indicating the number of dynamic recompiles of resources that can occur before the application restarts. The default is 15 recompilations.</returns>
    </member>
    <member name="P:System.Web.Configuration.CompilationSection.OptimizeCompilations">
      <summary>Gets or sets a value that indicates whether the compilation must be optimized.</summary>
      <returns>true if the compilation must be optimized; otherwise, false. The default is false. </returns>
    </member>
    <member name="P:System.Web.Configuration.CompilationSection.Strict">
      <summary>Gets or sets the Visual Basic strict compile option.</summary>
      <returns>true if the Visual Basic strict compile option is used; otherwise, false. The default is true. </returns>
    </member>
    <member name="P:System.Web.Configuration.CompilationSection.TargetFramework">
      <summary>Gets or sets the version of the .NET Framework that the Web site targets. </summary>
      <returns>The version of the .NET Framework that the Web site targets. The default value is null.</returns>
    </member>
    <member name="P:System.Web.Configuration.CompilationSection.TempDirectory">
      <summary>Gets or sets a value that specifies the directory to use for temporary file storage during compilation.</summary>
      <returns>A value specifying the directory to use for temporary file storage during compilation.</returns>
    </member>
    <member name="P:System.Web.Configuration.CompilationSection.UrlLinePragmas">
      <summary>Gets or sets a value indicating whether instructions to the compiler use physical paths or URLs.</summary>
      <returns>true if instructions to the compiler use URLs rather than physical paths; otherwise, false. The default is false. </returns>
    </member>
    <member name="T:System.Web.Configuration.Compiler">
      <summary>Defines a compiler that is used to support the compilation infrastructure of Web applications. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.Compiler.#ctor(System.String,System.String,System.String,System.String,System.Int32)">
      <summary>Creates an instance of a <see cref="T:System.Web.Configuration.Compiler" /> initialized to the provided values.</summary>
      <param name="compilerOptions">Lists additional compiler-specific options to pass during compilation.</param>
      <param name="extension">Provides a semicolon-separated list of file-name extensions used for dynamic code-behind files. For example, ".cs".</param>
      <param name="language">Provides a semicolon-separated list of languages used in dynamic compilation files. For example, "c#;cs;csharp".</param>
      <param name="type">Specifies a comma-separated class/assembly combination that indicates the .NET Framework class.</param>
      <param name="warningLevel">Specifies compiler warning levels.</param>
    </member>
    <member name="P:System.Web.Configuration.Compiler.CompilerOptions">
      <summary>Gets a list of compiler-specific options to use during compilation.</summary>
      <returns>A value specifying the compiler-specific options to use during compilation. This is not a merged set but rather overrides any previously defined values in earlier configuration entries.</returns>
    </member>
    <member name="P:System.Web.Configuration.Compiler.Extension">
      <summary>Gets a list of file-name extensions used for dynamic code-behind files. </summary>
      <returns>A value specifying the file-name extensions used for dynamic code-behind files, files in the code directory, and other referenced files.</returns>
    </member>
    <member name="P:System.Web.Configuration.Compiler.Language">
      <summary>Gets a list of programming languages to use in dynamic compilation files.</summary>
      <returns>A value specifying the programming languages to use in dynamic compilation files.</returns>
    </member>
    <member name="P:System.Web.Configuration.Compiler.Type">
      <summary>Gets the compiler type name of the language provider for dynamic compilation files. </summary>
      <returns>A value specifying the type name of the language compiler to use in dynamic compilation files.</returns>
    </member>
    <member name="P:System.Web.Configuration.Compiler.WarningLevel">
      <summary>Gets the compiler warning level.</summary>
      <returns>A value specifying the compiler warning level.</returns>
    </member>
    <member name="T:System.Web.Configuration.CompilerCollection">
      <summary>Represents a collection of <see cref="T:System.Web.Configuration.Compiler" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.CompilerCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.CompilerCollection" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.CompilerCollection.AllKeys">
      <summary>Gets all the keys of the <see cref="T:System.Web.Configuration.CompilerCollection" />.</summary>
      <returns>The string array containing the collection keys.</returns>
    </member>
    <member name="P:System.Web.Configuration.CompilerCollection.CollectionType">
      <summary>Gets the type of the configuration collection.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> object of the collection.</returns>
    </member>
    <member name="M:System.Web.Configuration.CompilerCollection.Get(System.Int32)">
      <summary>Gets the <see cref="T:System.Web.Configuration.Compiler" /> collection element at the specified index.</summary>
      <returns>A <see cref="T:System.Web.Configuration.Compiler" /> object.</returns>
      <param name="index">An integer value specifying a <see cref="T:System.Web.Configuration.Compiler" /> within the <see cref="T:System.Web.Configuration.CompilerCollection" />.</param>
    </member>
    <member name="M:System.Web.Configuration.CompilerCollection.Get(System.String)">
      <summary>Gets the <see cref="T:System.Web.Configuration.Compiler" /> collection element for the specified language.</summary>
      <returns>A <see cref="T:System.Web.Configuration.Compiler" /> object.</returns>
      <param name="language">The language for the <see cref="T:System.Web.Configuration.Compiler" /> object within the collection.</param>
    </member>
    <member name="M:System.Web.Configuration.CompilerCollection.GetKey(System.Int32)">
      <summary>Gets the <see cref="T:System.Web.Configuration.CompilerCollection" /> key name at the specified index.</summary>
      <returns>The key name at the specified index of the <see cref="T:System.Web.Configuration.CompilerCollection" />.</returns>
      <param name="index">An integer value specifying a <see cref="T:System.Web.Configuration.Compiler" /> within the <see cref="T:System.Web.Configuration.CompilerCollection" />.</param>
    </member>
    <member name="P:System.Web.Configuration.CompilerCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Web.Configuration.Compiler" /> at the specified index of the collection.</summary>
      <returns>A <see cref="T:System.Web.Configuration.Compiler" /> object.</returns>
      <param name="index">An integer value specifying a <see cref="T:System.Web.Configuration.Compiler" /> within the <see cref="T:System.Web.Configuration.CompilerCollection" />.</param>
    </member>
    <member name="P:System.Web.Configuration.CompilerCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.Web.Configuration.Compiler" /> collection element for the specified language.</summary>
      <returns>A <see cref="T:System.Web.Configuration.Compiler" /> object.</returns>
      <param name="language">The language for the <see cref="T:System.Web.Configuration.Compiler" /> object within the collection.</param>
    </member>
    <member name="T:System.Web.Configuration.CustomError">
      <summary>Configures a <see cref="T:System.Web.Configuration.CustomError" /> section to map an ASP.NET error code to a custom page. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.CustomError.#ctor(System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.CustomError" /> class. </summary>
      <param name="statusCode">The HTTP status code that will result in redirection to the error page.</param>
      <param name="redirect">The URL of the custom page mapped to the error code.</param>
    </member>
    <member name="M:System.Web.Configuration.CustomError.Equals(System.Object)">
      <summary>Compares <see cref="T:System.Web.Configuration.CustomError" /> errors.</summary>
      <returns>true if the errors  are equal; otherwise, false.</returns>
      <param name="customError">The error to compare against.</param>
    </member>
    <member name="M:System.Web.Configuration.CustomError.GetHashCode">
      <summary>Gets the <see cref="T:System.Web.Configuration.CustomError" /> object hash code.</summary>
      <returns>The <see cref="T:System.Web.Configuration.CustomError" /> object hash code.</returns>
    </member>
    <member name="P:System.Web.Configuration.CustomError.Redirect">
      <summary>Gets or sets the redirection URL.</summary>
      <returns>The URL to which the application is redirected when an error occurs.</returns>
    </member>
    <member name="P:System.Web.Configuration.CustomError.StatusCode">
      <summary>Gets or sets the HTTP error status code.</summary>
      <returns>The HTTP error status code that causes the redirection to the custom error page.</returns>
    </member>
    <member name="T:System.Web.Configuration.CustomErrorCollection">
      <summary>Represents a collection of <see cref="T:System.Web.Configuration.CustomError" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.CustomErrorCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.CustomErrorCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.CustomErrorCollection.Add(System.Web.Configuration.CustomError)">
      <summary>Adds a <see cref="T:System.Web.Configuration.CustomError" /> object to the collection.</summary>
      <param name="customError">The <see cref="T:System.Web.Configuration.CustomError" /> object to add already exists in the collection or the collection is read only.</param>
    </member>
    <member name="P:System.Web.Configuration.CustomErrorCollection.AllKeys">
      <summary>Returns an array of the keys for all of the configuration elements contained in this <see cref="T:System.Web.Configuration.CustomErrorCollection" />.</summary>
      <returns>An array containing the keys for all of the <see cref="T:System.Web.Configuration.CustomError" /> objects contained in this <see cref="T:System.Web.Configuration.CustomErrorCollection" />.</returns>
    </member>
    <member name="M:System.Web.Configuration.CustomErrorCollection.Clear">
      <summary>Removes all <see cref="T:System.Web.Configuration.CustomError" /> objects from the collection.</summary>
    </member>
    <member name="P:System.Web.Configuration.CustomErrorCollection.CollectionType">
      <summary>The type of the <see cref="T:System.Web.Configuration.CustomErrorCollection" />.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> of this collection.</returns>
    </member>
    <member name="M:System.Web.Configuration.CustomErrorCollection.Get(System.Int32)">
      <summary>Gets the <see cref="T:System.Web.Configuration.CustomError" /> object with the specified index.</summary>
      <returns>The <see cref="T:System.Web.Configuration.CustomError" /> with the specified index.</returns>
      <param name="index">The collection index of the <see cref="T:System.Web.Configuration.CustomError" /> object. </param>
    </member>
    <member name="M:System.Web.Configuration.CustomErrorCollection.Get(System.String)">
      <summary>Gets the <see cref="T:System.Web.Configuration.CustomError" /> object with the specified status code.</summary>
      <returns>The <see cref="T:System.Web.Configuration.CustomError" /> object with the specified status code.</returns>
      <param name="statusCode">The HTTP status code associated with the custom error. </param>
    </member>
    <member name="M:System.Web.Configuration.CustomErrorCollection.GetKey(System.Int32)">
      <summary>Gets the <see cref="T:System.Web.Configuration.CustomErrorCollection" /> key at the specified index.</summary>
      <returns>The <see cref="T:System.Web.Configuration.CustomErrorCollection" /> key at the specified index.</returns>
      <param name="index">The collection key's index. </param>
    </member>
    <member name="P:System.Web.Configuration.CustomErrorCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Web.Configuration.CustomError" /> with the specified index.</summary>
      <returns>The <see cref="T:System.Web.Configuration.CustomError" /> at the specified index.</returns>
      <param name="index">The collection error's index. </param>
    </member>
    <member name="P:System.Web.Configuration.CustomErrorCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.Web.Configuration.CustomError" /> with the specified status code.</summary>
      <returns>The <see cref="T:System.Web.Configuration.CustomError" /> with the specified status code.</returns>
      <param name="statusCode">The HTTP status code. </param>
    </member>
    <member name="M:System.Web.Configuration.CustomErrorCollection.Remove(System.String)">
      <summary>Removes a <see cref="T:System.Web.Configuration.CustomError" /> object from the collection.</summary>
      <param name="statusCode">The HTTP status code associated with the custom error.  </param>
    </member>
    <member name="M:System.Web.Configuration.CustomErrorCollection.RemoveAt(System.Int32)">
      <summary>Removes a <see cref="T:System.Web.Configuration.CustomError" /> object at the specified index location from the collection.</summary>
      <param name="index">The collection index of the <see cref="T:System.Web.Configuration.CustomError" /> object to remove. </param>
    </member>
    <member name="M:System.Web.Configuration.CustomErrorCollection.Set(System.Web.Configuration.CustomError)">
      <summary>Adds the specified <see cref="T:System.Web.Configuration.CustomError" /> to the collection.</summary>
      <param name="customError">The <see cref="T:System.Web.Configuration.CustomError" /> to add to the collection. </param>
    </member>
    <member name="T:System.Web.Configuration.CustomErrorsMode">
      <summary>Specifies the values for the custom errors modality.</summary>
    </member>
    <member name="F:System.Web.Configuration.CustomErrorsMode.RemoteOnly">
      <summary>Enables custom errors on remote clients only. Custom errors are shown only to remote clients and ASP.NET errors are shown to the local host.</summary>
    </member>
    <member name="F:System.Web.Configuration.CustomErrorsMode.On">
      <summary>Enables custom errors. If no <see cref="P:System.Web.Configuration.CustomErrorsSection.DefaultRedirect" /> is specified, standard errors are issued. </summary>
    </member>
    <member name="F:System.Web.Configuration.CustomErrorsMode.Off">
      <summary>Disables custom errors, allowing display of standard errors.</summary>
    </member>
    <member name="T:System.Web.Configuration.CustomErrorsRedirectMode">
      <summary>Specifies values for how the URL of the original request is handled when a custom error page is displayed.</summary>
    </member>
    <member name="F:System.Web.Configuration.CustomErrorsRedirectMode.ResponseRedirect">
      <summary>Display the error page and change the URL of the original request.</summary>
    </member>
    <member name="F:System.Web.Configuration.CustomErrorsRedirectMode.ResponseRewrite">
      <summary>Display the error page without changing the original URL.</summary>
    </member>
    <member name="T:System.Web.Configuration.CustomErrorsSection">
      <summary>Configures the ASP.NET custom errors. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.CustomErrorsSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.CustomErrorsSection" /> class using default settings.</summary>
    </member>
    <member name="P:System.Web.Configuration.CustomErrorsSection.DefaultRedirect">
      <summary>Gets or sets the default URL for redirection.</summary>
      <returns>The default URL to which the application is redirected when an error occurs.</returns>
      <exception cref="T:System.NullReferenceException">The <see cref="P:System.Web.Configuration.CustomErrorsSection.DefaultRedirect" /> property is null. This is the default.</exception>
    </member>
    <member name="P:System.Web.Configuration.CustomErrorsSection.Errors">
      <summary>Gets the collection of the <see cref="T:System.Web.Configuration.CustomError" /> objects.</summary>
      <returns>A <see cref="T:System.Web.Configuration.CustomErrorCollection" /> that contains the custom errors.</returns>
    </member>
    <member name="P:System.Web.Configuration.CustomErrorsSection.Mode">
      <summary>Gets or sets the error display modality.</summary>
      <returns>One of the <see cref="T:System.Web.Configuration.CustomErrorsMode" /> values. The default is <see cref="F:System.Web.Configuration.CustomErrorsMode.RemoteOnly" />.</returns>
    </member>
    <member name="P:System.Web.Configuration.CustomErrorsSection.RedirectMode">
      <summary>Gets or sets a value that indicates whether the URL of the request should be changed when the user is redirected to a custom error page.</summary>
      <returns>A value that indicates whether the URL is changed when the user is redirected to the custom error page. The default value is <see cref="F:System.Web.Configuration.CustomErrorsRedirectMode.ResponseRedirect" />.</returns>
    </member>
    <member name="T:System.Web.Configuration.DeploymentSection">
      <summary>Defines configuration settings that are used to support the deployment of a Web application. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.DeploymentSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.DeploymentSection" /> class by using default settings.</summary>
    </member>
    <member name="P:System.Web.Configuration.DeploymentSection.Retail">
      <summary>Gets or sets a value specifying whether a Web Application is deployed in retail mode.</summary>
      <returns>true if the Web Application is deployed in retail mode; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.Web.Configuration.EventMappingSettings">
      <summary>Defines the ASP.NET event mapping settings for event providers. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.EventMappingSettings.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.EventMappingSettings" /> class using the specified name and type.</summary>
      <param name="name">The name of the <see cref="T:System.Web.Configuration.EventMappingSettings" /> object being created.</param>
      <param name="type">The fully qualified type of the event class to use.</param>
    </member>
    <member name="M:System.Web.Configuration.EventMappingSettings.#ctor(System.String,System.String,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.BufferModeSettings" /> class using the specified values.</summary>
      <param name="name">The name of the <see cref="T:System.Web.Configuration.EventMappingSettings" /> object being created.</param>
      <param name="type">The fully qualified type of the event class to use.</param>
      <param name="startEventCode">The starting event code range.</param>
      <param name="endEventCode">The ending event code range.</param>
    </member>
    <member name="P:System.Web.Configuration.EventMappingSettings.EndEventCode">
      <summary>Gets or sets the ending event code of the range.</summary>
      <returns>The ending event code of the range. The default is <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="P:System.Web.Configuration.EventMappingSettings.Name">
      <summary>Gets or sets the name of the <see cref="T:System.Web.Configuration.EventMappingSettings" /> object.</summary>
      <returns>The name of the <see cref="T:System.Web.Configuration.EventMappingSettings" /> object. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.Configuration.EventMappingSettings.StartEventCode">
      <summary>Gets or sets the starting event code of the range.</summary>
      <returns>The starting event code of the range. The default is 0.</returns>
    </member>
    <member name="P:System.Web.Configuration.EventMappingSettings.Type">
      <summary>Gets or sets a custom event type.</summary>
      <returns>A valid type reference or an empty string (""). The default is an empty string.</returns>
    </member>
    <member name="T:System.Web.Configuration.EventMappingSettingsCollection">
      <summary>Provides a collection of <see cref="T:System.Web.Configuration.EventMappingSettings" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.EventMappingSettingsCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.EventMappingSettingsCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.EventMappingSettingsCollection.Add(System.Web.Configuration.EventMappingSettings)">
      <summary>Adds an <see cref="T:System.Web.Configuration.EventMappingSettings" /> object to the collection.</summary>
      <param name="eventMappingSettings">An <see cref="T:System.Web.Configuration.EventMappingSettings" /> object to add to the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Web.Configuration.EventMappingSettings" /> object to add already exists in the collection, or the collection is read-only.</exception>
    </member>
    <member name="M:System.Web.Configuration.EventMappingSettingsCollection.Clear">
      <summary>Removes all <see cref="T:System.Web.Configuration.EventMappingSettings" /> objects from the collection.</summary>
    </member>
    <member name="M:System.Web.Configuration.EventMappingSettingsCollection.Contains(System.String)">
      <summary>Indicates whether the collection contains an <see cref="T:System.Web.Configuration.EventMappingSettings" /> object with the specified name.</summary>
      <returns>true if the collection contains an <see cref="T:System.Web.Configuration.EventMappingSettings" /> object with the specified name; otherwise, false.</returns>
      <param name="name">The name of an <see cref="T:System.Web.Configuration.EventMappingSettings" /> object in the collection.</param>
    </member>
    <member name="M:System.Web.Configuration.EventMappingSettingsCollection.IndexOf(System.String)">
      <summary>Returns the index of the specified <see cref="T:System.Web.Configuration.EventMappingSettings" /> object.</summary>
      <returns>The index of the specified <see cref="T:System.Web.Configuration.EventMappingSettings" /> object, or -1 if the object is not found in the collection.</returns>
      <param name="name">The name of an <see cref="T:System.Web.Configuration.EventMappingSettings" /> object in the collection.</param>
    </member>
    <member name="M:System.Web.Configuration.EventMappingSettingsCollection.Insert(System.Int32,System.Web.Configuration.EventMappingSettings)">
      <summary>Adds the specified <see cref="T:System.Web.Configuration.EventMappingSettings" /> object to the specified index point in the collection.</summary>
      <param name="index">A valid index of an <see cref="T:System.Web.Configuration.EventMappingSettings" /> object in the collection.</param>
      <param name="eventMappingSettings">The <see cref="T:System.Web.Configuration.EventMappingSettings" /> object to insert into the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Web.Configuration.EventMappingSettings" /> object to add already exists in the collection, the index is invalid, or the collection is read-only.</exception>
    </member>
    <member name="P:System.Web.Configuration.EventMappingSettingsCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Web.Configuration.EventMappingSettings" /> object at the specified index location.</summary>
      <returns>The <see cref="T:System.Web.Configuration.EventMappingSettings" /> object at the specified index, or null if there is no object at that index.</returns>
      <param name="index">A valid index of an <see cref="T:System.Web.Configuration.EventMappingSettings" /> object in the collection.</param>
    </member>
    <member name="P:System.Web.Configuration.EventMappingSettingsCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.Web.Configuration.EventMappingSettings" /> object based on the specified key in the collection.</summary>
      <returns>An <see cref="T:System.Web.Configuration.EventMappingSettings" /> object.</returns>
      <param name="key">The name of the <see cref="T:System.Web.Configuration.EventMappingSettings" /> object contained in the collection.</param>
    </member>
    <member name="M:System.Web.Configuration.EventMappingSettingsCollection.Remove(System.String)">
      <summary>Removes an <see cref="T:System.Web.Configuration.EventMappingSettings" /> object from the collection.</summary>
      <param name="name">The name of the <see cref="T:System.Web.Configuration.EventMappingSettings" /> to remove from the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationException">There is no <see cref="T:System.Web.Configuration.EventMappingSettings" /> object with the specified key in the collection, the element has already been removed, or the collection is read-only.</exception>
    </member>
    <member name="M:System.Web.Configuration.EventMappingSettingsCollection.RemoveAt(System.Int32)">
      <summary>Removes an <see cref="T:System.Web.Configuration.EventMappingSettings" /> object from the collection.</summary>
      <param name="index">The index of an <see cref="T:System.Web.Configuration.EventMappingSettings" /> object in the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationException">There is no <see cref="T:System.Web.Configuration.EventMappingSettings" /> object with the specified index in the collection, the element has already been removed, or the collection is read-only.</exception>
    </member>
    <member name="T:System.Web.Configuration.ExpressionBuilder">
      <summary>Retrieves a dynamic resource during compilation.</summary>
    </member>
    <member name="M:System.Web.Configuration.ExpressionBuilder.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ExpressionBuilder" /> class. </summary>
      <param name="expressionPrefix">A string that identifies the type of expression to retrieve.</param>
      <param name="theType">A string that specifies the expression type.</param>
    </member>
    <member name="P:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix">
      <summary>Gets or sets a string that identifies the type of expression to retrieve.</summary>
      <returns>A string that identifies the type of expression to retrieve.</returns>
    </member>
    <member name="P:System.Web.Configuration.ExpressionBuilder.Type">
      <summary>Gets or sets a string that specifies the expression type.</summary>
      <returns>A string that specifies the expression type.</returns>
    </member>
    <member name="T:System.Web.Configuration.ExpressionBuilderCollection">
      <summary>Represents a collection of <see cref="T:System.Web.Configuration.ExpressionBuilder" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.ExpressionBuilderCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ExpressionBuilderCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.ExpressionBuilderCollection.Add(System.Web.Configuration.ExpressionBuilder)">
      <summary>Adds an <see cref="T:System.Web.Configuration.ExpressionBuilder" /> object to the <see cref="T:System.Web.Configuration.ExpressionBuilderCollection" />.</summary>
      <param name="buildProvider">A string value specifying the <see cref="T:System.Web.Configuration.ExpressionBuilder" /> reference.</param>
      <exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Web.Configuration.ExpressionBuilder" /> object to add already exists in the collection, or the collection is read-only.</exception>
    </member>
    <member name="M:System.Web.Configuration.ExpressionBuilderCollection.Clear">
      <summary>Clears all the <see cref="T:System.Web.Configuration.ExpressionBuilder" /> objects from the <see cref="T:System.Web.Configuration.ExpressionBuilderCollection" /> collection.</summary>
    </member>
    <member name="P:System.Web.Configuration.ExpressionBuilderCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Web.Configuration.ExpressionBuilder" /> at the specified index in the <see cref="T:System.Web.Configuration.ExpressionBuilderCollection" /> collection.</summary>
      <returns>The <see cref="T:System.Web.Configuration.ExpressionBuilder" /> object at the specified index or null if there is no object at that index.</returns>
      <param name="index">An integer value specifying an <see cref="T:System.Web.Configuration.ExpressionBuilder" /> object within the <see cref="T:System.Web.Configuration.ExpressionBuilderCollection" /> collection.</param>
    </member>
    <member name="P:System.Web.Configuration.ExpressionBuilderCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.Web.Configuration.ExpressionBuilder" /> object with the specified name.</summary>
      <returns>The <see cref="T:System.Web.Configuration.ExpressionBuilder" /> or null if there is no object with that name in the collection.</returns>
      <param name="name">The name of an <see cref="T:System.Web.Configuration.ExpressionBuilder" /> object in the <see cref="T:System.Web.Configuration.ExpressionBuilderCollection" /> collection.</param>
    </member>
    <member name="M:System.Web.Configuration.ExpressionBuilderCollection.Remove(System.String)">
      <summary>Removes an <see cref="T:System.Web.Configuration.ExpressionBuilder" /> object from the <see cref="T:System.Web.Configuration.ExpressionBuilderCollection" /> collection.</summary>
      <param name="name">A string value specifying the <see cref="T:System.Web.Configuration.ExpressionBuilder" /> reference.</param>
    </member>
    <member name="M:System.Web.Configuration.ExpressionBuilderCollection.RemoveAt(System.Int32)">
      <summary>Removes an <see cref="T:System.Web.Configuration.ExpressionBuilder" /> object from the <see cref="T:System.Web.Configuration.ExpressionBuilderCollection" /> collection.</summary>
      <param name="index">An integer value specifying a specific <see cref="T:System.Web.Configuration.ExpressionBuilder" /> object within the <see cref="T:System.Web.Configuration.ExpressionBuilderCollection" /> collection.</param>
    </member>
    <member name="T:System.Web.Configuration.FolderLevelBuildProvider">
      <summary>Represents configuration settings that enable use of the <see cref="T:System.Web.Compilation.BuildProvider" /> class for specific folders. </summary>
    </member>
    <member name="M:System.Web.Configuration.FolderLevelBuildProvider.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.FolderLevelBuildProvider" /> class by using an identifier and the fully qualified name. </summary>
      <param name="name">The identifier for the <see cref="T:System.Web.Compilation.BuildProvider" /> to use.</param>
      <param name="type">The fully qualified name of the <see cref="T:System.Web.Compilation.BuildProvider" /> to use.</param>
    </member>
    <member name="M:System.Web.Configuration.FolderLevelBuildProvider.Equals(System.Object)">
      <summary>Returns a value that indicates whether a specified object is equal to the current <see cref="T:System.Web.Configuration.FolderLevelBuildProvider" /> object.</summary>
      <returns>true if the specified folder level build provider object is equal to the current object; otherwise, false.</returns>
      <param name="provider">The build provider object to compare.</param>
    </member>
    <member name="M:System.Web.Configuration.FolderLevelBuildProvider.GetHashCode">
      <summary>Generates a hash code for the <see cref="T:System.Web.Configuration.FolderLevelBuildProvider" /> object.</summary>
      <returns>The hash code for the <see cref="T:System.Web.Configuration.FolderLevelBuildProvider" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.FolderLevelBuildProvider.Name">
      <summary>Gets or sets the name of the <see cref="T:System.Web.Configuration.FolderLevelBuildProvider" /> object.</summary>
      <returns>The name of the build provider object.</returns>
    </member>
    <member name="P:System.Web.Configuration.FolderLevelBuildProvider.Type">
      <summary>Gets or set the fully qualified name of the build provider class.</summary>
      <returns>The fully qualified name of the build provider class.</returns>
    </member>
    <member name="T:System.Web.Configuration.FolderLevelBuildProviderCollection">
      <summary>Represents a collection of <see cref="T:System.Web.Configuration.FolderLevelBuildProvider" /> objects. </summary>
    </member>
    <member name="M:System.Web.Configuration.FolderLevelBuildProviderCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.FolderLevelBuildProviderCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.FolderLevelBuildProviderCollection.Add(System.Web.Configuration.FolderLevelBuildProvider)">
      <summary>Adds a <see cref="T:System.Web.Configuration.FolderLevelBuildProvider" /> object to the <see cref="T:System.Web.Configuration.FolderLevelBuildProviderCollection" /> object.</summary>
      <param name="buildProvider">The <see cref="T:System.Web.Configuration.FolderLevelBuildProvider" /> object to add.</param>
    </member>
    <member name="M:System.Web.Configuration.FolderLevelBuildProviderCollection.Clear">
      <summary>Clears all <see cref="T:System.Web.Configuration.FolderLevelBuildProvider" /> objects from the <see cref="T:System.Web.Configuration.FolderLevelBuildProviderCollection" /> object.</summary>
    </member>
    <member name="P:System.Web.Configuration.FolderLevelBuildProviderCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.Web.Configuration.FolderLevelBuildProvider" /> object at the specified index in the <see cref="T:System.Web.Configuration.FolderLevelBuildProviderCollection" /> object.</summary>
      <returns>The folder-level build provider object that is located at the specified index.</returns>
      <param name="index">The index of the <see cref="T:System.Web.Configuration.FolderLevelBuildProvider" /> object to get.</param>
    </member>
    <member name="P:System.Web.Configuration.FolderLevelBuildProviderCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.Web.Configuration.FolderLevelBuildProvider" /> object that has the specified name.</summary>
      <returns>The folder-level build provider object that has the specified name.</returns>
      <param name="name">The name of the <see cref="T:System.Web.Configuration.FolderLevelBuildProvider" /> to get.</param>
    </member>
    <member name="M:System.Web.Configuration.FolderLevelBuildProviderCollection.Remove(System.String)">
      <summary>Removes a <see cref="T:System.Web.Configuration.FolderLevelBuildProvider" /> object from the <see cref="T:System.Web.Configuration.FolderLevelBuildProviderCollection" /> object.</summary>
      <param name="name">The <see cref="T:System.Web.Configuration.FolderLevelBuildProvider" /> object to remove.</param>
    </member>
    <member name="M:System.Web.Configuration.FolderLevelBuildProviderCollection.RemoveAt(System.Int32)">
      <summary>Removes a <see cref="T:System.Web.Configuration.FolderLevelBuildProvider" /> object at the specified index in a <see cref="T:System.Web.Configuration.FolderLevelBuildProviderCollection" /> object.</summary>
      <param name="index">The index of the <see cref="T:System.Web.Configuration.FolderLevelBuildProvider" /> object to remove. </param>
    </member>
    <member name="T:System.Web.Configuration.FormsAuthenticationConfiguration">
      <summary>Configures an ASP.NET application to use the <see cref="T:System.Web.Configuration.AuthenticationMode" /> forms modality. </summary>
    </member>
    <member name="M:System.Web.Configuration.FormsAuthenticationConfiguration.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.FormsAuthenticationConfiguration" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.FormsAuthenticationConfiguration.Cookieless">
      <summary>Gets or sets a value indicating whether forms-based authentication should use cookies.</summary>
      <returns>One of the <see cref="T:System.Web.HttpCookieMode" /> values. The default value is <see cref="F:System.Web.HttpCookieMode.UseDeviceProfile" />.</returns>
    </member>
    <member name="P:System.Web.Configuration.FormsAuthenticationConfiguration.Credentials">
      <summary>Gets the <see cref="T:System.Web.Configuration.FormsAuthenticationCredentials" /> collection of user names and passwords.</summary>
      <returns>A <see cref="T:System.Web.Configuration.FormsAuthenticationCredentials" /> collection that contains the user names and passwords.</returns>
    </member>
    <member name="P:System.Web.Configuration.FormsAuthenticationConfiguration.DefaultUrl">
      <summary>Gets or sets the default URL.</summary>
      <returns>The URL to which to redirect the request after authentication. The default value is default.aspx.</returns>
    </member>
    <member name="P:System.Web.Configuration.FormsAuthenticationConfiguration.Domain">
      <summary>Gets or sets the domain name to be sent with forms authentication cookies.</summary>
      <returns>The name of the domain for the outgoing forms authentication cookies. Default is an empty string.</returns>
    </member>
    <member name="P:System.Web.Configuration.FormsAuthenticationConfiguration.EnableCrossAppRedirects">
      <summary>Gets or sets a value indicating whether authenticated users can be redirected to URLS in other applications.</summary>
      <returns>true if authenticated users can be redirected to URLs in other applications; otherwise false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.FormsAuthenticationConfiguration.LoginUrl">
      <summary>Gets or sets the redirection URL for the request.</summary>
      <returns>The URL the request is redirected to when the user is not authenticated. The default value is login.aspx.</returns>
    </member>
    <member name="P:System.Web.Configuration.FormsAuthenticationConfiguration.Name">
      <summary>Gets or sets the cookie name.</summary>
      <returns>The name of the HTTP cookie to use for request authentication.</returns>
    </member>
    <member name="P:System.Web.Configuration.FormsAuthenticationConfiguration.Path">
      <summary>Gets or sets the cookie path.</summary>
      <returns>The path of the HTTP cookie to use for authentication. The default value is a slash (/), which represents the Web-application root.</returns>
    </member>
    <member name="P:System.Web.Configuration.FormsAuthenticationConfiguration.Protection">
      <summary>Gets or sets the encryption type used to encrypt the cookie.</summary>
      <returns>One of the <see cref="T:System.Web.Configuration.FormsProtectionEnum" /> enumeration values. The default value is All.Note   Be sure to use the default value for this property if you want both data validation and encryption to help protect the cookie. This option uses the configured data-validation algorithm based on the machineKey. Triple-DES (3DES) is used for encryption, if available and if the key is long enough (48 bytes or more). To improve the protection of your cookie, you may also want to set the <see cref="P:System.Web.Configuration.FormsAuthenticationConfiguration.RequireSSL" /> to true.</returns>
    </member>
    <member name="P:System.Web.Configuration.FormsAuthenticationConfiguration.RequireSSL">
      <summary>Gets or sets a value indicating whether a Secure Sockets Layer (SSL) connection is required when transmitting authentication information.</summary>
      <returns>true if an SSL connection is required; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.FormsAuthenticationConfiguration.SlidingExpiration">
      <summary>Gets or sets the authentication sliding expiration.</summary>
      <returns>true if the sliding expiration is enabled; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.FormsAuthenticationConfiguration.TicketCompatibilityMode">
      <summary>Gets or sets a value that indicates whether to use Coordinated Universal Time (UTC) or local time for the ticket expiration date.</summary>
      <returns>The ticket expiration-date compatibility mode.</returns>
    </member>
    <member name="P:System.Web.Configuration.FormsAuthenticationConfiguration.Timeout">
      <summary>Gets or sets the authentication time-out.</summary>
      <returns>The amount of time in minutes after which the authentication expires. The default value is 30 minutes.</returns>
    </member>
    <member name="T:System.Web.Configuration.FormsAuthenticationCredentials">
      <summary>Configures user credentials for ASP.NET applications that use form-based authentication.</summary>
    </member>
    <member name="M:System.Web.Configuration.FormsAuthenticationCredentials.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.FormsAuthenticationCredentials" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.FormsAuthenticationCredentials.PasswordFormat">
      <summary>Gets or sets the password format.</summary>
      <returns>One of the <see cref="T:System.Web.Configuration.FormsAuthPasswordFormat" /> values.</returns>
    </member>
    <member name="P:System.Web.Configuration.FormsAuthenticationCredentials.Users">
      <summary>Gets the users' names and password credentials.</summary>
      <returns>A <see cref="T:System.Web.Configuration.FormsAuthenticationUserCollection" /> that contains the users' names and password credentials.</returns>
    </member>
    <member name="T:System.Web.Configuration.FormsAuthenticationUser">
      <summary>Configures the user's credentials for Web applications that use forms-based authentication. </summary>
    </member>
    <member name="M:System.Web.Configuration.FormsAuthenticationUser.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.FormsAuthenticationUser" /> class using the passed parameters.</summary>
      <param name="name">User's name.</param>
      <param name="password">User's password.</param>
    </member>
    <member name="P:System.Web.Configuration.FormsAuthenticationUser.Name">
      <summary>Gets or sets the logon user name.</summary>
      <returns>The logon user name required by the application.</returns>
    </member>
    <member name="P:System.Web.Configuration.FormsAuthenticationUser.Password">
      <summary>Gets or sets the user's password.</summary>
      <returns>The user's password required by the application.</returns>
    </member>
    <member name="T:System.Web.Configuration.FormsAuthenticationUserCollection">
      <summary>Represents a collection of <see cref="T:System.Web.Configuration.FormsAuthenticationUser" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.FormsAuthenticationUserCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.FormsAuthenticationUserCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.FormsAuthenticationUserCollection.Add(System.Web.Configuration.FormsAuthenticationUser)">
      <summary>Adds a <see cref="T:System.Web.Configuration.FormsAuthenticationUser" /> object to the collection.</summary>
      <param name="user">The <see cref="T:System.Web.Configuration.FormsAuthenticationUser" /> object to add to the collection. </param>
      <exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Web.Configuration.FormsAuthenticationUser" /> object already exists in the collection, or the collection is read-only.</exception>
    </member>
    <member name="P:System.Web.Configuration.FormsAuthenticationUserCollection.AllKeys">
      <summary>Gets all the collection's keys.</summary>
      <returns>The string array containing the collection keys.</returns>
    </member>
    <member name="M:System.Web.Configuration.FormsAuthenticationUserCollection.Clear">
      <summary>Removes all <see cref="T:System.Web.Configuration.FormsAuthenticationUser" /> objects from the collection.</summary>
      <exception cref="T:System.Configuration.ConfigurationException">The collection is read-only.</exception>
    </member>
    <member name="P:System.Web.Configuration.FormsAuthenticationUserCollection.CollectionType">
      <summary>Gets the type of the <see cref="T:System.Web.Configuration.FormsAuthenticationUserCollection" />.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> of this collection.</returns>
    </member>
    <member name="M:System.Web.Configuration.FormsAuthenticationUserCollection.Get(System.Int32)">
      <summary>Gets the <see cref="T:System.Web.Configuration.FormsAuthenticationUser" /> collection element at the specified index.</summary>
      <returns>A <see cref="T:System.Web.Configuration.FormsAuthenticationUser" /> that contains the user name and password.</returns>
      <param name="index">The collection user's index. </param>
    </member>
    <member name="M:System.Web.Configuration.FormsAuthenticationUserCollection.Get(System.String)">
      <summary>Gets the <see cref="T:System.Web.Configuration.FormsAuthenticationUser" /> collection element with the specified name.</summary>
      <returns>A <see cref="T:System.Web.Configuration.FormsAuthenticationUser" /> object that contains the user name and password.</returns>
      <param name="name">The user's name. </param>
    </member>
    <member name="M:System.Web.Configuration.FormsAuthenticationUserCollection.GetKey(System.Int32)">
      <summary>Gets the key at the specified <see cref="T:System.Web.Configuration.FormsAuthenticationUserCollection" /> collection index.</summary>
      <returns>The key at the specified index of the <see cref="T:System.Web.Configuration.FormsAuthenticationUserCollection" />.</returns>
      <param name="index">The index in the collection.</param>
    </member>
    <member name="P:System.Web.Configuration.FormsAuthenticationUserCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Web.Configuration.FormsAuthenticationUser" /> at the specified index.</summary>
      <returns>A <see cref="T:System.Web.Configuration.FormsAuthenticationUser" /> that contains the user name and password.</returns>
      <param name="index">The collection user's index. </param>
    </member>
    <member name="P:System.Web.Configuration.FormsAuthenticationUserCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.Web.Configuration.FormsAuthenticationUser" /> with the specified name.</summary>
      <returns>A <see cref="T:System.Web.Configuration.FormsAuthenticationUser" /> object that contains the user name and password.</returns>
      <param name="name">The user's name. </param>
    </member>
    <member name="M:System.Web.Configuration.FormsAuthenticationUserCollection.Remove(System.String)">
      <summary>Removes a <see cref="T:System.Web.Configuration.FormsAuthenticationUser" /> object from the collection.</summary>
      <param name="name">The name of the <see cref="T:System.Web.Configuration.FormsAuthenticationUser" /> object to remove from the collection. </param>
      <exception cref="T:System.Configuration.ConfigurationException">There is no <see cref="T:System.Web.Configuration.FormsAuthenticationUser" /> object with the specified key in the collection, the element has already been removed, or the collection is read-only.</exception>
    </member>
    <member name="M:System.Web.Configuration.FormsAuthenticationUserCollection.RemoveAt(System.Int32)">
      <summary>Removes a <see cref="T:System.Web.Configuration.FormsAuthenticationUser" /> object at the specified index from the collection.</summary>
      <param name="index">The index of the <see cref="T:System.Web.Configuration.FormsAuthenticationUser" /> object to remove from the collection. </param>
      <exception cref="T:System.Configuration.ConfigurationException">There is no <see cref="T:System.Web.Configuration.FormsAuthenticationUser" /> object at the specified index in the collection, the element has already been removed, or the collection is read only.</exception>
    </member>
    <member name="M:System.Web.Configuration.FormsAuthenticationUserCollection.Set(System.Web.Configuration.FormsAuthenticationUser)">
      <summary>Modifies the specified <see cref="T:System.Web.Configuration.FormsAuthenticationUser" /> object contained in the collection.</summary>
      <param name="user">The <see cref="T:System.Web.Configuration.FormsAuthenticationUserCollection" /> object that must be changed. </param>
    </member>
    <member name="T:System.Web.Configuration.FormsAuthPasswordFormat">
      <summary>Defines the encryption format for storing passwords.</summary>
    </member>
    <member name="F:System.Web.Configuration.FormsAuthPasswordFormat.Clear">
      <summary>Specifies that passwords are not encrypted. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Configuration.FormsAuthPasswordFormat.SHA1">
      <summary>Specifies that passwords are encrypted using the SHA1 hash algorithm. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Configuration.FormsAuthPasswordFormat.MD5">
      <summary>Specifies that passwords are encrypted using the MD5 hash algorithm. This field is constant.</summary>
    </member>
    <member name="T:System.Web.Configuration.FormsProtectionEnum">
      <summary>Defines the type of encryption, if any, to use for cookies. </summary>
    </member>
    <member name="F:System.Web.Configuration.FormsProtectionEnum.All">
      <summary>Specifies that the application use both data validation and encryption to help protect cookies. This option uses the configured data-validation algorithm (based on the machineKey element). Triple-DES (3DES) is used for encryption, if it is available and if the key is at least 48 bytes long. All is the default (and recommended) value.</summary>
    </member>
    <member name="F:System.Web.Configuration.FormsProtectionEnum.None">
      <summary>Specifies that both encryption and validation are disabled for sites that use cookies only for personalization and thus have weaker security requirements. Using cookies in this manner is not recommended; however, it is the least resource-intensive way to enable personalization using the .NET Framework.</summary>
    </member>
    <member name="F:System.Web.Configuration.FormsProtectionEnum.Encryption">
      <summary>Specifies that cookies are encrypted using Triple-DES or DES, but data validation is not performed on cookies. Cookies used this way might be subject to chosen plaintext security attacks.</summary>
    </member>
    <member name="F:System.Web.Configuration.FormsProtectionEnum.Validation">
      <summary>Specifies that the application use a validation scheme to verify that the contents of an encrypted cookie have not been altered in transit. The cookie is created by concatenating a validation key with the cookie data, computing a Message Authentication Code (MAC), and appending the MAC to the outgoing cookie.</summary>
    </member>
    <member name="T:System.Web.Configuration.FullTrustAssembliesSection">
      <summary>Configures a set of full-trust assemblies. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.FullTrustAssembliesSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.FullTrustAssembliesSection" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.FullTrustAssembliesSection.FullTrustAssemblies">
      <summary>Gets the <see cref="T:System.Web.Configuration.FullTrustAssemblyCollection" /> collection of the fully trusted assemblies.</summary>
      <returns>A collection of fully trusted assemblies.</returns>
    </member>
    <member name="T:System.Web.Configuration.FullTrustAssembly">
      <summary>Configures a full trust assembly. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.FullTrustAssembly.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.FullTrustAssembly" /> class.</summary>
      <param name="assemblyName">The assembly name.</param>
      <param name="version">The assembly version number.</param>
      <param name="publicKey">The hexadecimal string representation of the public key that is associated with the assembly.</param>
    </member>
    <member name="P:System.Web.Configuration.FullTrustAssembly.AssemblyName">
      <summary>Gets or sets the assembly name.</summary>
      <returns>The assembly name.</returns>
    </member>
    <member name="P:System.Web.Configuration.FullTrustAssembly.PublicKey">
      <summary>Gets or sets the assembly public key.</summary>
      <returns>The hexadecimal representation of the public key that is associated with the assembly.</returns>
    </member>
    <member name="P:System.Web.Configuration.FullTrustAssembly.Version">
      <summary>Gets or sets the assembly version number.</summary>
      <returns>The assembly version number.</returns>
    </member>
    <member name="T:System.Web.Configuration.FullTrustAssemblyCollection">
      <summary>Represents a collection of <see cref="T:System.Web.Configuration.FullTrustAssembly" /> objects. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Web.Configuration.FullTrustAssemblyCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.FullTrustAssemblyCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.FullTrustAssemblyCollection.Add(System.Web.Configuration.FullTrustAssembly)">
      <summary>Adds a <see cref="T:System.Web.Configuration.FullTrustAssembly" /> object to the collection.</summary>
      <param name="fullTrustAssembly">The object to add to the collection.</param>
    </member>
    <member name="M:System.Web.Configuration.FullTrustAssemblyCollection.Clear">
      <summary>Removes all the <see cref="T:System.Web.Configuration.FullTrustAssembly" /> objects from the collection.</summary>
    </member>
    <member name="P:System.Web.Configuration.FullTrustAssemblyCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Web.Configuration.FullTrustAssembly" /> object from the collection at the specified index.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The collection element index.</param>
    </member>
    <member name="M:System.Web.Configuration.FullTrustAssemblyCollection.Remove(System.String)">
      <summary>Removes the specified <see cref="T:System.Web.Configuration.FullTrustAssembly" /> object from the collection.</summary>
      <param name="key">The key of the element to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Configuration.FullTrustAssemblyCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Web.Configuration.FullTrustAssembly" /> object from the collection at the specified index.</summary>
      <param name="index">The index of the element to remove from the collection.</param>
    </member>
    <member name="T:System.Web.Configuration.GlobalizationSection">
      <summary>Defines configuration settings that are used to support the globalization infrastructure of Web applications. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.GlobalizationSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.GlobalizationSection" /> class by using default settings.</summary>
    </member>
    <member name="P:System.Web.Configuration.GlobalizationSection.Culture">
      <summary>Gets or sets a value specifying the default culture for processing incoming Web requests.</summary>
      <returns>The default culture for processing incoming Web requests.</returns>
    </member>
    <member name="P:System.Web.Configuration.GlobalizationSection.EnableBestFitResponseEncoding">
      <summary>Gets or sets a value indicating whether the best-fit character encoding for a response is enabled.</summary>
      <returns>true if the best-fit character encoding for a response is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.GlobalizationSection.EnableClientBasedCulture">
      <summary>Gets or sets a value indicating whether the <see cref="P:System.Web.Configuration.GlobalizationSection.Culture" /> and <see cref="P:System.Web.Configuration.GlobalizationSection.UICulture" /> properties should be based on the <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> header field value that is sent by the client browser.</summary>
      <returns>true if the <see cref="P:System.Web.Configuration.GlobalizationSection.Culture" /> and <see cref="P:System.Web.Configuration.GlobalizationSection.UICulture" /> should be based on the <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> header field value sent by the client browser; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.GlobalizationSection.FileEncoding">
      <summary>Gets or sets a value specifying the default encoding for .aspx, .asmx, and .asax file parsing.</summary>
      <returns>The default encoding value.</returns>
    </member>
    <member name="P:System.Web.Configuration.GlobalizationSection.RequestEncoding">
      <summary>Gets or sets a value specifying the content encoding of HTTP requests.</summary>
      <returns>The content encoding of HTTP requests. The default is UTF-8.</returns>
    </member>
    <member name="P:System.Web.Configuration.GlobalizationSection.ResourceProviderFactoryType">
      <summary>Gets or sets the factory type of the resource provider.</summary>
      <returns>The factory type of the resource provider.</returns>
    </member>
    <member name="P:System.Web.Configuration.GlobalizationSection.ResponseEncoding">
      <summary>Gets or sets a value specifying the content encoding of HTTP responses.</summary>
      <returns>The content encoding of HTTP responses. The default is UTF-8.</returns>
    </member>
    <member name="P:System.Web.Configuration.GlobalizationSection.ResponseHeaderEncoding">
      <summary>Gets or sets a value specifying the header encoding of HTTP responses.</summary>
      <returns>The header encoding of HTTP responses. The default is UTF-8.</returns>
    </member>
    <member name="P:System.Web.Configuration.GlobalizationSection.UICulture">
      <summary>Gets or sets a value specifying the default culture for processing locale-dependent resource searches.</summary>
      <returns>The default culture for processing locale-dependent resource searches.</returns>
    </member>
    <member name="T:System.Web.Configuration.HealthMonitoringSection">
      <summary>Configures ASP.NET profiles that determine how health-monitoring events are sent to event providers. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.HealthMonitoringSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.HealthMonitoringSection" /> class using default settings.</summary>
    </member>
    <member name="P:System.Web.Configuration.HealthMonitoringSection.BufferModes">
      <summary>Gets a collection of objects that specify the settings for the buffer modes.</summary>
      <returns>A <see cref="T:System.Web.Configuration.BufferModesCollection" /> collection of <see cref="T:System.Web.Configuration.BufferModeSettings" /> objects.</returns>
    </member>
    <member name="P:System.Web.Configuration.HealthMonitoringSection.Enabled">
      <summary>Gets or sets a value indicating whether health monitoring is enabled.</summary>
      <returns>true if health monitoring is enabled; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.HealthMonitoringSection.EventMappings">
      <summary>Gets a <see cref="T:System.Web.Configuration.EventMappingSettingsCollection" /> collection of <see cref="T:System.Web.Configuration.EventMappingSettings" /> objects.</summary>
      <returns>A <see cref="T:System.Web.Configuration.EventMappingSettingsCollection" /> collection of <see cref="T:System.Web.Configuration.EventMappingSettings" /> objects. The default is an empty <see cref="T:System.Web.Configuration.EventMappingSettingsCollection" /> collection.</returns>
    </member>
    <member name="P:System.Web.Configuration.HealthMonitoringSection.HeartbeatInterval">
      <summary>Gets or sets the interval used by the application domain when it raises the <see cref="T:System.Web.Management.WebHeartbeatEvent" /> event.</summary>
      <returns>The interval used by the application domain when it raises the <see cref="T:System.Web.Management.WebHeartbeatEvent" /> event.</returns>
    </member>
    <member name="P:System.Web.Configuration.HealthMonitoringSection.Profiles">
      <summary>Gets a <see cref="T:System.Web.Configuration.ProfileSettingsCollection" /> collection of <see cref="T:System.Web.Configuration.ProfileSettings" /> objects.</summary>
      <returns>A <see cref="T:System.Web.Configuration.ProfileSettingsCollection" /> collection of <see cref="T:System.Web.Configuration.ProfileSettings" /> objects. The default is an empty <see cref="T:System.Web.Configuration.ProfileSettingsCollection" /> collection.</returns>
    </member>
    <member name="P:System.Web.Configuration.HealthMonitoringSection.Providers">
      <summary>Gets a <see cref="T:System.Configuration.ProviderSettingsCollection" /> collection of <see cref="T:System.Configuration.ProviderSettings" /> objects.</summary>
      <returns>A <see cref="T:System.Configuration.ProviderSettingsCollection" /> collection. The default is an empty <see cref="T:System.Configuration.ProviderSettingsCollection" /> collection.</returns>
    </member>
    <member name="P:System.Web.Configuration.HealthMonitoringSection.Rules">
      <summary>Gets a <see cref="T:System.Web.Configuration.RuleSettingsCollection" /> collection of <see cref="T:System.Web.Configuration.RuleSettings" /> objects.</summary>
      <returns>A <see cref="T:System.Web.Configuration.RuleSettingsCollection" /> collection. The default is an empty <see cref="T:System.Web.Configuration.RuleSettingsCollection" /> collection</returns>
    </member>
    <member name="T:System.Web.Configuration.HostingEnvironmentSection">
      <summary>Defines configuration settings that control the behavior of the application hosting environment. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.HostingEnvironmentSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.HostingEnvironmentSection" /> class by using default settings.</summary>
    </member>
    <member name="P:System.Web.Configuration.HostingEnvironmentSection.IdleTimeout">
      <summary>Gets or sets the amount of time, in minutes, before unloading an inactive application.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that is the specified number of minutes before unloading an inactive application. The default is 20 minutes.</returns>
    </member>
    <member name="P:System.Web.Configuration.HostingEnvironmentSection.ShadowCopyBinAssemblies">
      <summary>Gets or sets a value indicating whether the assemblies of an application in Bin are shadow copied to the application's ASP.NET Temporary Files directory. </summary>
      <returns>true if the assemblies of an application in Bin are shadow copied to the application's ASP.NET Temporary Files directory; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.HostingEnvironmentSection.ShutdownTimeout">
      <summary>Gets or sets the amount of time, in seconds, to gracefully shut down the application.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that is the specified number of seconds to gracefully shut down the application. The default is 30 seconds.</returns>
    </member>
    <member name="P:System.Web.Configuration.HostingEnvironmentSection.UrlMetadataSlidingExpiration">
      <summary>Gets or sets the amount of time, in minutes, that the URL metadata is cached by ASP.NET. </summary>
      <returns>The amount of time, in minutes, that the URL metadata is cached by ASP.NET. </returns>
    </member>
    <member name="T:System.Web.Configuration.HttpCapabilitiesBase">
      <summary>Provides access to detailed information about the capabilities of the client's browser.</summary>
    </member>
    <member name="M:System.Web.Configuration.HttpCapabilitiesBase.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls">
      <summary>Gets a value indicating whether the browser supports ActiveX controls.</summary>
      <returns>true if the browser supports ActiveX controls; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.Adapters">
      <summary>Returns the collection of available control adapters.</summary>
      <returns>The collection of registered control adapters.</returns>
    </member>
    <member name="M:System.Web.Configuration.HttpCapabilitiesBase.AddBrowser(System.String)">
      <summary>Used internally to add an entry to the internal collection of browsers for which capabilities are recognized.</summary>
      <param name="browserName">The name of the browser to add.</param>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.AOL">
      <summary>Gets a value indicating whether the client is an America Online (AOL) browser.</summary>
      <returns>true if the browser is an AOL browser; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds">
      <summary>Gets a value indicating whether the browser supports playing background sounds using the &lt;bgsounds&gt; HTML element.</summary>
      <returns>true if the browser supports playing background sounds; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.Beta">
      <summary>Gets a value indicating whether the browser is a beta version.</summary>
      <returns>true if the browser is a beta version; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.Browser">
      <summary>Gets the browser string (if any) that was sent by the browser in the User-Agent request header.</summary>
      <returns>The contents of the User-Agent request header sent by the browser.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider">
      <summary>Gets or sets the <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> object for the current browser.</summary>
      <returns>The <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> object for the current browser.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.Browsers">
      <summary>Gets an <see cref="T:System.Collections.ArrayList" /> of the browsers in the <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" /> dictionary.</summary>
      <returns>An <see cref="T:System.Collections.ArrayList" /> of the browsers in the <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" /> dictionary.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck">
      <summary>Gets a value indicating whether the browser supports decks that contain multiple forms, such as separate cards.</summary>
      <returns>true if the browser supports decks that contain multiple forms; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall">
      <summary>Gets a value indicating whether the browser device is capable of initiating a voice call.</summary>
      <returns>true if the browser device is capable of initiating a voice call; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement">
      <summary>Gets a value indicating whether the browser supports page content following WML &lt;select&gt; or &lt;input&gt; elements.</summary>
      <returns>true if the browser supports page content following HTML &lt;select&gt; or &lt;input&gt; elements; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects">
      <summary>Gets a value indicating whether the browser supports empty HTML &lt;select&gt; elements.</summary>
      <returns>true if the browser supports empty HTML &lt;select&gt; elements; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether">
      <summary>Gets a value indicating whether the browser supports WML INPUT and SELECT elements together on the same card.</summary>
      <returns>true if the browser supports WML &lt;input&gt; and &lt;select&gt; elements together; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects">
      <summary>Gets a value indicating whether the browser supports WML &lt;option&gt; elements that specify both onpick and value attributes.</summary>
      <returns>true if the browser supports WML &lt;option&gt; elements that specify both onpick and value attributes; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether">
      <summary>Gets a value indicating whether the browser supports WML &lt;onevent&gt; and &lt;prev&gt; elements that coexist within the same WML card.</summary>
      <returns>true if the browser supports WML &lt;onevent&gt; and &lt;prev&gt; elements that coexist within the same WML card; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards">
      <summary>Gets a value indicating whether the browser supports WML cards for postback.</summary>
      <returns>true if the browser supports WML cards for postback; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList">
      <summary>Gets a value indicating whether the browser supports WML &lt;setvar&gt; elements with a value attribute of 0.</summary>
      <returns>true if the browser supports WML &lt;setvar&gt; elements with a value attribute of 0; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.CanSendMail">
      <summary>Gets a value indicating whether the browser supports sending e-mail by using the HTML &lt;mailto&gt; element for displaying electronic addresses.</summary>
      <returns>true if the browser supports sending e-mail by using the HTML &lt;mailto&gt; element for displaying electronic addresses; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities">
      <summary>Used internally to get the defined capabilities of the browser.</summary>
      <returns>The defined capabilities of the browser.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.CDF">
      <summary>Gets a value indicating whether the browser supports Channel Definition Format (CDF) for webcasting.</summary>
      <returns>true if the browser supports CDF; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion">
      <summary>Gets the version of the .NET Framework that is installed on the client.</summary>
      <returns>The common language runtime <see cref="T:System.Version" />.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.Cookies">
      <summary>Gets a value indicating whether the browser supports cookies.</summary>
      <returns>true if the browser supports cookies; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.Crawler">
      <summary>Gets a value indicating whether the browser is a search engine Web crawler.</summary>
      <returns>true if the browser is a search engine; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter(System.IO.TextWriter)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to be used.</summary>
      <returns>A new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to be used.</returns>
      <param name="w">
        <see cref="T:System.IO.TextWriter" /> to be created.</param>
      <exception cref="T:System.Exception">The method failed to create an instance of <see cref="T:System.Web.UI.HtmlTextWriter" />.</exception>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit">
      <summary>Returns the maximum number of Submit buttons that are allowed for a form.</summary>
      <returns>The maximum number of Submit buttons that are allowed for a form.</returns>
    </member>
    <member name="M:System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey">
      <summary>Used internally to disable use of an optimized cache key.</summary>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion">
      <summary>Gets the version number of ECMAScript that the browser supports.</summary>
      <returns>The version number of ECMAScript that the browser supports.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.Frames">
      <summary>Gets a value indicating whether the browser supports HTML frames.</summary>
      <returns>true if the browser supports frames; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion">
      <summary>Gets the major version number of the wireless gateway used to access the server, if known. </summary>
      <returns>The major version number of the wireless gateway used to access the server, if known. The default is 0.</returns>
      <exception cref="T:System.Web.HttpUnhandledException">The major version number of the wireless gateway cannot be parsed.</exception>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion">
      <summary>Gets the minor version number of the wireless gateway used to access the server, if known. </summary>
      <returns>The minor version number of the wireless gateway used to access the server, if known. The default is 0.</returns>
      <exception cref="T:System.Web.HttpUnhandledException">The minor version number of the wireless gateway cannot be parsed.</exception>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion">
      <summary>Gets the version of the wireless gateway used to access the server, if known.</summary>
      <returns>The version number of the wireless gateway used to access the server, if known. The default is None.</returns>
    </member>
    <member name="M:System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions">
      <summary>Returns all versions of the .NET Framework common language runtime that are installed on the client.</summary>
      <returns>An array of <see cref="T:System.Version" /> objects.</returns>
    </member>
    <member name="M:System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities(System.String,System.Web.HttpRequest)">
      <summary>Used internally to return an instance of <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> representing the browser that generated the specified <see cref="T:System.Web.HttpRequest" />.</summary>
      <returns>An instance of <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> representing the browser that generated the specified <see cref="T:System.Web.HttpRequest" />.</returns>
      <param name="configKey">The name of the configuration section that configures browser capabilities.</param>
      <param name="request">The <see cref="T:System.Web.HttpRequest" /> generated by the browser for which to return capabilities and which is usually the current <see cref="T:System.Web.HttpRequest" />.</param>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.HasBackButton">
      <summary>Gets a value indicating whether the browser has a dedicated Back button.</summary>
      <returns>true if the browser has a dedicated Back button; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars">
      <summary>Gets a value indicating whether the scrollbar of an HTML &lt;select multiple&gt; element with an align attribute value of right is obscured upon rendering.</summary>
      <returns>true if the scrollbar of an HTML &lt;select multiple&gt; element with an align attribute value of right is obscured upon rendering; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter">
      <summary>Gets or sets the fully qualified class name of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to use.</summary>
      <returns>The fully qualified class name of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to use.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.Id">
      <summary>Gets the internal identifier of the browser as specified in the browser definition file.</summary>
      <returns>Internal identifier of the browser as specified in the browser definition file.</returns>
    </member>
    <member name="M:System.Web.Configuration.HttpCapabilitiesBase.Init">
      <summary>Used internally to initialize an internal set of values.</summary>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.InputType">
      <summary>Returns the type of input supported by browser.</summary>
      <returns>The type of input supported by browser. The default is telephoneKeypad.</returns>
    </member>
    <member name="M:System.Web.Configuration.HttpCapabilitiesBase.IsBrowser(System.String)">
      <summary>Gets a value indicating whether the client browser is the same as the specified browser.</summary>
      <returns>true if the client browser is the same as the specified browser; otherwise, false. The default is false.</returns>
      <param name="browserName">The specified browser.</param>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.IsColor">
      <summary>Gets a value indicating whether the browser has a color display.</summary>
      <returns>true if the browser has a color display; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice">
      <summary>Gets a value indicating whether the browser is a recognized mobile device.</summary>
      <returns>true if the browser is a recognized mobile device; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.Item(System.String)">
      <summary>Gets the value of the specified browser capability. In C#, this property is the indexer for the class.</summary>
      <returns>The browser capability with the specified key name.</returns>
      <param name="key">The name of the browser capability to retrieve.</param>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.JavaApplets">
      <summary>Gets a value indicating whether the browser supports Java.</summary>
      <returns>true if the browser supports Java; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.JavaScript">
      <summary>Gets a value indicating whether the browser supports JavaScript.</summary>
      <returns>true if the browser supports JavaScript; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion">
      <summary>Gets the Jscript version that the browser supports.</summary>
      <returns>The <see cref="T:System.Version" /> of Jscript that the browser supports.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion">
      <summary>Gets the major (integer) version number of the browser.</summary>
      <returns>The major version number of the browser.</returns>
      <exception cref="T:System.Exception">The major version value is not an integer.</exception>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength">
      <summary>Gets the maximum length in characters for the href attribute of an HTML &lt;a&gt; (anchor) element.</summary>
      <returns>The maximum length in characters for the href attribute of an HTML &lt;a&gt; (anchor) element.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize">
      <summary>Gets the maximum length of the page, in bytes, which the browser can display. </summary>
      <returns>The maximum length of the page, in bytes, which the browser can display. The default is 2000.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength">
      <summary>Returns the maximum length of the text that a soft-key label can display.</summary>
      <returns>The maximum length of the text that a soft-key label can display. The default is 5.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion">
      <summary>Gets the minor (that is, decimal) version number of the browser.</summary>
      <returns>The minor version number of the browser.</returns>
      <exception cref="T:System.Web.HttpUnhandledException">The minor version number in the header is not valid.</exception>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString">
      <summary>Gets the minor (decimal) version number of the browser as a string.</summary>
      <returns>The minor version number of the browser.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer">
      <summary>Returns the name of the manufacturer of a mobile device, if known.</summary>
      <returns>The name of the manufacturer of a mobile device, if known. The default is Unknown.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel">
      <summary>Gets the model name of a mobile device, if known.</summary>
      <returns>The model name of a mobile device, if known. The default is Unknown.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion">
      <summary>Gets the version of Microsoft HTML (MSHTML) Document Object Model (DOM) that the browser supports.</summary>
      <returns>The number of the MSHTML DOM version that the browser supports.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys">
      <summary>Returns the number of soft keys on a mobile device.</summary>
      <returns>The number of soft keys supported on a mobile device. The default is 0.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.Platform">
      <summary>Gets the name of the platform that the client uses, if it is known.</summary>
      <returns>The operating system that the client uses, if it is known, otherwise the value is set to Unknown.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime">
      <summary>Returns the MIME type of the type of image content typically preferred by the browser.</summary>
      <returns>The MIME type of the type of image content typically preferred by the browser. The default is image/gif.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime">
      <summary>Returns the MIME type of the type of content typically preferred by the browser.</summary>
      <returns>The MIME type of the type of content typically preferred by the browser. The default is text/html.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType">
      <summary>Gets the general name for the type of content that the browser prefers.</summary>
      <returns>html32 or chtml10. The default is html32.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding">
      <summary>Gets the request encoding preferred by the browser.</summary>
      <returns>The request encoding preferred by the browser.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding">
      <summary>Gets the response encoding preferred by the browser.</summary>
      <returns>The response encoding preferred by the browser.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput">
      <summary>Gets a value indicating whether the browser renders a line break before &lt;select&gt; or &lt;input&gt; elements.</summary>
      <returns>true if the browser renders a line break before &lt;select&gt; or &lt;input&gt; elements; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists">
      <summary>Gets a value indicating whether the browser renders a line break after list-item elements.</summary>
      <returns>true if the browser renders a line break after list-item elements; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor">
      <summary>Gets a value indicating whether the browser renders a line break after a stand-alone HTML &lt;a&gt; (anchor) element.</summary>
      <returns>true if the browser renders a line break after a stand-alone HTML &lt;a&gt; (anchor) element; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput">
      <summary>Gets a value indicating whether the browser renders a line break after an HTML &lt;input&gt; element.</summary>
      <returns>true if the browser renders a line break after an HTML &lt;input&gt; element; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline">
      <summary>Gets a value indicating whether the mobile-device browser renders a WML do-based form accept construct as an inline button rather than as a soft key.</summary>
      <returns>true if the mobile-device browser renders a WML do-based form-accept construct as an inline button; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards">
      <summary>Gets a value indicating whether the browser renders WML &lt;select&gt; elements as menu cards, rather than as a combo box.</summary>
      <returns>true if the browser renders WML &lt;select&gt; elements as menu cards; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue">
      <summary>Used internally to produce a meta-tag required by some browsers.</summary>
      <returns>A meta-tag required by some browsers.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution">
      <summary>Gets a value indicating whether the browser requires colons in element attribute values to be substituted with a different character.</summary>
      <returns>true if the browser requires colons in element attribute values to be substituted with a different character; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag">
      <summary>Gets a value indicating whether the browser requires an HTML &lt;meta&gt; element for which the content-type attribute is specified.</summary>
      <returns>true if the browser requires an HTML &lt;meta&gt; element for which the content-type attribute is specified; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession">
      <summary>Gets a value indicating whether the browser requires control state to be maintained in sessions.</summary>
      <returns>true if the browser requires control state to be maintained in sessions; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter">
      <summary>Gets a value indicating whether the browser requires a double-byte character set.</summary>
      <returns>true if the browser requires a double-byte character set; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting">
      <summary>Gets a value indicating whether the browser requires nonstandard error messages.</summary>
      <returns>true if the browser requires nonstandard error messages; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak">
      <summary>Gets a value indicating whether the browser requires the first element in the body of a Web page to be an HTML &lt;br&gt; element.</summary>
      <returns>true if the browser requires the first element in the body of a Web page to be an HTML BR element; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting">
      <summary>Gets a value indicating whether the browser does not support HTML &lt;br&gt; elements to format line breaks.</summary>
      <returns>true if the browser does not support HTML &lt;br&gt; elements; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization">
      <summary>Gets a value indicating whether the browser requires pages to contain a size-optimized form of markup language tags.</summary>
      <returns>true if the browser requires pages to contain a size-optimized form of markup language tags; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText">
      <summary>Gets a value indicating whether the browser supports phone dialing based on plain text, or whether it requires special markup.</summary>
      <returns>true if the browser supports phone dialing based on plain text only; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding">
      <summary>Gets a value indicating whether the browser requires VIEWSTATE values to be specially encoded.</summary>
      <returns>true if the browser requires VIEWSTATE values to be specially encoded; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix">
      <summary>Gets a value indicating whether the browser requires unique form-action URLs.</summary>
      <returns>true if the browser requires unique form-action URLs; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames">
      <summary>Gets a value indicating whether the browser requires unique name attribute values of multiple HTML &lt;input type="checkbox"&gt; elements.</summary>
      <returns>true if the browser requires unique name attribute values of multiple HTML &lt;input type="checkbox"&gt; elements; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames">
      <summary>Gets a value indicating whether the browser requires unique name attribute values of multiple HTML &lt;input&gt; elements.</summary>
      <returns>true if the browser requires unique name attribute values of multiple HTML &lt;input&gt; elements; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues">
      <summary>Gets a value indicating whether postback data sent by the browser will be UrlEncoded.</summary>
      <returns>true if postback data sent by the browser will be UrlEncoded; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth">
      <summary>Returns the depth of the display, in bits per pixel.</summary>
      <returns>The depth of the display, in bits per pixel. The default is 1.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight">
      <summary>Returns the approximate height of the display, in character lines.</summary>
      <returns>The approximate height of the display, in character lines. The default is 6.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth">
      <summary>Returns the approximate width of the display, in characters.</summary>
      <returns>The approximate width of the display, in characters. The default is 12.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight">
      <summary>Returns the approximate height of the display, in pixels.</summary>
      <returns>The approximate height of the display, in pixels. The default is 72.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth">
      <summary>Returns the approximate width of the display, in pixels.</summary>
      <returns>The approximate width of the display, in pixels. The default is 96.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute">
      <summary>Gets a value indicating whether the browser supports the ACCESSKEY attribute of HTML &lt;a&gt; (anchor) and &lt;input&gt; elements.</summary>
      <returns>true if the browser supports the accesskey attribute of HTML &lt;a&gt;  (anchor) and &lt;input&gt; elements; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor">
      <summary>Gets a value indicating whether the browser supports the bgcolor attribute of the HTML &lt;body&gt; element.</summary>
      <returns>true if the browser supports the bgcolor attribute of the HTML &lt;body&gt; element; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsBold">
      <summary>Gets a value indicating whether the browser supports HTML &lt;b&gt; elements to format bold text.</summary>
      <returns>true if the browser supports HTML &lt;b&gt;  elements to format bold text; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag">
      <summary>Gets a value indicating whether the browser supports the cache-control value for the http-equiv attribute of HTML &lt;meta&gt; elements.</summary>
      <returns>true if the browser supports the cache-control value for the http-equiv attribute of HTML &lt;meta&gt; elements; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback">
      <summary>Gets a value indicating whether the browser supports callback scripts.</summary>
      <returns>true if the browser supports callback scripts; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCss">
      <summary>Gets a value indicating whether the browser supports Cascading Style Sheets (CSS).</summary>
      <returns>true if the browser supports CSS; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign">
      <summary>Gets a value indicating whether the browser supports the align attribute of HTML &lt;div&gt; elements.</summary>
      <returns>true if the browser supports the align attribute of HTML &lt;div&gt; elements; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap">
      <summary>Gets a value indicating whether the browser supports the nowrap attribute of HTML &lt;div&gt; elements.</summary>
      <returns>true if the browser supports the nowrap attribute of HTML &lt;div&gt; elements; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue">
      <summary>Gets a value indicating whether the browser supports empty (null) strings in cookie values.</summary>
      <returns>true if the browser supports empty (null) strings in cookie values; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor">
      <summary>Gets a value indicating whether the browser supports the color attribute of HTML &lt;font&gt; elements.</summary>
      <returns>true if the browser supports the color attribute of HTML &lt;font&gt; elements; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName">
      <summary>Gets a value indicating whether the browser supports the name attribute of HTML &lt;font&gt; elements.</summary>
      <returns>true if the browser supports the name attribute of HTML &lt;font&gt; elements; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize">
      <summary>Gets a value indicating whether the browser supports the size attribute of HTML &lt;font&gt; elements.</summary>
      <returns>true if the browser supports the size attribute of HTML &lt;font&gt; elements; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit">
      <summary>Gets a value indicating whether the browser supports using a custom image in place of a standard form Submit button.</summary>
      <returns>true if the browser supports using a custom image in place of a standard form Submit button; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols">
      <summary>Gets a value indicating whether the browser supports i-mode symbols.</summary>
      <returns>true if the browser supports i-mode symbols; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle">
      <summary>Gets a value indicating whether the browser supports the istyle attribute of HTML &lt;input&gt; elements.</summary>
      <returns>true if the browser supports the istyle attribute of HTML &lt;input&gt; elements; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode">
      <summary>Gets a value indicating whether the browser supports the mode attribute of HTML &lt;input&gt; elements.</summary>
      <returns>true if the browser supports the mode attribute of HTML &lt;input&gt; elements; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic">
      <summary>Gets a value indicating whether the browser supports HTML &lt;i&gt; elements to format italic text.</summary>
      <returns>true if the browser supports HTML &lt;i&gt; elements to format italic text; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes">
      <summary>Gets a value indicating whether the browser supports J-Phone multimedia attributes.</summary>
      <returns>true if the browser supports J-Phone multimedia attributes; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols">
      <summary>Gets a value indicating whether the browser supports J-Phone–specific picture symbols.</summary>
      <returns>true if the browser supports J-Phone–specific picture symbols; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction">
      <summary>Gets a value indicating whether the browser supports a query string in the action attribute value of HTML &lt;form&gt; elements.</summary>
      <returns>true if the browser supports a query string in the action attribute value of HTML &lt;form&gt; elements; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie">
      <summary>Gets a value indicating whether the browser supports cookies on redirection.</summary>
      <returns>true if the browser supports cookies on redirection; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple">
      <summary>Gets a value indicating whether the browser supports the multiple attribute of HTML &lt;select&gt; elements.</summary>
      <returns>true if the browser supports the multiple attribute of HTML &lt;select&gt; elements; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck">
      <summary>Gets a value indicating whether the clearing of a checked HTML &lt;input type=checkbox&gt; element is reflected in postback data.</summary>
      <returns>true if the clearing of a checked HTML &lt;input type=checkbox&gt; element is reflected in postback data; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp">
      <summary>Gets a value indicating whether the browser supports receiving XML over HTTP.</summary>
      <returns>true if the browser supports receiving XML over HTTP; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)">
      <summary>Used internally to compare filters.</summary>
      <returns>1 if <paramref name="filter1" /> is a parent of <paramref name="filter2" />; -1 if <paramref name="filter2" /> is a parent of <paramref name="filter1" />; 0 if there is no parent-child relationship between <paramref name="filter1" /> and <paramref name="filter2" />.</returns>
      <param name="filter1">The first filter to compare.</param>
      <param name="filter2">The second filter to compare.</param>
    </member>
    <member name="M:System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)">
      <summary>Used internally to evaluate a filter.</summary>
      <returns>true if the filter was successfully evaluated; otherwise, false.</returns>
      <param name="filterName">The filter to evaluate.</param>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.Tables">
      <summary>Gets a value indicating whether the browser supports HTML &lt;table&gt; elements.</summary>
      <returns>true if the browser supports HTML &lt;table&gt; elements; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.TagWriter">
      <summary>Used internally to get the type of the object that is used to write tags for the browser.</summary>
      <returns>The <see cref="T:System.Type" /> of the object that is used to write tags for the browser.</returns>
      <exception cref="T:System.Web.HttpUnhandledException">There is a parse error.</exception>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.Type">
      <summary>Gets the name and major (integer) version number of the browser.</summary>
      <returns>The name and major version number of the browser.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey">
      <summary>Used internally to get a value indicating whether to use an optimized cache key.</summary>
      <returns>true to use an optimized cache key; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.VBScript">
      <summary>Gets a value indicating whether the browser supports Visual Basic Scripting edition (VBScript).</summary>
      <returns>true if the browser supports VBScript; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.Version">
      <summary>Gets the full version number (integer and decimal) of the browser as a string.</summary>
      <returns>The full version number of the browser as a string.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion">
      <summary>Gets the version of the World Wide Web Consortium (W3C) XML Document Object Model (DOM) that the browser supports.</summary>
      <returns>The number of the W3C XML DOM version number that the browser supports.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.Win16">
      <summary>Gets a value indicating whether the client is a Win16-based computer.</summary>
      <returns>true if the browser is running on a Win16-based computer; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.Win32">
      <summary>Gets a value indicating whether the client is a Win32-based computer.</summary>
      <returns>true if the client is a Win32-based computer; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.Web.Configuration.HttpCapabilitiesDefaultProvider">
      <summary>The default extension of the <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> class that is included with ASP.NET.</summary>
    </member>
    <member name="M:System.Web.Configuration.HttpCapabilitiesDefaultProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.HttpCapabilitiesDefaultProvider" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.HttpCapabilitiesDefaultProvider.#ctor(System.Web.Configuration.HttpCapabilitiesDefaultProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.HttpCapabilitiesDefaultProvider" /> class with the values of the specified instance.</summary>
      <param name="parent">The <see cref="T:System.Web.Configuration.HttpCapabilitiesDefaultProvider" /> instance to use for initializing a new instance.</param>
    </member>
    <member name="M:System.Web.Configuration.HttpCapabilitiesDefaultProvider.AddDependency(System.String)">
      <summary>Adds an HTTP request string to use to parse browser capability information.</summary>
      <param name="variable">The string to use to parse browser capability information.</param>
    </member>
    <member name="M:System.Web.Configuration.HttpCapabilitiesDefaultProvider.AddRuleList(System.Collections.ArrayList)">
      <summary>Adds a search string that modifies a browser definition.</summary>
      <param name="ruleList">The search string that modifies a browser definition.</param>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesDefaultProvider.CacheTime">
      <summary>Gets or sets the length of time in seconds to retain the <see cref="T:System.Web.HttpBrowserCapabilities" /> object in the cache.</summary>
      <returns>The length of time in seconds to retain the <see cref="T:System.Web.HttpBrowserCapabilities" /> object in the cache.</returns>
    </member>
    <member name="M:System.Web.Configuration.HttpCapabilitiesDefaultProvider.GetBrowserCapabilities(System.Web.HttpRequest)">
      <summary>Gets the <see cref="T:System.Web.HttpBrowserCapabilities" /> object for the specified <see cref="T:System.Web.HttpRequest" /> object.</summary>
      <returns>The <see cref="T:System.Web.HttpBrowserCapabilities" /> object for the <see cref="T:System.Web.HttpRequest" /> object that was passed in.</returns>
      <param name="request">The <see cref="T:System.Web.HttpRequest" /> object.</param>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesDefaultProvider.ResultType">
      <summary>Gets or sets the type of the class that is used to hold the results from parsing the browserCap element of the Web.config file.</summary>
      <returns>The type of the class that is used to hold the results from parsing the browserCaps element of the Web.config file.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesDefaultProvider.UserAgentCacheKeyLength">
      <summary>Gets or sets the number of characters from the user agent string to use for caching of the <see cref="T:System.Web.HttpBrowserCapabilities" /> object.</summary>
      <returns>The number of characters from the supplied user agent string to use for caching of the <see cref="T:System.Web.HttpBrowserCapabilities" /> object.</returns>
    </member>
    <member name="T:System.Web.Configuration.HttpCapabilitiesProvider">
      <summary>Enables you to customize browser definitions. You can also customize the algorithm that identifies the browser based on information in the incoming <see cref="T:System.Web.HttpRequest" />.</summary>
    </member>
    <member name="M:System.Web.Configuration.HttpCapabilitiesProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.HttpCapabilitiesProvider.GetBrowserCapabilities(System.Web.HttpRequest)">
      <summary>Gets the <see cref="T:System.Web.HttpBrowserCapabilities" /> object for the current browser.</summary>
      <returns>The <see cref="T:System.Web.HttpBrowserCapabilities" /> object for the current browser.</returns>
      <param name="request">The current <see cref="T:System.Web.HttpRequest" /> object.</param>
    </member>
    <member name="T:System.Web.Configuration.HttpCapabilitiesSectionHandler">
      <summary>Assists in reading in the &lt;browserCaps&gt; section of a configuration file and creating an instance of the <see cref="T:System.Web.HttpBrowserCapabilities" /> class that contains the capabilities information for the client browser.</summary>
    </member>
    <member name="M:System.Web.Configuration.HttpCapabilitiesSectionHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.HttpCapabilitiesSectionHandler" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.HttpCapabilitiesSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>Creates an instance of the <see cref="T:System.Web.HttpBrowserCapabilities" /> class that contains the capabilities information for the client browser.</summary>
      <returns>An instance of <see cref="T:System.Web.HttpBrowserCapabilities" /> that contains the capabilities information for the client browser.</returns>
      <param name="parent">The parent configuration node.</param>
      <param name="configurationContext">The configuration context of the current configuration file.</param>
      <param name="section">The section of the configuration file that contains the information.</param>
    </member>
    <member name="T:System.Web.Configuration.HttpConfigurationContext">
      <summary>Supplies current context information to configuration-section handlers in ASP.NET applications.</summary>
    </member>
    <member name="P:System.Web.Configuration.HttpConfigurationContext.VirtualPath">
      <summary>Gets the virtual path to the Web.config configuration file.</summary>
      <returns>The virtual path to the Web.config file. Null when evaluating Machine.config; an empty string ("") when evaluating the root Web.config file for the site.</returns>
    </member>
    <member name="T:System.Web.Configuration.HttpCookiesSection">
      <summary>Configures properties for cookies used by a Web application.</summary>
    </member>
    <member name="M:System.Web.Configuration.HttpCookiesSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.HttpCookiesSection" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.HttpCookiesSection.Domain">
      <summary>Gets or sets the cookie domain name.</summary>
      <returns>The cookie domain name. </returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCookiesSection.HttpOnlyCookies">
      <summary>Gets or sets a value indicating whether the support for the browser's HttpOnly cookie is enabled.</summary>
      <returns>true if support for the HttpOnly cookie is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCookiesSection.RequireSSL">
      <summary>Gets or sets a value indicating whether Secure Sockets Layer (SSL) communication is required.</summary>
      <returns>true if SSL is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.Web.Configuration.HttpHandlerAction">
      <summary>Configures an <see cref="T:System.Web.Configuration.HttpHandlersSection" /> configuration section. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.HttpHandlerAction.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.HttpHandlerAction" /> class using the passed parameters. </summary>
      <param name="path">The <see cref="T:System.Web.Configuration.HttpHandlerAction" /> URL path.</param>
      <param name="type">A comma-separated class/assembly combination consisting of version, culture, and public-key tokens.</param>
      <param name="verb">A comma-separated list of HTTP verbs (for example, "GET, PUT, POST").</param>
    </member>
    <member name="M:System.Web.Configuration.HttpHandlerAction.#ctor(System.String,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.HttpHandlerAction" /> class using the passed parameters.</summary>
      <param name="path">The <see cref="T:System.Web.Configuration.HttpHandlerAction" /> URL path.</param>
      <param name="type">A comma-separated class/assembly combination consisting of version, culture, and public-key tokens.</param>
      <param name="verb">A comma-separated list of HTTP verbs (for example, "GET, PUT, POST").</param>
      <param name="validate">true to allow validation; otherwise, false. If false, ASP.NET will not attempt to load the class until the actual matching request comes, potentially delaying the error but improving the startup time.</param>
    </member>
    <member name="P:System.Web.Configuration.HttpHandlerAction.Path">
      <summary>Gets or sets the <see cref="T:System.Web.Configuration.HttpHandlerAction" /> path. </summary>
      <returns>The <see cref="T:System.Web.Configuration.HttpHandlerAction" /> URL path. </returns>
    </member>
    <member name="P:System.Web.Configuration.HttpHandlerAction.Type">
      <summary>Gets or sets the <see cref="T:System.Web.Configuration.HttpHandlerAction" /> type.</summary>
      <returns>The <see cref="T:System.Web.Configuration.HttpHandlerAction" /> type.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpHandlerAction.Validate">
      <summary>Gets or sets the <see cref="T:System.Web.Configuration.HttpHandlerAction" /> validation.</summary>
      <returns>true if the validation is allowed; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpHandlerAction.Verb">
      <summary>Gets or sets the verb allowed by the <see cref="T:System.Web.Configuration.HttpHandlerAction" /> object.</summary>
      <returns>The verb allowed by the object.</returns>
    </member>
    <member name="T:System.Web.Configuration.HttpHandlerActionCollection">
      <summary>Represents a collection of <see cref="T:System.Web.Configuration.HttpHandlerAction" /> elements. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.HttpHandlerActionCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.HttpHandlerActionCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.HttpHandlerActionCollection.Add(System.Web.Configuration.HttpHandlerAction)">
      <summary>Adds an <see cref="T:System.Web.Configuration.HttpHandlerAction" /> object to the collection.</summary>
      <param name="httpHandlerAction">The <see cref="T:System.Web.Configuration.HttpHandlerAction" /> object to add to the collection. </param>
      <exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Web.Configuration.HttpHandlerAction" /> object to add already exists in the collection or the collection is read-only.</exception>
    </member>
    <member name="M:System.Web.Configuration.HttpHandlerActionCollection.Clear">
      <summary>Removes all <see cref="T:System.Web.Configuration.HttpHandlerAction" /> objects from the collection.</summary>
    </member>
    <member name="P:System.Web.Configuration.HttpHandlerActionCollection.CollectionType">
      <summary>Gets the type of <see cref="T:System.Web.Configuration.HttpHandlerActionCollection" />.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> of this collection.</returns>
    </member>
    <member name="M:System.Web.Configuration.HttpHandlerActionCollection.IndexOf(System.Web.Configuration.HttpHandlerAction)">
      <summary>Gets the collection index of the specified <see cref="T:System.Web.Configuration.HttpHandlerAction" /> object.</summary>
      <returns>The collection index value.</returns>
      <param name="action">The <see cref="T:System.Web.Configuration.HttpHandlerAction" /> object for which to get the collection index. </param>
    </member>
    <member name="P:System.Web.Configuration.HttpHandlerActionCollection.Item(System.Int32)">
      <summary>Gets or sets an item in this collection.</summary>
      <returns>The <see cref="T:System.Web.Configuration.HttpHandlerAction" /> object selected.</returns>
      <param name="index">The item index.</param>
    </member>
    <member name="M:System.Web.Configuration.HttpHandlerActionCollection.Remove(System.String,System.String)">
      <summary>Removes an <see cref="T:System.Web.Configuration.HttpHandlerAction" /> object with the specified <see cref="P:System.Web.Configuration.HttpHandlerAction.Verb" /> and <see cref="P:System.Web.Configuration.HttpHandlerAction.Path" /> properties from the collection.</summary>
      <param name="verb">The <see cref="P:System.Web.Configuration.HttpHandlerAction.Verb" /> property value that belongs to the handler to remove.</param>
      <param name="path">The <see cref="P:System.Web.Configuration.HttpHandlerAction.Path" /> property value that belongs to the handler to remove.</param>
      <exception cref="T:System.Configuration.ConfigurationException">There is no <see cref="T:System.Web.Configuration.HttpHandlerAction" /> object with the specified key in the collection, the element has already been removed, or the collection is read-only.</exception>
    </member>
    <member name="M:System.Web.Configuration.HttpHandlerActionCollection.Remove(System.Web.Configuration.HttpHandlerAction)">
      <summary>Removes an <see cref="T:System.Web.Configuration.HttpHandlerAction" /> object from the collection.</summary>
      <param name="action">The <see cref="T:System.Web.Configuration.HttpHandlerAction" /> object to remove. </param>
      <exception cref="T:System.Configuration.ConfigurationException">The passed <see cref="T:System.Web.Configuration.HttpHandlerAction" /> object does not exist in the collection, the element has already been removed, or the collection is read-only.</exception>
    </member>
    <member name="M:System.Web.Configuration.HttpHandlerActionCollection.RemoveAt(System.Int32)">
      <summary>Removes an <see cref="T:System.Web.Configuration.HttpHandlerAction" /> object at the specified index location from the collection.</summary>
      <param name="index">The collection index of the object to remove.</param>
      <exception cref="T:System.Configuration.ConfigurationException">There is no <see cref="T:System.Web.Configuration.HttpHandlerAction" /> object at the specified index in the collection, the element has already been removed, or the collection is read-only.</exception>
    </member>
    <member name="T:System.Web.Configuration.HttpHandlersSection">
      <summary>Configures an HTTP handler for a Web application. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.HttpHandlersSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.HttpHandlersSection" /> class. </summary>
    </member>
    <member name="P:System.Web.Configuration.HttpHandlersSection.Handlers">
      <summary>Gets the <see cref="T:System.Web.Configuration.HttpHandlerActionCollection" /> collection of <see cref="T:System.Web.Configuration.HttpHandlerAction" /> objects contained by the <see cref="T:System.Web.Configuration.HttpHandlersSection" /> object.</summary>
      <returns>An <see cref="T:System.Web.Configuration.HttpHandlerActionCollection" /> that contains the <see cref="T:System.Web.Configuration.HttpHandlerAction" /> objects, or handlers.</returns>
    </member>
    <member name="T:System.Web.Configuration.HttpModuleAction">
      <summary>Configures the <see cref="T:System.Web.Configuration.HttpModulesSection" /> modules. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.HttpModuleAction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.HttpModuleAction" /> class using the passed parameters.</summary>
      <param name="name">The module name.</param>
      <param name="type">A comma-separated list containing the module type name and the assembly information. </param>
    </member>
    <member name="P:System.Web.Configuration.HttpModuleAction.Name">
      <summary>Gets or sets the module name.</summary>
      <returns>The module name.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpModuleAction.Type">
      <summary>Gets or sets the module type.</summary>
      <returns>A comma-separated list containing the module type name and the assembly information. </returns>
    </member>
    <member name="T:System.Web.Configuration.HttpModuleActionCollection">
      <summary>Represents a collection of <see cref="T:System.Web.Configuration.HttpModuleAction" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.HttpModuleActionCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.HttpModuleActionCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.HttpModuleActionCollection.Add(System.Web.Configuration.HttpModuleAction)">
      <summary>Adds an <see cref="T:System.Web.Configuration.HttpModuleAction" /> object to the collection.</summary>
      <param name="httpModule">The <see cref="T:System.Web.Configuration.HttpModuleAction" /> module to add to the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationException">An attempt was made to add an <see cref="T:System.Web.Configuration.HttpModuleAction" /> object that already exists in the collection. </exception>
    </member>
    <member name="M:System.Web.Configuration.HttpModuleActionCollection.Clear">
      <summary>Removes all <see cref="T:System.Web.Configuration.HttpModuleAction" /> objects from the collection.</summary>
    </member>
    <member name="M:System.Web.Configuration.HttpModuleActionCollection.IndexOf(System.Web.Configuration.HttpModuleAction)">
      <summary>Gets the collection index of the specified <see cref="T:System.Web.Configuration.HttpModuleAction" /> module.</summary>
      <returns>The collection index value for the specified module.</returns>
      <param name="action">The <see cref="T:System.Web.Configuration.HttpModuleAction" /> module for which to get the collection index.</param>
    </member>
    <member name="P:System.Web.Configuration.HttpModuleActionCollection.Item(System.Int32)">
      <summary>Gets or sets an item in this collection.</summary>
      <returns>The item at the specified <paramref name="index" />.</returns>
      <param name="index">Module collection index.</param>
    </member>
    <member name="M:System.Web.Configuration.HttpModuleActionCollection.Remove(System.String)">
      <summary>Removes an <see cref="T:System.Web.Configuration.HttpModuleAction" /> object from the collection.</summary>
      <param name="name">The key that identifies the <see cref="T:System.Web.Configuration.HttpModuleAction" /> object to remove from the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationException">There is no <see cref="T:System.Web.Configuration.HttpModuleAction" /> object with the specified key in the collection, the element has already been removed, or the collection is read-only.</exception>
    </member>
    <member name="M:System.Web.Configuration.HttpModuleActionCollection.Remove(System.Web.Configuration.HttpModuleAction)">
      <summary>Removes an <see cref="T:System.Web.Configuration.HttpModuleAction" /> object from the collection.</summary>
      <param name="action">The <see cref="T:System.Web.Configuration.HttpModuleAction" /> module to remove.</param>
      <exception cref="T:System.Configuration.ConfigurationException">The passed <see cref="T:System.Web.Configuration.HttpModuleAction" /> object does not exist in the collection, the element has already been removed, or the collection is read-only.</exception>
    </member>
    <member name="M:System.Web.Configuration.HttpModuleActionCollection.RemoveAt(System.Int32)">
      <summary>Removes an <see cref="T:System.Web.Configuration.HttpModuleAction" /> module at the specified index from the collection.</summary>
      <param name="index">The index of the <see cref="T:System.Web.Configuration.HttpModuleAction" /> module to remove.</param>
      <exception cref="T:System.Configuration.ConfigurationException">There is no <see cref="T:System.Web.Configuration.HttpModuleAction" /> object at the specified index in the collection, the element has already been removed, or the collection is read-only.</exception>
    </member>
    <member name="T:System.Web.Configuration.HttpModulesSection">
      <summary>Configures an HTTP module for a Web application. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.HttpModulesSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.HttpModulesSection" /> class. </summary>
    </member>
    <member name="P:System.Web.Configuration.HttpModulesSection.Modules">
      <summary>Gets the <see cref="T:System.Web.Configuration.HttpModuleActionCollection" /> of <see cref="T:System.Web.Configuration.HttpModuleAction" /> modules contained by the <see cref="T:System.Web.Configuration.HttpModulesSection" />.</summary>
      <returns>A <see cref="T:System.Web.Configuration.HttpModuleActionCollection" /> that contains the <see cref="T:System.Web.Configuration.HttpModuleAction" /> objects, or modules, defined by the <see cref="T:System.Web.Configuration.HttpModulesSection" />. </returns>
    </member>
    <member name="T:System.Web.Configuration.HttpRuntimeSection">
      <summary>Configures the ASP.NET HTTP runtime. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.HttpRuntimeSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> class using default settings.</summary>
    </member>
    <member name="P:System.Web.Configuration.HttpRuntimeSection.ApartmentThreading">
      <summary>Gets or sets a value that indicates whether application apartment threading is enabled.</summary>
      <returns>true if application apartment threading is enabled; otherwise, false. </returns>
    </member>
    <member name="P:System.Web.Configuration.HttpRuntimeSection.AppRequestQueueLimit">
      <summary>Gets or sets a value that indicates the maximum number of requests that ASP.NET queues for the application.</summary>
      <returns>The maximum number of requests that can be queued.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpRuntimeSection.DelayNotificationTimeout">
      <summary>Gets or sets the change notification delay.</summary>
      <returns>The time, in seconds, that specifies the change notification delay.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpRuntimeSection.Enable">
      <summary>Gets or sets a value that indicates whether the application domain is enabled.</summary>
      <returns>true if the application domain is enabled; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpRuntimeSection.EnableHeaderChecking">
      <summary>Gets or sets a value that indicates whether the header checking is enabled.</summary>
      <returns>true if the header checking is enabled; otherwise, false. The default value is true. </returns>
    </member>
    <member name="P:System.Web.Configuration.HttpRuntimeSection.EnableKernelOutputCache">
      <summary>Gets or sets a value that indicates whether output caching is enabled.</summary>
      <returns>true if output caching is enabled; otherwise, false. The default value is true. </returns>
    </member>
    <member name="P:System.Web.Configuration.HttpRuntimeSection.EnableVersionHeader">
      <summary>Gets or sets a value that indicates whether ASP.NET should output a version header.</summary>
      <returns>true if the output of the version header is enabled; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpRuntimeSection.EncoderType">
      <summary>Gets or sets the name of a custom type that can be used to handle HTML and URL encoding. </summary>
      <returns>The name of a type that can be used to handle HTML and URL encoding. </returns>
    </member>
    <member name="P:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout">
      <summary>Gets or sets the allowed execution time for the request.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> value that indicates the allowed execution time for the request.</returns>
      <exception cref="T:System.Web.HttpException">The request execution time exceeded the limit set by the execution time-out.</exception>
    </member>
    <member name="P:System.Web.Configuration.HttpRuntimeSection.MaxQueryStringLength">
      <summary>Gets or sets the maximum possible length, in number of characters, of a query string in an HTTP request.</summary>
      <returns>The maximum length of the query string, in number of characters. The default is 2048. </returns>
    </member>
    <member name="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength">
      <summary>Gets or sets the maximum request size.</summary>
      <returns>The maximum request size in kilobytes. The default size is 4096 KB (4 MB).</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The selected value is less than <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold" />.</exception>
    </member>
    <member name="P:System.Web.Configuration.HttpRuntimeSection.MaxUrlLength">
      <summary>Gets or sets the maximum possible length, in number of characters, of the URL in an HTTP request.</summary>
      <returns>The length of the URL, in number of characters. The default is 260.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpRuntimeSection.MaxWaitChangeNotification">
      <summary>Gets or sets the time interval between the first change notification and the time at which the application domain is restarted.</summary>
      <returns>The maximum time interval, in seconds, from the first change notification and the time when the application domain is restarted.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads">
      <summary>Gets or sets the minimum number of threads that must be free before a request for resources in this configuration scope can be serviced.</summary>
      <returns>The minimum number of free threads in the common language runtime (CLR) thread pool before a request in this configuration scope will be serviced. The default value is 8.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpRuntimeSection.MinLocalRequestFreeThreads">
      <summary>Gets or sets the minimum number of free threads required to service a local request.</summary>
      <returns>The minimum number of free threads assigned to local requests. The default value is 4.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpRuntimeSection.RelaxedUrlToFileSystemMapping">
      <summary>Gets or sets a value that indicates whether the URL in an HTTP request is required to be a valid Windows file path.</summary>
      <returns>true if the URL does not have to comply with Windows path rules; otherwise false. The default is false. </returns>
    </member>
    <member name="P:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold">
      <summary>Gets or sets the input-stream buffering threshold.</summary>
      <returns>The number of bytes that indicate the input-stream buffering threshold. The default is 256 bytes.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The selected value is greater than <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" />.</exception>
    </member>
    <member name="P:System.Web.Configuration.HttpRuntimeSection.RequestPathInvalidCharacters">
      <summary>Gets or sets a list of characters that are specified as invalid in a path that is part of an HTTP request.</summary>
      <returns>A comma-separated list of invalid characters. The following list contains the default set of invalid characters: &lt;,&gt;,*,%,&amp;,:,\\</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpRuntimeSection.RequestValidationMode">
      <summary>Gets or sets a version number that indicates which ASP.NET version-specific approach to validation will be used.</summary>
      <returns>A value that indicates which ASP.NET version-specific approach to validation will be used. The default is 4.0. </returns>
    </member>
    <member name="P:System.Web.Configuration.HttpRuntimeSection.RequestValidationType">
      <summary>Gets or sets the name of a type that is used to validate HTTP requests.</summary>
      <returns>The name of a type that handles request validation tasks. The default is the fully qualified name of the <see cref="T:System.Web.Util.RequestValidator" /> type that ASP.NET uses for validation.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath">
      <summary>Gets or sets a value that indicates whether the file name must be a fully qualified physical file path.</summary>
      <returns>true if the file name must be a fully qualified physical file path; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader">
      <summary>Gets or sets a value that indicates whether the cache-control:private header is sent as part of the HTTP response.</summary>
      <returns>true if the cache-control:private header is to be sent; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpRuntimeSection.ShutdownTimeout">
      <summary>Gets or sets the length of time the application is allowed to idle before it is terminated.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> value that indicates the length of time the application is allowed to idle before it is terminated.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpRuntimeSection.UseFullyQualifiedRedirectUrl">
      <summary>Gets or sets a value that indicates whether the client-side redirects are fully qualified.</summary>
      <returns>true if client-side redirects are fully qualified; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.HttpRuntimeSection.WaitChangeNotification">
      <summary>Gets or sets the waiting time before the next change notification.</summary>
      <returns>The waiting time, in seconds, before the next change notification that triggers an application domain to restart. The default value is 0.</returns>
    </member>
    <member name="T:System.Web.Configuration.IConfigMapPath">
      <summary>Provides access to the mapping between configuration-file virtual and physical paths. </summary>
    </member>
    <member name="M:System.Web.Configuration.IConfigMapPath.GetAppPathForPath(System.String,System.String)">
      <summary>Gets the virtual-directory name associated with a specific site.</summary>
      <returns>The <paramref name="siteID" /> must be unique. No two sites share the same id. The <paramref name="siteID" /> distinguishes sites that have the same name.</returns>
      <param name="siteID">A unique identifier for the site.</param>
      <param name="path">The URL associated with the site.</param>
    </member>
    <member name="M:System.Web.Configuration.IConfigMapPath.GetDefaultSiteNameAndID(System.String@,System.String@)">
      <summary>Populates the default site name and the site ID.</summary>
      <param name="siteName">The default site name.</param>
      <param name="siteID">A unique identifier for the site.</param>
    </member>
    <member name="M:System.Web.Configuration.IConfigMapPath.GetMachineConfigFilename">
      <summary>Gets the machine-configuration file name.</summary>
      <returns>The machine-configuration file name.</returns>
    </member>
    <member name="M:System.Web.Configuration.IConfigMapPath.GetPathConfigFilename(System.String,System.String,System.String@,System.String@)">
      <summary>Populates the directory and name of the configuration file based on the site ID and site path.</summary>
      <param name="siteID">A unique identifier for the site.</param>
      <param name="path">The URL associated with the site.</param>
      <param name="directory">The physical directory of the configuration path.</param>
      <param name="baseName">The name of the configuration file.</param>
    </member>
    <member name="M:System.Web.Configuration.IConfigMapPath.GetRootWebConfigFilename">
      <summary>Gets the name of the configuration file at the Web root.</summary>
      <returns>The name of the configuration file at the Web root.</returns>
    </member>
    <member name="M:System.Web.Configuration.IConfigMapPath.MapPath(System.String,System.String)">
      <summary>Gets the physical directory path based on the site ID and URL associated with the site.</summary>
      <returns>The physical directory path.</returns>
      <param name="siteID">A unique identifier for the site.</param>
      <param name="path">The URL associated with the site.</param>
    </member>
    <member name="M:System.Web.Configuration.IConfigMapPath.ResolveSiteArgument(System.String,System.String@,System.String@)">
      <summary>Populates the site name and site ID based on a site argument value.</summary>
      <param name="siteArgument">The site name or site identifier.</param>
      <param name="siteName">The default site name.</param>
      <param name="siteID">A unique identifier for the site.</param>
    </member>
    <member name="T:System.Web.Configuration.IConfigMapPathFactory">
      <summary>Maps the configuration file virtual and physical paths.</summary>
    </member>
    <member name="M:System.Web.Configuration.IConfigMapPathFactory.Create(System.String,System.String)">
      <summary>Creates the interface for the mapping between configuration-file virtual and physical paths. </summary>
      <returns>The <see cref="T:System.Web.Configuration.IConfigMapPath" /> object associated with the specified configuration-file path mapping.</returns>
      <param name="virtualPath">The configuration-file virtual path.</param>
      <param name="physicalPath">The configuration-file physical path.</param>
    </member>
    <member name="T:System.Web.Configuration.IdentitySection">
      <summary>Configures the identity of a Web application. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.IdentitySection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.IdentitySection" /> class using default parameters.</summary>
    </member>
    <member name="P:System.Web.Configuration.IdentitySection.Impersonate">
      <summary>Gets or sets a value indicating whether client impersonation is used on each request.</summary>
      <returns>true if client impersonation is used; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.IdentitySection.Password">
      <summary>Gets or sets a value indicating the password to use for impersonation. </summary>
      <returns>The password to use for impersonation. </returns>
    </member>
    <member name="P:System.Web.Configuration.IdentitySection.UserName">
      <summary>Gets or sets a value indicating the user name to use for impersonation.</summary>
      <returns>The user name to use for impersonation. </returns>
    </member>
    <member name="T:System.Web.Configuration.IgnoreDeviceFilterElement">
      <summary>Configures a device filter element. </summary>
    </member>
    <member name="M:System.Web.Configuration.IgnoreDeviceFilterElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.IgnoreDeviceFilterElement" /> class.</summary>
      <param name="name">The name of the element to ignore.</param>
    </member>
    <member name="P:System.Web.Configuration.IgnoreDeviceFilterElement.Name">
      <summary>Gets the name of the element to ignore.</summary>
      <returns>The name of the element to ignore.</returns>
    </member>
    <member name="T:System.Web.Configuration.IgnoreDeviceFilterElementCollection">
      <summary>Represents a collection of <see cref="T:System.Web.Configuration.IgnoreDeviceFilterElement" /> objects. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Web.Configuration.IgnoreDeviceFilterElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.IgnoreDeviceFilterElementCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.IgnoreDeviceFilterElementCollection.Add(System.Web.Configuration.IgnoreDeviceFilterElement)">
      <summary>Adds a <see cref="T:System.Web.Configuration.IgnoreDeviceFilterElement" /> object to the collection.</summary>
      <param name="deviceFilter">The object to add to the collection.</param>
    </member>
    <member name="M:System.Web.Configuration.IgnoreDeviceFilterElementCollection.Clear">
      <summary>Removes all the <see cref="T:System.Web.Configuration.IgnoreDeviceFilterElement" /> objects from the collection.</summary>
    </member>
    <member name="P:System.Web.Configuration.IgnoreDeviceFilterElementCollection.CollectionType">
      <summary>Gets the <see cref="T:System.Web.Configuration.IgnoreDeviceFilterElementCollection" /> type.</summary>
      <returns>The type of the collection.</returns>
    </member>
    <member name="P:System.Web.Configuration.IgnoreDeviceFilterElementCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Web.Configuration.IgnoreDeviceFilterElement" /> object from the collection at the specified index.</summary>
      <returns>The specified filter object.</returns>
      <param name="index">The index of the filter object to get.</param>
    </member>
    <member name="P:System.Web.Configuration.IgnoreDeviceFilterElementCollection.Item(System.String)">
      <summary>Gets the specified <see cref="T:System.Web.Configuration.IgnoreDeviceFilterElement" /> object from the collection by using its name.</summary>
      <returns>The specified filter object.</returns>
      <param name="name">The name of the filter object to get. </param>
    </member>
    <member name="M:System.Web.Configuration.IgnoreDeviceFilterElementCollection.Remove(System.String)">
      <summary>Removes the specified <see cref="T:System.Web.Configuration.IgnoreDeviceFilterElement" /> object from the collection, by using its name.</summary>
      <param name="name">The name of the object to remove.</param>
    </member>
    <member name="M:System.Web.Configuration.IgnoreDeviceFilterElementCollection.Remove(System.Web.Configuration.IgnoreDeviceFilterElement)">
      <summary>Removes the specified <see cref="T:System.Web.Configuration.IgnoreDeviceFilterElement" /> object from the collection.</summary>
      <param name="deviceFilter">The object to remove. </param>
    </member>
    <member name="M:System.Web.Configuration.IgnoreDeviceFilterElementCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Web.Configuration.IgnoreDeviceFilterElement" /> object from the collection at the specified index.</summary>
      <param name="index">The index of the object to remove.</param>
    </member>
    <member name="T:System.Web.Configuration.IRemoteWebConfigurationHostServer">
      <summary>Used internally to support remote access to configuration data.</summary>
    </member>
    <member name="M:System.Web.Configuration.IRemoteWebConfigurationHostServer.DoEncryptOrDecrypt(System.Boolean,System.String,System.String,System.String,System.String[],System.String[])">
      <summary>Conditionally encrypts or decrypts the value of the string referenced by the <paramref name="xmlString" /> parameter.</summary>
      <returns>A string containing either the encrypted or decrypted value of the <paramref name="xmlString" />.</returns>
      <param name="doEncrypt">True to encrypt; false to decrypt.</param>
      <param name="xmlString">The XML to be encrypted or decrypted.</param>
      <param name="protectionProviderName">The provider used to protect the configuration data. </param>
      <param name="protectionProviderType">The <see cref="T:System.Type" /> of the protection provider.</param>
      <param name="parameterKeys">The keys of optional parameters for the protection provider.</param>
      <param name="parameterValues">The values of optional parameters for the protection provider.</param>
    </member>
    <member name="M:System.Web.Configuration.IRemoteWebConfigurationHostServer.GetData(System.String,System.Boolean,System.Int64@)">
      <summary>Used internally to support remote access to configuration data.</summary>
      <returns>An array of 8-bit unsigned integers (bytes) containing the configuration data.</returns>
      <param name="fileName">Path to the remote configuration file to be accessed.</param>
      <param name="getReadTimeOnly">A Boolean value specifying whether only the <paramref name="readTime" /> is returned.</param>
      <param name="readTime">Time the file was last accessed.</param>
    </member>
    <member name="M:System.Web.Configuration.IRemoteWebConfigurationHostServer.GetFileDetails(System.String,System.Boolean@,System.Int64@,System.Int64@,System.Int64@)">
      <summary>Gets the details of the configuration file.</summary>
      <param name="name">The name of the file.</param>
      <param name="exists">true if the file exists; otherwise, false.</param>
      <param name="size">The size of the file.</param>
      <param name="createDate">The date the file was created.</param>
      <param name="lastWriteDate">The date the file was last written.</param>
    </member>
    <member name="M:System.Web.Configuration.IRemoteWebConfigurationHostServer.GetFilePaths(System.Int32,System.String,System.String,System.String)">
      <summary>Used internally to support remote access to configuration data.</summary>
      <returns>A concatenated string representing the file path of the configuration file.</returns>
      <param name="webLevel">The level of the configuration file.</param>
      <param name="path">Path to the remote configuration file to be accessed.</param>
      <param name="site">Path to the remote machine.</param>
      <param name="locationSubPath">The subpath of the location of the configuration file.</param>
    </member>
    <member name="M:System.Web.Configuration.IRemoteWebConfigurationHostServer.WriteData(System.String,System.String,System.Byte[],System.Int64@)">
      <summary>Used internally to support remote access to configuration data.</summary>
      <param name="fileName">Path to the remote configuration file to be accessed.</param>
      <param name="templateFileName">File to duplicate file attributes from.</param>
      <param name="data">Data to be written.</param>
      <param name="readTime">Time the file was last accessed.</param>
    </member>
    <member name="T:System.Web.Configuration.LowerCaseStringConverter">
      <summary>Provides support to convert an object to a lowercase string. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.LowerCaseStringConverter.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Web.Configuration.LowerCaseStringConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.LowerCaseStringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an object can be converted to a lowercase string based on the specified parameters.</summary>
      <returns>true if the parameters describe an object that can be converted to a lowercase string object; otherwise, false.</returns>
      <param name="ctx">An object that implements the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> interface.</param>
      <param name="type">The type of object to convert.</param>
    </member>
    <member name="M:System.Web.Configuration.LowerCaseStringConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an object can be converted to a lowercase string based on the specified parameters.</summary>
      <returns>true if the parameters describe an object that can be converted to a lowercase string object; otherwise, false.</returns>
      <param name="ctx">An object that implements the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> interface.</param>
      <param name="type">The type of object to convert.</param>
    </member>
    <member name="M:System.Web.Configuration.LowerCaseStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts an object from its original value to a lowercase string based on the specified parameters.</summary>
      <returns>A lowercase string object.</returns>
      <param name="ctx">An object that implements the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> interface.</param>
      <param name="ci">An object that implements the <see cref="T:System.Globalization.CultureInfo" /> class.</param>
      <param name="data">The object to convert.</param>
    </member>
    <member name="M:System.Web.Configuration.LowerCaseStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts an object to a lowercase string based on the specified parameters.</summary>
      <returns>A lowercase string object.</returns>
      <param name="ctx">An object that implements the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> interface.</param>
      <param name="ci">An object that implements the <see cref="T:System.Globalization.CultureInfo" /> class.</param>
      <param name="value">The object to convert.</param>
      <param name="type">The type of object to convert.</param>
    </member>
    <member name="T:System.Web.Configuration.MachineKeyCompatibilityMode">
      <summary>Specifies whether stronger encryption methods introduced in .NET Framework version 2.0 Service Pack 2 can be used.</summary>
    </member>
    <member name="F:System.Web.Configuration.MachineKeyCompatibilityMode.Framework20SP1">
      <summary>Use the encryption methods that were implemented in .NET Framework versions earlier than version 2.0 Service Pack 2.</summary>
    </member>
    <member name="F:System.Web.Configuration.MachineKeyCompatibilityMode.Framework20SP2">
      <summary>Use the encryption methods implemented in .NET Framework version 2.0 </summary>
    </member>
    <member name="T:System.Web.Configuration.MachineKeySection">
      <summary>Defines the configuration settings that control the key generation and algorithms that are used in encryption, decryption, and media access control (MAC) operations in Windows Forms authentication, view-state validation, and session-state application isolation. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.MachineKeySection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.MachineKeySection" /> class by using default settings.</summary>
    </member>
    <member name="P:System.Web.Configuration.MachineKeySection.CompatibilityMode">
      <summary>Gets or sets a value that specifies whether upgraded encryption methods for view state that were introduced in the .NET Framework version 2.0 Service Pack 2 release are used.</summary>
      <returns>A value that indicates whether encryption methods that were introduced in the .NET Framework 2.0 SP2 are used.</returns>
    </member>
    <member name="P:System.Web.Configuration.MachineKeySection.Decryption">
      <summary>Specifies the type of hashing algorithm that is used for decrypting data. </summary>
      <returns>A value that indicates the type of algorithm used to decrypt data. Auto is the default.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The selected value is not one of the decryption values.</exception>
    </member>
    <member name="P:System.Web.Configuration.MachineKeySection.DecryptionKey">
      <summary>Gets or sets the key that is used to encrypt and decrypt data, or the process by which the key is generated. </summary>
      <returns>An encryption key value, or a value that indicates how the key is generated. The default is "AutoGenerate,IsolateApps".</returns>
    </member>
    <member name="P:System.Web.Configuration.MachineKeySection.Validation">
      <summary>Specifies the type of hashing algorithm that is used for validating data. </summary>
      <returns>A value that indicates the type of encryption that is used to validate data.</returns>
    </member>
    <member name="P:System.Web.Configuration.MachineKeySection.ValidationAlgorithm">
      <summary>Gets or sets the custom algorithm that is used to validate encrypted data.</summary>
      <returns>A string that contains the name of a predefined algorithm or the actual text of a custom algorithm. The predefined algorithms are the values that can be assigned to the <see cref="P:System.Web.Configuration.MachineKeySection.Validation" /> property. The default is "HMACSHA256", which is the algorithm name that is assigned to the validation attribute of the machineKey element in the configuration file.</returns>
    </member>
    <member name="P:System.Web.Configuration.MachineKeySection.ValidationKey">
      <summary>Gets or sets the key that is used to validate encrypted data, or the process by which the key is generated. </summary>
      <returns>An encryption key value, or a value that indicates how the key is generated. The default is "AutoGenerate,IsolateApps".</returns>
    </member>
    <member name="T:System.Web.Configuration.MachineKeyValidation">
      <summary>Specifies the type of encryption process that is used for validation and encryption of data. </summary>
    </member>
    <member name="F:System.Web.Configuration.MachineKeyValidation.MD5">
      <summary>Specifies that ASP.NET uses the Message Digest 5 (MD5) hash algorithm. This algorithm performs better than SHA1.</summary>
    </member>
    <member name="F:System.Web.Configuration.MachineKeyValidation.SHA1">
      <summary>Specifies that ASP.NET uses the SHA1 hash algorithm.</summary>
    </member>
    <member name="F:System.Web.Configuration.MachineKeyValidation.TripleDES">
      <summary>Specifies that ASP.NET uses TripleDES (3DES) encryption. TripleDES uses three successive iterations of the DES algorithm.</summary>
    </member>
    <member name="F:System.Web.Configuration.MachineKeyValidation.AES">
      <summary>Specifies that ASP.NET uses AES (Rijndael) encryption.</summary>
    </member>
    <member name="F:System.Web.Configuration.MachineKeyValidation.HMACSHA256">
      <summary>Specifies that ASP.NET uses HMACSHA256, which uses the SHA256 hash function to output a 256-bit hash value. This is the default value.</summary>
    </member>
    <member name="F:System.Web.Configuration.MachineKeyValidation.HMACSHA384">
      <summary>Specifies that ASP.NET uses HMACSHA384, which uses the SHA384 hash function to output a 384-bit hash value.</summary>
    </member>
    <member name="F:System.Web.Configuration.MachineKeyValidation.HMACSHA512">
      <summary>Specifies that ASP.NET uses HMACSHA512, which uses the SHA512 hash function to output a 512-bit hash value.</summary>
    </member>
    <member name="F:System.Web.Configuration.MachineKeyValidation.Custom">
      <summary>Specifies that ASP.NET uses a custom algorithm in the format "alg:algorithm_name", where the hashing algorithm can be any implementation that derives from <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" />. </summary>
    </member>
    <member name="T:System.Web.Configuration.MachineKeyValidationConverter">
      <summary>Provides methods for converting <see cref="T:System.Web.Configuration.MachineKeyValidation" /> objects to and from strings.</summary>
    </member>
    <member name="M:System.Web.Configuration.MachineKeyValidationConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.MachineKeyValidationConverter" /> class. </summary>
    </member>
    <member name="M:System.Web.Configuration.MachineKeyValidationConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts a string to the equivalent <see cref="T:System.Web.Configuration.MachineKeyValidation" /> value.</summary>
      <returns>The equivalent <see cref="T:System.Web.Configuration.MachineKeyValidation" /> value.</returns>
      <param name="ctx">This parameter is not used.</param>
      <param name="ci">This parameter is not used.</param>
      <param name="data">The string to convert.</param>
      <exception cref="T:System.ArgumentException">The data is not one of the expected strings.</exception>
    </member>
    <member name="M:System.Web.Configuration.MachineKeyValidationConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts a <see cref="T:System.Web.Configuration.MachineKeyValidation" /> value to the string representation of that value.</summary>
      <returns>A string representing a <see cref="T:System.Web.Configuration.MachineKeyValidation" /> value.</returns>
      <param name="ctx">This parameter is not used.</param>
      <param name="ci">This parameter is not used.</param>
      <param name="value">The <see cref="T:System.Web.Configuration.MachineKeyValidation" /> to be converted.</param>
      <param name="type">This parameter is not used.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="value" /> parameter is not one of the expected enumerated values.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="value" /> parameter is not a <see cref="T:System.Web.Configuration.MachineKeyValidation" /> object.</exception>
    </member>
    <member name="T:System.Web.Configuration.MembershipSection">
      <summary>Defines configuration settings to support the infrastructure for configuring and managing membership details. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.MembershipSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.MembershipSection" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.MembershipSection.DefaultProvider">
      <summary>Gets or sets the name of the default provider that is used to manage roles. </summary>
      <returns>The name of a provider in <see cref="P:System.Web.Configuration.MembershipSection.Providers" />. The default is AspNetSqlRoleProvider.</returns>
    </member>
    <member name="P:System.Web.Configuration.MembershipSection.HashAlgorithmType">
      <summary>Gets or sets the type of encryption that is used for sensitive membership information.</summary>
      <returns>The type of encryption used to encrypt sensitive membership information.</returns>
    </member>
    <member name="P:System.Web.Configuration.MembershipSection.Providers">
      <summary>Gets a <see cref="T:System.Configuration.ProviderSettingsCollection" /> object of <see cref="T:System.Configuration.ProviderSettings" /> objects.</summary>
      <returns>A <see cref="T:System.Configuration.ProviderSettingsCollection" /> that contains the provider's settings, defined within the providers subsection of the membership section of the configuration file.</returns>
    </member>
    <member name="P:System.Web.Configuration.MembershipSection.UserIsOnlineTimeWindow">
      <summary>Gets or sets the length of time, in minutes, before a user is no longer considered to be online.</summary>
      <returns>A length of time in minutes.</returns>
    </member>
    <member name="T:System.Web.Configuration.NamespaceCollection">
      <summary>Contains a collection of namespace objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.NamespaceCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.NamespaceCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.NamespaceCollection.Add(System.Web.Configuration.NamespaceInfo)">
      <summary>Adds a <see cref="T:System.Web.Configuration.NamespaceInfo" /> object to the collection.</summary>
      <param name="namespaceInformation">A <see cref="T:System.Web.Configuration.NamespaceInfo" /> object to add to the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Web.Configuration.NamespaceInfo" /> object to add already exists in the collection or the collection is read-only.</exception>
    </member>
    <member name="P:System.Web.Configuration.NamespaceCollection.AutoImportVBNamespace">
      <summary>Gets or sets a value that determines whether the Visual Basic namespace is imported without having to specify it.</summary>
      <returns>true if the Visual Basic namespace is imported automatically; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:System.Web.Configuration.NamespaceCollection.Clear">
      <summary>Removes all <see cref="T:System.Web.Configuration.NamespaceInfo" /> objects from the collection.</summary>
    </member>
    <member name="P:System.Web.Configuration.NamespaceCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Web.Configuration.NamespaceInfo" /> object at the specified index in the collection.</summary>
      <returns>
        <see cref="T:System.Web.Configuration.NamespaceInfo" /> object at the specified index, or null if there is no object at that index.</returns>
      <param name="index">The index of a <see cref="T:System.Web.Configuration.NamespaceInfo" /> object in the collection.</param>
    </member>
    <member name="M:System.Web.Configuration.NamespaceCollection.Remove(System.String)">
      <summary>Removes the <see cref="T:System.Web.Configuration.NamespaceInfo" /> object with the specified key from the collection.</summary>
      <param name="s">The namespace of a <see cref="T:System.Web.Configuration.NamespaceInfo" /> object to remove from the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationException">There is no <see cref="T:System.Web.Configuration.NamespaceInfo" /> object with the specified key in the collection.- or -The element has already been removed.- or -The collection is read-only.</exception>
    </member>
    <member name="M:System.Web.Configuration.NamespaceCollection.RemoveAt(System.Int32)">
      <summary>Removes a <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object from the specified index in the collection.</summary>
      <param name="index">The index of a <see cref="T:System.Web.Configuration.NamespaceInfo" /> object to remove from the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationException">There is no <see cref="T:System.Web.Configuration.NamespaceInfo" /> object at the specified index in the collection.- or -The element has already been removed.- or -The collection is read-only.</exception>
    </member>
    <member name="T:System.Web.Configuration.NamespaceInfo">
      <summary>Contains a single configuration namespace reference, similar to the Import directive. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.NamespaceInfo.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.NamespaceInfo" /> class with the specified namespace reference.</summary>
      <param name="name">A namespace reference for the new <see cref="T:System.Web.Configuration.NamespaceInfo" /> object.</param>
    </member>
    <member name="M:System.Web.Configuration.NamespaceInfo.Equals(System.Object)">
      <summary>Compares the current instance to the passed <see cref="T:System.Web.Configuration.NamespaceInfo" /> object.</summary>
      <returns>true if the two objects are identical. </returns>
      <param name="namespaceInformation">A <see cref="T:System.Web.Configuration.NamespaceInfo" /> object to compare to.</param>
    </member>
    <member name="M:System.Web.Configuration.NamespaceInfo.GetHashCode">
      <summary>Returns a hash value for the current instance.</summary>
      <returns>A hash value for the current instance.</returns>
    </member>
    <member name="P:System.Web.Configuration.NamespaceInfo.Namespace">
      <summary>Gets or sets the namespace reference.</summary>
      <returns>A string that specifies the name of the namespace.</returns>
    </member>
    <member name="T:System.Web.Configuration.OutputCacheProfile">
      <summary>Configures the output cache profile that can be used by the application pages. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.OutputCacheProfile.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.OutputCacheProfile" /> class.</summary>
      <param name="name">The name value to use.</param>
    </member>
    <member name="P:System.Web.Configuration.OutputCacheProfile.Duration">
      <summary>Gets or sets the time duration during which the page or control is cached.</summary>
      <returns>The time duration in seconds.</returns>
    </member>
    <member name="P:System.Web.Configuration.OutputCacheProfile.Enabled">
      <summary>Gets or sets a value indicating whether caching is enabled.</summary>
      <returns>true if caching is enabled; otherwise, false. The default value is false. </returns>
    </member>
    <member name="P:System.Web.Configuration.OutputCacheProfile.Location">
      <summary>Gets or sets the output cache location.</summary>
      <returns>One of the <see cref="T:System.Web.UI.OutputCacheLocation" /> enumeration values. The default is Any.</returns>
    </member>
    <member name="P:System.Web.Configuration.OutputCacheProfile.Name">
      <summary>Gets or sets the <see cref="T:System.Web.Configuration.OutputCacheProfile" /> name.</summary>
      <returns>The <see cref="T:System.Web.Configuration.OutputCacheProfile" /> name.</returns>
    </member>
    <member name="P:System.Web.Configuration.OutputCacheProfile.NoStore">
      <summary>Gets or sets a value indicating whether secondary storage is enabled. </summary>
      <returns>true if secondary storage is enabled; otherwise, false. The default value is false. </returns>
    </member>
    <member name="P:System.Web.Configuration.OutputCacheProfile.SqlDependency">
      <summary>Gets or sets the <see cref="P:System.Web.Configuration.OutputCacheProfile.SqlDependency" /> property. </summary>
      <returns>The <see cref="P:System.Web.Configuration.OutputCacheProfile.SqlDependency" /> value.</returns>
    </member>
    <member name="P:System.Web.Configuration.OutputCacheProfile.VaryByContentEncoding">
      <summary>Gets or sets the semicolon-delimited set of content encodings to be cached.</summary>
      <returns>The list of content encodings.</returns>
    </member>
    <member name="P:System.Web.Configuration.OutputCacheProfile.VaryByControl">
      <summary>Gets or sets the <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByControl" /> property.</summary>
      <returns>The <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByControl" /> value.</returns>
    </member>
    <member name="P:System.Web.Configuration.OutputCacheProfile.VaryByCustom">
      <summary>Gets or sets the <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByCustom" /> property.</summary>
      <returns>The <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByCustom" /> value.</returns>
    </member>
    <member name="P:System.Web.Configuration.OutputCacheProfile.VaryByHeader">
      <summary>Gets or sets the <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByHeader" /> property.</summary>
      <returns>The <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByHeader" /> value.</returns>
    </member>
    <member name="P:System.Web.Configuration.OutputCacheProfile.VaryByParam">
      <summary>Gets or sets the <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByParam" /> property.</summary>
      <returns>The <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByParam" /> value.</returns>
    </member>
    <member name="T:System.Web.Configuration.OutputCacheProfileCollection">
      <summary>Represents a collection of <see cref="T:System.Web.Configuration.OutputCacheProfile" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.OutputCacheProfileCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.OutputCacheProfileCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.OutputCacheProfileCollection.Add(System.Web.Configuration.OutputCacheProfile)">
      <summary>Adds a <see cref="T:System.Web.Configuration.OutputCacheProfile" /> object to the collection.</summary>
      <param name="name">The name of the <see cref="T:System.Web.Configuration.OutputCacheProfile" /> object to add to the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Web.Configuration.OutputCacheProfile" /> object already exists in the collection or the collection is read only.</exception>
    </member>
    <member name="P:System.Web.Configuration.OutputCacheProfileCollection.AllKeys">
      <summary>Gets the <see cref="T:System.Web.Configuration.OutputCacheProfileCollection" /> keys.</summary>
      <returns>The string array containing the collection keys.</returns>
    </member>
    <member name="M:System.Web.Configuration.OutputCacheProfileCollection.Clear">
      <summary>Removes all the  <see cref="T:System.Web.Configuration.OutputCacheProfile" /> objects from the collection.</summary>
      <exception cref="T:System.Configuration.ConfigurationException">The collection is read only.</exception>
    </member>
    <member name="M:System.Web.Configuration.OutputCacheProfileCollection.Get(System.Int32)">
      <summary>Gets the <see cref="T:System.Web.Configuration.OutputCacheProfile" /> element at the specified index.</summary>
      <returns>The <see cref="T:System.Web.Configuration.OutputCacheProfile" /> element at the specified index.</returns>
      <param name="index">The index of the <see cref="T:System.Web.Configuration.OutputCacheProfileCollection" /> element. </param>
    </member>
    <member name="M:System.Web.Configuration.OutputCacheProfileCollection.Get(System.String)">
      <summary>Gets the <see cref="T:System.Web.Configuration.OutputCacheProfile" /> element with the specified name.</summary>
      <returns>The <see cref="T:System.Web.Configuration.OutputCacheProfile" /> element with the specified name.</returns>
      <param name="name">The name of the <see cref="T:System.Web.Configuration.OutputCacheProfileCollection" /> element.</param>
    </member>
    <member name="M:System.Web.Configuration.OutputCacheProfileCollection.GetKey(System.Int32)">
      <summary>Gets the key at the specified <see cref="T:System.Web.Configuration.OutputCacheProfileCollection" /> index.</summary>
      <returns>The key with the specified <see cref="T:System.Web.Configuration.OutputCacheProfileCollection" /> index.</returns>
      <param name="index">The <see cref="T:System.Web.Configuration.OutputCacheProfileCollection" /> index of the key. </param>
    </member>
    <member name="P:System.Web.Configuration.OutputCacheProfileCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Web.Configuration.OutputCacheProfile" /> object at the specified index.</summary>
      <returns>The <see cref="T:System.Web.Configuration.OutputCacheProfile" /> at the specified index.</returns>
      <param name="index">The collection index of the <see cref="T:System.Web.Configuration.OutputCacheProfile" /> object </param>
    </member>
    <member name="P:System.Web.Configuration.OutputCacheProfileCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.Web.Configuration.OutputCacheProfile" /> with the specified name.</summary>
      <returns>The <see cref="T:System.Web.Configuration.OutputCacheProfile" /> with the specified name.</returns>
      <param name="name">The name of the <see cref="T:System.Web.Configuration.OutputCacheProfile" /> object.</param>
    </member>
    <member name="M:System.Web.Configuration.OutputCacheProfileCollection.Remove(System.String)">
      <summary>Removes the <see cref="T:System.Web.Configuration.OutputCacheProfile" /> object with the specified name from the collection.</summary>
      <param name="name">The name of the <see cref="T:System.Web.Configuration.OutputCacheProfile" /> element to remove from the collection. </param>
      <exception cref="T:System.Configuration.ConfigurationException">There is no <see cref="T:System.Web.Configuration.OutputCacheProfile" /> object with the specified key in the collection, the element has already been removed, or the collection is read-only.</exception>
    </member>
    <member name="M:System.Web.Configuration.OutputCacheProfileCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Web.Configuration.OutputCacheProfile" /> object at the specified index from the collection.</summary>
      <param name="index">The index of the <see cref="T:System.Web.Configuration.OutputCacheProfile" /> element to remove from the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationException">There is no <see cref="T:System.Web.Configuration.OutputCacheProfile" /> object with the specified key in the collection, the element has already been removed, or the collection is read-only.</exception>
    </member>
    <member name="M:System.Web.Configuration.OutputCacheProfileCollection.Set(System.Web.Configuration.OutputCacheProfile)">
      <summary>Sets the specified <see cref="T:System.Web.Configuration.OutputCacheProfile" /> object. </summary>
      <param name="user">The <see cref="T:System.Web.Configuration.OutputCacheProfileCollection" /> element to set.</param>
      <exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Web.Configuration.OutputCacheProfileCollection" /> is read-only.</exception>
    </member>
    <member name="T:System.Web.Configuration.OutputCacheSection">
      <summary>Configures the output cache for a Web application. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.OutputCacheSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.OutputCacheSection" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.OutputCacheSection.DefaultProviderName">
      <summary>Gets or sets the name of the ASP.NET default output-cache provider that is stored in the <see cref="T:System.Web.Configuration.OutputCacheSection" /> element of a configuration file.</summary>
      <returns>The name of the default provider.</returns>
    </member>
    <member name="P:System.Web.Configuration.OutputCacheSection.EnableFragmentCache">
      <summary>Gets or sets a value indicating whether the fragment cache is enabled.</summary>
      <returns>true if the fragment cache is enabled; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.OutputCacheSection.EnableKernelCacheForVaryByStar">
      <summary>Gets or sets a value indicating whether kernel caching is enabled.</summary>
      <returns>true if kernel caching is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.OutputCacheSection.EnableOutputCache">
      <summary>Gets or sets a value indicating whether the output cache is enabled.</summary>
      <returns>true if the output cache is enabled; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.OutputCacheSection.OmitVaryStar">
      <summary>Gets or sets a value indicating whether the vary header is enabled.</summary>
      <returns>true if the vary header is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.OutputCacheSection.Providers">
      <summary>Gets or sets the collection of output-cache providers that are stored in the <see cref="T:System.Web.Configuration.OutputCacheSection" /> element of a configuration file. </summary>
      <returns>The collection of providers.</returns>
    </member>
    <member name="P:System.Web.Configuration.OutputCacheSection.SendCacheControlHeader">
      <summary>Gets or sets a value indicating whether the cache-control:private header is sent by the output cache module by default.</summary>
      <returns>true if the sending of cache-control:private header is enabled; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.Web.Configuration.OutputCacheSettingsSection">
      <summary>Configures the output cache settings for application pages . This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.OutputCacheSettingsSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.OutputCacheSettingsSection" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.OutputCacheSettingsSection.OutputCacheProfiles">
      <summary>Gets a <see cref="T:System.Web.Configuration.OutputCacheProfileCollection" />.</summary>
      <returns>A <see cref="T:System.Web.Configuration.OutputCacheProfileCollection" /> of <see cref="T:System.Web.Configuration.OutputCacheProfile" /> objects</returns>
    </member>
    <member name="T:System.Web.Configuration.PagesEnableSessionState">
      <summary>Used to determine session-state activation for a single Web page or an entire Web application.</summary>
    </member>
    <member name="F:System.Web.Configuration.PagesEnableSessionState.False">
      <summary>Session state is disabled.</summary>
    </member>
    <member name="F:System.Web.Configuration.PagesEnableSessionState.ReadOnly">
      <summary>Session state is enabled, but not writable.</summary>
    </member>
    <member name="F:System.Web.Configuration.PagesEnableSessionState.True">
      <summary>Session state is enabled.</summary>
    </member>
    <member name="T:System.Web.Configuration.PagesSection">
      <summary>Provides programmatic access to the pages Element (ASP.NET Settings Schema) section of the configuration file. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.PagesSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.PagesSection" /> class using default settings.</summary>
    </member>
    <member name="P:System.Web.Configuration.PagesSection.AsyncTimeout">
      <summary>Gets or sets a value indicating the number of seconds to wait for an asynchronous handler to complete during asynchronous page processing.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> value indicating the amount of time in seconds to wait for an asynchronous handler to complete during asynchronous page processing.</returns>
    </member>
    <member name="P:System.Web.Configuration.PagesSection.AutoEventWireup">
      <summary>Gets or sets a value indicating whether events for ASP.NET pages are automatically connected to event-handling functions.</summary>
      <returns>true if events for ASP.NET pages are automatically connected to event-handling functions; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.PagesSection.Buffer">
      <summary>Gets or sets a value that specifies whether .aspx pages and .ascx controls use response buffering.</summary>
      <returns>true if .aspx pages and .ascx controls use response buffering; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.PagesSection.ClientIDMode">
      <summary>Gets or sets the default algorithm that is used to generate a control's identifier.</summary>
      <returns>A value that indicates how the value in the <see cref="P:System.Web.UI.Control.ClientID" /> property is generated. The default value is <see cref="F:System.Web.UI.ClientIDMode.AutoID" />.</returns>
    </member>
    <member name="P:System.Web.Configuration.PagesSection.CompilationMode">
      <summary>Gets or sets a value that determines how .aspx pages and .ascx controls are compiled.</summary>
      <returns>One of the values for the <see cref="P:System.Web.Configuration.PagesSection.CompilationMode" /> property, which specifies how .aspx pages and .ascx controls are compiled.</returns>
    </member>
    <member name="P:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion">
      <summary>Gets or sets a value that specifies the ASP.NET version that any rendered HTML will be compatible with.</summary>
      <returns>The ASP.NET version that any rendered HTML will be compatible with.</returns>
      <exception cref="T:System.ArgumentNullException">An attempt was made to set this property to null.</exception>
    </member>
    <member name="P:System.Web.Configuration.PagesSection.Controls">
      <summary>Gets a collection of <see cref="T:System.Web.Configuration.TagPrefixInfo" /> objects.</summary>
      <returns>A <see cref="T:System.Web.Configuration.TagPrefixCollection" /> of <see cref="T:System.Web.Configuration.TagPrefixInfo" /> objects.</returns>
    </member>
    <member name="P:System.Web.Configuration.PagesSection.EnableEventValidation">
      <summary>Gets or sets a value that specifies whether event validation is enabled.</summary>
      <returns>true if event validation is enabled; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Configuration.PagesSection.EnableSessionState">
      <summary>Gets or sets a value that specifies whether the session state is enabled, disabled, or read-only.</summary>
      <returns>One of the values for the <see cref="P:System.Web.Configuration.PagesSection.EnableSessionState" /> property, which specifies whether the session state is enabled, disabled, or read-only. The default is <see cref="F:System.Web.Configuration.PagesEnableSessionState.True" />, which indicates that session state is enabled.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The value is not a valid <see cref="T:System.Web.Configuration.PagesEnableSessionState" /> enumeration value.</exception>
    </member>
    <member name="P:System.Web.Configuration.PagesSection.EnableViewState">
      <summary>Gets or sets a value indicating whether view state is enabled or disabled.</summary>
      <returns>true if view state is enabled; false if view state is disabled. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.PagesSection.EnableViewStateMac">
      <summary>Gets or sets a value that specifies whether ASP.NET should run a message authentication code (MAC) on the page's view state when the page is posted back from the client.</summary>
      <returns>true if ASP.NET should run a message authentication code (MAC) on the page's view state when the page is posted back from the client; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.PagesSection.IgnoreDeviceFilters">
      <summary>Gets the collection of device tags that ASP.NET should ignore when it renders a page.</summary>
      <returns>The collection of device tags that ASP.NET should ignore.</returns>
    </member>
    <member name="P:System.Web.Configuration.PagesSection.MaintainScrollPositionOnPostBack">
      <summary>Gets or sets a value indicating whether the page scroll position should be maintained upon returning from a postback from the server.</summary>
      <returns>true if the page-scroll position should be maintained after postback; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.PagesSection.MasterPageFile">
      <summary>Gets or sets a reference to the master page for the application. </summary>
      <returns>A reference to the master page for the application.</returns>
    </member>
    <member name="P:System.Web.Configuration.PagesSection.MaxPageStateFieldLength">
      <summary>Gets or sets the maximum number of characters that a single view-state field can contain.</summary>
      <returns>The maximum number of characters that a single view-state field can contain.</returns>
    </member>
    <member name="P:System.Web.Configuration.PagesSection.Namespaces">
      <summary>Gets a collection of <see cref="T:System.Web.Configuration.NamespaceInfo" /> objects.</summary>
      <returns>A <see cref="T:System.Web.Configuration.NamespaceCollection" /> of <see cref="T:System.Web.Configuration.NamespaceInfo" /> objects.</returns>
    </member>
    <member name="P:System.Web.Configuration.PagesSection.PageBaseType">
      <summary>Gets or sets a value that specifies a code-behind class that .aspx pages inherit by default.</summary>
      <returns>A string that specifies a code-behind class that .aspx pages inherit by default.</returns>
    </member>
    <member name="P:System.Web.Configuration.PagesSection.PageParserFilterType">
      <summary>Gets or sets a value that specifies the parser filter type.</summary>
      <returns>A string that specifies the parser filter type.</returns>
    </member>
    <member name="P:System.Web.Configuration.PagesSection.RenderAllHiddenFieldsAtTopOfForm">
      <summary>Gets or sets a value that indicates whether all system-generated hidden fields are rendered at the top of the form.</summary>
      <returns>true if system-generated hidden fields are rendered at the top of the form; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.PagesSection.SmartNavigation">
      <summary>Gets or sets a value that indicates whether smart navigation is enabled.</summary>
      <returns>true if smart navigation is enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.PagesSection.StyleSheetTheme">
      <summary>Gets or sets the name of an ASP.NET style sheet theme.</summary>
      <returns>The name of an ASP.NET style sheet theme.</returns>
    </member>
    <member name="P:System.Web.Configuration.PagesSection.TagMapping">
      <summary>Gets a collection of <see cref="T:System.Web.Configuration.TagMapInfo" /> objects.</summary>
      <returns>A <see cref="T:System.Web.Configuration.TagMapCollection" /> of <see cref="T:System.Web.Configuration.TagMapInfo" /> objects.</returns>
    </member>
    <member name="P:System.Web.Configuration.PagesSection.Theme">
      <summary>Gets or sets the name of an ASP.NET page theme.</summary>
      <returns>The name of an ASP.NET page theme.</returns>
    </member>
    <member name="P:System.Web.Configuration.PagesSection.UserControlBaseType">
      <summary>Gets or sets a value that specifies a code-behind class that user controls inherit by default.</summary>
      <returns>A string that specifies a code-behind file that user controls inherit by default.</returns>
    </member>
    <member name="P:System.Web.Configuration.PagesSection.ValidateRequest">
      <summary>Gets or sets a value that determines whether ASP.NET examines input from the browser for dangerous values.</summary>
      <returns>true if ASP.NET examines input from the browser for dangerous values; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.PagesSection.ViewStateEncryptionMode">
      <summary>Gets or sets the encryption mode that ASP.NET uses when maintaining ViewState values.</summary>
      <returns>A <see cref="T:System.Web.UI.ViewStateEncryptionMode" /> enumeration value indicating when the ViewState values are encrypted.</returns>
    </member>
    <member name="T:System.Web.Configuration.PartialTrustVisibleAssembliesSection">
      <summary>Configures a set of partial-trust assemblies. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.PartialTrustVisibleAssembliesSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.PartialTrustVisibleAssembliesSection" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.PartialTrustVisibleAssembliesSection.PartialTrustVisibleAssemblies">
      <summary>Gets the <see cref="T:System.Web.Configuration.PartialTrustVisibleAssembliesSection" /> collection of APTCA-marked assemblies to use in partial-trust ASP.NET applications.</summary>
      <returns>A collection of the APTCA-marked assemblies to use in partial-trust ASP.NET applications.</returns>
    </member>
    <member name="T:System.Web.Configuration.PartialTrustVisibleAssembly">
      <summary>Configures a partial-trust assembly. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.PartialTrustVisibleAssembly.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.PartialTrustVisibleAssembly" /> class. </summary>
      <param name="assemblyName">The assembly name.</param>
      <param name="publicKey">The hexadecimal string representation of the public key that is associated with the assembly.</param>
    </member>
    <member name="P:System.Web.Configuration.PartialTrustVisibleAssembly.AssemblyName">
      <summary>Gets or sets the assembly name.</summary>
      <returns>The assembly name. </returns>
    </member>
    <member name="P:System.Web.Configuration.PartialTrustVisibleAssembly.PublicKey">
      <summary>Gets or sets the assembly public key.</summary>
      <returns>The hexadecimal string representation of the public key that is associated with the assembly.</returns>
    </member>
    <member name="T:System.Web.Configuration.PartialTrustVisibleAssemblyCollection">
      <summary>Represents a collection of <see cref="T:System.Web.Configuration.PartialTrustVisibleAssembly" /> objects. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Web.Configuration.PartialTrustVisibleAssemblyCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.PartialTrustVisibleAssemblyCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.PartialTrustVisibleAssemblyCollection.Add(System.Web.Configuration.PartialTrustVisibleAssembly)">
      <summary>Adds a <see cref="T:System.Web.Configuration.PartialTrustVisibleAssembly" /> object to the collection.</summary>
      <param name="partialTrustVisibleAssembly">The object to add to the collection.</param>
    </member>
    <member name="M:System.Web.Configuration.PartialTrustVisibleAssemblyCollection.Clear">
      <summary>Removes all the <see cref="T:System.Web.Configuration.PartialTrustVisibleAssembly" /> objects from the collection.</summary>
    </member>
    <member name="P:System.Web.Configuration.PartialTrustVisibleAssemblyCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Web.Configuration.PartialTrustVisibleAssembly" /> object at the specified index.</summary>
      <returns>The collection object at the specified index.</returns>
      <param name="index">The index of the element to get.</param>
    </member>
    <member name="M:System.Web.Configuration.PartialTrustVisibleAssemblyCollection.Remove(System.String)">
      <summary>Removes the specified <see cref="T:System.Web.Configuration.PartialTrustVisibleAssembly" /> object from the collection </summary>
      <param name="key">The key of the element to remove.</param>
    </member>
    <member name="M:System.Web.Configuration.PartialTrustVisibleAssemblyCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Web.Configuration.PartialTrustVisibleAssembly" /> object from the collection at the specified index.</summary>
      <param name="index">The index of the element to remove.</param>
    </member>
    <member name="T:System.Web.Configuration.PassportAuthentication">
      <summary>Configures Passport-based authentication in ASP.NET applications.</summary>
    </member>
    <member name="M:System.Web.Configuration.PassportAuthentication.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.PassportAuthentication" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.PassportAuthentication.RedirectUrl">
      <summary>Gets or sets the URL to which the request is redirected.</summary>
      <returns>The URL of the page to which the request is redirected.</returns>
    </member>
    <member name="T:System.Web.Configuration.ProcessModelComAuthenticationLevel">
      <summary>Specifies the level of authentication for DCOM security.</summary>
    </member>
    <member name="F:System.Web.Configuration.ProcessModelComAuthenticationLevel.None">
      <summary>Specifies no authentication. This field is constant. </summary>
    </member>
    <member name="F:System.Web.Configuration.ProcessModelComAuthenticationLevel.Call">
      <summary>Specifies that DCOM authenticates the credentials of the client. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Configuration.ProcessModelComAuthenticationLevel.Connect">
      <summary>Specifies that DCOM authenticates the credentials of the client. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Configuration.ProcessModelComAuthenticationLevel.Default">
      <summary>Specifies that DCOM determines the authentication level. This field is constant. </summary>
    </member>
    <member name="F:System.Web.Configuration.ProcessModelComAuthenticationLevel.Pkt">
      <summary>Specifies that DCOM verifies that all data received is from the expected client. This field is constant. </summary>
    </member>
    <member name="F:System.Web.Configuration.ProcessModelComAuthenticationLevel.PktIntegrity">
      <summary>Specifies that DCOM authenticates and verifies the data transferred. This field is constant. </summary>
    </member>
    <member name="F:System.Web.Configuration.ProcessModelComAuthenticationLevel.PktPrivacy">
      <summary>Specifies that DCOM authenticates all previous levels and does encryption. This field is constant. </summary>
    </member>
    <member name="T:System.Web.Configuration.ProcessModelComImpersonationLevel">
      <summary>Specifies the authentication level for COM security.</summary>
    </member>
    <member name="F:System.Web.Configuration.ProcessModelComImpersonationLevel.Default">
      <summary>Specifies that DCOM determines the impersonation level. This field is constant. </summary>
    </member>
    <member name="F:System.Web.Configuration.ProcessModelComImpersonationLevel.Anonymous">
      <summary>Specifies that the client is anonymous to the server. This field is constant. </summary>
    </member>
    <member name="F:System.Web.Configuration.ProcessModelComImpersonationLevel.Delegate">
      <summary>Specifies that the server process can impersonate the client's security context while acting on behalf of the client. This field is constant. </summary>
    </member>
    <member name="F:System.Web.Configuration.ProcessModelComImpersonationLevel.Identify">
      <summary>Specifies that the server can obtain the client's identity. This field is constant. </summary>
    </member>
    <member name="F:System.Web.Configuration.ProcessModelComImpersonationLevel.Impersonate">
      <summary>Specifies that the server process can impersonate the client's security context while acting on behalf of the client. This field is constant. </summary>
    </member>
    <member name="T:System.Web.Configuration.ProcessModelLogLevel">
      <summary>Specifies the event types to be logged to the event log.</summary>
    </member>
    <member name="F:System.Web.Configuration.ProcessModelLogLevel.None">
      <summary>Specifies that no events are logged. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Configuration.ProcessModelLogLevel.All">
      <summary>Specifies that all process events are logged. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Configuration.ProcessModelLogLevel.Errors">
      <summary>Specifies that only unexpected shutdowns, memory-limit shutdowns, and deadlock shutdowns are logged. This field is constant.</summary>
    </member>
    <member name="T:System.Web.Configuration.ProcessModelSection">
      <summary>Configures the ASP.NET process model settings on an Internet Information Services (IIS) Web server. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.ProcessModelSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ProcessModelSection" /> class using default settings.</summary>
    </member>
    <member name="P:System.Web.Configuration.ProcessModelSection.AutoConfig">
      <summary>Gets or sets a value indicating whether ASP.NET performance settings are automatically configured for ASP.NET applications. </summary>
      <returns>true if performance settings are automatically configured for ASP.NET applications; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProcessModelSection.ClientConnectedCheck">
      <summary>Gets or sets a value indicating how long a request is left in the queue. </summary>
      <returns>A <see cref="T:System.TimeSpan" /> value indicating the queuing time. The default value is 5 seconds.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel">
      <summary>Gets or sets a value indicating the level of authentication for DCOM security.</summary>
      <returns>One of the <see cref="T:System.Web.Configuration.ProcessModelComAuthenticationLevel" /> values. The default value is <see cref="F:System.Web.Configuration.ProcessModelComAuthenticationLevel.Connect" />.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProcessModelSection.ComImpersonationLevel">
      <summary>Gets or sets a value indicating the level of authentication for COM security.</summary>
      <returns>One of the <see cref="T:System.Web.Configuration.ProcessModelComImpersonationLevel" /> values. The default value is <see cref="F:System.Web.Configuration.ProcessModelComImpersonationLevel.Impersonate" />. </returns>
    </member>
    <member name="P:System.Web.Configuration.ProcessModelSection.CpuMask">
      <summary>Gets or sets a value indicating which processors on a multiprocessor server are eligible to run ASP.NET processes. </summary>
      <returns>The number representing the bit pattern to apply. The default value is 0xFFFFFFFF.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProcessModelSection.Enable">
      <summary>Gets or sets a value indicating whether the process model is enabled.</summary>
      <returns>true if the process model is enabled; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProcessModelSection.IdleTimeout">
      <summary>Gets or sets a value indicating the period of inactivity after which ASP.NET automatically ends the worker process.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> value indicating the idle time. The default value is Infinite, which corresponds to <see cref="F:System.TimeSpan.MaxValue" />. </returns>
    </member>
    <member name="P:System.Web.Configuration.ProcessModelSection.LogLevel">
      <summary>Gets or sets a value indicating the event types to be logged to the event log.</summary>
      <returns>One of the <see cref="T:System.Web.Configuration.ProcessModelLogLevel" /> values. The default value is <see cref="F:System.Web.Configuration.ProcessModelLogLevel.Errors" />. </returns>
    </member>
    <member name="P:System.Web.Configuration.ProcessModelSection.MaxAppDomains">
      <summary>Gets or sets the maximum allowed number of application domains in one process.</summary>
      <returns>The maximum allowed number of application domains in one process.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProcessModelSection.MaxIOThreads">
      <summary>Gets or sets a value indicating the maximum number of I/O threads per CPU in the CLR thread pool. </summary>
      <returns>The maximum number of threads. The default is 20.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads">
      <summary>Gets or sets a value indicating the maximum amount of worker threads per CPU in the CLR thread pool. </summary>
      <returns>The maximum number of threads. The default is 20.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProcessModelSection.MemoryLimit">
      <summary>Gets or sets a value indicating the maximum allowed memory size.</summary>
      <returns>The percentage of the total system memory. The default is 60 percent. </returns>
    </member>
    <member name="P:System.Web.Configuration.ProcessModelSection.MinIOThreads">
      <summary>Gets or sets the minimum number of I/O threads per CPU in the CLR thread pool.</summary>
      <returns>The minimum number of I/O threads per CPU in the CLR thread pool.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProcessModelSection.MinWorkerThreads">
      <summary>Gets or sets the minimum number of worker threads per CPU in the CLR thread pool.</summary>
      <returns>The minimum number of worker threads per CPU in the CLR thread pool</returns>
    </member>
    <member name="P:System.Web.Configuration.ProcessModelSection.Password">
      <summary>Gets or sets a value indicating the password to use for the Windows identity.</summary>
      <returns>The password to use. The default value is AutoGenerate.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProcessModelSection.PingFrequency">
      <summary>Gets or sets a value indicating the time interval at which the ISAPI extension pings the worker process to determine whether it is running.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> defining the time interval. The default is 30 seconds.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProcessModelSection.PingTimeout">
      <summary>Gets or sets a value indicating the time interval after which a non-responsive worker process is restarted.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> defining the time interval. The default is 5 seconds.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProcessModelSection.RequestLimit">
      <summary>Gets or sets a value indicating the number of requests allowed before a worker process is recycled.</summary>
      <returns>The number of allowed requests. The default is Infinite.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProcessModelSection.RequestQueueLimit">
      <summary>Gets or sets a value indicating the number of requests allowed in the queue.</summary>
      <returns>The number of requests allowed to be queued. The default is 5000.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval">
      <summary>Gets or sets a value indicating the time interval for the worker process to respond.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> defining the interval. The default is 3 minutes.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval">
      <summary>No longer used.</summary>
      <returns>Not applicable.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProcessModelSection.RestartQueueLimit">
      <summary>Gets or sets a value indicating the maximum number of requests queued by the ISAPI while waiting for a new worker process to start handling the requests.</summary>
      <returns>The number of requests queued. The default is 10. </returns>
    </member>
    <member name="P:System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile">
      <summary>Gets or sets a value indicating the file whose content must be used when a fatal error occurs.</summary>
      <returns>The path of the file used when a fatal error occurs.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProcessModelSection.ShutdownTimeout">
      <summary>Gets or sets a value indicating the time allowed for the worker process to shut down. </summary>
      <returns>The <see cref="T:System.TimeSpan" /> defining the interval. The default is 5 seconds.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProcessModelSection.Timeout">
      <summary>Gets or sets a value indicating the number of minutes until ASP.NET launches a new worker process.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> defining the interval. The default is Infinite.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProcessModelSection.UserName">
      <summary>Gets or sets a value indicating the user name for a Windows identity.</summary>
      <returns>The user name. The default value is Machine. </returns>
    </member>
    <member name="P:System.Web.Configuration.ProcessModelSection.WebGarden">
      <summary>Gets or sets a value enabling the available CPUs to run the worker processes.</summary>
      <returns>true, if <see cref="P:System.Web.Configuration.ProcessModelSection.CpuMask" /> is used to map the worker processes to the number of eligible CPUs; false if <see cref="P:System.Web.Configuration.ProcessModelSection.CpuMask" /> is ignored.</returns>
    </member>
    <member name="T:System.Web.Configuration.ProfileGroupSettings">
      <summary>Provides programmatic access to the group subsection of the profiles configuration file section.</summary>
    </member>
    <member name="M:System.Web.Configuration.ProfileGroupSettings.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> class using default settings.</summary>
      <param name="name">The name of the new group.</param>
    </member>
    <member name="M:System.Web.Configuration.ProfileGroupSettings.Equals(System.Object)">
      <param name="obj">A <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object to compare to the current object.</param>
    </member>
    <member name="M:System.Web.Configuration.ProfileGroupSettings.GetHashCode"></member>
    <member name="P:System.Web.Configuration.ProfileGroupSettings.Name">
      <summary>Gets or sets name of the group of <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> objects this object contains.</summary>
      <returns>A string containing the name of the group of <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> objects this object contains. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.Configuration.ProfileGroupSettings.PropertySettings">
      <summary>Gets the collection of profile property settings this object contains.</summary>
      <returns>A <see cref="T:System.Web.Configuration.ProfilePropertySettingsCollection" /> collection that contains all the <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> objects contained in this group.</returns>
    </member>
    <member name="T:System.Web.Configuration.ProfileGroupSettingsCollection">
      <summary>Contains a set of <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> objects.</summary>
    </member>
    <member name="M:System.Web.Configuration.ProfileGroupSettingsCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ProfileGroupSettingsCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.ProfileGroupSettingsCollection.Add(System.Web.Configuration.ProfileGroupSettings)">
      <summary>Adds a <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object to the collection.</summary>
      <param name="group">A <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object to add to the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object to add already exists in the collection, or the collection is read-only. </exception>
    </member>
    <member name="P:System.Web.Configuration.ProfileGroupSettingsCollection.AllKeys">
      <summary>Gets a string array of all the key values in the collection.</summary>
      <returns>A string array of all the key values in the collection.</returns>
    </member>
    <member name="M:System.Web.Configuration.ProfileGroupSettingsCollection.Clear">
      <summary>Removes all <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> objects from the collection.</summary>
    </member>
    <member name="M:System.Web.Configuration.ProfileGroupSettingsCollection.Get(System.Int32)">
      <summary>Returns the <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object at the specified index.</summary>
      <returns>The <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object at the specified index, or null if there is no object at that index.</returns>
      <param name="index">The index of the <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object to get.</param>
    </member>
    <member name="M:System.Web.Configuration.ProfileGroupSettingsCollection.Get(System.String)">
      <summary>Returns the <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object with the specified name.</summary>
      <returns>The <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object with the specified name, or null if the name does not exist.</returns>
      <param name="name">The name of the <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object to get.</param>
    </member>
    <member name="M:System.Web.Configuration.ProfileGroupSettingsCollection.GetKey(System.Int32)">
      <summary>Returns the name of the <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object at the specified index.</summary>
      <returns>The name of the <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object at the specified index, or null if there is no object at that index.</returns>
      <param name="index">The index of a <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object.</param>
    </member>
    <member name="M:System.Web.Configuration.ProfileGroupSettingsCollection.IndexOf(System.Web.Configuration.ProfileGroupSettings)">
      <summary>Returns the index of the specified <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object.</summary>
      <returns>The index of the specified <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object, or -1 if the specified <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object is not contained in the collection.</returns>
      <param name="group">A <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object in the collection.</param>
    </member>
    <member name="P:System.Web.Configuration.ProfileGroupSettingsCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object at the specified index location.</summary>
      <returns>The <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object at the specified index, or null if there is no object at that index.</returns>
      <param name="index">The index of a <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object in the collection.</param>
    </member>
    <member name="P:System.Web.Configuration.ProfileGroupSettingsCollection.Item(System.String)">
      <summary>Gets or sets the <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object with the specified name.</summary>
      <returns>The <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object with the specified name, or null if there is no object with that name.</returns>
      <param name="name">The name of a <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object in the collection.</param>
    </member>
    <member name="M:System.Web.Configuration.ProfileGroupSettingsCollection.Remove(System.String)">
      <summary>Removes a <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object from the collection.</summary>
      <param name="name">The name of the <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object to remove from the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">There is no <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object at the specified index in the collection, the element has already been removed, or the collection is read-only.</exception>
    </member>
    <member name="M:System.Web.Configuration.ProfileGroupSettingsCollection.RemoveAt(System.Int32)">
      <summary>Removes a <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object from the collection.</summary>
      <param name="index">The index of the <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object to remove from the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">There is no <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object at the specified index in the collection, the element has already been removed, or the collection is read-only. </exception>
    </member>
    <member name="M:System.Web.Configuration.ProfileGroupSettingsCollection.Set(System.Web.Configuration.ProfileGroupSettings)">
      <summary>Adds the specified <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object to the collection.</summary>
      <param name="group">A <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object.</param>
      <exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> object to add already exists in the collection, or the collection is read-only. </exception>
    </member>
    <member name="T:System.Web.Configuration.ProfilePropertySettings">
      <summary>The <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> class provides a way to programmatically access and modify the profiles section of a configuration file. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.ProfilePropertySettings.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> class with the specified name.</summary>
      <param name="name">A unique name for the <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> object.</param>
    </member>
    <member name="M:System.Web.Configuration.ProfilePropertySettings.#ctor(System.String,System.Boolean,System.Web.Configuration.SerializationMode,System.String,System.String,System.String,System.Boolean,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> class with the specified name and settings.</summary>
      <param name="name">A unique name for the <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> object.</param>
      <param name="readOnly">true to indicate that the associated property in the dynamically generated ProfileCommon class should be read-only; otherwise, false.</param>
      <param name="serializeAs">One of the <see cref="T:System.Web.Configuration.SerializationMode" /> values.</param>
      <param name="providerName">The name of a provider from the <see cref="P:System.Web.Configuration.ProfileSection.Providers" /> property, or an empty string ("").</param>
      <param name="defaultValue">A string containing the default value used for the named property in the generated page Profile class.</param>
      <param name="profileType">A valid type reference or an empty string.</param>
      <param name="allowAnonymous">true to indicate associated property in the dynamically generated ProfileCommon class should support anonymous users; otherwise, false, to indicate that anonymous users cannot change the named property.</param>
      <param name="customProviderData">A string containing provider-specific information used by the provider associated with the property.</param>
    </member>
    <member name="P:System.Web.Configuration.ProfilePropertySettings.AllowAnonymous">
      <summary>Gets or sets a value indicating whether the associated property in the dynamically generated ProfileCommon class can be set by anonymous users.</summary>
      <returns>true if the associated property in the ProfileCommon class can be set by anonymous users; otherwise, false, indicating that anonymous users cannot change the property value. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProfilePropertySettings.CustomProviderData">
      <summary>Gets or sets a string of custom data for the profile property provider.</summary>
      <returns>A string of custom data for the profile property provider. The default is null.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProfilePropertySettings.DefaultValue">
      <summary>Gets or sets the default value used for the associated property in the dynamically generated ProfileCommon class. </summary>
      <returns>A string containing the default value used for the associated property in the dynamically generated ProfileCommon class. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.Configuration.ProfilePropertySettings.Name">
      <summary>Gets or sets the name of the <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> object and the associated property in the dynamically generated ProfileCommon class.</summary>
      <returns>A string containing the name of the <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> object. The default is null.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProfilePropertySettings.Provider">
      <summary>Gets or sets the name of a provider to use when serializing the named property.</summary>
      <returns>The name of a provider from the <see cref="P:System.Web.Configuration.ProfileSection.Providers" /> property, or an empty string (""). The default is an empty string.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProfilePropertySettings.ReadOnly">
      <summary>Gets or sets a value that determines whether the associated property in the dynamically generated ProfileCommon class is read-only.</summary>
      <returns>true if the associated property in the ProfileCommon class is read-only; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProfilePropertySettings.SerializeAs">
      <summary>Gets or sets the serialization method used for the associated property in the dynamically generated ProfileCommon class.</summary>
      <returns>One of the <see cref="T:System.Web.Configuration.SerializationMode" /> values. The default is <see cref="F:System.Web.Configuration.SerializationMode.ProviderSpecific" />.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProfilePropertySettings.Type">
      <summary>Gets or sets the name of the type of the associated property in the dynamically generated ProfileCommon class.</summary>
      <returns>A valid, fully qualified type reference, or an empty string (""). The default is an empty string.</returns>
    </member>
    <member name="T:System.Web.Configuration.ProfilePropertySettingsCollection">
      <summary>Contains a set of <see cref="T:System.Web.Configuration.ProfilePropertySettingsCollection" /> objects.</summary>
    </member>
    <member name="M:System.Web.Configuration.ProfilePropertySettingsCollection.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.Configuration.ProfilePropertySettingsCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.ProfilePropertySettingsCollection.Add(System.Web.Configuration.ProfilePropertySettings)">
      <summary>Adds a <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> object to the collection.</summary>
      <param name="propertySettings">A <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> object to add to the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> object to add already exists in the collection or the collection is read only.</exception>
    </member>
    <member name="P:System.Web.Configuration.ProfilePropertySettingsCollection.AllKeys">
      <summary>Returns an array containing the names of all the <see cref="T:System.Web.Configuration.ProfileSection" /> objects contained in the collection.</summary>
      <returns>An array containing the names of all the <see cref="T:System.Web.Configuration.ProfileSection" /> objects contained in the collection or an empty array if the collection is empty.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProfilePropertySettingsCollection.AllowClear">
      <summary>Gets a value indicating whether the &lt;clear&gt; element is valid as a <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> object.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="M:System.Web.Configuration.ProfilePropertySettingsCollection.Clear">
      <summary>Removes all <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> objects from the collection.</summary>
    </member>
    <member name="M:System.Web.Configuration.ProfilePropertySettingsCollection.CreateNewElement"></member>
    <member name="M:System.Web.Configuration.ProfilePropertySettingsCollection.Get(System.Int32)">
      <summary>Returns the <see cref="T:System.Web.Configuration.ProfileSection" /> object at the specified index.</summary>
      <returns>The <see cref="T:System.Web.Configuration.ProfileSection" /> object at the specified index, or null if there is no object at that index.</returns>
      <param name="index">The index of the <see cref="T:System.Web.Configuration.ProfileSection" /> to get.</param>
    </member>
    <member name="M:System.Web.Configuration.ProfilePropertySettingsCollection.Get(System.String)">
      <summary>Returns the <see cref="T:System.Web.Configuration.ProfileSection" /> object with the specified name.</summary>
      <returns>The <see cref="T:System.Web.Configuration.ProfileSection" /> object with the specified name, or null if the name does not exist.</returns>
      <param name="name">The name of the <see cref="T:System.Web.Configuration.ProfileSection" /> to get.</param>
    </member>
    <member name="M:System.Web.Configuration.ProfilePropertySettingsCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>Gets the key for the specified configuration element.</summary>
      <returns>The name of the element.</returns>
      <param name="element">A <see cref="T:System.Configuration.ConfigurationElement" /> in the collection.</param>
    </member>
    <member name="M:System.Web.Configuration.ProfilePropertySettingsCollection.GetKey(System.Int32)">
      <summary>Gets the name of the <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> at the specified index location.</summary>
      <returns>The name of the <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> at the specified index location.</returns>
      <param name="index">The index of a <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> in the collection.</param>
    </member>
    <member name="M:System.Web.Configuration.ProfilePropertySettingsCollection.IndexOf(System.Web.Configuration.ProfilePropertySettings)">
      <summary>Returns the index of the specified <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> object.</summary>
      <returns>The index of the specified <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> object, or -1 if the object is not found in the collection.</returns>
      <param name="propertySettings">A <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> object in the collection.</param>
    </member>
    <member name="P:System.Web.Configuration.ProfilePropertySettingsCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> object at the specified index location.</summary>
      <returns>The <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> object at the specified index location.</returns>
      <param name="index">The index of a <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> object in the collection.</param>
    </member>
    <member name="P:System.Web.Configuration.ProfilePropertySettingsCollection.Item(System.String)">
      <summary>Gets or sets the <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> object with the specified name.</summary>
      <returns>The <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> object with the specified name.</returns>
      <param name="name">The name of a <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> object in the collection. </param>
    </member>
    <member name="M:System.Web.Configuration.ProfilePropertySettingsCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
      <summary>Handles the reading of unrecognized configuration elements from a configuration file and causes the configuration system to throw an exception if the element cannot be handled.</summary>
      <returns>true if the unrecognized element was deserialized successfully; otherwise, false.</returns>
      <param name="elementName">The name of the unrecognized element.</param>
      <param name="reader">An input stream that reads XML from the configuration file.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="elementName" /> equals "clear"- or -<paramref name="elementName" /> equals "group".</exception>
    </member>
    <member name="P:System.Web.Configuration.ProfilePropertySettingsCollection.Properties">
      <summary>Gets a collection of configuration properties.</summary>
      <returns>A collection of configuration properties.</returns>
    </member>
    <member name="M:System.Web.Configuration.ProfilePropertySettingsCollection.Remove(System.String)">
      <summary>Removes a <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> object from the collection.</summary>
      <param name="name">The name of a <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> object to remove from the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationException">There is no <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> object with the specified key in the collection.- or -The element has already been removed.- or -The collection is read-only.</exception>
    </member>
    <member name="M:System.Web.Configuration.ProfilePropertySettingsCollection.RemoveAt(System.Int32)">
      <summary>Removes a <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> object at the specified index location from the collection.</summary>
      <param name="index">The index of a <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> object in the collection.</param>
      <exception cref="T:System.IndexOutOfRangeException">There is no <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> object at the specified index in the collection.- or -The element has already been removed.- or -The collection is read-only. </exception>
    </member>
    <member name="M:System.Web.Configuration.ProfilePropertySettingsCollection.Set(System.Web.Configuration.ProfilePropertySettings)">
      <summary>Adds the specified <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> object to the collection.</summary>
      <param name="propertySettings">A <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> object.</param>
      <exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> object to add already exists in the collection, or the collection is read-only.</exception>
    </member>
    <member name="P:System.Web.Configuration.ProfilePropertySettingsCollection.ThrowOnDuplicate">
      <summary>Gets a value indicating whether an error should be thrown if an attempt to create a duplicate object is made.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="T:System.Web.Configuration.ProfileSection">
      <summary>The <see cref="T:System.Web.Configuration.ProfileSection" /> class provides a way to programmatically access and modify the profile section of a configuration file. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.ProfileSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ProfileSection" /> class using default settings.</summary>
    </member>
    <member name="P:System.Web.Configuration.ProfileSection.AutomaticSaveEnabled">
      <summary>Gets or sets a value that determines whether changes to user-profile information are automatically saved on page exit.</summary>
      <returns>true if profile information is automatically saved on page exit; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProfileSection.DefaultProvider">
      <summary>Gets or sets the name of the default profile provider. </summary>
      <returns>The name of a provider in the <see cref="P:System.Web.Configuration.ProfileSection.Providers" /> collection, or an empty string (""). The default is "AspNetSqlProfileProvider."</returns>
    </member>
    <member name="P:System.Web.Configuration.ProfileSection.Enabled">
      <summary>Gets or sets a value indicating whether the ASP.NET profile feature is enabled.</summary>
      <returns>true if the ASP.NET compilation system should generate a ProfileCommon class that can be used to access information about individual user profiles; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProfileSection.Inherits">
      <summary>Gets or sets a type reference for a custom type derived from <see cref="T:System.Web.Profile.ProfileBase" />.</summary>
      <returns>A valid type reference, or an empty string (""). The default is an empty string.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProfileSection.PropertySettings">
      <summary>Gets a <see cref="T:System.Web.Configuration.RootProfilePropertySettingsCollection" /> collection of <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> objects.</summary>
      <returns>A <see cref="T:System.Web.Configuration.RootProfilePropertySettingsCollection" /> object that contains all the properties defined within the properties subsection of the profile section of the configuration file.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProfileSection.Providers">
      <summary>Gets a collection of <see cref="T:System.Configuration.ProviderSettings" /> objects.</summary>
      <returns>A <see cref="T:System.Configuration.ProviderSettingsCollection" /> that contains the providers defined within the providers subsection of the profile section of the configuration file.</returns>
    </member>
    <member name="T:System.Web.Configuration.ProfileSettings">
      <summary>Configures the ASP.NET event profiles. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.ProfileSettings.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ProfileSettings" /> class. using the specified name for the new instance of the class.</summary>
      <param name="name">The name of the <see cref="T:System.Web.Configuration.ProfileSettings" /> object to create.</param>
    </member>
    <member name="M:System.Web.Configuration.ProfileSettings.#ctor(System.String,System.Int32,System.Int32,System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ProfileSettings" /> class, using specified settings for the new instance of the class.</summary>
      <param name="name">The name of the <see cref="T:System.Web.Configuration.ProfileSettings" /> object to create.</param>
      <param name="minInstances">The minimum number of event occurrences before the event is raised to the provider. </param>
      <param name="maxLimit">The maximum number of times events of the same type are raised.</param>
      <param name="minInterval">A <see cref="T:System.TimeSpan" /> that specifies the minimum length of the interval between the times when two events of the same type are raised.</param>
    </member>
    <member name="M:System.Web.Configuration.ProfileSettings.#ctor(System.String,System.Int32,System.Int32,System.TimeSpan,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.BufferModeSettings" /> class, using the specified settings for the new instance of the class.</summary>
      <param name="name">The name of the <see cref="T:System.Web.Configuration.ProfileSettings" /> object to create.</param>
      <param name="minInstances">The minimum number of event occurrences before the event is raised to the provider. </param>
      <param name="maxLimit">The maximum number of times events of the same type are raised.</param>
      <param name="minInterval">A <see cref="T:System.TimeSpan" /> that specifies the minimum interval between two events of the same type.</param>
      <param name="custom">The fully qualified type of a custom class that implements <see cref="T:System.Web.Management.IWebEventCustomEvaluator" />.</param>
    </member>
    <member name="P:System.Web.Configuration.ProfileSettings.Custom">
      <summary>Gets or sets the fully qualified type of a custom class that implements the <see cref="T:System.Web.Management.IWebEventCustomEvaluator" /> interface.</summary>
      <returns>The fully qualified type of a custom class that implements the <see cref="T:System.Web.Management.IWebEventCustomEvaluator" /> interface. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.Configuration.ProfileSettings.MaxLimit">
      <summary>Gets or sets the maximum number of times events of the same type are raised.</summary>
      <returns>The maximum number of times events of the same type are raised. The default is <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProfileSettings.MinInstances">
      <summary>Gets or sets the minimum number of event occurrences before the event is raised to the provider.</summary>
      <returns>The minimum number of event occurrences before the event is fired to the provider. The default is 1.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProfileSettings.MinInterval">
      <summary>Gets or sets the minimum interval between two events of the same type.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that specifies the minimum interval between two events of the same type. The default is <see cref="F:System.TimeSpan.Zero" />.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProfileSettings.Name">
      <summary>Gets or sets the name of the <see cref="T:System.Web.Configuration.ProfileSettings" /> object.</summary>
      <returns>The name of the <see cref="T:System.Web.Configuration.ProfileSettings" /> object. The default is an empty string("").</returns>
    </member>
    <member name="T:System.Web.Configuration.ProfileSettingsCollection">
      <summary>Contains a collection of <see cref="T:System.Web.Configuration.ProfileSettings" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.ProfileSettingsCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ProfileSettingsCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.ProfileSettingsCollection.Add(System.Web.Configuration.ProfileSettings)">
      <summary>Adds a <see cref="T:System.Web.Configuration.ProfileSettings" /> object to the collection.</summary>
      <param name="profilesSettings">A <see cref="T:System.Web.Configuration.ProfileSettings" /> object to add to the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Web.Configuration.ProfileSettings" /> object to add already exists in the collection, or the collection is read-only.</exception>
    </member>
    <member name="M:System.Web.Configuration.ProfileSettingsCollection.Clear">
      <summary>Removes all <see cref="T:System.Web.Configuration.ProfileSettings" /> objects from the collection.</summary>
    </member>
    <member name="M:System.Web.Configuration.ProfileSettingsCollection.Contains(System.String)">
      <summary>Indicates whether the collection contains a <see cref="T:System.Web.Configuration.ProfileSettings" /> object with the specified name.</summary>
      <returns>true if the collection contains a <see cref="T:System.Web.Configuration.ProfileSettings" /> object with the specified <paramref name="name" />; otherwise, false.</returns>
      <param name="name">The name of a <see cref="T:System.Web.Configuration.ProfileSettings" /> object in the collection.</param>
    </member>
    <member name="M:System.Web.Configuration.ProfileSettingsCollection.IndexOf(System.String)">
      <summary>Returns the index of the specified <see cref="T:System.Web.Configuration.ProfileSettings" /> object.</summary>
      <returns>The index of the specified <see cref="T:System.Web.Configuration.ProfileSettings" /> object, or -1 if the object is not found in the collection.</returns>
      <param name="name">The name of a <see cref="T:System.Web.Configuration.ProfileSettings" /> object in the collection.</param>
    </member>
    <member name="M:System.Web.Configuration.ProfileSettingsCollection.Insert(System.Int32,System.Web.Configuration.ProfileSettings)">
      <summary>Inserts the specified <see cref="T:System.Web.Configuration.ProfileSettings" /> object at the specified index in the collection.</summary>
      <param name="index">The index of a <see cref="T:System.Web.Configuration.ProfileSettings" /> object in the collection.</param>
      <param name="authorizationSettings">A <see cref="T:System.Web.Configuration.ProfileSettings" /> object to insert into the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Web.Configuration.ProfileSettings" /> object to add already exists in the collection, the index is invalid, or the collection is read-only.</exception>
    </member>
    <member name="P:System.Web.Configuration.ProfileSettingsCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Web.Configuration.ProfileSettings" /> object at the specified numeric index in the collection.</summary>
      <returns>The <see cref="T:System.Web.Configuration.ProfileSettings" /> object at the specified index, or null if there is no object at that index.</returns>
      <param name="index">The index of a <see cref="T:System.Web.Configuration.ProfileSettings" /> object in the collection.</param>
    </member>
    <member name="P:System.Web.Configuration.ProfileSettingsCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.Web.Configuration.ProfileSettings" /> object based on the specified key in the collection.</summary>
      <returns>A <see cref="T:System.Web.Configuration.ProfileSettings" /> object.</returns>
      <param name="key">The name of the <see cref="T:System.Web.Configuration.ProfileSettings" /> object contained in the collection.</param>
    </member>
    <member name="M:System.Web.Configuration.ProfileSettingsCollection.Remove(System.String)">
      <summary>Removes a <see cref="T:System.Web.Configuration.BufferModeSettings" /> object from the collection.</summary>
      <param name="name">The name of a <see cref="T:System.Web.Configuration.ProfileSettings" /> object to remove from the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationException">There is no <see cref="T:System.Web.Configuration.ProfileSettings" /> object with the specified key in the collection, the element has already been removed, or the collection is read-only.</exception>
    </member>
    <member name="M:System.Web.Configuration.ProfileSettingsCollection.RemoveAt(System.Int32)">
      <summary>Removes a <see cref="T:System.Web.Configuration.ProfileSettings" /> object at the specified index location from the collection.</summary>
      <param name="index">The index of a <see cref="T:System.Web.Configuration.ProfileSettings" /> object in the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationException">There is no <see cref="T:System.Web.Configuration.ProfileSettings" /> object at the specified index in the collection, the element has already been removed, or the collection is read-only.</exception>
    </member>
    <member name="T:System.Web.Configuration.ProtocolCollection">
      <summary>Represents a configuration element that contains a collection of protocols.</summary>
    </member>
    <member name="M:System.Web.Configuration.ProtocolCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ProtocolCollection" /> class. </summary>
    </member>
    <member name="M:System.Web.Configuration.ProtocolCollection.Add(System.Web.Configuration.ProtocolElement)">
      <summary>Adds a configuration element to the <see cref="T:System.Web.Configuration.ProtocolCollection" /> instance.</summary>
      <param name="protocolElement">The element to add.</param>
    </member>
    <member name="P:System.Web.Configuration.ProtocolCollection.AllKeys">
      <summary>Gets all the keys of the <see cref="T:System.Web.Configuration.ProtocolCollection" /> instance.</summary>
      <returns>The array that contains the collection keys.</returns>
    </member>
    <member name="M:System.Web.Configuration.ProtocolCollection.Clear">
      <summary>Removes all configuration element objects from the collection.</summary>
    </member>
    <member name="P:System.Web.Configuration.ProtocolCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Web.Configuration.ProtocolElement" /> object at the specified index of the collection.</summary>
      <returns>A <see cref="T:System.Web.Configuration.ProtocolElement" /> object.</returns>
      <param name="index">The index of the <see cref="T:System.Web.Configuration.ProtocolElement" /> object in the <see cref="T:System.Web.Configuration.ProtocolCollection" /> instance.</param>
    </member>
    <member name="P:System.Web.Configuration.ProtocolCollection.Item(System.String)">
      <summary>Gets the value of the first entry with the specified key.</summary>
      <returns>A <see cref="T:System.Web.Configuration.ProtocolElement" /> object that represents the value of the first entry with the specified key, if found; otherwise, null.</returns>
      <param name="name">The key of the entry to get.</param>
    </member>
    <member name="M:System.Web.Configuration.ProtocolCollection.Remove(System.String)">
      <summary>Removes the <see cref="T:System.Web.Configuration.ProtocolElement" /> object that has the specified key from the collection.</summary>
      <param name="name">The key of the <see cref="T:System.Web.Configuration.ProtocolElement" /> object to remove.</param>
    </member>
    <member name="M:System.Web.Configuration.ProtocolCollection.Remove(System.Web.Configuration.ProtocolElement)">
      <summary>Removes the specified <see cref="T:System.Web.Configuration.ProtocolElement" /> object from the collection.</summary>
      <param name="protocolElement">The element to remove.</param>
    </member>
    <member name="M:System.Web.Configuration.ProtocolCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Web.Configuration.ProtocolElement" /> object at the specified index location.</summary>
      <param name="index">The index location of the element to remove. </param>
    </member>
    <member name="T:System.Web.Configuration.ProtocolElement">
      <summary>Represents a protocol element in the Web services configuration file.</summary>
    </member>
    <member name="M:System.Web.Configuration.ProtocolElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ProtocolElement" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.ProtocolElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ProtocolElement" /> class.</summary>
      <param name="name">The protocol name.</param>
    </member>
    <member name="P:System.Web.Configuration.ProtocolElement.AppDomainHandlerType">
      <summary>Gets or sets the application-domain handler type.</summary>
      <returns>The application-domain handler type.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProtocolElement.Name">
      <summary>Gets or sets the name of the protocol element.</summary>
      <returns>The name of the protocol element.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProtocolElement.ProcessHandlerType">
      <summary>Gets or sets the process-handler type.</summary>
      <returns>The process-handler type.</returns>
    </member>
    <member name="P:System.Web.Configuration.ProtocolElement.Validate">
      <summary>Represents the Validate attribute of the protocol element. </summary>
      <returns>The value of the Validate attribute of the protocol element.</returns>
    </member>
    <member name="T:System.Web.Configuration.ProtocolsConfigurationHandler">
      <summary>Represents a configuration handler for protocols.</summary>
    </member>
    <member name="M:System.Web.Configuration.ProtocolsConfigurationHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ProtocolsConfigurationHandler" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.ProtocolsConfigurationHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>Creates a new protocols configuration object.</summary>
      <returns>The new protocols configuration object.</returns>
      <param name="parent">The parent configuration section.</param>
      <param name="configContextObj">The configuration context object.</param>
      <param name="section">The configuration section to create.</param>
    </member>
    <member name="T:System.Web.Configuration.ProtocolsSection">
      <summary>Represents the protocols section of the Web configuration file.</summary>
    </member>
    <member name="M:System.Web.Configuration.ProtocolsSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ProtocolsSection" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.ProtocolsSection.Protocols">
      <summary>Gets the protocols collection of the protocols section.</summary>
      <returns>The protocols collection of the protocols section.</returns>
    </member>
    <member name="T:System.Web.Configuration.ProvidersHelper">
      <summary>Provides methods for creating provider instances, either singly or in a batch.</summary>
    </member>
    <member name="M:System.Web.Configuration.ProvidersHelper.InstantiateProvider(System.Configuration.ProviderSettings,System.Type)">
      <summary>Initializes and returns a single provider of the given type using the supplied settings.</summary>
      <returns>A new provider of the given type using the supplied settings.</returns>
      <param name="providerSettings">The settings to be passed to the provider upon initialization.</param>
      <param name="providerType">The <see cref="T:System.Type" /> of the provider to be initialized.</param>
      <exception cref="T:System.ArgumentException">The provider type defined in configuration was null or an empty string ("").- or -The provider type defined in configuration is not compatible with the type used by the feature that is attempting to create a new instance of the provider.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The provider threw an exception while it was being initialized.- or -An error occurred while attempting to resolve a <see cref="T:System.Type" /> instance for the provider specified in <paramref name="providerSettings" />.</exception>
    </member>
    <member name="M:System.Web.Configuration.ProvidersHelper.InstantiateProviders(System.Configuration.ProviderSettingsCollection,System.Configuration.Provider.ProviderCollection,System.Type)">
      <summary>Initializes a collection of providers of the given type using the supplied settings.</summary>
      <param name="configProviders">A collection of settings to be passed to the provider upon initialization.</param>
      <param name="providers">The collection used to contain the initialized providers after the method returns.</param>
      <param name="providerType">The <see cref="T:System.Type" /> of the providers to be initialized.</param>
    </member>
    <member name="T:System.Web.Configuration.RegexWorker">
      <summary>Used internally at run time by <see cref="T:System.Web.Configuration.BrowserCapabilitiesFactory" /> and <see cref="T:System.Web.Configuration.BrowserCapabilitiesCodeGenerator" /> to parse request data and identify the browser.</summary>
    </member>
    <member name="M:System.Web.Configuration.RegexWorker.#ctor(System.Web.HttpBrowserCapabilities)">
      <summary>Creates a new instance of <see cref="T:System.Web.Configuration.RegexWorker" />.</summary>
      <param name="browserCaps">The <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> object to be configured.</param>
    </member>
    <member name="P:System.Web.Configuration.RegexWorker.Item(System.String)">
      <summary>Accessor to this class.</summary>
      <returns>The internal value associated with the specified<paramref name="key" />.</returns>
      <param name="key">The specified key.</param>
    </member>
    <member name="M:System.Web.Configuration.RegexWorker.ProcessRegex(System.String,System.String)">
      <summary>Used internally at run time to determine whether the specified request-header value matches any of the capabilities of an internal collection of browsers.</summary>
      <returns>true if the specified request-header value matches any of the capabilities of an internal collection of browsers; otherwise, false. The default is false.</returns>
      <param name="target">The capabilities value from an internal collection of browsers.</param>
      <param name="regexExpression">The specified request-header value.</param>
    </member>
    <member name="T:System.Web.Configuration.RemoteWebConfigurationHostServer">
      <summary>Used internally at run time to support accessing configuration data remotely.</summary>
    </member>
    <member name="M:System.Web.Configuration.RemoteWebConfigurationHostServer.#ctor">
      <summary>Used internally at run time to create a new instance of <see cref="T:System.Web.Configuration.RemoteWebConfigurationHostServer" />.</summary>
    </member>
    <member name="M:System.Web.Configuration.RemoteWebConfigurationHostServer.DoEncryptOrDecrypt(System.Boolean,System.String,System.String,System.String,System.String[],System.String[])">
      <summary>Conditionally encrypts or decrypts the value of the string referenced by the <paramref name="xmlString" /> parameter.</summary>
      <returns>A string that contains either the encrypted or decrypted value of <paramref name="xmlString" />.</returns>
      <param name="doEncrypt">true to encrypt; false to decrypt.</param>
      <param name="xmlString">The XML to be encrypted or decrypted.</param>
      <param name="protectionProviderName">The provider used to protect the configuration data.</param>
      <param name="protectionProviderType">The <see cref="T:System.Type" /> of the protection provider.</param>
      <param name="paramKeys">The keys of optional parameters for the protection provider.</param>
      <param name="paramValues">The values of optional parameters for the protection provider.</param>
      <exception cref="T:System.Exception">
        <paramref name="protectionProviderType" /> does not derive from <see cref="T:System.Configuration.ProtectedConfigurationProvider" />.</exception>
    </member>
    <member name="M:System.Web.Configuration.RemoteWebConfigurationHostServer.GetData(System.String,System.Boolean,System.Int64@)">
      <summary>Used internally to support remote access to configuration data.</summary>
      <returns>An array of 8-bit unsigned integers (bytes) that contains the configuration data.</returns>
      <param name="fileName">The path to the remote configuration file to be accessed.</param>
      <param name="getReadTimeOnly">A Boolean value that specifies whether only the <paramref name="readTime" /> is returned.</param>
      <param name="readTime">The time when the file was last accessed.</param>
      <exception cref="T:System.Exception">
        <paramref name="fileName" /> does not point to a file with the .config extension.</exception>
    </member>
    <member name="M:System.Web.Configuration.RemoteWebConfigurationHostServer.GetFileDetails(System.String,System.Boolean@,System.Int64@,System.Int64@,System.Int64@)">
      <summary>Gets the details of the configuration file.</summary>
      <param name="name">The name of the file.</param>
      <param name="exists">true if the file exists; otherwise, false.</param>
      <param name="size">The size of the file.</param>
      <param name="createDate">The date the file was created.</param>
      <param name="lastWriteDate">The date the file was last written.</param>
      <exception cref="T:System.Exception">
        <paramref name="name" /> does not point to a file with the .config extension.</exception>
    </member>
    <member name="M:System.Web.Configuration.RemoteWebConfigurationHostServer.GetFilePaths(System.Int32,System.String,System.String,System.String)">
      <summary>Used internally to support remote access to configuration data.</summary>
      <returns>A concatenated string that represents the file path of the configuration file.</returns>
      <param name="webLevelAsInt">The level of the configuration file.</param>
      <param name="path">The path to the remote configuration file to be accessed.</param>
      <param name="site">The path to the remote computer.</param>
      <param name="locationSubPath">The subpath of the location of the configuration file.</param>
    </member>
    <member name="M:System.Web.Configuration.RemoteWebConfigurationHostServer.WriteData(System.String,System.String,System.Byte[],System.Int64@)">
      <summary>Used internally to support remote access to configuration data.</summary>
      <param name="fileName">The path to the remote configuration file to be accessed.</param>
      <param name="templateFileName">The file to duplicate file attributes from.</param>
      <param name="data">The data to be written.</param>
      <param name="readTime">The time when the file was last accessed.</param>
      <exception cref="T:System.Exception">
        <paramref name="fileName" /> does not point to a file with the .config extension.- or -The file has changed since it was read.- or -The file is hidden or read-only.- or -The method fails to generate a temp file.- or -The method fails to create a <see cref="T:System.IO.FileStream" />.- or -The temp file fails to overwrite the target file.</exception>
    </member>
    <member name="T:System.Web.Configuration.RoleManagerSection">
      <summary>Defines configuration settings that are used to support the role management infrastructure of Web applications. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.RoleManagerSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.RoleManagerSection" /> class by using default settings.</summary>
    </member>
    <member name="P:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie">
      <summary>Gets or sets a value indicating whether the current user's roles are cached in a cookie.</summary>
      <returns>true if the current user's roles are cached in a cookie; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.RoleManagerSection.CookieName">
      <summary>Gets or sets the name of the cookie that is used to cache role names.</summary>
      <returns>The name of the cookie used to cache role names. The default is ".ASPXROLES".</returns>
    </member>
    <member name="P:System.Web.Configuration.RoleManagerSection.CookiePath">
      <summary>Gets or sets the virtual path of the cookie that is used to cache role names.</summary>
      <returns>The path of the cookie used to store role names. The default is "/".</returns>
    </member>
    <member name="P:System.Web.Configuration.RoleManagerSection.CookieProtection">
      <summary>Gets or sets the type of security that is used to protect the cookie that caches role names.</summary>
      <returns>The type of security protection used within the cookie where role names are cached. The default is All.</returns>
    </member>
    <member name="P:System.Web.Configuration.RoleManagerSection.CookieRequireSSL">
      <summary>Gets or sets a value indicating whether the cookie that is used to cache role names requires a Secure Sockets Layer (SSL) connection in order to be returned to the server.</summary>
      <returns>true if an SSL connection is needed in order to return to the server the cookie where role names are cached; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration">
      <summary>Gets or sets a value indicating whether the cookie that is used to cache role names will be reset periodically. </summary>
      <returns>true if the role names cookie expiration date and time will be reset periodically; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.RoleManagerSection.CookieTimeout">
      <summary>Gets or sets the number of minutes before the cookie that is used to cache role names expires.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that is the number of minutes before the cookie used to cache role names expires. The default is 30, in minutes.</returns>
    </member>
    <member name="P:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie">
      <summary>Indicates whether a session-based cookie or a persistent cookie is used to cache role names. </summary>
      <returns>true to make the role names cookie persistent across browser sessions; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.RoleManagerSection.DefaultProvider">
      <summary>Gets or sets the name of the default provider that is used to manage roles. </summary>
      <returns>The name of a provider in the <see cref="P:System.Web.Configuration.RoleManagerSection.Providers" />. The default is "AspNetSqlRoleProvider".</returns>
    </member>
    <member name="P:System.Web.Configuration.RoleManagerSection.Domain">
      <summary>Gets or sets the name of the domain that is associated with the cookie that is used to cache role names. </summary>
      <returns>The <see cref="P:System.Web.HttpCookie.Domain" /> of the cookie used to cache role names. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.Configuration.RoleManagerSection.Enabled">
      <summary>Gets or sets a value indicating whether the ASP.NET role management feature is enabled. </summary>
      <returns>true if the ASP.NET role management feature is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.RoleManagerSection.MaxCachedResults">
      <summary>Gets or sets the maximum number of roles that ASP.NET caches in the role cookie. </summary>
      <returns>A value indicating the maximum number of roles ASP.NET caches in the role cookie. The default is 25.</returns>
    </member>
    <member name="P:System.Web.Configuration.RoleManagerSection.Providers">
      <summary>Gets a <see cref="T:System.Configuration.ProviderSettingsCollection" /> object of <see cref="T:System.Configuration.ProviderSettings" /> elements.</summary>
      <returns>A <see cref="T:System.Configuration.ProviderSettingsCollection" /> that contains the providers settings defined within the providers subsection of the roleManager section of the configuration file.</returns>
    </member>
    <member name="T:System.Web.Configuration.RootProfilePropertySettingsCollection">
      <summary>Acts as the top of a two-level named hierarchy of <see cref="T:System.Web.Configuration.ProfilePropertySettingsCollection" /> collections.</summary>
    </member>
    <member name="M:System.Web.Configuration.RootProfilePropertySettingsCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.RootProfilePropertySettingsCollection" /> class using default settings.</summary>
    </member>
    <member name="M:System.Web.Configuration.RootProfilePropertySettingsCollection.Equals(System.Object)">
      <summary>Compares the current <see cref="T:System.Web.Configuration.RootProfilePropertySettingsCollection" /> object to another A <see cref="T:System.Web.Configuration.RootProfilePropertySettingsCollection" /> object.</summary>
      <returns>true if the passed <see cref="T:System.Web.Configuration.RootProfilePropertySettingsCollection" /> object is equal to the current object; otherwise, false.</returns>
      <param name="rootProfilePropertySettingsCollection">A <see cref="T:System.Web.Configuration.RootProfilePropertySettingsCollection" /> object to compare to.</param>
    </member>
    <member name="M:System.Web.Configuration.RootProfilePropertySettingsCollection.GetHashCode">
      <summary>Generates a hash code for the collection.</summary>
      <returns>Unique integer hash code for the current object.</returns>
    </member>
    <member name="P:System.Web.Configuration.RootProfilePropertySettingsCollection.GroupSettings">
      <summary>Gets a <see cref="T:System.Web.Configuration.ProfileGroupSettingsCollection" /> containing a collection of <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> objects.</summary>
      <returns>A <see cref="T:System.Web.Configuration.ProfileGroupSettingsCollection" /> collection.</returns>
    </member>
    <member name="T:System.Web.Configuration.RuleSettings">
      <summary>Configures the ASP.NET event rules. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.RuleSettings.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.RuleSettings" /> class using default settings; however, the name, event name, and provider are specified.</summary>
      <param name="name">The name of the <see cref="T:System.Web.Configuration.RuleSettings" /> object to create.</param>
      <param name="eventName">The name of the <see cref="T:System.Web.Configuration.EventMappingSettings" /> object this rule applies to.</param>
      <param name="provider">The name of the <see cref="T:System.Configuration.ProviderSettings" /> object this rule applies to.</param>
    </member>
    <member name="M:System.Web.Configuration.RuleSettings.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.RuleSettings" /> class where all values except those of the <see cref="P:System.Web.Configuration.RuleSettings.Custom" /> class are specified.</summary>
      <param name="name">The name of the <see cref="T:System.Web.Configuration.RuleSettings" /> object to create.</param>
      <param name="eventName">The name of the <see cref="T:System.Web.Configuration.EventMappingSettings" /> object this rule applies to.</param>
      <param name="provider">The name of the <see cref="T:System.Configuration.ProviderSettings" /> object this rule applies to.</param>
      <param name="profile">The name of the <see cref="T:System.Web.Configuration.ProfileSettings" /> object this rule applies to.</param>
      <param name="minInstances">The minimum number of occurrences of the same type of event that can occur before the event is raised to the provider. </param>
      <param name="maxLimit">The maximum number of times events of the same type can be raised.</param>
      <param name="minInterval">The minimum time interval between two events of the same type.</param>
    </member>
    <member name="M:System.Web.Configuration.RuleSettings.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.TimeSpan,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.BufferModeSettings" /> class where all values are specified.</summary>
      <param name="name">The name of the <see cref="T:System.Web.Configuration.RuleSettings" /> object to create.</param>
      <param name="eventName">The name of the <see cref="T:System.Web.Configuration.EventMappingSettings" /> object this rule applies to.</param>
      <param name="provider">The name of the <see cref="T:System.Configuration.ProviderSettings" /> object this rule applies to.</param>
      <param name="profile">The name of the <see cref="T:System.Web.Configuration.ProfileSettings" /> object this rule applies to.</param>
      <param name="minInstances">The minimum number of occurrences of an event of the same type before the event is fired to the provider. </param>
      <param name="maxLimit">The maximum number of times events of the same type are fired.</param>
      <param name="minInterval">The minimum time interval between two events of the same type.</param>
      <param name="custom">The fully qualified type of a custom class that implements <see cref="T:System.Web.Management.IWebEventCustomEvaluator" />.</param>
    </member>
    <member name="P:System.Web.Configuration.RuleSettings.Custom">
      <summary>Gets or sets the fully qualified type of a custom class that implements <see cref="T:System.Web.Management.IWebEventCustomEvaluator" />.</summary>
      <returns>The fully qualified type of a custom class that implements <see cref="T:System.Web.Management.IWebEventCustomEvaluator" />.</returns>
    </member>
    <member name="P:System.Web.Configuration.RuleSettings.EventName">
      <summary>Gets or sets the name of the <see cref="T:System.Web.Configuration.EventMappingSettings" /> object this rule applies to.</summary>
      <returns>The name of the <see cref="T:System.Web.Configuration.EventMappingSettings" /> object this rule applies to.</returns>
    </member>
    <member name="P:System.Web.Configuration.RuleSettings.MaxLimit">
      <summary>Gets or sets the maximum number of times events of the same type are raised.</summary>
      <returns>The maximum number of times events of the same type are raised. The default value is <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="P:System.Web.Configuration.RuleSettings.MinInstances">
      <summary>Gets or sets the minimum number of occurrences of the same type of event before the event is raised to the provider.</summary>
      <returns>The minimum number of occurrences of the same type of event before the event is raised to the provider. The default value is 1.</returns>
    </member>
    <member name="P:System.Web.Configuration.RuleSettings.MinInterval">
      <summary>Gets or sets the minimum time interval between two events of the same type.</summary>
      <returns>The minimum time interval between two events of the same type. The default value is 0 ticks.</returns>
    </member>
    <member name="P:System.Web.Configuration.RuleSettings.Name">
      <summary>Gets or sets the name of the <see cref="T:System.Web.Configuration.RuleSettings" /> object.</summary>
      <returns>The name of the <see cref="T:System.Web.Configuration.RuleSettings" /> object. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.Configuration.RuleSettings.Profile">
      <summary>Gets or sets the name of the <see cref="T:System.Web.Configuration.ProfileSettings" /> object this rule applies to.</summary>
      <returns>The name of the <see cref="T:System.Web.Configuration.ProfileSettings" /> object this rule applies to.</returns>
    </member>
    <member name="P:System.Web.Configuration.RuleSettings.Provider">
      <summary>Gets or sets the name of the <see cref="T:System.Configuration.ProviderSettings" /> object this rule applies to.</summary>
      <returns>The name of the <see cref="T:System.Configuration.ProviderSettings" /> object this rule applies to.</returns>
    </member>
    <member name="T:System.Web.Configuration.RuleSettingsCollection">
      <summary>A collection of <see cref="T:System.Web.Configuration.RuleSettings" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.RuleSettingsCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.RuleSettingsCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.RuleSettingsCollection.Add(System.Web.Configuration.RuleSettings)">
      <summary>Adds a <see cref="T:System.Web.Configuration.RuleSettings" /> object to the collection.</summary>
      <param name="ruleSettings">A <see cref="T:System.Web.Configuration.RuleSettings" /> object to add to the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Web.Configuration.RuleSettings" /> object to add already exists in the collection or the collection is read-only.</exception>
    </member>
    <member name="M:System.Web.Configuration.RuleSettingsCollection.Clear">
      <summary>Removes all <see cref="T:System.Web.Configuration.RuleSettings" /> objects from the collection.</summary>
    </member>
    <member name="M:System.Web.Configuration.RuleSettingsCollection.Contains(System.String)">
      <summary>Returns true if the collection contains a <see cref="T:System.Web.Configuration.RuleSettings" /> object with the specified name.</summary>
      <returns>true if the collection contains a <see cref="T:System.Web.Configuration.RuleSettings" /> object with the specified name; otherwise, false.</returns>
      <param name="name">The name of a <see cref="T:System.Web.Configuration.RuleSettings" /> object in the collection.</param>
    </member>
    <member name="M:System.Web.Configuration.RuleSettingsCollection.IndexOf(System.String)">
      <summary>Finds the index of a <see cref="T:System.Web.Configuration.RuleSettings" /> object in the collection with the specified name.</summary>
      <returns>The index of a <see cref="T:System.Web.Configuration.RuleSettings" /> object in the collection with the specified name.</returns>
      <param name="name">The name of a <see cref="T:System.Web.Configuration.RuleSettings" /> object in the collection.</param>
    </member>
    <member name="M:System.Web.Configuration.RuleSettingsCollection.Insert(System.Int32,System.Web.Configuration.RuleSettings)">
      <summary>Adds the specified <see cref="T:System.Web.Configuration.RuleSettings" /> object to the specified index point in the collection.</summary>
      <param name="index">A valid index of a <see cref="T:System.Web.Configuration.RuleSettings" /> object in the collection.</param>
      <param name="eventSettings">The <see cref="T:System.Web.Configuration.RuleSettings" /> object to insert into the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Web.Configuration.RuleSettings" /> object to add already exists in the collection, the index is invalid, or the collection is read only.</exception>
    </member>
    <member name="P:System.Web.Configuration.RuleSettingsCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Web.Configuration.RuleSettings" /> object at the specified numeric index.</summary>
      <returns>The <see cref="T:System.Web.Configuration.RuleSettings" /> object at the specified index.</returns>
      <param name="index">The index of a <see cref="T:System.Web.Configuration.RuleSettings" /> object in the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Index is out of range.</exception>
    </member>
    <member name="P:System.Web.Configuration.RuleSettingsCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.Web.Configuration.RuleSettings" /> object based on the specified key in the collection.</summary>
      <returns>A <see cref="T:System.Web.Configuration.RuleSettings" /> object.</returns>
      <param name="key">The name of the <see cref="T:System.Web.Configuration.RuleSettings" /> object contained in the collection.</param>
    </member>
    <member name="M:System.Web.Configuration.RuleSettingsCollection.Remove(System.String)">
      <summary>Removes a <see cref="T:System.Web.Configuration.RuleSettings" /> object from the collection.</summary>
      <param name="name">The name of a <see cref="T:System.Web.Configuration.RuleSettings" /> object in the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationException">There is no <see cref="T:System.Web.Configuration.RuleSettings" /> object with the specified key in the collection, the element has already been removed, or the collection is read-only.</exception>
    </member>
    <member name="M:System.Web.Configuration.RuleSettingsCollection.RemoveAt(System.Int32)">
      <summary>Removes a <see cref="T:System.Web.Configuration.RuleSettings" /> object at the specified index location from the collection.</summary>
      <param name="index">A valid index of a <see cref="T:System.Web.Configuration.RuleSettings" /> object in the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationException">There is no <see cref="T:System.Web.Configuration.RuleSettings" /> object at the specified index in the collection, the element has already been removed, or the collection is read-only.</exception>
    </member>
    <member name="T:System.Web.Configuration.SecurityPolicySection">
      <summary>Defines configuration settings that are used to support the security infrastructure of a Web application. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.SecurityPolicySection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.SecurityPolicySection" /> class by using default settings.</summary>
    </member>
    <member name="P:System.Web.Configuration.SecurityPolicySection.TrustLevels">
      <summary>Gets the <see cref="P:System.Web.Configuration.SecurityPolicySection.TrustLevels" /> collection.</summary>
      <returns>A collection of <see cref="P:System.Web.Configuration.SecurityPolicySection.TrustLevels" /> objects. </returns>
    </member>
    <member name="T:System.Web.Configuration.SerializationMode">
      <summary>Determines the serialization method used for a <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> object.</summary>
    </member>
    <member name="F:System.Web.Configuration.SerializationMode.String">
      <summary>The <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> object is serialized to a simple string.</summary>
    </member>
    <member name="F:System.Web.Configuration.SerializationMode.Xml">
      <summary>The profile <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> is serialized as XML using XML serialization.</summary>
    </member>
    <member name="F:System.Web.Configuration.SerializationMode.Binary">
      <summary>The <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> object is serialized using binary serialization.</summary>
    </member>
    <member name="F:System.Web.Configuration.SerializationMode.ProviderSpecific">
      <summary>The provider has implicit knowledge of the type and is responsible for deciding how to serialize the <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> object into the data store.</summary>
    </member>
    <member name="T:System.Web.Configuration.SessionPageStateSection">
      <summary>Configures the sessionPageState section. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Web.Configuration.SessionPageStateSection.#ctor">
      <summary>Creates a new instance of <see cref="T:System.Web.Configuration.SessionPageStateSection" />.</summary>
    </member>
    <member name="F:System.Web.Configuration.SessionPageStateSection.DefaultHistorySize">
      <summary>Defines the size of the page history.</summary>
    </member>
    <member name="P:System.Web.Configuration.SessionPageStateSection.HistorySize">
      <summary>Gets or sets the size of the page history.</summary>
      <returns>The size of the page history.</returns>
    </member>
    <member name="T:System.Web.Configuration.SessionStateSection">
      <summary>Configures the session state for a Web application.</summary>
    </member>
    <member name="M:System.Web.Configuration.SessionStateSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.SessionStateSection" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.SessionStateSection.AllowCustomSqlDatabase">
      <summary>Gets or sets a value indicating whether the user can specify the initial catalog value in the <see cref="P:System.Web.Configuration.SessionStateSection.SqlConnectionString" /> property.</summary>
      <returns>true if the user is allowed to specify the catalog; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.SessionStateSection.CompressionEnabled">
      <summary>Gets or sets a value that indicates whether compression is enabled for session-state data.</summary>
      <returns>true if compression is enabled; otherwise false. The default is false. </returns>
    </member>
    <member name="P:System.Web.Configuration.SessionStateSection.Cookieless">
      <summary>Gets or sets a value indicating whether cookies are used to identify client sessions.</summary>
      <returns>true if all requests are treated as cookieless, or false if no requests are treated as cookieless, or one of the <see cref="T:System.Web.HttpCookieMode" /> values. The default value in ASP.NET version 2.0 is <see cref="F:System.Web.HttpCookieMode.AutoDetect" />. In earlier versions, the default value was false.</returns>
    </member>
    <member name="P:System.Web.Configuration.SessionStateSection.CookieName">
      <summary>Gets or sets the cookie name.</summary>
      <returns>The name of the HTTP cookie to use for session identification.</returns>
    </member>
    <member name="P:System.Web.Configuration.SessionStateSection.CustomProvider">
      <summary>Gets or sets the name of the custom provider from the <see cref="P:System.Web.Configuration.SessionStateSection.Providers" /> collection.</summary>
      <returns>The custom provider name.</returns>
    </member>
    <member name="P:System.Web.Configuration.SessionStateSection.Mode">
      <summary>Gets or sets a value specifying where to store the session state.</summary>
      <returns>One of the <see cref="T:System.Web.SessionState.SessionStateMode" /> values. The default value is <see cref="F:System.Web.SessionState.SessionStateMode.InProc" />.</returns>
    </member>
    <member name="P:System.Web.Configuration.SessionStateSection.PartitionResolverType">
      <summary>Gets or sets a value specifying where to store the session state.</summary>
      <returns>A value specifying where to store the session state, or an empty string ("").</returns>
    </member>
    <member name="P:System.Web.Configuration.SessionStateSection.Providers">
      <summary>Gets the current <see cref="T:System.Configuration.ProviderSettingsCollection" /> providers.</summary>
      <returns>The collection containing the <see cref="T:System.Web.Configuration.SessionStateSection" /> providers.</returns>
    </member>
    <member name="P:System.Web.Configuration.SessionStateSection.RegenerateExpiredSessionId">
      <summary>Gets or sets a value indicating whether the session Id will be re-issued when an expired session ID is specified by the client.</summary>
      <returns>true if the session ID must be regenerated; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.SessionStateSection.SessionIDManagerType">
      <summary>Gets or sets a value specifying the fully qualified type of session ID Manager.</summary>
      <returns>A fully qualified type of session ID Manager.</returns>
    </member>
    <member name="P:System.Web.Configuration.SessionStateSection.SqlCommandTimeout">
      <summary>Gets or sets the duration time-out for the SQL commands using the SQL Server session state mode.</summary>
      <returns>The amount of time, in seconds, after which a SQL command will time out. The default is 30 seconds.</returns>
    </member>
    <member name="P:System.Web.Configuration.SessionStateSection.SqlConnectionRetryInterval">
      <summary>Gets or sets the time interval that should elapse before ASP.NET reconnects to the database.</summary>
      <returns>The time interval that should elapse before ASP.NET reconnects to the database.</returns>
    </member>
    <member name="P:System.Web.Configuration.SessionStateSection.SqlConnectionString">
      <summary>Gets or sets the SQL connection string.</summary>
      <returns>The SQL connection string. Its default value is the generic string: "data source=127.0.0.1;Integrated Security=SSPI"</returns>
    </member>
    <member name="P:System.Web.Configuration.SessionStateSection.StateConnectionString">
      <summary>Gets or sets the state server connection string.</summary>
      <returns>The state server connection string.</returns>
    </member>
    <member name="P:System.Web.Configuration.SessionStateSection.StateNetworkTimeout">
      <summary>Gets or sets the amount of time the network connection between the Web server and the state server can remain idle. </summary>
      <returns>The time, in seconds, that the network connection between the Web server and the state server can remain idle before the session is abandoned. The default value is 10 seconds.</returns>
    </member>
    <member name="P:System.Web.Configuration.SessionStateSection.Timeout">
      <summary>Gets or sets the session time-out</summary>
      <returns>The session time-out, in minutes. The default value is 20 minutes.</returns>
    </member>
    <member name="P:System.Web.Configuration.SessionStateSection.UseHostingIdentity">
      <summary>Gets or sets a value specifying the whether the session state will use client impersonation when available, or will always revert to the hosting identity.</summary>
      <returns>true if Web application should revert to hosting identity; otherwise, false. The default value is true.</returns>
    </member>
    <member name="T:System.Web.Configuration.SiteMapSection">
      <summary>Defines configuration settings that are used to support the infrastructure for configuring, storing, and rendering site navigation. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.SiteMapSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.SiteMapSection" /> class by using default settings.</summary>
    </member>
    <member name="P:System.Web.Configuration.SiteMapSection.DefaultProvider">
      <summary>Gets or sets the name of the default navigation provider. </summary>
      <returns>The name of a provider in the <see cref="P:System.Web.Configuration.SiteMapSection.Providers" /> property or a <see cref="F:System.String.Empty" /> field. The default is "AspNetXmlSiteMapProvider".</returns>
    </member>
    <member name="P:System.Web.Configuration.SiteMapSection.Enabled">
      <summary>Gets or sets a value indicating whether the ASP.NET site map feature is enabled.</summary>
      <returns>true if the ASP.NET site map feature is enabled; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.SiteMapSection.Providers">
      <summary>Gets a <see cref="T:System.Configuration.ProviderSettingsCollection" /> collection of <see cref="T:System.Configuration.ProviderSettings" /> objects.</summary>
      <returns>A <see cref="T:System.Configuration.ProviderSettingsCollection" /> that contains the providers settings defined within the providers subsection of the siteMap section of the configuration file.</returns>
    </member>
    <member name="T:System.Web.Configuration.SqlCacheDependencyDatabase">
      <summary>Configures the SQL cache dependencies databases for an ASP.NET application. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Web.Configuration.SqlCacheDependencyDatabase.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> class with the passed parameters.</summary>
      <param name="name">A string that specifies the name used by <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> to identify the database.</param>
      <param name="connectionStringName">A string that specifies the name of the connection string in the connectionStrings section to use to connect to this database.</param>
    </member>
    <member name="M:System.Web.Configuration.SqlCacheDependencyDatabase.#ctor(System.String,System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> class. </summary>
      <param name="name">A string that specifies the name used by <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> to identify the database.</param>
      <param name="connectionStringName">A string that specifies the name of the connection string in the connectionStrings section to use to connect to this database.</param>
      <param name="pollTime">The database polling time, in milliseconds. </param>
    </member>
    <member name="P:System.Web.Configuration.SqlCacheDependencyDatabase.ConnectionStringName">
      <summary>Gets or sets the connection name for the database.</summary>
      <returns>A string that specifies the name of a database connection string within the connectionStrings configuration section.</returns>
    </member>
    <member name="P:System.Web.Configuration.SqlCacheDependencyDatabase.Name">
      <summary>Gets or sets the name of the database. </summary>
      <returns>A string that specifies the name used by <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> to identify the database.</returns>
    </member>
    <member name="P:System.Web.Configuration.SqlCacheDependencyDatabase.PollTime">
      <summary>Gets or sets the frequency with which the <see cref="T:System.Web.Caching.SqlCacheDependency" /> polls the database table for changes.</summary>
      <returns>The database polling time, in milliseconds. </returns>
    </member>
    <member name="T:System.Web.Configuration.SqlCacheDependencyDatabaseCollection">
      <summary>Represents a collection of <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.SqlCacheDependencyDatabaseCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabaseCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.SqlCacheDependencyDatabaseCollection.Add(System.Web.Configuration.SqlCacheDependencyDatabase)">
      <summary>Adds a <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> object to the collection.</summary>
      <param name="name">The name of the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> object to add to the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> object already exists in the collection or the collection is read only.</exception>
    </member>
    <member name="P:System.Web.Configuration.SqlCacheDependencyDatabaseCollection.AllKeys">
      <summary>Gets the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabaseCollection" /> keys.</summary>
      <returns>The string array containing the collection keys.</returns>
    </member>
    <member name="M:System.Web.Configuration.SqlCacheDependencyDatabaseCollection.Clear">
      <summary>Removes all the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> objects from the collection.</summary>
    </member>
    <member name="M:System.Web.Configuration.SqlCacheDependencyDatabaseCollection.Get(System.Int32)">
      <summary>Returns the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabaseCollection" /> element at the specified index.</summary>
      <returns>The <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabaseCollection" /> element at the specified index.</returns>
      <param name="index">The index of the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabaseCollection" /> element to retrieve.</param>
    </member>
    <member name="M:System.Web.Configuration.SqlCacheDependencyDatabaseCollection.Get(System.String)">
      <summary>Returns the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabaseCollection" /> element with the specified name.</summary>
      <returns>The <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabaseCollection" /> element with the specified name.</returns>
      <param name="name">The name of the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabaseCollection" /> element to retrieve.</param>
    </member>
    <member name="M:System.Web.Configuration.SqlCacheDependencyDatabaseCollection.GetKey(System.Int32)">
      <summary>Returns the key for the element located at the specified index in the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabaseCollection" />.</summary>
      <returns>The key at the specified index.</returns>
      <param name="index">The index of the key to return.</param>
    </member>
    <member name="P:System.Web.Configuration.SqlCacheDependencyDatabaseCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> object at the specified index.</summary>
      <returns>The <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> object at the specified index.</returns>
      <param name="index">The collection index of the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> object.</param>
    </member>
    <member name="P:System.Web.Configuration.SqlCacheDependencyDatabaseCollection.Item(System.String)">
      <summary>Gets or sets the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> object with the specified name.</summary>
      <returns>The <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> object with the specified name.</returns>
      <param name="name">The name of the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> object.</param>
    </member>
    <member name="M:System.Web.Configuration.SqlCacheDependencyDatabaseCollection.Remove(System.String)">
      <summary>Removes the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabaseCollection" /> object with the specified name from the collection.</summary>
      <param name="name">The name of the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> object to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Configuration.SqlCacheDependencyDatabaseCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabaseCollection" /> object at the specified index from the collection.</summary>
      <param name="index">The index of the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> object to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Configuration.SqlCacheDependencyDatabaseCollection.Set(System.Web.Configuration.SqlCacheDependencyDatabase)">
      <summary>Resets a specified <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> object that exists within the collection. </summary>
      <param name="user">The <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> element to reset. </param>
      <exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Web.Configuration.OutputCacheProfileCollection" /> is read-only or already exists.</exception>
    </member>
    <member name="T:System.Web.Configuration.SqlCacheDependencySection">
      <summary>Configures the SQL cache dependencies for an ASP.NET application. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Web.Configuration.SqlCacheDependencySection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.SqlCacheDependencySection" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.SqlCacheDependencySection.Databases">
      <summary>Gets the collection of <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> objects stored within the <see cref="T:System.Web.Configuration.SqlCacheDependencySection" />.</summary>
      <returns>A <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabaseCollection" /> of <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> objects</returns>
    </member>
    <member name="P:System.Web.Configuration.SqlCacheDependencySection.Enabled">
      <summary>Gets or sets a value indicating whether the database table should be monitored for changes.</summary>
      <returns>true if SQL cache monitoring is enabled; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.SqlCacheDependencySection.PollTime">
      <summary>Gets or sets the frequency with which the <see cref="T:System.Web.Caching.SqlCacheDependency" /> polls the database table for changes.</summary>
      <returns>The SQL cache dependency polling time, in milliseconds. The default is 500.</returns>
    </member>
    <member name="T:System.Web.Configuration.SystemWebCachingSectionGroup">
      <summary>Configures the caching group within a configuration file. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Web.Configuration.SystemWebCachingSectionGroup.#ctor">
      <summary>Creates a new instance of <see cref="T:System.Web.Configuration.SystemWebCachingSectionGroup" />.</summary>
    </member>
    <member name="P:System.Web.Configuration.SystemWebCachingSectionGroup.Cache">
      <summary>Gets the cache section contained within the configuration.</summary>
      <returns>The <see cref="T:System.Web.Configuration.CacheSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebCachingSectionGroup.OutputCache">
      <summary>Gets the outputCache section contained within the configuration.</summary>
      <returns>The <see cref="T:System.Web.Configuration.OutputCacheSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebCachingSectionGroup.OutputCacheSettings">
      <summary>Gets the outputCacheSettings section contained within the configuration.</summary>
      <returns>The <see cref="T:System.Web.Configuration.OutputCacheSettingsSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebCachingSectionGroup.SqlCacheDependency">
      <summary>Gets the sqlCacheDependency section contained within the configuration.</summary>
      <returns>The <see cref="T:System.Web.Configuration.SqlCacheDependencySection" /> object.</returns>
    </member>
    <member name="T:System.Web.Configuration.SystemWebSectionGroup">
      <summary>Allows the user to programmatically access the system.web group of the configuration file. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.SystemWebSectionGroup.#ctor">
      <summary>Creates a new instance of <see cref="T:System.Web.Configuration.SystemWebSectionGroup" />.</summary>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.AnonymousIdentification">
      <summary>Gets the anonymousIdentification section.</summary>
      <returns>The <see cref="T:System.Web.Configuration.AnonymousIdentificationSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.Authentication">
      <summary>Gets the authentication section.</summary>
      <returns>The <see cref="T:System.Web.Configuration.AuthenticationSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.Authorization">
      <summary>Gets the authorization section.</summary>
      <returns>The <see cref="T:System.Web.Configuration.AuthorizationSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.BrowserCaps">
      <summary>Gets the browserCaps section.</summary>
      <returns>The <see cref="T:System.Configuration.DefaultSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.ClientTarget">
      <summary>Gets the clientTarget section.</summary>
      <returns>The <see cref="T:System.Web.Configuration.ClientTargetSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.Compilation">
      <summary>Gets the compilation section.</summary>
      <returns>The <see cref="T:System.Web.Configuration.CompilationSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.CustomErrors">
      <summary>Gets the customErrors section.</summary>
      <returns>The <see cref="T:System.Web.Configuration.CustomErrorsSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.Deployment">
      <summary>Gets the deployment section.</summary>
      <returns>The <see cref="T:System.Web.Configuration.DeploymentSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.DeviceFilters">
      <summary>Gets the deviceFilters section.</summary>
      <returns>The <see cref="T:System.Configuration.DefaultSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.FullTrustAssemblies">
      <summary>Gets the FullTrustAssemblies section of the configuration file. </summary>
      <returns>The FullTrustAssemblies section of the configuration file.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.Globalization">
      <summary>Gets the globalization section.</summary>
      <returns>The <see cref="T:System.Web.Configuration.GlobalizationSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.HealthMonitoring">
      <summary>Gets the healthMonitoring section.</summary>
      <returns>The <see cref="T:System.Web.Configuration.HealthMonitoringSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.HostingEnvironment">
      <summary>Gets the hostingEnvironment section.</summary>
      <returns>The <see cref="T:System.Web.Configuration.HostingEnvironmentSection" /> object refers to the hostingEnvironment section of the configuration file. </returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.HttpCookies">
      <summary>Gets the httpCookies section.</summary>
      <returns>The <see cref="T:System.Web.Configuration.HttpCookiesSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.HttpHandlers">
      <summary>Gets the httpHandlers section.</summary>
      <returns>The <see cref="T:System.Web.Configuration.HttpHandlersSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.HttpModules">
      <summary>Gets the httpModules section.</summary>
      <returns>The <see cref="T:System.Web.Configuration.HttpModulesSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.HttpRuntime">
      <summary>Gets the httpRuntime section.</summary>
      <returns>The <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.Identity">
      <summary>Gets the identity section.</summary>
      <returns>The <see cref="T:System.Web.Configuration.IdentitySection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.MachineKey">
      <summary>Gets the machineKey section.</summary>
      <returns>The <see cref="T:System.Web.Configuration.MachineKeySection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.Membership">
      <summary>Gets the membership section.</summary>
      <returns>The <see cref="T:System.Web.Configuration.MembershipSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.MobileControls">
      <summary>Gets the mobileControls section.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationSection" /> object refers to the mobileControls section of the configuration file.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.Pages">
      <summary>Gets the pages section.</summary>
      <returns>The <see cref="T:System.Web.Configuration.PagesSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.PartialTrustVisibleAssemblies">
      <summary>Gets the PartialTrustVisibleAssemblies section of the configuration file. </summary>
      <returns>The PartialTrustVisibleAssemblies section of the configuration file.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.ProcessModel">
      <summary>Gets the processModel section.</summary>
      <returns>The <see cref="T:System.Web.Configuration.ProcessModelSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.Profile">
      <summary>Gets the profile section.</summary>
      <returns>The <see cref="T:System.Web.Configuration.ProfileSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.Protocols">
      <summary>Gets the protocols section.</summary>
      <returns>The <see cref="T:System.Configuration.DefaultSection" /> object refers to the protocols section of the configuration file. </returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.RoleManager">
      <summary>Gets the roleManager section.</summary>
      <returns>The <see cref="T:System.Web.Configuration.RoleManagerSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.SecurityPolicy">
      <summary>Gets the securityPolicy section.</summary>
      <returns>The <see cref="T:System.Web.Configuration.SecurityPolicySection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.SessionState">
      <summary>Gets the sessionState section.</summary>
      <returns>The <see cref="T:System.Web.Configuration.SessionStateSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.SiteMap">
      <summary>Gets the siteMap section.</summary>
      <returns>The <see cref="T:System.Web.Configuration.SiteMapSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.Trace">
      <summary>Gets the trace section.</summary>
      <returns>The <see cref="T:System.Web.Configuration.TraceSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.Trust">
      <summary>Gets the trust section.</summary>
      <returns>The <see cref="T:System.Web.Configuration.TrustSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.UrlMappings">
      <summary>Gets the urlMappings section.</summary>
      <returns>The <see cref="T:System.Web.Configuration.UrlMappingsSection" /> object refers to the urlMappings section of the configuration file. </returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.WebControls">
      <summary>Gets the webControls section.</summary>
      <returns>The <see cref="T:System.Web.Configuration.WebControlsSection" /> object refers to the webControls section of the configuration file. </returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.WebParts">
      <summary>Gets the webParts section.</summary>
      <returns>The <see cref="T:System.Web.Configuration.WebPartsSection" /> object refers to the webParts section of the configuration file.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.WebServices">
      <summary>Gets the webServices section.</summary>
      <returns>The <see cref="T:System.Web.Services.Configuration.WebServicesSection" /> object refers to the webServices section of the configuration file.</returns>
    </member>
    <member name="P:System.Web.Configuration.SystemWebSectionGroup.XhtmlConformance">
      <summary>Gets the xhtmlConformance section.</summary>
      <returns>The <see cref="T:System.Web.Configuration.XhtmlConformanceSection" /> object refers to the xhtmlConformance section of the configuration file. </returns>
    </member>
    <member name="T:System.Web.Configuration.TagMapCollection">
      <summary>Contains a collection of <see cref="T:System.Web.Configuration.TagMapInfo" /> objects. </summary>
    </member>
    <member name="M:System.Web.Configuration.TagMapCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.TagMapCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.TagMapCollection.Add(System.Web.Configuration.TagMapInfo)">
      <summary>Adds a <see cref="T:System.Web.Configuration.TagMapInfo" /> object to the collection.</summary>
      <param name="tagMapInformation">A <see cref="T:System.Web.Configuration.TagMapInfo" /> object to add to the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Web.Configuration.TagMapInfo" /> object to add already exists in the collection.- or -The collection is read-only. </exception>
    </member>
    <member name="M:System.Web.Configuration.TagMapCollection.Clear">
      <summary>Clears all object from the collection.</summary>
    </member>
    <member name="P:System.Web.Configuration.TagMapCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Web.Configuration.TagMapInfo" /> object at the specified index location.</summary>
      <returns>The <see cref="T:System.Web.Configuration.TagMapInfo" /> object at the specified index, or null if there is no object at that index.</returns>
      <param name="index">The index of a <see cref="T:System.Web.Configuration.TagMapInfo" /> object in the collection.</param>
    </member>
    <member name="M:System.Web.Configuration.TagMapCollection.Remove(System.Web.Configuration.TagMapInfo)">
      <summary>Removes the specified object from the collection.</summary>
      <param name="tagMapInformation">A <see cref="T:System.Web.Configuration.TagMapInfo" /> object in the collection.</param>
    </member>
    <member name="T:System.Web.Configuration.TagMapInfo">
      <summary>Contains a single configuration tag remapping statement. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.TagMapInfo.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.TagMapInfo" /> class based on the passed property values.</summary>
      <param name="tagTypeName">The fully qualified name of the type for the tag that is being remapped.</param>
      <param name="mappedTagTypeName">The name of the type to which the tag is remapped, along with the supporting details.</param>
    </member>
    <member name="M:System.Web.Configuration.TagMapInfo.Equals(System.Object)">
      <summary>Compares this instance to another object.</summary>
      <returns>true if the objects are identical; otherwise, false.</returns>
      <param name="o">Object to compare.</param>
    </member>
    <member name="M:System.Web.Configuration.TagMapInfo.GetHashCode">
      <summary>Returns a hash value for the current instance.</summary>
      <returns>A hash value for the current instance.</returns>
    </member>
    <member name="P:System.Web.Configuration.TagMapInfo.MappedTagType">
      <summary>Gets or sets the name of the type to which the tag is remapped.</summary>
      <returns>The name of the type to which the tag is remapped. The default is an empty string.</returns>
    </member>
    <member name="P:System.Web.Configuration.TagMapInfo.TagType">
      <summary>Gets or sets the name of the original type for the tag that is being remapped.</summary>
      <returns>The name of the original type for the tag that is being remapped. </returns>
    </member>
    <member name="T:System.Web.Configuration.TagPrefixCollection">
      <summary>Contains a collection of <see cref="T:System.Web.Configuration.TagPrefixInfo" /> objects.</summary>
    </member>
    <member name="M:System.Web.Configuration.TagPrefixCollection.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.Configuration.TagPrefixCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.TagPrefixCollection.Add(System.Web.Configuration.TagPrefixInfo)">
      <summary>Adds a <see cref="T:System.Web.Configuration.TagPrefixInfo" /> object to the collection.</summary>
      <param name="tagPrefixInformation">The <see cref="T:System.Web.Configuration.TagPrefixInfo" /> object to add to the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Web.Configuration.TagPrefixInfo" /> object to add already exists in the collection.- or -The collection is read-only. </exception>
    </member>
    <member name="M:System.Web.Configuration.TagPrefixCollection.Clear">
      <summary>Clears all object from the collection.</summary>
    </member>
    <member name="P:System.Web.Configuration.TagPrefixCollection.CollectionType">
      <summary>Gets the type of the configuration collection.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> object of the collection.</returns>
    </member>
    <member name="P:System.Web.Configuration.TagPrefixCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Web.Configuration.TagPrefixInfo" /> object at the specified index location.</summary>
      <returns>The <see cref="T:System.Web.Configuration.TagPrefixInfo" /> object at the specified index, or null if there is no object at that index.</returns>
      <param name="index">The index of a <see cref="T:System.Web.Configuration.TagPrefixInfo" /> object in the collection.</param>
    </member>
    <member name="M:System.Web.Configuration.TagPrefixCollection.Remove(System.Web.Configuration.TagPrefixInfo)">
      <summary>Removes the specified object from the collection.</summary>
      <param name="tagPrefixInformation">A <see cref="T:System.Web.Configuration.TagPrefixInfo" /> object in the collection.</param>
    </member>
    <member name="T:System.Web.Configuration.TagPrefixInfo">
      <summary>Defines a configuration element containing tag-related information.</summary>
    </member>
    <member name="M:System.Web.Configuration.TagPrefixInfo.#ctor(System.String,System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.TagPrefixInfo" /> class using the passed values.</summary>
      <param name="tagPrefix">The tag prefix being mapped to a source file or namespace and assembly. </param>
      <param name="nameSpace">The namespace associated with the tag prefix.</param>
      <param name="assembly">The assembly where the namespace resides.</param>
      <param name="tagName">The name of the control to be used in the page.</param>
      <param name="source">The name of the file that contains the user control.</param>
    </member>
    <member name="P:System.Web.Configuration.TagPrefixInfo.Assembly">
      <summary>Gets or sets the name of the assembly containing the control implementation.</summary>
      <returns>The name of the assembly (without an extension). The default is an empty string.</returns>
    </member>
    <member name="M:System.Web.Configuration.TagPrefixInfo.Equals(System.Object)">
      <summary>Compares this instance to another object.</summary>
      <returns>true if the objects are identical; otherwise, false.</returns>
      <param name="prefix">Object to compare.</param>
    </member>
    <member name="M:System.Web.Configuration.TagPrefixInfo.GetHashCode">
      <summary>Returns a hash value for the current instance.</summary>
      <returns>A hash value for the current instance.</returns>
    </member>
    <member name="P:System.Web.Configuration.TagPrefixInfo.Namespace">
      <summary>Gets or sets the namespace in which the control resides.</summary>
      <returns>The name of the namespace. The default is an empty string.</returns>
    </member>
    <member name="P:System.Web.Configuration.TagPrefixInfo.Source">
      <summary>Gets or sets the name and path of the file containing the user control.</summary>
      <returns>The name and path of the file containing the user control.</returns>
    </member>
    <member name="P:System.Web.Configuration.TagPrefixInfo.TagName">
      <summary>Gets or sets the name of the user control.</summary>
      <returns>The name of the user control.</returns>
    </member>
    <member name="P:System.Web.Configuration.TagPrefixInfo.TagPrefix">
      <summary>Gets or sets the tag prefix that is being associated with a source file or namespace and assembly. </summary>
      <returns>The tag prefix. </returns>
    </member>
    <member name="T:System.Web.Configuration.TicketCompatibilityMode">
      <summary>Defines whether to use Coordinated Universal Time (UTC) or local time for the ticket expiration date for forms authentication.</summary>
    </member>
    <member name="F:System.Web.Configuration.TicketCompatibilityMode.Framework20">
      <summary>Specifies that the ticket expiration date is stored as local time. This is the default value.</summary>
    </member>
    <member name="F:System.Web.Configuration.TicketCompatibilityMode.Framework40">
      <summary>Specifies that the ticket expiration date is stored as UTC.</summary>
    </member>
    <member name="T:System.Web.Configuration.TraceDisplayMode">
      <summary>Specifies the order in which trace messages are displayed.</summary>
    </member>
    <member name="F:System.Web.Configuration.TraceDisplayMode.SortByTime">
      <summary>Emit trace messages in the order they were processed.</summary>
    </member>
    <member name="F:System.Web.Configuration.TraceDisplayMode.SortByCategory">
      <summary>Emit trace messages alphabetically by category.</summary>
    </member>
    <member name="T:System.Web.Configuration.TraceSection">
      <summary>Configures the ASP.NET trace service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.TraceSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.TraceSection" /> class using default settings.</summary>
    </member>
    <member name="P:System.Web.Configuration.TraceSection.Enabled">
      <summary>Gets or sets a value indicating whether the ASP.NET trace service is enabled.</summary>
      <returns>true if trace is enabled; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.TraceSection.LocalOnly">
      <summary>Gets or sets a value indicating whether the ASP.NET trace viewer (Trace.axd) is available only to requests from the host Web server.</summary>
      <returns>true if the ASP.NET trace viewer (Trace.axd) is available only to requests from the host Web server; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.TraceSection.MostRecent">
      <summary>Gets or sets a value indicating whether the most recent requests are always stored on the server.</summary>
      <returns>true if the most recent requests are always stored in the trace log; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.TraceSection.PageOutput">
      <summary>Gets or sets a value indicating whether the ASP.NET trace information is appended to the output of each page.</summary>
      <returns>true if the trace information is appended to each page; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.TraceSection.RequestLimit">
      <summary>Gets or sets a value indicating the maximum number of requests to the application for which ASP.NET stores trace information. </summary>
      <returns>The maximum number of requests to store on the server. The default is 10.</returns>
    </member>
    <member name="P:System.Web.Configuration.TraceSection.TraceMode">
      <summary>Gets or sets the order in which ASP.NET trace information is displayed.</summary>
      <returns>One of the <see cref="T:System.Web.Configuration.TraceDisplayMode" /> values, indicating the order in which trace information is displayed.</returns>
    </member>
    <member name="P:System.Web.Configuration.TraceSection.WriteToDiagnosticsTrace">
      <summary>Gets or sets a value indicating whether the messages emitted through the page trace are forwarded to an instance of the <see cref="T:System.Diagnostics.Trace" /> class.</summary>
      <returns>true if the trace messages are sent to the <see cref="T:System.Diagnostics.Trace" /> class; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.Web.Configuration.TransformerInfo">
      <summary>Specifies a custom class that extends the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> class for use by Web Part connections.</summary>
    </member>
    <member name="M:System.Web.Configuration.TransformerInfo.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.TransformerInfo" /> class with the specified name and type reference.</summary>
      <param name="name">The name of this transformer type.</param>
      <param name="type">A reference to a type that extends the transformer <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> class.</param>
    </member>
    <member name="M:System.Web.Configuration.TransformerInfo.Equals(System.Object)">
      <summary>Compares the current <see cref="T:System.Web.Configuration.TransformerInfo" /> object to another <see cref="T:System.Web.Configuration.TransformerInfo" /> object.</summary>
      <returns>true if the passed object is equal to the current object; otherwise, false.</returns>
      <param name="o">The object to compare to the current object.</param>
    </member>
    <member name="M:System.Web.Configuration.TransformerInfo.GetHashCode">
      <summary>Generates a hash code for the collection.</summary>
      <returns>Unique integer hash code for the current object.</returns>
    </member>
    <member name="P:System.Web.Configuration.TransformerInfo.Name">
      <summary>Gets or sets a friendly name for a type that that extends the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> class.</summary>
      <returns>A friendly name for a type that that extends the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> class.</returns>
    </member>
    <member name="P:System.Web.Configuration.TransformerInfo.Type">
      <summary>Gets or sets the type reference for a class that extends the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> class.</summary>
      <returns>A type reference for a class that extends the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> class.</returns>
    </member>
    <member name="T:System.Web.Configuration.TransformerInfoCollection">
      <summary>Contains a collection of <see cref="T:System.Web.Configuration.TransformerInfo" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.TransformerInfoCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.TransformerInfoCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.TransformerInfoCollection.Add(System.Web.Configuration.TransformerInfo)">
      <summary>Adds a <see cref="T:System.Web.Configuration.TransformerInfo" /> object to the collection.</summary>
      <param name="transformerInfo">A <see cref="T:System.Web.Configuration.TransformerInfo" /> object to add to the collection.</param>
      <exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Web.Configuration.TransformerInfo" /> object to add already exists in the collection.- or -The collection is read-only. </exception>
    </member>
    <member name="M:System.Web.Configuration.TransformerInfoCollection.Clear">
      <summary>Removes all <see cref="T:System.Web.Configuration.TransformerInfo" /> objects from the collection.</summary>
    </member>
    <member name="P:System.Web.Configuration.TransformerInfoCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Web.Configuration.TagMapInfo" /> object at the specified index location.</summary>
      <returns>The <see cref="T:System.Web.Configuration.TransformerInfo" /> object at the specified index, or null if there is no object at that index.</returns>
      <param name="index">The index of a <see cref="T:System.Web.Configuration.TransformerInfo" /> object in the collection.</param>
    </member>
    <member name="M:System.Web.Configuration.TransformerInfoCollection.Remove(System.String)">
      <summary>Removes the <see cref="T:System.Web.Configuration.TransformerInfo" /> object with the passed <see cref="P:System.Web.Configuration.TransformerInfo.Name" /> property value from the collection.</summary>
      <param name="s">The name of a <see cref="T:System.Web.Configuration.TransformerInfo" /> object to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Configuration.TransformerInfoCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Web.Configuration.TransformerInfo" /> object from the collection at the passed index.</summary>
      <param name="index">The index of a <see cref="T:System.Web.Configuration.TransformerInfo" /> object to remove from the collection.</param>
    </member>
    <member name="T:System.Web.Configuration.TrustLevel">
      <summary>Defines the mapping of specific security levels to named policy files. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.TrustLevel.#ctor(System.String,System.String)">
      <summary>Creates an instance of the <see cref="T:System.Web.Configuration.TrustLevel" /> class that is initialized based on the provided values, which define the mapping of specific security levels to named policy files.</summary>
      <param name="name">A named security level that is mapped to a policy file.</param>
      <param name="policyFile">The configuration file that contains security policy settings for the named security level.</param>
    </member>
    <member name="P:System.Web.Configuration.TrustLevel.Name">
      <summary>Gets or sets a named security level that is mapped to a policy file.</summary>
      <returns>The <see cref="P:System.Web.Configuration.TrustLevel.Name" /> that is mapped to a policy file.</returns>
    </member>
    <member name="P:System.Web.Configuration.TrustLevel.PolicyFile">
      <summary>Gets or sets the configuration file reference that contains the security policy settings for the named security level.</summary>
      <returns>The configuration file reference that contains the security policy settings for the associated security level.</returns>
    </member>
    <member name="T:System.Web.Configuration.TrustLevelCollection">
      <summary>Contains a collection of <see cref="T:System.Web.Configuration.TrustLevel" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.TrustLevelCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.TrustLevelCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.TrustLevelCollection.Add(System.Web.Configuration.TrustLevel)">
      <summary>Adds a <see cref="T:System.Web.Configuration.TrustLevel" /> object to the collection.</summary>
      <param name="trustLevel">The <see cref="T:System.Web.Configuration.TrustLevel" /> to add to the collection.</param>
    </member>
    <member name="M:System.Web.Configuration.TrustLevelCollection.Clear">
      <summary>Removes all <see cref="T:System.Web.Configuration.TrustLevel" /> objects from the collection.</summary>
    </member>
    <member name="P:System.Web.Configuration.TrustLevelCollection.CollectionType">
      <summary>Gets the type of the <see cref="T:System.Web.Configuration.TrustLevelCollection" /> object.</summary>
      <returns>A value from the <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> enumeration representing the type of the collection.</returns>
    </member>
    <member name="M:System.Web.Configuration.TrustLevelCollection.Get(System.Int32)">
      <summary>Gets the <see cref="T:System.Web.Configuration.TrustLevel" /> object at the specified index.</summary>
      <returns>The <see cref="T:System.Web.Configuration.TrustLevel" /> at the specified index.</returns>
      <param name="index">The index of the <see cref="T:System.Web.Configuration.TrustLevelCollection" />.</param>
    </member>
    <member name="P:System.Web.Configuration.TrustLevelCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Web.Configuration.TrustLevel" /> item at the specified index within the <see cref="T:System.Web.Configuration.TrustLevelCollection" /> object.</summary>
      <returns>A <see cref="T:System.Web.Configuration.TrustLevel" /> at the specified index.</returns>
      <param name="index">The numeric index of the <see cref="T:System.Web.Configuration.TrustLevel" />.</param>
    </member>
    <member name="P:System.Web.Configuration.TrustLevelCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.Web.Configuration.TrustLevel" /> object at the specified index.</summary>
      <returns>A <see cref="T:System.Web.Configuration.TrustLevel" /> that exists at the specified index of the <see cref="T:System.Web.Configuration.TrustLevelCollection" />.</returns>
      <param name="key">The index of the <see cref="T:System.Web.Configuration.TrustLevel" />.</param>
    </member>
    <member name="M:System.Web.Configuration.TrustLevelCollection.Remove(System.Web.Configuration.TrustLevel)">
      <summary>Removes a <see cref="T:System.Web.Configuration.TrustLevel" /> object from the <see cref="T:System.Web.Configuration.TrustLevelCollection" /> object.</summary>
      <param name="trustLevel">The <see cref="T:System.Web.Configuration.TrustLevel" /> to remove from the <see cref="T:System.Web.Configuration.TrustLevelCollection" />.</param>
    </member>
    <member name="M:System.Web.Configuration.TrustLevelCollection.RemoveAt(System.Int32)">
      <summary>Removes a <see cref="T:System.Web.Configuration.TrustLevel" /> object at the specified index location from the <see cref="T:System.Web.Configuration.TrustLevelCollection" /> object.</summary>
      <param name="index">The index location of the <see cref="T:System.Web.Configuration.TrustLevel" /> to remove from the <see cref="T:System.Web.Configuration.TrustLevelCollection" />.</param>
    </member>
    <member name="M:System.Web.Configuration.TrustLevelCollection.Set(System.Int32,System.Web.Configuration.TrustLevel)">
      <summary>Adds the specified <see cref="T:System.Web.Configuration.TrustLevel" /> object to the <see cref="T:System.Web.Configuration.TrustLevelCollection" /> object at the specified index.</summary>
      <param name="index">The index location of the <see cref="T:System.Web.Configuration.TrustLevel" /> to be set within the <see cref="T:System.Web.Configuration.TrustLevelCollection" />.</param>
      <param name="trustLevel">The <see cref="T:System.Web.Configuration.TrustLevel" /> to be set within the <see cref="T:System.Web.Configuration.TrustLevelCollection" />.</param>
    </member>
    <member name="T:System.Web.Configuration.TrustSection">
      <summary>Configures the code-access security level that is applied to an application. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.TrustSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.TrustSection" /> class using default settings.</summary>
    </member>
    <member name="P:System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType">
      <summary>Gets or sets the custom security-policy resolution type.</summary>
      <returns>The custom security-policy resolution type.</returns>
    </member>
    <member name="P:System.Web.Configuration.TrustSection.LegacyCasModel">
      <summary>Gets or set a value that indicates whether the legacy code access security is enabled.</summary>
      <returns>true if legacy code access security is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.TrustSection.Level">
      <summary>Gets or sets the name of the security level under which the application will run. </summary>
      <returns>The name of the trust level. The default is "Full".</returns>
    </member>
    <member name="P:System.Web.Configuration.TrustSection.OriginUrl">
      <summary>Specifies the URL of origin for an application.</summary>
      <returns>A well-formed HTTP URL or an empty string (""). The default is an empty string.</returns>
    </member>
    <member name="P:System.Web.Configuration.TrustSection.PermissionSetName">
      <summary>Gets or sets the name of the permission set. </summary>
      <returns>The name of the permission set.</returns>
    </member>
    <member name="P:System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust">
      <summary>Gets or set a value that indicates whether page requests are automatically restricted to the permissions that are configured in the trust policy file that is applied to the ASP.NET application.</summary>
      <returns>true if requests are automatically restricted to the permissions that are configured in the trust policy file; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.Configuration.UrlMapping">
      <summary>Maps a URL that is displayed to users to the URL of a page in your Web application. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.UrlMapping.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.UrlMapping" /> class.</summary>
      <param name="url">The URL to be displayed to the user.</param>
      <param name="mappedUrl">A URL that exists in your Web application.</param>
    </member>
    <member name="P:System.Web.Configuration.UrlMapping.MappedUrl">
      <summary>A URL in your Web application.</summary>
      <returns>The URL in your Web application that has been mapped to the value specified by the <see cref="P:System.Web.Configuration.UrlMapping.Url" /> property. </returns>
    </member>
    <member name="P:System.Web.Configuration.UrlMapping.Url">
      <summary>Gets the URL that is displayed to the user.</summary>
      <returns>The URL that is displayed to the user.</returns>
    </member>
    <member name="T:System.Web.Configuration.UrlMappingCollection">
      <summary>Represents a collection of <see cref="T:System.Web.Configuration.UrlMapping" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.UrlMappingCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.UrlMappingCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.UrlMappingCollection.Add(System.Web.Configuration.UrlMapping)">
      <summary>Adds the specified <see cref="T:System.Web.Configuration.UrlMapping" /> to the collection.</summary>
      <param name="urlMapping">The <see cref="T:System.Web.Configuration.UrlMapping" /> object to add to the collection.</param>
    </member>
    <member name="P:System.Web.Configuration.UrlMappingCollection.AllKeys">
      <summary>Gets an array of the keys for all of the configuration elements contained in the <see cref="T:System.Web.Configuration.UrlMappingCollection" />.</summary>
      <returns>An array of the keys for all of the <see cref="T:System.Web.Configuration.UrlMapping" /> objects contained in the <see cref="T:System.Web.Configuration.UrlMappingCollection" />.</returns>
    </member>
    <member name="M:System.Web.Configuration.UrlMappingCollection.Clear">
      <summary>Removes all the <see cref="T:System.Web.Configuration.UrlMapping" /> objects from the collection.</summary>
    </member>
    <member name="M:System.Web.Configuration.UrlMappingCollection.GetKey(System.Int32)">
      <summary>Gets the collection key of the specified element.</summary>
      <returns>A string representing the value of the key. </returns>
      <param name="index">The collection index of the element to get.</param>
    </member>
    <member name="P:System.Web.Configuration.UrlMappingCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Web.Configuration.UrlMapping" /> object at the specified index.</summary>
      <returns>The object at the specified index.</returns>
      <param name="index">The index of the object to get.</param>
    </member>
    <member name="P:System.Web.Configuration.UrlMappingCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.Web.Configuration.UrlMapping" /> object with the specified name.</summary>
      <returns>The collection object that has the specified name.</returns>
      <param name="name">The name of the collection object.</param>
    </member>
    <member name="M:System.Web.Configuration.UrlMappingCollection.Remove(System.String)">
      <summary>Removes the <see cref="T:System.Web.Configuration.UrlMapping" /> object with the specified name from the collection.</summary>
      <param name="name">The name of the <see cref="T:System.Web.Configuration.UrlMapping" /> object to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Configuration.UrlMappingCollection.Remove(System.Web.Configuration.UrlMapping)">
      <summary>Removes the specified <see cref="T:System.Web.Configuration.UrlMapping" /> object from the collection.</summary>
      <param name="urlMapping">The <see cref="T:System.Web.Configuration.UrlMapping" /> object to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Configuration.UrlMappingCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Web.Configuration.UrlMapping" /> object with the specified index from the collection.</summary>
      <param name="index">The collection index of the <see cref="T:System.Web.Configuration.UrlMapping" /> object to remove.</param>
    </member>
    <member name="T:System.Web.Configuration.UrlMappingsSection">
      <summary>Provides programmatic access to the urlMappings configuration section. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.UrlMappingsSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.UrlMappingsSection" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.UrlMappingsSection.IsEnabled">
      <summary>Gets or sets a value indicating whether the mapping is enabled.</summary>
      <returns>true if the mapping is enabled; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.UrlMappingsSection.UrlMappings">
      <summary>Gets a collection of <see cref="T:System.Web.Configuration.UrlMapping" /> objects.</summary>
      <returns>A <see cref="T:System.Web.Configuration.UrlMappingCollection" /> that contains <see cref="T:System.Web.Configuration.UrlMapping" /> objects.</returns>
    </member>
    <member name="T:System.Web.Configuration.UserMapPath"></member>
    <member name="M:System.Web.Configuration.UserMapPath.#ctor(System.Configuration.ConfigurationFileMap)"></member>
    <member name="M:System.Web.Configuration.UserMapPath.GetAppPathForPath(System.String,System.String)"></member>
    <member name="M:System.Web.Configuration.UserMapPath.GetDefaultSiteNameAndID(System.String@,System.String@)"></member>
    <member name="M:System.Web.Configuration.UserMapPath.GetMachineConfigFilename"></member>
    <member name="M:System.Web.Configuration.UserMapPath.GetPathConfigFilename(System.String,System.String,System.String@,System.String@)"></member>
    <member name="M:System.Web.Configuration.UserMapPath.GetRootWebConfigFilename"></member>
    <member name="M:System.Web.Configuration.UserMapPath.MapPath(System.String,System.String)"></member>
    <member name="M:System.Web.Configuration.UserMapPath.ResolveSiteArgument(System.String,System.String@,System.String@)"></member>
    <member name="T:System.Web.Configuration.VirtualDirectoryMapping">
      <summary>Specifies a custom virtual-directory hierarchy for a Web application. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.VirtualDirectoryMapping.#ctor(System.String,System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:System.Web.Configuration.VirtualDirectoryMapping" /> class based on supplied parameters.</summary>
      <param name="physicalDirectory">A string value that specifies the absolute path to a physical directory.</param>
      <param name="isAppRoot">A Boolean value that indicates whether the virtual directory is the application root of the Web application.</param>
    </member>
    <member name="M:System.Web.Configuration.VirtualDirectoryMapping.#ctor(System.String,System.Boolean,System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Web.Configuration.VirtualDirectoryMapping" /> class based on supplied parameters.</summary>
      <param name="physicalDirectory">A string value that specifies the absolute path to a physical directory.</param>
      <param name="isAppRoot">A Boolean value that indicates whether the virtual directory is the application root of the Web application.</param>
      <param name="configFileBaseName">The name of the configuration file.</param>
    </member>
    <member name="P:System.Web.Configuration.VirtualDirectoryMapping.ConfigFileBaseName">
      <summary>Gets or sets the name of the configuration file.</summary>
      <returns>A value that indicates the name of the configuration file.</returns>
      <exception cref="T:System.ArgumentException">The selected value is null or an empty string ("").</exception>
    </member>
    <member name="P:System.Web.Configuration.VirtualDirectoryMapping.IsAppRoot">
      <summary>Gets or sets a value that indicates whether the virtual directory should be treated as the application root.</summary>
      <returns>A value that indicates whether the virtual directory should be treated as the application root.</returns>
    </member>
    <member name="P:System.Web.Configuration.VirtualDirectoryMapping.PhysicalDirectory">
      <summary>Gets or sets a value that specifies the full server path of a Web application.</summary>
      <returns>A value that indicates the full server path of a Web application.</returns>
      <exception cref="T:System.ArgumentException">The selected value is invalid or fails internal security validation.</exception>
    </member>
    <member name="P:System.Web.Configuration.VirtualDirectoryMapping.VirtualDirectory">
      <summary>Gets a value that specifies the virtual directory relative to the root of the Web server.</summary>
      <returns>A value that indicates the relative Web-application directory.</returns>
    </member>
    <member name="T:System.Web.Configuration.VirtualDirectoryMappingCollection">
      <summary>Contains a collection of <see cref="T:System.Web.Configuration.VirtualDirectoryMapping" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.VirtualDirectoryMappingCollection.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.VirtualDirectoryMappingCollection.Add(System.String,System.Web.Configuration.VirtualDirectoryMapping)">
      <summary>Adds a <see cref="T:System.Web.Configuration.VirtualDirectoryMapping" /> object to the <see cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" /> instance.</summary>
      <param name="virtualDirectory">A <see cref="T:System.String" /> that contains the virtual directory path.</param>
      <param name="mapping">A <see cref="T:System.Web.Configuration.VirtualDirectoryMapping" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="mapping" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="virtualDirectory" /> already exists in the <see cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" /> is read-only.</exception>
    </member>
    <member name="P:System.Web.Configuration.VirtualDirectoryMappingCollection.AllKeys">
      <summary>Returns a string array that contains all the keys in the <see cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" /> instance.</summary>
      <returns>A string array that contains all the keys in the <see cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" /> instance.</returns>
    </member>
    <member name="M:System.Web.Configuration.VirtualDirectoryMappingCollection.Clear">
      <summary>Clears all <see cref="T:System.Web.Configuration.VirtualDirectoryMapping" /> objects from the <see cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" /> instance.</summary>
    </member>
    <member name="M:System.Web.Configuration.VirtualDirectoryMappingCollection.CopyTo(System.Web.Configuration.VirtualDirectoryMapping[],System.Int32)">
      <summary>Copies the entire <see cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" /> collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</summary>
      <param name="array">A one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:System.Array.Length" /> property of <paramref name="array" /> is less than the value of <see cref="P:System.Collections.Specialized.NameObjectCollectionBase.Count" /> plus <paramref name="index" />.</exception>
    </member>
    <member name="M:System.Web.Configuration.VirtualDirectoryMappingCollection.Get(System.Int32)">
      <summary>Gets the specified <see cref="T:System.Web.Configuration.VirtualDirectoryMapping" /> collection element at the specified index.</summary>
      <returns>The <see cref="T:System.Web.Configuration.VirtualDirectoryMapping" /> element at the specified index.</returns>
      <param name="index">An integer value that specifies a particular <see cref="T:System.Web.Configuration.VirtualDirectoryMapping" /> object within the <see cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />.</param>
    </member>
    <member name="M:System.Web.Configuration.VirtualDirectoryMappingCollection.Get(System.String)">
      <summary>Gets the <see cref="T:System.Web.Configuration.VirtualDirectoryMapping" /> collection element based on the specified virtual-directory name.</summary>
      <returns>The <see cref="T:System.Web.Configuration.VirtualDirectoryMapping" /> element based on the specified virtual-directory name.</returns>
      <param name="virtualDirectory">A string that contains the name of the <see cref="T:System.Web.Configuration.VirtualDirectoryMapping" /> object.</param>
    </member>
    <member name="M:System.Web.Configuration.VirtualDirectoryMappingCollection.GetKey(System.Int32)">
      <summary>Gets the key of the entry at the specified index of the <see cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" /> instance.</summary>
      <returns>A string that contains the name of the <see cref="T:System.Web.Configuration.VirtualDirectoryMapping" /> object.</returns>
      <param name="index">An integer value that specifies a particular <see cref="T:System.Web.Configuration.VirtualDirectoryMapping" /> object within the <see cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />.</param>
    </member>
    <member name="P:System.Web.Configuration.VirtualDirectoryMappingCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Web.Configuration.VirtualDirectoryMapping" /> object at the specified index location.</summary>
      <returns>A <see cref="T:System.Web.Configuration.VirtualDirectoryMapping" /> object.</returns>
      <param name="index">An integer value that specifies a particular <see cref="T:System.Web.Configuration.VirtualDirectoryMapping" /> object within the <see cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />.</param>
    </member>
    <member name="P:System.Web.Configuration.VirtualDirectoryMappingCollection.Item(System.String)">
      <summary>Gets or sets the <see cref="T:System.Web.Configuration.VirtualDirectoryMapping" /> object based on the specified virtual directory name.</summary>
      <returns>A <see cref="T:System.Web.Configuration.VirtualDirectoryMapping" /> object.</returns>
      <param name="virtualDirectory">A string that contains the name of the <see cref="T:System.Web.Configuration.VirtualDirectoryMapping" /> object.</param>
    </member>
    <member name="M:System.Web.Configuration.VirtualDirectoryMappingCollection.Remove(System.String)">
      <summary>Removes a <see cref="T:System.Web.Configuration.VirtualDirectoryMapping" /> object from the <see cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" /> instance.</summary>
      <param name="virtualDirectory">A string that contains the name of the <see cref="T:System.Web.Configuration.VirtualDirectoryMapping" /> object.</param>
    </member>
    <member name="M:System.Web.Configuration.VirtualDirectoryMappingCollection.RemoveAt(System.Int32)">
      <summary>Removes a <see cref="T:System.Web.Configuration.VirtualDirectoryMapping" /> object at the specified index from the <see cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />.</summary>
      <param name="index">An integer value that specifies a particular <see cref="T:System.Web.Configuration.VirtualDirectoryMapping" /> object within the <see cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />.</param>
    </member>
    <member name="T:System.Web.Configuration.WebApplicationLevel">
      <summary>Specifies the path level of a Web-application configuration file.</summary>
    </member>
    <member name="F:System.Web.Configuration.WebApplicationLevel.AboveApplication">
      <summary>Specifies that the configuration file is in a global directory in relation to the current ASP.NET Web application.</summary>
    </member>
    <member name="F:System.Web.Configuration.WebApplicationLevel.AtApplication">
      <summary>Specifies that the configuration file is in the root directory of the current ASP.NET Web application.</summary>
    </member>
    <member name="F:System.Web.Configuration.WebApplicationLevel.BelowApplication">
      <summary>Specifies that the configuration file is in a sub-directory of the current ASP.NET Web application.</summary>
    </member>
    <member name="T:System.Web.Configuration.WebConfigurationFileMap">
      <summary>Defines the configuration file mappings for a Web application. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.WebConfigurationFileMap.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.Configuration.WebConfigurationFileMap" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.WebConfigurationFileMap.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.WebConfigurationFileMap" /> class by using the specified machine configuration file name.</summary>
      <param name="machineConfigFileName">The machine configuration file name with the complete physical path (for example, c:\Windows\Microsoft.NET\Framework\v2.0.50727\CONFIG\machine.config).</param>
    </member>
    <member name="M:System.Web.Configuration.WebConfigurationFileMap.Clone">
      <summary>Creates a new instance of a <see cref="T:System.Web.Configuration.WebConfigurationFileMap" /> class with the same value as the existing instance.</summary>
      <returns>A new instance of a <see cref="T:System.Web.Configuration.WebConfigurationFileMap" /> class.</returns>
    </member>
    <member name="P:System.Web.Configuration.WebConfigurationFileMap.VirtualDirectories">
      <summary>Gets the listed collection of virtual directories for a Web application.</summary>
      <returns>A collection of <see cref="T:System.Web.Configuration.VirtualDirectoryMapping" /> objects.</returns>
    </member>
    <member name="T:System.Web.Configuration.WebConfigurationManager">
      <summary>Provides access to configuration files as they apply to Web applications.</summary>
    </member>
    <member name="P:System.Web.Configuration.WebConfigurationManager.AppSettings">
      <summary>Gets the <see cref="T:System.Configuration.AppSettingsSection" /> data for the current Web application's default configuration.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains the <see cref="T:System.Configuration.AppSettingsSection" /> object for the current Web application's default configuration. </returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A valid <see cref="T:System.Collections.Specialized.NameValueCollection" /> object could not be retrieved with the application settings data.</exception>
    </member>
    <member name="P:System.Web.Configuration.WebConfigurationManager.ConnectionStrings">
      <summary>Gets the <see cref="T:System.Configuration.ConnectionStringsSection" /> data for the current Web application's default configuration.</summary>
      <returns>A <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object that contains the contents of the <see cref="T:System.Configuration.ConnectionStringsSection" /> object for the current Web application's default configuration. </returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A valid <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object could not be retrieved.</exception>
    </member>
    <member name="M:System.Web.Configuration.WebConfigurationManager.GetSection(System.String)">
      <summary>Retrieves the specified configuration section from the current Web application's configuration file.</summary>
      <returns>The specified configuration section object, or null if the section does not exist. Remember that security restrictions exist on the use of <see cref="M:System.Web.Configuration.WebConfigurationManager.GetSection(System.String)" /> as a runtime operation. You might not be able to access a section at run time for modifications, for example.</returns>
      <param name="sectionName">The configuration section name.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A valid configuration file could not be loaded.</exception>
    </member>
    <member name="M:System.Web.Configuration.WebConfigurationManager.GetSection(System.String,System.String)">
      <summary>Retrieves the specified configuration section from the specified Web application's configuration file.</summary>
      <returns>The specified configuration section object, or null if the section does not exist. Remember that security restrictions exist on the use of <see cref="M:System.Web.Configuration.WebConfigurationManager.GetSection(System.String,System.String)" /> as a run-time operation. You might not be able to access a section at run time for modifications, for instance.</returns>
      <param name="sectionName">The configuration section name.</param>
      <param name="path">The virtual configuration file path.</param>
      <exception cref="T:System.InvalidOperationException">The method is called from outside a Web application.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A valid configuration file could not be loaded.</exception>
    </member>
    <member name="M:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection(System.String)">
      <summary>Retrieves the specified configuration section from the current Web application's configuration file.</summary>
      <returns>The specified configuration section object, or null if the section does not exist, or an internal object if the section is not accessible at run time.</returns>
      <param name="sectionName">The configuration section name.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A valid configuration file could not be loaded.</exception>
    </member>
    <member name="M:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration">
      <summary>Opens the machine-configuration file on the current computer as a <see cref="T:System.Configuration.Configuration" /> object to allow read or write operations.</summary>
      <returns>A <see cref="T:System.Configuration.Configuration" /> object.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A valid configuration file could not be loaded.</exception>
    </member>
    <member name="M:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration(System.String)">
      <summary>Opens the machine-configuration file on the current computer as a <see cref="T:System.Configuration.Configuration" /> object to allow read or write operations.</summary>
      <returns>A <see cref="T:System.Configuration.Configuration" /> object.</returns>
      <param name="locationSubPath">The application path to which the machine configuration applies.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A valid configuration file could not be loaded.</exception>
    </member>
    <member name="M:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration(System.String,System.String)">
      <summary>Opens the specified machine-configuration file on the specified server as a <see cref="T:System.Configuration.Configuration" /> object to allow read or write operations.</summary>
      <returns>A <see cref="T:System.Configuration.Configuration" /> object.</returns>
      <param name="locationSubPath">The application path to which the configuration applies.</param>
      <param name="server">The fully qualified name of the server to return the configuration for.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A valid configuration file could not be loaded.</exception>
    </member>
    <member name="M:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration(System.String,System.String,System.IntPtr)">
      <summary>Opens the specified machine-configuration file on the specified server as a <see cref="T:System.Configuration.Configuration" /> object, using the specified security context to allow read or write operations.</summary>
      <returns>A <see cref="T:System.Configuration.Configuration" /> object.</returns>
      <param name="locationSubPath">The application path to which the configuration applies.</param>
      <param name="server">The fully qualified name of the server to return the configuration for.</param>
      <param name="userToken">An account token to use.</param>
      <exception cref="T:System.ArgumentException">Valid values were not supplied for the <paramref name="server" /> or <paramref name="userToken" /> parameters.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A valid configuration file could not be loaded.</exception>
    </member>
    <member name="M:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration(System.String,System.String,System.String,System.String)">
      <summary>Opens the specified machine-configuration file on the specified server as a <see cref="T:System.Configuration.Configuration" /> object, using the specified security context to allow read or write operations.</summary>
      <returns>A <see cref="T:System.Configuration.Configuration" /> object.</returns>
      <param name="locationSubPath">The application path to which the configuration applies. </param>
      <param name="server">The fully qualified name of the server to return the configuration for.</param>
      <param name="userName">The full user name (Domain\User) to use when opening the file.</param>
      <param name="password">The password for the user name.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="server" /> or <paramref name="userName" /> and <paramref name="password" /> parameters were invalid.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A valid configuration file could not be loaded.</exception>
    </member>
    <member name="M:System.Web.Configuration.WebConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)">
      <summary>Opens the machine-configuration file as a <see cref="T:System.Configuration.Configuration" /> object, using the specified file mapping to allow read or write operations. </summary>
      <returns>A <see cref="T:System.Configuration.Configuration" /> object.</returns>
      <param name="fileMap">The <see cref="T:System.Configuration.ConfigurationFileMap" /> object to use in place of the default machine-configuration file.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A valid configuration file could not be loaded.</exception>
    </member>
    <member name="M:System.Web.Configuration.WebConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap,System.String)">
      <summary>Opens the machine-configuration file as a <see cref="T:System.Configuration.Configuration" /> object using the specified file mapping and location to allow read or write operations.</summary>
      <returns>A <see cref="T:System.Configuration.Configuration" /> object.</returns>
      <param name="fileMap">The <see cref="T:System.Configuration.ConfigurationFileMap" /> object to use in place of a default machine-configuration file.</param>
      <param name="locationSubPath">The specific resource to which the configuration applies.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A valid configuration file could not be loaded.</exception>
    </member>
    <member name="M:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration(System.Web.Configuration.WebConfigurationFileMap,System.String)">
      <summary>Opens the specified Web-application configuration file as a <see cref="T:System.Configuration.Configuration" /> object using the specified file mapping and virtual path to allow read or write operations.</summary>
      <returns>A <see cref="T:System.Configuration.Configuration" /> object.</returns>
      <param name="fileMap">The <see cref="T:System.Web.Configuration.WebConfigurationFileMap" /> object to use in place of a default Web-application configuration file.</param>
      <param name="path">The virtual path to the configuration file. </param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A valid configuration file could not be loaded.</exception>
    </member>
    <member name="M:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration(System.Web.Configuration.WebConfigurationFileMap,System.String,System.String)">
      <summary>Opens the specified Web application configuration file as a <see cref="T:System.Configuration.Configuration" /> object using the specified file mapping, virtual path, and site name to allow read or write operations.</summary>
      <returns>A <see cref="T:System.Configuration.Configuration" /> object.</returns>
      <param name="fileMap">The <see cref="T:System.Web.Configuration.WebConfigurationFileMap" /> object to use in place of a default Web-application configuration-file mapping.</param>
      <param name="path">The virtual path to the configuration file.</param>
      <param name="site">The name of the application Web site, as displayed in Internet Information Services (IIS) configuration.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A valid configuration file could not be loaded.</exception>
    </member>
    <member name="M:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration(System.Web.Configuration.WebConfigurationFileMap,System.String,System.String,System.String)">
      <summary>Opens the specified Web-application configuration file as a <see cref="T:System.Configuration.Configuration" /> object using the specified file mapping, virtual path, site name, and location to allow read or write operations.</summary>
      <returns>A <see cref="T:System.Configuration.Configuration" /> object.</returns>
      <param name="fileMap">The <see cref="T:System.Web.Configuration.WebConfigurationFileMap" /> object to use in place of a default Web-application configuration-file mapping.</param>
      <param name="path">The virtual path to the configuration file. </param>
      <param name="site">The name of the application Web site, as displayed in Internet Information Services (IIS) configuration.</param>
      <param name="locationSubPath">The specific resource to which the configuration applies.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A valid configuration file could not be loaded.</exception>
    </member>
    <member name="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String)">
      <summary>Opens the Web-application configuration file as a <see cref="T:System.Configuration.Configuration" /> object using the specified virtual path to allow read or write operations.</summary>
      <returns>A <see cref="T:System.Configuration.Configuration" /> object.</returns>
      <param name="path">The virtual path to the configuration file. If null, the root Web.config file is opened.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A valid configuration file could not be loaded.</exception>
    </member>
    <member name="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String,System.String)">
      <summary>Opens the Web-application configuration file as a <see cref="T:System.Configuration.Configuration" /> object using the specified virtual path and site name to allow read or write operations.</summary>
      <returns>A <see cref="T:System.Configuration.Configuration" /> object.</returns>
      <param name="path">The virtual path to the configuration file. </param>
      <param name="site">The name of the application Web site, as displayed in Internet Information Services (IIS) configuration.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A valid configuration file could not be loaded.</exception>
    </member>
    <member name="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String,System.String,System.String)">
      <summary>Opens the Web-application configuration file as a <see cref="T:System.Configuration.Configuration" /> object using the specified virtual path, site name, and location to allow read or write operations.</summary>
      <returns>A <see cref="T:System.Configuration.Configuration" /> object.</returns>
      <param name="path">The virtual path to the configuration file. </param>
      <param name="site">The name of the application Web site, as displayed in Internet Information Services (IIS) configuration.</param>
      <param name="locationSubPath">The specific resource to which the configuration applies.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A valid configuration file could not be loaded.</exception>
    </member>
    <member name="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String,System.String,System.String,System.String)">
      <summary>Opens the Web-application configuration file as a <see cref="T:System.Configuration.Configuration" /> object using the specified virtual path, site name, location, and server to allow read or write operations.</summary>
      <returns>A <see cref="T:System.Configuration.Configuration" /> object.</returns>
      <param name="path">The virtual path to the configuration file. </param>
      <param name="site">The name of the application Web site, as displayed in Internet Information Services (IIS) configuration.</param>
      <param name="locationSubPath">The specific resource to which the configuration applies. </param>
      <param name="server">The network name of the server the Web application resides on.</param>
      <exception cref="T:System.ArgumentException">The server parameter was invalid.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A valid configuration file could not be loaded.</exception>
    </member>
    <member name="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String,System.String,System.String,System.String,System.IntPtr)">
      <summary>Opens the Web-application configuration file as a <see cref="T:System.Configuration.Configuration" /> object using the specified virtual path, site name, location, server, and security context to allow read or write operations.</summary>
      <returns>A <see cref="T:System.Configuration.Configuration" /> object.</returns>
      <param name="path">The virtual path to the configuration file. </param>
      <param name="site">The name of the application Web site, as displayed in Internet Information Services (IIS) configuration.</param>
      <param name="locationSubPath">The specific resource to which the configuration applies.</param>
      <param name="server">The network name of the server the Web application resides on.</param>
      <param name="userToken">An account token to use.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="server" /> or <paramref name="userToken" /> parameters were invalid.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A valid configuration file could not be loaded.</exception>
    </member>
    <member name="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>Opens the Web-application configuration file as a <see cref="T:System.Configuration.Configuration" /> object using the specified virtual path, site name, location, server, and security context to allow read or write operations.</summary>
      <returns>A <see cref="T:System.Configuration.Configuration" /> object.</returns>
      <param name="path">The virtual path to the configuration file. </param>
      <param name="site">The name of the application Web site, as displayed in Internet Information Services (IIS) configuration.</param>
      <param name="locationSubPath">The specific resource to which the configuration applies. </param>
      <param name="server">The network name of the server the Web application resides on.</param>
      <param name="userName">The full user name (Domain\User) to use when opening the file.</param>
      <param name="password">The password for the user name.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="server" /> or <paramref name="userName" /> and <paramref name="password" /> parameters were invalid.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Could not load a valid configuration file.</exception>
    </member>
    <member name="T:System.Web.Configuration.WebContext">
      <summary>Manages the path context for the current Web application. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.WebContext.#ctor(System.Web.Configuration.WebApplicationLevel,System.String,System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.WebContext" /> class.</summary>
      <param name="pathLevel">A <see cref="T:System.Web.Configuration.WebApplicationLevel" /> object.</param>
      <param name="site">The name of the Web site.</param>
      <param name="applicationPath">The virtual path of the root level of the current Web application.</param>
      <param name="path">The virtual path of the Web.config file that the current configuration object represents.</param>
      <param name="locationSubPath">The path value of the location element that is currently being edited.</param>
      <param name="appConfigPath">The current Web application's configuration path.</param>
    </member>
    <member name="P:System.Web.Configuration.WebContext.ApplicationLevel">
      <summary>Gets a <see cref="T:System.Web.Configuration.WebApplicationLevel" /> object that represents the path level of the current Web application.</summary>
      <returns>A <see cref="T:System.Web.Configuration.WebApplicationLevel" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.WebContext.ApplicationPath">
      <summary>Gets the application path of the current Web application.</summary>
      <returns>The application path of the current Web application.</returns>
    </member>
    <member name="P:System.Web.Configuration.WebContext.LocationSubPath">
      <summary>Gets the location subpath of the Web application.</summary>
      <returns>The location subpath of the current Web application.</returns>
    </member>
    <member name="P:System.Web.Configuration.WebContext.Path">
      <summary>Gets the current virtual path of the Web application.</summary>
      <returns>The current virtual path of the Web application.</returns>
    </member>
    <member name="P:System.Web.Configuration.WebContext.Site">
      <summary>Gets the name of the current Web application.</summary>
      <returns>The name of the current Web application.</returns>
    </member>
    <member name="M:System.Web.Configuration.WebContext.ToString">
      <summary>Returns a string that represents the application's configuration path.</summary>
      <returns>The application's configuration path.</returns>
    </member>
    <member name="T:System.Web.Configuration.WebControlsSection">
      <summary>Configures the webControls section. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Web.Configuration.WebControlsSection.#ctor">
      <summary>Creates a new instance of <see cref="T:System.Web.Configuration.WebControlsSection" />.</summary>
    </member>
    <member name="P:System.Web.Configuration.WebControlsSection.ClientScriptsLocation">
      <summary>Gets the client scripts location.</summary>
      <returns>The location of the client scripts.</returns>
    </member>
    <member name="T:System.Web.Configuration.WebPartsPersonalization">
      <summary>Allows you to specify the personalization provider and set personalization authorizations. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.WebPartsPersonalization.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.WebPartsPersonalization" /> class using default settings.</summary>
    </member>
    <member name="P:System.Web.Configuration.WebPartsPersonalization.Authorization">
      <summary>Gets an <see cref="T:System.Web.Configuration.AuthorizationSection" /> object containing the Web Parts personalization authorizations for the current Web application.</summary>
      <returns>An <see cref="T:System.Web.Configuration.AuthorizationSection" /> object containing the Web Parts personalization authorizations for the current Web application.</returns>
    </member>
    <member name="P:System.Web.Configuration.WebPartsPersonalization.DefaultProvider">
      <summary>Gets or sets the name of the default Web Parts personalization provider.</summary>
      <returns>The name of the default Web Parts personalization provider.</returns>
    </member>
    <member name="P:System.Web.Configuration.WebPartsPersonalization.Providers">
      <summary>Gets a <see cref="T:System.Configuration.ProviderSettingsCollection" /> collection that contains the Web Parts personalization providers for the current Web application.</summary>
      <returns>A <see cref="T:System.Configuration.ProviderSettingsCollection" /> collection that contains the Web Parts personalization providers for the current Web application.</returns>
    </member>
    <member name="T:System.Web.Configuration.WebPartsPersonalizationAuthorization">
      <summary>Provides programmatic access to the authorization section contained in the webParts section of the configuration. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.WebPartsPersonalizationAuthorization.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.WebPartsPersonalizationAuthorization" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.WebPartsPersonalizationAuthorization.Rules">
      <summary>Gets a collection of rules used for personalization authorization related to Web Parts.</summary>
      <returns>An <see cref="T:System.Web.Configuration.AuthorizationRuleCollection" /> object.</returns>
    </member>
    <member name="T:System.Web.Configuration.WebPartsSection">
      <summary>Provides programmatic access to the webParts configuration file section. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.WebPartsSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.WebPartsSection" /> class using default settings.</summary>
    </member>
    <member name="P:System.Web.Configuration.WebPartsSection.EnableExport">
      <summary>Gets or sets a value indicating whether to enable the export of control data to an XML description file.</summary>
      <returns>true to enable the export of control data to an XML description file; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Configuration.WebPartsSection.Personalization">
      <summary>Gets a <see cref="T:System.Web.Configuration.WebPartsPersonalization" /> object that allows you to specify the Web Parts personalization provider and set Web Parts personalization authorizations.</summary>
      <returns>A <see cref="T:System.Web.Configuration.WebPartsPersonalization" /> object that allows you to specify the personalization provider and set personalization authorizations.</returns>
    </member>
    <member name="P:System.Web.Configuration.WebPartsSection.Transformers">
      <summary>Gets a collection of <see cref="T:System.Web.Configuration.TransformerInfo" /> objects.</summary>
      <returns>A <see cref="T:System.Web.Configuration.TransformerInfoCollection" /> collection of <see cref="T:System.Web.Configuration.TransformerInfo" /> objects.</returns>
    </member>
    <member name="T:System.Web.Configuration.XhtmlConformanceMode">
      <summary>Specifies the authentication mode to use in a Web application.</summary>
    </member>
    <member name="F:System.Web.Configuration.XhtmlConformanceMode.Transitional">
      <summary>Reverts a number of rendering changes made for conformance to the v1.1 rendering behavior. </summary>
    </member>
    <member name="F:System.Web.Configuration.XhtmlConformanceMode.Legacy">
      <summary>XHTML 1.0 Transitional </summary>
    </member>
    <member name="F:System.Web.Configuration.XhtmlConformanceMode.Strict">
      <summary>XHTML 1.0 Strict conformance </summary>
    </member>
    <member name="T:System.Web.Configuration.XhtmlConformanceSection">
      <summary>Configures the xhtmlConformance section. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Web.Configuration.XhtmlConformanceSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.XhtmlConformanceSection" /> class using default parameters.</summary>
    </member>
    <member name="P:System.Web.Configuration.XhtmlConformanceSection.Mode">
      <summary>Gets or sets the <see cref="P:System.Web.Configuration.XhtmlConformanceSection.Mode" /> property. </summary>
      <returns>One of the <see cref="T:System.Web.Configuration.XhtmlConformanceMode" /> values. The default is <see cref="F:System.Web.Configuration.XhtmlConformanceMode.Transitional" />.</returns>
    </member>
    <member name="T:System.Web.Configuration.Internal.IInternalConfigWebHost">
      <summary>Defines interfaces used by internal .NET Framework infrastructure for accessing and manipulating Host configuration files.</summary>
    </member>
    <member name="M:System.Web.Configuration.Internal.IInternalConfigWebHost.GetConfigPathFromSiteIDAndVPath(System.String,System.String)">
      <summary>Returns a value representing the path to a configuration file associated with the provided site identifier and application's virtual path.</summary>
      <returns>A string representing the path to a configuration file.</returns>
      <param name="siteID">The application's site identifier. For more information, see ASP.NET Configuration Overview.</param>
      <param name="vpath">The application's virtual path as a string. For more information, see ASP.NET Web Site Paths.</param>
    </member>
    <member name="M:System.Web.Configuration.Internal.IInternalConfigWebHost.GetSiteIDAndVPathFromConfigPath(System.String,System.String@,System.String@)">
      <summary>Sets the current site identifier of a configuration object based on the application virtual path and the application configuration path.</summary>
      <param name="configPath">A string representing the path to the application's configuration file.</param>
      <param name="siteID">The application's site Identifier. For more information, see ASP.NET Configuration Overview.</param>
      <param name="vpath">The application's virtual path as a string. For more information, see ASP.NET Web Site Paths.</param>
    </member>
    <member name="T:System.Web.Handlers.AssemblyResourceLoader">
      <summary>Provides an HTTP handler used to load embedded resources from assemblies. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Handlers.AssemblyResourceLoader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Handlers.AssemblyResourceLoader" /> class. This constructor supports the ASP.NET infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Web.Handlers.AssemblyResourceLoader.System#Web#IHttpHandler#IsReusable">
      <summary>Gets a value that indicates whether another request can reuse the <see cref="T:System.Web.IHttpHandler" /> instance. </summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="M:System.Web.Handlers.AssemblyResourceLoader.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
      <summary>For a description of this member, see <see cref="M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)" />.</summary>
      <param name="context">The context of the request.</param>
      <exception cref="T:System.Web.HttpException">The Web resource request is invalid.- or -The assembly name could not be found.- or -The resource name could not be found in the assembly.</exception>
    </member>
    <member name="T:System.Web.Handlers.TraceHandler">
      <summary>Provides a synchronous HTTP handler that processes requests for tracing information.</summary>
    </member>
    <member name="M:System.Web.Handlers.TraceHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Handlers.TraceHandler" /> class. </summary>
    </member>
    <member name="P:System.Web.Handlers.TraceHandler.IsReusable">
      <summary>Gets a value indicating whether another request can use the <see cref="T:System.Web.Handlers.TraceHandler" /> instance.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="M:System.Web.Handlers.TraceHandler.ProcessRequest(System.Web.HttpContext)">
      <summary>Processes an HTTP request.</summary>
      <param name="context">An <see cref="T:System.Web.HttpContext" /> object that provides access to the current Request and Response instances.</param>
    </member>
    <member name="M:System.Web.Handlers.TraceHandler.ShowDetails(System.Data.DataSet)">
      <summary>Writes the details of the current system state and page information to the response stream.</summary>
      <param name="data">A <see cref="T:System.Data.DataSet" /> object that contains tracing information.</param>
    </member>
    <member name="M:System.Web.Handlers.TraceHandler.ShowRequests(System.Collections.IList)">
      <summary>Writes the details of recent HTTP request traffic to the response stream.</summary>
      <param name="data">A set of <see cref="T:System.Data.DataSet" /> objects that represent the recent HTTP requests the server has processed.</param>
    </member>
    <member name="M:System.Web.Handlers.TraceHandler.ShowVersionDetails">
      <summary>Writes the details of the current Common Language Runtime and ASP.NET build versions that the Web server is using.</summary>
    </member>
    <member name="P:System.Web.Handlers.TraceHandler.System#Web#IHttpHandler#IsReusable">
      <summary>Gets a value indicating whether another request can use the <see cref="T:System.Web.Handlers.TraceHandler" /> instance.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="M:System.Web.Handlers.TraceHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
      <summary>Processes an HTTP request.</summary>
      <param name="context">An <see cref="T:System.Web.HttpContext" /> object that provides access to the current Request and Response instances.</param>
    </member>
    <member name="T:System.Web.Hosting.AppDomainFactory">
      <summary>Creates a new <see cref="T:System.AppDomain" /> instance for the Web application. This class cannot be inherited. This class was used by earlier versions of the .NET Framework than version 2.0, which uses the <see cref="T:System.Web.Hosting.AppManagerAppDomainFactory" /> class instead.</summary>
    </member>
    <member name="M:System.Web.Hosting.AppDomainFactory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Hosting.AppDomainFactory" /> class. This class was used by earlier versions of the .NET Framework than version 2.0, which uses the <see cref="T:System.Web.Hosting.AppManagerAppDomainFactory" /> class instead.</summary>
    </member>
    <member name="M:System.Web.Hosting.AppDomainFactory.Create(System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>Returns a new application domain for the specified Web application. This class was used by earlier versions of the .NET Framework than version 2.0, which uses the <see cref="T:System.Web.Hosting.AppManagerAppDomainFactory" /> class instead.</summary>
      <returns>A new application domain.</returns>
      <param name="module">The module containing the Web application.</param>
      <param name="typeName">The type of the Web application.</param>
      <param name="appId">The unique identifier for the Web application.</param>
      <param name="appPath">The path to the Web application's files.</param>
      <param name="strUrlOfAppOrigin">The URL of origin for the Web application.</param>
      <param name="iZone">The zone of origin for the Web application.</param>
    </member>
    <member name="T:System.Web.Hosting.AppDomainInfo">
      <summary>Provides information about the application domain.</summary>
    </member>
    <member name="M:System.Web.Hosting.AppDomainInfo.GetId">
      <summary>Gets the application domain ID.</summary>
      <returns>The unique application domain ID.</returns>
    </member>
    <member name="M:System.Web.Hosting.AppDomainInfo.GetPhysicalPath">
      <summary>Gets the physical path of the application domain.</summary>
      <returns>The physical path of the application domain.</returns>
    </member>
    <member name="M:System.Web.Hosting.AppDomainInfo.GetSiteId">
      <summary>Gets the site ID of the application domain.</summary>
      <returns>The site ID of the application domain.</returns>
    </member>
    <member name="M:System.Web.Hosting.AppDomainInfo.GetVirtualPath">
      <summary>Gets the root virtual path of the application domain.</summary>
      <returns>The root virtual path of the application domain.</returns>
    </member>
    <member name="M:System.Web.Hosting.AppDomainInfo.IsIdle">
      <summary>Gets the idle state of the application domain.</summary>
      <returns>true if the application domain is idle; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.Hosting.AppDomainInfoEnum">
      <summary>Provides access to an application domain.</summary>
    </member>
    <member name="M:System.Web.Hosting.AppDomainInfoEnum.Count">
      <summary>Retrieves the number of application domains.</summary>
      <returns>The number of application domains.</returns>
    </member>
    <member name="M:System.Web.Hosting.AppDomainInfoEnum.GetData">
      <summary>Gets an <see cref="T:System.Web.Hosting.IAppDomainInfo" /> interface.</summary>
      <returns>An <see cref="T:System.Web.Hosting.IAppDomainInfo" /> interface.</returns>
    </member>
    <member name="M:System.Web.Hosting.AppDomainInfoEnum.MoveNext">
      <summary>Moves to the next <see cref="T:System.Web.Hosting.IAppDomainInfo" /> interface.</summary>
      <returns>Returns true if a new interface is available; otherwise returns false.</returns>
    </member>
    <member name="M:System.Web.Hosting.AppDomainInfoEnum.Reset">
      <summary>Initializes the <see cref="T:System.Web.Hosting.IAppDomainInfo" /> interface.</summary>
    </member>
    <member name="T:System.Web.Hosting.AppDomainProtocolHandler">
      <summary>Provides support for programmatic access to application domain protocols.</summary>
    </member>
    <member name="M:System.Web.Hosting.AppDomainProtocolHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Hosting.AppDomainProtocolHandler" /> class.</summary>
    </member>
    <member name="M:System.Web.Hosting.AppDomainProtocolHandler.InitializeLifetimeService">
      <summary>Gives the protocol handler an infinite lifetime by preventing a lease from being created.</summary>
      <returns>true if the service is initiated; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.Hosting.AppDomainProtocolHandler.StartListenerChannel(System.Web.Hosting.IListenerChannelCallback)">
      <summary>Starts a protocol listener channel.</summary>
      <param name="listenerChannelCallback">The callback for the listener channel.</param>
    </member>
    <member name="M:System.Web.Hosting.AppDomainProtocolHandler.Stop(System.Boolean)">
      <summary>Stops a queue.</summary>
      <param name="immediate">true to stop the queue immediately.</param>
    </member>
    <member name="M:System.Web.Hosting.AppDomainProtocolHandler.StopListenerChannel(System.Int32,System.Boolean)">
      <summary>Stops the specified process protocol handler.</summary>
      <param name="listenerChannelId">The callback for the listener channel.</param>
      <param name="immediate">true to stop the protocol immediately; otherwise, false.</param>
    </member>
    <member name="M:System.Web.Hosting.AppDomainProtocolHandler.StopProtocol(System.Boolean)">
      <summary>Stops a protocol.</summary>
      <param name="immediate">true to stop the protocol immediately.</param>
    </member>
    <member name="T:System.Web.Hosting.ApplicationHost">
      <summary>Enables hosting of ASP.NET pages outside the Internet Information Services (IIS) application. This class enables the host to create application domains for processing ASP.NET requests.</summary>
    </member>
    <member name="M:System.Web.Hosting.ApplicationHost.CreateApplicationHost(System.Type,System.String,System.String)">
      <summary>Creates and configures an application domain for hosting ASP.NET.</summary>
      <returns>An instance of a user-supplied class used to marshal calls into the newly created application domain.</returns>
      <param name="hostType">The name of a user-supplied class to be created in the new application domain.</param>
      <param name="virtualDir">The virtual directory for the application domain; for example, /myapp.</param>
      <param name="physicalDir">The physical directory for the application domain where ASP.NET pages are located; for example, c:\mypages.</param>
      <exception cref="T:System.PlatformNotSupportedException">The Web host computer is not running the Windows NT platform or a Coriolis environment.</exception>
    </member>
    <member name="T:System.Web.Hosting.ApplicationInfo">
      <summary>Provides information about a running application. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Web.Hosting.ApplicationInfo.ID">
      <summary>Gets the unique identifier for the application.</summary>
      <returns>The unique identifier for the application specified when the application was created by using the <see cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" /> method.</returns>
    </member>
    <member name="P:System.Web.Hosting.ApplicationInfo.PhysicalPath">
      <summary>Gets the physical path corresponding to the application's root.</summary>
      <returns>The physical path corresponding to the application's root.</returns>
    </member>
    <member name="P:System.Web.Hosting.ApplicationInfo.VirtualPath">
      <summary>Gets the virtual path corresponding to the application's root.</summary>
      <returns>The virtual path corresponding to the application's root.</returns>
    </member>
    <member name="T:System.Web.Hosting.ApplicationManager">
      <summary>Manages ASP.NET application domains for an ASP.NET hosting application.</summary>
    </member>
    <member name="M:System.Web.Hosting.ApplicationManager.Close">
      <summary>Shuts down all application domains.</summary>
    </member>
    <member name="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)">
      <summary>Creates an object for the specified application domain based on type, virtual and physical paths, and a Boolean value indicating failure behavior when an object of the specified type already exists.</summary>
      <returns>A new object of the specified <paramref name="type" />.</returns>
      <param name="appId">The unique identifier for the application that owns the object.</param>
      <param name="type">The type of the object to create.</param>
      <param name="virtualPath">The virtual path to the application.</param>
      <param name="physicalPath">The physical path to the application.</param>
      <param name="failIfExists">true to throw an exception if an object of the specified type is currently registered; false to return the existing registered object of the specified type.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="physicalPath" /> is null- or -<paramref name="physicalPath" /> is not a valid application path.- or -<paramref name="type" /> does not implement the <see cref="T:System.Web.Hosting.IRegisteredObject" /> interface.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="appID" /> is null.- or -<paramref name="type" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="failIfExists" /> is true and an object of the specified type is already registered.</exception>
    </member>
    <member name="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Creates an object for the specified application domain based on type, virtual and physical paths, a Boolean value indicating failure behavior when an object of the specified type already exists, and a Boolean value indicating whether hosting initialization error exceptions are thrown.</summary>
      <returns>A new object of the specified <paramref name="type" />.</returns>
      <param name="appId">The unique identifier for the application that owns the object.</param>
      <param name="type">The type of the object to create.</param>
      <param name="virtualPath">The virtual path to the application.</param>
      <param name="physicalPath">The physical path to the application.</param>
      <param name="failIfExists">true to throw an exception if an object of the specified type is currently registered; false to return the existing registered object of the specified type.</param>
      <param name="throwOnError">true to throw exceptions for hosting initialization errors; false to not throw hosting initialization exceptions.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="physicalPath" /> is null- or -<paramref name="physicalPath" /> is not a valid application path.- or -<paramref name="type" /> does not implement the <see cref="T:System.Web.Hosting.IRegisteredObject" /> interface.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="appID" /> is null.- or -<paramref name="type" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="failIfExists" /> is true and an object of the specified type is already registered.</exception>
    </member>
    <member name="M:System.Web.Hosting.ApplicationManager.CreateObject(System.Web.Hosting.IApplicationHost,System.Type)">
      <summary>Creates an object for the specified application domain, based on type.</summary>
      <returns>A new object of the type specified in <paramref name="type" />.</returns>
      <param name="appHost">An <see cref="System.Web.Hosting.IApplicationHost" /> object.</param>
      <param name="type">The type of the object to create.</param>
      <exception cref="T:System.ArgumentException">A physical path for the application does not exist.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="appHost" /> is null.- or -<paramref name="type" /> is null.</exception>
    </member>
    <member name="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.String)">
      <summary>Gets the application domain of the specified application.</summary>
      <returns>The application domain of the application.</returns>
      <param name="appId">The unique identifier for the application.</param>
    </member>
    <member name="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.Web.Hosting.IApplicationHost)">
      <summary>Gets the application domain of an application using the specified host.</summary>
      <returns>The application domain of the application.</returns>
      <param name="appHost">The host to get the application domain for.</param>
    </member>
    <member name="M:System.Web.Hosting.ApplicationManager.GetApplicationManager">
      <summary>Returns the single instance of the <see cref="T:System.Web.Hosting.ApplicationManager" /> object associated with this ASP.NET host process.</summary>
      <returns>The single instance of the <see cref="T:System.Web.Hosting.ApplicationManager" /> object associated with the ASP.NET host process that is running.</returns>
    </member>
    <member name="M:System.Web.Hosting.ApplicationManager.GetObject(System.String,System.Type)">
      <summary>Returns the registered object of the specified type from the specified application.</summary>
      <returns>The registered object of the specified type; or null if the type has not been registered through a call to the <see cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" /> method.</returns>
      <param name="appId">The unique identifier for the application that owns the object.</param>
      <param name="type">The type of the object to return.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="appId" /> is null.—or—<paramref name="type" /> is null.</exception>
    </member>
    <member name="M:System.Web.Hosting.ApplicationManager.GetRunningApplications">
      <summary>Returns a snapshot of running applications.</summary>
      <returns>An array of <see cref="T:System.Web.Hosting.ApplicationInfo" /> objects that contain information about the applications managed by this <see cref="T:System.Web.Hosting.ApplicationManager" /> instance.</returns>
    </member>
    <member name="M:System.Web.Hosting.ApplicationManager.InitializeLifetimeService">
      <summary>Gives the application domain an infinite lifetime by preventing a lease from being created.</summary>
      <returns>Always null.</returns>
    </member>
    <member name="M:System.Web.Hosting.ApplicationManager.IsIdle">
      <summary>Returns a value indicating whether all applications hosted by the process are idle and not processing requests.</summary>
      <returns>true if all applications in the process are idle; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.Hosting.ApplicationManager.Open">
      <summary>Makes a thread-safe increment to the user reference count of the application manager instance.</summary>
    </member>
    <member name="M:System.Web.Hosting.ApplicationManager.ShutdownAll">
      <summary>Unloads all application resources.</summary>
    </member>
    <member name="M:System.Web.Hosting.ApplicationManager.ShutdownApplication(System.String)">
      <summary>Unloads the specified application.</summary>
      <param name="appId">The unique identifier of the application to unload.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="appId" /> is null.</exception>
    </member>
    <member name="M:System.Web.Hosting.ApplicationManager.StopObject(System.String,System.Type)">
      <summary>Removes the specified object from the list of registered objects in an application. If the object to be removed is the last remaining object in the list of registered objects in an application, the application is unloaded.</summary>
      <param name="appId">The unique identifier for the application that owns the object.</param>
      <param name="type">The type of the object to unload.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="appId" /> is null.- or -<paramref name="type" /> is null.</exception>
    </member>
    <member name="T:System.Web.Hosting.AppManagerAppDomainFactory">
      <summary>Creates and stops application domains for a Web-application manager. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Hosting.AppManagerAppDomainFactory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Hosting.AppManagerAppDomainFactory" /> class.</summary>
    </member>
    <member name="M:System.Web.Hosting.AppManagerAppDomainFactory.Create(System.String,System.String)">
      <summary>Creates a new application domain for the specified Web application.</summary>
      <returns>A new application domain for the specified Web application.</returns>
      <param name="appId">The unique identifier for the new Web application.</param>
      <param name="appPath">The path to the new Web application's files.</param>
    </member>
    <member name="M:System.Web.Hosting.AppManagerAppDomainFactory.Stop">
      <summary>Stops all application domains associated with this application manager. </summary>
    </member>
    <member name="T:System.Web.Hosting.HostingEnvironment">
      <summary>Provides application-management functions and application services to a managed application within its application domain. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Hosting.HostingEnvironment.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Hosting.HostingEnvironment" /> class. </summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Hosting.HostingEnvironment.#ctor" /> constructor is called more than once.</exception>
    </member>
    <member name="P:System.Web.Hosting.HostingEnvironment.ApplicationHost">
      <summary>This property supports the ASP.NET infrastructure and is not intended to be used directly from your code.</summary>
      <returns>An object that contains information about the application host.</returns>
    </member>
    <member name="P:System.Web.Hosting.HostingEnvironment.ApplicationID">
      <summary>Gets the unique identifier of the application.</summary>
      <returns>The unique identifier of the application.</returns>
    </member>
    <member name="P:System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath">
      <summary>Gets the physical path on disk to the application's directory.</summary>
      <returns>The physical path on disk to the application's directory.</returns>
    </member>
    <member name="P:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath">
      <summary>Gets the root virtual path of the application.</summary>
      <returns>The root virtual path of the application with no trailing slash (/).</returns>
    </member>
    <member name="P:System.Web.Hosting.HostingEnvironment.Cache">
      <summary>Gets the <see cref="T:System.Web.Caching.Cache" /> instance for the current application.</summary>
      <returns>The current <see cref="T:System.Web.Caching.Cache" /> instance.</returns>
    </member>
    <member name="M:System.Web.Hosting.HostingEnvironment.DecrementBusyCount">
      <summary>Reduces the count of busy objects in the hosted environment by one.</summary>
    </member>
    <member name="M:System.Web.Hosting.HostingEnvironment.Impersonate">
      <summary>Impersonates the user represented by the application identity.</summary>
      <returns>An <see cref="T:System.IDisposable" /> object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.</returns>
      <exception cref="T:System.Web.HttpException">The process cannot impersonate.</exception>
    </member>
    <member name="M:System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr)">
      <summary>Impersonates the user represented by the specified user token.</summary>
      <returns>An <see cref="T:System.IDisposable" /> object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.</returns>
      <param name="token">The handle of a Windows account token.</param>
      <exception cref="T:System.Web.HttpException">The process cannot impersonate.</exception>
    </member>
    <member name="M:System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr,System.String)">
      <summary>Impersonates the user specified by the configuration settings for the specified virtual path, or the specified user token.</summary>
      <returns>An <see cref="T:System.IDisposable" /> object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.</returns>
      <param name="userToken">The handle of a Windows account token.</param>
      <param name="virtualPath">The path to the requested resource.</param>
      <exception cref="T:System.Web.HttpException">The process cannot impersonate.</exception>
    </member>
    <member name="P:System.Web.Hosting.HostingEnvironment.InClientBuildManager">
      <summary>Gets a value that indicates whether the hosting environment has access to the ASP.NET build system.</summary>
      <returns>true if the application domain is the ASP.NET hosted application domain used in ClientBuildManager scenarios; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.Hosting.HostingEnvironment.IncrementBusyCount">
      <summary>Increases the count of busy objects in the hosted environment by one.</summary>
    </member>
    <member name="P:System.Web.Hosting.HostingEnvironment.InitializationException">
      <summary>Gets any exception thrown during initialization of the <see cref="T:System.Web.Hosting.HostingEnvironment" /> object.</summary>
      <returns>The exception thrown during initialization of the <see cref="T:System.Web.Hosting.HostingEnvironment" /> object. If no exception was thrown, returns null.</returns>
    </member>
    <member name="M:System.Web.Hosting.HostingEnvironment.InitializeLifetimeService">
      <summary>Gives the <see cref="T:System.Web.Hosting.HostingEnvironment" /> object an infinite lifetime by preventing a lease from being created.</summary>
      <returns>Always null.</returns>
    </member>
    <member name="M:System.Web.Hosting.HostingEnvironment.InitiateShutdown">
      <summary>Starts shutting down the Web application associated with this host and removes registered objects from the system.</summary>
    </member>
    <member name="P:System.Web.Hosting.HostingEnvironment.IsHosted">
      <summary>Gets a value indicating whether the current application domain is being hosted by an <see cref="T:System.Web.Hosting.ApplicationManager" /> object.</summary>
      <returns>true if the application domain is hosted by an <see cref="T:System.Web.Hosting.ApplicationManager" /> object; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.Hosting.HostingEnvironment.MapPath(System.String)">
      <summary>Maps a virtual path to a physical path on the server.</summary>
      <returns>The physical path on the server specified by <paramref name="virtualPath" />.</returns>
      <param name="virtualPath">The virtual path (absolute or relative).</param>
    </member>
    <member name="P:System.Web.Hosting.HostingEnvironment.MaxConcurrentRequestsPerCPU">
      <summary>Gets or sets the maximum concurrent requests per CPU.</summary>
      <returns>The maximum concurrent requests per CPU.</returns>
    </member>
    <member name="P:System.Web.Hosting.HostingEnvironment.MaxConcurrentThreadsPerCPU">
      <summary>Gets or sets the maximum concurrent threads per CPU.</summary>
      <returns>The maximum concurrent threads per CPU.</returns>
    </member>
    <member name="M:System.Web.Hosting.HostingEnvironment.MessageReceived">
      <summary>This method supports the ASP.NET infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)">
      <summary>Places an object in the list of registered objects for the application.</summary>
      <param name="obj">The object to register.</param>
    </member>
    <member name="M:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider(System.Web.Hosting.VirtualPathProvider)">
      <summary>Registers a new <see cref="T:System.Web.Hosting.VirtualPathProvider" /> instance with the ASP.NET compilation system.</summary>
      <param name="virtualPathProvider">The new <see cref="T:System.Web.Hosting.VirtualPathProvider" /> instance to add to the compilation system.</param>
    </member>
    <member name="M:System.Web.Hosting.HostingEnvironment.SetCultures">
      <summary>Sets the current thread to the culture specified in the application configuration file.</summary>
      <returns>An <see cref="T:System.IDisposable" /> object that represents the culture prior to changing; this object can be used to revert to the previous culture.</returns>
    </member>
    <member name="M:System.Web.Hosting.HostingEnvironment.SetCultures(System.String)">
      <summary>Sets the current thread to the culture of the specified virtual path.</summary>
      <returns>An <see cref="T:System.IDisposable" /> object that represents the culture prior to changing; this object can be used to revert to the previous culture.</returns>
      <param name="virtualPath">The path containing the culture information.</param>
    </member>
    <member name="P:System.Web.Hosting.HostingEnvironment.ShutdownReason">
      <summary>Returns an enumerated value that indicates why the application terminated.</summary>
      <returns>One of the <see cref="T:System.Web.ApplicationShutdownReason" /> values.</returns>
    </member>
    <member name="P:System.Web.Hosting.HostingEnvironment.SiteName">
      <summary>Gets the name of the site.</summary>
      <returns>The name of the site.</returns>
    </member>
    <member name="M:System.Web.Hosting.HostingEnvironment.UnregisterObject(System.Web.Hosting.IRegisteredObject)">
      <summary>Removes an object from the list of registered objects for the application.</summary>
      <param name="obj">The object to remove.</param>
    </member>
    <member name="P:System.Web.Hosting.HostingEnvironment.VirtualPathProvider">
      <summary>Gets the virtual path provider for this application.</summary>
      <returns>The <see cref="T:System.Web.Hosting.VirtualPathProvider" /> instance for this application.</returns>
    </member>
    <member name="T:System.Web.Hosting.HostSecurityPolicyResolver">
      <summary>Provides a way to customize ASP.NET behavior at run time that overrides the ASP.NET code access security policy. </summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The <see cref="P:System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType" /> attribute has an invalid value or cannot be found.</exception>
    </member>
    <member name="M:System.Web.Hosting.HostSecurityPolicyResolver.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Hosting.HostSecurityPolicyResolver" /> class.</summary>
    </member>
    <member name="M:System.Web.Hosting.HostSecurityPolicyResolver.ResolvePolicy(System.Security.Policy.Evidence)">
      <summary>Gets a value that indicates the security policy that should be applied to an assembly. </summary>
      <returns>A value that indicates the type of security permissions should be applied to an assembly.</returns>
      <param name="evidence">A collection of evidence about an assembly and a host, which is used as an input to security policy. </param>
    </member>
    <member name="T:System.Web.Hosting.HostSecurityPolicyResults">
      <summary>Specifies the type of security policy to apply to an assembly. </summary>
    </member>
    <member name="F:System.Web.Hosting.HostSecurityPolicyResults.DefaultPolicy">
      <summary>Indicates that ASP.NET should use default logic to determine the appropriate permissions set for the specified assembly. You should return the <see cref="F:System.Web.Hosting.HostSecurityPolicyResults.DefaultPolicy" /> value if you do not you want to decide the permission set for the assembly.</summary>
    </member>
    <member name="F:System.Web.Hosting.HostSecurityPolicyResults.FullTrust">
      <summary>Indicates that the specified assembly should be granted full trust. </summary>
    </member>
    <member name="F:System.Web.Hosting.HostSecurityPolicyResults.AppDomainTrust">
      <summary>Indicates that the permission set that is associated with the <see cref="T:System.AppDomain" /> instance should be applied to the specified assembly. This means that the assembly should be treated as a user assembly that is loaded into the partial-trust ASP.NET <see cref="T:System.AppDomain" /> instance. In addition, the assembly should have the permission set that was assigned to the <see cref="T:System.AppDomain" /> instance at initialization.</summary>
    </member>
    <member name="F:System.Web.Hosting.HostSecurityPolicyResults.Nothing">
      <summary>Indicates that the permission set for the specified assembly is set to empty. An empty permission set is a new instance of the <see cref="T:System.Security.PermissionSet" /> class, with a parameter value of <see cref="F:System.Security.Permissions.PermissionState.None" /> passed to the constructor. An assembly that is associated with an empty permission set will not load in an ASP.NET partial trust application domain. Therefore, you can use the <see cref="F:System.Web.Hosting.HostSecurityPolicyResults.Nothing" /> field to prevent an assembly from loading into a partial trust ASP.NET application domain.</summary>
    </member>
    <member name="T:System.Web.Hosting.IAdphManager">
      <summary>Manages an application domain protocol handler</summary>
    </member>
    <member name="M:System.Web.Hosting.IAdphManager.StartAppDomainProtocolListenerChannel(System.String,System.String,System.Web.Hosting.IListenerChannelCallback)">
      <summary>Starts an application domain protocol listener channel.</summary>
      <param name="appId">The application ID</param>
      <param name="protocolId">The protocol ID.</param>
      <param name="listenerChannelCallback">The protocol listener channel callback.</param>
    </member>
    <member name="M:System.Web.Hosting.IAdphManager.StopAppDomainProtocol(System.String,System.String,System.Boolean)">
      <summary>Stops an application domain protocol listener channel.</summary>
      <param name="appId">The application ID</param>
      <param name="protocolId">The protocol ID.</param>
      <param name="immediate">The protocol listener channel callback.</param>
    </member>
    <member name="M:System.Web.Hosting.IAdphManager.StopAppDomainProtocolListenerChannel(System.String,System.String,System.Int32,System.Boolean)">
      <summary>Stops an application domain protocol listener channel.</summary>
      <param name="appId">The application ID</param>
      <param name="protocolId">The protocol ID.</param>
      <param name="listenerChannelId">The protocol listener channel callback.</param>
      <param name="immediate">Whether to stop the protocol listener channel immediately</param>
    </member>
    <member name="T:System.Web.Hosting.IAppDomainFactory">
      <summary>Defines a single method to create a new <see cref="T:System.AppDomain" /> instance for a Web application. This interface was used by .NET Framework versions earlier than 2.0; version 2.0 uses the <see cref="T:System.Web.Hosting.IAppManagerAppDomainFactory" /> interface instead.</summary>
    </member>
    <member name="M:System.Web.Hosting.IAppDomainFactory.Create(System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>Creates a new application domain for the specified Web application. This interface was used by .NET Framework versions earlier than 2.0; version 2.0 uses the <see cref="T:System.Web.Hosting.IAppManagerAppDomainFactory" /> interface instead.</summary>
      <returns>A new application domain for the specified Web application.</returns>
      <param name="module">The module containing the Web application.</param>
      <param name="typeName">The type of the Web application.</param>
      <param name="appId">The unique identifier for the Web application.</param>
      <param name="appPath">The path to the Web application's files.</param>
      <param name="strUrlOfAppOrigin">The URL of origin for the Web application.</param>
      <param name="iZone">The zone of origin for the Web application.</param>
    </member>
    <member name="T:System.Web.Hosting.IAppDomainInfo">
      <summary>Provides information about the application domain.</summary>
    </member>
    <member name="M:System.Web.Hosting.IAppDomainInfo.GetId">
      <summary>Gets the application domain ID.</summary>
      <returns>The unique application domain ID.</returns>
    </member>
    <member name="M:System.Web.Hosting.IAppDomainInfo.GetPhysicalPath">
      <summary>Gets the physical path of the application domain.</summary>
      <returns>The physical path of the application domain.</returns>
    </member>
    <member name="M:System.Web.Hosting.IAppDomainInfo.GetSiteId">
      <summary>Gets the site ID of the application domain.</summary>
      <returns>The site ID of the application domain.</returns>
    </member>
    <member name="M:System.Web.Hosting.IAppDomainInfo.GetVirtualPath">
      <summary>Gets the root virtual path of the application domain.</summary>
      <returns>The root virtual path of the application domain.</returns>
    </member>
    <member name="M:System.Web.Hosting.IAppDomainInfo.IsIdle">
      <summary>Gets the state of the application domain.</summary>
      <returns>true if the application domain is idle; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.Hosting.IAppDomainInfoEnum">
      <summary>Provides access to an application domain.</summary>
    </member>
    <member name="M:System.Web.Hosting.IAppDomainInfoEnum.Count">
      <summary>Retrieves the number of application domains.</summary>
      <returns>The number of application domains.</returns>
    </member>
    <member name="M:System.Web.Hosting.IAppDomainInfoEnum.GetData">
      <summary>Gets an <see cref="T:System.Web.Hosting.IAppDomainInfo" /> interface.</summary>
      <returns>An <see cref="T:System.Web.Hosting.IAppDomainInfo" /> interface.</returns>
    </member>
    <member name="M:System.Web.Hosting.IAppDomainInfoEnum.MoveNext">
      <summary>Moves to the next <see cref="T:System.Web.Hosting.IAppDomainInfo" /> interface.</summary>
      <returns>true if a new interface is available; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.Hosting.IAppDomainInfoEnum.Reset">
      <summary>Initializes the <see cref="T:System.Web.Hosting.IAppDomainInfo" /> interface.</summary>
    </member>
    <member name="T:System.Web.Hosting.IApplicationHost">
      <summary>Retrieves information about the application host.</summary>
    </member>
    <member name="M:System.Web.Hosting.IApplicationHost.GetConfigMapPathFactory">
      <summary>Enables creation of an <see cref="T:System.Web.Configuration.IConfigMapPath" /> interface in the target application domain.</summary>
      <returns>An object that is used to map virtual and physical paths of the configuration file.</returns>
    </member>
    <member name="M:System.Web.Hosting.IApplicationHost.GetConfigToken">
      <summary>Gets the token for the application host configuration (.config) file.</summary>
      <returns>A Windows handle that contains the Windows security token for the application's root. The token can be used to open and read the application configuration file.</returns>
    </member>
    <member name="M:System.Web.Hosting.IApplicationHost.GetPhysicalPath">
      <summary>Gets the application's root physical path.</summary>
      <returns>The physical path of the application root.</returns>
    </member>
    <member name="M:System.Web.Hosting.IApplicationHost.GetSiteID">
      <summary>Gets the site ID.</summary>
      <returns>The site ID.</returns>
    </member>
    <member name="M:System.Web.Hosting.IApplicationHost.GetSiteName">
      <summary>Gets the site name.</summary>
      <returns>The site name.</returns>
    </member>
    <member name="M:System.Web.Hosting.IApplicationHost.GetVirtualPath">
      <summary>Gets the application's root virtual path.</summary>
      <returns>The application's root virtual path.</returns>
    </member>
    <member name="M:System.Web.Hosting.IApplicationHost.MessageReceived">
      <summary>Indicates that a message was received.</summary>
    </member>
    <member name="T:System.Web.Hosting.IApplicationPreloadManager">
      <summary>Provides methods that ASP.NET uses to invoke the application-preload feature in IIS 7.0.</summary>
    </member>
    <member name="M:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadState(System.String,System.String,System.Boolean)">
      <summary>Called by IIS 7.0 to notify ASP.NET whether an application should be preloaded.</summary>
      <param name="context">The application context.</param>
      <param name="appId">The unique ID of the application. </param>
      <param name="enabled">true to indicate that the application should be preloaded; otherwise, false. </param>
    </member>
    <member name="M:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadUtil(System.Web.Hosting.IApplicationPreloadUtil)">
      <summary>Calls IIS 7.0 to get information that is required in order to preload an application. </summary>
      <param name="preloadUtil">The handle to an unmanaged interface in IIS 7.0 that ASP.NET calls to get information. </param>
    </member>
    <member name="T:System.Web.Hosting.IApplicationPreloadUtil">
      <summary>Provides methods that ASP.NET uses to communicate with IIS 7.0 while the server preloads an application.</summary>
    </member>
    <member name="M:System.Web.Hosting.IApplicationPreloadUtil.GetApplicationPreloadInfo(System.String,System.Boolean@,System.String@,System.String[]@)">
      <summary>Gets initialization data that is required in order to preload an application. This method is called by ASP.NET.</summary>
      <param name="context">The application context. </param>
      <param name="enabled">When this method returns, contains true to indicate that the application has to be preloaded; otherwise, false. This parameter is passed uninitialized.</param>
      <param name="startupObjType">When this method returns, contains a string that identifies the managed type that is part of the preload process. This parameter is passed uninitialized.</param>
      <param name="parametersForStartupObj">When this method returns, contains the data that will be passed to the preloaded type. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Web.Hosting.IApplicationPreloadUtil.ReportApplicationPreloadFailure(System.String,System.Int32,System.String)">
      <summary>Reports that an error occurred in IIS 7.0 while the server was preloading the ASP.NET application.</summary>
      <param name="context">The application context.</param>
      <param name="errorCode">The numeric error code.</param>
      <param name="errorMessage">The error text.</param>
    </member>
    <member name="T:System.Web.Hosting.IAppManagerAppDomainFactory">
      <summary>Defines a method used to create an <see cref="T:System.AppDomain" /> instance for a Web-application manager and a method used to stop all <see cref="T:System.AppDomain" /> instances for a Web-application manager.</summary>
    </member>
    <member name="M:System.Web.Hosting.IAppManagerAppDomainFactory.Create(System.String,System.String)">
      <summary>Creates a new application domain for the specified Web application.</summary>
      <returns>A new application domain for the specified Web application.</returns>
      <param name="appId">The unique identifier for the new application.</param>
      <param name="appPath">The path to the new application's files.</param>
    </member>
    <member name="M:System.Web.Hosting.IAppManagerAppDomainFactory.Stop">
      <summary>Stops all application domains associated with this application manager. </summary>
    </member>
    <member name="T:System.Web.Hosting.IISAPIRuntime">
      <summary>Defines methods used to create <see cref="T:System.Web.HttpWorkerRequest" /> objects in the .NET Framework.</summary>
    </member>
    <member name="M:System.Web.Hosting.IISAPIRuntime.DoGCCollect">
      <summary>Forces garbage collection.</summary>
    </member>
    <member name="M:System.Web.Hosting.IISAPIRuntime.ProcessRequest(System.IntPtr,System.Int32)">
      <summary>Creates a new <see cref="T:System.Web.HttpWorkerRequest" /> object to process the current request </summary>
      <returns>0 if <see cref="T:System.Web.HttpWorkerRequest" /> was created successfully; otherwise, 1.</returns>
      <param name="ecb">An ISAPI extension control block.</param>
      <param name="useProcessModel">0 to create an out-of-process request; otherwise, an in-process request is created.</param>
    </member>
    <member name="M:System.Web.Hosting.IISAPIRuntime.StartProcessing">
      <summary>Starts processing all items in the worker process pipeline.</summary>
    </member>
    <member name="M:System.Web.Hosting.IISAPIRuntime.StopProcessing">
      <summary>Stops processing the items in the worker process pipeline.</summary>
    </member>
    <member name="T:System.Web.Hosting.IListenerChannelCallback">
      <summary>Provides listener-channel notifications from protocol handlers to the worker process framework. Also enables protocol handlers to access additional parameters, such as the ID of the listener channel.</summary>
    </member>
    <member name="M:System.Web.Hosting.IListenerChannelCallback.GetBlob(System.Byte[],System.Int32@)">
      <summary>Retrieves data that the protocol manager will pass to a listener channel when the protocol manager is starting that listener channel.</summary>
      <param name="buffer">The data that will be passed to the listener channel.</param>
      <param name="bufferSize">The amount of data, in bytes, that is in the buffer.</param>
    </member>
    <member name="M:System.Web.Hosting.IListenerChannelCallback.GetBlobLength">
      <summary>Gets the size of the buffered data in the listener channel.</summary>
      <returns>The size, in bytes, of the data that is in the listener channel buffer.</returns>
    </member>
    <member name="M:System.Web.Hosting.IListenerChannelCallback.GetId">
      <summary>Gets the ID of a listener channel that has to be started.</summary>
      <returns>The ID of the listener channel.</returns>
    </member>
    <member name="M:System.Web.Hosting.IListenerChannelCallback.ReportMessageReceived">
      <summary>Notifies the worker process framework that a new message was received.</summary>
    </member>
    <member name="M:System.Web.Hosting.IListenerChannelCallback.ReportStarted">
      <summary>Notifies the worker process framework that a listener channel has started.</summary>
    </member>
    <member name="M:System.Web.Hosting.IListenerChannelCallback.ReportStopped(System.Int32)">
      <summary>Notifies the worker process framework that a listener channel has stopped.</summary>
      <param name="hr">The HRESULT value that reports the status of a listener channel.</param>
    </member>
    <member name="T:System.Web.Hosting.IPphManager">
      <summary>Provides stop and start control of listener channels.</summary>
    </member>
    <member name="M:System.Web.Hosting.IPphManager.StartProcessProtocolListenerChannel(System.String,System.Web.Hosting.IListenerChannelCallback)">
      <summary>Starts the specified process protocol listener channel.</summary>
      <param name="protocolId">The protocol ID.</param>
      <param name="listenerChannelCallback">The <see cref="T:System.Web.Hosting.IListenerChannelCallback" /> interface.</param>
    </member>
    <member name="M:System.Web.Hosting.IPphManager.StopProcessProtocol(System.String,System.Boolean)">
      <summary>Stops all protocol listener channels.</summary>
      <param name="protocolId">The protocol ID of the listener channel to stop.</param>
      <param name="immediate">true to notify the process protocol manager to stop all listener channels synchronously; false to stop all listener channels asynchronously.</param>
    </member>
    <member name="M:System.Web.Hosting.IPphManager.StopProcessProtocolListenerChannel(System.String,System.Int32,System.Boolean)">
      <summary>Stops the specified process protocol listener channel.</summary>
      <param name="protocolId">The protocol ID for the listener channel.</param>
      <param name="listenerChannelId">The listener channel ID.</param>
      <param name="immediate">true to notify the process protocol manager to stop all listener channels synchronously; false to stop all listener channels asynchronously.</param>
    </member>
    <member name="T:System.Web.Hosting.IProcessHost">
      <summary>Defines the set of process-wide functionality that every host of the application manager must implement.</summary>
    </member>
    <member name="M:System.Web.Hosting.IProcessHost.EnumerateAppDomains(System.Web.Hosting.IAppDomainInfoEnum@)">
      <summary>Gets an <see cref="T:System.Web.Hosting.AppDomainInfoEnum" /> interface.</summary>
      <param name="appDomainInfoEnum">The <see cref="T:System.Web.Hosting.AppDomainInfoEnum" /> interface.</param>
    </member>
    <member name="M:System.Web.Hosting.IProcessHost.Shutdown">
      <summary>Sends a request to terminate all applications in an application domain.</summary>
    </member>
    <member name="M:System.Web.Hosting.IProcessHost.ShutdownApplication(System.String)">
      <summary>Terminates the specified application.</summary>
      <param name="appId">The application to terminate.</param>
    </member>
    <member name="M:System.Web.Hosting.IProcessHost.StartApplication(System.String,System.String,System.Object@)">
      <summary>Starts the specified application</summary>
      <param name="appId">The unique application ID.</param>
      <param name="appPath">The virtual path to the application.</param>
      <param name="runtimeInterface">A runtime manager interface.</param>
    </member>
    <member name="T:System.Web.Hosting.IProcessHostFactoryHelper">
      <summary>Provides a method to retrieve an <see cref="T:System.Web.Hosting.IProcessHost" /> interface.</summary>
    </member>
    <member name="M:System.Web.Hosting.IProcessHostFactoryHelper.GetProcessHost(System.Web.Hosting.IProcessHostSupportFunctions)">
      <summary>Gets the process host.</summary>
      <returns>A process host object.</returns>
      <param name="functions">Functions that are declared by the <see cref="T:System.Web.Hosting.IProcessHostSupportFunctions" /> interface.</param>
    </member>
    <member name="T:System.Web.Hosting.IProcessHostIdleAndHealthCheck">
      <summary>Provides ways to check on the state of a process.</summary>
    </member>
    <member name="M:System.Web.Hosting.IProcessHostIdleAndHealthCheck.IsIdle">
      <summary>Gets the state of the application domain.</summary>
      <returns>true if the application domain is idle; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.Hosting.IProcessHostIdleAndHealthCheck.Ping(System.Web.Hosting.IProcessPingCallback)">
      <summary>Pings a process.</summary>
      <param name="callback">The callback to handle the ping response.</param>
    </member>
    <member name="T:System.Web.Hosting.IProcessHostPreloadClient">
      <summary>Defines an interface that can be implemented in a type in order to preload the type in an ASP.NET application that is running on IIS 7.0. </summary>
    </member>
    <member name="M:System.Web.Hosting.IProcessHostPreloadClient.Preload(System.String[])">
      <summary>Provides initialization data that is required in order to preload the application.</summary>
      <param name="parameters">Data to initialize the application. </param>
    </member>
    <member name="T:System.Web.Hosting.IProcessHostSupportFunctions">
      <summary>Provides helper functions for the process host.</summary>
    </member>
    <member name="M:System.Web.Hosting.IProcessHostSupportFunctions.GetAppHostConfigFilename">
      <summary>Gets the application host configuration (.config) file path.</summary>
      <returns>The physical path (including the file name) to the application host configuration file.</returns>
    </member>
    <member name="M:System.Web.Hosting.IProcessHostSupportFunctions.GetApplicationProperties(System.String,System.String@,System.String@,System.String@,System.String@)">
      <summary>Gets the properties from the application's metabase.</summary>
      <param name="appId">The ID of the application.</param>
      <param name="virtualPath">The root virtual path of the application.</param>
      <param name="physicalPath">The root physical path of the application.</param>
      <param name="siteName">The display name of the application.</param>
      <param name="siteId">The site ID.</param>
    </member>
    <member name="M:System.Web.Hosting.IProcessHostSupportFunctions.GetConfigToken(System.String)">
      <summary>Gets a Windows security token for the specified application's root directory.</summary>
      <returns>A Windows handle that contains a Windows security token for the specified application's root directory.</returns>
      <param name="appId">The unique identifier of the application.</param>
    </member>
    <member name="M:System.Web.Hosting.IProcessHostSupportFunctions.GetNativeConfigurationSystem">
      <summary>Retrieves the INativeConfigurationSystem interface.</summary>
      <returns>A pointer to the INativeConfigurationSystem interface.</returns>
    </member>
    <member name="M:System.Web.Hosting.IProcessHostSupportFunctions.GetRootWebConfigFilename">
      <summary>Gets the physical path for the ApplicationHost.config file.</summary>
      <returns>The physical path for the ApplicationHost.config file.</returns>
    </member>
    <member name="M:System.Web.Hosting.IProcessHostSupportFunctions.MapPath(System.String,System.String,System.String@)">
      <summary>Gets the physical path of a relative URL.</summary>
      <param name="appId">The application ID.</param>
      <param name="virtualPath">The relative URL to map.</param>
      <param name="physicalPath">The physical path of the relative URL.</param>
    </member>
    <member name="T:System.Web.Hosting.IProcessPingCallback">
      <summary>Provides functionality to respond to a ping request.</summary>
    </member>
    <member name="M:System.Web.Hosting.IProcessPingCallback.Respond">
      <summary>Provides a callback routine that responds to a ping request.</summary>
    </member>
    <member name="T:System.Web.Hosting.IRegisteredObject">
      <summary>Defines methods for objects that are managed by the hosting environment.</summary>
    </member>
    <member name="M:System.Web.Hosting.IRegisteredObject.Stop(System.Boolean)">
      <summary>Requests a registered object to unregister.</summary>
      <param name="immediate">true to indicate the registered object should unregister from the hosting environment before returning; otherwise, false.</param>
    </member>
    <member name="T:System.Web.Hosting.ISAPIRuntime">
      <summary>Manages <see cref="T:System.Web.HttpWorkerRequest" /> objects in the .NET Framework. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Hosting.ISAPIRuntime.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Hosting.ISAPIRuntime" /> class. </summary>
    </member>
    <member name="M:System.Web.Hosting.ISAPIRuntime.DoGCCollect">
      <summary>Forces garbage collection.</summary>
    </member>
    <member name="M:System.Web.Hosting.ISAPIRuntime.InitializeLifetimeService">
      <summary>Gives the <see cref="T:System.Web.Hosting.ISAPIRuntime" /> object an infinite lifetime by preventing a lease from being created. </summary>
      <returns>null to prevent a lease from being created.</returns>
    </member>
    <member name="M:System.Web.Hosting.ISAPIRuntime.ProcessRequest(System.IntPtr,System.Int32)">
      <summary>Creates a new <see cref="T:System.Web.HttpWorkerRequest" /> object to process the current request.</summary>
      <returns>0 if <see cref="T:System.Web.HttpWorkerRequest" /> was created successfully; otherwise, 1.</returns>
      <param name="ecb">An ISAPI extension control block.</param>
      <param name="iWRType">0 to create an out-of-process request; otherwise, an in-process request is created.</param>
    </member>
    <member name="M:System.Web.Hosting.ISAPIRuntime.StartProcessing">
      <summary>Starts processing all items in the worker process pipeline.</summary>
    </member>
    <member name="M:System.Web.Hosting.ISAPIRuntime.StopProcessing">
      <summary>Stops processing the items in the worker process pipeline.</summary>
    </member>
    <member name="M:System.Web.Hosting.ISAPIRuntime.System#Web#Hosting#IRegisteredObject#Stop(System.Boolean)">
      <summary>Requests a registered object to unregister.</summary>
      <param name="immediate">true to indicate that the registered object should unregister from the hosting environment before returning; otherwise, false.</param>
    </member>
    <member name="T:System.Web.Hosting.ProcessHost">
      <summary>Represents a process host.</summary>
    </member>
    <member name="M:System.Web.Hosting.ProcessHost.EnumerateAppDomains(System.Web.Hosting.IAppDomainInfoEnum@)">
      <summary>Provides access to an enumerable set of application domains. </summary>
      <param name="appDomainInfoEnum">Information about the application domains.</param>
    </member>
    <member name="M:System.Web.Hosting.ProcessHost.InitializeLifetimeService">
      <summary>Gives the process host an infinite lifetime by preventing a lease from being created.</summary>
      <returns>Returns a null value to indicate that the lease never expires. </returns>
    </member>
    <member name="M:System.Web.Hosting.ProcessHost.IsIdle">
      <summary>Gets the state of a process.</summary>
      <returns>true if the process host is idle; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.Hosting.ProcessHost.Ping(System.Web.Hosting.IProcessPingCallback)">
      <summary>Pings a process.</summary>
      <param name="callback">The callback to handle the ping response.</param>
    </member>
    <member name="M:System.Web.Hosting.ProcessHost.SetApplicationPreloadState(System.String,System.String,System.Boolean)">
      <summary>Notifies ASP.NET that a particular application that is running on IIS 7.0 is configured to be preloaded.</summary>
      <param name="context">The application context. </param>
      <param name="appId">The unique ID of the application.</param>
      <param name="enabled">true to indicate the application should be preloaded; otherwise, false.</param>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Web.Hosting.IApplicationPreloadUtil" /> instance that contains information for preloading the application is null or empty.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="appId" /> is null or empty. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enabled" /> is set to true and the process host was not previously passed an <see cref="T:System.Web.Hosting.IApplicationPreloadUtil" /> interface to its <see cref="M:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadUtil(System.Web.Hosting.IApplicationPreloadUtil)" /> method</exception>
    </member>
    <member name="M:System.Web.Hosting.ProcessHost.SetApplicationPreloadUtil(System.Web.Hosting.IApplicationPreloadUtil)">
      <summary>Creates a type that calls IIS 7.0 to get information that is required in order to preload an application.</summary>
      <param name="applicationPreloadUtil">The handle to an unmanaged interface in IIS 7.0 that ASP.NET calls to get information. </param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.Hosting.IApplicationPreloadUtil" /> instance that contains information for preloading the application is not null. </exception>
    </member>
    <member name="M:System.Web.Hosting.ProcessHost.Shutdown">
      <summary>Unloads the process host. </summary>
    </member>
    <member name="M:System.Web.Hosting.ProcessHost.ShutdownApplication(System.String)">
      <summary>Shuts down the specified application.</summary>
      <param name="appId">The unique identifier of the application to shut down.</param>
    </member>
    <member name="M:System.Web.Hosting.ProcessHost.StartAppDomainProtocolListenerChannel(System.String,System.String,System.Web.Hosting.IListenerChannelCallback)">
      <summary>Starts an application domain protocol listener channel.</summary>
      <param name="appId">The application ID.</param>
      <param name="protocolId">The protocol ID.</param>
      <param name="listenerChannelCallback">The protocol listener channel callback.</param>
    </member>
    <member name="M:System.Web.Hosting.ProcessHost.StartApplication(System.String,System.String,System.Object@)">
      <summary>Starts the specified application.</summary>
      <param name="appId">The application ID.</param>
      <param name="appPath">The virtual path to the application.</param>
      <param name="runtimeInterface">A runtime manager interface.</param>
    </member>
    <member name="M:System.Web.Hosting.ProcessHost.StartProcessProtocolListenerChannel(System.String,System.Web.Hosting.IListenerChannelCallback)">
      <summary>Starts a process protocol listener channel.</summary>
      <param name="protocolId">The protocol ID.</param>
      <param name="listenerChannelCallback">The protocol listener channel callback.</param>
    </member>
    <member name="M:System.Web.Hosting.ProcessHost.StopAppDomainProtocol(System.String,System.String,System.Boolean)">
      <summary>Stops an application domain protocol listener channel.</summary>
      <param name="appId">The application ID.</param>
      <param name="protocolId">The protocol ID.</param>
      <param name="immediate">Whether to stop the protocol immediately.</param>
    </member>
    <member name="M:System.Web.Hosting.ProcessHost.StopAppDomainProtocolListenerChannel(System.String,System.String,System.Int32,System.Boolean)">
      <summary>Stops an application domain protocol listener channel.</summary>
      <param name="appId">The application ID</param>
      <param name="protocolId">The protocol ID.</param>
      <param name="listenerChannelId">The protocol listener channel ID.</param>
      <param name="immediate">Whether to stop the protocol listener channel immediately.</param>
    </member>
    <member name="M:System.Web.Hosting.ProcessHost.StopProcessProtocol(System.String,System.Boolean)">
      <summary>Stops a process protocol.</summary>
      <param name="protocolId">The protocol ID.</param>
      <param name="immediate">Whether to stop the protocol immediately.</param>
    </member>
    <member name="M:System.Web.Hosting.ProcessHost.StopProcessProtocolListenerChannel(System.String,System.Int32,System.Boolean)">
      <summary>Stops a protocol listener channel.</summary>
      <param name="protocolId">The protocol ID.</param>
      <param name="listenerChannelId">The protocol listener channel callback.</param>
      <param name="immediate">Whether to stop the protocol listener channel immediately.</param>
    </member>
    <member name="T:System.Web.Hosting.ProcessHostFactoryHelper">
      <summary>Provides a method to retrieve an <see cref="T:System.Web.Hosting.IProcessHost" /> interface.</summary>
    </member>
    <member name="M:System.Web.Hosting.ProcessHostFactoryHelper.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Hosting.ProcessHostFactoryHelper" /> class.</summary>
    </member>
    <member name="M:System.Web.Hosting.ProcessHostFactoryHelper.GetProcessHost(System.Web.Hosting.IProcessHostSupportFunctions)">
      <summary>Gets the process host.</summary>
      <returns>An object that contains the process host.</returns>
      <param name="functions">Functions that are declared by the <see cref="T:System.Web.Hosting.IProcessHostSupportFunctions" /> interface.</param>
    </member>
    <member name="M:System.Web.Hosting.ProcessHostFactoryHelper.InitializeLifetimeService">
      <summary>Gives the process an infinite lifetime by preventing a lease from being created.</summary>
      <returns>null.</returns>
    </member>
    <member name="T:System.Web.Hosting.ProcessProtocolHandler">
      <summary>Provides support for protocol handlers.</summary>
    </member>
    <member name="M:System.Web.Hosting.ProcessProtocolHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Hosting.ProcessProtocolHandler" /> class.</summary>
    </member>
    <member name="M:System.Web.Hosting.ProcessProtocolHandler.InitializeLifetimeService">
      <summary>Gives the protocol handler an infinite lifetime by preventing a lease from being created.</summary>
      <returns>An object that is used to control the lifetime policy for this instance.</returns>
    </member>
    <member name="M:System.Web.Hosting.ProcessProtocolHandler.StartListenerChannel(System.Web.Hosting.IListenerChannelCallback,System.Web.Hosting.IAdphManager)">
      <summary>Starts a protocol listener channel.</summary>
      <param name="listenerChannelCallback">The callback for the listener channel.</param>
      <param name="AdphManager">The application domain handler manager that is associated with the listener channel.</param>
    </member>
    <member name="M:System.Web.Hosting.ProcessProtocolHandler.StopListenerChannel(System.Int32,System.Boolean)">
      <summary>Stops the specified process protocol handler.</summary>
      <param name="listenerChannelId">The callback for the listener channel.</param>
      <param name="immediate">true to stop the protocol immediately; otherwise, false.</param>
    </member>
    <member name="M:System.Web.Hosting.ProcessProtocolHandler.StopProtocol(System.Boolean)">
      <summary>Stops a process protocol handler.</summary>
      <param name="immediate">true to stop the protocol immediately; otherwise, false.</param>
    </member>
    <member name="T:System.Web.Hosting.SimpleWorkerRequest">
      <summary>Provides a simple implementation of the <see cref="T:System.Web.HttpWorkerRequest" /> abstract class that can be used to host ASP.NET applications outside an Internet Information Services (IIS) application. You can employ SimpleWorkerRequest directly or extend it.</summary>
    </member>
    <member name="M:System.Web.Hosting.SimpleWorkerRequest.#ctor(System.String,System.String,System.IO.TextWriter)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Hosting.SimpleWorkerRequest" /> class when the target application domain has been created using the <see cref="M:System.Web.Hosting.ApplicationHost.CreateApplicationHost(System.Type,System.String,System.String)" /> method.</summary>
      <param name="page">The page to be requested (or the virtual path to the page, relative to the application directory). </param>
      <param name="query">The text of the query string. </param>
      <param name="output">A <see cref="T:System.IO.TextWriter" /> that captures output from the response </param>
    </member>
    <member name="M:System.Web.Hosting.SimpleWorkerRequest.#ctor(System.String,System.String,System.String,System.String,System.IO.TextWriter)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Hosting.SimpleWorkerRequest" /> class for use in an arbitrary application domain, when the user code creates an <see cref="T:System.Web.HttpContext" /> (passing the SimpleWorkerRequest as an argument to the HttpContext constructor).</summary>
      <param name="appVirtualDir">The virtual path to the application directory; for example, "/app". </param>
      <param name="appPhysicalDir">The physical path to the application directory; for example, "c:\app". </param>
      <param name="page">The virtual path for the request (relative to the application directory). </param>
      <param name="query">The text of the query string. </param>
      <param name="output">A <see cref="T:System.IO.TextWriter" /> that captures the output from the response. </param>
      <exception cref="T:System.Web.HttpException">The <paramref name="appVirtualDir" /> parameter cannot be overridden in this context.</exception>
    </member>
    <member name="M:System.Web.Hosting.SimpleWorkerRequest.EndOfRequest">
      <summary>Notifies the <see cref="T:System.Web.HttpWorkerRequest" /> that request processing for the current request is complete.</summary>
    </member>
    <member name="M:System.Web.Hosting.SimpleWorkerRequest.FlushResponse(System.Boolean)">
      <summary>Sends all pending response data to the client.</summary>
      <param name="finalFlush">true if this is the last time response data will be flushed; otherwise, false. </param>
    </member>
    <member name="M:System.Web.Hosting.SimpleWorkerRequest.GetAppPath">
      <summary>Returns the virtual path to the currently executing server application.</summary>
      <returns>The virtual path of the current application.</returns>
    </member>
    <member name="M:System.Web.Hosting.SimpleWorkerRequest.GetAppPathTranslated">
      <summary>Returns the UNC-translated path to the currently executing server application.</summary>
      <returns>The physical path of the current application.</returns>
    </member>
    <member name="M:System.Web.Hosting.SimpleWorkerRequest.GetFilePath">
      <summary>Returns the physical path to the requested URI.</summary>
      <returns>The physical path to the requested URI.</returns>
    </member>
    <member name="M:System.Web.Hosting.SimpleWorkerRequest.GetFilePathTranslated">
      <summary>Returns the physical file path to the requested URI (and translates it from virtual path to physical path: for example, "/proj1/page.aspx" to "c:\dir\page.aspx") </summary>
      <returns>The translated physical file path to the requested URI.</returns>
    </member>
    <member name="M:System.Web.Hosting.SimpleWorkerRequest.GetHttpVerbName">
      <summary>Returns the HTTP request verb.</summary>
      <returns>The HTTP verb for this request.</returns>
    </member>
    <member name="M:System.Web.Hosting.SimpleWorkerRequest.GetHttpVersion">
      <summary>Returns the HTTP version string of the request (for example, "HTTP/1.1").</summary>
      <returns>The HTTP version string returned in the request header.</returns>
    </member>
    <member name="M:System.Web.Hosting.SimpleWorkerRequest.GetLocalAddress">
      <summary>Returns the server IP address of the interface on which the request was received.</summary>
      <returns>The server IP address of the interface on which the request was received.</returns>
    </member>
    <member name="M:System.Web.Hosting.SimpleWorkerRequest.GetLocalPort">
      <summary>Returns the port number on which the request was received.</summary>
      <returns>The server port number on which the request was received.</returns>
    </member>
    <member name="M:System.Web.Hosting.SimpleWorkerRequest.GetPathInfo">
      <summary>Returns additional path information for a resource with a URL extension. That is, for the path /virdir/page.html/tail, the return value is /tail.</summary>
      <returns>Additional path information for a resource.</returns>
    </member>
    <member name="M:System.Web.Hosting.SimpleWorkerRequest.GetQueryString">
      <summary>Returns the query string specified in the request URL.</summary>
      <returns>The request query string.</returns>
    </member>
    <member name="M:System.Web.Hosting.SimpleWorkerRequest.GetRawUrl">
      <summary>Returns the URL path contained in the header with the query string appended.</summary>
      <returns>The raw URL path of the request header.NoteThe returned URL is not normalized. Using the URL for access control, or security-sensitive decisions can expose your application to canonicalization security vulnerabilities.</returns>
    </member>
    <member name="M:System.Web.Hosting.SimpleWorkerRequest.GetRemoteAddress">
      <summary>Returns the IP address of the client.</summary>
      <returns>The client's IP address.</returns>
    </member>
    <member name="M:System.Web.Hosting.SimpleWorkerRequest.GetRemotePort">
      <summary>Returns the client's port number.</summary>
      <returns>The client's port number.</returns>
    </member>
    <member name="M:System.Web.Hosting.SimpleWorkerRequest.GetServerVariable(System.String)">
      <summary>Returns a single server variable from a dictionary of server variables associated with the request.</summary>
      <returns>The requested server variable.</returns>
      <param name="name">The name of the requested server variable. </param>
    </member>
    <member name="M:System.Web.Hosting.SimpleWorkerRequest.GetUriPath">
      <summary>Returns the virtual path to the requested URI.</summary>
      <returns>The path to the requested URI.</returns>
    </member>
    <member name="M:System.Web.Hosting.SimpleWorkerRequest.GetUserToken">
      <summary>Returns the client's impersonation token.</summary>
      <returns>A value representing the client's impersonation token. The default is <see cref="F:System.IntPtr.Zero" />.</returns>
    </member>
    <member name="P:System.Web.Hosting.SimpleWorkerRequest.MachineConfigPath">
      <summary>Gets the full physical path to the Machine.config file.</summary>
      <returns>The physical path to the Machine.config file.</returns>
    </member>
    <member name="P:System.Web.Hosting.SimpleWorkerRequest.MachineInstallDirectory">
      <summary>Gets the physical path to the directory where the ASP.NET binaries are installed.</summary>
      <returns>The physical directory to the ASP.NET binary files.</returns>
    </member>
    <member name="M:System.Web.Hosting.SimpleWorkerRequest.MapPath(System.String)">
      <summary>Returns the physical path corresponding to the specified virtual path.</summary>
      <returns>The physical path that corresponds to the virtual path specified in the <paramref name="path" /> parameter.</returns>
      <param name="path">The virtual path. </param>
    </member>
    <member name="P:System.Web.Hosting.SimpleWorkerRequest.RootWebConfigPath">
      <summary>Gets the full physical path to the root Web.config file.</summary>
      <returns>The physical path to the root Web.config file.</returns>
    </member>
    <member name="M:System.Web.Hosting.SimpleWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)">
      <summary>Adds a standard HTTP header to the response.</summary>
      <param name="index">The header index. For example, <see cref="F:System.Web.HttpWorkerRequest.HeaderContentLength" />. </param>
      <param name="value">The header value. </param>
    </member>
    <member name="M:System.Web.Hosting.SimpleWorkerRequest.SendResponseFromFile(System.IntPtr,System.Int64,System.Int64)">
      <summary>Adds the contents of the file with the specified handle to the response and specifies the starting position in the file and the number of bytes to send.</summary>
      <param name="handle">The handle of the file to send. </param>
      <param name="offset">The starting position in the file. </param>
      <param name="length">The number of bytes to send. </param>
    </member>
    <member name="M:System.Web.Hosting.SimpleWorkerRequest.SendResponseFromFile(System.String,System.Int64,System.Int64)">
      <summary>Adds the contents of the file with the specified name to the response and specifies the starting position in the file and the number of bytes to send.</summary>
      <param name="filename">The name of the file to send. </param>
      <param name="offset">The starting position in the file. </param>
      <param name="length">The number of bytes to send. </param>
    </member>
    <member name="M:System.Web.Hosting.SimpleWorkerRequest.SendResponseFromMemory(System.Byte[],System.Int32)">
      <summary>Adds the contents of a byte array to the response and specifies the number of bytes to send.</summary>
      <param name="data">The byte array to send. </param>
      <param name="length">The number of bytes to send. </param>
    </member>
    <member name="M:System.Web.Hosting.SimpleWorkerRequest.SendStatus(System.Int32,System.String)">
      <summary>Specifies the HTTP status code and status description of the response; for example, SendStatus(200, "Ok").</summary>
      <param name="statusCode">The status code to send </param>
      <param name="statusDescription">The status description to send. </param>
    </member>
    <member name="M:System.Web.Hosting.SimpleWorkerRequest.SendUnknownResponseHeader(System.String,System.String)">
      <summary>Adds a nonstandard HTTP header to the response.</summary>
      <param name="name">The name of the header to send.</param>
      <param name="value">The value of the header.</param>
    </member>
    <member name="T:System.Web.Hosting.VirtualDirectory">
      <summary>Represents a directory object in a virtual file or resource space.</summary>
    </member>
    <member name="M:System.Web.Hosting.VirtualDirectory.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Hosting.VirtualDirectory" /> class. </summary>
      <param name="virtualPath">The virtual path to the resource represented by this instance.</param>
    </member>
    <member name="P:System.Web.Hosting.VirtualDirectory.Children">
      <summary>Gets a list of the files and subdirectories contained in this virtual directory.</summary>
      <returns>An object implementing the <see cref="T:System.Collections.IEnumerable" /> interface containing <see cref="T:System.Web.Hosting.VirtualFile" /> and <see cref="T:System.Web.Hosting.VirtualDirectory" /> objects.</returns>
    </member>
    <member name="P:System.Web.Hosting.VirtualDirectory.Directories">
      <summary>Gets a list of all the subdirectories contained in this directory.</summary>
      <returns>An object implementing the <see cref="T:System.Collections.IEnumerable" /> interface containing <see cref="T:System.Web.Hosting.VirtualDirectory" /> objects.</returns>
    </member>
    <member name="P:System.Web.Hosting.VirtualDirectory.Files">
      <summary>Gets a list of all files contained in this directory.</summary>
      <returns>An object implementing the <see cref="T:System.Collections.IEnumerable" /> interface containing <see cref="T:System.Web.Hosting.VirtualFile" /> objects.</returns>
    </member>
    <member name="P:System.Web.Hosting.VirtualDirectory.IsDirectory">
      <summary>Gets a value that indicates that this is a virtual resource that should be treated as a directory.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Web.Hosting.VirtualFile">
      <summary>Represents a file object in a virtual file or resource space.</summary>
    </member>
    <member name="M:System.Web.Hosting.VirtualFile.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Hosting.VirtualFile" /> class. </summary>
      <param name="virtualPath">The virtual path to the resource represented by this instance. </param>
    </member>
    <member name="P:System.Web.Hosting.VirtualFile.IsDirectory">
      <summary>Gets a value that indicates that this is a virtual resource that should be treated as a file.</summary>
      <returns>Always false. </returns>
    </member>
    <member name="M:System.Web.Hosting.VirtualFile.Open">
      <summary>When overridden in a derived class, returns a read-only stream to the virtual resource.</summary>
      <returns>A read-only stream to the virtual file.</returns>
    </member>
    <member name="T:System.Web.Hosting.VirtualFileBase">
      <summary>Provides the core implementation for the <see cref="T:System.Web.Hosting.VirtualFile" /> and <see cref="T:System.Web.Hosting.VirtualDirectory" /> objects. An abstract class, it cannot be instantiated.</summary>
    </member>
    <member name="M:System.Web.Hosting.VirtualFileBase.#ctor">
      <summary>Initializes the class for use by an inherited class instance. This constructor can be called only by an inherited class.</summary>
    </member>
    <member name="M:System.Web.Hosting.VirtualFileBase.InitializeLifetimeService">
      <summary>Gives a <see cref="T:System.Web.Hosting.VirtualFileBase" /> instance an infinite lifetime by preventing a lease from being created.</summary>
      <returns>Always null.</returns>
    </member>
    <member name="P:System.Web.Hosting.VirtualFileBase.IsDirectory">
      <summary>When overridden in a derived class, gets a value indicating whether the <see cref="T:System.Web.Hosting.VirtualFileBase" /> instance represents a virtual file or a virtual directory.</summary>
      <returns>true if the <see cref="T:System.Web.Hosting.VirtualFileBase" /> instance is a virtual directory; otherwise, false if the <see cref="T:System.Web.Hosting.VirtualFileBase" /> instance is a virtual file.</returns>
    </member>
    <member name="P:System.Web.Hosting.VirtualFileBase.Name">
      <summary>Gets the display name of the virtual resource.</summary>
      <returns>The display name of the virtual file.</returns>
    </member>
    <member name="P:System.Web.Hosting.VirtualFileBase.VirtualPath">
      <summary>Gets the virtual file path.</summary>
      <returns>The path to the virtual file. </returns>
    </member>
    <member name="T:System.Web.Hosting.VirtualPathProvider">
      <summary>Provides a set of methods that enable a Web application to retrieve resources from a virtual file system.</summary>
    </member>
    <member name="M:System.Web.Hosting.VirtualPathProvider.#ctor">
      <summary>Initializes the class for use by an inherited class instance. This constructor can be called only by an inherited class.</summary>
    </member>
    <member name="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)">
      <summary>Combines a base path with a relative path to return a complete path to a virtual resource.</summary>
      <returns>The complete path to a virtual resource.</returns>
      <param name="basePath">The base path for the application.</param>
      <param name="relativePath">The path to the virtual resource, relative to the base path.</param>
    </member>
    <member name="M:System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)">
      <summary>Gets a value that indicates whether a directory exists in the virtual file system.</summary>
      <returns>true if the directory exists in the virtual file system; otherwise, false.</returns>
      <param name="virtualDir">The path to the virtual directory.</param>
    </member>
    <member name="M:System.Web.Hosting.VirtualPathProvider.FileExists(System.String)">
      <summary>Gets a value that indicates whether a file exists in the virtual file system.</summary>
      <returns>true if the file exists in the virtual file system; otherwise, false.</returns>
      <param name="virtualPath">The path to the virtual file.</param>
    </member>
    <member name="M:System.Web.Hosting.VirtualPathProvider.GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)">
      <summary>Creates a cache dependency based on the specified virtual paths.</summary>
      <returns>A <see cref="T:System.Web.Caching.CacheDependency" /> object for the specified virtual resources.</returns>
      <param name="virtualPath">The path to the primary virtual resource.</param>
      <param name="virtualPathDependencies">An array of paths to other resources required by the primary virtual resource.</param>
      <param name="utcStart">The UTC time at which the virtual resources were read.</param>
    </member>
    <member name="M:System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)">
      <summary>Returns a cache key to use for the specified virtual path.</summary>
      <returns>A cache key for the specified virtual resource.</returns>
      <param name="virtualPath">The path to the virtual resource.</param>
    </member>
    <member name="M:System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)">
      <summary>Gets a virtual directory from the virtual file system.</summary>
      <returns>A descendent of the <see cref="T:System.Web.Hosting.VirtualDirectory" /> class that represents a directory in the virtual file system.</returns>
      <param name="virtualDir">The path to the virtual directory.</param>
    </member>
    <member name="M:System.Web.Hosting.VirtualPathProvider.GetFile(System.String)">
      <summary>Gets a virtual file from the virtual file system.</summary>
      <returns>A descendent of the <see cref="T:System.Web.Hosting.VirtualFile" /> class that represents a file in the virtual file system.</returns>
      <param name="virtualPath">The path to the virtual file.</param>
    </member>
    <member name="M:System.Web.Hosting.VirtualPathProvider.GetFileHash(System.String,System.Collections.IEnumerable)">
      <summary>Returns a hash of the specified virtual paths.</summary>
      <returns>A hash of the specified virtual paths.</returns>
      <param name="virtualPath">The path to the primary virtual resource.</param>
      <param name="virtualPathDependencies">An array of paths to other virtual resources required by the primary virtual resource.</param>
    </member>
    <member name="M:System.Web.Hosting.VirtualPathProvider.Initialize">
      <summary>Initializes the <see cref="T:System.Web.Hosting.VirtualPathProvider" /> instance.</summary>
    </member>
    <member name="M:System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService">
      <summary>Gives the <see cref="T:System.Web.Hosting.VirtualPathProvider" /> object an infinite lifetime by preventing a lease from being created.</summary>
      <returns>Always null.</returns>
    </member>
    <member name="M:System.Web.Hosting.VirtualPathProvider.OpenFile(System.String)">
      <summary>Returns a stream from a virtual file.</summary>
      <returns>A read-only <see cref="T:System.IO.Stream" /> object for the specified virtual file or resource.</returns>
      <param name="virtualPath">The path to the virtual file.</param>
    </member>
    <member name="P:System.Web.Hosting.VirtualPathProvider.Previous">
      <summary>Gets a reference to a previously registered <see cref="T:System.Web.Hosting.VirtualPathProvider" /> object in the compilation system.</summary>
      <returns>The next <see cref="T:System.Web.Hosting.VirtualPathProvider" /> object in the compilation system.</returns>
    </member>
    <member name="T:System.Web.Mail.MailAttachment">
      <summary>Provides properties and methods for constructing an e-mail attachment. Recommended alternative: <see cref="N:System.Net.Mail" />.</summary>
    </member>
    <member name="M:System.Web.Mail.MailAttachment.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Mail.MailAttachment" /> class with the specified file name for the attachment. Sets the <see cref="T:System.Text.Encoding" /> property to <see cref="F:System.Web.Mail.MailEncoding.UUEncode" /> by default. Recommended alternative: <see cref="N:System.Net.Mail" />.</summary>
      <param name="filename">The name of the attachment file. </param>
    </member>
    <member name="M:System.Web.Mail.MailAttachment.#ctor(System.String,System.Web.Mail.MailEncoding)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Mail.MailAttachment" /> class with the specified file name and encoding type for the attachment. Recommended alternative: <see cref="N:System.Net.Mail" />.</summary>
      <param name="filename">The name of the attachment file. </param>
      <param name="encoding">The type of <see cref="T:System.Web.Mail.MailEncoding" /> for the attachment. </param>
    </member>
    <member name="P:System.Web.Mail.MailAttachment.Encoding">
      <summary>Gets the type of encoding for the e-mail attachment. Recommended alternative: <see cref="N:System.Net.Mail" />.</summary>
      <returns>One of the <see cref="T:System.Web.Mail.MailEncoding" /> values.</returns>
    </member>
    <member name="P:System.Web.Mail.MailAttachment.Filename">
      <summary>Gets the name of the attachment file. Recommended alternative: <see cref="N:System.Net.Mail" />.</summary>
      <returns>The name of the attachment file.</returns>
    </member>
    <member name="T:System.Web.Mail.MailEncoding">
      <summary>Provides enumerated values for e-mail encoding. Recommended alternative: <see cref="N:System.Net.Mail" />.</summary>
    </member>
    <member name="F:System.Web.Mail.MailEncoding.UUEncode">
      <summary>Specifies that the e-mail message uses UUEncode encoding.</summary>
    </member>
    <member name="F:System.Web.Mail.MailEncoding.Base64">
      <summary>Specifies that the e-mail message uses Base64 encoding.</summary>
    </member>
    <member name="T:System.Web.Mail.MailFormat">
      <summary>Provides enumerated values for e-mail format. Recommended alternative: <see cref="N:System.Net.Mail" />.</summary>
    </member>
    <member name="F:System.Web.Mail.MailFormat.Text">
      <summary>Specifies that the e-mail format is plain text.</summary>
    </member>
    <member name="F:System.Web.Mail.MailFormat.Html">
      <summary>Specifies that the e-mail format is HTML.</summary>
    </member>
    <member name="T:System.Web.Mail.MailMessage">
      <summary>Provides properties and methods for constructing an e-mail message. Recommended alternative: <see cref="N:System.Net.Mail" />.</summary>
    </member>
    <member name="M:System.Web.Mail.MailMessage.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Mail.MailMessage" /> class. Recommended alternative: <see cref="N:System.Net.Mail" />.</summary>
    </member>
    <member name="P:System.Web.Mail.MailMessage.Attachments">
      <summary>Specifies the collection of attachments that are transmitted with the message. Recommended alternative: <see cref="N:System.Net.Mail" />.</summary>
      <returns>An <see cref="T:System.Collections.IList" /> collection of <see cref="T:System.Web.Mail.MailAttachment" /> objects.</returns>
    </member>
    <member name="P:System.Web.Mail.MailMessage.Bcc">
      <summary>Gets or sets a semicolon-delimited list of email addresses that receive a blind carbon copy (BCC) of the e-mail message. Recommended alternative: <see cref="N:System.Net.Mail" />.</summary>
      <returns>A semicolon-delimited list of e-mail addresses that receive a blind carbon copy (BCC) of the e-mail message.</returns>
    </member>
    <member name="P:System.Web.Mail.MailMessage.Body">
      <summary>Gets or sets the body of the e-mail message. Recommended alternative: <see cref="N:System.Net.Mail" />.</summary>
      <returns>The body of the e-mail message.</returns>
    </member>
    <member name="P:System.Web.Mail.MailMessage.BodyEncoding">
      <summary>Gets or sets the encoding type of the body of the e-mail message. Recommended alternative: <see cref="N:System.Net.Mail" />.</summary>
      <returns>One of the <see cref="T:System.Text.Encoding" /> values that indicates the encoding type of the body of the e-mail message.</returns>
    </member>
    <member name="P:System.Web.Mail.MailMessage.BodyFormat">
      <summary>Gets or sets the content type of the body of the e-mail message. Recommended alternative: <see cref="N:System.Net.Mail" />.</summary>
      <returns>One of the <see cref="T:System.Web.Mail.MailFormat" /> values.</returns>
    </member>
    <member name="P:System.Web.Mail.MailMessage.Cc">
      <summary>Gets or sets a semicolon-delimited list of e-mail addresses that receive a carbon copy (CC) of the e-mail message. Recommended alternative: <see cref="N:System.Net.Mail" />.</summary>
      <returns>A semicolon-delimited list of e-mail addresses that receive a carbon copy (CC) of the e-mail message.</returns>
    </member>
    <member name="P:System.Web.Mail.MailMessage.Fields">
      <summary>Gets a collection of objects that map to Microsoft Collaboration Data Objects (CDO) fields. Recommended alternative: <see cref="N:System.Net.Mail" />.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> collection of objects that map to Collaboration Data Objects (CDO) fields.</returns>
    </member>
    <member name="P:System.Web.Mail.MailMessage.From">
      <summary>Gets or sets the e-mail address of the sender. Recommended alternative: <see cref="N:System.Net.Mail" />.</summary>
      <returns>The sender's e-mail address.</returns>
    </member>
    <member name="P:System.Web.Mail.MailMessage.Headers">
      <summary>Specifies the custom headers that are transmitted with the e-mail message. Recommended alternative: <see cref="N:System.Net.Mail" />.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> collection of custom headers.</returns>
    </member>
    <member name="P:System.Web.Mail.MailMessage.Priority">
      <summary>Gets or sets the priority of the e-mail message. Recommended alternative: <see cref="N:System.Net.Mail" />.</summary>
      <returns>One of the <see cref="T:System.Web.Mail.MailPriority" /> values.</returns>
    </member>
    <member name="P:System.Web.Mail.MailMessage.Subject">
      <summary>Gets or sets the subject line of the e-mail message. Recommended alternative: <see cref="N:System.Net.Mail" />.</summary>
      <returns>The subject line of the e-mail message.</returns>
    </member>
    <member name="P:System.Web.Mail.MailMessage.To">
      <summary>Gets or sets a semicolon-delimited list of recipient e-mail addresses. Recommended alternative: <see cref="N:System.Net.Mail" />.</summary>
      <returns>A semicolon-delimited list of e-mail addresses.</returns>
    </member>
    <member name="P:System.Web.Mail.MailMessage.UrlContentBase">
      <summary>Gets or sets the Content-Base HTTP header, the URL base of all relative URLs used within the HTML-encoded body of the e-mail message. Recommended alternative: <see cref="N:System.Net.Mail" />.</summary>
      <returns>The URL base.</returns>
    </member>
    <member name="P:System.Web.Mail.MailMessage.UrlContentLocation">
      <summary>Gets or sets the Content-Location HTTP header for the e-mail message. Recommended alternative: <see cref="N:System.Net.Mail" />.</summary>
      <returns>The content-base header.</returns>
    </member>
    <member name="T:System.Web.Mail.MailPriority">
      <summary>Specifies the priority level for the e-mail message. Recommended alternative: <see cref="N:System.Net.Mail" />.</summary>
    </member>
    <member name="F:System.Web.Mail.MailPriority.Normal">
      <summary>Specifies that the e-mail message has normal priority.</summary>
    </member>
    <member name="F:System.Web.Mail.MailPriority.Low">
      <summary>Specifies that the e-mail message has low priority.</summary>
    </member>
    <member name="F:System.Web.Mail.MailPriority.High">
      <summary>Specifies that the e-mail message has high priority.</summary>
    </member>
    <member name="T:System.Web.Mail.SmtpMail">
      <summary>Provides properties and methods for sending messages using the Collaboration Data Objects for Windows 2000 (CDOSYS) message component. Recommended alternative: <see cref="N:System.Net.Mail" />.</summary>
    </member>
    <member name="M:System.Web.Mail.SmtpMail.Send(System.String,System.String,System.String,System.String)">
      <summary>Sends an e-mail message using the specified destination parameters. Recommended alternative: <see cref="N:System.Net.Mail" />.</summary>
      <param name="from">The address of the e-mail sender. </param>
      <param name="to">The address of the e-mail recipient. </param>
      <param name="subject">The subject line of the e-mail message. </param>
      <param name="messageText">The body of the e-mail message. </param>
      <exception cref="T:System.PlatformNotSupportedException">The <see cref="M:System.Web.Mail.SmtpMail.Send(System.String,System.String,System.String,System.String)" /> method requires the Microsoft Windows NT, Windows 2000, or Windows XP operating system.</exception>
    </member>
    <member name="M:System.Web.Mail.SmtpMail.Send(System.Web.Mail.MailMessage)">
      <summary>Sends an e-mail message using arguments supplied in the properties of the <see cref="T:System.Web.Mail.MailMessage" /> class. Recommended alternative: <see cref="N:System.Net.Mail" />.</summary>
      <param name="message">The <see cref="T:System.Web.Mail.MailMessage" /> to send. </param>
      <exception cref="T:System.Runtime.InteropServices.COMException">The mail cannot be sent.</exception>
      <exception cref="T:System.PlatformNotSupportedException">The <see cref="M:System.Web.Mail.SmtpMail.Send(System.Web.Mail.MailMessage)" /> method requires the Microsoft Windows NT, Windows 2000, or Windows XP operating system.</exception>
    </member>
    <member name="P:System.Web.Mail.SmtpMail.SmtpServer">
      <summary>Gets or sets the name of the SMTP relay mail server to use to send e-mail messages. Recommended alternative: <see cref="N:System.Net.Mail" />.</summary>
      <returns>The name of the e-mail relay server. </returns>
    </member>
    <member name="T:System.Web.Management.BufferedWebEventProvider">
      <summary>Provides the base functionality for creating event providers that require buffering.</summary>
    </member>
    <member name="M:System.Web.Management.BufferedWebEventProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.BufferedWebEventProvider" /> class. </summary>
    </member>
    <member name="P:System.Web.Management.BufferedWebEventProvider.BufferMode">
      <summary>Gets a value indicating the buffering mode used by the provider.</summary>
      <returns>The name of the buffering mode. </returns>
    </member>
    <member name="M:System.Web.Management.BufferedWebEventProvider.Flush">
      <summary>Moves the events from the provider's buffer into the event log. </summary>
    </member>
    <member name="M:System.Web.Management.BufferedWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Sets the initial values for this object.</summary>
      <param name="name">The name used in the configuration file to identify this provider.</param>
      <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that specifies the attributes assigned for this provider in the configuration file.</param>
    </member>
    <member name="M:System.Web.Management.BufferedWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)">
      <summary>Processes the event passed to the provider.</summary>
      <param name="eventRaised">The <see cref="T:System.Web.Management.WebBaseEvent" /> object to process.</param>
    </member>
    <member name="M:System.Web.Management.BufferedWebEventProvider.ProcessEventFlush(System.Web.Management.WebEventBufferFlushInfo)">
      <summary>Processes the buffered events.</summary>
      <param name="flushInfo">A <see cref="T:System.Web.Management.WebEventBufferFlushInfo" /> that contains buffering information.</param>
    </member>
    <member name="M:System.Web.Management.BufferedWebEventProvider.Shutdown">
      <summary>Performs tasks associated with shutting down the provider.</summary>
    </member>
    <member name="P:System.Web.Management.BufferedWebEventProvider.UseBuffering">
      <summary>Gets a value indicating whether the provider is in buffered mode.</summary>
      <returns>true if the provider is in buffered mode; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.Web.Management.EventLogWebEventProvider">
      <summary>Implements an event provider that logs ASP.NET health-monitoring events into the Windows Application Event Log. </summary>
    </member>
    <member name="M:System.Web.Management.EventLogWebEventProvider.Flush">
      <summary>Moves events from the provider's buffer into the event log.</summary>
    </member>
    <member name="M:System.Web.Management.EventLogWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Sets the initial values for this object.</summary>
      <param name="name">The name used in the configuration file to identify this provider.</param>
      <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that specifies the attributes assigned for this provider in the configuration file.</param>
    </member>
    <member name="M:System.Web.Management.EventLogWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)">
      <summary>Processes the event passed to the provider.</summary>
      <param name="eventRaised">The <see cref="T:System.Web.Management.WebBaseEvent" /> object to process.</param>
    </member>
    <member name="M:System.Web.Management.EventLogWebEventProvider.Shutdown">
      <summary>Performs tasks associated with shutting down the provider.</summary>
    </member>
    <member name="T:System.Web.Management.EventNotificationType">
      <summary>Specifies the type of event notification.</summary>
    </member>
    <member name="F:System.Web.Management.EventNotificationType.Regular">
      <summary>The notification of an event is triggered on a regularly scheduled interval.</summary>
    </member>
    <member name="F:System.Web.Management.EventNotificationType.Urgent">
      <summary>Notification triggered by exceeding the urgent event threshold.</summary>
    </member>
    <member name="F:System.Web.Management.EventNotificationType.Flush">
      <summary>The notification of an event is triggered by a requested flush.</summary>
    </member>
    <member name="F:System.Web.Management.EventNotificationType.Unbuffered">
      <summary>Every event is treated as if a flush has occurred.</summary>
    </member>
    <member name="T:System.Web.Management.IisTraceWebEventProvider">
      <summary>Represents an event provider that routes ASP.NET tracing events to the IIS 7.0 infrastructure.</summary>
    </member>
    <member name="M:System.Web.Management.IisTraceWebEventProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.Iis7TraceWebEventProvider" /> class.</summary>
    </member>
    <member name="M:System.Web.Management.IisTraceWebEventProvider.Flush">
      <summary>Moves the events from the provider's buffer into the event log.</summary>
    </member>
    <member name="M:System.Web.Management.IisTraceWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.Iis7TraceWebEventProvider" /> with the data that is necessary to process events.</summary>
      <param name="name">The name of the provider as specified in the configuration system.</param>
      <param name="config">A collection that contains the initialization values that are specified in the configuration system.</param>
    </member>
    <member name="M:System.Web.Management.IisTraceWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)">
      <summary>Processes the event that was passed to the provider.</summary>
      <param name="eventRaised">The object to process.</param>
    </member>
    <member name="M:System.Web.Management.IisTraceWebEventProvider.Shutdown">
      <summary>Performs tasks that are associated with shutting down the provider.</summary>
    </member>
    <member name="T:System.Web.Management.IRegiisUtility">
      <summary>Provides authorization utilities to support specific Web-application configuration, assembly registration, and assembly-key container manipulation.</summary>
    </member>
    <member name="M:System.Web.Management.IRegiisUtility.ProtectedConfigAction(System.Int64,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.IntPtr@)">
      <summary>Allows specific manipulation of configuration sections and assembly-key containers based on the supplied parameters.</summary>
      <param name="actionToPerform">The type of action to perform.</param>
      <param name="firstArgument">A configuration section or assembly-key container name.</param>
      <param name="secondArgument">The configuration file name or account name.</param>
      <param name="providerName">The provider name.</param>
      <param name="appPath">The application path.</param>
      <param name="site">The site reference.</param>
      <param name="cspOrLocation">The configuration location.</param>
      <param name="keySize">The size of the key.</param>
      <param name="exception">The exception to display.</param>
    </member>
    <member name="M:System.Web.Management.IRegiisUtility.RegisterAsnetMmcAssembly(System.Int32,System.String,System.String,System.IntPtr@)">
      <summary>Allows the executing Microsoft Management Console (MMC) assembly to be registered or unregistered.</summary>
      <param name="doReg">A value of 0 indicates that the assembly should be unregistered. A value other than 0 indicates that the assembly should be registered.</param>
      <param name="assemblyName">The type of the assembly.</param>
      <param name="binaryDirectory">The path of the binary directory.</param>
      <param name="exception">The exception to display.</param>
    </member>
    <member name="M:System.Web.Management.IRegiisUtility.RegisterSystemWebAssembly(System.Int32,System.IntPtr@)">
      <summary>Allows the executing Web assembly to be registered or unregistered.</summary>
      <param name="doReg">A value of 0 indicates that the assembly should be unregistered. A value other than 0 indicates that the assembly should be registered.</param>
      <param name="exception">An <see cref="T:System.IntPtr" /> that points to the exception thrown by the method.  If no exception is thrown, the value is <see cref="F:System.IntPtr.Zero" />.</param>
    </member>
    <member name="M:System.Web.Management.IRegiisUtility.RemoveBrowserCaps(System.IntPtr@)">
      <summary>Allows the browser-capabilities code generator to be uninstalled.</summary>
      <param name="exception">An <see cref="T:System.IntPtr" /> that points to the exception thrown by the method.  If no exception is thrown, the value is <see cref="F:System.IntPtr.Zero" />.</param>
      <exception cref="T:System.Exception">The attempt to uninstall the browser-capabilities code generator fails.</exception>
    </member>
    <member name="T:System.Web.Management.IWebEventCustomEvaluator">
      <summary>Evaluates whether an event should be sent to the related provider for processing.</summary>
    </member>
    <member name="M:System.Web.Management.IWebEventCustomEvaluator.CanFire(System.Web.Management.WebBaseEvent,System.Web.Management.RuleFiringRecord)">
      <summary>Evaluates whether an event should be raised.</summary>
      <returns>true if the event should be raised; otherwise, false.</returns>
      <param name="raisedEvent">The event to raise. </param>
      <param name="record">The <see cref="T:System.Web.Management.RuleFiringRecord" /> containing information about the event. </param>
    </member>
    <member name="T:System.Web.Management.MailEventNotificationInfo">
      <summary>Provides information to the <see cref="T:System.Web.Management.TemplatedMailWebEventProvider" /> object about the current event notification.</summary>
    </member>
    <member name="P:System.Web.Management.MailEventNotificationInfo.Events">
      <summary>Gets a collection of events for the current message.</summary>
      <returns>A <see cref="T:System.Web.Management.WebBaseEventCollection" /> of events for the current message.</returns>
    </member>
    <member name="P:System.Web.Management.MailEventNotificationInfo.EventsDiscardedByBuffer">
      <summary>Gets the number of events discarded by the buffer since the last notification.</summary>
      <returns>The number of events discarded by the buffer since the last notification.</returns>
    </member>
    <member name="P:System.Web.Management.MailEventNotificationInfo.EventsDiscardedDueToMessageLimit">
      <summary>Gets the number of events that are discarded by the buffer because the buffer has exceeded the message limit for the current notification.</summary>
      <returns>The number of events discarded by the buffer because the buffer has exceeded the message limit for the current notification.</returns>
    </member>
    <member name="P:System.Web.Management.MailEventNotificationInfo.EventsInBuffer">
      <summary>Gets the number of events remaining in the buffer after the current notification.</summary>
      <returns>The number of events remaining in the buffer after the current notification.</returns>
    </member>
    <member name="P:System.Web.Management.MailEventNotificationInfo.EventsInNotification">
      <summary>Gets the number of events being processed for the current notification.</summary>
      <returns>The number of events being processed for the current notification.</returns>
    </member>
    <member name="P:System.Web.Management.MailEventNotificationInfo.EventsRemaining">
      <summary>Gets the number of events remaining in the buffer after the current notification.</summary>
      <returns>The number of events remaining in the buffer after the current notification.</returns>
    </member>
    <member name="P:System.Web.Management.MailEventNotificationInfo.LastNotificationUtc">
      <summary>Gets the time of the previous notification.</summary>
      <returns>A <see cref="T:System.DateTime" /> object that specifies the time of the previous notification.</returns>
    </member>
    <member name="P:System.Web.Management.MailEventNotificationInfo.Message">
      <summary>Gets the e-mail message that will be sent as the current message.</summary>
      <returns>A <see cref="T:System.Web.Mail.MailMessage" /> that specifies the e-mail message to send.</returns>
    </member>
    <member name="P:System.Web.Management.MailEventNotificationInfo.MessageSequence">
      <summary>Gets the position of this message in the sequence for the current notification.</summary>
      <returns>The position of this message in the sequence for the current notification.</returns>
    </member>
    <member name="P:System.Web.Management.MailEventNotificationInfo.MessagesInNotification">
      <summary>Gets the total number of messages in the current notification.</summary>
      <returns>The total number of messages in the current notification.</returns>
    </member>
    <member name="P:System.Web.Management.MailEventNotificationInfo.NotificationSequence">
      <summary>Gets the position of this notification within the total number of notifications made to date.</summary>
      <returns>The position of this notification within the total number of notifications made to date.</returns>
    </member>
    <member name="P:System.Web.Management.MailEventNotificationInfo.NotificationType">
      <summary>Gets the type of the current notification.</summary>
      <returns>The <see cref="T:System.Web.Management.EventNotificationType" /> for the current notification.</returns>
    </member>
    <member name="T:System.Web.Management.MailWebEventProvider">
      <summary>Provides the base functionality for creating event providers that send e-mail.</summary>
    </member>
    <member name="M:System.Web.Management.MailWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Sets the initial values for this object.</summary>
      <param name="name">The name used in the configuration file to identify this provider.</param>
      <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that specifies the attributes assigned for this provider in the configuration file.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">No recipients have been assigned in <paramref name="config" />.</exception>
    </member>
    <member name="M:System.Web.Management.MailWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)">
      <summary>Processes the event passed to the provider.</summary>
      <param name="eventRaised">The <see cref="T:System.Web.Management.WebBaseEvent" /> object to process.</param>
    </member>
    <member name="M:System.Web.Management.MailWebEventProvider.ProcessEventFlush(System.Web.Management.WebEventBufferFlushInfo)">
      <summary>Removes all events from the provider's buffer.</summary>
      <param name="flushInfo">The <see cref="T:System.Web.Management.WebEventBufferFlushInfo" /> that contains the count of events waiting to send their notification.</param>
    </member>
    <member name="M:System.Web.Management.MailWebEventProvider.Shutdown">
      <summary>Performs tasks associated with shutting down the provider.</summary>
    </member>
    <member name="T:System.Web.Management.RegiisUtility">
      <summary>Provides authorization utilities to support specific Web-application configuration, assembly registration, and assembly-key container manipulation. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Management.RegiisUtility.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.RegiisUtility" /> class. </summary>
    </member>
    <member name="M:System.Web.Management.RegiisUtility.ProtectedConfigAction(System.Int64,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.IntPtr@)">
      <summary>Allows specific manipulation of configuration sections and assembly-key containers based on the supplied parameters.</summary>
      <param name="options">The type of action to perform.</param>
      <param name="firstArgument">A configuration section or assembly-key container name.</param>
      <param name="secondArgument">The configuration file name or account name.</param>
      <param name="providerName">The provider name.</param>
      <param name="appPath">The application path.</param>
      <param name="site">The site reference.</param>
      <param name="cspOrLocation">The configuration location.</param>
      <param name="keySize">The size of the key.</param>
      <param name="exception">The exception to display.</param>
    </member>
    <member name="M:System.Web.Management.RegiisUtility.RegisterAsnetMmcAssembly(System.Int32,System.String,System.String,System.IntPtr@)">
      <summary>Allows the executing Microsoft Management Console (MMC) assembly to be registered or unregistered.</summary>
      <param name="doReg">0 indicates that the assembly should be unregistered; otherwise, the assembly should be registered.</param>
      <param name="typeName">The type of the assembly.</param>
      <param name="binaryDirectory">The path of the binary directory.</param>
      <param name="exception">The exception to display.</param>
    </member>
    <member name="M:System.Web.Management.RegiisUtility.RegisterSystemWebAssembly(System.Int32,System.IntPtr@)">
      <summary>Allows the executing Web assembly to be registered or unregistered.</summary>
      <param name="doReg">0 indicates that the assembly should be unregistered; otherwise, the assembly should be registered.</param>
      <param name="exception">The exception to display.</param>
    </member>
    <member name="M:System.Web.Management.RegiisUtility.RemoveBrowserCaps(System.IntPtr@)">
      <summary>Allows the browser-capabilities code generator to be uninstalled.</summary>
      <param name="exception">The exception to display.</param>
    </member>
    <member name="T:System.Web.Management.RuleFiringRecord">
      <summary>Represents the firing record for an event that derives from the <see cref="T:System.Web.Management.WebManagementEvent" /> class and implements the <see cref="T:System.Web.Management.IWebEventCustomEvaluator" /> interface.</summary>
    </member>
    <member name="P:System.Web.Management.RuleFiringRecord.LastFired">
      <summary>Gets the last time that the event was last fired.</summary>
      <returns>A <see cref="T:System.DateTime" /> object representing when the event was last fired.</returns>
    </member>
    <member name="P:System.Web.Management.RuleFiringRecord.TimesRaised">
      <summary>Gets the total number of times that the event has been raised.</summary>
      <returns>The total number of times the event has been raised.</returns>
    </member>
    <member name="T:System.Web.Management.SessionStateType">
      <summary>Describes the session-state type used when installing a session-state database provider.</summary>
    </member>
    <member name="F:System.Web.Management.SessionStateType.Temporary">
      <summary>Session state data is stored in tempdb, and stored procedures are placed in the "ASPState" database. Session state data will not survive a restart of SQL Server.</summary>
    </member>
    <member name="F:System.Web.Management.SessionStateType.Persisted">
      <summary>Session-state data and stored procedures are placed in the "ASPState" database. Session-state data will survive a restart of the database server.</summary>
    </member>
    <member name="F:System.Web.Management.SessionStateType.Custom">
      <summary>Session-state data and stored procedures are placed in a custom data store.</summary>
    </member>
    <member name="T:System.Web.Management.SimpleMailWebEventProvider">
      <summary>Implements an event provider that sends e-mail for event notifications.</summary>
    </member>
    <member name="M:System.Web.Management.SimpleMailWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Sets the initial values for this object.</summary>
      <param name="name">The name of this event provider.</param>
      <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that specifies configuration settings for this event provider.</param>
    </member>
    <member name="T:System.Web.Management.SqlExecutionException">
      <summary>Defines a class for SQL execution exceptions in the <see cref="N:System.Web.Management" /> namespace.</summary>
    </member>
    <member name="M:System.Web.Management.SqlExecutionException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.SqlExecutionException" /> class using default values.</summary>
    </member>
    <member name="M:System.Web.Management.SqlExecutionException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.SqlExecutionException" /> class using the passed message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.Web.Management.SqlExecutionException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.SqlExecutionException" /> class using the passed message and exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> encountered.</param>
    </member>
    <member name="M:System.Web.Management.SqlExecutionException.#ctor(System.String,System.String,System.String,System.String,System.String,System.Data.SqlClient.SqlException)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.SqlExecutionException" /> class.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="server">The SQL Server instance against which the SQL commands are run.</param>
      <param name="database">The database against which the SQL commands are run.</param>
      <param name="sqlFile">The name of the installation file containing the SQL commands being run.</param>
      <param name="commands">The SQL commands being run when the exception occurred.</param>
      <param name="sqlException">The <see cref="T:System.Data.SqlClient.SqlException" /> encountered when processing the SQL commands.</param>
    </member>
    <member name="P:System.Web.Management.SqlExecutionException.Commands">
      <summary>Gets the SQL commands being run when the exception occurred.</summary>
      <returns>The SQL commands being run when the exception occurred.</returns>
    </member>
    <member name="P:System.Web.Management.SqlExecutionException.Database">
      <summary>Gets the name of the database being accessed when the exception occurred.</summary>
      <returns>The name of the database being accessed when the exception occurred.</returns>
    </member>
    <member name="P:System.Web.Management.SqlExecutionException.Exception">
      <summary>Gets the exception encountered when processing the SQL commands.</summary>
      <returns>The <see cref="T:System.Data.SqlClient.SqlException" /> encountered when processing the SQL commands.</returns>
    </member>
    <member name="M:System.Web.Management.SqlExecutionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Allows the exception to be serialized.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to use.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object to use.</param>
    </member>
    <member name="P:System.Web.Management.SqlExecutionException.Server">
      <summary>Gets the SQL Server instance being accessed when the exception occurred.</summary>
      <returns>The name of the SQL Server instance being accessed when the exception occurred.</returns>
    </member>
    <member name="P:System.Web.Management.SqlExecutionException.SqlFile">
      <summary>Gets the path and name of the file containing the SQL commands being run when the exception occurred.</summary>
      <returns>The path and name of the file that contains the SQL commands being run when the exception occurred.</returns>
    </member>
    <member name="T:System.Web.Management.SqlFeatures">
      <summary>Specifies the ASP.Net features to install or remove using the methods provided by the <see cref="T:System.Web.Management.SqlServices" /> class.</summary>
    </member>
    <member name="F:System.Web.Management.SqlFeatures.None">
      <summary>No features.</summary>
    </member>
    <member name="F:System.Web.Management.SqlFeatures.Membership">
      <summary>The membership feature.</summary>
    </member>
    <member name="F:System.Web.Management.SqlFeatures.Profile">
      <summary>The profile feature.</summary>
    </member>
    <member name="F:System.Web.Management.SqlFeatures.RoleManager">
      <summary>The role manager feature.</summary>
    </member>
    <member name="F:System.Web.Management.SqlFeatures.Personalization">
      <summary>The personalization feature.</summary>
    </member>
    <member name="F:System.Web.Management.SqlFeatures.SqlWebEventProvider">
      <summary>The Web event provider feature.</summary>
    </member>
    <member name="F:System.Web.Management.SqlFeatures.All">
      <summary>All features.</summary>
    </member>
    <member name="T:System.Web.Management.SqlServices">
      <summary>Supports installing and removing the SQL Server database elements of ASP.NET features.</summary>
    </member>
    <member name="M:System.Web.Management.SqlServices.GenerateApplicationServicesScripts(System.Boolean,System.Web.Management.SqlFeatures,System.String)">
      <summary>Generates the SQL scripts for the selected features. The scripts will reference the database indicated by the database parameter.</summary>
      <returns>Returns the generated script code.</returns>
      <param name="install">true to generate a script that installs the specified features; false to generate a script that removes the features.</param>
      <param name="features">A bitwise combination of the <see cref="T:System.Web.Management.SqlFeatures" /> values, specifying the specific features for which to generate scripts.</param>
      <param name="database">The name of the SQL Server database to use in the generated scripts.</param>
    </member>
    <member name="M:System.Web.Management.SqlServices.GenerateSessionStateScripts(System.Boolean,System.Web.Management.SessionStateType,System.String)">
      <summary>Generates the SQL script for installing or removing session state. The script will reference the database indicated by the database parameter.</summary>
      <returns>Returns the generated script code.</returns>
      <param name="install">true to generate a script that installs the specified features; false to generate a script that removes the features.</param>
      <param name="type">One of the <see cref="T:System.Web.Management.SessionStateType" /> values, specifying the type of session state for which to generate scripts.</param>
      <param name="customDatabase">The name of the SQL Server database to use in the generated scripts.</param>
      <exception cref="T:System.ArgumentException">The type is Custom and the <paramref name="customDatabase" /> value is not supplied, or the type is either Temporary or Persisted and the <paramref name="customDatabase" /> value is not null.</exception>
    </member>
    <member name="M:System.Web.Management.SqlServices.Install(System.String,System.String,System.String,System.String,System.Web.Management.SqlFeatures)">
      <summary>Installs components for selected ASP.NET features on a SQL Server database.</summary>
      <param name="server">The database server on which to install the features.</param>
      <param name="user">The user name to use when connecting to the database.</param>
      <param name="password">The password to use when connecting to the database.</param>
      <param name="database">The database on which to install the features.</param>
      <param name="features">A bitwise combination of the <see cref="T:System.Web.Management.SqlFeatures" /> values, specifying the features to install.</param>
      <exception cref="T:System.Web.HttpException">Unable to connect to the specified database server.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="features" /> value contains one or more invalid flags.</exception>
      <exception cref="T:System.Web.Management.SqlExecutionException">An exception occurred while processing the SQL statements required for the operation.</exception>
    </member>
    <member name="M:System.Web.Management.SqlServices.Install(System.String,System.String,System.Web.Management.SqlFeatures)">
      <summary>Installs components for selected ASP.NET features on a SQL Server database.</summary>
      <param name="server">The database server on which to install the features.</param>
      <param name="database">The database on which to install the features.</param>
      <param name="features">A bitwise combination of the <see cref="T:System.Web.Management.SqlFeatures" /> values, specifying the features to install.</param>
      <exception cref="T:System.Web.HttpException">Unable to connect to the specified database server.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="features" /> value contains one or more invalid flags.</exception>
      <exception cref="T:System.Web.Management.SqlExecutionException">An exception occurred while processing the SQL statements required for the operation.</exception>
    </member>
    <member name="M:System.Web.Management.SqlServices.Install(System.String,System.Web.Management.SqlFeatures,System.String)">
      <summary>Installs components for selected ASP.NET services on a SQL Server database.</summary>
      <param name="database">The database on which to install the features.</param>
      <param name="features">A bitwise combination of the <see cref="T:System.Web.Management.SqlFeatures" /> values, specifying the features to install.</param>
      <param name="connectionString">The connection string to use. The connection string is only used to establish a connection to the database server.  Specifying a database in the connection string has no effect.</param>
      <exception cref="T:System.Web.HttpException">Unable to connect to the specified database server.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="features" /> value contains one or more invalid flags.</exception>
      <exception cref="T:System.Web.Management.SqlExecutionException">An exception occurred while processing the SQL statements required for the operation.</exception>
    </member>
    <member name="M:System.Web.Management.SqlServices.InstallSessionState(System.String,System.String,System.String,System.String,System.Web.Management.SessionStateType)">
      <summary>Installs components for ASP.NET session state on a SQL Server database.</summary>
      <param name="server">The SQL Server instance on which to install the session-state components.</param>
      <param name="user">The user name to use when connecting to the database.</param>
      <param name="password">The password to use when connecting to the database.</param>
      <param name="customDatabase">The database on which to install the session-state components.</param>
      <param name="type">One of the <see cref="T:System.Web.Management.SessionStateType" /> values, specifying the type of session state to install.</param>
      <exception cref="T:System.ArgumentException">The type is Custom and the <paramref name="customDatabase" /> value is not supplied, or the type is either Temporary or Persisted and the <paramref name="customDatabase" /> value is not null.</exception>
      <exception cref="T:System.Web.HttpException">Unable to connect to the specified database server.</exception>
      <exception cref="T:System.Web.Management.SqlExecutionException">An exception occurred while processing the SQL statements required for the operation.</exception>
    </member>
    <member name="M:System.Web.Management.SqlServices.InstallSessionState(System.String,System.String,System.Web.Management.SessionStateType)">
      <summary>Installs components for ASP.NET session state on a SQL Server database.</summary>
      <param name="server">The SQL Server instance on which to install the session-state components.</param>
      <param name="customDatabase">The database on which to install the session-state components.</param>
      <param name="type">One of the <see cref="T:System.Web.Management.SessionStateType" /> values, specifying the type of session state to install.</param>
      <exception cref="T:System.ArgumentException">The type is Custom and the <paramref name="customDatabase" /> value is not supplied, or the type is either Temporary or Persisted and the <paramref name="customDatabase" /> value is not null.</exception>
      <exception cref="T:System.Web.HttpException">Unable to connect to the specified database server.</exception>
      <exception cref="T:System.Web.Management.SqlExecutionException">An exception occurred while processing the SQL statements required for the operation.</exception>
    </member>
    <member name="M:System.Web.Management.SqlServices.InstallSessionState(System.String,System.Web.Management.SessionStateType,System.String)">
      <summary>Installs components for ASP.NET session state on a SQL Server database.</summary>
      <param name="customDatabase">The database on which to install the session-state components.</param>
      <param name="type">One of the <see cref="T:System.Web.Management.SessionStateType" /> values, specifying the type of session state to install.</param>
      <param name="connectionString">The connection string to use. The connection string is only used to establish a connection to the database server.  Specifying a database in the connection string has no effect.</param>
      <exception cref="T:System.ArgumentException">The type is Custom and the <paramref name="customDatabase" /> value is not supplied, or the type is either Temporary or Persisted and the <paramref name="customDatabase" /> value is not null.</exception>
      <exception cref="T:System.Web.HttpException">Unable to connect to the specified database server.</exception>
      <exception cref="T:System.Web.Management.SqlExecutionException">An exception occurred while processing the SQL statements required for the operation.</exception>
    </member>
    <member name="M:System.Web.Management.SqlServices.Uninstall(System.String,System.String,System.String,System.String,System.Web.Management.SqlFeatures)">
      <summary>Removes components for selected ASP.NET features from a SQL Server database.</summary>
      <param name="server">The SQL Server instance from which to remove the features.</param>
      <param name="user">The user name to use when connecting to the database.</param>
      <param name="password">The password to use when connecting to the database.</param>
      <param name="database">The database from which to remove the features.</param>
      <param name="features">A bitwise combination of the <see cref="T:System.Web.Management.SqlFeatures" /> values, specifying the features to remove.</param>
      <exception cref="T:System.Web.HttpException">Unable to connect to the specified database server.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="features" /> value contained one or more invalid flags.</exception>
      <exception cref="T:System.Web.Management.SqlExecutionException">An exception occurred while processing the SQL statements required for the operation, an attempt was made to uninstall from a nonexistent database, or one or more tables for the features in the specified database contained data.</exception>
    </member>
    <member name="M:System.Web.Management.SqlServices.Uninstall(System.String,System.String,System.Web.Management.SqlFeatures)">
      <summary>Removes components for selected ASP.NET features from a SQL Server database.</summary>
      <param name="server">The SQL Server instance from which to remove the features.</param>
      <param name="database">The database from which to remove the features.</param>
      <param name="features">A bitwise combination of the <see cref="T:System.Web.Management.SqlFeatures" /> values, specifying the features to remove.</param>
      <exception cref="T:System.Web.HttpException">Unable to connect to the specified database server.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="features" /> value contained one or more invalid flags.</exception>
      <exception cref="T:System.Web.Management.SqlExecutionException">An exception occurred while processing the SQL statements required for the operation, an attempt was made to uninstall from a nonexistent database, or one or more tables for the features in the specified database contained data.</exception>
    </member>
    <member name="M:System.Web.Management.SqlServices.Uninstall(System.String,System.Web.Management.SqlFeatures,System.String)">
      <summary>Removes components for selected ASP.NET features from a SQL Server database.</summary>
      <param name="database">The database from which to remove the features.</param>
      <param name="features">A bitwise combination of the <see cref="T:System.Web.Management.SqlFeatures" /> values, specifying the features to remove.</param>
      <param name="connectionString">The connection string to use. The connection string is only used to establish a connection to the database server. Specifying a database in the connection string has no effect.</param>
      <exception cref="T:System.Web.HttpException">Unable to connect to the specified database server.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="features" /> value contained one or more invalid flags.</exception>
      <exception cref="T:System.Web.Management.SqlExecutionException">An exception occurred while processing the SQL statements required for the operation, an attempt was made to uninstall from a nonexistent database, or one or more tables for the features in the specified database contained data.</exception>
    </member>
    <member name="M:System.Web.Management.SqlServices.UninstallSessionState(System.String,System.String,System.String,System.String,System.Web.Management.SessionStateType)">
      <summary>Removes components for ASP.NET session state from a SQL Server database.</summary>
      <param name="server">The SQL Server instance from which to remove the session-state components.</param>
      <param name="user">The user name to use when connecting to the database.</param>
      <param name="password">The password to use when connecting to the database.</param>
      <param name="customDatabase">The database from which to remove the session-state components.</param>
      <param name="type">One of the <see cref="T:System.Web.Management.SessionStateType" /> values, specifying the type of session state to remove.</param>
      <exception cref="T:System.ArgumentException">The type is Custom and the <paramref name="customDatabase" /> value is not supplied, or the type is either Temporary or Persisted and the <paramref name="customDatabase" /> value is not null.</exception>
      <exception cref="T:System.Web.HttpException">Unable to connect to the specified database server.</exception>
      <exception cref="T:System.Web.Management.SqlExecutionException">An exception occurred while processing the SQL statements required for the operation.</exception>
    </member>
    <member name="M:System.Web.Management.SqlServices.UninstallSessionState(System.String,System.String,System.Web.Management.SessionStateType)">
      <summary>Removes components for ASP.NET session state from a SQL Server database.</summary>
      <param name="server">The SQL Server instance from which to remove the session-state components.</param>
      <param name="customDatabase">The database from which to remove the session-state components.</param>
      <param name="type">One of the <see cref="T:System.Web.Management.SessionStateType" /> values, specifying the type of session state to remove.</param>
      <exception cref="T:System.ArgumentException">The type is Custom and the <paramref name="customDatabase" /> value is not supplied, or the type is either Temporary or Persisted and the <paramref name="customDatabase" /> value is not null.</exception>
      <exception cref="T:System.Web.HttpException">Unable to connect to the specified database server.</exception>
      <exception cref="T:System.Web.Management.SqlExecutionException">An exception occurred while processing the SQL statements required for the operation.</exception>
    </member>
    <member name="M:System.Web.Management.SqlServices.UninstallSessionState(System.String,System.Web.Management.SessionStateType,System.String)">
      <summary>Removes components for ASP.NET session state from a SQL Server database.</summary>
      <param name="customDatabase">The database from which to remove the session-state components.</param>
      <param name="type">One of the <see cref="T:System.Web.Management.SessionStateType" /> values, specifying the type of session state to remove.</param>
      <param name="connectionString">The connection string to use.  The connection string is only used to establish a connection to the database server.  Specifying a database in the connection string has no effect.</param>
      <exception cref="T:System.ArgumentException">The type is Custom and the <paramref name="customDatabase" /> value is not supplied, or the type is either Temporary or Persisted and the <paramref name="customDatabase" /> value is not null.</exception>
      <exception cref="T:System.Web.HttpException">Unable to connect to the specified database server.</exception>
      <exception cref="T:System.Web.Management.SqlExecutionException">An exception occurred while processing the SQL statements required for the operation.</exception>
    </member>
    <member name="T:System.Web.Management.SqlWebEventProvider">
      <summary>Implements an event provider that saves event notifications to an SQL database.</summary>
    </member>
    <member name="M:System.Web.Management.SqlWebEventProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.SqlWebEventProvider" /> class.</summary>
    </member>
    <member name="M:System.Web.Management.SqlWebEventProvider.EventProcessingComplete(System.Web.Management.WebBaseEventCollection)">
      <summary>Called when event processing is complete.</summary>
      <param name="raisedEvents">A <see cref="T:System.Web.Management.WebBaseEventCollection" /> object of events raised.</param>
    </member>
    <member name="M:System.Web.Management.SqlWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Sets the initial values for this object.</summary>
      <param name="name">The name used in the configuration file to identify this provider.</param>
      <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that specifies the attributes assigned for this provider in the configuration file.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">There is no connection string declared in <paramref name="config" />.- or -There is more than one connection string declared in <paramref name="config" />.- or -The connection string supplied by <paramref name="config" /> specifies Integrated Security.- or -The value of the maxEventDetailsLength attribute supplied by <paramref name="config" /> is less than 0 or greater than 1073741823.</exception>
    </member>
    <member name="M:System.Web.Management.SqlWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)">
      <summary>Processes the event passed to the provider.</summary>
      <param name="eventRaised">The <see cref="T:System.Web.Management.WebBaseEvent" /> object to process.</param>
    </member>
    <member name="M:System.Web.Management.SqlWebEventProvider.ProcessEventFlush(System.Web.Management.WebEventBufferFlushInfo)">
      <summary>Removes all events from the provider's buffer.</summary>
      <param name="flushInfo">The <see cref="T:System.Web.Management.WebEventBufferFlushInfo" /> object that contains the buffer information to be flushed.</param>
    </member>
    <member name="M:System.Web.Management.SqlWebEventProvider.Shutdown">
      <summary>Performs tasks associated with shutting down the provider.</summary>
    </member>
    <member name="T:System.Web.Management.TemplatedMailWebEventProvider">
      <summary>Implements an event provider that uses templates to define and format e-mails it sends for event notifications.</summary>
    </member>
    <member name="P:System.Web.Management.TemplatedMailWebEventProvider.CurrentNotification">
      <summary>Gets the event notification object that provides the event information used by the e-mail template.</summary>
      <returns>The <see cref="T:System.Web.Management.MailEventNotificationInfo" /> object currently being processed.</returns>
    </member>
    <member name="M:System.Web.Management.TemplatedMailWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Sets the initial values for this object.</summary>
      <param name="name">The name of this event provider.</param>
      <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that specifies configuration settings for this event provider.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="config" /> does not include an attribute with the name "template".- or -The template attribute supplied by <paramref name="config" /> has a <see cref="P:System.String.Length" /> of 0.- or -The URL specified by the template attribute is not an application-relative URL.- or -The specified template URL is outside the App Domain Path.</exception>
    </member>
    <member name="T:System.Web.Management.TraceWebEventProvider">
      <summary>Implements an event provider that sends ASP.NET health-monitoring events as trace messages.</summary>
    </member>
    <member name="M:System.Web.Management.TraceWebEventProvider.Flush">
      <summary>Removes all events from the provider's buffer.</summary>
    </member>
    <member name="M:System.Web.Management.TraceWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Sets the initial values for this object.</summary>
      <param name="name">The name used in the configuration file to identify this provider.</param>
      <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that specifies the attributes assigned for this provider in the configuration file.</param>
    </member>
    <member name="M:System.Web.Management.TraceWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)">
      <summary>Processes the event passed to the provider.</summary>
      <param name="eventRaised">The <see cref="T:System.Web.Management.WebBaseEvent" /> object to process.</param>
    </member>
    <member name="M:System.Web.Management.TraceWebEventProvider.Shutdown">
      <summary>Performs tasks associated with shutting down the provider.</summary>
    </member>
    <member name="T:System.Web.Management.WebApplicationInformation">
      <summary>Provides information associated with health events.</summary>
    </member>
    <member name="P:System.Web.Management.WebApplicationInformation.ApplicationDomain">
      <summary>Gets the current application domain name.</summary>
      <returns>Gets the application domain name.</returns>
    </member>
    <member name="P:System.Web.Management.WebApplicationInformation.ApplicationPath">
      <summary>Gets the application physical path.</summary>
      <returns>The application physical path.</returns>
    </member>
    <member name="P:System.Web.Management.WebApplicationInformation.ApplicationVirtualPath">
      <summary>Gets the application logical path.</summary>
      <returns>The application logical path.</returns>
    </member>
    <member name="M:System.Web.Management.WebApplicationInformation.FormatToString(System.Web.Management.WebEventFormatter)">
      <summary>Formats the application information.</summary>
      <param name="formatter">The <see cref="T:System.Web.Management.WebEventFormatter" /> that contains the tab and indentation settings used to format the Web health event information.</param>
    </member>
    <member name="P:System.Web.Management.WebApplicationInformation.MachineName">
      <summary>Gets the application machine name.</summary>
      <returns>The name of the machine where the application is running.</returns>
    </member>
    <member name="M:System.Web.Management.WebApplicationInformation.ToString">
      <summary>Formats event information for display purposes.</summary>
      <returns>The event information.</returns>
    </member>
    <member name="P:System.Web.Management.WebApplicationInformation.TrustLevel">
      <summary>Gets the application trust level.</summary>
      <returns>The application trust level.</returns>
    </member>
    <member name="T:System.Web.Management.WebApplicationLifetimeEvent">
      <summary>Represents a significant event in the lifetime of an application.</summary>
    </member>
    <member name="M:System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32)">
      <summary>Initializes the <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" /> class using the supplied parameters.</summary>
      <param name="message">The message associated with the event. </param>
      <param name="eventSource">The object that is the source of the event.</param>
      <param name="eventCode">The code associated with the event. When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
    </member>
    <member name="M:System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)">
      <summary>Initializes the <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" /> class using the supplied parameters.</summary>
      <param name="message">The message associated with the event.</param>
      <param name="eventSource">The object that is the source of the event.</param>
      <param name="eventCode">The code associated with the event. When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
      <param name="eventDetailCode">The <see cref="T:System.Web.Management.WebEventCodes" /> value that specifies the detailed identifier for the event. </param>
    </member>
    <member name="M:System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters">
      <summary>Used internally to increment performance counters.</summary>
    </member>
    <member name="T:System.Web.Management.WebAuditEvent">
      <summary>Serves as the base class for all ASP.NET health-monitoring audit events. </summary>
    </member>
    <member name="M:System.Web.Management.WebAuditEvent.#ctor(System.String,System.Object,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.WebAuditEvent" /> class using the supplied parameters.</summary>
      <param name="message">The event description. </param>
      <param name="eventSource">The object that is the source of the event.</param>
      <param name="eventCode">The code associated with the event. When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
    </member>
    <member name="M:System.Web.Management.WebAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.WebAuditEvent" /> class with specified event parameters.</summary>
      <param name="message">The event description. </param>
      <param name="eventSource">The object that is the source of the event. </param>
      <param name="eventCode">The code associated with the event. When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
      <param name="eventDetailCode">The <see cref="T:System.Web.Management.WebEventCodes" /> value that specifies the detailed identifier for the event.</param>
    </member>
    <member name="P:System.Web.Management.WebAuditEvent.RequestInformation">
      <summary>Get the information associated with the Web request.</summary>
      <returns>A <see cref="T:System.Web.Management.WebRequestInformation" /> that contains the information associated with the Web request.</returns>
    </member>
    <member name="T:System.Web.Management.WebAuthenticationFailureAuditEvent">
      <summary>Provides information about ASP.NET authentication failures. </summary>
    </member>
    <member name="M:System.Web.Management.WebAuthenticationFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.WebAuthenticationFailureAuditEvent" /> class with the specified event parameters.</summary>
      <param name="message">The event description. </param>
      <param name="eventSource">The object that is the source of the event. </param>
      <param name="eventCode">The code associated with the event. When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
      <param name="eventDetailCode">The <see cref="T:System.Web.Management.WebEventCodes" /> value that specifies the detailed identifier for the event.</param>
      <param name="nameToAuthenticate">The name of the user to authenticate. </param>
    </member>
    <member name="M:System.Web.Management.WebAuthenticationFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.WebAuthenticationFailureAuditEvent" /> class with the specified event parameters.</summary>
      <param name="message">The event description. </param>
      <param name="eventSource">The object that is the source of the event.</param>
      <param name="eventCode">The <see cref="T:System.Web.Management.WebEventCodes" /> value associated with the event.</param>
      <param name="nameToAuthenticate">The name of the user to authenticate.</param>
    </member>
    <member name="P:System.Web.Management.WebAuthenticationFailureAuditEvent.NameToAuthenticate">
      <summary>Gets the name of the user to authenticate.</summary>
      <returns>The name of the user to authenticate.</returns>
    </member>
    <member name="T:System.Web.Management.WebAuthenticationSuccessAuditEvent">
      <summary>Provides information about successful authentication events </summary>
    </member>
    <member name="M:System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.String)">
      <summary>Initializes the <see cref="T:System.Web.Management.WebSuccessAuditEvent" /> class using the supplied parameters.</summary>
      <param name="message">The event description. </param>
      <param name="eventSource">The object that is the source of the event. </param>
      <param name="eventCode">The code associated with the event. When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />. </param>
      <param name="eventDetailCode">The <see cref="T:System.Web.Management.WebEventCodes" /> value that specifies the detailed identifier for the event. </param>
      <param name="nameToAuthenticate">The name of the authenticated user. </param>
    </member>
    <member name="M:System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.String)">
      <summary>Initializes the <see cref="T:System.Web.Management.WebAuthenticationSuccessAuditEvent" /> class using the supplied parameters.</summary>
      <param name="message">The event description. </param>
      <param name="eventSource">The object that is the source of the event.</param>
      <param name="eventCode">The code associated with the event. When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />. </param>
      <param name="nameToAuthenticate">The name of the authenticated user.</param>
    </member>
    <member name="P:System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate">
      <summary>Gets the name of the authenticated user.</summary>
      <returns>The name of the authenticated user.</returns>
    </member>
    <member name="T:System.Web.Management.WebBaseErrorEvent">
      <summary>Serves as the base class for all the health-monitoring error events.</summary>
    </member>
    <member name="M:System.Web.Management.WebBaseErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.WebBaseErrorEvent" /> class.</summary>
      <param name="message">The event description.</param>
      <param name="eventSource">The object that is the source of the event.</param>
      <param name="eventCode">The code associated with the event. When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
      <param name="e">The <see cref="T:System.Exception" /> associated with the error. </param>
    </member>
    <member name="M:System.Web.Management.WebBaseErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.WebBaseErrorEvent" /> class.</summary>
      <param name="message">The event description.</param>
      <param name="eventSource">The object that is the source of the event.</param>
      <param name="eventCode">The code associated with the event. When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
      <param name="eventDetailCode">The detailed identifier for the event.</param>
      <param name="e">The <see cref="T:System.Exception" /> associated with the error. </param>
    </member>
    <member name="P:System.Web.Management.WebBaseErrorEvent.ErrorException">
      <summary>Gets the <see cref="T:System.Exception" /> associated with the error </summary>
      <returns>The <see cref="T:System.Exception" /> associated with the error.</returns>
    </member>
    <member name="M:System.Web.Management.WebBaseErrorEvent.IncrementPerfCounters">
      <summary>Increments the event-error performance-related counters.</summary>
    </member>
    <member name="T:System.Web.Management.WebBaseEvent">
      <summary>Defines the base class for the ASP.NET health-monitoring events.</summary>
    </member>
    <member name="M:System.Web.Management.WebBaseEvent.#ctor(System.String,System.Object,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.WebBaseEvent" /> class using the supplied parameters.</summary>
      <param name="message">The description of the event. </param>
      <param name="eventSource">The object that raised the event. </param>
      <param name="eventCode">The code associated with the event. When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />. </param>
    </member>
    <member name="M:System.Web.Management.WebBaseEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.WebBaseEvent" /> class using the supplied parameters.</summary>
      <param name="message">The description of the raised event. </param>
      <param name="eventSource">The object that raised the event. </param>
      <param name="eventCode">The code associated with the event. When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />. </param>
      <param name="eventDetailCode">The <see cref="T:System.Web.Management.WebEventCodes" /> value that specifies the detailed identifier for the event.</param>
    </member>
    <member name="P:System.Web.Management.WebBaseEvent.ApplicationInformation">
      <summary>Gets a <see cref="T:System.Web.Management.WebApplicationInformation" /> object that contains information about the current application being monitored.</summary>
      <returns>A <see cref="T:System.Web.Management.WebApplicationInformation" /> object that contains information about the application being monitored.</returns>
    </member>
    <member name="P:System.Web.Management.WebBaseEvent.EventCode">
      <summary>Gets the code value associated with the event.</summary>
      <returns>One of the <see cref="T:System.Web.Management.WebEventCodes" /> values.</returns>
    </member>
    <member name="P:System.Web.Management.WebBaseEvent.EventDetailCode">
      <summary>Gets the event detail code.</summary>
      <returns>The <see cref="T:System.Web.Management.WebEventCodes" /> value that specifies the detailed identifier for the event.</returns>
    </member>
    <member name="P:System.Web.Management.WebBaseEvent.EventID">
      <summary>Gets the identifier associated with the event.</summary>
      <returns>The identifier associated with the event.</returns>
    </member>
    <member name="P:System.Web.Management.WebBaseEvent.EventOccurrence">
      <summary>Gets a counter that represents the number of times the event has occurred.</summary>
      <returns>A counter that represents the number of times the event has occurred.</returns>
    </member>
    <member name="P:System.Web.Management.WebBaseEvent.EventSequence">
      <summary>Gets the number of times the event has been raised by the application.</summary>
      <returns>The number of times the event has been raised.</returns>
    </member>
    <member name="P:System.Web.Management.WebBaseEvent.EventSource">
      <summary>Gets the object that raises the event.</summary>
      <returns>The object that raised the event.</returns>
    </member>
    <member name="P:System.Web.Management.WebBaseEvent.EventTime">
      <summary>Gets the time when the event was raised.</summary>
      <returns>The time that the event was raised.</returns>
    </member>
    <member name="P:System.Web.Management.WebBaseEvent.EventTimeUtc">
      <summary>Gets the time when the event was raised.</summary>
      <returns>The time of the event in Coordinated Universal Time (UTC) format.</returns>
    </member>
    <member name="M:System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)">
      <summary>Provides standard formatting of the event information.</summary>
      <param name="formatter">A <see cref="T:System.Web.Management.WebEventFormatter" /> object that contains the formatted event information.</param>
    </member>
    <member name="M:System.Web.Management.WebBaseEvent.IncrementPerfCounters">
      <summary>Used internally to increment performance counters.</summary>
    </member>
    <member name="P:System.Web.Management.WebBaseEvent.Message">
      <summary>Gets the message that describes the event.</summary>
      <returns>The description of the event.</returns>
    </member>
    <member name="M:System.Web.Management.WebBaseEvent.Raise">
      <summary>Raises an event by notifying any configured provider that the event has occurred.</summary>
    </member>
    <member name="M:System.Web.Management.WebBaseEvent.Raise(System.Web.Management.WebBaseEvent)">
      <summary>Raises the specified event by notifying any configured provider that the event has occurred.</summary>
      <param name="eventRaised">A <see cref="T:System.Web.Management.WebBaseEvent" /> object. </param>
      <exception cref="T:System.Web.HttpException">The <see cref="P:System.Web.Management.WebBaseEvent.EventCode" /> property of <paramref name="eventRaised" /> has a value that is reserved for ASP.NET.</exception>
    </member>
    <member name="M:System.Web.Management.WebBaseEvent.ToString">
      <summary>Formats event information for display purposes.</summary>
      <returns>The event information.</returns>
    </member>
    <member name="M:System.Web.Management.WebBaseEvent.ToString(System.Boolean,System.Boolean)">
      <summary>Formats event information for display purposes.</summary>
      <returns>The event information.</returns>
      <param name="includeAppInfo">true if standard application information must be displayed as part of the event information; otherwise, false. </param>
      <param name="includeCustomEventDetails">true if custom information must be displayed as part of the event information; otherwise, false.</param>
    </member>
    <member name="T:System.Web.Management.WebBaseEventCollection">
      <summary>Contains a collection of <see cref="T:System.Web.Management.WebBaseEvent" /> objects. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Web.Management.WebBaseEventCollection.#ctor(System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.WebBaseEventCollection" /> class. </summary>
      <param name="events">The collection of <see cref="T:System.Web.Management.WebBaseEvent" /> objects.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="events" /> is null.</exception>
    </member>
    <member name="M:System.Web.Management.WebBaseEventCollection.Contains(System.Web.Management.WebBaseEvent)">
      <summary>Indicates whether the collection contains the specified <see cref="T:System.Web.Management.WebBaseEvent" /> object.</summary>
      <returns>true if the collection contains the specified element; otherwise, false. </returns>
      <param name="value">The <see cref="T:System.Web.Management.WebBaseEvent" /> object to search for.</param>
    </member>
    <member name="M:System.Web.Management.WebBaseEventCollection.IndexOf(System.Web.Management.WebBaseEvent)">
      <summary>Gets the index of the specified <see cref="T:System.Web.Management.WebBaseEvent" /> object.</summary>
      <returns>The index of the specified <see cref="T:System.Web.Management.WebBaseEvent" /> object within the collection.</returns>
      <param name="value">The <see cref="T:System.Web.Management.WebBaseEvent" /> object for which to obtain the index.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The object is not in the collection.</exception>
    </member>
    <member name="P:System.Web.Management.WebBaseEventCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Web.Management.WebBaseEvent" /> object at the specified index.</summary>
      <returns>The <see cref="T:System.Web.Management.WebBaseEvent" /> object at the specified index.</returns>
      <param name="index">The collection index of the <see cref="T:System.Web.Management.WebBaseEvent" /> object you want to retrieve.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified index is outside the range of the collection.</exception>
    </member>
    <member name="T:System.Web.Management.WebErrorEvent">
      <summary>Provides information about systemic errors.</summary>
    </member>
    <member name="M:System.Web.Management.WebErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Exception)">
      <summary>Initializes the <see cref="T:System.Web.Management.WebErrorEvent" /> class using the supplied parameters.</summary>
      <param name="message">The event description.</param>
      <param name="eventSource">The object that is the source of the event.</param>
      <param name="eventCode">The code associated with the event. When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
      <param name="exception">The <see cref="T:System.Exception" /> associated with the error. </param>
    </member>
    <member name="M:System.Web.Management.WebErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.WebErrorEvent" /> class using the supplied parameters. </summary>
      <param name="message">The event description.</param>
      <param name="eventSource">The object that is the source of the event.</param>
      <param name="eventCode">The code associated with the event. When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
      <param name="eventDetailCode">The <see cref="T:System.Web.Management.WebEventCodes" /> value that specifies the detailed identifier for the event.</param>
      <param name="exception">The <see cref="T:System.Exception" /> associated with the error. </param>
    </member>
    <member name="M:System.Web.Management.WebErrorEvent.IncrementPerfCounters">
      <summary>Used internally to increment performance counters.</summary>
    </member>
    <member name="P:System.Web.Management.WebErrorEvent.RequestInformation">
      <summary>Gets the application request information.</summary>
      <returns>A <see cref="T:System.Web.Management.WebRequestInformation" /> object that contains information about the current request.</returns>
    </member>
    <member name="P:System.Web.Management.WebErrorEvent.ThreadInformation">
      <summary>Gets the application-thread information.</summary>
      <returns>A <see cref="T:System.Web.Management.WebThreadInformation" /> object that contains information about the current thread.</returns>
    </member>
    <member name="T:System.Web.Management.WebEventBufferFlushInfo">
      <summary>Contains the parameters defining the flush buffer characteristics.</summary>
    </member>
    <member name="P:System.Web.Management.WebEventBufferFlushInfo.Events">
      <summary>Gets the events collection in the current message.</summary>
      <returns>The <see cref="T:System.Web.Management.WebBaseEventCollection" /> events contained in the current message.</returns>
    </member>
    <member name="P:System.Web.Management.WebEventBufferFlushInfo.EventsDiscardedSinceLastNotification">
      <summary>Gets the number of events dropped since the last notification.</summary>
      <returns>The number of events dropped by the buffering mechanism since the last notification.</returns>
    </member>
    <member name="P:System.Web.Management.WebEventBufferFlushInfo.EventsInBuffer">
      <summary>Gets the number of events in the buffer.</summary>
      <returns>The number of events in the buffer. </returns>
    </member>
    <member name="P:System.Web.Management.WebEventBufferFlushInfo.LastNotificationUtc">
      <summary>Gets the date and the time of the last notification.</summary>
      <returns>The date and the time of the last notification.</returns>
    </member>
    <member name="P:System.Web.Management.WebEventBufferFlushInfo.NotificationSequence">
      <summary>Gets the message sequence in the current notification.</summary>
      <returns>The number indicating the message sequence order in the current notification, beginning with an index of zero.</returns>
    </member>
    <member name="P:System.Web.Management.WebEventBufferFlushInfo.NotificationType">
      <summary>Gets the current notification type.</summary>
      <returns>One of the <see cref="T:System.Web.Management.EventNotificationType" /> values.</returns>
    </member>
    <member name="T:System.Web.Management.WebEventCodes">
      <summary>Defines the codes associated with the ASP.NET health monitoring events.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.ApplicationCodeBase">
      <summary>Identifies the offset for the ASP.NET health-monitoring application event codes. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.ApplicationCompilationEnd">
      <summary>Represents the event code indicating that the compilation of the application has finished. This field is constant. </summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.ApplicationCompilationStart">
      <summary>Represents the event code indicating that the compilation of the application has started. This field is constant. </summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.ApplicationDetailCodeBase">
      <summary>Identifies the offset for the application detail event codes. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.ApplicationHeartbeat">
      <summary>Represents the event code indicating that a heartbeat event occurred. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.ApplicationShutdown">
      <summary>Represents the event code indicating that an application has shut down. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.ApplicationShutdownBinDirChangeOrDirectoryRename">
      <summary>Represents the event code indicating a subdirectory in the application's Bin directory was changed or renamed. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.ApplicationShutdownBrowsersDirChangeOrDirectoryRename">
      <summary>Represents the event code indicating a subdirectory in the Browsers application directory was changed or renamed. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.ApplicationShutdownBuildManagerChange">
      <summary>Represents the event code indicating that the build manager has made a change that requires the application domain to be shut down.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.ApplicationShutdownChangeInGlobalAsax">
      <summary>Represents the event code indicating that the Global.asax file has changed. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.ApplicationShutdownChangeInSecurityPolicyFile">
      <summary>Represents the event code indicating that the security policy file has changed. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.ApplicationShutdownCodeDirChangeOrDirectoryRename">
      <summary>Represents the event code indicating a subdirectory in the App_Code directory was changed or renamed. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.ApplicationShutdownConfigurationChange">
      <summary>Represents the event code indicating that the configuration file has changed. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.ApplicationShutdownHostingEnvironment">
      <summary>Represents the event code indicating that the hosting environment is shutting down. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.ApplicationShutdownHttpRuntimeClose">
      <summary>Represents the event code indicating that the ASP.NET run time was explicitly closed. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.ApplicationShutdownIdleTimeout">
      <summary>Represents the event code indicating that the idle time-out was exceeded. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.ApplicationShutdownInitializationError">
      <summary>Represents the event code indicating an application-initialization error occurred. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.ApplicationShutdownMaxRecompilationsReached">
      <summary>Represents the event code indicating that the maximum number of recompilations was reached. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.ApplicationShutdownPhysicalApplicationPathChanged">
      <summary>Represents the event code indicating that the physical path of the application has changed. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.ApplicationShutdownResourcesDirChangeOrDirectoryRename">
      <summary>Represents the event code indicating a subdirectory in the App_Resources directory was changed or renamed. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.ApplicationShutdownUnknown">
      <summary>Represents the event code indicating that the application shutdown reason is unknown. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.ApplicationShutdownUnloadAppDomainCalled">
      <summary>Represents the event code indicating that the application domain was explicitly unloaded. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.ApplicationStart">
      <summary>Represents the event code indicating that an application has started. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.AuditCodeBase">
      <summary>Identifies the offset for the ASP.NET health-monitoring audit event codes. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.AuditDetailCodeBase">
      <summary>Identifies the offset for the ASP.NET audit-detail event codes. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.AuditFileAuthorizationFailure">
      <summary>Represents the event code indicating that a file-authorization failure occurred during a Web request. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.AuditFileAuthorizationSuccess">
      <summary>Represents the event code indicating that a file-authorization success occurred during a Web request. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.AuditFormsAuthenticationFailure">
      <summary>Represents the event code indicating a form authentication failure occurred during a Web request. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess">
      <summary>Represents the event code indicating a form-authentication success occurred during a Web request. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.AuditInvalidViewStateFailure">
      <summary>Represents the event code indicating that the view-state verification failed. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationFailure">
      <summary>Represents the event code indicating that a membership-authentication failure occurred during a Web request. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess">
      <summary>Represents the event code indicating that a membership-authentication success occurred during a Web request. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.AuditUnhandledAccessException">
      <summary>Represents the event code indicating that an unhandled access exception occurred during a Web request. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.AuditUnhandledSecurityException">
      <summary>Represents the event code indicating that an unhandled security exception occurred during a Web request. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.AuditUrlAuthorizationFailure">
      <summary>Represents the event code indicating that a URL-authorization failure occurred during a Web request. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.AuditUrlAuthorizationSuccess">
      <summary>Represents the event code indicating a URL-authorization success occurred during a Web request. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.ErrorCodeBase">
      <summary>Identifies the offset for the ASP.NET health-monitoring error event codes. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.ExpiredTicketFailure">
      <summary>Represents the event code indicating that the supplied ticket is expired. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.InvalidEventCode">
      <summary>Represents the event code indicating that the event code value is not allowed. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.InvalidTicketFailure">
      <summary>Represents the event code indicating that the supplied ticket is invalid. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.InvalidViewState">
      <summary>Represents the event code indicating that the supplied view state is invalid. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.InvalidViewStateMac">
      <summary>Represents the event code indicating that the supplied view state failed the integrity check. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.MiscCodeBase">
      <summary>Identifies the offset for the ASP.NET health-monitoring Web miscellaneous event codes. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.RequestCodeBase">
      <summary>Identifies the offset for the ASP.NET health-monitoring Web-request event codes. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.RequestTransactionAbort">
      <summary>Represents the event code indicating that the Web request was aborted. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.RequestTransactionComplete">
      <summary>Represents the event code indicating that the Web request was completed. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.RuntimeErrorPostTooLarge">
      <summary>Represents the event code indicating that the size of the posted information exceeded the allowed limits. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.RuntimeErrorRequestAbort">
      <summary>Represents the event code indicating that the Web request has been aborted.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.RuntimeErrorUnhandledException">
      <summary>Represents the event code indicating an unhandled exception occurred. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.RuntimeErrorValidationFailure">
      <summary>Represents the event code indicating that a validation error occurred. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.RuntimeErrorViewStateFailure">
      <summary>Represents the event code indicating that a view-state failure occurred. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.SqlProviderEventsDropped">
      <summary>Represents the event code indicating that the SQL provider dropped events. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.StateServerConnectionError">
      <summary>Represents the event code indicating that an error occurred while communicating with the state server. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.UndefinedEventCode">
      <summary>Represents the event code indicating that the major event code value is not defined. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.UndefinedEventDetailCode">
      <summary>Represents the event code indicating that the detail event code value is not defined. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.WebErrorCompilationError">
      <summary>Indicates that a compilation error occurred.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.WebErrorConfigurationError">
      <summary>Indicates that a configuration error occurred. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.WebErrorObjectStateFormatterDeserializationError">
      <summary>Represents the event code indicating that there was an error during the deserialization of the type or value of an object. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.WebErrorOtherError">
      <summary>Represents the event code indicating that an unclassified error occurred. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.WebErrorParserError">
      <summary>Represents the event code indicating a parser error occurred.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.WebErrorPropertyDeserializationError">
      <summary>Represents the event code indicating that there was an error during the deserialization of a property. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.WebEventDetailCodeBase">
      <summary>Identifies the offset for the ASP.NET health-monitoring Web-detail event codes. </summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.WebEventProviderInformation">
      <summary>Represents the event code used by providers to record nonstandard information about an event. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Management.WebEventCodes.WebExtendedBase">
      <summary>Identifies the offset for the custom event codes. This field is constant.</summary>
    </member>
    <member name="T:System.Web.Management.WebEventFormatter">
      <summary>Formats ASP.NET health monitoring event information.</summary>
    </member>
    <member name="M:System.Web.Management.WebEventFormatter.AppendLine(System.String)">
      <summary>Appends the specified string and a carriage return to the event information.</summary>
      <param name="s">The string to add to the event information.</param>
    </member>
    <member name="P:System.Web.Management.WebEventFormatter.IndentationLevel">
      <summary>Gets or sets the indentation level.</summary>
      <returns>The number of tabs used for the indentation level. </returns>
    </member>
    <member name="P:System.Web.Management.WebEventFormatter.TabSize">
      <summary>Gets or sets the tab size.</summary>
      <returns>The number of spaces in a tab.</returns>
    </member>
    <member name="M:System.Web.Management.WebEventFormatter.ToString">
      <summary>Returns the event information in string format.</summary>
      <returns>The event information.</returns>
    </member>
    <member name="T:System.Web.Management.WebEventManager">
      <summary>Provides functionality for managing Web events in an application. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Management.WebEventManager.Flush">
      <summary>Flushes the event buffer for all providers that are in the healthMonitoring section.</summary>
    </member>
    <member name="M:System.Web.Management.WebEventManager.Flush(System.String)">
      <summary>Flushes the event buffer for the specified provider.</summary>
      <param name="providerName">The name of the provider.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="providerName" /> does not match any of the existing providers.</exception>
    </member>
    <member name="T:System.Web.Management.WebEventProvider">
      <summary>Provides the base class for non buffered event providers.</summary>
    </member>
    <member name="M:System.Web.Management.WebEventProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.WebEventProvider" /> class.</summary>
    </member>
    <member name="M:System.Web.Management.WebEventProvider.Flush">
      <summary>Moves the events from the provider's buffer into the event log. </summary>
    </member>
    <member name="M:System.Web.Management.WebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)">
      <summary>Processes the event passed to the provider.</summary>
      <param name="raisedEvent">The <see cref="T:System.Web.Management.WebBaseEvent" /> object to process.</param>
    </member>
    <member name="M:System.Web.Management.WebEventProvider.Shutdown">
      <summary>Performs tasks associated with shutting down the provider.</summary>
    </member>
    <member name="T:System.Web.Management.WebFailureAuditEvent">
      <summary>Provides information about security failures. </summary>
    </member>
    <member name="M:System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.WebFailureAuditEvent" /> class using the supplied parameters.</summary>
      <param name="message">The event description. </param>
      <param name="eventSource">The object that is the source of the event.</param>
      <param name="eventCode">The code associated with the event. When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
    </member>
    <member name="M:System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.WebFailureAuditEvent" /> class using the supplied parameters.</summary>
      <param name="message">The event description. </param>
      <param name="eventSource">The object that is the source of the event. </param>
      <param name="eventCode">The code associated with the event. When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
      <param name="eventDetailCode">The <see cref="T:System.Web.Management.WebEventCodes" /> value that specifies the detailed identifier for the event.</param>
    </member>
    <member name="M:System.Web.Management.WebFailureAuditEvent.IncrementPerfCounters">
      <summary>Increments the Audit Failure Events Raised performance counter.</summary>
    </member>
    <member name="T:System.Web.Management.WebHeartbeatEvent">
      <summary>Defines those health-monitoring events raised at a periodic interval.</summary>
    </member>
    <member name="M:System.Web.Management.WebHeartbeatEvent.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.WebHeartbeatEvent" /> class with the given message and event code.</summary>
      <param name="message">The description of the event.</param>
      <param name="eventCode">The code associated with the event. When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
    </member>
    <member name="P:System.Web.Management.WebHeartbeatEvent.ProcessStatistics">
      <summary>Provides key information about the running process.</summary>
      <returns>The <see cref="T:System.Web.Management.WebProcessStatistics" /> for the running process.</returns>
    </member>
    <member name="T:System.Web.Management.WebManagementEvent">
      <summary>Defines the base class for events that carry application and process information.</summary>
    </member>
    <member name="M:System.Web.Management.WebManagementEvent.#ctor(System.String,System.Object,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.WebManagementEvent" /> class using the supplied parameters.</summary>
      <param name="message">The event description. </param>
      <param name="eventSource">The object that is the source of the event.</param>
      <param name="eventCode">The code associated with the event. When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
    </member>
    <member name="M:System.Web.Management.WebManagementEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.WebManagementEvent" /> class using the supplied parameters.</summary>
      <param name="message">The event description. </param>
      <param name="eventSource">The object that is the source of the event. </param>
      <param name="eventCode">The code associated with the event. When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
      <param name="eventDetailCode">The <see cref="T:System.Web.Management.WebEventCodes" /> value that specifies the detailed identifier for the event.</param>
    </member>
    <member name="P:System.Web.Management.WebManagementEvent.ProcessInformation">
      <summary>Gets information about the ASP.NET application-hosting process.</summary>
      <returns>A <see cref="T:System.Web.Management.WebProcessInformation" /> object that contains information about the process.</returns>
    </member>
    <member name="T:System.Web.Management.WebProcessInformation">
      <summary>Provides information about the worker process that hosts ASP.NET.</summary>
    </member>
    <member name="P:System.Web.Management.WebProcessInformation.AccountName">
      <summary>Gets the account name for the worker process.</summary>
      <returns>The worker process account name.</returns>
    </member>
    <member name="M:System.Web.Management.WebProcessInformation.FormatToString(System.Web.Management.WebEventFormatter)">
      <summary>Formats the application information.</summary>
      <param name="formatter">The <see cref="T:System.Web.Management.WebEventFormatter" /> that contains the tab and indentation settings used to format the Web health event information.</param>
    </member>
    <member name="P:System.Web.Management.WebProcessInformation.ProcessID">
      <summary>Gets the process identifier.</summary>
      <returns>The process identifier.</returns>
    </member>
    <member name="P:System.Web.Management.WebProcessInformation.ProcessName">
      <summary>Gets the name of the process.</summary>
      <returns>The name of the process.</returns>
    </member>
    <member name="T:System.Web.Management.WebProcessStatistics">
      <summary>Provides information for assessing the health of a running process.</summary>
    </member>
    <member name="M:System.Web.Management.WebProcessStatistics.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.WebProcessStatistics" /> class. </summary>
    </member>
    <member name="P:System.Web.Management.WebProcessStatistics.AppDomainCount">
      <summary>Gets the number of application domains in the process.</summary>
      <returns>The number of application domains.</returns>
    </member>
    <member name="M:System.Web.Management.WebProcessStatistics.FormatToString(System.Web.Management.WebEventFormatter)">
      <summary>Formats the process statistics.</summary>
      <param name="formatter">The <see cref="T:System.Web.Management.WebEventFormatter" /> that contains the tab and indentation settings used to format the Web health event information.</param>
    </member>
    <member name="P:System.Web.Management.WebProcessStatistics.ManagedHeapSize">
      <summary>Gets the size of the managed heap.</summary>
      <returns>The size of the managed heap.</returns>
    </member>
    <member name="P:System.Web.Management.WebProcessStatistics.PeakWorkingSet">
      <summary>Gets the peak working set for the lifetime of the process to date.</summary>
      <returns>The peak working set of the process.</returns>
    </member>
    <member name="P:System.Web.Management.WebProcessStatistics.ProcessStartTime">
      <summary>Gets the time when the process started.</summary>
      <returns>The <see cref="T:System.DateTime" /> when the process started.</returns>
    </member>
    <member name="P:System.Web.Management.WebProcessStatistics.RequestsExecuting">
      <summary>Gets the number of requests currently executing.</summary>
      <returns>The number of requests that the process is currently executing.</returns>
    </member>
    <member name="P:System.Web.Management.WebProcessStatistics.RequestsQueued">
      <summary>Gets the number of requests waiting to be processed.</summary>
      <returns>The number of requests waiting to be processed.</returns>
    </member>
    <member name="P:System.Web.Management.WebProcessStatistics.RequestsRejected">
      <summary>Gets the number of rejected requests.</summary>
      <returns>The number of rejected requests.</returns>
    </member>
    <member name="P:System.Web.Management.WebProcessStatistics.ThreadCount">
      <summary>Gets the total count of the process threads.</summary>
      <returns>The total count of the process threads.</returns>
    </member>
    <member name="P:System.Web.Management.WebProcessStatistics.WorkingSet">
      <summary>Gets the working set for the process.</summary>
      <returns>The working set for the process.</returns>
    </member>
    <member name="T:System.Web.Management.WebRequestErrorEvent">
      <summary>Defines the event that carries information about Web-request errors.</summary>
    </member>
    <member name="M:System.Web.Management.WebRequestErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Exception)">
      <summary>Initializes the <see cref="T:System.Web.Management.WebRequestErrorEvent" /> class with specified event parameters.</summary>
      <param name="message">The event description.</param>
      <param name="eventSource">The object that is the source of the event.</param>
      <param name="eventCode">The identifier associated with the event. It must be greater than the <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" /> field constant.</param>
      <param name="exception">The <see cref="T:System.Exception" /> associated with the error.</param>
    </member>
    <member name="M:System.Web.Management.WebRequestErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.Exception)">
      <summary>Initializes the <see cref="T:System.Web.Management.WebRequestErrorEvent" /> class with specified event parameters.</summary>
      <param name="message">The event description.</param>
      <param name="eventSource">The object that is the source of the event.</param>
      <param name="eventCode">The identifier associated with the event. It must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" /> field constant.</param>
      <param name="eventDetailCode">The event detail code identifier.</param>
      <param name="exception">The <see cref="T:System.Exception" /> associated with the error. </param>
    </member>
    <member name="M:System.Web.Management.WebRequestErrorEvent.IncrementPerfCounters">
      <summary>Used internally to increment the relevant performance counters.</summary>
    </member>
    <member name="P:System.Web.Management.WebRequestErrorEvent.RequestInformation">
      <summary>Gets the application request information.</summary>
      <returns>The application request information.</returns>
    </member>
    <member name="P:System.Web.Management.WebRequestErrorEvent.ThreadInformation">
      <summary>Gets the application thread information.</summary>
      <returns>The application thread information.</returns>
    </member>
    <member name="T:System.Web.Management.WebRequestEvent">
      <summary>Defines the base class for events providing Web-request information.</summary>
    </member>
    <member name="M:System.Web.Management.WebRequestEvent.#ctor(System.String,System.Object,System.Int32)">
      <summary>Initializes the <see cref="T:System.Web.Management.WebRequestEvent" /> class with specified event parameters.</summary>
      <param name="message">The message associated with the event.</param>
      <param name="eventSource">The object that is the source of the event.</param>
      <param name="eventCode">The <see cref="T:System.Web.Management.WebEventCodes" /> code associated with the event. It must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
    </member>
    <member name="M:System.Web.Management.WebRequestEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)">
      <summary>Initializes the <see cref="T:System.Web.Management.WebRequestEvent" /> class with specified event parameters.</summary>
      <param name="message">The message associated with the event.</param>
      <param name="eventSource">The object that is the source of the event.</param>
      <param name="eventCode">The <see cref="T:System.Web.Management.WebEventCodes" /> code associated with the event. It must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
      <param name="eventDetailCode">The <see cref="T:System.Web.Management.WebEventCodes" /> detail code associated with the event.</param>
    </member>
    <member name="M:System.Web.Management.WebRequestEvent.IncrementPerfCounters">
      <summary>Used internally to increment the performance counters.</summary>
    </member>
    <member name="P:System.Web.Management.WebRequestEvent.RequestInformation">
      <summary>Gets the information associated with the Web-application request.</summary>
      <returns>The information associated with the Web-application request.</returns>
    </member>
    <member name="T:System.Web.Management.WebRequestInformation">
      <summary>Provides information about the current Web request.</summary>
    </member>
    <member name="M:System.Web.Management.WebRequestInformation.FormatToString(System.Web.Management.WebEventFormatter)">
      <summary>Formats the Web-request information.</summary>
      <param name="formatter">The <see cref="T:System.Web.Management.WebEventFormatter" /> that contains the tab and indentation settings used to format the Web health event information.</param>
    </member>
    <member name="P:System.Web.Management.WebRequestInformation.Principal">
      <summary>Gets the instance of the managed-code principal associated with the Web request.</summary>
      <returns>The <see cref="T:System.Security.Principal.IPrincipal" /> instance that is associated with the request event.</returns>
    </member>
    <member name="P:System.Web.Management.WebRequestInformation.RequestPath">
      <summary>Gets the physical path of the Web request.</summary>
      <returns>The physical path of the request.</returns>
    </member>
    <member name="P:System.Web.Management.WebRequestInformation.RequestUrl">
      <summary>Gets the logical path of the request.</summary>
      <returns>The logical path of the request.</returns>
    </member>
    <member name="P:System.Web.Management.WebRequestInformation.ThreadAccountName">
      <summary>Gets a string that represents the Windows logon name of the user on whose behalf the code is being run.</summary>
      <returns>The Windows logon name of the user on whose behalf the code is being run.</returns>
    </member>
    <member name="P:System.Web.Management.WebRequestInformation.UserHostAddress">
      <summary>Gets the user host address. </summary>
      <returns>The user host address.</returns>
    </member>
    <member name="T:System.Web.Management.WebSuccessAuditEvent">
      <summary>Provides information about successful security events.</summary>
    </member>
    <member name="M:System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.WebSuccessAuditEvent" /> class using the supplied parameters.</summary>
      <param name="message">The event description. </param>
      <param name="eventSource">The object that is the source of the event.</param>
      <param name="eventCode">The code associated with the event. When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
    </member>
    <member name="M:System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.WebSuccessAuditEvent" /> class using the supplied parameters.</summary>
      <param name="message">The event description. </param>
      <param name="eventSource">The object that is the source of the event. </param>
      <param name="eventCode">The code associated with the event. When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
      <param name="eventDetailCode">The <see cref="T:System.Web.Management.WebEventCodes" /> value that specifies the detailed identifier for the event.</param>
    </member>
    <member name="M:System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters">
      <summary>Increments the Audit Success Events Raised performance counter.</summary>
    </member>
    <member name="T:System.Web.Management.WebThreadInformation">
      <summary>Provides information about the state of a thread in an ASP.NET process.</summary>
    </member>
    <member name="M:System.Web.Management.WebThreadInformation.FormatToString(System.Web.Management.WebEventFormatter)">
      <summary>Formats thread-related information.</summary>
      <param name="formatter">The <see cref="T:System.Web.Management.WebEventFormatter" /> that contains the tab and indentation settings used to format the Web health event information.</param>
    </member>
    <member name="P:System.Web.Management.WebThreadInformation.IsImpersonating">
      <summary>Gets the current thread-impersonation mode.</summary>
      <returns>true if the thread is executing in impersonation mode; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Management.WebThreadInformation.StackTrace">
      <summary>Gets the current thread-managed stack trace.</summary>
      <returns>The thread-managed stack trace.</returns>
    </member>
    <member name="P:System.Web.Management.WebThreadInformation.ThreadAccountName">
      <summary>Gets the thread account name.</summary>
      <returns>The thread account name.</returns>
    </member>
    <member name="P:System.Web.Management.WebThreadInformation.ThreadID">
      <summary>Gets the current thread identifier.</summary>
      <returns>The current thread identifier.</returns>
    </member>
    <member name="T:System.Web.Management.WebViewStateFailureAuditEvent">
      <summary>Provides Web-application view-state-related-failure information.  </summary>
    </member>
    <member name="M:System.Web.Management.WebViewStateFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.Web.UI.ViewStateException)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.WebViewStateFailureAuditEvent" /> class using the supplied parameters.</summary>
      <param name="message">The event description. </param>
      <param name="eventSource">The object that is the source of the event. </param>
      <param name="eventCode">The code associated with the event. When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
      <param name="eventDetailCode">The <see cref="T:System.Web.Management.WebEventCodes" /> value that specifies the detailed identifier for the event.</param>
      <param name="viewStateException">The <see cref="T:System.Web.UI.ViewStateException" /> caused by the failure.</param>
    </member>
    <member name="M:System.Web.Management.WebViewStateFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Web.UI.ViewStateException)">
      <summary>Initializes the <see cref="T:System.Web.Management.WebViewStateFailureAuditEvent" /> class using the supplied parameters.</summary>
      <param name="message">The event description. </param>
      <param name="eventSource">The object that is the source of the event.</param>
      <param name="eventCode">The code associated with the event. When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
      <param name="viewStateException">The <see cref="T:System.Web.UI.ViewStateException" /> caused by the failure.</param>
    </member>
    <member name="P:System.Web.Management.WebViewStateFailureAuditEvent.ViewStateException">
      <summary>Gets the exception caused by the failure.</summary>
      <returns>The <see cref="T:System.Web.UI.ViewStateException" /> caused by the failure.</returns>
    </member>
    <member name="T:System.Web.Management.WmiWebEventProvider">
      <summary>Implements an event provider that maps ASP.NET health-monitoring events to Windows Management Instrumentation (WMI) events.</summary>
    </member>
    <member name="M:System.Web.Management.WmiWebEventProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.WmiWebEventProvider" /> class.</summary>
    </member>
    <member name="M:System.Web.Management.WmiWebEventProvider.Flush">
      <summary>Removes all events from the provider's buffer.</summary>
    </member>
    <member name="M:System.Web.Management.WmiWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Sets the initial values for this object.</summary>
      <param name="name">The name used in the configuration file to identify this provider.</param>
      <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that specifies the attributes assigned for this provider in the configuration file.</param>
    </member>
    <member name="M:System.Web.Management.WmiWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)">
      <summary>Processes the event passed to the provider.</summary>
      <param name="eventRaised">The <see cref="T:System.Web.Management.WebBaseEvent" /> object to process. </param>
      <exception cref="T:System.Web.HttpException">The event could not be raised.</exception>
    </member>
    <member name="M:System.Web.Management.WmiWebEventProvider.Shutdown">
      <summary>Performs tasks associated with shutting down the provider.</summary>
    </member>
    <member name="T:System.Web.Profile.CustomProviderDataAttribute">
      <summary>Provides a string of custom data to the provider for a profile property.</summary>
    </member>
    <member name="M:System.Web.Profile.CustomProviderDataAttribute.#ctor(System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Web.Profile.CustomProviderDataAttribute" /> class and specifies a string of custom data.</summary>
      <param name="customProviderData">The string of custom data to supply to the provider.</param>
    </member>
    <member name="P:System.Web.Profile.CustomProviderDataAttribute.CustomProviderData">
      <summary>Gets a string of custom data for the profile property provider.</summary>
      <returns>A string of custom data for the profile property provider. The default is null.</returns>
    </member>
    <member name="M:System.Web.Profile.CustomProviderDataAttribute.IsDefaultAttribute">
      <summary>Gets a value indicating whether the <see cref="P:System.Web.Profile.CustomProviderDataAttribute.CustomProviderData" /> property is set to the default value.</summary>
      <returns>true if the <see cref="P:System.Web.Profile.CustomProviderDataAttribute.CustomProviderData" /> property is set to the default value; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.Profile.DefaultProfile">
      <summary>Represents a user-profile instance when no profile properties are defined.</summary>
    </member>
    <member name="M:System.Web.Profile.DefaultProfile.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.Profile.DefaultProfile" /> class.</summary>
    </member>
    <member name="T:System.Web.Profile.ProfileAuthenticationOption">
      <summary>Describes the authentication type of user profiles to be searched.</summary>
    </member>
    <member name="F:System.Web.Profile.ProfileAuthenticationOption.Anonymous">
      <summary>Search only anonymous profiles.</summary>
    </member>
    <member name="F:System.Web.Profile.ProfileAuthenticationOption.Authenticated">
      <summary>Search only authenticated profiles.</summary>
    </member>
    <member name="F:System.Web.Profile.ProfileAuthenticationOption.All">
      <summary>Search all profiles.</summary>
    </member>
    <member name="T:System.Web.Profile.ProfileAutoSaveEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.Profile.ProfileModule.ProfileAutoSaving" /> event of the <see cref="T:System.Web.Profile.ProfileModule" /> class.</summary>
    </member>
    <member name="M:System.Web.Profile.ProfileAutoSaveEventArgs.#ctor(System.Web.HttpContext)">
      <summary>Creates an instance of the <see cref="T:System.Web.Profile.ProfileAutoSaveEventArgs" /> class.</summary>
      <param name="context">The <see cref="T:System.Web.HttpContext" /> of the current request.</param>
    </member>
    <member name="P:System.Web.Profile.ProfileAutoSaveEventArgs.Context">
      <summary>Gets the <see cref="T:System.Web.HttpContext" /> for the current request.</summary>
      <returns>The <see cref="T:System.Web.HttpContext" /> for the current request</returns>
    </member>
    <member name="P:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Web.Profile.ProfileModule" /> will automatically save the user profile.</summary>
      <returns>true if the <see cref="T:System.Web.Profile.ProfileModule" /> will automatically save the user profile; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.Web.Profile.ProfileAutoSaveEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Web.Profile.ProfileModule.ProfileAutoSaving" /> event of a <see cref="T:System.Web.Profile.ProfileModule" />. </summary>
      <param name="sender">The <see cref="T:System.Web.Profile.ProfileModule" /> that raised the <see cref="E:System.Web.Profile.ProfileModule.ProfileAutoSaving" /> event.</param>
      <param name="e">A <see cref="T:System.Web.Profile.ProfileAutoSaveEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Web.Profile.ProfileBase">
      <summary>Provides untyped access to profile property values and information.</summary>
    </member>
    <member name="M:System.Web.Profile.ProfileBase.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Web.Profile.ProfileBase" /> class.</summary>
      <exception cref="T:System.Configuration.Provider.ProviderException">The enabled attribute of the profile section of the Web.config file is false.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A property type specified in the profile section of the Web.config file could not be created.-or-The allowAnonymous attribute for a property in the profile section of the Web.config file is set to true and the enabled attribute of the &lt;anonymousIdentification&gt; element is set to false.-or-The serializeAs attribute for a property in the profile section of the Web.config file is set to <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> and the <see cref="P:System.Type.IsSerializable" /> property of the specified type returns false.-or-The name of a provider specified using the provider attribute of a profile property could not be found in the <see cref="P:System.Web.Profile.ProfileManager.Providers" /> collection.-or-The type specified for a profile property could not be found.-or-A profile property was specified with a name that matches a property name on the base class specified in the inherits attribute of the profile section.</exception>
    </member>
    <member name="M:System.Web.Profile.ProfileBase.Create(System.String)">
      <summary>Used by ASP.NET to create an instance of a profile for the specified user name.</summary>
      <returns>An <see cref="T:System.Web.Profile.ProfileBase" /> that represents the profile for the specified user.</returns>
      <param name="username">The name of the user to create a profile for.</param>
      <exception cref="T:System.Configuration.Provider.ProviderException">The enabled attribute of the profile section of the Web.config file is false.</exception>
      <exception cref="T:System.Web.HttpException">The current hosting permission level is less than <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A property type specified in the profile section of the Web.config file could not be created.-or-The allowAnonymous attribute for a property in the profile section of the Web.config file is set to true and the enabled attribute of the &lt;anonymousIdentification&gt; element is set to false.-or-The serializeAs attribute for a property in the profile section of the Web.config file is set to <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> and the <see cref="P:System.Type.IsSerializable" /> property of the specified type returns false.-or-The name of a provider specified using the provider attribute of a profile property could not be found in the <see cref="P:System.Web.Profile.ProfileManager.Providers" /> collection.-or-The type specified for a profile property could not be found.-or-A profile property was specified with a name that matches a property name on the base class specified in the inherits attribute of the profile section.</exception>
    </member>
    <member name="M:System.Web.Profile.ProfileBase.Create(System.String,System.Boolean)">
      <summary>Used by ASP.NET to create an instance of a profile for the specified user name. Takes a parameter indicating whether the user is authenticated or anonymous.</summary>
      <returns>A <see cref="T:System.Web.Profile.ProfileBase" /> object that represents the profile for the specified user.</returns>
      <param name="username">The name of the user to create a profile for.</param>
      <param name="isAuthenticated">true to indicate the user is authenticated; false to indicate the user is anonymous.</param>
      <exception cref="T:System.Configuration.Provider.ProviderException">The enabled attribute of the profile section of the Web.config file is false.</exception>
      <exception cref="T:System.Web.HttpException">The current hosting permission level is less than <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A property type specified in the profile section of the Web.config file could not be created.-or-The allowAnonymous attribute for a property in the profile section of the Web.config file is set to true and the enabled attribute of the &lt;anonymousIdentification&gt; element is set to false.-or-The serializeAs attribute for a property in the profile section of the Web.config file is set to <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> and the <see cref="P:System.Type.IsSerializable" /> property of the specified type returns false.-or-The name of a provider specified using the provider attribute of a profile property could not be found in the <see cref="P:System.Web.Profile.ProfileManager.Providers" /> collection.-or-The type specified for a profile property could not be found.-or-A profile property was specified with a name that matches a property name on the base class specified in the inherits attribute of the profile section.</exception>
    </member>
    <member name="M:System.Web.Profile.ProfileBase.GetProfileGroup(System.String)">
      <summary>Gets a group of properties identified by a group name.</summary>
      <returns>A <see cref="T:System.Web.Profile.ProfileGroupBase" /> object for a group of properties configured with the specified group name.</returns>
      <param name="groupName">The name of the group of properties.</param>
      <exception cref="T:System.Configuration.Provider.ProviderException">The specified profile property group name was not found in the properties configuration section.</exception>
    </member>
    <member name="M:System.Web.Profile.ProfileBase.GetPropertyValue(System.String)">
      <summary>Gets the value of a profile property.</summary>
      <returns>The value of the specified profile property, typed as object.</returns>
      <param name="propertyName">The name of the profile property.</param>
      <exception cref="T:System.Configuration.Provider.ProviderException">An attempt was made to set a property value on an anonymous profile where the property's allowAnonymous attribute is false.</exception>
      <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">There are no properties defined for the current profile.-or-The specified profile property name does not exist in the current profile.-or-The provider for the specified profile property did not recognize the specified property.</exception>
    </member>
    <member name="M:System.Web.Profile.ProfileBase.Initialize(System.String,System.Boolean)">
      <summary>Initializes the profile property values and information for the current user.</summary>
      <param name="username">The name of the user to initialize the profile for.</param>
      <param name="isAuthenticated">true to indicate the user is authenticated; false to indicate the user is anonymous.</param>
    </member>
    <member name="P:System.Web.Profile.ProfileBase.IsAnonymous">
      <summary>Gets a value indicating whether the user profile is for an anonymous user.</summary>
      <returns>true if the user profile is for an anonymous user; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Profile.ProfileBase.IsDirty">
      <summary>Gets a value indicating whether any of the profile properties have been modified.</summary>
      <returns>true if any of the profile properties have been modified; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Profile.ProfileBase.Item(System.String)">
      <summary>Gets or sets a profile property value indexed by the property name.</summary>
      <returns>The value of the specified profile property, typed as object.</returns>
      <param name="propertyName">The name of the profile property.</param>
      <exception cref="T:System.Configuration.Provider.ProviderException">An attempt was made to set a property value on an anonymous profile where the property's allowAnonymous attribute is false.</exception>
      <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">There are no properties defined for the current profile.-or-The specified profile property name does not exist in the current profile.-or-The provider for the specified profile property did not recognize the specified property.</exception>
      <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">An attempt was made to set a property value that was marked as read-only.</exception>
      <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">An attempt was made to assign a value to a property using an incompatible type.</exception>
    </member>
    <member name="P:System.Web.Profile.ProfileBase.LastActivityDate">
      <summary>Gets the most recent date and time that the profile was read or modified.</summary>
      <returns>The most recent date and time that the profile was read or modified by the default provider.</returns>
    </member>
    <member name="P:System.Web.Profile.ProfileBase.LastUpdatedDate">
      <summary>Gets the most recent date and time that the profile was modified.</summary>
      <returns>The most recent date and time that the profile was modified by the default provider.</returns>
    </member>
    <member name="P:System.Web.Profile.ProfileBase.Properties">
      <summary>Gets a collection of <see cref="T:System.Configuration.SettingsProperty" /> objects for each property in the profile.</summary>
      <returns>A <see cref="T:System.Configuration.SettingsPropertyCollection" /> of <see cref="T:System.Configuration.SettingsProperty" /> objects for each property in the profile for the application.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A property type specified in the profile section of the Web.config file could not be created.-or-The allowAnonymous attribute for a property in the profile section of the Web.config file is set to true and the enabled attribute of the anonymousIdentification element is set to false.-or-The serializeAs attribute for a property in the profile section of the Web.config file is set to <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> and the <see cref="P:System.Type.IsSerializable" /> property of the specified type returns false.-or-The name of a provider specified using the provider attribute of a profile property could not be found in the <see cref="P:System.Web.Profile.ProfileManager.Providers" /> collection.-or-The type specified for a profile property could not be found.-or-A profile property was specified with a name that matches a property name on the base class specified in the inherits attribute of the profile section.</exception>
    </member>
    <member name="M:System.Web.Profile.ProfileBase.Save">
      <summary>Updates the profile data source with changed profile property values.</summary>
    </member>
    <member name="M:System.Web.Profile.ProfileBase.SetPropertyValue(System.String,System.Object)">
      <summary>Sets the value of a profile property.</summary>
      <param name="propertyName">The name of the property to set.</param>
      <param name="propertyValue">The value to assign to the property.</param>
      <exception cref="T:System.Configuration.Provider.ProviderException">An attempt was made to set a property value on an anonymous profile where the property's allowAnonymous attribute is false.</exception>
      <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">There are no properties defined for the current profile.-or-The specified profile property name does not exist in the current profile.-or-The provider for the specified profile property did not recognize the specified property.</exception>
      <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">An attempt was made to set a value value on a property that was marked as read-only.</exception>
      <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">An attempt was made to assign a value to a property using an incompatible type.</exception>
    </member>
    <member name="P:System.Web.Profile.ProfileBase.UserName">
      <summary>Gets the user name for the profile.</summary>
      <returns>The user name for the profile or the anonymous-user identifier assigned to the profile.</returns>
    </member>
    <member name="T:System.Web.Profile.ProfileEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.Profile.ProfileModule.Personalize" /> event of the <see cref="T:System.Web.Profile.ProfileModule" /> class.</summary>
    </member>
    <member name="M:System.Web.Profile.ProfileEventArgs.#ctor(System.Web.HttpContext)">
      <summary>Creates an instance of the <see cref="T:System.Web.Profile.ProfileEventArgs" /> class.</summary>
      <param name="context">The <see cref="T:System.Web.HttpContext" /> of the current request.</param>
    </member>
    <member name="P:System.Web.Profile.ProfileEventArgs.Context">
      <summary>Gets the <see cref="T:System.Web.HttpContext" /> for the current request.</summary>
      <returns>The <see cref="T:System.Web.HttpContext" /> for the current request</returns>
    </member>
    <member name="P:System.Web.Profile.ProfileEventArgs.Profile">
      <summary>Gets or sets the user profile for the current request.</summary>
      <returns>The user profile to use for the current request. The default is null.</returns>
    </member>
    <member name="T:System.Web.Profile.ProfileEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Web.Profile.ProfileModule.Personalize" /> event of a <see cref="T:System.Web.Profile.ProfileModule" />. </summary>
      <param name="sender">The <see cref="T:System.Web.Profile.ProfileModule" /> that raised the <see cref="E:System.Web.Profile.ProfileModule.Personalize" /> event.</param>
      <param name="e">A <see cref="T:System.Web.Profile.ProfileEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Web.Profile.ProfileGroupBase">
      <summary>Provides untyped access to grouped ASP.NET profile property values.</summary>
    </member>
    <member name="M:System.Web.Profile.ProfileGroupBase.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Web.Profile.ProfileGroupBase" /> class.</summary>
    </member>
    <member name="M:System.Web.Profile.ProfileGroupBase.GetPropertyValue(System.String)">
      <summary>Gets the value of a grouped profile property.</summary>
      <returns>The value of the grouped profile property typed as object.</returns>
      <param name="propertyName">The name of the grouped profile property.</param>
    </member>
    <member name="M:System.Web.Profile.ProfileGroupBase.Init(System.Web.Profile.ProfileBase,System.String)">
      <summary>Used by ASP.NET to initialize the grouped profile property values and information.</summary>
      <param name="parent">The class that inherits <see cref="T:System.Web.Profile.ProfileBase" /> that is assigned to the <see cref="P:System.Web.HttpContext.Profile" /> property.</param>
      <param name="myName">The name of the profile property group.</param>
    </member>
    <member name="P:System.Web.Profile.ProfileGroupBase.Item(System.String)">
      <summary>Gets or sets a grouped profile property value indexed by the property name.</summary>
      <returns>The value of the specified grouped profile property.</returns>
      <param name="propertyName">The name of the grouped profile property.</param>
    </member>
    <member name="M:System.Web.Profile.ProfileGroupBase.SetPropertyValue(System.String,System.Object)">
      <summary>Sets the value of a grouped profile property.</summary>
      <param name="propertyName">The name of the grouped property to set.</param>
      <param name="propertyValue">The value to assign to the grouped property.</param>
    </member>
    <member name="T:System.Web.Profile.ProfileInfo">
      <summary>Provides information about a user profile.</summary>
    </member>
    <member name="M:System.Web.Profile.ProfileInfo.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Web.Profile.ProfileInfo" /> object for a class that inherits the <see cref="T:System.Web.Profile.ProfileInfo" /> class.</summary>
    </member>
    <member name="M:System.Web.Profile.ProfileInfo.#ctor(System.String,System.Boolean,System.DateTime,System.DateTime,System.Int32)">
      <summary>Creates an instance of the <see cref="T:System.Web.Profile.ProfileInfo" /> class with the specified property values.</summary>
      <param name="username">The user name for the profile.</param>
      <param name="isAnonymous">true to indicate the profile is for an anonymous user; false to indicate the profile is for an authenticated user.</param>
      <param name="lastActivityDate">The last date and time when the profile was read or updated.</param>
      <param name="lastUpdatedDate">The last date and time when the profile was updated.</param>
      <param name="size">The size of the profile information and values stored in the data source.</param>
    </member>
    <member name="P:System.Web.Profile.ProfileInfo.IsAnonymous">
      <summary>Gets whether the user name for the profile is anonymous.</summary>
      <returns>true if the user name for the profile is anonymous; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Profile.ProfileInfo.LastActivityDate">
      <summary>Gets the last date and time when the profile was read or updated.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the last date and time when the profile was read or updated.</returns>
    </member>
    <member name="P:System.Web.Profile.ProfileInfo.LastUpdatedDate">
      <summary>Gets the last date and time when the profile was updated.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the last date and time when the profile was updated.</returns>
    </member>
    <member name="P:System.Web.Profile.ProfileInfo.Size">
      <summary>Gets the size of the profile property names and values stored in the data source.</summary>
      <returns>The size of the profile property names and values stored in the data source.</returns>
    </member>
    <member name="P:System.Web.Profile.ProfileInfo.UserName">
      <summary>Gets the user name for the profile.</summary>
      <returns>The user name for the profile.</returns>
    </member>
    <member name="T:System.Web.Profile.ProfileInfoCollection">
      <summary>A collection of <see cref="T:System.Web.Profile.ProfileInfo" /> objects.</summary>
    </member>
    <member name="M:System.Web.Profile.ProfileInfoCollection.#ctor">
      <summary>Creates a new, empty <see cref="T:System.Web.Profile.ProfileInfoCollection" />.</summary>
    </member>
    <member name="M:System.Web.Profile.ProfileInfoCollection.Add(System.Web.Profile.ProfileInfo)">
      <summary>Adds the specified <see cref="T:System.Web.Profile.ProfileInfo" /> object to the collection.</summary>
      <param name="profileInfo">A <see cref="T:System.Web.Profile.ProfileInfo" /> object to add to the collection.</param>
      <exception cref="T:System.NotSupportedException">The collection is read-only.</exception>
      <exception cref="T:System.ArgumentException">A <see cref="T:System.Web.Profile.ProfileInfo" /> object with the same <see cref="P:System.Web.Profile.ProfileInfo.UserName" /> value as <paramref name="profileInfo" /> already exists in the collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="profileInfo" /> is null.-or-The <see cref="P:System.Web.Profile.ProfileInfo.UserName" /> property of <paramref name="profileInfo" /> is null.</exception>
    </member>
    <member name="M:System.Web.Profile.ProfileInfoCollection.Clear">
      <summary>Removes all <see cref="T:System.Web.Profile.ProfileInfo" /> objects from the collection.</summary>
      <exception cref="T:System.NotSupportedException">The collection is read-only.</exception>
    </member>
    <member name="M:System.Web.Profile.ProfileInfoCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the <see cref="T:System.Web.Profile.ProfileInfoCollection" /> to a one-dimensional array.</summary>
      <param name="array">A one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Web.Profile.ProfileInfoCollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in array at which copying begins.</param>
    </member>
    <member name="M:System.Web.Profile.ProfileInfoCollection.CopyTo(System.Web.Profile.ProfileInfo[],System.Int32)">
      <summary>Copies the <see cref="T:System.Web.Profile.ProfileInfoCollection" /> to a one-dimensional array of type <see cref="T:System.Web.Profile.ProfileInfo" />.</summary>
      <param name="array">A one-dimensional array of type <see cref="T:System.Web.Profile.ProfileInfo" /> that is the destination of the elements copied from the <see cref="T:System.Web.Profile.ProfileInfoCollection" />. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in the <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="P:System.Web.Profile.ProfileInfoCollection.Count">
      <summary>Gets the number of <see cref="T:System.Web.Profile.ProfileInfo" /> objects in the collection.</summary>
      <returns>The number of <see cref="T:System.Web.Profile.ProfileInfo" /> objects in the collection.</returns>
    </member>
    <member name="M:System.Web.Profile.ProfileInfoCollection.GetEnumerator">
      <summary>Gets an enumerator that can iterate through the <see cref="T:System.Web.Profile.ProfileInfoCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the entire <see cref="T:System.Web.Profile.ProfileInfoCollection" />.</returns>
    </member>
    <member name="P:System.Web.Profile.ProfileInfoCollection.IsSynchronized">
      <summary>Gets a value indicating whether the profile info collection is thread safe.</summary>
      <returns>Always false, because thread-safe profile info collections are not supported.</returns>
    </member>
    <member name="P:System.Web.Profile.ProfileInfoCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.Web.Profile.ProfileInfo" /> object in the collection, referenced by the specified <see cref="P:System.Web.Profile.ProfileInfo.UserName" />.</summary>
      <returns>A <see cref="T:System.Web.Profile.ProfileInfo" /> object for the specified user name. If name is not found in the collection, null is returned.</returns>
      <param name="name">The <see cref="P:System.Web.Profile.ProfileInfo.UserName" /> of the <see cref="T:System.Web.Profile.ProfileInfo" /> object to retrieve from the collection.</param>
    </member>
    <member name="M:System.Web.Profile.ProfileInfoCollection.Remove(System.String)">
      <summary>Removes the <see cref="T:System.Web.Profile.ProfileInfo" /> object with the specified user name from the collection.</summary>
      <param name="name">The <see cref="P:System.Web.Profile.ProfileInfo.UserName" /> of the <see cref="T:System.Web.Profile.ProfileInfo" /> object to remove from the collection.</param>
      <exception cref="T:System.NotSupportedException">The collection is read-only.</exception>
    </member>
    <member name="M:System.Web.Profile.ProfileInfoCollection.SetReadOnly">
      <summary>Makes the contents of the <see cref="T:System.Web.Profile.ProfileInfoCollection" /> read-only.</summary>
    </member>
    <member name="P:System.Web.Profile.ProfileInfoCollection.SyncRoot">
      <summary>Gets the synchronization root.</summary>
      <returns>Always this (Me in Visual Basic), because synchronization of <see cref="T:System.Web.Profile.ProfileInfoCollection" /> objects is not supported.</returns>
    </member>
    <member name="T:System.Web.Profile.ProfileManager">
      <summary>Manages user profile data and settings.</summary>
    </member>
    <member name="M:System.Web.Profile.ProfileManager.AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)">
      <summary>Adds a profile property programmatically.</summary>
      <param name="property">The property settings to be added.</param>
    </member>
    <member name="P:System.Web.Profile.ProfileManager.ApplicationName">
      <summary>Gets or sets the name of the application for which to store and retrieve profile information.</summary>
      <returns>The name of the application for which to store and retrieve profile information.</returns>
    </member>
    <member name="P:System.Web.Profile.ProfileManager.AutomaticSaveEnabled">
      <summary>Gets a value indicating whether the user profile will be automatically saved at the end of the execution of an ASP.NET page.</summary>
      <returns>true if the user profile will be automatically saved at the end of the execution of an ASP.NET page; otherwise, false. The default is true.</returns>
      <exception cref="T:System.Web.HttpException">An attempt was made to get the <see cref="P:System.Web.Profile.ProfileManager.AutomaticSaveEnabled" /> property value without at least <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> permission.</exception>
    </member>
    <member name="M:System.Web.Profile.ProfileManager.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)">
      <summary>Deletes user profile data for which the last activity date and time occurred before the specified date and time.</summary>
      <returns>The number of profiles deleted from the data source.</returns>
      <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are deleted.</param>
      <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" />  of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
    </member>
    <member name="M:System.Web.Profile.ProfileManager.DeleteProfile(System.String)">
      <summary>Deletes the profile for the specified user name from the data source.</summary>
      <returns>true if the user profile was found and deleted; otherwise, false.</returns>
      <param name="username">The user name for the profile to be deleted.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" /> is an empty string ("") or contains a comma.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="username" /> is null.</exception>
    </member>
    <member name="M:System.Web.Profile.ProfileManager.DeleteProfiles(System.String[])">
      <summary>Deletes profile properties and information for the supplied list of user names.</summary>
      <returns>The number of profiles deleted from the data source.</returns>
      <param name="usernames">A string array of user names for profiles to be deleted. </param>
      <exception cref="T:System.ArgumentException">The length of <paramref name="usernames" /> is zero.- or -One of the items in <paramref name="usernames" /> is an empty string ("") or contains a comma.- or -Two or more items in <paramref name="usernames" /> have the same value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="usernames" /> is null.- or -One of the items in <paramref name="usernames" /> is null.</exception>
    </member>
    <member name="M:System.Web.Profile.ProfileManager.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)">
      <summary>Deletes profile properties and information from the data source for the supplied list of profiles.</summary>
      <returns>The number of profiles deleted from the data source.</returns>
      <param name="profiles">A <see cref="T:System.Web.Profile.ProfileInfoCollection" />  that contains profile information for profiles to be deleted.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="profiles" /> has a <see cref="P:System.Web.Profile.ProfileInfoCollection.Count" /> value of zero.- or -One of the <see cref="T:System.Web.Profile.ProfileInfo" /> objects in <paramref name="profiles" /> has a <see cref="P:System.Web.Profile.ProfileInfo.UserName" /> that is an empty string ("") or contains a comma.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="profiles" /> is null.- or -One of the <see cref="T:System.Web.Profile.ProfileInfo" /> objects in <paramref name="profiles" /> has a <see cref="P:System.Web.Profile.ProfileInfo.UserName" /> that is null.</exception>
    </member>
    <member name="P:System.Web.Profile.ProfileManager.Enabled">
      <summary>Gets a value indicating whether the user profile is enabled for the application.</summary>
      <returns>true if the user profile is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)">
      <summary>Retrieves profile information for all profiles in which the last activity date occurred on or before the specified date and time and the user name for the profile matches the specified name.</summary>
      <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for inactive profiles in which the user name matches the supplied <paramref name="usernameToMatch" /> parameter.</returns>
      <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" />  enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
      <param name="usernameToMatch">The user name for which to search.</param>
      <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" />  of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="usernameToMatch" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="usernameToMatch" /> is an empty string ("").</exception>
    </member>
    <member name="M:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)">
      <summary>Retrieves profile information in pages of data for profiles in which the last activity date occurred on or before the specified date and time and the user name for the profile matches the specified name.</summary>
      <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for inactive profiles where the user name matches the supplied <paramref name="usernameToMatch" /> parameter.</returns>
      <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" />  values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
      <param name="usernameToMatch">The user name for which to search.</param>
      <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" />  of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
      <param name="pageIndex">The index of the page of results to return. <paramref name="pageIndex" /> is zero-based.</param>
      <param name="pageSize">The size of the page of results to return.</param>
      <param name="totalRecords">When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="usernameToMatch" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="usernameToMatch" /> is an empty string ("").- or -<paramref name="pageIndex" /> is less than zero.- or -<paramref name="pageSize" /> is less than 1.- or -<paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> is larger than <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)">
      <summary>Retrieves all profile information for profiles in which the user name matches the specified name.</summary>
      <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for profiles where the user name matches the supplied <paramref name="usernameToMatch" /> parameter.</returns>
      <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" />  enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
      <param name="usernameToMatch">The user name for which to search.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="usernameToMatch" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="usernameToMatch" /> is an empty string ("").</exception>
    </member>
    <member name="M:System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)">
      <summary>Retrieves profile information in pages of data for profiles in which the user name matches the specified name.</summary>
      <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for profiles where the user name matches the supplied <paramref name="usernameToMatch" /> parameter.</returns>
      <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" />  enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
      <param name="usernameToMatch">The user name for which to search.</param>
      <param name="pageIndex">The index of the page of results to return. <paramref name="pageIndex" /> is zero-based.</param>
      <param name="pageSize">The size of the page of results to return.</param>
      <param name="totalRecords">When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="usernameToMatch" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="usernameToMatch" /> is an empty string ("").- or -<paramref name="pageIndex" /> is less than zero.- or -<paramref name="pageSize" /> is less than 1.- or -<paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> is larger than <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)">
      <summary>Retrieves all user profile data for profiles in which the last activity date occurred on or before the specified date and time.</summary>
      <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information about the inactive profiles.</returns>
      <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
      <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" />  of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
    </member>
    <member name="M:System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)">
      <summary>Retrieves a page of <see cref="T:System.Web.Profile.ProfileInfo" /> objects for user profiles in which the last activity date occurred on or before the specified date and time.</summary>
      <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information about the inactive profiles.</returns>
      <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
      <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" />  of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
      <param name="pageIndex">The index of the page of results to return. <paramref name="pageIndex" /> is zero-based.</param>
      <param name="pageSize">The size of the page of results to return.</param>
      <param name="totalRecords">When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)">
      <summary>Retrieves user profile data for profiles in the data source.</summary>
      <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for all of the profiles in the data source.</returns>
      <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
    </member>
    <member name="M:System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)">
      <summary>Retrieves pages of user profile data.</summary>
      <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for all of the profiles in the data source.</returns>
      <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
      <param name="pageIndex">The index of the page of results to return. <paramref name="pageIndex" /> is zero-based.</param>
      <param name="pageSize">The size of the page of results to return.</param>
      <param name="totalRecords">When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)">
      <summary>Gets the number of profiles in which the last activity date occurred on or before the specified date.</summary>
      <returns>The number of profiles in the data source for which the last activity date occurred before the specified date and time.</returns>
      <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
      <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> object that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" />  of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
    </member>
    <member name="M:System.Web.Profile.ProfileManager.GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)">
      <summary>Gets the number of profiles in the data source.</summary>
      <returns>The number of profiles in the data source.</returns>
      <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
    </member>
    <member name="P:System.Web.Profile.ProfileManager.Provider">
      <summary>Gets a reference to the default profile provider for the application.</summary>
      <returns>The default profile provider for the application.</returns>
      <exception cref="T:System.Web.HttpException">An attempt was made to get the <see cref="P:System.Web.Profile.ProfileManager.Provider" /> property value without at least <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> permission.</exception>
    </member>
    <member name="P:System.Web.Profile.ProfileManager.Providers">
      <summary>Gets a collection of the profile providers for the ASP.NET application.</summary>
      <returns>A <see cref="T:System.Web.Profile.ProfileProviderCollection" /> of the profile providers configured for the ASP.NET application.</returns>
      <exception cref="T:System.Web.HttpException">An attempt was made to get the <see cref="P:System.Web.Profile.ProfileManager.Providers" /> property value without at least <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> permission.</exception>
    </member>
    <member name="T:System.Web.Profile.ProfileMigrateEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.Profile.ProfileModule.MigrateAnonymous" /> event of the <see cref="T:System.Web.Profile.ProfileModule" /> class.</summary>
    </member>
    <member name="M:System.Web.Profile.ProfileMigrateEventArgs.#ctor(System.Web.HttpContext,System.String)">
      <summary>Creates an instance of the <see cref="T:System.Web.Profile.ProfileMigrateEventArgs" /> class.</summary>
      <param name="context">The <see cref="T:System.Web.HttpContext" /> of the current request.</param>
      <param name="anonymousId">The anonymous identifier being migrated from.</param>
    </member>
    <member name="P:System.Web.Profile.ProfileMigrateEventArgs.AnonymousID">
      <summary>Gets the anonymous identifier for the anonymous profile from which to migrate profile property values.</summary>
      <returns>The anonymous identifier for the anonymous profile from which to migrate profile property values.</returns>
    </member>
    <member name="P:System.Web.Profile.ProfileMigrateEventArgs.Context">
      <summary>Gets the <see cref="T:System.Web.HttpContext" /> for the current request.</summary>
      <returns>The <see cref="T:System.Web.HttpContext" /> for the current request</returns>
    </member>
    <member name="T:System.Web.Profile.ProfileMigrateEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Web.Profile.ProfileModule.MigrateAnonymous" /> event of the <see cref="T:System.Web.Profile.ProfileModule" /> class.</summary>
      <param name="sender">The <see cref="T:System.Web.Profile.ProfileModule" /> that raised the <see cref="E:System.Web.Profile.ProfileModule.MigrateAnonymous" /> event.</param>
      <param name="e">A <see cref="T:System.Web.Profile.ProfileMigrateEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Web.Profile.ProfileModule">
      <summary>Manages the creation of the user profile and profile events. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Profile.ProfileModule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Profile.ProfileModule" /> class.</summary>
    </member>
    <member name="M:System.Web.Profile.ProfileModule.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Web.Profile.ProfileModule" />. </summary>
    </member>
    <member name="M:System.Web.Profile.ProfileModule.Init(System.Web.HttpApplication)">
      <summary>Calls initialization code when a <see cref="T:System.Web.Profile.ProfileModule" /> object is created.</summary>
      <param name="app">The current application. </param>
    </member>
    <member name="E:System.Web.Profile.ProfileModule.MigrateAnonymous">
      <summary>Occurs when the anonymous user for a profile logs in.</summary>
    </member>
    <member name="E:System.Web.Profile.ProfileModule.Personalize">
      <summary>Occurs before the user profile is created.</summary>
    </member>
    <member name="E:System.Web.Profile.ProfileModule.ProfileAutoSaving">
      <summary>Occurs at the end of page execution if automatic profile saving is enabled.</summary>
    </member>
    <member name="T:System.Web.Profile.ProfileProvider">
      <summary>Defines the contract that ASP.NET implements to provide profile services using custom profile providers.</summary>
    </member>
    <member name="M:System.Web.Profile.ProfileProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Profile.ProfileProvider" /> class.</summary>
    </member>
    <member name="M:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)">
      <summary>When overridden in a derived class, deletes all user-profile data for profiles in which the last activity date occurred before the specified date.</summary>
      <returns>The number of profiles deleted from the data source.</returns>
      <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> values, specifying whether anonymous, authenticated, or both types of profiles are deleted.</param>
      <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" />  value of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
    </member>
    <member name="M:System.Web.Profile.ProfileProvider.DeleteProfiles(System.String[])">
      <summary>When overridden in a derived class, deletes profile properties and information for profiles that match the supplied list of user names.</summary>
      <returns>The number of profiles deleted from the data source.</returns>
      <param name="usernames">A string array of user names for profiles to be deleted.</param>
    </member>
    <member name="M:System.Web.Profile.ProfileProvider.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)">
      <summary>When overridden in a derived class, deletes profile properties and information for the supplied list of profiles.</summary>
      <returns>The number of profiles deleted from the data source.</returns>
      <param name="profiles">A <see cref="T:System.Web.Profile.ProfileInfoCollection" />  of information about profiles that are to be deleted.</param>
    </member>
    <member name="M:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)">
      <summary>When overridden in a derived class, retrieves profile information for profiles in which the last activity date occurred on or before the specified date and the user name matches the specified user name.</summary>
      <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for inactive profiles where the user name matches the supplied <paramref name="usernameToMatch" /> parameter.</returns>
      <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
      <param name="usernameToMatch">The user name to search for.</param>
      <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> value of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
      <param name="pageIndex">The index of the page of results to return.</param>
      <param name="pageSize">The size of the page of results to return.</param>
      <param name="totalRecords">When this method returns, contains the total number of profiles.</param>
    </member>
    <member name="M:System.Web.Profile.ProfileProvider.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)">
      <summary>When overridden in a derived class, retrieves profile information for profiles in which the user name matches the specified user names.</summary>
      <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user-profile information for profiles where the user name matches the supplied <paramref name="usernameToMatch" /> parameter.</returns>
      <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
      <param name="usernameToMatch">The user name to search for.</param>
      <param name="pageIndex">The index of the page of results to return.</param>
      <param name="pageSize">The size of the page of results to return.</param>
      <param name="totalRecords">When this method returns, contains the total number of profiles.</param>
    </member>
    <member name="M:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)">
      <summary>When overridden in a derived class, retrieves user-profile data from the data source for profiles in which the last activity date occurred on or before the specified date.</summary>
      <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user-profile information about the inactive profiles.</returns>
      <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
      <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" />  of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
      <param name="pageIndex">The index of the page of results to return.</param>
      <param name="pageSize">The size of the page of results to return.</param>
      <param name="totalRecords">When this method returns, contains the total number of profiles.</param>
    </member>
    <member name="M:System.Web.Profile.ProfileProvider.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)">
      <summary>When overridden in a derived class, retrieves user profile data for all profiles in the data source.</summary>
      <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user-profile information for all profiles in the data source.</returns>
      <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
      <param name="pageIndex">The index of the page of results to return.</param>
      <param name="pageSize">The size of the page of results to return.</param>
      <param name="totalRecords">When this method returns, contains the total number of profiles.</param>
    </member>
    <member name="M:System.Web.Profile.ProfileProvider.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)">
      <summary>When overridden in a derived class, returns the number of profiles in which the last activity date occurred on or before the specified date.</summary>
      <returns>The number of profiles in which the last activity date occurred on or before the specified date.</returns>
      <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
      <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" />  of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
    </member>
    <member name="T:System.Web.Profile.ProfileProviderAttribute">
      <summary>Identifies the profile provider for a user-profile property.</summary>
    </member>
    <member name="M:System.Web.Profile.ProfileProviderAttribute.#ctor(System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Web.Profile.ProfileProviderAttribute" /> class with the specified profile provider name.</summary>
      <param name="providerName">The name of the profile provider for the property.</param>
    </member>
    <member name="P:System.Web.Profile.ProfileProviderAttribute.ProviderName">
      <summary>Gets the name of the profile provider for the user-profile property.</summary>
      <returns>The name of the profile provider for the user-profile property.</returns>
    </member>
    <member name="T:System.Web.Profile.ProfileProviderCollection">
      <summary>A collection of objects that inherit the <see cref="T:System.Web.Profile.ProfileProvider" /> abstract class.</summary>
    </member>
    <member name="M:System.Web.Profile.ProfileProviderCollection.#ctor">
      <summary>Creates a new, empty profile provider collection.</summary>
    </member>
    <member name="M:System.Web.Profile.ProfileProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary>Adds a profile provider to the collection.</summary>
      <param name="provider">The profile provider to add to the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="provider" /> is not of a type that inherits the <see cref="T:System.Web.Profile.ProfileProvider" /> abstract class.</exception>
    </member>
    <member name="P:System.Web.Profile.ProfileProviderCollection.Item(System.String)">
      <summary>Returns the profile provider referenced by the specified provider name.</summary>
      <returns>An object that inherits the <see cref="T:System.Web.Profile.ProfileProvider" /> abstract class.</returns>
      <param name="name">The name of the profile provider.</param>
    </member>
    <member name="T:System.Web.Profile.SettingsAllowAnonymousAttribute">
      <summary>Identifies whether a profile property can be set or accessed for an anonymous user.</summary>
    </member>
    <member name="M:System.Web.Profile.SettingsAllowAnonymousAttribute.#ctor(System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:System.Web.Profile.SettingsAllowAnonymousAttribute" /> class and specifies whether to allow anonymous access to the associated profile property.</summary>
      <param name="allow">true if anonymous users can access the associated profile property; otherwise false.</param>
    </member>
    <member name="P:System.Web.Profile.SettingsAllowAnonymousAttribute.Allow">
      <summary>Gets a value indicating whether the associated property of a custom profile implementation can be accessed if the user is an anonymous user.</summary>
      <returns>true if anonymous users can access the associated profile property; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.Profile.SettingsAllowAnonymousAttribute.IsDefaultAttribute">
      <summary>Gets a value indicating whether the <see cref="P:System.Web.Profile.SettingsAllowAnonymousAttribute.Allow" /> property is set to the default value.</summary>
      <returns>true if the <see cref="P:System.Web.Profile.SettingsAllowAnonymousAttribute.Allow" /> property is set to the default value; otherwise false.</returns>
    </member>
    <member name="T:System.Web.Profile.SqlProfileProvider">
      <summary>Manages storage of profile information for an ASP.NET application in a SQL Server database.</summary>
    </member>
    <member name="M:System.Web.Profile.SqlProfileProvider.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Web.Profile.SqlProfileProvider" /> class.</summary>
    </member>
    <member name="P:System.Web.Profile.SqlProfileProvider.ApplicationName">
      <summary>Gets or sets the name of the application for which to store and retrieve profile information.</summary>
      <returns>The name of the application for which to store and retrieve profile information. The default is the <see cref="P:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath" /> value.</returns>
      <exception cref="T:System.Web.HttpException">An attempt was made to set the <see cref="P:System.Web.Profile.SqlProfileProvider.ApplicationName" /> property by a caller that does not have <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /> ASP.NET hosting permission.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">An attempt was made to set the <see cref="P:System.Web.Profile.SqlProfileProvider.ApplicationName" /> property to a string that is longer than 256 characters.</exception>
    </member>
    <member name="M:System.Web.Profile.SqlProfileProvider.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)">
      <summary>Deletes user profile data for profiles in which the last activity date occurred before the specified date and time.</summary>
      <returns>The number of profiles deleted from the data source.</returns>
      <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> values, specifying whether anonymous, authenticated, or both types of profiles are deleted.</param>
      <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" />  of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
    </member>
    <member name="M:System.Web.Profile.SqlProfileProvider.DeleteProfiles(System.String[])">
      <summary>Deletes profile properties and information from the data source for the supplied list of user names.</summary>
      <returns>The number of profiles deleted from the data source.</returns>
      <param name="usernames">A string array of user names for profiles to be deleted. </param>
      <exception cref="T:System.ArgumentException">The length of <paramref name="usernames" /> is zero.- or -One of the items in <paramref name="usernames" /> is an empty string (""), exceeds a length of 256 characters, or contains a comma.- or -Two or more items in <paramref name="usernames" /> have the same value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="usernames" /> is null.- or -One of the items in <paramref name="usernames" /> is null.</exception>
    </member>
    <member name="M:System.Web.Profile.SqlProfileProvider.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)">
      <summary>Deletes profile properties and information for the supplied list of profiles from the data source.</summary>
      <returns>The number of profiles deleted from the data source.</returns>
      <param name="profiles">A <see cref="T:System.Web.Profile.ProfileInfoCollection" />  that contains profile information for profiles to be deleted.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="profiles" /> has a <see cref="P:System.Web.Profile.ProfileInfoCollection.Count" /> value of zero.- or -One of the <see cref="T:System.Web.Profile.ProfileInfo" /> objects in <paramref name="profiles" /> has a <see cref="P:System.Web.Profile.ProfileInfo.UserName" /> that is an empty string (""), exceeds a length of 256 characters, or contains a comma.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="profiles" /> is null.- or -One of the <see cref="T:System.Web.Profile.ProfileInfo" /> objects in <paramref name="profiles" /> has a <see cref="P:System.Web.Profile.ProfileInfo.UserName" /> that is null.</exception>
    </member>
    <member name="M:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)">
      <summary>Retrieves profile information for profiles in which the last activity date occurred on or before the specified date and time and the user name for the profile matches the specified name.</summary>
      <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for inactive profiles where the user name matches the supplied <paramref name="usernameToMatch" /> parameter.</returns>
      <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" />  values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
      <param name="usernameToMatch">The user name for which to search.</param>
      <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" />  of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
      <param name="pageIndex">The index of the page of results to return. <paramref name="pageIndex" /> is zero-based.</param>
      <param name="pageSize">The size of the page of results to return.</param>
      <param name="totalRecords">When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="usernameToMatch" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="usernameToMatch" /> is an empty string ("") or exceeds 256 characters.- or -<paramref name="pageIndex" /> is less than zero.- or -<paramref name="pageSize" /> is less than one.- or -<paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> is larger than <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)">
      <summary>Retrieves profile information for profiles in which the user name matches the specified name.</summary>
      <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for profiles where the user name matches the supplied <paramref name="usernameToMatch" /> parameter.</returns>
      <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" />  values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
      <param name="usernameToMatch">The user name for which to search.</param>
      <param name="pageIndex">The index of the page of results to return. <paramref name="pageIndex" /> is zero-based.</param>
      <param name="pageSize">The size of the page of results to return.</param>
      <param name="totalRecords">When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="usernameToMatch" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="usernameToMatch" /> is an empty string ("") or exceeds 256 characters.- or -<paramref name="pageIndex" /> is less than zero.- or -<paramref name="pageSize" /> is less than one.- or -<paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> is larger than <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Web.Profile.SqlProfileProvider.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)">
      <summary>Retrieves user profile data for profiles in which the last activity date occurred on or before the specified date and time.</summary>
      <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information about the inactive profiles.</returns>
      <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
      <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" />  of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
      <param name="pageIndex">The index of the page of results to return. <paramref name="pageIndex" /> is zero-based.</param>
      <param name="pageSize">The size of the page of results to return.</param>
      <param name="totalRecords">When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="pageIndex" /> is less than zero.- or -<paramref name="pageSize" /> is less than one.- or -<paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> is larger than <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Web.Profile.SqlProfileProvider.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)">
      <summary>Retrieves user profile data for profiles in the data source.</summary>
      <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for all of the profiles in the data source.</returns>
      <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
      <param name="pageIndex">The index of the page of results to return. <paramref name="pageIndex" /> is zero-based.</param>
      <param name="pageSize">The size of the page of results to return.</param>
      <param name="totalRecords">When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="pageIndex" /> is less than zero.- or -<paramref name="pageSize" /> is less than one.- or -<paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> is larger than <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Web.Profile.SqlProfileProvider.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)">
      <summary>Gets the number of profiles in the data source where the last activity date occurred on or before the specified <paramref name="userInactiveSinceDate" />.</summary>
      <returns>The number of profiles in the data source for which the last activity date occurred before the specified date and time.</returns>
      <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
      <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" />  of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
    </member>
    <member name="M:System.Web.Profile.SqlProfileProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary>Retrieves profile property information and values from a SQL Server profile database.</summary>
      <returns>A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> containing profile property information and values.</returns>
      <param name="sc">The <see cref="T:System.Configuration.SettingsContext" /> that contains user profile information.</param>
      <param name="properties">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing profile information for the properties to be retrieved.</param>
    </member>
    <member name="M:System.Web.Profile.SqlProfileProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Initializes the SQL Server profile provider with the property values specified in the ASP.NET application's configuration file. This method is not intended to be used directly from your code.</summary>
      <param name="name">The name of the <see cref="T:System.Web.Profile.SqlProfileProvider" /> instance to initialize. </param>
      <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains the names and values of configuration options for the profile provider. </param>
      <exception cref="T:System.Configuration.Provider.ProviderException">The connectionStringName attribute is an empty string ("") or is not specified in the application configuration file for this <see cref="T:System.Web.Profile.SqlProfileProvider" /> instance.- or - The value of the connection string specified in the connectionStringName attribute value is empty or the specified connectionStringName value does not exist in the application configuration file for this <see cref="T:System.Web.Profile.SqlProfileProvider" /> instance.- or - The applicationName attribute value exceeds 256 characters.- or - The application configuration file for this <see cref="T:System.Web.Profile.SqlProfileProvider" /> instance contains an unrecognized attribute. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="config" /> is null.</exception>
      <exception cref="T:System.Web.HttpException">The current trust level is less than <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" />.</exception>
    </member>
    <member name="M:System.Web.Profile.SqlProfileProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
      <summary>Updates the SQL Server profile database with the specified property values.</summary>
      <param name="sc">The <see cref="T:System.Configuration.SettingsContext" /> that contains user profile information.</param>
      <param name="properties">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> containing profile information and values for the properties to be updated.</param>
    </member>
    <member name="T:System.Web.Routing.HttpMethodConstraint">
      <summary>Enables you to define which HTTP verbs are allowed when ASP.NET routing determines whether a URL matches a route.</summary>
    </member>
    <member name="M:System.Web.Routing.HttpMethodConstraint.#ctor(System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Routing.HttpMethodConstraint" /> class by using the HTTP verbs that are allowed for the route. </summary>
      <param name="allowedMethods">The HTTP verbs that are valid for the route.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="allowedMethods" /> parameter is null.</exception>
    </member>
    <member name="P:System.Web.Routing.HttpMethodConstraint.AllowedMethods">
      <summary>Gets the collection of allowed HTTP verbs for the route.</summary>
      <returns>A collection of allowed HTTP verbs for the route.</returns>
    </member>
    <member name="M:System.Web.Routing.HttpMethodConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Determines whether the request was made with an HTTP verb that is one of the allowed verbs for the route.</summary>
      <returns>When ASP.NET routing is processing a request, true if the request was made by using an allowed HTTP verb; otherwise, false. When ASP.NET routing is constructing a URL, true if the supplied values contain an HTTP verb that matches one of the allowed HTTP verbs; otherwise, false. The default is true.</returns>
      <param name="httpContext">An object that encapsulates information about the HTTP request.</param>
      <param name="route">The object that is being checked to determine whether it matches the URL.</param>
      <param name="parameterName">The name of the parameter that is being checked.</param>
      <param name="values">An object that contains the parameters for a route.</param>
      <param name="routeDirection">An object that indicates whether the constraint check is being performed when an incoming request is processed or when a URL is generated.</param>
      <exception cref="T:System.ArgumentNullException">One or more of the following parameters is null: <paramref name="httpContext" />, <paramref name="route" />, <paramref name="parameterName" />, or <paramref name="values" />.</exception>
    </member>
    <member name="M:System.Web.Routing.HttpMethodConstraint.System#Web#Routing#IRouteConstraint#Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>For a description of this member, see <see cref="M:System.Web.Routing.IRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)" />. </summary>
      <returns>true if the request was made by using an allowed HTTP verb; otherwise, false. The default is true.</returns>
      <param name="httpContext">An object that encapsulates information about the HTTP request.</param>
      <param name="route">The object that is being checked to determine whether it matches the URL.</param>
      <param name="parameterName">The name of the parameter that is being checked.</param>
      <param name="values">An object that contains the parameters for a route.</param>
      <param name="routeDirection">An object that indicates whether the constraint check is being performed when an incoming request is handled or when a URL is generated.</param>
      <exception cref="T:System.ArgumentNullException">One or more of the following parameters is null: <paramref name="httpContext" />, <paramref name="route" />, <paramref name="parameterName" />, or <paramref name="values" />.</exception>
    </member>
    <member name="T:System.Web.Routing.IRouteConstraint">
      <summary>Defines the contract that a class must implement in order to check whether a URL parameter value is valid for a constraint.</summary>
    </member>
    <member name="M:System.Web.Routing.IRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Determines whether the URL parameter contains a valid value for this constraint.</summary>
      <returns>true if the URL parameter contains a valid value; otherwise, false.</returns>
      <param name="httpContext">An object that encapsulates information about the HTTP request.</param>
      <param name="route">The object that this constraint belongs to.</param>
      <param name="parameterName">The name of the parameter that is being checked.</param>
      <param name="values">An object that contains the parameters for the URL.</param>
      <param name="routeDirection">An object that indicates whether the constraint check is being performed when an incoming request is being handled or when a URL is being generated.</param>
    </member>
    <member name="T:System.Web.Routing.IRouteHandler">
      <summary>Defines the contract that a class must implement in order to process a request for a matching route pattern.</summary>
    </member>
    <member name="M:System.Web.Routing.IRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary>Provides the object that processes the request.</summary>
      <returns>An object that processes the request.</returns>
      <param name="requestContext">An object that encapsulates information about the request.</param>
    </member>
    <member name="T:System.Web.Routing.PageRouteHandler">
      <summary>Provides properties and methods for defining how a URL maps to a physical file.</summary>
    </member>
    <member name="M:System.Web.Routing.PageRouteHandler.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Routing.PageRouteHandler" /> class. </summary>
      <param name="virtualPath">The virtual path of the physical file for this <see cref="P:System.Web.Routing.RouteData.Route" /> object. The file must be located in the current application. Therefore, the path must begin with a tilde (~).</param>
      <exception cref="T:System.ArgumentException">The <paramref name="virtualPath" /> parameter is null or is an empty string or does not start with "~/".</exception>
    </member>
    <member name="M:System.Web.Routing.PageRouteHandler.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Routing.PageRouteHandler" /> class. </summary>
      <param name="virtualPath">The virtual path of the physical file of this <see cref="P:System.Web.Routing.RouteData.Route" /> object. The file must be located in the current application. Therefore, the path must begin with a tilde (~).</param>
      <param name="checkPhysicalUrlAccess">If this property is set to false, authorization rules will be applied to the request URL and not to the URL of the physical page. If this property is set to true, authorization rules will be applied to both the request URL and to the URL of the physical page.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="virtualPath" /> parameter is null or is an empty string or does not start with "~/".</exception>
    </member>
    <member name="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess">
      <summary>Gets a value that determines whether authorization rules are applied to the physical file's URL.</summary>
      <returns>true if authorization is checked for the URL of the physical file that is associated with the route; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:System.Web.Routing.PageRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary>Returns the object that processes the request.</summary>
      <returns>The object that processes the request.</returns>
      <param name="requestContext">An object that encapsulates information about the request.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="requestContext" /> parameter is null.</exception>
    </member>
    <member name="M:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath(System.Web.Routing.RequestContext)">
      <summary>Returns the virtual path of the physical file for the route after substitutions have been applied to any replacement parameters.</summary>
      <returns>The URL of the physical file that was generated from a route.</returns>
      <param name="requestContext">An object that encapsulates information about the request.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="requestContext" /> parameter is null.</exception>
    </member>
    <member name="P:System.Web.Routing.PageRouteHandler.VirtualPath">
      <summary>Gets the virtual path of the Web page that is associated with this route.</summary>
      <returns>The URL of the Web page, before substitutions have been applied for any replacement parameters.</returns>
    </member>
    <member name="T:System.Web.Routing.RequestContext">
      <summary>Encapsulates information about an HTTP request that matches a defined route.</summary>
    </member>
    <member name="M:System.Web.Routing.RequestContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Routing.RequestContext" /> class.</summary>
    </member>
    <member name="M:System.Web.Routing.RequestContext.#ctor(System.Web.HttpContextBase,System.Web.Routing.RouteData)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Routing.RequestContext" /> class. </summary>
      <param name="httpContext">An object that contains information about the HTTP request.</param>
      <param name="routeData">An object that contains information about the route that matched the current request.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> or <paramref name="routeData" /> is null.</exception>
    </member>
    <member name="P:System.Web.Routing.RequestContext.HttpContext">
      <summary>Gets information about the HTTP request.</summary>
      <returns>An object that contains information about the HTTP request.</returns>
    </member>
    <member name="P:System.Web.Routing.RequestContext.RouteData">
      <summary>Gets information about the requested route.</summary>
      <returns>An object that contains information about the requested route.</returns>
    </member>
    <member name="T:System.Web.Routing.Route">
      <summary>Provides properties and methods for defining a route and for obtaining information about the route.</summary>
    </member>
    <member name="M:System.Web.Routing.Route.#ctor(System.String,System.Web.Routing.IRouteHandler)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Routing.Route" /> class, by using the specified URL pattern and handler class. </summary>
      <param name="url">The URL pattern for the route.</param>
      <param name="routeHandler">The object that processes requests for the route.</param>
    </member>
    <member name="M:System.Web.Routing.Route.#ctor(System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.IRouteHandler)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Routing.Route" /> class, by using the specified URL pattern, default parameter values, and handler class. </summary>
      <param name="url">The URL pattern for the route.</param>
      <param name="defaults">The values to use for any parameters that are missing in the URL.</param>
      <param name="routeHandler">The object that processes requests for the route.</param>
    </member>
    <member name="M:System.Web.Routing.Route.#ctor(System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.IRouteHandler)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Routing.Route" /> class, by using the specified URL pattern, default parameter values, constraints, and handler class. </summary>
      <param name="url">The URL pattern for the route.</param>
      <param name="defaults">The values to use if the URL does not contain all the parameters.</param>
      <param name="constraints">A regular expression that specifies valid values for a URL parameter.</param>
      <param name="routeHandler">The object that processes requests for the route.</param>
    </member>
    <member name="M:System.Web.Routing.Route.#ctor(System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.IRouteHandler)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Routing.Route" /> class, by using the specified URL pattern, default parameter values, constraints, custom values, and handler class. </summary>
      <param name="url">The URL pattern for the route.</param>
      <param name="defaults">The values to use if the URL does not contain all the parameters.</param>
      <param name="constraints">A regular expression that specifies valid values for a URL parameter.</param>
      <param name="dataTokens">Custom values that are passed to the route handler, but which are not used to determine whether the route matches a specific URL pattern. These values are passed to the route handler, where they can be used for processing the request.</param>
      <param name="routeHandler">The object that processes requests for the route.</param>
    </member>
    <member name="P:System.Web.Routing.Route.Constraints">
      <summary>Gets or sets a dictionary of expressions that specify valid values for a URL parameter.</summary>
      <returns>An object that contains the parameter names and expressions.</returns>
    </member>
    <member name="P:System.Web.Routing.Route.DataTokens">
      <summary>Gets or sets custom values that are passed to the route handler, but which are not used to determine whether the route matches a URL pattern.</summary>
      <returns>An object that contains custom values.</returns>
    </member>
    <member name="P:System.Web.Routing.Route.Defaults">
      <summary>Gets or sets the values to use if the URL does not contain all the parameters.</summary>
      <returns>An object that contains the parameter names and default values.</returns>
    </member>
    <member name="M:System.Web.Routing.Route.GetRouteData(System.Web.HttpContextBase)">
      <summary>Returns information about the requested route.</summary>
      <returns>An object that contains the values from the route definition.</returns>
      <param name="httpContext">An object that encapsulates information about the HTTP request.</param>
    </member>
    <member name="M:System.Web.Routing.Route.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)">
      <summary>Returns information about the URL that is associated with the route.</summary>
      <returns>An object that contains information about the URL that is associated with the route.</returns>
      <param name="requestContext">An object that encapsulates information about the requested route.</param>
      <param name="values">An object that contains the parameters for a route.</param>
    </member>
    <member name="M:System.Web.Routing.Route.ProcessConstraint(System.Web.HttpContextBase,System.Object,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Determines whether a parameter value matches the constraint for that parameter.</summary>
      <returns>true if the parameter value matches the constraint; otherwise, false.</returns>
      <param name="httpContext">An object that encapsulates information about the HTTP request.</param>
      <param name="constraint">The regular expression or object to use to test <paramref name="parameterName" />.</param>
      <param name="parameterName">The name of the parameter to test.</param>
      <param name="values">The values to test.</param>
      <param name="routeDirection">A value that specifies whether URL routing is processing an incoming request or constructing a URL.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="constraint" /> is not a string that contains a regular expression.</exception>
    </member>
    <member name="P:System.Web.Routing.Route.RouteHandler">
      <summary>Gets or sets the object that processes requests for the route.</summary>
      <returns>The object that processes the request.</returns>
    </member>
    <member name="P:System.Web.Routing.Route.Url">
      <summary>Gets or sets the URL pattern for the route.</summary>
      <returns>The pattern for matching the route to a URL.</returns>
      <exception cref="T:System.ArgumentException">Any of the following:The value starts with ~ or /.The value contains a ? character.The catch-all parameter is not last.</exception>
      <exception cref="T:System.Exception">URL segments are not separated by a delimiter or a literal constant.</exception>
    </member>
    <member name="T:System.Web.Routing.RouteBase">
      <summary>Serves as the base class for all classes that represent an ASP.NET route.</summary>
    </member>
    <member name="M:System.Web.Routing.RouteBase.#ctor">
      <summary>Initializes the class for use by an inherited class instance. This constructor can only be called by an inherited class. </summary>
    </member>
    <member name="M:System.Web.Routing.RouteBase.GetRouteData(System.Web.HttpContextBase)">
      <summary>When overridden in a derived class, returns route information about the request.</summary>
      <returns>An object that contains the values from the route definition if the route matches the current request, or null if the route does not match the request.</returns>
      <param name="httpContext">An object that encapsulates information about the HTTP request.</param>
    </member>
    <member name="M:System.Web.Routing.RouteBase.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)">
      <summary>When overridden in a derived class, checks whether the route matches the specified values, and if so, generates a URL and retrieves information about the route.</summary>
      <returns>An object that contains the generated URL and information about the route, or null if the route does not match <paramref name="values" />.</returns>
      <param name="requestContext">An object that encapsulates information about the requested route.</param>
      <param name="values">An object that contains the parameters for a route.</param>
    </member>
    <member name="T:System.Web.Routing.RouteCollection">
      <summary>Provides a collection of routes for ASP.NET routing.</summary>
    </member>
    <member name="M:System.Web.Routing.RouteCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Routing.RouteCollection" /> class. </summary>
    </member>
    <member name="M:System.Web.Routing.RouteCollection.#ctor(System.Web.Hosting.VirtualPathProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Routing.RouteCollection" /> class by using the specified virtual path provider. </summary>
      <param name="virtualPathProvider">A provider for retrieving resources from a virtual file system.</param>
    </member>
    <member name="M:System.Web.Routing.RouteCollection.Add(System.String,System.Web.Routing.RouteBase)">
      <summary>Adds a route to the end of the <see cref="T:System.Web.Routing.RouteCollection" /> object and assigns the specified name to the route.</summary>
      <param name="name">The value that identifies the route. The value can be null or an empty string.</param>
      <param name="item">The route to add to the end of the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is already used in the collection.</exception>
    </member>
    <member name="M:System.Web.Routing.RouteCollection.ClearItems">
      <summary>Removes all the elements from the <see cref="T:System.Web.Routing.RouteCollection" /> object.</summary>
    </member>
    <member name="M:System.Web.Routing.RouteCollection.GetReadLock">
      <summary>Provides an object for managing thread safety when you retrieve an object from the collection.</summary>
      <returns>An object that manages thread safety.</returns>
    </member>
    <member name="M:System.Web.Routing.RouteCollection.GetRouteData(System.Web.HttpContextBase)">
      <summary>Returns information about the route in the collection that matches the specified values.</summary>
      <returns>An object that contains the values from the route definition.</returns>
      <param name="httpContext">An object that encapsulates information about the HTTP request.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Web.HttpContextBase.Request" /> property of the object in the <paramref name="context" /> parameter is null.</exception>
    </member>
    <member name="M:System.Web.Routing.RouteCollection.GetVirtualPath(System.Web.Routing.RequestContext,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Returns information about the URL path that is associated with the named route, given the specified context, route name, and parameter values.</summary>
      <returns>An object that contains information about the URL path that is associated with the route.</returns>
      <param name="requestContext">An object that encapsulates information about the requested route.</param>
      <param name="name">The name of the route to use when information about the URL path is retrieved.</param>
      <param name="values">An object that contains the parameters for a route.</param>
      <exception cref="T:System.ArgumentException">No route could be found that has the name specified in the <paramref name="name" /> parameter.</exception>
    </member>
    <member name="M:System.Web.Routing.RouteCollection.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)">
      <summary>Returns information about the URL path that is associated with the route, given the specified context and parameter values.</summary>
      <returns>An object that contains information about the URL path that is associated with the route.</returns>
      <param name="requestContext">An object that encapsulates information about the requested route.</param>
      <param name="values">An object that contains the parameters for a route.</param>
    </member>
    <member name="M:System.Web.Routing.RouteCollection.GetWriteLock">
      <summary>Provides an object for managing thread safety when you add or remove elements in the collection.</summary>
      <returns>An object that manages thread safety.</returns>
    </member>
    <member name="M:System.Web.Routing.RouteCollection.Ignore(System.String)">
      <summary>Defines a URL pattern that should not be checked for matches against routes.</summary>
      <param name="url">The URL pattern to be ignored.</param>
    </member>
    <member name="M:System.Web.Routing.RouteCollection.Ignore(System.String,System.Object)">
      <summary>Defines a URL pattern that should not be checked for matches against routes if a request URL meets the specified constraints.</summary>
      <param name="url">The URL pattern to be ignored.</param>
      <param name="constraints">Additional criteria that determine whether a request that matches the URL pattern will be ignored.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="url" /> parameter is null.</exception>
    </member>
    <member name="M:System.Web.Routing.RouteCollection.InsertItem(System.Int32,System.Web.Routing.RouteBase)">
      <summary>Inserts the specified route into the <see cref="T:System.Web.Routing.RouteCollection" /> object at the specified index.</summary>
      <param name="index">The zero-based index at which <paramref name="item" /> is inserted.</param>
      <param name="item">The route to insert.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="item" /> is already in the collection.</exception>
    </member>
    <member name="P:System.Web.Routing.RouteCollection.Item(System.String)">
      <summary>Gets the route in the collection that has the specified name.</summary>
      <returns>An object that has the specified name, or null if <paramref name="name" /> is null, is an empty string, or does not match any route in the collection.</returns>
      <param name="name">The value that identifies the route to get.</param>
    </member>
    <member name="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String)">
      <summary>Provides a way to define routes for Web Forms applications.</summary>
      <returns>The route that is added to the route collection.</returns>
      <param name="routeName">The name of the route.</param>
      <param name="routeUrl">The URL pattern for the route.</param>
      <param name="physicalFile">The physical URL for the route.</param>
    </member>
    <member name="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String,System.Boolean)">
      <summary>Provides a way to define routes for Web Forms applications.</summary>
      <returns>The route that is added to the route collection.</returns>
      <param name="routeName">The name of the route.</param>
      <param name="routeUrl">The URL pattern for the route.</param>
      <param name="physicalFile">The physical URL for the route.</param>
      <param name="checkPhysicalUrlAccess">A value that indicates whether ASP.NET should validate that the user has authority to access the physical URL (the route URL is always checked). This parameter sets the <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> property.</param>
    </member>
    <member name="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String,System.Boolean,System.Web.Routing.RouteValueDictionary)">
      <summary>Provides a way to define routes for Web Forms applications.</summary>
      <returns>The route that is added to the route collection.</returns>
      <param name="routeName">The name of the route.</param>
      <param name="routeUrl">The URL pattern for the route.</param>
      <param name="physicalFile">The physical URL for the route.</param>
      <param name="checkPhysicalUrlAccess">A value that indicates whether ASP.NET should validate that the user has authority to access the physical URL (the route URL is always checked). This parameter sets the <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> property.</param>
      <param name="defaults">Default values for the route parameters.</param>
    </member>
    <member name="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String,System.Boolean,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary)">
      <summary>Provides a way to define routes for Web Forms applications.</summary>
      <returns>The route that is added to the route collection.</returns>
      <param name="routeName">The name of the route.</param>
      <param name="routeUrl">The URL pattern for the route.</param>
      <param name="physicalFile">The physical URL for the route.</param>
      <param name="checkPhysicalUrlAccess">A value that indicates whether ASP.NET should validate that the user has authority to access the physical URL (the route URL is always checked). This parameter sets the <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> property.</param>
      <param name="defaults">Default values for the route.</param>
      <param name="constraints">Constraints that a URL request must meet in order to be processed as this route.</param>
    </member>
    <member name="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String,System.Boolean,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary)">
      <summary>Provides a way to define routes for Web Forms applications.</summary>
      <returns>The route that is added to the route collection.</returns>
      <param name="routeName">The name of the route.</param>
      <param name="routeUrl">The URL pattern for the route.</param>
      <param name="physicalFile">The physical URL for the route.</param>
      <param name="checkPhysicalUrlAccess">A value that indicates whether ASP.NET should validate that the user has authority to access the physical URL (the route URL is always checked). This parameter sets the <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> property.</param>
      <param name="defaults">Default values for the route parameters.</param>
      <param name="constraints">Constraints that a URL request must meet in order to be processed as this route.</param>
      <param name="dataTokens">Values that are associated with the route that are not used to determine whether a route matches a URL pattern.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="routeUrl" /> parameter is null.</exception>
    </member>
    <member name="M:System.Web.Routing.RouteCollection.RemoveItem(System.Int32)">
      <summary>Removes the route from the <see cref="T:System.Web.Routing.RouteCollection" /> object at the specified index.</summary>
      <param name="index">The zero-based index of the route to remove.</param>
    </member>
    <member name="P:System.Web.Routing.RouteCollection.RouteExistingFiles">
      <summary>Gets or sets a value that indicates whether ASP.NET routing should handle URLs that match an existing file.</summary>
      <returns>true if ASP.NET routing handles all requests, even those that match an existing file; otherwise, false. The default value is false.</returns>
    </member>
    <member name="M:System.Web.Routing.RouteCollection.SetItem(System.Int32,System.Web.Routing.RouteBase)">
      <summary>Replaces the route at the specified index.</summary>
      <param name="index">The zero-based index of the route to replace.</param>
      <param name="item">The route to add at the specified index.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="item" /> is already in the collection.</exception>
    </member>
    <member name="T:System.Web.Routing.RouteData">
      <summary>Encapsulates information about a route.</summary>
    </member>
    <member name="M:System.Web.Routing.RouteData.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Routing.RouteData" /> class. </summary>
    </member>
    <member name="M:System.Web.Routing.RouteData.#ctor(System.Web.Routing.RouteBase,System.Web.Routing.IRouteHandler)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Routing.RouteData" /> class by using the specified route and route handler. </summary>
      <param name="route">An object that defines the route.</param>
      <param name="routeHandler">An object that processes the request.</param>
    </member>
    <member name="P:System.Web.Routing.RouteData.DataTokens">
      <summary>Gets a collection of custom values that are passed to the route handler but are not used when ASP.NET routing determines whether the route matches a request.</summary>
      <returns>An object that contains custom values.</returns>
    </member>
    <member name="M:System.Web.Routing.RouteData.GetRequiredString(System.String)">
      <summary>Retrieves the value with the specified identifier.</summary>
      <returns>The element in the <see cref="P:System.Web.Routing.RouteData.Values" /> property whose key matches <paramref name="valueName" />.</returns>
      <param name="valueName">The key of the value to retrieve.</param>
      <exception cref="T:System.InvalidOperationException">A value does not exist for <paramref name="valueName" />.</exception>
    </member>
    <member name="P:System.Web.Routing.RouteData.Route">
      <summary>Gets or sets the object that represents a route.</summary>
      <returns>An object that represents the route definition.</returns>
    </member>
    <member name="P:System.Web.Routing.RouteData.RouteHandler">
      <summary>Gets or sets the object that processes a requested route.</summary>
      <returns>An object that processes the route request.</returns>
    </member>
    <member name="P:System.Web.Routing.RouteData.Values">
      <summary>Gets a collection of URL parameter values and default values for the route.</summary>
      <returns>An object that contains values that are parsed from the URL and from default values.</returns>
    </member>
    <member name="T:System.Web.Routing.RouteDirection">
      <summary>Indicates whether ASP.NET routing is processing a URL from a client or generating a URL.</summary>
    </member>
    <member name="F:System.Web.Routing.RouteDirection.IncomingRequest">
      <summary>A URL from a client is being processed.</summary>
    </member>
    <member name="F:System.Web.Routing.RouteDirection.UrlGeneration">
      <summary>A URL is being created based on the route definition.</summary>
    </member>
    <member name="T:System.Web.Routing.RouteTable">
      <summary>Stores the URL routes for an application.</summary>
    </member>
    <member name="M:System.Web.Routing.RouteTable.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Routing.RouteTable" /> class. </summary>
    </member>
    <member name="P:System.Web.Routing.RouteTable.Routes">
      <summary>Gets a collection of objects that derive from the <see cref="T:System.Web.Routing.RouteBase" /> class.</summary>
      <returns>An object that contains all the routes in the collection.</returns>
    </member>
    <member name="T:System.Web.Routing.RouteValueDictionary">
      <summary>Represents a case-insensitive collection of key/value pairs that you use in various places in the routing framework, such as when you define the default values for a route or when you generate a URL that is based on a route.</summary>
    </member>
    <member name="M:System.Web.Routing.RouteValueDictionary.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Routing.RouteValueDictionary" /> class that is empty. </summary>
    </member>
    <member name="M:System.Web.Routing.RouteValueDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Routing.RouteValueDictionary" /> class and adds elements from the specified collection. </summary>
      <param name="dictionary">A collection whose elements are copied to the new collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dictionary" /> contains one or more duplicate keys.</exception>
    </member>
    <member name="M:System.Web.Routing.RouteValueDictionary.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Routing.RouteValueDictionary" /> class and adds values that are based on properties from the specified object. </summary>
      <param name="values">An object that contains properties that will be added as elements to the new collection.</param>
    </member>
    <member name="M:System.Web.Routing.RouteValueDictionary.Add(System.String,System.Object)">
      <summary>Adds the specified value to the dictionary by using the specified key.</summary>
      <param name="key">The key of the element to add.</param>
      <param name="value">The value of the element to add.</param>
    </member>
    <member name="M:System.Web.Routing.RouteValueDictionary.Clear">
      <summary>Removes all keys and values from the dictionary.</summary>
    </member>
    <member name="M:System.Web.Routing.RouteValueDictionary.ContainsKey(System.String)">
      <summary>Determines whether the dictionary contains the specified key.</summary>
      <returns>true if the dictionary contains an element that has the specified key; otherwise, false.</returns>
      <param name="key">The key to locate in the dictionary.</param>
    </member>
    <member name="M:System.Web.Routing.RouteValueDictionary.ContainsValue(System.Object)">
      <summary>Determines whether the dictionary contains a specific value.</summary>
      <returns>true if the dictionary contains an element that has the specified value; otherwise, false.</returns>
      <param name="value">The value to locate in the dictionary.</param>
    </member>
    <member name="P:System.Web.Routing.RouteValueDictionary.Count">
      <summary>Gets the number of key/value pairs that are in the collection.</summary>
      <returns>The number of key/value pairs that are in the collection.</returns>
    </member>
    <member name="M:System.Web.Routing.RouteValueDictionary.GetEnumerator">
      <summary>Returns an enumerator that you can use to iterate through the dictionary.</summary>
      <returns>A structure for reading data in the dictionary.</returns>
    </member>
    <member name="P:System.Web.Routing.RouteValueDictionary.Item(System.String)">
      <summary>Gets or sets the value that is associated with the specified key.</summary>
      <returns>The value that is associated with the specified key, or null if the key does not exist in the collection.</returns>
      <param name="key">The key of the value to get or set.</param>
    </member>
    <member name="P:System.Web.Routing.RouteValueDictionary.Keys">
      <summary>Gets a collection that contains the keys in the dictionary.</summary>
      <returns>A collection that contains the keys in the dictionary.</returns>
    </member>
    <member name="M:System.Web.Routing.RouteValueDictionary.Remove(System.String)">
      <summary>Removes the value that has the specified key from the dictionary.</summary>
      <returns>true if the element is found and removed; otherwise, false. This method returns false if <paramref name="key" /> is not found in the dictionary.</returns>
      <param name="key">The key of the element to remove.</param>
    </member>
    <member name="M:System.Web.Routing.RouteValueDictionary.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.ICollection`1.Add(`0)" />.</summary>
      <param name="item">The key/value pair to add to the dictionary.</param>
    </member>
    <member name="M:System.Web.Routing.RouteValueDictionary.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.ICollection`1.Contains(`0)" />.</summary>
      <returns>true if <paramref name="item" /> is in the collection; otherwise, false.</returns>
      <param name="item">The key and value pair to locate in the dictionary.</param>
    </member>
    <member name="M:System.Web.Routing.RouteValueDictionary.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)" /> .</summary>
      <param name="array">The one-dimensional array that is the destination of the elements copied from the dictionary.</param>
      <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying starts.</param>
    </member>
    <member name="P:System.Web.Routing.RouteValueDictionary.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</summary>
      <returns>true if the dictionary is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.Routing.RouteValueDictionary.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.ICollection`1.Remove(`0)" />.</summary>
      <returns>true if <paramref name="item" /> was successfully removed from the collection; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the collection.</returns>
      <param name="item">The key of the element to remove.</param>
    </member>
    <member name="P:System.Web.Routing.RouteValueDictionary.System#Collections#Generic#IDictionary{TKey@TValue}#Keys">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.IDictionary`2.Keys" />.</summary>
      <returns>A collection that contains the keys in the dictionary.</returns>
    </member>
    <member name="P:System.Web.Routing.RouteValueDictionary.System#Collections#Generic#IDictionary{TKey@TValue}#Values">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.IDictionary`2.Values" />.</summary>
      <returns>A collection that contains the values in the dictionary.</returns>
    </member>
    <member name="M:System.Web.Routing.RouteValueDictionary.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>A structure for reading data in the dictionary.</returns>
    </member>
    <member name="M:System.Web.Routing.RouteValueDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>A structure for reading data in the dictionary.</returns>
    </member>
    <member name="M:System.Web.Routing.RouteValueDictionary.TryGetValue(System.String,System.Object@)">
      <summary>Gets a value that indicates whether a value is associated with the specified key.</summary>
      <returns>true if the dictionary contains an element that has the specified key; otherwise, false.</returns>
      <param name="key">The key of the value to get.</param>
      <param name="value">When this method returns, contains the value that is associated with the specified key, if the key is found; otherwise, contains the appropriate default value for the type of the <paramref name="value" /> parameter that you provided as an out parameter. This parameter is passed uninitialized.</param>
    </member>
    <member name="P:System.Web.Routing.RouteValueDictionary.Values">
      <summary>Gets a collection that contains the values in the dictionary.</summary>
      <returns>A collection that contains the values in the dictionary.</returns>
    </member>
    <member name="T:System.Web.Routing.StopRoutingHandler">
      <summary>Provides a way to specify that ASP.NET routing should not handle requests for a URL pattern.</summary>
    </member>
    <member name="M:System.Web.Routing.StopRoutingHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Routing.StopRoutingHandler" /> class. </summary>
    </member>
    <member name="M:System.Web.Routing.StopRoutingHandler.GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary>Returns the object that processes the request.</summary>
      <returns>An object that processes the request.</returns>
      <param name="requestContext">An object that encapsulates information about the request.</param>
    </member>
    <member name="M:System.Web.Routing.StopRoutingHandler.System#Web#Routing#IRouteHandler#GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary>Returns the object that processes the request.</summary>
      <returns>An object that processes the request.</returns>
      <param name="requestContext">An object that encapsulates information about the request.</param>
    </member>
    <member name="T:System.Web.Routing.UrlRoutingHandler">
      <summary>Serves as base class for classes that enable you to customize how ASP.NET routing processes a request.</summary>
    </member>
    <member name="M:System.Web.Routing.UrlRoutingHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Routing.UrlRoutingHandler" /> class. </summary>
    </member>
    <member name="P:System.Web.Routing.UrlRoutingHandler.IsReusable">
      <summary>Gets a value that indicates whether another request can use the <see cref="T:System.Web.Routing.UrlRoutingHandler" /> instance.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="M:System.Web.Routing.UrlRoutingHandler.ProcessRequest(System.Web.HttpContext)">
      <summary>Processes an HTTP request that matches a route.</summary>
      <param name="httpContext">An object that provides references to the intrinsic server objects (for example, <see cref="P:System.Web.HttpContext.Request" />, <see cref="P:System.Web.HttpContext.Response" />, <see cref="P:System.Web.HttpContext.Session" />, and <see cref="P:System.Web.HttpContext.Server" />).</param>
      <exception cref="T:System.Web.HttpException">The request does not match any route.</exception>
      <exception cref="T:System.InvalidOperationException">No handler is defined for the route.</exception>
    </member>
    <member name="M:System.Web.Routing.UrlRoutingHandler.ProcessRequest(System.Web.HttpContextBase)">
      <summary>Processes an HTTP request that matches a route.</summary>
      <param name="httpContext">An object that provides references to the intrinsic server objects (for example, <see cref="P:System.Web.HttpContext.Request" />, <see cref="P:System.Web.HttpContext.Response" />, <see cref="P:System.Web.HttpContext.Session" />, and <see cref="P:System.Web.HttpContext.Server" />).</param>
      <exception cref="T:System.Web.HttpException">The request does not match any route.</exception>
      <exception cref="T:System.InvalidOperationException">No handler is defined for the route.</exception>
    </member>
    <member name="P:System.Web.Routing.UrlRoutingHandler.RouteCollection">
      <summary>Gets or sets the collection of defined routes for the ASP.NET application.</summary>
      <returns>An object that contains the routes.</returns>
    </member>
    <member name="P:System.Web.Routing.UrlRoutingHandler.System#Web#IHttpHandler#IsReusable">
      <summary>Gets a value that indicates whether another request can use the <see cref="T:System.Web.Routing.UrlRoutingHandler" /> instance.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="M:System.Web.Routing.UrlRoutingHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
      <summary>Processes an HTTP request that matches a route.</summary>
      <param name="context">An object that provides references to the intrinsic server objects (for example, <see cref="P:System.Web.HttpContext.Request" />, <see cref="P:System.Web.HttpContext.Response" />, <see cref="P:System.Web.HttpContext.Session" />, and <see cref="P:System.Web.HttpContext.Server" />).</param>
    </member>
    <member name="M:System.Web.Routing.UrlRoutingHandler.VerifyAndProcessRequest(System.Web.IHttpHandler,System.Web.HttpContextBase)">
      <summary>When overridden in a derived class, validates the HTTP handler and performs the steps that are required to process the request.</summary>
      <param name="httpHandler">The object that is used to process an HTTP request.</param>
      <param name="httpContext">An object that provides references to the intrinsic server objects (for example, <see cref="P:System.Web.HttpContext.Request" />, <see cref="P:System.Web.HttpContext.Response" />, <see cref="P:System.Web.HttpContext.Session" />, and <see cref="P:System.Web.HttpContext.Server" />).</param>
    </member>
    <member name="T:System.Web.Routing.UrlRoutingModule">
      <summary>Matches a URL request to a defined route.</summary>
    </member>
    <member name="M:System.Web.Routing.UrlRoutingModule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Routing.UrlRoutingModule" /> class. </summary>
    </member>
    <member name="M:System.Web.Routing.UrlRoutingModule.Dispose">
      <summary>Disposes of the resources (other than memory) that are used by the module.</summary>
    </member>
    <member name="M:System.Web.Routing.UrlRoutingModule.Init(System.Web.HttpApplication)">
      <summary>Initializes a module and prepares it to handle requests.</summary>
      <param name="application">An object that provides access to the methods, properties, and events common to all application objects in an ASP.NET application.</param>
    </member>
    <member name="M:System.Web.Routing.UrlRoutingModule.PostMapRequestHandler(System.Web.HttpContextBase)">
      <summary>Assigns the HTTP handler for the current request to the context.</summary>
      <param name="context">Encapsulates all HTTP-specific information about an individual HTTP request.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.Routing.RouteData.RouteHandler" /> property for the route is null.</exception>
    </member>
    <member name="M:System.Web.Routing.UrlRoutingModule.PostResolveRequestCache(System.Web.HttpContextBase)">
      <summary>Matches the HTTP request to a route, retrieves the handler for that route, and sets the handler as the HTTP handler for the current request.</summary>
      <param name="context">Encapsulates all HTTP-specific information about an individual HTTP request.</param>
    </member>
    <member name="P:System.Web.Routing.UrlRoutingModule.RouteCollection">
      <summary>Gets or sets the collection of defined routes for the ASP.NET application.</summary>
      <returns>An object that contains the routes.</returns>
    </member>
    <member name="M:System.Web.Routing.UrlRoutingModule.System#Web#IHttpModule#Dispose">
      <summary>For a description of this member, see <see cref="M:System.Web.IHttpModule.Dispose" />.</summary>
    </member>
    <member name="M:System.Web.Routing.UrlRoutingModule.System#Web#IHttpModule#Init(System.Web.HttpApplication)">
      <summary>For a description of this member, see <see cref="M:System.Web.IHttpModule.Init" />.</summary>
      <param name="application">An object that provides access to the methods, properties, and events that are common to all application objects in an ASP.NET application.</param>
    </member>
    <member name="T:System.Web.Routing.VirtualPathData">
      <summary>Represents information about the route and virtual path that are the result of generating a URL with the ASP.NET routing framework.</summary>
    </member>
    <member name="M:System.Web.Routing.VirtualPathData.#ctor(System.Web.Routing.RouteBase,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Routing.VirtualPathData" /> class. </summary>
      <param name="route">The object that is used to generate the URL.</param>
      <param name="virtualPath">The generated URL.</param>
    </member>
    <member name="P:System.Web.Routing.VirtualPathData.DataTokens">
      <summary>Gets the collection of custom values for the route definition.</summary>
      <returns>A collection of custom values for a route.</returns>
    </member>
    <member name="P:System.Web.Routing.VirtualPathData.Route">
      <summary>Gets or sets the route that is used to create the URL.</summary>
      <returns>An object that represents the route that matched the parameters that were used to generate a URL.</returns>
    </member>
    <member name="P:System.Web.Routing.VirtualPathData.VirtualPath">
      <summary>Gets or sets the URL that was created from the route definition.</summary>
      <returns>The URL that was generated from a route.</returns>
    </member>
    <member name="T:System.Web.Security.ActiveDirectoryConnectionProtection">
      <summary>Specifies the connection protection options supported by the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> class.</summary>
    </member>
    <member name="F:System.Web.Security.ActiveDirectoryConnectionProtection.None">
      <summary>No transport layer security is used. Explicit credentials for the Active Directory connection must be provided in the configuration file.</summary>
    </member>
    <member name="F:System.Web.Security.ActiveDirectoryConnectionProtection.Ssl">
      <summary>An SSL connection is used to connect to the Active Directory server.</summary>
    </member>
    <member name="F:System.Web.Security.ActiveDirectoryConnectionProtection.SignAndSeal">
      <summary>The connection to the Active Directory server is secured by digitally signing and encrypting each packet sent to the server. </summary>
    </member>
    <member name="T:System.Web.Security.ActiveDirectoryMembershipProvider">
      <summary>Manages storage of membership information for an ASP.NET application in Active Directory and Active Directory Application Mode servers.</summary>
    </member>
    <member name="M:System.Web.Security.ActiveDirectoryMembershipProvider.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> class.</summary>
    </member>
    <member name="P:System.Web.Security.ActiveDirectoryMembershipProvider.ApplicationName">
      <summary>The name of the application using the custom membership provider.</summary>
      <returns>The name of the application using the custom membership provider.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.ApplicationName" /> property.</exception>
      <exception cref="T:System.InvalidOperationException">An attempt to access the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.ApplicationName" /> property was made before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance was initialized.</exception>
    </member>
    <member name="M:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePassword(System.String,System.String,System.String)">
      <summary>Changes the password for the specified user.</summary>
      <returns>true if the password was updated successfully; otherwise, false.</returns>
      <param name="username">The name of the user to update the password for.</param>
      <param name="oldPassword">The current password for the specified user.</param>
      <param name="newPassword">The new password for the specified user.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" /> is empty, or exceeds the maximum length for the user name (usually 256 characters).- or -<paramref name="username" /> contains commas.- or -The user name is mapped to the userPrincipalName attribute and the <paramref name="username" /> parameter contains backslashes.- or -<paramref name="oldPassword" /> or <paramref name="newPassword" /> is a zero-length string.- or -<paramref name="oldPassword" /> or <paramref name="newPassword" /> exceeds the maximum password length (usually 128 characters).- or -<paramref name="newPassword" /> is less than the minimum password size specified in the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredPasswordLength" /> property - or -<paramref name="newPassword" /> contains fewer than the number of non-alphabetic characters specified in the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredNonAlphanumericCharacters" /> property.- or -<paramref name="newPassword" /> fails validation by the regular expression defined in the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordStrengthRegularExpression" /> property.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="username" /> is null.- or -<paramref name="oldPassword" /> is null.- or -<paramref name="newPassword" /> is null.</exception>
      <exception cref="T:System.Web.Security.MembershipPasswordException">
        <paramref name="newPassword" /> does not meet the complexity requirements defined by the Active Directory server.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">A secure connection could not be made to an Active Directory Application Mode server.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePassword(System.String,System.String,System.String)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
      <exception cref="T:System.Exception">An unhandled exception occurred.</exception>
    </member>
    <member name="M:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)">
      <summary>Updates the password question and answer for a user in the Active Directory store.</summary>
      <returns>true if the update was successful; otherwise, false. A value of false is also returned if the password is incorrect, the user is locked out, or the user does not exist in the Active Directory data store.</returns>
      <param name="username">The user to change the password question and answer for.</param>
      <param name="password">The password for the specified user.</param>
      <param name="newPasswordQuestion">The new password question for the specified user.</param>
      <param name="newPasswordAnswer">The new password answer for the specified user.</param>
      <exception cref="T:System.NotSupportedException">The administrator has not mapped the password question-and-answer fields to attributes of the Active Directory schema.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" /> is empty, or exceeds the maximum length for the user name (usually 256 characters).- or -<paramref name="username" /> contains commas.- or -The user name is mapped to the userPrincipalName attribute and the <paramref name="username" /> parameter contains backslashes.- or -<paramref name="password" /> is a zero-length string.- or -<paramref name="password" /> exceeds the maximum password length (usually 128 characters).- or -<paramref name="newPasswordQuestion" /> is empty and the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer" /> property value is true.- or -<paramref name="newPasswordQuestion" /> exceeds 256 characters.- or -<paramref name="newPasswordAnswer" /> exceeds 128 characters after the answer is encrypted.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="username" /> is null.- or -<paramref name="password" /> is null.- or -<paramref name="newPasswordQuestion" /> is null and <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer" /> property is true.- or -<paramref name="newPasswordAnswer" /> is null and <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer" /> property is true.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">The machineKey Element (ASP.NET Settings Schema) configuration element indicates an auto-generated machine encryption key. You must explicitly set the decriptionKey attribute of the machineKey Element (ASP.NET Settings Schema) element to store password answers with the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" />.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
    </member>
    <member name="M:System.Web.Security.ActiveDirectoryMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)">
      <summary>Adds a new user to the Active Directory data store.</summary>
      <returns>An <see cref="T:System.Web.Security.ActiveDirectoryMembershipUser" /> instance containing the information for the newly created user, or null if the user was not successfully created.</returns>
      <param name="username">The user name for the new user.</param>
      <param name="password">The password for the new user.</param>
      <param name="email">The e-mail address of the new user.</param>
      <param name="passwordQuestion">The password question for the new user.</param>
      <param name="passwordAnswer">The password answer for the new user.</param>
      <param name="isApproved">Whether or not the new user is approved to be validated.</param>
      <param name="providerUserKey">The unique identifier from the membership data source for the user. This parameter must be null when using the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> class.</param>
      <param name="status">When this method returns, contains one of the <see cref="T:System.Web.Security.MembershipCreateStatus" /> enumeration values indicating whether the user was created successfully.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="providerUserKey" /> parameter is not null.</exception>
      <exception cref="T:System.NotSupportedException">The administrator has not mapped the password question-and-answer fields to attributes of the Active Directory schema, and either the <paramref name="passwordQuestion" /> or <paramref name="passwordAnswer" /> parameter is not null.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">The machineKey Element (ASP.NET Settings Schema) configuration element indicates an auto-generated machine encryption key. You must explicitly set the decriptionKey attribute of the machineKey Element (ASP.NET Settings Schema) element to store password answers with the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" />.- or -The <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> was unable to establish a secure connection to the directory when attempting to set the password for the new user.</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">An error occurred while attempting to create the user.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
    </member>
    <member name="P:System.Web.Security.ActiveDirectoryMembershipProvider.CurrentConnectionProtection">
      <summary>Gets the current level of security being used to protect communications with the server.</summary>
      <returns>One of the <see cref="T:System.Web.Security.ActiveDirectoryConnectionProtection" /> values. </returns>
      <exception cref="T:System.InvalidOperationException">An attempt to access the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.CurrentConnectionProtection" /> property was made before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance was initialized.</exception>
    </member>
    <member name="M:System.Web.Security.ActiveDirectoryMembershipProvider.DeleteUser(System.String,System.Boolean)">
      <summary>Removes a user's membership information from the Active Directory data store.</summary>
      <returns>true if the user was deleted; otherwise, false if the user was not found in the data store.</returns>
      <param name="username">The name of the user to delete.</param>
      <param name="deleteAllRelatedData">This parameter is ignored by the <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.DeleteUser(System.String,System.Boolean)" /> method. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" /> is empty, or exceeds the maximum length for the user name (usually 256 characters).- or -<paramref name="username" /> contains commas.- or -The user name is mapped to the userPrincipalName attribute and the <paramref name="userName" /> parameter contains backslashes.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="username" /> is null.</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">An error occurred while attempting to delete the user.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.DeleteUser(System.String,System.Boolean)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
    </member>
    <member name="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is configured to allow users to reset their passwords.</summary>
      <returns>true if password reset is allowed; otherwise, false. The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">An attempt to access the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset" /> property was made before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance was initialized.</exception>
    </member>
    <member name="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordRetrieval">
      <summary>Gets a value indicating whether the user's password can be retrieved from the Active Directory data store. This property always returns false.</summary>
      <returns>false to indicate that password retrieval is not supported by the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> class.</returns>
      <exception cref="T:System.InvalidOperationException">An attempt to access the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordRetrieval" /> property was made before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance was initialized.</exception>
    </member>
    <member name="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods">
      <summary>Gets a value indicating whether search-oriented <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> methods are available.</summary>
      <returns>true if search methods are available; otherwise, false. The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">An attempt to access the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods" /> property was made before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance was initialized.</exception>
    </member>
    <member name="M:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)">
      <summary>Returns a collection of membership users from the Active Directory data store based on the user's e-mail address.</summary>
      <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> containing <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> instances beginning at the page specified by <paramref name="pageIndex" />.</returns>
      <param name="emailToMatch">E-mail address or portion of e-mail address to search for.</param>
      <param name="pageIndex">The index of the page of results to return. <paramref name="pageIndex" /> is zero-based.</param>
      <param name="pageSize">The size of the page of results to return.</param>
      <param name="totalRecords">When this method returns, contains the total number of users returned in the collection. This parameter is passed uninitialized.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="emailToMatch" /> is empty.- or -<paramref name="emailToMatch" /> exceeds 256 characters.- or -<paramref name="pageIndex" /> is less than 0.- or -<paramref name="pageSize" /> is less than 1.- or -<paramref name="pageSize" /> multiplied by <paramref name="pageIndex" />, plus <paramref name="pageSize" />, minus 1 is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods" /> property is false.</exception>
    </member>
    <member name="M:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)">
      <summary>Returns a collection of users from the Active Directory data store based on the user name.</summary>
      <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> containing <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> instances beginning at the page specified by <paramref name="pageIndex" />.</returns>
      <param name="usernameToMatch">The user name or portion of a user name to search for.</param>
      <param name="pageIndex">The index of the page of results to return. <paramref name="pageIndex" /> is zero-based.</param>
      <param name="pageSize">The size of the page of results to return.</param>
      <param name="totalRecords">When this method returns, contains the total number of records returned in the collection. This parameter is passed uninitialized.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="usernameToMatch" /> is empty, or exceeds the maximum length for the user name (usually 256 characters).- or -<paramref name="usernameToMatch" /> contains commas.- or -<paramref name="pageIndex" /> is less than 0.-or<paramref name="pageSize" /> is less than 1.- or -<paramref name="pageSize" /> multiplied by <paramref name="pageIndex" />, plus <paramref name="pageSize" />, minus 1 is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="usernameToMatch" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods" /> property is false.</exception>
    </member>
    <member name="M:System.Web.Security.ActiveDirectoryMembershipProvider.GeneratePassword">
      <summary>Generates a random password.</summary>
      <returns>A random password.</returns>
    </member>
    <member name="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)">
      <summary>Gets a collection of all the users stored in an Active Directory data source.</summary>
      <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> containing <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> instances beginning at the page specified by <paramref name="pageIndex" />.</returns>
      <param name="pageIndex">The index of the page of results to return. <paramref name="pageIndex" /> is zero-based.</param>
      <param name="pageSize">The size of the page of results to return.</param>
      <param name="totalRecords">When this method returns, contains the total number of records returned in the collection. This parameter is passed uninitialized.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pageIndex" /> is less than 0.-or<paramref name="pageSize" /> is less than 1.- or -<paramref name="pageSize" /> multiplied by <paramref name="pageIndex" />, plus <paramref name="pageSize" />, minus 1 is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods" /> property is false.</exception>
    </member>
    <member name="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetNumberOfUsersOnline">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> exception in all cases.</summary>
      <returns>A <see cref="T:System.NotSupportedException" /> in all cases.</returns>
      <exception cref="T:System.NotSupportedException">Any call to the <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetNumberOfUsersOnline" /> method.</exception>
    </member>
    <member name="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetPassword(System.String,System.String)">
      <summary>Returns the password of the specified user from the database. The <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> class does not support this method.</summary>
      <returns>Always throws a <see cref="T:System.NotSupportedException" /> exception.</returns>
      <param name="username">The user to retrieve the password for.</param>
      <param name="passwordAnswer">The password answer for the user.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> does not support password retrieval.</exception>
    </member>
    <member name="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetUser(System.Object,System.Boolean)">
      <summary>Gets the membership user information associated with the specified user key.</summary>
      <returns>A <see cref="T:System.Web.Security.MembershipUser" /> instance representing the user specified. If no user is found in the Active Directory data store for the specified <paramref name="providerUserKey" /> value, null is returned.</returns>
      <param name="providerUserKey">The unique identifier for the user.</param>
      <param name="userIsOnline">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetUser(System.Object,System.Boolean)" /> method ignores this parameter.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetUser(System.Object,System.Boolean)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="providerUserKey" /> is not of type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="providerUserKey" /> is null.</exception>
    </member>
    <member name="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetUser(System.String,System.Boolean)">
      <summary>Gets the membership user information associated with the specified user name.</summary>
      <returns>A <see cref="T:System.Web.Security.MembershipUser" /> instance representing the user specified. If no user is found in the Active Directory data store for the specified <paramref name="username" /> value, null is returned.</returns>
      <param name="username">The name of the user to get information for.</param>
      <param name="userIsOnline">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetUser(System.String,System.Boolean)" /> method ignores this parameter.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" /> is empty, or exceeds the maximum length for the user name (usually 256 characters).- or -<paramref name="username" /> contains commas.- or -The user name is mapped to the userPrincipalName attribute and the <paramref name="username" /> parameter contains backslashes.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="username" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetUser(System.String,System.Boolean)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
    </member>
    <member name="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetUserNameByEmail(System.String)">
      <summary>Gets the user name associated with the specified e-mail address.</summary>
      <returns>The user name associated with the specified e-mail address.</returns>
      <param name="email">The e-mail address to search for.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="email" /> exceeds 256 characters- or -after trimming, <paramref name="email" /> is empty.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">More than one user exists in the data store with the same e-mail address and the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail" /> property value is true.</exception>
      <exception cref="T:System.InvalidOperationException">The provider is not initialized.</exception>
    </member>
    <member name="M:System.Web.Security.ActiveDirectoryMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Initializes the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance with the property values from the application's configuration files. This method is not intended to be called from your code.</summary>
      <param name="name">The name of the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance to initialize.</param>
      <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> containing the names and values of the configuration options for the membership provider.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="config" /> is null.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">The applicationName attribute specified in the application configuration exceeds 256 characters.- or -The connectionStringName attribute is empty or does not exist in the application configuration.- or -The connection string specified in the connectionStringName attribute in the application configuration file is empty or does not exist.- or -The connectionProtection attribute is set to a value other than <see cref="F:System.Web.Security.ActiveDirectoryConnectionProtection.SignAndSeal" /> or <see cref="F:System.Web.Security.ActiveDirectoryConnectionProtection.None" /> in the application configuration file.- or -The connectionUsername attribute is specified in the application configuration file but its value is empty.- or -The connectionPassword attribute is specified in the application configuration file but its value is empty.- or -Either the connectionUsername attribute or the connectionPassword attribute is specified in the application configuration file, but not both.- or -The clientSearchTimeout attribute is specified but is not a positive integer.- or -The serverSearchTimeout attribute is specified but is not a positive integer.- or -The enableSearchMethods attribute is specified, but is not a Boolean value.- or -The requiresUniqueEmail attribute is specified, but is not a Boolean value.- or -The enablePasswordReset attribute is specified, but is not a Boolean value.- or -The requiresQuestionAndAnswer attribute is specified, but is not a Boolean value.- or -The minRequiredPasswordLength attribute is specified and it is either negative or greater than 128.- or -The minRequiredNonalphanumericCharacters attribute is specified and it is either negative or greater than 128.- or -The regular expression specified in the passwordStrengthRegularExpression attribute in the application configuration file is not a valid regular expression- or -The attributeMapUsername attribute is specified, but it is an empty string.- or -The connectionString attribute does not begin with "LDAP".- or -The connection string specified in the connectionString attribute is invalid.- or -The connection string in the connectionString attribute specifies a server-less bind.- or -The <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> could not establish a connection with the domain or directory server.- or -The connectionProtection attribute is set to <see cref="F:System.Web.Security.ActiveDirectoryConnectionProtection.SignAndSeal" />, but neither an SSL nor a signed and sealed connection can be established with the server.- or -The connectionProtection attribute is set to <see cref="F:System.Web.Security.ActiveDirectoryConnectionProtection.None" /> but the connectionUsername and connectionPassword attributes are not set.- or -The connectionProtection attribute is set to <see cref="F:System.Web.Security.ActiveDirectoryConnectionProtection.SignAndSeal" /> but the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> could not establish an SSL connection with an ADAM server.- or -The connectionString attribute specifies either the global catalog (GC) or an SSL global catalog port.- or -The connectionString attribute specifies an Active Directory server or domain, but the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> could not retrieve the default naming context for the domain.- or -The connectionString attribute specifies an Active Directory server or domain, but the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> could not retrieve the default users container.- or -The connectionString attribute specifies an ADAM server, but it does not specify an application partition or container.- or -The connectionString attribute specifies an application partition or container, but the specified container does not exist.- or -The connectionString attribute specifies a container that is not allowed to contain user instances.An attribute mapping is specified but its value was empty.- or -An attribute mapping is specified twice.- or -An attribute mapping is specified but the attribute does not exist on the user instance.- or -An attribute mapping is specified but the directory attribute is not of the correct data type.- or -An attribute mapping is specified but the directory attribute is multi-valued.- or -The attributeMapUserName attribute is specified but was mapped to neither the sAMAccountName nor the userPrincipalName directory attribute when connecting to an Active Directory.- or -The attributeMapUserName attribute is specified but was not mapped to the userPrincipalName directory attribute when connecting to an ADAM server.- or -The enablePasswordReset attribute is true and the requiresQuestionAndAnswer attribute is false in the application configuration file.- or -The maxInvalidPasswordAttempts attribute was specified but is not a non-zero positive integer.- or -The passwordAttemptWindow attribute was specified but is not a non-zero positive integer.- or -The passwordAnswerAttemptLockoutDuration attribute was specified but is not a non-zero positive integer.- or -The enablePasswordReset attribute is true and any of the attributeMapFailedPasswordAnswerCount, attributeMapFailedPasswordAnswerTime, and attributeMapFailedPasswordAnswerLockoutTime attributes are empty.- or -The requiresQuestionAndAnswer attribute is true but either the attributeMapPasswordQuestion or the attributeMapPasswordAnswer attribute is empty.- or -An attribute specified in the application configuration file is not valid.</exception>
      <exception cref="T:System.Web.HttpException">The application is running in a hosted environment and the <see cref="T:System.Web.AspNetHostingPermissionLevel" /> is set to <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />.</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">An error occurred while querying the directory.</exception>
    </member>
    <member name="P:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts">
      <summary>Gets the number of failed answer attempts a user is allowed for the password-reset question.</summary>
      <returns>The number of failed password answer attempts a user is allowed before the account is locked. The default is 5. </returns>
      <exception cref="T:System.InvalidOperationException">An attempt to access the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts" /> property was made before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance was initialized.</exception>
    </member>
    <member name="P:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredNonAlphanumericCharacters">
      <summary>Gets the minimum number of special characters that must be present in a valid password.</summary>
      <returns>The minimum number of special characters that must be present in a valid password.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredNonAlphanumericCharacters" /> property is accessed before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
    </member>
    <member name="P:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredPasswordLength">
      <summary>Gets the minimum length required for a password.</summary>
      <returns>The minimum length required for a password. </returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredPasswordLength" /> property is accessed before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
    </member>
    <member name="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration">
      <summary>Get the length of time for which a user account is locked out after the user makes too many bad password-answer attempts.</summary>
      <returns>The time, in minutes, that a user is locked out after providing too many incorrect password answers.</returns>
      <exception cref="T:System.InvalidOperationException">An attempt to access the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration" /> property was made before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance was initialized.</exception>
    </member>
    <member name="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow">
      <summary>Gets the time window during which consecutive failed attempts to provide a valid password or a valid password answer are tracked.</summary>
      <returns>The time window, in minutes, during which consecutive failed attempts to provide a valid password or a valid password answer are tracked. The default is 10 minutes. If the interval between each failed attempt is greater than the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow" /> property setting, the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance treats each failed attempt as if it were the first failed attempt.</returns>
      <exception cref="T:System.InvalidOperationException">An attempt to access the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow" /> property was made before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance was initialized.</exception>
    </member>
    <member name="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordFormat">
      <summary>Gets a value indicating the format of passwords in the Active Directory data store.</summary>
      <returns>One of the <see cref="T:System.Web.Security.MembershipPasswordFormat" /> values. The <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordFormat" /> property always returns <see cref="F:System.Web.Security.MembershipPasswordFormat.Hashed" />.</returns>
    </member>
    <member name="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordStrengthRegularExpression">
      <summary>Gets the regular expression used to evaluate a password.</summary>
      <returns>A regular expression used to evaluate a password.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordStrengthRegularExpression" /> property is accessed before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
    </member>
    <member name="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer">
      <summary>Gets a value indicating whether the membership provider is configured to require a password question and answer when creating a user.</summary>
      <returns>true if the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> object is configured to require a password question and answer for a user; otherwise, false. The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">An attempt to access the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer" /> property was made before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance was initialized.</exception>
    </member>
    <member name="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail">
      <summary>Gets a value indicating whether an e-mail address stored on the Active Directory server must be unique.</summary>
      <returns>true if e-mail addresses must be unique; otherwise, false. The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">An attempt to access the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail" /> property was made before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance was initialized.</exception>
    </member>
    <member name="M:System.Web.Security.ActiveDirectoryMembershipProvider.ResetPassword(System.String,System.String)">
      <summary>Resets a user's password to a new, automatically generated password.</summary>
      <returns>The new password for the specified user.</returns>
      <param name="username">The user to reset the password for.</param>
      <param name="passwordAnswer">The password answer for the specified user.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.ResetPassword(System.String,System.String)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset" /> property value is false.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="passwordAnswer" /> is null.- or -<paramref name="username" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="passwordAnswer" /> is empty after trimming- or -<paramref name="passwordAnswer" /> exceeds 128 characters.- or -<paramref name="username" /> is empty, or exceeds the maximum length allowed for user names (usually 256 characters).- or -<paramref name="username" /> contains commas.- or -The user name is mapped to userPrincipalName but the <paramref name="username" /> parameter contains backslashes.</exception>
      <exception cref="T:System.Web.Security.MembershipPasswordException">The user is locked out because of too many bad logon attempts or too many attempted password-answer reset attempts.- or -<paramref name="passwordAnswer" /> does not match the stored password answer.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">The user specified in <paramref name="username" /> does not exist in the Active Directory data store.- or -A generated password does not pass a custom validation handler.- or -The generated password is not complex enough to satisfy custom password policies set on the Active Directory server.- or -A secure connection cannot be made to an Active Directory Application Mode server to set the new password.</exception>
      <exception cref="T:System.Exception">An unhandled exception occurred.</exception>
    </member>
    <member name="M:System.Web.Security.ActiveDirectoryMembershipProvider.UnlockUser(System.String)">
      <summary>Clears a lock so that a membership user can be validated.</summary>
      <returns>true if the membership user was successfully unlocked; otherwise, false. The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.UnlockUser(System.String)" /> method also returns false when the membership user is not found in the data store.</returns>
      <param name="username">The name of the membership user to clear the lock status for.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" /> is empty, or exceeds the maximum length allowed for user names (usually 256 characters).- or -<paramref name="username" /> contains commas.- or -The user name is mapped to userPrincipalName but the <paramref name="username" /> parameter contains backslashes.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="username" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.UnlockUser(System.String)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
    </member>
    <member name="M:System.Web.Security.ActiveDirectoryMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)">
      <summary>Updates information about a user in the Active Directory data store.</summary>
      <param name="user">A <see cref="T:System.Web.Security.MembershipUser" /> instance representing the user to update and the updated information for the user.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="user" /> is null.- or -The <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail" /> property is true but the email address from the supplied <see cref="T:System.Web.Security.MembershipUser" /> instance is null.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Web.Security.MembershipUser.Email" /> property is empty after trimming.- or -The <see cref="P:System.Web.Security.MembershipUser.Email" /> property exceeds 256 characters.- or -The <see cref="P:System.Web.Security.MembershipUser.Comment" /> property exceeds 1024 characters.- or -The <see cref="P:System.Web.Security.MembershipUser.Comment" /> property is empty.- or -The user name from the supplied <see cref="T:System.Web.Security.MembershipUser" /> instance is empty, or exceeds the maximum length allowed for user names (usually 256 characters).- or -The user name from the supplied <see cref="T:System.Web.Security.MembershipUser" /> instance contains commas.- or -The user name is mapped to userPrincipalName but the user name from the supplied <see cref="T:System.Web.Security.MembershipUser" /> instance contains backslashes.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">The specified user is not found in the Active Directory data store.- or -The <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail" /> property is true, and the new value of the <see cref="P:System.Web.Security.MembershipUser.Email" /> property duplicates an existing e-mail address.</exception>
    </member>
    <member name="M:System.Web.Security.ActiveDirectoryMembershipProvider.ValidateUser(System.String,System.String)">
      <summary>Verifies that the specified user name and password exist in the Active Directory data store.</summary>
      <returns>true if the specified <paramref name="username" /> and <paramref name="password" /> are valid; otherwise, false. If the user specified does not exist in the Active Directory data store, the <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.ValidateUser(System.String,System.String)" /> method returns false.</returns>
      <param name="username">The name of the user to validate.</param>
      <param name="password">The password for the specified user.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.ValidateUser(System.String,System.String)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
    </member>
    <member name="T:System.Web.Security.ActiveDirectoryMembershipUser">
      <summary>Exposes and updates membership user information stored in an Active Directory data store.</summary>
    </member>
    <member name="M:System.Web.Security.ActiveDirectoryMembershipUser.#ctor">
      <summary>Initializes a new instance of an <see cref="T:System.Web.Security.ActiveDirectoryMembershipUser" /> object for a class that inherits the <see cref="T:System.Web.Security.ActiveDirectoryMembershipUser" /> class.</summary>
    </member>
    <member name="M:System.Web.Security.ActiveDirectoryMembershipUser.#ctor(System.String,System.String,System.Object,System.String,System.String,System.String,System.Boolean,System.Boolean,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime)">
      <summary>Creates a new instance of the <see cref="T:System.Web.Security.ActiveDirectoryMembershipUser" /> class with the specified property values.</summary>
      <param name="providerName">The <see cref="P:System.Web.Security.MembershipUser.ProviderName" /> for the membership user.</param>
      <param name="name">The <see cref="P:System.Web.Security.MembershipUser.UserName" /> for the membership user.</param>
      <param name="providerUserKey">The <see cref="P:System.Web.Security.ActiveDirectoryMembershipUser.ProviderUserKey" /> for the membership user.</param>
      <param name="email">The <see cref="P:System.Web.Security.ActiveDirectoryMembershipUser.Email" /> address of the membership user.</param>
      <param name="passwordQuestion">The <see cref="P:System.Web.Security.MembershipUser.PasswordQuestion" /> for the membership user.</param>
      <param name="comment">The <see cref="P:System.Web.Security.ActiveDirectoryMembershipUser.Comment" /> for the membership user.</param>
      <param name="isApproved">The <see cref="P:System.Web.Security.ActiveDirectoryMembershipUser.IsApproved" /> value for the membership user.</param>
      <param name="isLockedOut">The <see cref="P:System.Web.Security.MembershipUser.IsLockedOut" /> value for the membership user.</param>
      <param name="creationDate">The <see cref="P:System.Web.Security.MembershipUser.CreationDate" /> for the membership user.</param>
      <param name="lastLoginDate">The <see cref="P:System.Web.Security.ActiveDirectoryMembershipUser.LastLoginDate" /> for the membership user. This parameter is not used.</param>
      <param name="lastActivityDate">The <see cref="P:System.Web.Security.ActiveDirectoryMembershipUser.LastActivityDate" /> for the membership user. This parameter is not used.</param>
      <param name="lastPasswordChangedDate">The <see cref="P:System.Web.Security.MembershipUser.LastPasswordChangedDate" /> for the membership user.</param>
      <param name="lastLockoutDate">The <see cref="P:System.Web.Security.MembershipUser.LastLockoutDate" /> for the membership user.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="providerUserKey" /> is not a <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.- or -<paramref name="providerName" /> is null and a provider is not set in the application's configuration file.</exception>
    </member>
    <member name="P:System.Web.Security.ActiveDirectoryMembershipUser.Comment">
      <summary>Gets or sets application-specific information for the membership user.</summary>
      <returns>Application-specific information for the Active Directory member stored in the Comment directory attribute.</returns>
    </member>
    <member name="P:System.Web.Security.ActiveDirectoryMembershipUser.Email">
      <summary>Gets or sets the e-mail address of the membership user.</summary>
      <returns>The e-mail address of the membership user.</returns>
    </member>
    <member name="P:System.Web.Security.ActiveDirectoryMembershipUser.IsApproved">
      <summary>Gets or sets a value that indicates whether the membership user can be authenticated.</summary>
      <returns>true if the user can be authenticated; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Security.ActiveDirectoryMembershipUser.LastActivityDate">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> exception in all cases</summary>
      <returns>Always throws a <see cref="T:System.NotSupportedException" /> exception.</returns>
      <exception cref="T:System.NotSupportedException">any attempt to get or set the <see cref="P:System.Web.Security.ActiveDirectoryMembershipUser.LastActivityDate" /> property.</exception>
    </member>
    <member name="P:System.Web.Security.ActiveDirectoryMembershipUser.LastLoginDate">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> exception in all cases.</summary>
      <returns>Always throws a <see cref="T:System.NotSupportedException" /> exception.</returns>
      <exception cref="T:System.NotSupportedException">any attempt to get or set the <see cref="P:System.Web.Security.ActiveDirectoryMembershipUser.LastLoginDate" />  property.</exception>
    </member>
    <member name="P:System.Web.Security.ActiveDirectoryMembershipUser.ProviderUserKey">
      <summary>Gets the user identifier from the Active Directory data store for the membership user.</summary>
      <returns>The user identifier from the Active Directory data store for the membership user.</returns>
    </member>
    <member name="T:System.Web.Security.AnonymousIdentificationEventArgs">
      <summary>Provides data for the AnonymousIdentification_Creating event. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Security.AnonymousIdentificationEventArgs.#ctor(System.Web.HttpContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Security.AnonymousIdentificationEventArgs" /> class.</summary>
      <param name="context">The context for the event.</param>
    </member>
    <member name="P:System.Web.Security.AnonymousIdentificationEventArgs.AnonymousID">
      <summary>Gets or sets the anonymous identifier for the user.</summary>
      <returns>The anonymous identifier for the user.</returns>
    </member>
    <member name="P:System.Web.Security.AnonymousIdentificationEventArgs.Context">
      <summary>Gets the <see cref="T:System.Web.HttpContext" /> object for the current HTTP request.</summary>
      <returns>The <see cref="T:System.Web.HttpContext" /> object for the current HTTP request.</returns>
    </member>
    <member name="T:System.Web.Security.AnonymousIdentificationEventHandler">
      <summary>Represents the method that handles the AnonymousIdentification_Creating event of a <see cref="T:System.Web.Security.AnonymousIdentificationModule" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Web.Security.AnonymousIdentificationEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Web.Security.AnonymousIdentificationModule">
      <summary>Manages anonymous identifiers for the ASP.NET application.</summary>
    </member>
    <member name="M:System.Web.Security.AnonymousIdentificationModule.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Web.Security.AnonymousIdentificationModule" /> class.</summary>
    </member>
    <member name="M:System.Web.Security.AnonymousIdentificationModule.ClearAnonymousIdentifier">
      <summary>Clears the anonymous cookie or identifier associated with a session.</summary>
      <exception cref="T:System.NotSupportedException">Calling <see cref="M:System.Web.Security.AnonymousIdentificationModule.ClearAnonymousIdentifier" /> when the anonymous identification is not enabled.-or-The user for the current request is anonymous.</exception>
    </member>
    <member name="E:System.Web.Security.AnonymousIdentificationModule.Creating">
      <summary>Occurs when a new anonymous identifier is created.</summary>
    </member>
    <member name="M:System.Web.Security.AnonymousIdentificationModule.Dispose">
      <summary>Releases all resources, other than memory, used by the <see cref="T:System.Web.Security.AnonymousIdentificationModule" />.</summary>
    </member>
    <member name="P:System.Web.Security.AnonymousIdentificationModule.Enabled">
      <summary>Gets a value indicating whether anonymous identification is enabled for the ASP.NET application.</summary>
      <returns>true if anonymous identification is enabled for the ASP.NET application; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Web.Security.AnonymousIdentificationModule.Init(System.Web.HttpApplication)">
      <summary>Initializes the <see cref="T:System.Web.Security.AnonymousIdentificationModule" /> object.</summary>
      <param name="app">The current <see cref="T:System.Web.HttpApplication" /> instance. </param>
    </member>
    <member name="T:System.Web.Security.AuthorizationStoreRoleProvider">
      <summary>Manages storage of role-membership information for an ASP.NET application in an authorization-manager policy store, either in an XML file, in an Active Directory, or on an Active Directory Application Mode server.</summary>
    </member>
    <member name="M:System.Web.Security.AuthorizationStoreRoleProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> class. </summary>
    </member>
    <member name="M:System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles(System.String[],System.String[])">
      <summary>Adds the specified user names to each of the specified roles.</summary>
      <param name="usernames">A string array of user names to be added to the specified roles. </param>
      <param name="roleNames">A string array of role names to add the specified user names to. </param>
      <exception cref="T:System.ArgumentNullException">One of the specified user names is null.-or-One of the specified role names is null.-or-<paramref name="usernames" /> is null.-or-<paramref name="roleNames" /> is null.</exception>
      <exception cref="T:System.ArgumentException">One of the specified user names is an empty string or contains a comma (,).-or-One of the specified role names is an empty string or contains a comma (,).-or-<paramref name="usernames" /> contains a duplicate element.-or-<paramref name="roleNames" /> contains a duplicate element.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">The configured applicationName was not found.-or-The configured scopeName was not found.-or-The authorization-manager runtime is not installed on the server.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The connectionStringName attribute references a connection string to a file that does not exist.</exception>
      <exception cref="T:System.Web.HttpException">The <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> instance is configured with a file-based policy store, and read access to the file is not allowed at the current trust level.</exception>
    </member>
    <member name="P:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName">
      <summary>Gets or sets the name of the authorization store application for which to store and retrieve role information.</summary>
      <returns>The name of the authorization store application for which to store and retrieve role information. The default is the <see cref="P:System.Web.HttpRequest.ApplicationPath" /> property value for the current <see cref="P:System.Web.HttpContext.Request" />.</returns>
      <exception cref="T:System.Configuration.Provider.ProviderException">An attempt was made to set the <see cref="P:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName" /> to a string that is longer than 256 characters.</exception>
    </member>
    <member name="P:System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval">
      <summary>Gets the number of minutes between refreshes of the cache of the policy-store data.</summary>
      <returns>The number of minutes between refreshes of cached policy-store data. The default is 60.</returns>
    </member>
    <member name="M:System.Web.Security.AuthorizationStoreRoleProvider.CreateRole(System.String)">
      <summary>Adds a new role to the role authorization-manager policy store.</summary>
      <param name="roleName">The name of the role to create. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="roleName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="roleName" /> is an empty string.-or-<paramref name="roleName" /> contains a comma.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">The configured applicationName was not found.-or-The configured scopeName was not found.-or-The authorization-manager runtime is not installed on the server.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The connectionStringName attribute references a connection string to a file that does not exist.</exception>
      <exception cref="T:System.Web.HttpException">The <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> instance is configured with a file-based policy store, and read access to the file is not allowed at the current trust level.</exception>
    </member>
    <member name="M:System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole(System.String,System.Boolean)">
      <summary>Removes a role from the authorization-manager policy store.</summary>
      <returns>true if the role was deleted; otherwise, false.</returns>
      <param name="roleName">The name of the role to delete.</param>
      <param name="throwOnPopulatedRole">If true, throws an exception if <paramref name="roleName" /> has one or more members.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="roleName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="roleName" /> is an empty string.-or-<paramref name="roleName" /> contains a comma.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">
        <paramref name="roleName" /> has one or more members and <paramref name="throwOnPopulatedRole" /> is true.-or-The configured applicationName was not found.-or-The configured scopeName was not found.-or-The authorization-manager runtime is not installed on the server.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The connectionStringName attribute references a connection string to a file that does not exist.</exception>
      <exception cref="T:System.Web.HttpException">The <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> instance is configured with a file-based policy store, and read access to the file is not allowed at the current trust level.</exception>
    </member>
    <member name="M:System.Web.Security.AuthorizationStoreRoleProvider.FindUsersInRole(System.String,System.String)">
      <summary>This method is not supported by the authorization store role provider.</summary>
      <returns>A string array containing the names of all the users whose user name matches <paramref name="usernameToMatch" /> and who are members of the specified role.</returns>
      <param name="roleName">The role to search in.</param>
      <param name="usernameToMatch">The user name to search for.</param>
      <exception cref="T:System.NotImplementedException">An unsupported method was called.</exception>
    </member>
    <member name="M:System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles">
      <summary>Gets a list of all the roles for the application.</summary>
      <returns>A string array containing the names of all the roles stored in the authorization-manager policy store for a particular application.</returns>
      <exception cref="T:System.Configuration.Provider.ProviderException">The configured applicationName was not found.-or-The configured scopeName was not found.-or-The authorization-manager runtime is not installed on the server.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The connectionStringName attribute references a connection string to a file that does not exist.</exception>
      <exception cref="T:System.Web.HttpException">The <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> instance is configured with a file-based policy store, and read access to the file is not allowed at the current trust level.</exception>
    </member>
    <member name="M:System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser(System.String)">
      <summary>Gets a list of the roles that a user is in.</summary>
      <returns>A string array containing the names of all the roles that the specified user is in.</returns>
      <param name="username">The user to return a list of roles for. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="username" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" /> contains a comma.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">The configured applicationName was not found.-or-The configured scopeName was not found.-or-The authorization-manager runtime is not installed on the server.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The connectionStringName attribute references a connection string to a file that does not exist.</exception>
      <exception cref="T:System.Web.HttpException">The <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> instance is configured with a file-based policy store, and read access to the file is not allowed at the current trust level.</exception>
    </member>
    <member name="M:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole(System.String)">
      <summary>Gets a list of users in the specified role.</summary>
      <returns>A string array containing the names of all the users who are members of the specified role.</returns>
      <param name="roleName">The name of the role to get the list of users for. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="roleName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="roleName" /> is an empty string.-or-<paramref name="roleName" /> contains a comma.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">The configured applicationName was not found.-or-The configured scopeName was not found.-or-The authorization-manager runtime is not installed on the server.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The connectionStringName attribute references a connection string to a file that does not exist.</exception>
      <exception cref="T:System.Web.HttpException">The <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> instance is configured with a file-based policy store, and read access to the file is not allowed at the current trust level.</exception>
    </member>
    <member name="M:System.Web.Security.AuthorizationStoreRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Initializes the authorization-manager role provider with the property values specified in the ASP.NET application's configuration file. This method is not intended to be used directly from your code.</summary>
      <param name="name">The name of the <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> instance to initialize.</param>
      <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains the names and values of configuration options for the role provider. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="config" /> is null.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">The connectionStringName attribute is empty or does not exist in the connectionStrings Element (ASP.NET Settings Schema) configuration section. -or-The configured applicationName is longer than 256 characters.-or- The configuration for this <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> instance contains an unrecognized attribute. </exception>
      <exception cref="T:System.Web.HttpException">The ASP.NET application is not running at <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" /> trust or higher. </exception>
    </member>
    <member name="M:System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole(System.String,System.String)">
      <summary>Gets a value indicating whether the specified user is in the specified role.</summary>
      <returns>true if the specified user name is in the specified role; otherwise, false.</returns>
      <param name="username">The user name to search for. </param>
      <param name="roleName">The role to search in. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="username" /> is null.-or<paramref name="roleName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="roleName" /> is an empty string.-or-<paramref name="roleName" /> contains a comma. -or-<paramref name="username" /> contains a comma.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">The configured applicationName was not found.-or-The configured scopeName was not found.-or-The authorization-manager runtime is not installed on the server.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The connectionStringName attribute references a connection string to a file that does not exist.</exception>
      <exception cref="T:System.Web.HttpException">The <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> instance is configured with a file-based policy store, and read access to the file is not allowed at the current trust level.</exception>
    </member>
    <member name="M:System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])">
      <summary>Removes the specified user names from the specified roles.</summary>
      <param name="userNames">A string array of user names to be removed from the specified roles. </param>
      <param name="roleNames">A string array of role names to remove the specified user names from. </param>
      <exception cref="T:System.ArgumentNullException">One of the specified user names is null.-or-One of the specified role names is null.-or-<paramref name="userNames" /> is null.-or-<paramref name="roleNames" /> is null.</exception>
      <exception cref="T:System.ArgumentException">One of the specified user names is an empty string or contains a comma.-or-One of the specified role names is an empty string or contains a comma.-or-<paramref name="userNames" /> contains a duplicate element.-or-<paramref name="roleNames" /> contains a duplicate element.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">The configured applicationName was not found.-or-The configured scopeName was not found.-or-The authorization-manager runtime is not installed on the server.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The connectionStringName attribute references a connection string to a file that does not exist.</exception>
      <exception cref="T:System.Web.HttpException">The <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> instance is configured with a file-based policy store, and read access to the file is not allowed at the current trust level.</exception>
    </member>
    <member name="M:System.Web.Security.AuthorizationStoreRoleProvider.RoleExists(System.String)">
      <summary>Gets a value indicating whether the specified role name already exists in the authorization-manager policy store.</summary>
      <returns>true if the role name already exists in the authorization-manager policy store; otherwise, false.</returns>
      <param name="roleName">The name of the role to search for in the authorization-manager policy store. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="roleName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="roleName" /> is an empty string.-or-<paramref name="roleName" /> contains a comma.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">The configured applicationName was not found.-or-The configured scopeName was not found.-or-The authorization-manager runtime is not installed on the server.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The connectionStringName attribute references a connection string to a file that does not exist.</exception>
      <exception cref="T:System.Web.HttpException">The <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> instance is configured with a file-based policy store, and read access to the file is not allowed at the current trust level.</exception>
    </member>
    <member name="P:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName">
      <summary>Gets or sets the scope name for the authorization store.</summary>
      <returns>The scope name for the authorization store.</returns>
    </member>
    <member name="T:System.Web.Security.CookieProtection">
      <summary>Describes how information in a cookie is protected.</summary>
    </member>
    <member name="F:System.Web.Security.CookieProtection.None">
      <summary>Do not protect information in the cookie. Information in the cookie is stored in clear text and not validated when sent back to the server.</summary>
    </member>
    <member name="F:System.Web.Security.CookieProtection.Validation">
      <summary>Ensure that the information in the cookie has not been altered before being sent back to the server.</summary>
    </member>
    <member name="F:System.Web.Security.CookieProtection.Encryption">
      <summary>Encrypt the information in the cookie.</summary>
    </member>
    <member name="F:System.Web.Security.CookieProtection.All">
      <summary>Use both <see cref="F:System.Web.Security.CookieProtection.Validation" /> and <see cref="F:System.Web.Security.CookieProtection.Encryption" /> to protect the information in the cookie.</summary>
    </member>
    <member name="T:System.Web.Security.DefaultAuthenticationEventArgs">
      <summary>Provides data for the DefaultAuthentication_OnAuthenticate event. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Security.DefaultAuthenticationEventArgs.#ctor(System.Web.HttpContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Security.DefaultAuthenticationEventArgs" /> class.</summary>
      <param name="context">The context for the event. </param>
    </member>
    <member name="P:System.Web.Security.DefaultAuthenticationEventArgs.Context">
      <summary>Gets the <see cref="T:System.Web.HttpContext" /> object for the current HTTP request.</summary>
      <returns>The <see cref="T:System.Web.HttpContext" /> object for the current HTTP request.</returns>
    </member>
    <member name="T:System.Web.Security.DefaultAuthenticationEventHandler">
      <summary>Represents the method that handles the DefaultAuthentication_OnAuthenticate event of a <see cref="T:System.Web.Security.DefaultAuthenticationModule" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Web.Security.DefaultAuthenticationEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Web.Security.DefaultAuthenticationModule">
      <summary>Ensures that an authentication object is present in the context. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Security.DefaultAuthenticationModule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Security.DefaultAuthenticationModule" /> class. </summary>
    </member>
    <member name="E:System.Web.Security.DefaultAuthenticationModule.Authenticate">
      <summary>Occurs after the request has been authenticated.</summary>
    </member>
    <member name="M:System.Web.Security.DefaultAuthenticationModule.Dispose">
      <summary>Releases all resources, other than memory, used by the <see cref="T:System.Web.Security.DefaultAuthenticationModule" />.</summary>
    </member>
    <member name="M:System.Web.Security.DefaultAuthenticationModule.Init(System.Web.HttpApplication)">
      <summary>Initializes the <see cref="T:System.Web.Security.DefaultAuthenticationModule" /> object.</summary>
      <param name="app">The current <see cref="T:System.Web.HttpApplication" /> instance. </param>
    </member>
    <member name="T:System.Web.Security.FileAuthorizationModule">
      <summary>Verifies that the user has permission to access the file requested. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Security.FileAuthorizationModule.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Web.Security.FileAuthorizationModule" /> class.</summary>
    </member>
    <member name="M:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(System.String,System.IntPtr,System.String)">
      <summary>Determines whether the user has access to the requested file.</summary>
      <returns>true if the current Windows user represented by <paramref name="token" /> has access to the file using the specified HTTP verb or if the <see cref="T:System.Web.Security.FileAuthorizationModule" /> module is not defined in the application's configuration file; otherwise, false.</returns>
      <param name="virtualPath">The virtual path to the file.</param>
      <param name="token">A Windows access token representing the user.</param>
      <param name="verb">The HTTP verb used to make the request.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="virtualPath" /> is null.-or-<paramref name="token" /> is <see cref="F:System.IntPtr.Zero" />.-or-<paramref name="verb" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="virtualPath" /> is not in the application directory structure of the Web application.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file specified by <paramref name="virtualPath" /> does not exist.</exception>
    </member>
    <member name="M:System.Web.Security.FileAuthorizationModule.Dispose">
      <summary>Releases all resources, other than memory, used by the <see cref="T:System.Web.Security.FileAuthorizationModule" />.</summary>
    </member>
    <member name="M:System.Web.Security.FileAuthorizationModule.Init(System.Web.HttpApplication)">
      <summary>Initializes the <see cref="T:System.Web.Security.FileAuthorizationModule" /> object.</summary>
      <param name="app">The current <see cref="T:System.Web.HttpApplication" /> instance. </param>
    </member>
    <member name="T:System.Web.Security.FormsAuthentication">
      <summary>Manages forms-authentication services for Web applications. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Security.FormsAuthentication.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Security.FormsAuthentication" /> class. </summary>
    </member>
    <member name="M:System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)">
      <summary>Validates a user name and password against credentials stored in the configuration file for an application.</summary>
      <returns>true if the user name and password are valid; otherwise, false.</returns>
      <param name="name">The user name.</param>
      <param name="password">The password for the user. </param>
    </member>
    <member name="P:System.Web.Security.FormsAuthentication.CookieDomain">
      <summary>Gets the value of the domain of the forms-authentication cookie.</summary>
      <returns>The <see cref="P:System.Web.HttpCookie.Domain" /> of the forms-authentication cookie. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.Security.FormsAuthentication.CookieMode">
      <summary>Gets a value that indicates whether the application is configured for cookieless forms authentication.</summary>
      <returns>One of the <see cref="T:System.Web.HttpCookieMode" /> values that indicates whether the application is configured for cookieless forms authentication. The default is <see cref="F:System.Web.HttpCookieMode.UseDeviceProfile" />.</returns>
    </member>
    <member name="P:System.Web.Security.FormsAuthentication.CookiesSupported">
      <summary>Gets a value that indicates whether the application is configured to support cookieless forms authentication.</summary>
      <returns>true if the application is configured to support cookieless forms authentication; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.Security.FormsAuthentication.Decrypt(System.String)">
      <summary>Creates a <see cref="T:System.Web.Security.FormsAuthenticationTicket" /> object based on the encrypted forms-authentication ticket passed to the method.</summary>
      <returns>A <see cref="T:System.Web.Security.FormsAuthenticationTicket" /> object. If the <paramref name="encryptedTicket" /> parameter is not a valid ticket, null is returned.</returns>
      <param name="encryptedTicket">The encrypted authentication ticket. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="encryptedTicket" /> is null.- or -<paramref name="encryptedTicket" /> is an empty string ("").- or -<paramref name="encryptedTicket" /> is of an invalid format. </exception>
    </member>
    <member name="P:System.Web.Security.FormsAuthentication.DefaultUrl">
      <summary>Gets the URL that the <see cref="T:System.Web.Security.FormsAuthentication" /> class will redirect to if no redirect URL is specified.</summary>
      <returns>The URL that the <see cref="T:System.Web.Security.FormsAuthentication" /> class will redirect to if no redirect URL is specified. The default is "default.aspx."</returns>
    </member>
    <member name="P:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects">
      <summary>Gets a value indicating whether authenticated users can be redirected to URLs in other Web applications.</summary>
      <returns>true if authenticated users can be redirected to URLs in other Web applications; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)">
      <summary>Enables forms authentication using the specified configuration data.</summary>
      <param name="configurationData">The configuration data to use for forms authentication.</param>
      <exception cref="T:System.InvalidOperationException">The method was called from the Application_Start method in the Global.asax file, or after that method.</exception>
    </member>
    <member name="M:System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)">
      <summary>Creates a string containing an encrypted forms-authentication ticket suitable for use in an HTTP cookie.</summary>
      <returns>A string containing an encrypted forms-authentication ticket.</returns>
      <param name="ticket">The <see cref="T:System.Web.Security.FormsAuthenticationTicket" /> object with which to create the encrypted forms-authentication ticket. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ticket" /> is null.</exception>
    </member>
    <member name="P:System.Web.Security.FormsAuthentication.FormsCookieName">
      <summary>Gets the name of the cookie used to store the forms-authentication ticket.</summary>
      <returns>The name of the cookie used to store the forms-authentication ticket. The default is ".ASPXAUTH".</returns>
    </member>
    <member name="P:System.Web.Security.FormsAuthentication.FormsCookiePath">
      <summary>Gets the path for the forms-authentication cookie.</summary>
      <returns>The path of the cookie where the forms-authentication ticket information is stored. The default is "/".</returns>
    </member>
    <member name="M:System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)">
      <summary>Creates an authentication cookie for a given user name. This does not set the cookie as part of the outgoing response, so that an application can have more control over how the cookie is issued.</summary>
      <returns>An <see cref="T:System.Web.HttpCookie" /> that contains encrypted forms-authentication ticket information. The default value for the <see cref="P:System.Web.Security.FormsAuthentication.FormsCookiePath" /> property is used.</returns>
      <param name="userName">The name of the authenticated user. </param>
      <param name="createPersistentCookie">true to create a durable cookie (one that is saved across browser sessions); otherwise, false. </param>
    </member>
    <member name="M:System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)">
      <summary>Creates an authentication cookie for a given user name. This does not set the cookie as part of the outgoing response.</summary>
      <returns>An <see cref="T:System.Web.HttpCookie" /> that contains encrypted forms-authentication ticket information.</returns>
      <param name="userName">The name of the authenticated user. </param>
      <param name="createPersistentCookie">true to create a durable cookie (one that is saved across browser sessions); otherwise, false. </param>
      <param name="strCookiePath">The <see cref="P:System.Web.HttpCookie.Path" /> of the authentication cookie. </param>
    </member>
    <member name="M:System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)">
      <summary>Returns the redirect URL for the original request that caused the redirect to the login page.</summary>
      <returns>A string that contains the redirect URL.</returns>
      <param name="userName">The name of the authenticated user. </param>
      <param name="createPersistentCookie">This parameter is ignored.</param>
    </member>
    <member name="M:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)">
      <summary>Produces a hash password suitable for storing in a configuration file based on the specified password and hash algorithm.</summary>
      <returns>The hashed password.</returns>
      <param name="password">The password to hash. </param>
      <param name="passwordFormat">The hash algorithm to use. <paramref name="passwordFormat" /> is a String that represents one of the <see cref="T:System.Web.Configuration.FormsAuthPasswordFormat" /> enumeration values.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="password" /> is null-or-<paramref name="passwordFormat" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="passwordFormat" /> is not a valid <see cref="T:System.Web.Configuration.FormsAuthPasswordFormat" /> value.</exception>
    </member>
    <member name="M:System.Web.Security.FormsAuthentication.Initialize">
      <summary>Initializes the <see cref="T:System.Web.Security.FormsAuthentication" /> object based on the configuration settings for the application.</summary>
    </member>
    <member name="P:System.Web.Security.FormsAuthentication.IsEnabled">
      <summary>Gets a value that indicates whether forms authentication is enabled.</summary>
      <returns>true if forms authentication is enabled; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Security.FormsAuthentication.LoginUrl">
      <summary>Gets the URL for the login page that the <see cref="T:System.Web.Security.FormsAuthentication" /> class will redirect to.</summary>
      <returns>The URL for the login page that the <see cref="T:System.Web.Security.FormsAuthentication" /> class will redirect to. The default is "login.aspx."</returns>
    </member>
    <member name="M:System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)">
      <summary>Redirects an authenticated user back to the originally requested URL or the default URL.</summary>
      <param name="userName">The authenticated user name. </param>
      <param name="createPersistentCookie">true to create a durable cookie (one that is saved across browser sessions); otherwise, false. </param>
      <exception cref="T:System.Web.HttpException">The return URL specified in the query string contains a protocol other than HTTP: or HTTPS:.</exception>
    </member>
    <member name="M:System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)">
      <summary>Redirects an authenticated user back to the originally requested URL or the default URL using the specified cookie path for the forms-authentication cookie.</summary>
      <param name="userName">The authenticated user name. </param>
      <param name="createPersistentCookie">true to create a durable cookie (one that is saved across browser sessions); otherwise, false. </param>
      <param name="strCookiePath">The cookie path for the forms-authentication ticket. </param>
      <exception cref="T:System.Web.HttpException">The return URL specified in the query string contains a protocol other than HTTP: or HTTPS:.</exception>
    </member>
    <member name="M:System.Web.Security.FormsAuthentication.RedirectToLoginPage">
      <summary>Redirects the browser to the login URL.</summary>
    </member>
    <member name="M:System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)">
      <summary>Redirects the browser to the login URL with the specified query string.</summary>
      <param name="extraQueryString">The query string to include with the redirect URL.</param>
    </member>
    <member name="M:System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)">
      <summary>Conditionally updates the issue date and time and expiration date and time for a <see cref="T:System.Web.Security.FormsAuthenticationTicket" />.</summary>
      <returns>The updated <see cref="T:System.Web.Security.FormsAuthenticationTicket" />.</returns>
      <param name="tOld">The forms-authentication ticket to update.</param>
    </member>
    <member name="P:System.Web.Security.FormsAuthentication.RequireSSL">
      <summary>Gets a value indicating whether the forms-authentication cookie requires SSL in order to be returned to the server.</summary>
      <returns>true if SSL is required to return the forms-authentication cookie to the server; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)">
      <summary>Creates an authentication ticket for the supplied user name and adds it to the cookies collection of the response, or to the URL if you are using cookieless authentication.</summary>
      <param name="userName">The name of an authenticated user. This does not have to map to a Windows account. </param>
      <param name="createPersistentCookie">true to create a persistent cookie (one that is saved across browser sessions); otherwise, false. </param>
      <exception cref="T:System.Web.HttpException">
        <see cref="P:System.Web.Security.FormsAuthentication.RequireSSL" /> is true and <see cref="P:System.Web.HttpRequest.IsSecureConnection" /> is false.</exception>
    </member>
    <member name="M:System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)">
      <summary>Creates an authentication ticket for the supplied user name and adds it to the cookies collection of the response, using the supplied cookie path, or using the URL if you are using cookieless authentication.</summary>
      <param name="userName">The name of an authenticated user. </param>
      <param name="createPersistentCookie">true to create a durable cookie (one that is saved across browser sessions); otherwise, false. </param>
      <param name="strCookiePath">The cookie path for the forms-authentication ticket.</param>
      <exception cref="T:System.Web.HttpException">
        <see cref="P:System.Web.Security.FormsAuthentication.RequireSSL" /> is true and <see cref="P:System.Web.HttpRequest.IsSecureConnection" /> is false.</exception>
    </member>
    <member name="M:System.Web.Security.FormsAuthentication.SignOut">
      <summary>Removes the forms-authentication ticket from the browser.</summary>
    </member>
    <member name="P:System.Web.Security.FormsAuthentication.SlidingExpiration">
      <summary>Gets a value indicating whether sliding expiration is enabled.</summary>
      <returns>true if sliding expiration is enabled; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Security.FormsAuthentication.TicketCompatibilityMode">
      <summary>Gets the time-ticket compatibility mode that is specified in the configuration files. </summary>
      <returns>The ticket compatibility mode that is specified in the configuration files.</returns>
    </member>
    <member name="P:System.Web.Security.FormsAuthentication.Timeout">
      <summary>Gets the time-out value, in minutes, that is specified in the configuration file.</summary>
      <returns>The time-out value in minutes that is specified in the configuration file. The default is 30 minutes.</returns>
    </member>
    <member name="T:System.Web.Security.FormsAuthenticationEventArgs">
      <summary>Provides data for the FormsAuthentication_OnAuthenticate event. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Security.FormsAuthenticationEventArgs.#ctor(System.Web.HttpContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Security.FormsAuthenticationEventArgs" /> class.</summary>
      <param name="context">The context for the event. </param>
    </member>
    <member name="P:System.Web.Security.FormsAuthenticationEventArgs.Context">
      <summary>Gets the <see cref="T:System.Web.HttpContext" /> object for the current HTTP request.</summary>
      <returns>The <see cref="T:System.Web.HttpContext" /> object for the current HTTP request.</returns>
    </member>
    <member name="P:System.Web.Security.FormsAuthenticationEventArgs.User">
      <summary>Gets or sets the <see cref="T:System.Security.Principal.IPrincipal" /> object to be associated with the current request.</summary>
      <returns>The <see cref="T:System.Security.Principal.IPrincipal" /> object to be associated with the current request.</returns>
    </member>
    <member name="T:System.Web.Security.FormsAuthenticationEventHandler">
      <summary>Represents the method that handles the FormsAuthentication_OnAuthenticate event of a <see cref="T:System.Web.Security.FormsAuthenticationModule" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Web.Security.FormsAuthenticationEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Web.Security.FormsAuthenticationModule">
      <summary>Sets the identity of the user for an ASP.NET application when forms authentication is enabled. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Security.FormsAuthenticationModule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Security.FormsAuthenticationModule" /> class. </summary>
    </member>
    <member name="E:System.Web.Security.FormsAuthenticationModule.Authenticate">
      <summary>Occurs when the application authenticates the current request.</summary>
    </member>
    <member name="M:System.Web.Security.FormsAuthenticationModule.Dispose">
      <summary>Releases all resources, other than memory, used by the <see cref="T:System.Web.Security.FormsAuthenticationModule" />.</summary>
    </member>
    <member name="M:System.Web.Security.FormsAuthenticationModule.Init(System.Web.HttpApplication)">
      <summary>Initializes the <see cref="T:System.Web.Security.FormsAuthenticationModule" /> object.</summary>
      <param name="app">The current <see cref="T:System.Web.HttpApplication" /> instance. </param>
    </member>
    <member name="T:System.Web.Security.FormsAuthenticationTicket">
      <summary>Provides access to properties and values of the ticket used with forms authentication to identify users. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Security.FormsAuthenticationTicket.#ctor(System.Int32,System.String,System.DateTime,System.DateTime,System.Boolean,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Security.FormsAuthenticationTicket" /> class with cookie name, version, expiration date, issue date, persistence, and user-specific data. The cookie path is set to the default value established in the application's configuration file.</summary>
      <param name="version">The version number of the ticket.</param>
      <param name="name">The user name associated with the ticket.</param>
      <param name="issueDate">The local date and time at which the ticket was issued.</param>
      <param name="expiration">The local date and time at which the ticket expires.</param>
      <param name="isPersistent">true if the ticket will be stored in a persistent cookie (saved across browser sessions); otherwise, false. If the ticket is stored in the URL, this value is ignored.</param>
      <param name="userData">The user-specific data to be stored with the ticket.</param>
    </member>
    <member name="M:System.Web.Security.FormsAuthenticationTicket.#ctor(System.Int32,System.String,System.DateTime,System.DateTime,System.Boolean,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Security.FormsAuthenticationTicket" /> class with cookie name, version, directory path, issue date, expiration date, persistence, and user-defined data.</summary>
      <param name="version">The version number of the ticket. </param>
      <param name="name">The user name associated with the ticket. </param>
      <param name="issueDate">The local date and time at which the ticket was issued. </param>
      <param name="expiration">The local date and time at which the ticket expires. </param>
      <param name="isPersistent">true if the ticket will be stored in a persistent cookie (saved across browser sessions); otherwise, false. If the ticket is stored in the URL, this value is ignored.</param>
      <param name="userData">The user-specific data to be stored with the ticket. </param>
      <param name="cookiePath">The path for the ticket when stored in a cookie. </param>
    </member>
    <member name="M:System.Web.Security.FormsAuthenticationTicket.#ctor(System.String,System.Boolean,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Security.FormsAuthenticationTicket" /> class using a cookie name and expiration information.</summary>
      <param name="name">The user name associated with the ticket.</param>
      <param name="isPersistent">true if the ticket will be stored in a persistent cookie (saved across browser sessions); otherwise, false. If the ticket is stored in the URL, this value is ignored.</param>
      <param name="timeout">The time, in minutes, for which the authentication ticket is valid.</param>
    </member>
    <member name="P:System.Web.Security.FormsAuthenticationTicket.CookiePath">
      <summary>Gets the cookie path for the forms-authentication ticket.</summary>
      <returns>The cookie path for the forms-authentication ticket.</returns>
    </member>
    <member name="P:System.Web.Security.FormsAuthenticationTicket.Expiration">
      <summary>Gets the local date and time at which the forms-authentication ticket expires.</summary>
      <returns>The <see cref="T:System.DateTime" /> at which the forms-authentication ticket expires.</returns>
    </member>
    <member name="P:System.Web.Security.FormsAuthenticationTicket.Expired">
      <summary>Gets a value indicating whether the forms-authentication ticket has expired.</summary>
      <returns>true if the forms-authentication ticket has expired; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Security.FormsAuthenticationTicket.IsPersistent">
      <summary>Gets a value indicating whether the cookie that contains the forms-authentication ticket information is persistent.</summary>
      <returns>true if a durable cookie (a cookie that is saved across browser sessions) was issued; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Security.FormsAuthenticationTicket.IssueDate">
      <summary>Gets the local date and time at which the forms-authentication ticket was originally issued.</summary>
      <returns>The <see cref="T:System.DateTime" /> when the forms-authentication ticket was originally issued.</returns>
    </member>
    <member name="P:System.Web.Security.FormsAuthenticationTicket.Name">
      <summary>Gets the user name associated with the forms-authentication ticket.</summary>
      <returns>The user name associated with the forms-authentication ticket.</returns>
    </member>
    <member name="P:System.Web.Security.FormsAuthenticationTicket.UserData">
      <summary>Gets a user-specific string stored with the ticket.</summary>
      <returns>A user-specific string stored with the ticket. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.Security.FormsAuthenticationTicket.Version">
      <summary>Gets the version number of the ticket.</summary>
      <returns>The version number of the ticket. The default is 2.</returns>
    </member>
    <member name="T:System.Web.Security.FormsIdentity">
      <summary>Represents a user identity authenticated using forms authentication. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Security.FormsIdentity.#ctor(System.Web.Security.FormsAuthenticationTicket)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Security.FormsIdentity" /> class.</summary>
      <param name="ticket">The authentication ticket upon which this identity is based. </param>
    </member>
    <member name="P:System.Web.Security.FormsIdentity.AuthenticationType">
      <summary>Gets the type of authenticated identity.</summary>
      <returns>The type of authenticated identity. This property always returns "Forms".</returns>
    </member>
    <member name="P:System.Web.Security.FormsIdentity.IsAuthenticated">
      <summary>Gets a value that indicates whether authentication took place.</summary>
      <returns>This property always returns true.</returns>
    </member>
    <member name="P:System.Web.Security.FormsIdentity.Name">
      <summary>Gets the user name of the forms identity.</summary>
      <returns>The user name of the forms identity.</returns>
    </member>
    <member name="P:System.Web.Security.FormsIdentity.Ticket">
      <summary>Gets the <see cref="T:System.Web.Security.FormsAuthenticationTicket" /> for the forms-authentication user identity.</summary>
      <returns>The <see cref="T:System.Web.Security.FormsAuthenticationTicket" /> supplied to the <see cref="M:System.Web.Security.FormsIdentity.#ctor(System.Web.Security.FormsAuthenticationTicket)" /> constructor for the current object.</returns>
    </member>
    <member name="T:System.Web.Security.MachineKey">
      <summary>Provides a way to encrypt or hash data by using the same algorithms and key information that are used for ASP.NET forms authentication cookies.</summary>
    </member>
    <member name="M:System.Web.Security.MachineKey.Decode(System.String,System.Web.Security.MachineKeyProtection)">
      <summary>Decodes encrypted or hashed data by removing the <see cref="T:System.Web.Security.MachineKeyProtection" /> object that was used to encode the data.</summary>
      <returns>The hexadecimal representation of the encrypted or hashed data.</returns>
      <param name="encodedData">The encrypted data to decode. The encrypted data is represented as a hexadecimal string which typically is the value that is returned from a call to the <see cref="M:System.Web.Security.MachineKey.Encode(System.Byte[],System.Web.Security.MachineKeyProtection)" /> method.For example, a binary serialized object creates a byte array. If the data is a string, use the <see cref="M:System.Text.UnicodeEncoding.GetBytes(System.String)" /> method.</param>
      <param name="protectionOption">The protection option to use. Indicates whether the data parameter should be encrypted or should be hashed, or whether both cryptographic operations should be applied. </param>
    </member>
    <member name="M:System.Web.Security.MachineKey.Encode(System.Byte[],System.Web.Security.MachineKeyProtection)">
      <summary>Encrypts or hashes data by using the specified cryptographic operations.</summary>
      <returns>The hexadecimal representation of the encrypted or hashed data.</returns>
      <param name="data">The data to encrypt. To create a byte array from a string, use the <see cref="M:System.Text.UnicodeEncoding.GetBytes(System.String)" /> method.For example, a binary serialized object creates a byte array. If the data is a string, use the <see cref="M:System.Text.UnicodeEncoding.GetBytes(System.String)" /> method. </param>
      <param name="protectionOption">The protection option to use. Indicates whether the data parameter should be encrypted or should be hashed, or if both cryptographic operations should be applied.</param>
    </member>
    <member name="T:System.Web.Security.MachineKeyProtection">
      <summary>Specifies values that indicates whether data should be encrypted, hashed, or encrypted and hashed.</summary>
    </member>
    <member name="F:System.Web.Security.MachineKeyProtection.All">
      <summary>Specifies that data should be encrypted and hashed.</summary>
    </member>
    <member name="F:System.Web.Security.MachineKeyProtection.Encryption">
      <summary>Specifies that data should be encrypted.</summary>
    </member>
    <member name="F:System.Web.Security.MachineKeyProtection.Validation">
      <summary>Specifies that data should be hashed by using a keyed hash algorithm.</summary>
    </member>
    <member name="T:System.Web.Security.Membership">
      <summary>Validates user credentials and manages user settings. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Web.Security.Membership.ApplicationName">
      <summary>Gets or sets the name of the application.</summary>
      <returns>The name of the application.</returns>
    </member>
    <member name="M:System.Web.Security.Membership.CreateUser(System.String,System.String)">
      <summary>Adds a new user to the data store.</summary>
      <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object for the newly created user.</returns>
      <param name="username">The user name for the new user. </param>
      <param name="password">The password for the new user. </param>
      <exception cref="T:System.Web.Security.MembershipCreateUserException">The user was not created. Check the <see cref="P:System.Web.Security.MembershipCreateUserException.StatusCode" /> property for a <see cref="T:System.Web.Security.MembershipCreateStatus" /> value. </exception>
    </member>
    <member name="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)">
      <summary>Adds a new user with a specified e-mail address to the data store.</summary>
      <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object for the newly created user.</returns>
      <param name="username">The user name for the new user. </param>
      <param name="password">The password for the new user. </param>
      <param name="email">The e-mail address for the new user. </param>
      <exception cref="T:System.Web.Security.MembershipCreateUserException">The user was not created. Check the <see cref="P:System.Web.Security.MembershipCreateUserException.StatusCode" /> property for a <see cref="T:System.Web.Security.MembershipCreateStatus" /> value. </exception>
    </member>
    <member name="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)">
      <summary>Adds a new user with specified property values and a unique identifier to the data store and returns a status parameter indicating that the user was successfully created or the reason the user creation failed.</summary>
      <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object for the newly created user. If no user was created, this method returns null.</returns>
      <param name="username">The user name for the new user.</param>
      <param name="password">The password for the new user.</param>
      <param name="email">The e-mail address for the new user.</param>
      <param name="passwordQuestion">The password-question value for the membership user.</param>
      <param name="passwordAnswer">The password-answer value for the membership user.</param>
      <param name="isApproved">A Boolean that indicates whether the new user is approved to log on.</param>
      <param name="providerUserKey">The user identifier for the user that should be stored in the membership data store.</param>
      <param name="status">A <see cref="T:System.Web.Security.MembershipCreateStatus" /> indicating that the user was created successfully or the reason creation failed.</param>
    </member>
    <member name="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)">
      <summary>Adds a new user with specified property values to the data store and returns a status parameter indicating that the user was successfully created or the reason the user creation failed.</summary>
      <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object for the newly created user. If no user was created, this method returns null.</returns>
      <param name="username">The user name for the new user. </param>
      <param name="password">The password for the new user. </param>
      <param name="email">The e-mail address for the new user. </param>
      <param name="passwordQuestion">The password-question value for the membership user.</param>
      <param name="passwordAnswer">The password-answer value for the membership user.</param>
      <param name="isApproved">A Boolean that indicates whether the new user is approved to log on.</param>
      <param name="status">A <see cref="T:System.Web.Security.MembershipCreateStatus" /> indicating that the user was created successfully or the reason that creation failed. </param>
    </member>
    <member name="M:System.Web.Security.Membership.DeleteUser(System.String)">
      <summary>Deletes a user and any related user data from the database.</summary>
      <returns>true if the user was deleted; otherwise, false.</returns>
      <param name="username">The name of the user to delete. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" /> is an empty string or contains a comma (,). </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="username" /> is null.</exception>
    </member>
    <member name="M:System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)">
      <summary>Deletes a user from the database.</summary>
      <returns>true if the user was deleted; otherwise, false.</returns>
      <param name="username">The name of the user to delete.</param>
      <param name="deleteAllRelatedData">true to delete data related to the user from the database; false to leave data related to the user in the database.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" /> is an empty string or contains a comma (,). </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="username" /> is null.</exception>
    </member>
    <member name="P:System.Web.Security.Membership.EnablePasswordReset">
      <summary>Gets a value indicating whether the current membership provider is configured to allow users to reset their passwords.</summary>
      <returns>true if the membership provider supports password reset; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Security.Membership.EnablePasswordRetrieval">
      <summary>Gets a value indicating whether the current membership provider is configured to allow users to retrieve their passwords.</summary>
      <returns>true if the membership provider supports password retrieval; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.Security.Membership.FindUsersByEmail(System.String)">
      <summary>Gets a collection of membership users where the e-mail address contains the specified e-mail address to match.</summary>
      <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> that contains all users that match the <paramref name="emailToMatch" /> parameter.Leading and trailing spaces are trimmed from the <paramref name="emailToMatch" /> parameter value.</returns>
      <param name="emailToMatch">The e-mail address to search for.</param>
    </member>
    <member name="M:System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)">
      <summary>Gets a collection of membership users, in a page of data, where the e-mail address contains the specified e-mail address to match.</summary>
      <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> that contains a page of <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> objects beginning at the page specified by <paramref name="pageIndex" />.</returns>
      <param name="emailToMatch">The e-mail address to search for.</param>
      <param name="pageIndex">The index of the page of results to return. <paramref name="pageIndex" /> is zero-based.</param>
      <param name="pageSize">The size of the page of results to return.</param>
      <param name="totalRecords">The total number of matched users.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="pageIndex" /> is less than zero.-or-<paramref name="pageSize" /> is less than 1.</exception>
    </member>
    <member name="M:System.Web.Security.Membership.FindUsersByName(System.String)">
      <summary>Gets a collection of membership users where the user name contains the specified user name to match.</summary>
      <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> that contains all users that match the <paramref name="usernameToMatch" /> parameter.Leading and trailing spaces are trimmed from the <paramref name="usernameToMatch" /> parameter value.</returns>
      <param name="usernameToMatch">The user name to search for.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="usernameToMatch" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="usernameToMatch" /> is null.</exception>
    </member>
    <member name="M:System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)">
      <summary>Gets a collection of membership users, in a page of data, where the user name contains the specified user name to match.</summary>
      <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> that contains a page of <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> objects beginning at the page specified by <paramref name="pageIndex" />.Leading and trailing spaces are trimmed from the <paramref name="usernameToMatch" /> parameter value.</returns>
      <param name="usernameToMatch">The user name to search for.</param>
      <param name="pageIndex">The index of the page of results to return. <paramref name="pageIndex" /> is zero-based.</param>
      <param name="pageSize">The size of the page of results to return.</param>
      <param name="totalRecords">The total number of matched users.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="usernameToMatch" /> is an empty string.-or-<paramref name="pageIndex" /> is less than zero.-or-<paramref name="pageSize" /> is less than 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="usernameToMatch" /> is null.</exception>
    </member>
    <member name="M:System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)">
      <summary>Generates a random password of the specified length.</summary>
      <returns>A random password of the specified length.</returns>
      <param name="length">The number of characters in the generated password. The length must be between 1 and 128 characters. </param>
      <param name="numberOfNonAlphanumericCharacters">The minimum number of punctuation characters in the generated password.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="length" /> is less than 1 or greater than 128 -or-<paramref name="numberOfNonAlphanumericCharacters" /> is less than 0 or greater than <paramref name="length" />. </exception>
    </member>
    <member name="M:System.Web.Security.Membership.GetAllUsers">
      <summary>Gets a collection of all the users in the database.</summary>
      <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> of <see cref="T:System.Web.Security.MembershipUser" /> objects representing all of the users in the database.</returns>
    </member>
    <member name="M:System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)">
      <summary>Gets a collection of all the users in the database in pages of data.</summary>
      <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> of <see cref="T:System.Web.Security.MembershipUser" /> objects representing all the users in the database for the configured applicationName.</returns>
      <param name="pageIndex">The index of the page of results to return. Use 0 to indicate the first page.</param>
      <param name="pageSize">The size of the page of results to return. <paramref name="pageIndex" /> is zero-based.</param>
      <param name="totalRecords">The total number of users.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="pageIndex" /> is less than zero.-or-<paramref name="pageSize" /> is less than 1.</exception>
    </member>
    <member name="M:System.Web.Security.Membership.GetNumberOfUsersOnline">
      <summary>Gets the number of users currently accessing an application.</summary>
      <returns>The number of users currently accessing an application.</returns>
    </member>
    <member name="M:System.Web.Security.Membership.GetUser">
      <summary>Gets the information from the data source and updates the last-activity date/time stamp for the current logged-on membership user.</summary>
      <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the current logged-on user.</returns>
    </member>
    <member name="M:System.Web.Security.Membership.GetUser(System.Boolean)">
      <summary>Gets the information from the data source for the current logged-on membership user. Updates the last-activity date/time stamp for the current logged-on membership user, if specified.</summary>
      <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the current logged-on user.</returns>
      <param name="userIsOnline">If true, updates the last-activity date/time stamp for the specified user. </param>
    </member>
    <member name="M:System.Web.Security.Membership.GetUser(System.Object)">
      <summary>Gets the information from the data source for the membership user associated with the specified unique identifier.</summary>
      <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the user associated with the specified unique identifier.</returns>
      <param name="providerUserKey">The unique user identifier from the membership data source for the user.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="providerUserKey" /> is null. </exception>
    </member>
    <member name="M:System.Web.Security.Membership.GetUser(System.Object,System.Boolean)">
      <summary>Gets the information from the data source for the membership user associated with the specified unique identifier. Updates the last-activity date/time stamp for the user, if specified.</summary>
      <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the user associated with the specified unique identifier.</returns>
      <param name="providerUserKey">The unique user identifier from the membership data source for the user.</param>
      <param name="userIsOnline">If true, updates the last-activity date/time stamp for the specified user.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="providerUserKey" /> is null. </exception>
    </member>
    <member name="M:System.Web.Security.Membership.GetUser(System.String)">
      <summary>Gets the information from the data source for the specified membership user.</summary>
      <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the specified user.</returns>
      <param name="username">The name of the user to retrieve.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" /> contains a comma (,). </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="username" /> is null.</exception>
    </member>
    <member name="M:System.Web.Security.Membership.GetUser(System.String,System.Boolean)">
      <summary>Gets the information from the data source for the specified membership user. Updates the last-activity date/time stamp for the user, if specified.</summary>
      <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the specified user.</returns>
      <param name="username">The name of the user to retrieve. </param>
      <param name="userIsOnline">If true, updates the last-activity date/time stamp for the specified user. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" /> contains a comma (,). </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="username" /> is null.</exception>
    </member>
    <member name="M:System.Web.Security.Membership.GetUserNameByEmail(System.String)">
      <summary>Gets a user name where the e-mail address for the user matches the specified e-mail address.</summary>
      <returns>The user name where the e-mail address for the user matches the specified e-mail address. If no match is found, null is returned.</returns>
      <param name="emailToMatch">The e-mail address to search for. </param>
    </member>
    <member name="P:System.Web.Security.Membership.HashAlgorithmType">
      <summary>The identifier of the algorithm used to hash passwords.</summary>
      <returns>The identifier of the algorithm used to hash passwords, or blank to use the default hash algorithm.</returns>
    </member>
    <member name="P:System.Web.Security.Membership.MaxInvalidPasswordAttempts">
      <summary>Gets the number of invalid password or password-answer attempts allowed before the membership user is locked out.</summary>
      <returns>The number of invalid password or password-answer attempts allowed before the membership user is locked out.</returns>
    </member>
    <member name="P:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters">
      <summary>Gets the minimum number of special characters that must be present in a valid password.</summary>
      <returns>The minimum number of special characters that must be present in a valid password.</returns>
    </member>
    <member name="P:System.Web.Security.Membership.MinRequiredPasswordLength">
      <summary>Gets the minimum length required for a password.</summary>
      <returns>The minimum length required for a password. </returns>
    </member>
    <member name="P:System.Web.Security.Membership.PasswordAttemptWindow">
      <summary>Gets the time window between which consecutive failed attempts to provide a valid password or password answer are tracked.</summary>
      <returns>The time window, in minutes, during which consecutive failed attempts to provide a valid password or password answer are tracked. The default is 10 minutes. If the interval between the current failed attempt and the last failed attempt is greater than the <see cref="P:System.Web.Security.Membership.PasswordAttemptWindow" /> property setting, each failed attempt is treated as if it were the first failed attempt.</returns>
    </member>
    <member name="P:System.Web.Security.Membership.PasswordStrengthRegularExpression">
      <summary>Gets the regular expression used to evaluate a password.</summary>
      <returns>A regular expression used to evaluate a password.</returns>
    </member>
    <member name="P:System.Web.Security.Membership.Provider">
      <summary>Gets a reference to the default membership provider for the application.</summary>
      <returns>The default membership provider for the application exposed using the <see cref="T:System.Web.Security.MembershipProvider" /> abstract base class.</returns>
    </member>
    <member name="P:System.Web.Security.Membership.Providers">
      <summary>Gets a collection of the membership providers for the ASP.NET application.</summary>
      <returns>A <see cref="T:System.Web.Security.MembershipProviderCollection" /> of the membership providers configured for the ASP.NET application.</returns>
    </member>
    <member name="P:System.Web.Security.Membership.RequiresQuestionAndAnswer">
      <summary>Gets a value indicating whether the default membership provider requires the user to answer a password question for password reset and retrieval.</summary>
      <returns>true if a password answer is required for password reset and retrieval; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)">
      <summary>Updates the database with the information for the specified user.</summary>
      <param name="user">A <see cref="T:System.Web.Security.MembershipUser" /> object that represents the user to be updated and the updated information for the user. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="user" /> is null.</exception>
    </member>
    <member name="P:System.Web.Security.Membership.UserIsOnlineTimeWindow">
      <summary>Specifies the number of minutes after the last-activity date/time stamp for a user during which the user is considered online.</summary>
      <returns>The number of minutes after the last-activity date/time stamp for a user during which the user is considered online.</returns>
    </member>
    <member name="M:System.Web.Security.Membership.ValidateUser(System.String,System.String)">
      <summary>Verifies that the supplied user name and password are valid.</summary>
      <returns>true if the supplied user name and password are valid; otherwise, false.</returns>
      <param name="username">The name of the user to be validated. </param>
      <param name="password">The password for the specified user. </param>
    </member>
    <member name="E:System.Web.Security.Membership.ValidatingPassword">
      <summary>Occurs when a user is created, a password is changed, or a password is reset.</summary>
    </member>
    <member name="T:System.Web.Security.PassportAuthenticationEventArgs">
      <summary>The event argument passed to the <see cref="E:System.Web.Security.PassportAuthenticationModule.Authenticate" /> event by a <see cref="T:System.Web.Security.PassportAuthenticationModule" />. Since there is already an identity at this point, this is useful mainly for attaching a custom <see cref="T:System.Security.Principal.IPrincipal" /> object to the context using the supplied identity. This class is deprecated.</summary>
    </member>
    <member name="M:System.Web.Security.PassportAuthenticationEventArgs.#ctor(System.Web.Security.PassportIdentity,System.Web.HttpContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Security.PassportAuthenticationEventArgs" /> class. This class is deprecated.</summary>
      <param name="identity">The identity object </param>
      <param name="context">The context for the event. </param>
    </member>
    <member name="P:System.Web.Security.PassportAuthenticationEventArgs.Context">
      <summary>Gets the <see cref="T:System.Web.HttpContext" /> object for the current HTTP request. This class is deprecated.</summary>
      <returns>The <see cref="T:System.Web.HttpContext" /> object for the current HTTP request.</returns>
    </member>
    <member name="P:System.Web.Security.PassportAuthenticationEventArgs.Identity">
      <summary>Gets an authenticated Passport identity. This class is deprecated.</summary>
      <returns>An authenticated Passport identity.</returns>
    </member>
    <member name="P:System.Web.Security.PassportAuthenticationEventArgs.User">
      <summary>Gets or sets the <see cref="T:System.Security.Principal.IPrincipal" /> object to be associated with the request. This class is deprecated.</summary>
      <returns>The <see cref="T:System.Security.Principal.IPrincipal" /> object to be associated with the request.</returns>
    </member>
    <member name="T:System.Web.Security.PassportAuthenticationEventHandler">
      <summary>Represents the method that handles the PassportAuthentication_OnAuthenticate event of a <see cref="T:System.Web.Security.PassportAuthenticationModule" />. This class is deprecated.</summary>
      <param name="sender">The object that raised the event. </param>
      <param name="e">A <see cref="T:System.Web.Security.PassportAuthenticationEventArgs" /> object that contains the event data. </param>
    </member>
    <member name="T:System.Web.Security.PassportAuthenticationModule">
      <summary>Provides a wrapper around Passport Authentication services. This class cannot be inherited. This class is deprecated.</summary>
    </member>
    <member name="M:System.Web.Security.PassportAuthenticationModule.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.Security.PassportAuthenticationModule" /> class. This class is deprecated.</summary>
    </member>
    <member name="E:System.Web.Security.PassportAuthenticationModule.Authenticate">
      <summary>Raised during authentication. This is a Global.asax event that must be named PassportAuthentication_OnAuthenticate. This class is deprecated</summary>
    </member>
    <member name="M:System.Web.Security.PassportAuthenticationModule.Dispose">
      <summary>Disposes of the module derived from <see cref="T:System.Web.IHttpModule" /> when called by the <see cref="T:System.Web.HttpRuntime" />. This class is deprecated.</summary>
    </member>
    <member name="M:System.Web.Security.PassportAuthenticationModule.Init(System.Web.HttpApplication)">
      <summary>Initializes the module derived from <see cref="T:System.Web.IHttpModule" /> when called by the <see cref="T:System.Web.HttpRuntime" />. This class is deprecated</summary>
      <param name="app">The <see cref="T:System.Web.HttpApplication" /> module </param>
    </member>
    <member name="T:System.Web.Security.PassportIdentity">
      <summary>Provides a class to be used by <see cref="T:System.Web.Security.PassportAuthenticationModule" />. It provides a way for an application to access the <see cref="M:System.Web.Security.PassportIdentity.Ticket(System.String)" /> method. This class cannot be inherited. This class is deprecated.</summary>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Security.PassportIdentity" /> class. This class is deprecated.</summary>
    </member>
    <member name="P:System.Web.Security.PassportIdentity.AuthenticationType">
      <summary>Gets the type of authentication used to identify the user. This class is deprecated.</summary>
      <returns>The string "Passport".</returns>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.AuthUrl">
      <summary>Returns a string containing the Login server URL for a member, as well as with optional information sent to the Login server in the query string. This class is deprecated.</summary>
      <returns>The Login server URL for a member, as well as optional information sent to the Login server in the query string.</returns>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.AuthUrl(System.String)">
      <summary>Returns a string containing the Login server URL for a member, along with optional information sent to the Login server in the query string. This class is deprecated.</summary>
      <returns>The Login server URL for a member, as well as the optional information sent to the Login server in the query string.</returns>
      <param name="strReturnUrl">The URL of the location that the Login server should redirect to after logon is complete. Pass null to indicate that Passport should use the default value. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.AuthUrl(System.String,System.Int32,System.Boolean,System.String,System.Int32,System.String,System.Int32,System.Boolean)">
      <summary>Returns the authentication server URL for a member. This class is deprecated.</summary>
      <returns>The Login server URL for a member, as well as the optional information sent to the Login server in the query string.</returns>
      <param name="strReturnUrl">Sets the URL of the location that the Login server should redirect to after logon is complete. Pass null to indicate that Passport should use the default value. </param>
      <param name="iTimeWindow">Specifies the interval during which members must have last logged on. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="fForceLogin">Determines how the <paramref name="iTimeWindow" /> parameter will be used. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="strCoBrandedArgs">Specifies variables to be appended to the URL of the Cobranding Template script page that was specified at initial participant registration. Pass null to indicate that Passport should use the default value. </param>
      <param name="iLangID">Specifies the language in which the required domain authority page should be displayed. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="strNameSpace">Specifies the domain in which the Passport should be created. Pass null to indicate that Passport should use the default value. </param>
      <param name="iKPP">Specifies data collection policies for purposes of Children's Online Privacy Protection Act (COPPA) compliance. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="bUseSecureAuth">Declares whether the actual logon UI should be served HTTPS from the Passport domain authority. Pass -1 to indicate that Passport should use the default value. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.AuthUrl(System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.Int32,System.Int32)">
      <summary>Returns a string containing the Login server URL for a member, along with the optional information sent to the Login server in the query string. This class is deprecated.</summary>
      <returns>The Login server URL for a member, as well as the optional information sent to the Login server in the query string.</returns>
      <param name="strReturnUrl">Sets the URL of the location that the Login server should redirect to after logon is complete. Pass null to indicate that Passport should use the default value. </param>
      <param name="iTimeWindow">Specifies the interval during which members must have last logged on. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="iForceLogin">Determines how the <paramref name="iTimeWindow" /> parameter will be used. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="strCoBrandedArgs">Specifies variables to be appended to the URL of the Cobranding Template script page that was specified at initial participant registration. Pass null to indicate that Passport should use the default value. </param>
      <param name="iLangID">Specifies the language in which the required domain authority page should be displayed. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="strNameSpace">Specifies the domain in which the Passport should be created. Pass null to indicate that Passport should use the default value. </param>
      <param name="iKPP">Specifies data collection policies for purposes of Children's Online Privacy Protection Act (COPPA) compliance. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="iUseSecureAuth">Declares whether the actual Login UI should be served HTTPS from the Passport domain authority. Pass -1 to indicate that Passport should use the default value. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.AuthUrl2">
      <summary>Returns a string containing the Login server URL for a member, as well as optional information sent to the Login server in the query string. This class is deprecated.</summary>
      <returns>The Login server URL for a member, as well as optional information sent to the Login server in the query string.</returns>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.AuthUrl2(System.String)">
      <summary>Returns a string containing the Login server URL for a member, as well as optional information sent to the Login server in the query string. This class is deprecated.</summary>
      <returns>The Login server URL for a member, as well as the optional information sent to the Login server in the query string.</returns>
      <param name="strReturnUrl">The URL of the location that the Login server should redirect to after logon is complete. Pass null to indicate that Passport should use the default value. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.AuthUrl2(System.String,System.Int32,System.Boolean,System.String,System.Int32,System.String,System.Int32,System.Boolean)">
      <summary>Returns a string containing the Login server URL for a member, as well as the optional information sent to the Login server in the query string. This class is deprecated.</summary>
      <returns>The Login server URL for a member, as well as the optional information sent to the Login server in the query string.</returns>
      <param name="strReturnUrl">Sets the URL of the location that the Login server should redirect to after logon is complete. Pass null to indicate that Passport should use the default value. </param>
      <param name="iTimeWindow">Specifies the interval during which members must have last logged on. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="fForceLogin">Determines how the <paramref name="iTimeWindow" /> parameter will be used. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="strCoBrandedArgs">Specifies variables to be appended to the URL of the Cobranding Template script page that was specified at initial participant registration. Pass null to indicate that Passport should use the default value. </param>
      <param name="iLangID">Specifies the language in which the required domain authority page should be displayed. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="strNameSpace">Specifies the domain in which the Passport should be created. Pass null to indicate that Passport should use the default value. </param>
      <param name="iKPP">Specifies data collection policies for purposes of Children's Online Privacy Protection Act (COPPA) compliance. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="bUseSecureAuth">Declares whether the actual logon UI should be served HTTPS from the Passport domain authority. Pass -1 to indicate that Passport should use the default value. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.AuthUrl2(System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.Int32,System.Int32)">
      <summary>Retrieves a string containing the Login server URL for a member, as well as the optional information sent to the Login server in the query string. This class is deprecated.</summary>
      <returns>The Login server URL for a member, as well as the optional information sent to the Login server in the query string.</returns>
      <param name="strReturnUrl">Sets the URL of the location that the Login server should redirect to after logon is complete. Pass null to indicate that Passport should use the default value. </param>
      <param name="iTimeWindow">Specifies the interval during which members must have last logged on. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="iForceLogin">Determines how the <paramref name="iTimeWindow" /> parameter will be used. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="strCoBrandedArgs">Specifies variables to be appended to the URL of the Cobranding Template script page that was specified at initial participant registration. Pass null to indicate that Passport should use the default value. </param>
      <param name="iLangID">Specifies the language in which the required domain authority page should be displayed. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="strNameSpace">Specifies the domain in which the Passport should be created. Pass null to indicate that Passport should use the default value. </param>
      <param name="iKPP">Specifies data collection policies for purposes of Children's Online Privacy Protection Act (COPPA) compliance. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="iUseSecureAuth">Declares whether the actual logon UI should be served HTTPS from the Passport domain authority. Pass -1 to indicate that Passport should use the default value. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.Compress(System.String)">
      <summary>Compresses data. This class is deprecated.</summary>
      <returns>The compressed data.</returns>
      <param name="strData">The data to be compressed. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.CryptIsValid">
      <summary>Gets the state of a flag indicating if the Passport Manager is in a valid state for encryption. This class is deprecated.</summary>
      <returns>true if the key used for encryption and decryption is valid and if the Passport Manager is in a valid state for encryption; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.CryptPutHost(System.String)">
      <summary>Sets the key being used for Passport encryption and decryption. This class is deprecated.</summary>
      <returns>An integer result code.</returns>
      <param name="strHost">The host name or IP address. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.CryptPutSite(System.String)">
      <summary>Sets the key being used for Passport encryption and decryption by referring to the site-name label assigned to that key when the key was first installed. This class is deprecated.</summary>
      <returns>An integer result code.</returns>
      <param name="strSite">The site label. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.Decompress(System.String)">
      <summary>Decompresses data that has been compressed by the <see cref="M:System.Web.Security.PassportIdentity.Compress(System.String)" /> method. This class is deprecated.</summary>
      <returns>The decompressed data.</returns>
      <param name="strData">The data to be decompressed. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.Decrypt(System.String)">
      <summary>Decrypts data using the Passport participant key for the current site. This class is deprecated.</summary>
      <returns>Data decrypted using the Passport participant key for the current site.</returns>
      <param name="strData">The data to be decrypted. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.Encrypt(System.String)">
      <summary>Encrypts data using the Passport participant key for the current site. This class is deprecated.</summary>
      <returns>Data encrypted using the Passport participant key for the current site.</returns>
      <param name="strData">The data to be encrypted. </param>
    </member>
    <member name="P:System.Web.Security.PassportIdentity.Error">
      <summary>Gets a value indicating the error state associated with the current Passport ticket. This class is deprecated.</summary>
      <returns>A 32-bit signed integer indicating the current error state.</returns>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.GetCurrentConfig(System.String)">
      <summary>Gets the contents of a registry key under the HKLM\SW\Microsoft\Passport hive. This class is deprecated.</summary>
      <returns>The contents of the registry key.</returns>
      <param name="strAttribute">The name of the registry key. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.GetDomainAttribute(System.String,System.Int32,System.String)">
      <summary>Provides information for a Passport domain by querying the Passport manager for the requested domain attribute. This class is deprecated.</summary>
      <returns>A string representing the requested attribute.</returns>
      <param name="strAttribute">The name of the attribute value to retrieve. </param>
      <param name="iLCID">The language in which various Passport network pages should be displayed to the member. </param>
      <param name="strDomain">The domain authority name to query for an attribute. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.GetDomainFromMemberName(System.String)">
      <summary>Returns the Passport domain from the member name string. This class is deprecated.</summary>
      <returns>The Passport domain for the specified member.</returns>
      <param name="strMemberName">The name of the Passport member </param>
    </member>
    <member name="P:System.Web.Security.PassportIdentity.GetFromNetworkServer">
      <summary>Gets information on a Passport server connection and query string. This class is deprecated.</summary>
      <returns>true if a connection is coming back from the Passport server (logon, update, or registration) and if the Passport data contained on the query string is valid; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.GetIsAuthenticated(System.Int32,System.Boolean,System.Boolean)">
      <summary>Indicates whether the user is authenticated by a central site responsible for Passport authentication. This class is deprecated.</summary>
      <returns>true if the user is authenticated by a Passport authority; otherwise, false.</returns>
      <param name="iTimeWindow">Specifies the interval during which members must have last logged on to the calling domain. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="bForceLogin">Determines how the <paramref name="iTimeWindow" /> parameter is used. </param>
      <param name="bCheckSecure">Enables checking for an encrypted logon. SSL sign-in is not available as an option in the current version Login servers, so the value passed in is ignored at the server. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.GetIsAuthenticated(System.Int32,System.Int32,System.Int32)">
      <summary>Indicates whether the user is authenticated by a Passport authority. This class is deprecated.</summary>
      <returns>true if the user is authenticated by a central site responsible for Passport authentication; otherwise, false.</returns>
      <param name="iTimeWindow">Specifies the interval during which members must have last logged on to the calling domain. A value of -1 indicates that Passport should use the default value, 0 represents false, and 1 represents true. </param>
      <param name="iForceLogin">Determines how the <paramref name="iTimeWindow" /> parameter is used. A value of -1 indicates that Passport should use the default value, 0 represents false, and 1 represents true. </param>
      <param name="iCheckSecure">Enables checking for an encrypted logon. A value of -1 indicates that Passport should use the default value, 0 represents false, and 1 represents true.A value of 10 or 100 for Passport version 2.1 Login servers specify SecureLevel 10 or 100 for the Passport Manager IsAuthenticated method. See the Passport version 2.1 SDK documentation for more information.SSL sign-in is not available as an option for Passport version 1.4 Login servers. The value of <paramref name="iCheckSecure" /> is ignored at the server. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.GetLoginChallenge">
      <summary>Logs the user on, either by generating a 302 redirect URL or initiating a Passport-aware client authentication exchange. This class is deprecated.</summary>
      <returns>A string representing the Passport Login Challenge.</returns>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.GetLoginChallenge(System.String)">
      <summary>Logs the user on by outputting the appropriate headers to either a 302 redirect URL or the initiation of a Passport-aware client authentication exchange. This class is deprecated.</summary>
      <returns>A string representing the Passport Login Challenge.</returns>
      <param name="strReturnUrl">See Passport documentation for IPassportManager3.GetLoginChallenge. Pass null to indicate that Passport should use the default value. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.GetLoginChallenge(System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Object)">
      <summary>Logs the user on, either by generating a 302 redirect URL or initiating a Passport-aware client authentication exchange. This class is deprecated.</summary>
      <returns>A string representing the Passport Login Challenge.</returns>
      <param name="szRetURL">See Passport documentation for IPassportManager3.GetLoginChallenge. Pass null to indicate that Passport should use the default value. </param>
      <param name="iTimeWindow">See Passport documentation for IPassportManager3.GetLoginChallenge. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="fForceLogin">See Passport documentation for IPassportManager3.GetLoginChallenge. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="szCOBrandArgs">See Passport documentation for IPassportManager3.GetLoginChallenge. Pass null to indicate that Passport should use the default value. </param>
      <param name="iLangID">See Passport documentation for IPassportManager3.GetLoginChallenge. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="strNameSpace">See Passport documentation for IPassportManager3.GetLoginChallenge. Pass null to indicate that Passport should use the default value. </param>
      <param name="iKPP">See Passport documentation for IPassportManager3.GetLoginChallenge. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="iUseSecureAuth">See Passport documentation for IPassportManager3.GetLoginChallenge. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="oExtraParams">See Passport documentation for IPassportManager3.GetLoginChallenge. Pass null to indicate that Passport should use the default value. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.GetOption(System.String)">
      <summary>Gets a specific Passport logon option. This class is deprecated.</summary>
      <returns>The Passport logon option <paramref name="strOpt" />.</returns>
      <param name="strOpt">Logon option to query. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.GetProfileObject(System.String)">
      <summary>Returns Passport profile information for the specified profile attribute. This class is deprecated.</summary>
      <returns>The value of the Passport profile attribute specified by the <paramref name="strProfileName" /> parameter.</returns>
      <param name="strProfileName">The Passport profile attribute to return. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.HasFlag(System.Int32)">
      <summary>Indicates whether a given flag is set in this user's profile. This class is deprecated.</summary>
      <returns>true if the Passport profile flag <paramref name="iFlagMask" /> is set in this user's profile; otherwise, false.</returns>
      <param name="iFlagMask">The Passport profile flag to query. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.HasProfile(System.String)">
      <summary>Indicates whether a given profile attribute exists in this user's profile. This class is deprecated.</summary>
      <returns>true if the profile attribute <paramref name="strProfile" /> exists in this user's profile; otherwise, false.</returns>
      <param name="strProfile">The Passport profile attribute to query. </param>
    </member>
    <member name="P:System.Web.Security.PassportIdentity.HasSavedPassword">
      <summary>Gets information on whether the Passport member's password was saved. This class is deprecated.</summary>
      <returns>true if the Passport member's ticket indicates that the password was saved on the Passport logon page the last time the ticket was refreshed; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Security.PassportIdentity.HasTicket">
      <summary>Gets a value indicating whether the query string includes a Passport ticket as a cookie. This class is deprecated.</summary>
      <returns>true if the query string includes a Passport ticket as a cookie; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.HaveConsent(System.Boolean,System.Boolean)">
      <summary>Indicates whether full consent is granted in this user's profile. This class is deprecated.</summary>
      <returns>true if full consent is granted in this user's profile.</returns>
      <param name="bNeedFullConsent">true to indicate full consent is required for Passport Authentication; otherwise, false. </param>
      <param name="bNeedBirthdate">true to indicate the user's birthdate is required for Passport Authentication; otherwise, false. </param>
    </member>
    <member name="P:System.Web.Security.PassportIdentity.HexPUID">
      <summary>Gets the Passport Unique Identifier (PUID) for the currently authenticated user, in hexadecimal form. This class is deprecated.</summary>
      <returns>The PUID for the currently authenticated user, in hexadecimal form.</returns>
    </member>
    <member name="P:System.Web.Security.PassportIdentity.IsAuthenticated">
      <summary>Gets a value indicating whether the user is authenticated against a Passport authority. This class is deprecated.</summary>
      <returns>true if the user is authenticated against a central site responsible for Passport authentication; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Security.PassportIdentity.Item(System.String)">
      <summary>Gets Passport profile attributes. This class is deprecated.</summary>
      <returns>The Passport profile attribute.</returns>
      <param name="strProfileName">The Passport profile attribute to return. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.LoginUser">
      <summary>Logs the user on, either by generating a 302 redirect URL or initiating a Passport-aware client authentication exchange. This class is deprecated.</summary>
      <returns>An integer result code.</returns>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.LoginUser(System.String)">
      <summary>Logs the user on, either by generating a 302 redirect URL or initiating a Passport-aware client authentication exchange. This class is deprecated.</summary>
      <returns>An integer result code.</returns>
      <param name="strReturnUrl">The URL to which the Login server should redirect users after sign in is complete. Pass null to indicate that Passport should use the default value. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.LoginUser(System.String,System.Int32,System.Boolean,System.String,System.Int32,System.String,System.Int32,System.Boolean,System.Object)">
      <summary>Logs the user on, either by generating a 302 redirect URL or by initiating a Passport-aware client authentication exchange. This class is deprecated.</summary>
      <returns>An integer result code.</returns>
      <param name="szRetURL">The URL to which the Login server should redirect users after sign in is complete. Pass null to indicate that Passport should use the default value. </param>
      <param name="iTimeWindow">The time value, in seconds. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="fForceLogin">true to have the Login server compare the <paramref name="iTimeWindow" /> parameter against the time since the user last signed in; false to have the Login server compare <paramref name="iTimeWindow" /> against the last time the Ticket was refreshed. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="szCOBrandArgs">A string specifying variables to be appended as query string variables to the URL of the participant's Cobranding Template script page. Pass null to indicate that Passport should use the default value. </param>
      <param name="iLangID">A locale identifier (LCID) specifying the language in which the Login page should be displayed. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="strNameSpace">A domain name space to which you want to direct users without Passports to register. The specified name space must appear as a "domain name" entry in the Partner.xml Component Configuration Document (CCD). The typical default name space is "passport.com". Pass null to indicate that Passport should use the default value. </param>
      <param name="iKPP">Pass -1 to indicate that Passport should use the default value. This parameter is only relevant when implementing Kids Passport service; however, Kids Passport service cannot currently support use of this method. </param>
      <param name="fUseSecureAuth">SSL sign-in is not available as an option in the current version Login servers. Passport Manager methods include SSL sign-in parameters and they may be required for syntax, but they are currently ignored at the server. Check the Passport Web site for updates on the status of SSL sign-in. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="oExtraParams">Name-value pairs to be inserted directly into the challenge authentication header, specifically for Passport-aware authentication interaction. Pass null to indicate that Passport should use the default value. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.LoginUser(System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Object)">
      <summary>Logs the user on, either by generating a 302 redirect URL or initiating a Passport-aware client authentication exchange. This class is deprecated.</summary>
      <returns>An integer result code.</returns>
      <param name="szRetURL">The URL to which the Login server should redirect users after sign in is complete. Pass null to indicate that Passport should use the default value. </param>
      <param name="iTimeWindow">The time value, in seconds. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="fForceLogin">Indicates whether the Login server should compare the <paramref name="iTimeWindow" /> parameter against the time since the user last signed in or against the last time the Ticket was refreshed. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="szCOBrandArgs">A string specifying variables to be appended as query string variables to the URL of the participant's Cobranding Template script page. Pass null to indicate that Passport should use the default value. </param>
      <param name="iLangID">A locale identifier (LCID) specifying the language in which the Login page should be displayed. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="strNameSpace">A domain name space to which you want to direct users without Passports to register. The specified name space must appear as a "domain name" entry in the Partner.xml Component Configuration Document (CCD). The typical default name space is "passport.com". Pass null to indicate that Passport should use the default value. </param>
      <param name="iKPP">Pass -1 to indicate that Passport should use the default value. This parameter is only relevant when implementing Kids Passport service; however, Kids Passport service cannot currently support use of this method. </param>
      <param name="iUseSecureAuth">SSL sign-in is not available as an option in the current version Login servers. Passport Manager methods include SSL sign-in parameters and they may be required for syntax, but they are currently ignored at the server. Check the Passport Web site for updates on the status of SSL sign-in. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="oExtraParams">Name-value pairs to be inserted directly into the challenge authentication header, specifically for Passport-aware authentication interaction. Pass null to indicate that Passport should use the default value. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.LogoTag">
      <summary>Returns an HTML fragment containing an image tag for a Passport link. This class is deprecated.</summary>
      <returns>An HTML fragment containing an image tag for a Passport link.</returns>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.LogoTag(System.String)">
      <summary>Returns an HTML fragment containing an HTML &lt;img&gt; tag for a Passport link. This class is deprecated.</summary>
      <returns>An HTML fragment containing an image tag for a Passport link.</returns>
      <param name="strReturnUrl">Sets the URL of the location to which the Login server should redirect members after they log on. Pass null to indicate that Passport should use the default value. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.LogoTag(System.String,System.Int32,System.Boolean,System.String,System.Int32,System.Boolean,System.String,System.Int32,System.Boolean)">
      <summary>Returns an HTML fragment containing an HTML &lt;img&gt; tag for a Passport link. This class is deprecated.</summary>
      <returns>An HTML fragment containing an image tag for a Passport link.</returns>
      <param name="strReturnUrl">Sets the URL of the location to which the Login server should redirect members after they log on. Pass null to indicate that Passport should use the default value. </param>
      <param name="iTimeWindow">Specifies the interval during which members must have last logged on. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="fForceLogin">Determines how the <paramref name="iTimeWindow" /> parameter gets used. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="strCoBrandedArgs">Specifies variables to be appended as query string variables to the URL of the participant's Cobranding Template script page. Pass null to indicate that Passport should use the default value. </param>
      <param name="iLangID">Specifies the language to be used for the logon page that is displayed to the member. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="fSecure">Declares whether this method is being called from an HTTPS (SSL) page. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="strNameSpace">Specifies the domain in which the Passport should be created. Pass null to indicate that Passport should use the default value. </param>
      <param name="iKPP">Specifies data collection policies for purposes of Children's Online Privacy Protection Act (COPPA) compliance. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="bUseSecureAuth">Declares whether the actual logon UI should be served HTTPS from the Passport domain authority. Pass -1 to indicate that Passport should use the default value. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.LogoTag(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
      <summary>Returns an HTML fragment containing an HTML &lt;img&gt; tag for a Passport link. This class is deprecated.</summary>
      <returns>An HTML fragment containing an image tag for a Passport link.</returns>
      <param name="strReturnUrl">Sets the URL of the location to which the Login server should redirect members after they log on. Pass null to indicate that Passport should use the default value. </param>
      <param name="iTimeWindow">Specifies the interval during which members must have last logged on. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="iForceLogin">Determines how the <paramref name="iTimeWindow" /> parameter gets used. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="strCoBrandedArgs">Specifies variables to be appended as query string variables to the URL of the participant's Cobranding Template script page. Pass null to indicate that Passport should use the default value. </param>
      <param name="iLangID">Specifies the language to be used for the logon page that is displayed to the member. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="iSecure">Declares whether this method is being called from an HTTPS (SSL) page. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="strNameSpace">Specifies the domain in which the Passport should be created. Pass null to indicate that Passport should use the default value. </param>
      <param name="iKPP">Specifies data collection policies for purposes of Children's Online Privacy Protection Act (COPPA) compliance. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="iUseSecureAuth">Declares whether the actual logon UI should be served HTTPS from the Passport domain authority. Pass -1 to indicate that Passport should use the default value. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.LogoTag2">
      <summary>Returns an HTML fragment containing an image tag for a Passport link. This class is deprecated.</summary>
      <returns>An HTML fragment containing an image tag for a Passport link.</returns>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.LogoTag2(System.String)">
      <summary>Returns an HTML fragment containing an HTML &lt;img&gt; tag for a Passport link. This class is deprecated.</summary>
      <returns>An HTML fragment containing an image tag for a Passport link.</returns>
      <param name="strReturnUrl">Sets the URL of the location to which the Login server should redirect members after they log on. Pass null to indicate that Passport should use the default value. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.LogoTag2(System.String,System.Int32,System.Boolean,System.String,System.Int32,System.Boolean,System.String,System.Int32,System.Boolean)">
      <summary>Returns an HTML fragment containing an HTML &lt;img&gt; tag for a Passport link. This class is deprecated.</summary>
      <returns>An HTML fragment containing an image tag for a Passport link.</returns>
      <param name="strReturnUrl">Sets the URL of the location to which the Login server should redirect members after they log on. Pass null to indicate that Passport should use the default value. </param>
      <param name="iTimeWindow">Specifies the interval during which members must have last logged on. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="fForceLogin">Determines how the <paramref name="iTimeWindow" /> parameter gets used. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="strCoBrandedArgs">Specifies variables to be appended as query string variables to the URL of the participant's Cobranding Template script page. Pass null to indicate that Passport should use the default value. </param>
      <param name="iLangID">Specifies the language to be used for the logon page that is displayed to the member. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="fSecure">Declares whether this method is being called from an HTTPS (SSL) page. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="strNameSpace">Specifies the domain in which the Passport should be created. Pass null to indicate that Passport should use the default value. </param>
      <param name="iKPP">Specifies data collection policies for purposes of Children's Online Privacy Protection Act (COPPA) compliance. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="bUseSecureAuth">Declares whether the actual logon UI should be served HTTPS from the Passport domain authority. Pass -1 to indicate that Passport should use the default value. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.LogoTag2(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
      <summary>Returns an HTML fragment containing an HTML &lt;img&gt; tag for a Passport link. This class is deprecated.</summary>
      <returns>An HTML fragment containing an image tag for a Passport link.</returns>
      <param name="strReturnUrl">Sets the URL of the location to which the Login server should redirect members after they log on. Pass null to indicate that Passport should use the default value. </param>
      <param name="iTimeWindow">Specifies the interval during which members must have last logged on. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="iForceLogin">Determines how the <paramref name="iTimeWindow" /> parameter gets used. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="strCoBrandedArgs">Specifies variables to be appended as query string variables to the URL of the participant's Cobranding Template script page. Pass null to indicate that Passport should use the default value. </param>
      <param name="iLangID">Specifies the language to be used for the logon page that is displayed to the member. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="iSecure">Declares whether this method is being called from an HTTPS (SSL) page. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="strNameSpace">Specifies the domain in which the Passport should be created. Pass null to indicate that Passport should use the default value. </param>
      <param name="iKPP">Specifies data collection policies for purposes of Children's Online Privacy Protection Act (COPPA) compliance. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="iUseSecureAuth">Declares whether the actual logon UI should be served HTTPS from the Passport domain authority. Pass -1 to indicate that Passport should use the default value. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.LogoutURL">
      <summary>Returns the Passport logout URL string. This class is deprecated.</summary>
      <returns>The Passport logout URL string.</returns>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.LogoutURL(System.String,System.String,System.Int32,System.String,System.Int32)">
      <summary>Returns the Passport logout URL string using the specified parameters. This class is deprecated.</summary>
      <returns>The Passport logout URL string.</returns>
      <param name="szReturnURL">See IPassportManager3.LogoutUrl for more details. Pass null to indicate that Passport should use the default value. </param>
      <param name="szCOBrandArgs">See IPassportManager3.LogoutUrl for more details. Pass null to indicate that Passport should use the default value. </param>
      <param name="iLangID">See IPassportManager3.LogoutUrl for more details. Pass -1 to indicate that Passport should use the default value. </param>
      <param name="strDomain">See IPassportManager3.LogoutUrl for more details. Pass null to indicate that Passport should use the default value. </param>
      <param name="iUseSecureAuth">See IPassportManager3.LogoutUrl for more details. Pass -1 to indicate that Passport should use the default value. </param>
    </member>
    <member name="P:System.Web.Security.PassportIdentity.Name">
      <summary>Gets the name of the current user. This class is deprecated.</summary>
      <returns>The name of the current user, which is the Passport Unique Identifier (PUID).</returns>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.SetOption(System.String,System.Object)">
      <summary>Sets a specific Passport logon option. This class is deprecated.</summary>
      <param name="strOpt">The option to set. </param>
      <param name="vOpt">The value to set. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.SignOut(System.String)">
      <summary>Logs off the given Passport member from the current session. This class is deprecated.</summary>
      <param name="strSignOutDotGifFileName">An HTML fragment containing an image for the user to click on to sign out. </param>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.System#IDisposable#Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Web.Security.PassportIdentity" /> class. This class is deprecated.</summary>
    </member>
    <member name="M:System.Web.Security.PassportIdentity.Ticket(System.String)">
      <summary>Gets information on a specific attribute of the Passport authentication ticket. This class is deprecated.</summary>
      <returns>An object representing an attribute of the Passport authentication ticket.</returns>
      <param name="strAttribute">A string identifying the Passport authentication ticket to return. </param>
    </member>
    <member name="P:System.Web.Security.PassportIdentity.TicketAge">
      <summary>Gets the time, in seconds, since the last ticket was issued or refreshed. This class is deprecated.</summary>
      <returns>The time, in seconds, since the last ticket was issued or refreshed.</returns>
    </member>
    <member name="P:System.Web.Security.PassportIdentity.TimeSinceSignIn">
      <summary>Gets the time, in seconds, since a member's logon to the Passport logon server. This class is deprecated.</summary>
      <returns>The time, in seconds, since a member's logon to the Passport logon server.</returns>
    </member>
    <member name="T:System.Web.Security.PassportPrincipal">
      <summary>Represents a Passport-authenticated principal. This class is deprecated.</summary>
    </member>
    <member name="M:System.Web.Security.PassportPrincipal.#ctor(System.Web.Security.PassportIdentity,System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Security.PassportPrincipal" /> class from a <see cref="T:System.Web.Security.PassportIdentity" /> instance and an array of role names to which the user represented by that <see cref="T:System.Web.Security.PassportIdentity" /> belongs. This class is deprecated.</summary>
      <param name="identity">An implementation of the <see cref="T:System.Security.Principal.IIdentity" /> interface that represents the user.</param>
      <param name="roles">An array of role names to which the user represented by the <paramref name="identity" /> parameter belongs.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> is null.</exception>
    </member>
    <member name="T:System.Web.Security.RoleManagerEventArgs">
      <summary>Provides event data for the <see cref="E:System.Web.Security.RoleManagerModule.GetRoles" /> event of the <see cref="T:System.Web.Security.RoleManagerModule" /> class.</summary>
    </member>
    <member name="M:System.Web.Security.RoleManagerEventArgs.#ctor(System.Web.HttpContext)">
      <summary>Creates an instance of the <see cref="T:System.Web.Security.RoleManagerEventArgs" /> class and sets the <see cref="P:System.Web.Security.RoleManagerEventArgs.Context" /> property to the specified <see cref="T:System.Web.HttpContext" />.</summary>
      <param name="context">The <see cref="T:System.Web.HttpContext" /> of the current request.</param>
    </member>
    <member name="P:System.Web.Security.RoleManagerEventArgs.Context">
      <summary>Gets the <see cref="T:System.Web.HttpContext" /> for the current request.</summary>
      <returns>The <see cref="T:System.Web.HttpContext" /> for the current request</returns>
    </member>
    <member name="P:System.Web.Security.RoleManagerEventArgs.RolesPopulated">
      <summary>Gets or sets a value indicating whether role information has been applied to the current user.</summary>
      <returns>true if role information has been applied to the current user; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.Security.RoleManagerEventHandler">
      <summary>Defines the delegate for the <see cref="E:System.Web.Security.RoleManagerModule.GetRoles" /> event of the <see cref="T:System.Web.Security.RoleManagerModule" /> class.</summary>
      <param name="sender">The <see cref="T:System.Web.Security.RoleManagerModule" /> that raised the <see cref="E:System.Web.Security.RoleManagerModule.GetRoles" /> event.</param>
      <param name="e">A <see cref="T:System.Web.Security.RoleManagerEventArgs" /> object that contains the event data.</param>
    </member>
    <member name="T:System.Web.Security.RoleManagerModule">
      <summary>Manages a <see cref="T:System.Web.Security.RolePrincipal" /> instance for the current user. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Security.RoleManagerModule.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.Security.RoleManagerModule" /> class.</summary>
    </member>
    <member name="M:System.Web.Security.RoleManagerModule.Dispose">
      <summary>Called by the HTTP runtime to dispose of the role-manager module.</summary>
    </member>
    <member name="E:System.Web.Security.RoleManagerModule.GetRoles">
      <summary>A global application event that is raised when the <see cref="T:System.Web.Security.RoleManagerModule" /> is ready to create a <see cref="T:System.Web.Security.RolePrincipal" /> that represents the current user.</summary>
    </member>
    <member name="M:System.Web.Security.RoleManagerModule.Init(System.Web.HttpApplication)">
      <summary>Associates the role manager with the specified application.</summary>
      <param name="app">The <see cref="T:System.Web.HttpApplication" /> to associate the <see cref="T:System.Web.Security.RoleManagerModule" /> with.</param>
    </member>
    <member name="T:System.Web.Security.RolePrincipal">
      <summary>Represents security information for the current HTTP request, including role membership. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Security.RolePrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Security.RolePrincipal" /> class using information that is contained in the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object and using the specified streaming context.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
      <param name="context">The destination for this serialization.</param>
    </member>
    <member name="M:System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity)">
      <summary>Instantiates a <see cref="T:System.Web.Security.RolePrincipal" /> object for the specified <paramref name="identity" />.</summary>
      <param name="identity">The user identity to create the <see cref="T:System.Web.Security.RolePrincipal" /> for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> is null.</exception>
    </member>
    <member name="M:System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity,System.String)">
      <summary>Instantiates a <see cref="T:System.Web.Security.RolePrincipal" /> object for the specified <paramref name="identity" /> with role information from the specified <paramref name="encryptedTicket" />.</summary>
      <param name="identity">The user identity to create the <see cref="T:System.Web.Security.RolePrincipal" /> for.</param>
      <param name="encryptedTicket">A string that contains encrypted role information.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> is null.-or-<paramref name="encryptedTicket" /> is null.</exception>
    </member>
    <member name="M:System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity)">
      <summary>Instantiates a <see cref="T:System.Web.Security.RolePrincipal" /> object for the specified <paramref name="identity" /> using the specified <paramref name="providerName" />.</summary>
      <param name="providerName">The name of the role provider for the user.</param>
      <param name="identity">The user identity to create the <see cref="T:System.Web.Security.RolePrincipal" /> for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="providerName" /> is null.-or-<paramref name="providerName" /> refers to a role provider that does not exist in the configuration for the application.</exception>
    </member>
    <member name="M:System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity,System.String)">
      <summary>Instantiates a <see cref="T:System.Web.Security.RolePrincipal" /> object for the specified <paramref name="identity" /> using the specified <paramref name="providerName" /> and role information from the specified <paramref name="encryptedTicket" />.</summary>
      <param name="providerName">The name of the role provider for the user.</param>
      <param name="identity">The user identity to create the <see cref="T:System.Web.Security.RolePrincipal" /> for.</param>
      <param name="encryptedTicket">A string that contains encrypted role information.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> is null.-or-<paramref name="encryptedTicket" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="providerName" /> is null.-or-<paramref name="providerName" /> refers to a role provider that does not exist in the configuration for the application.</exception>
    </member>
    <member name="P:System.Web.Security.RolePrincipal.CachedListChanged">
      <summary>Gets a value indicating whether the list of role names cached with the <see cref="T:System.Web.Security.RolePrincipal" /> object has been modified.</summary>
      <returns>true if the list of role names cached with the <see cref="T:System.Web.Security.RolePrincipal" /> object has been modified; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Security.RolePrincipal.CookiePath">
      <summary>Gets the path for the cached role names cookie.</summary>
      <returns>The path of the cookie where role names are cached. The default is /.</returns>
    </member>
    <member name="P:System.Web.Security.RolePrincipal.Expired">
      <summary>Gets a value indicating whether the roles cookie has expired.</summary>
      <returns>true if the roles cookie has expired; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Security.RolePrincipal.ExpireDate">
      <summary>Gets the date and time when the roles cookie will expire.</summary>
      <returns>The <see cref="T:System.DateTime" /> value when the roles cookie will expire.</returns>
    </member>
    <member name="M:System.Web.Security.RolePrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data that is required in order to serialize the target object using the specified streaming context.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
      <param name="context">The destination for this serialization.</param>
    </member>
    <member name="M:System.Web.Security.RolePrincipal.GetRoles">
      <summary>Gets a list of roles that the <see cref="T:System.Web.Security.RolePrincipal" /> is a member of.</summary>
      <returns>The list of roles that the <see cref="T:System.Web.Security.RolePrincipal" /> is a member of.</returns>
      <exception cref="T:System.Configuration.Provider.ProviderException">The <see cref="P:System.Web.Security.RolePrincipal.Identity" /> property is null.</exception>
    </member>
    <member name="P:System.Web.Security.RolePrincipal.Identity">
      <summary>Gets the security identity for the current HTTP request.</summary>
      <returns>The security identity for the current HTTP request.</returns>
    </member>
    <member name="M:System.Web.Security.RolePrincipal.IsInRole(System.String)">
      <summary>Gets a value indicating whether the user represented by the <see cref="T:System.Web.Security.RolePrincipal" /> is in the specified role.</summary>
      <returns>true if user represented by the <see cref="T:System.Web.Security.RolePrincipal" /> is in the specified role; otherwise, false.</returns>
      <param name="role">The role to search for.</param>
      <exception cref="T:System.Configuration.Provider.ProviderException">The <see cref="P:System.Web.Security.RolePrincipal.Identity" /> property is null.</exception>
    </member>
    <member name="P:System.Web.Security.RolePrincipal.IsRoleListCached">
      <summary>Gets a value indicating whether the list of roles for the user has been cached in a cookie.</summary>
      <returns>true if role names are cached in a cookie; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Security.RolePrincipal.IssueDate">
      <summary>Gets the date and time that the roles cookie was issued.</summary>
      <returns>The <see cref="T:System.DateTime" /> that the roles cookie was issued.</returns>
    </member>
    <member name="P:System.Web.Security.RolePrincipal.ProviderName">
      <summary>Gets the name of the role provider that stores and retrieves role information for the user.</summary>
      <returns>The name of the role provider that stores and retrieves role information for the user.</returns>
    </member>
    <member name="M:System.Web.Security.RolePrincipal.SetDirty">
      <summary>Marks the cached role list as having been changed.</summary>
    </member>
    <member name="M:System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.Serialization.ISerializationSurrogate.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination for this serialization.</param>
    </member>
    <member name="M:System.Web.Security.RolePrincipal.ToEncryptedTicket">
      <summary>Returns the role information cached with the <see cref="T:System.Web.Security.RolePrincipal" /> object encrypted based on the <see cref="P:System.Web.Security.Roles.CookieProtectionValue" />.</summary>
      <returns>The role information cached with the <see cref="T:System.Web.Security.RolePrincipal" /> object encrypted based on the <see cref="P:System.Web.Security.Roles.CookieProtectionValue" />.</returns>
    </member>
    <member name="P:System.Web.Security.RolePrincipal.Version">
      <summary>Gets the version number of the roles cookie.</summary>
      <returns>The version number of the roles cookie.</returns>
    </member>
    <member name="T:System.Web.Security.RoleProviderCollection">
      <summary>A collection of objects that inherit the <see cref="T:System.Web.Security.RoleProvider" /> abstract class.</summary>
    </member>
    <member name="M:System.Web.Security.RoleProviderCollection.#ctor">
      <summary>Creates a new, empty role-provider collection.</summary>
    </member>
    <member name="M:System.Web.Security.RoleProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary>Adds a role provider to the collection.</summary>
      <param name="provider">The role provider to add to the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="provider" /> is not of a type that inherits the <see cref="T:System.Web.Security.RoleProvider" /> abstract class.</exception>
    </member>
    <member name="M:System.Web.Security.RoleProviderCollection.CopyTo(System.Web.Security.RoleProvider[],System.Int32)">
      <summary>Copies the role provider collection to a one-dimensional array.</summary>
      <param name="array">A one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Web.Security.RoleProviderCollection" />. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="P:System.Web.Security.RoleProviderCollection.Item(System.String)">
      <summary>Gets the role provider in the collection referenced by the specified provider name.</summary>
      <returns>An object that inherits the <see cref="T:System.Web.Security.RoleProvider" /> abstract class.</returns>
      <param name="name">The name of the role provider.</param>
    </member>
    <member name="T:System.Web.Security.Roles">
      <summary>Manages user membership in roles for authorization checking in an ASP.NET application. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Security.Roles.AddUsersToRole(System.String[],System.String)">
      <summary>Adds the specified users to the specified role.</summary>
      <param name="usernames">A string array of user names to add to the specified role. </param>
      <param name="roleName">The role to add the specified user names to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="roleName" /> is null.-or-One of the elements in <paramref name="usernames" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="roleName" /> is an empty string or contains a comma (,).-or-One of the elements in <paramref name="usernames" /> is an empty string or contains a comma (,).-or-<paramref name="usernames" /> contains a duplicate element.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">Role management is not enabled.</exception>
    </member>
    <member name="M:System.Web.Security.Roles.AddUsersToRoles(System.String[],System.String[])">
      <summary>Adds the specified users to the specified roles.</summary>
      <param name="usernames">A string array of user names to add to the specified roles. </param>
      <param name="roleNames">A string array of role names to add the specified user names to. </param>
      <exception cref="T:System.ArgumentNullException">One of the roles in <paramref name="roleNames" /> is null.-or-One of the users in <paramref name="usernames" /> is null.</exception>
      <exception cref="T:System.ArgumentException">One of the roles in <paramref name="roleNames" /> is an empty string or contains a comma (,).-or-One of the users in <paramref name="usernames" /> is an empty string or contains a comma (,).-or-<paramref name="roleNames" /> contains a duplicate element.-or-<paramref name="usernames" /> contains a duplicate element.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">Role management is not enabled.</exception>
    </member>
    <member name="M:System.Web.Security.Roles.AddUserToRole(System.String,System.String)">
      <summary>Adds the specified user to the specified role.</summary>
      <param name="username">The user name to add to the specified role.</param>
      <param name="roleName">The role to add the specified user name to. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="roleName" /> is null.-or-<paramref name="username" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="roleName" /> is an empty string or contains a comma (,).-or-<paramref name="username" /> is an empty string or contains a comma (,).</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">Role management is not enabled. -or-User is already assigned to the specified role.</exception>
    </member>
    <member name="M:System.Web.Security.Roles.AddUserToRoles(System.String,System.String[])">
      <summary>Adds the specified user to the specified roles.</summary>
      <param name="username">The user name to add to the specified roles. </param>
      <param name="roleNames">A string array of roles to add the specified user name to. </param>
      <exception cref="T:System.ArgumentNullException">One of the roles in <paramref name="roleNames" /> is null.-or-<paramref name="username" /> is null.</exception>
      <exception cref="T:System.ArgumentException">One of the roles in <paramref name="roleNames" /> is an empty string or contains a comma (,).-or-<paramref name="username" /> is an empty string or contains a comma (,).-or-<paramref name="roleNames" /> contains a duplicate element.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">Role management is not enabled.</exception>
    </member>
    <member name="P:System.Web.Security.Roles.ApplicationName">
      <summary>Gets or sets the name of the application to store and retrieve role information for.</summary>
      <returns>The name of the application to store and retrieve role information for.</returns>
    </member>
    <member name="P:System.Web.Security.Roles.CacheRolesInCookie">
      <summary>Gets a value indicating whether the current user's roles are cached in a cookie.</summary>
      <returns>true if the current user's roles are cached in a cookie; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Security.Roles.CookieName">
      <summary>Gets the name of the cookie where role names are cached.</summary>
      <returns>The name of the cookie where role names are cached. The default is .ASPXROLES.</returns>
    </member>
    <member name="P:System.Web.Security.Roles.CookiePath">
      <summary>Gets the path for the cached role names cookie.</summary>
      <returns>The path of the cookie where role names are cached. The default is /.</returns>
    </member>
    <member name="P:System.Web.Security.Roles.CookieProtectionValue">
      <summary>Gets a value that indicates how role names cached in a cookie are protected.</summary>
      <returns>One of the <see cref="T:System.Web.Security.CookieProtection" /> enumeration values indicating how role names that are cached in a cookie are protected. The default is All.</returns>
    </member>
    <member name="P:System.Web.Security.Roles.CookieRequireSSL">
      <summary>Gets a value indicating whether the role names cookie requires SSL in order to be returned to the server.</summary>
      <returns>true if SSL is required to return the role names cookie to the server; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Security.Roles.CookieSlidingExpiration">
      <summary>Indicates whether the role names cookie expiration date and time will be reset periodically.</summary>
      <returns>true if the role names cookie expiration date and time will be reset periodically; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Security.Roles.CookieTimeout">
      <summary>Gets the number of minutes before the roles cookie expires.</summary>
      <returns>An integer specifying the number of minutes before the roles cookie expires. The default is 30 minutes.</returns>
    </member>
    <member name="P:System.Web.Security.Roles.CreatePersistentCookie">
      <summary>Gets a value indicating whether the role-names cookie is session-based or persistent.</summary>
      <returns>true if the role-names cookie is a persistent cookie; otherwise false. The default is false.</returns>
    </member>
    <member name="M:System.Web.Security.Roles.CreateRole(System.String)">
      <summary>Adds a new role to the data source.</summary>
      <param name="roleName">The name of the role to create. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="roleName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="roleName" /> is an empty string.-or-<paramref name="roleName" /> contains a comma.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">Role management is not enabled.</exception>
    </member>
    <member name="M:System.Web.Security.Roles.DeleteCookie">
      <summary>Deletes the cookie where role names are cached.</summary>
      <exception cref="T:System.Configuration.Provider.ProviderException">Role management is not enabled.</exception>
    </member>
    <member name="M:System.Web.Security.Roles.DeleteRole(System.String)">
      <summary>Removes a role from the data source.</summary>
      <returns>true if <paramref name="roleName" /> was deleted from the data source; otherwise, false.</returns>
      <param name="roleName">The name of the role to delete. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="roleName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="roleName" /> is an empty string or contains a comma (,).</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">
        <paramref name="roleName" /> has one or more members.-or-Role management is not enabled.</exception>
    </member>
    <member name="M:System.Web.Security.Roles.DeleteRole(System.String,System.Boolean)">
      <summary>Removes a role from the data source.</summary>
      <returns>true if <paramref name="roleName" /> was deleted from the data source; otherwise; false.</returns>
      <param name="roleName">The name of the role to delete.</param>
      <param name="throwOnPopulatedRole">If true, throws an exception if <paramref name="roleName" /> has one or more members.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="roleName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="roleName" /> is an empty string.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">
        <paramref name="roleName" /> has one or more members and <paramref name="throwOnPopulatedRole" /> is true.-or-Role management is not enabled.</exception>
    </member>
    <member name="P:System.Web.Security.Roles.Domain">
      <summary>Gets the value of the domain of the role-names cookie.</summary>
      <returns>The <see cref="P:System.Web.HttpCookie.Domain" /> of the role names cookie.</returns>
    </member>
    <member name="P:System.Web.Security.Roles.Enabled">
      <summary>Gets or sets a value indicating whether role management is enabled for the current Web application.</summary>
      <returns>true if role management is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Web.Security.Roles.FindUsersInRole(System.String,System.String)">
      <summary>Gets a list of users in a specified role where the user name contains the specified user name to match.</summary>
      <returns>A string array containing the names of all the users whose user name matches <paramref name="usernameToMatch" /> and who are members of the specified role.</returns>
      <param name="roleName">The role to search in.</param>
      <param name="usernameToMatch">The user name to search for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="roleName" /> is null (Nothing in Visual Basic).-or-<paramref name="usernameToMatch" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="roleName" /> is an empty string or contains a comma (,).-or-<paramref name="usernameToMatch" /> is an empty string.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">Role management is not enabled.</exception>
    </member>
    <member name="M:System.Web.Security.Roles.GetAllRoles">
      <summary>Gets a list of all the roles for the application.</summary>
      <returns>A string array containing the names of all the roles stored in the data source for the application.</returns>
      <exception cref="T:System.Configuration.Provider.ProviderException">Role management is not enabled.</exception>
    </member>
    <member name="M:System.Web.Security.Roles.GetRolesForUser">
      <summary>Gets a list of the roles that the currently logged-on user is in.</summary>
      <returns>A string array containing the names of all the roles that the currently logged-on user is in.</returns>
      <exception cref="T:System.ArgumentNullException">There is no current logged-on user.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">Role management is not enabled.</exception>
    </member>
    <member name="M:System.Web.Security.Roles.GetRolesForUser(System.String)">
      <summary>Gets a list of the roles that a user is in.</summary>
      <returns>A string array containing the names of all the roles that the specified user is in.</returns>
      <param name="username">The user to return a list of roles for. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="username" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" /> contains a comma (,). </exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">Role management is not enabled.</exception>
    </member>
    <member name="M:System.Web.Security.Roles.GetUsersInRole(System.String)">
      <summary>Gets a list of users in the specified role.</summary>
      <returns>A string array containing the names of all the users who are members of the specified role.</returns>
      <param name="roleName">The role to get the list of users for. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="roleName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="roleName" /> is an empty string or contains a comma (,).</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">Role management is not enabled.</exception>
    </member>
    <member name="M:System.Web.Security.Roles.IsUserInRole(System.String)">
      <summary>Gets a value indicating whether the currently logged-on user is in the specified role.</summary>
      <returns>true if the currently logged-on user is in the specified role; otherwise, false.</returns>
      <param name="roleName">The name of the role to search in. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="roleName" /> is null.-or-There is no current logged-on user.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="roleName" /> is an empty string or contains a comma (,).</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">Role management is not enabled.</exception>
    </member>
    <member name="M:System.Web.Security.Roles.IsUserInRole(System.String,System.String)">
      <summary>Gets a value indicating whether the specified user is in the specified role.</summary>
      <returns>true if the specified user is in the specified role; otherwise, false.</returns>
      <param name="username">The name of the user to search for. </param>
      <param name="roleName">The name of the role to search in. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="roleName" /> is null.-or-<paramref name="username" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="roleName" /> is an empty string or contains a comma (,).-or-<paramref name="username" /> contains a comma (,).</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">Role management is not enabled.</exception>
    </member>
    <member name="P:System.Web.Security.Roles.MaxCachedResults">
      <summary>Gets the maximum number of role names to be cached for a user.</summary>
      <returns>The maximum number of role names to be cached for a user. The default is 25.</returns>
    </member>
    <member name="P:System.Web.Security.Roles.Provider">
      <summary>Gets the default role provider for the application.</summary>
      <returns>The default role provider for the application, which is exposed as a class that inherits the <see cref="T:System.Web.Security.RoleProvider" /> abstract class.</returns>
      <exception cref="T:System.Configuration.Provider.ProviderException">Role management is not enabled.</exception>
    </member>
    <member name="P:System.Web.Security.Roles.Providers">
      <summary>Gets a collection of the role providers for the ASP.NET application.</summary>
      <returns>A <see cref="T:System.Web.Security.RoleProviderCollection" /> that contains the role providers configured for the ASP.NET application.</returns>
      <exception cref="T:System.Configuration.Provider.ProviderException">Role management is not enabled.</exception>
    </member>
    <member name="M:System.Web.Security.Roles.RemoveUserFromRole(System.String,System.String)">
      <summary>Removes the specified user from the specified role.</summary>
      <param name="username">The user to remove from the specified role.</param>
      <param name="roleName">The role to remove the specified user from.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="roleName" /> is null.-or-<paramref name="username" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="roleName" /> is an empty string or contains a comma (,)<paramref name="username" /> is an empty string or contains a comma (,).</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">Role management is not enabled.</exception>
    </member>
    <member name="M:System.Web.Security.Roles.RemoveUserFromRoles(System.String,System.String[])">
      <summary>Removes the specified user from the specified roles.</summary>
      <param name="username">The user to remove from the specified roles. </param>
      <param name="roleNames">A string array of role names to remove the specified user from. </param>
      <exception cref="T:System.ArgumentNullException">One of the roles in <paramref name="roleNames" /> is null.-or-<paramref name="username" /> is null.</exception>
      <exception cref="T:System.ArgumentException">One of the roles in <paramref name="roleNames" /> is an empty string or contains a comma (,).-or-<paramref name="username" /> is an empty string or contains a comma (,).-or-<paramref name="roleNames" /> contains a duplicate element.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">Role management is not enabled.</exception>
    </member>
    <member name="M:System.Web.Security.Roles.RemoveUsersFromRole(System.String[],System.String)">
      <summary>Removes the specified users from the specified role.</summary>
      <param name="usernames">A string array of user names to remove from the specified roles. </param>
      <param name="roleName">The name of the role to remove the specified users from. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="roleName" /> is null.-or-One of the user names in <paramref name="usernames" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="roleName" /> is an empty string or contains a comma (,).-or-One of the user names in <paramref name="usernames" /> is an empty string or contains a comma (,).-or-<paramref name="usernames" /> contains a duplicate element.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">Role management is not enabled.</exception>
    </member>
    <member name="M:System.Web.Security.Roles.RemoveUsersFromRoles(System.String[],System.String[])">
      <summary>Removes the specified user names from the specified roles.</summary>
      <param name="usernames">A string array of user names to remove from the specified roles. </param>
      <param name="roleNames">A string array of role names to remove the specified users from. </param>
      <exception cref="T:System.ArgumentNullException">One of the roles specified in <paramref name="roleNames" /> is null.-or-One of the users specified in <paramref name="usernames" /> is null.</exception>
      <exception cref="T:System.ArgumentException">One of the roles specified in <paramref name="roleNames" /> is an empty string or contains a comma (,).-or-One of the users specified in <paramref name="usernames" /> is an empty string or contains a comma (,).-or-<paramref name="roleNames" /> contains a duplicate element.-or-<paramref name="usernames" /> contains a duplicate element.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">Role management is not enabled.</exception>
    </member>
    <member name="M:System.Web.Security.Roles.RoleExists(System.String)">
      <summary>Gets a value indicating whether the specified role name already exists in the role data source.</summary>
      <returns>true if the role name already exists in the data source; otherwise, false.</returns>
      <param name="roleName">The name of the role to search for in the data source. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="roleName" /> is null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="roleName" /> is an empty string or contains a comma (,).</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">Role management is not enabled.</exception>
    </member>
    <member name="T:System.Web.Security.SqlMembershipProvider">
      <summary>Manages storage of membership information for an ASP.NET application in a SQL Server database.</summary>
    </member>
    <member name="M:System.Web.Security.SqlMembershipProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Security.SqlMembershipProvider" /> class.</summary>
    </member>
    <member name="P:System.Web.Security.SqlMembershipProvider.ApplicationName">
      <summary>Gets or sets the name of the application to store and retrieve membership information for.</summary>
      <returns>The name of the application to store and retrieve membership information for. The default is the <see cref="P:System.Web.HttpRequest.ApplicationPath" /> property value for the current <see cref="P:System.Web.HttpContext.Request" />.</returns>
      <exception cref="T:System.ArgumentException">An attempt was made to set the <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" /> property to an empty string or null.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">An attempt was made to set the <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" /> property to a string that is longer than 256 characters.</exception>
    </member>
    <member name="M:System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)">
      <summary>Modifies a user's password.</summary>
      <returns>true if the password was updated successfully. false if the supplied old password is invalid, the user is locked out, or the user does not exist in the database.</returns>
      <param name="username">The user to update the password for. </param>
      <param name="oldPassword">The current password for the specified user. </param>
      <param name="newPassword">The new password for the specified user. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.- or -<paramref name="oldPassword" /> is an empty string or longer than 128 characters.- or -<paramref name="newPassword" /> is an empty string or longer than 128 characters.- or -The encoded version of <paramref name="newPassword" /> is greater than 128 characters.- or -The change-password action was canceled by a subscriber to the <see cref="E:System.Web.Security.Membership.ValidatingPassword" /> event, and the <see cref="P:System.Web.Security.ValidatePasswordEventArgs.FailureInformation" /> property was null.- or -The length of <paramref name="newPassword" /> is less than the minimum length specified in the <see cref="P:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" /> property.- or -The number of non-alphabetic characters in <paramref name="newPassword" /> is less than the required number of non-alphabetic characters specified in the <see cref="P:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" /> property.- or -<paramref name="newPassword" /> does not pass the regular expression defined in the <see cref="P:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" /> property.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="username" /> is null.- or -<paramref name="oldPassword" /> is null.- or -<paramref name="newPassword" /> is null.</exception>
      <exception cref="T:System.Web.Security.MembershipPasswordException">
        <paramref name="username" /> was not found in the database.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">An error occurred while setting the new password value at the database. </exception>
      <exception cref="T:System.Exception">An unhandled exception occurred.</exception>
    </member>
    <member name="M:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)">
      <summary>Updates the password question and answer for a user in the SQL Server membership database.</summary>
      <returns>true if the update was successful; otherwise, false. A value of false is also returned if the <paramref name="password" /> is incorrect, the user is locked out, or the user does not exist in the database.</returns>
      <param name="username">The user to change the password question and answer for. </param>
      <param name="password">The password for the specified user. </param>
      <param name="newPasswordQuestion">The new password question for the specified user.</param>
      <param name="newPasswordAnswer">The new password answer for the specified user.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.- or -<paramref name="password" /> is an empty string or is longer than 128 characters.- or -<paramref name="newPasswordQuestion" /> is an empty string or is longer than 256 characters.- or -<paramref name="newPasswordAnswer" /> is an empty string or is longer than 128 characters.- or -The encoded version of <paramref name="newPasswordAnswer" /> is longer than 128 characters.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="username" /> is null.- or -<paramref name="password" /> is null.- or -<paramref name="newPasswordQuestion" /> is null and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is true.- or -<paramref name="newPasswordAnswer" /> is null and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is true.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">An error occurred when changing the password question and answer in the database.</exception>
    </member>
    <member name="M:System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)">
      <summary>Adds a new user to the SQL Server membership database.</summary>
      <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object for the newly created user. If no user was created, this method returns null.</returns>
      <param name="username">The user name for the new user. </param>
      <param name="password">The password for the new user. </param>
      <param name="email">The e-mail address for the new user. </param>
      <param name="passwordQuestion">The password question for the new user.</param>
      <param name="passwordAnswer">The password answer for the new user.</param>
      <param name="isApproved">Whether or not the new user is approved to be validated.</param>
      <param name="providerUserKey">A <see cref="T:System.Guid" /> that uniquely identifies the membership user in the SQL Server database.</param>
      <param name="status">One of the <see cref="T:System.Web.Security.MembershipCreateStatus" /> values, indicating whether the user was created successfully.</param>
    </member>
    <member name="M:System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)">
      <summary>Removes a user's membership information from the SQL Server membership database.</summary>
      <returns>true if the user was deleted; otherwise, false. A value of false is also returned if the user does not exist in the database.</returns>
      <param name="username">The name of the user to delete.</param>
      <param name="deleteAllRelatedData">true to delete data related to the user from the database; false to leave data related to the user in the database.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="username" /> is null.</exception>
    </member>
    <member name="P:System.Web.Security.SqlMembershipProvider.EnablePasswordReset">
      <summary>Gets a value indicating whether the SQL Server membership provider is configured to allow users to reset their passwords.</summary>
      <returns>true if the membership provider supports password reset; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval">
      <summary>Gets a value indicating whether the SQL Server membership provider is configured to allow users to retrieve their passwords.</summary>
      <returns>true if the membership provider supports password retrieval; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)">
      <summary>Returns a collection of membership users for which the e-mail address field contains the specified e-mail address.</summary>
      <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> that contains a page of <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> objects beginning at the page specified by <paramref name="pageIndex" />.</returns>
      <param name="emailToMatch">The e-mail address to search for.</param>
      <param name="pageIndex">The index of the page of results to return. <paramref name="pageIndex" /> is zero-based.</param>
      <param name="pageSize">The size of the page of results to return.</param>
      <param name="totalRecords">The total number of matched users.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emailToMatch" /> is longer than 256 characters.- or -<paramref name="pageIndex" /> is less than zero.- or -<paramref name="pageSize" /> is less than one.- or -<paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> plus <paramref name="pageSize" /> minus one exceeds <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)">
      <summary>Gets a collection of membership users where the user name contains the specified user name to match.</summary>
      <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> that contains a page of <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> objects beginning at the page specified by <paramref name="pageIndex" />.</returns>
      <param name="usernameToMatch">The user name to search for.</param>
      <param name="pageIndex">The index of the page of results to return. <paramref name="pageIndex" /> is zero-based.</param>
      <param name="pageSize">The size of the page of results to return.</param>
      <param name="totalRecords">When this method returns, contains the total number of matched users.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="usernameToMatch" /> is an empty string ("") or is longer than 256 characters.- or -<paramref name="pageIndex" /> is less than zero.- or -<paramref name="pageSize" /> is less than 1.- or -<paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> plus <paramref name="pageSize" /> minus one exceeds <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="usernameToMatch" /> is null.</exception>
    </member>
    <member name="M:System.Web.Security.SqlMembershipProvider.GeneratePassword">
      <summary>Generates a random password that is at least 14 characters long.</summary>
      <returns>A random password that is at least 14 characters long.</returns>
    </member>
    <member name="M:System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)">
      <summary>Gets a collection of all the users in the SQL Server membership database.</summary>
      <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> of <see cref="T:System.Web.Security.MembershipUser" /> objects representing all the users in the database for the configured <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" />.</returns>
      <param name="pageIndex">The index of the page of results to return. <paramref name="pageIndex" /> is zero-based.</param>
      <param name="pageSize">The size of the page of results to return.</param>
      <param name="totalRecords">The total number of users.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="pageIndex" /> is less than zero.- or -<paramref name="pageSize" /> is less than one.- or -<paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> plus <paramref name="pageSize" /> minus one exceeds <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline">
      <summary>Returns the number of users currently accessing the application.</summary>
      <returns>The number of users currently accessing the application.</returns>
    </member>
    <member name="M:System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)">
      <summary>Returns the password for the specified user name from the SQL Server membership database.</summary>
      <returns>The password for the specified user name.</returns>
      <param name="username">The user to retrieve the password for. </param>
      <param name="passwordAnswer">The password answer for the user. </param>
      <exception cref="T:System.Web.Security.MembershipPasswordException">
        <paramref name="passwordAnswer" /> is invalid. - or -The membership user identified by <paramref name="username" /> is locked out.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" /> is set to false. </exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">
        <paramref name="username" /> is not found in the membership database.- or -An error occurred while retrieving the password from the database. </exception>
      <exception cref="T:System.ArgumentException">One of the parameter values exceeds the maximum allowed length.- or -<paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.- or -<paramref name="passwordAnswer" /> is an empty string and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is true.- or -<paramref name="passwordAnswer" /> is greater than 128 characters.- or -The encoded version of <paramref name="passwordAnswer" /> is greater than 128 characters.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="username" /> is null.- or -<paramref name="passwordAnswer" /> is null and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is true.</exception>
    </member>
    <member name="M:System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)">
      <summary>Gets the information from the data source for the membership user associated with the specified unique identifier and updates the last activity date/time stamp for the user, if specified.</summary>
      <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the user associated with the specified unique identifier. If no user is found in the database for the specified <paramref name="providerUserKey" /> value, null is returned.</returns>
      <param name="providerUserKey">The unique identifier for the user.</param>
      <param name="userIsOnline">true to update the last-activity date/time stamp for the specified user; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="providerUserKey" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="providerUserKey" /> is not of type <see cref="T:System.Guid" />.</exception>
    </member>
    <member name="M:System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)">
      <summary>Returns information from the SQL Server membership database for a user and provides an option to update the last activity date/time stamp for the user.</summary>
      <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the specified user. If no user is found in the database for the specified <paramref name="username" /> value, null is returned.</returns>
      <param name="username">The name of the user to get information for. </param>
      <param name="userIsOnline">true to update the last activity date/time stamp for the user; false to return user information without updating the last activity date/time stamp for the user. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" /> exceeds 256 characters.- or -<paramref name="username" /> contains a comma.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="username" /> is null.</exception>
    </member>
    <member name="M:System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)">
      <summary>Gets the user name associated with the specified e-mail address.</summary>
      <returns>The user name associated with the specified e-mail address. If no match is found, this method returns null.</returns>
      <param name="email">The e-mail address to search for. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="email" /> exceeds 256 characters.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">More than one user with the same e-mail address exists in the database and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> is true.</exception>
    </member>
    <member name="M:System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Initializes the SQL Server membership provider with the property values specified in the ASP.NET application's configuration file. This method is not intended to be used directly from your code.</summary>
      <param name="name">The name of the <see cref="T:System.Web.Security.SqlMembershipProvider" /> instance to initialize. </param>
      <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains the names and values of configuration options for the membership provider. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="config" /> is null.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">The enablePasswordRetrieval, enablePasswordReset, requiresQuestionAndAnswer, or requiresUniqueEmail attribute is set to a value other than a Boolean.- or -The maxInvalidPasswordAttempts or the passwordAttemptWindow attribute is set to a value other than a positive integer.- or -The minRequiredPasswordLength attribute is set to a value other than a positive integer, or the value is greater than 128.- or -The minRequiredNonalphanumericCharacters attribute is set to a value other than zero or a positive integer, or the value is greater than 128.- or -The value for the passwordStrengthRegularExpression attribute is not a valid regular expression.- or -The applicationName attribute is set to a value that is greater than 256 characters.- or -The passwordFormat attribute specified in the application configuration file is an invalid <see cref="T:System.Web.Security.MembershipPasswordFormat" /> enumeration.- or -The passwordFormat attribute is set to <see cref="F:System.Web.Security.MembershipPasswordFormat.Hashed" /> and the enablePasswordRetrieval attribute is set to true in the application configuration.- or -The passwordFormat attribute is set to Encrypted and the machineKey configuration element specifies AutoGenerate for the decryptionKey attribute.- or -The connectionStringName attribute is empty or does not exist in the application configuration.- or - The value of the connection string for the connectionStringName attribute value is empty, or the specified connectionStringName does not exist in the application configuration file.- or - The value for the commandTimeout attribute is set to a value other than zero or a positive integer.- or -The application configuration file for this <see cref="T:System.Web.Security.SqlMembershipProvider" /> instance contains an unrecognized attribute.</exception>
      <exception cref="T:System.Web.HttpException">The current trust level is less than Low.</exception>
      <exception cref="T:System.InvalidOperationException">The provider has already been initialized prior to the current call to the <see cref="M:System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> method.</exception>
    </member>
    <member name="P:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts">
      <summary>Gets the number of invalid password or password-answer attempts allowed before the membership user is locked out.</summary>
      <returns>The number of invalid password or password-answer attempts allowed before the membership user is locked out.</returns>
    </member>
    <member name="P:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters">
      <summary>Gets the minimum number of special characters that must be present in a valid password.</summary>
      <returns>The minimum number of special characters that must be present in a valid password.</returns>
    </member>
    <member name="P:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength">
      <summary>Gets the minimum length required for a password.</summary>
      <returns>The minimum length required for a password. </returns>
    </member>
    <member name="P:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow">
      <summary>Gets the time window between which consecutive failed attempts to provide a valid password or password answers are tracked.</summary>
      <returns>The time window, in minutes, during which consecutive failed attempts to provide a valid password or password answers are tracked. The default is 10 minutes. If the interval between the current failed attempt and the last failed attempt is greater than the <see cref="P:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" /> property setting, each failed attempt is treated as if it were the first failed attempt.</returns>
    </member>
    <member name="P:System.Web.Security.SqlMembershipProvider.PasswordFormat">
      <summary>Gets a value indicating the format for storing passwords in the SQL Server membership database.</summary>
      <returns>One of the <see cref="T:System.Web.Security.MembershipPasswordFormat" /> values, indicating the format for storing passwords in the SQL Server database.</returns>
    </member>
    <member name="P:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression">
      <summary>Gets the regular expression used to evaluate a password.</summary>
      <returns>A regular expression used to evaluate a password.</returns>
    </member>
    <member name="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer">
      <summary>Gets a value indicating whether the SQL Server membership provider is configured to require the user to answer a password question for password reset and retrieval.</summary>
      <returns>true if a password answer is required for password reset and retrieval; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail">
      <summary>Gets a value indicating whether the SQL Server membership provider is configured to require a unique e-mail address for each user name.</summary>
      <returns>true if the membership provider requires a unique e-mail address; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)">
      <summary>Resets a user's password to a new, automatically generated password.</summary>
      <returns>The new password for the specified user.</returns>
      <param name="username">The user to reset the password for. </param>
      <param name="passwordAnswer">The password answer for the specified user. </param>
      <exception cref="T:System.Web.Security.MembershipPasswordException">
        <paramref name="passwordAnswer" /> is invalid. - or -The user account is currently locked.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.Web.Security.SqlMembershipProvider.EnablePasswordReset" /> is set to false. </exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">
        <paramref name="username" /> is not found in the membership database.- or -The change password action was canceled by a subscriber to the <see cref="E:System.Web.Security.Membership.ValidatingPassword" /> event and the <see cref="P:System.Web.Security.ValidatePasswordEventArgs.FailureInformation" /> property was null.- or -An error occurred while retrieving the password from the database. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.- or -<paramref name="passwordAnswer" /> is an empty string, or is longer than 128 characters, and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is true.- or -<paramref name="passwordAnswer" /> is longer than 128 characters after encoding.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="username" /> is null.- or -<paramref name="passwordAnswer" /> is null and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is true.</exception>
      <exception cref="T:System.Exception">An unhandled exception occurred.</exception>
    </member>
    <member name="M:System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)">
      <summary>Clears the user's locked-out status so that the membership user can be validated.</summary>
      <returns>true if the membership user was successfully unlocked; otherwise, false. A value of false is also returned if the user does not exist in the database.</returns>
      <param name="username">The name of the membership user to clear the locked-out status for.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" /> is an empty string, is longer than 256 characters, or contains a comma.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="username" /> is null.</exception>
    </member>
    <member name="M:System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)">
      <summary>Updates information about a user in the SQL Server membership database.</summary>
      <param name="user">A <see cref="T:System.Web.Security.MembershipUser" /> object that represents the user to update and the updated information for the user. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="user" /> is null. - or -The <see cref="P:System.Web.Security.MembershipUser.UserName" /> property of <paramref name="user" /> is null.- or -The <see cref="P:System.Web.Security.MembershipUser.Email" /> property of <paramref name="user" /> is null and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> is set to true.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Web.Security.MembershipUser.UserName" /> property of <paramref name="user" /> is an empty string (""), contains a comma, or is longer than 256 characters.- or -The <see cref="P:System.Web.Security.MembershipUser.Email" /> property of <paramref name="user" /> is longer than 256 characters.- or -The <see cref="P:System.Web.Security.MembershipUser.Email" /> property of <paramref name="user" /> is an empty string and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> is set to true.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">The <see cref="P:System.Web.Security.MembershipUser.UserName" /> property of <paramref name="user" /> was not found in the database.- or -The <see cref="P:System.Web.Security.MembershipUser.Email" /> property of <paramref name="user" /> was equal to an existing e-mail address in the database and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> is set to true.- or -The user update failed.</exception>
    </member>
    <member name="M:System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)">
      <summary>Verifies that the specified user name and password exist in the SQL Server membership database.</summary>
      <returns>true if the specified username and password are valid; otherwise, false. A value of false is also returned if the user does not exist in the database.</returns>
      <param name="username">The name of the user to validate. </param>
      <param name="password">The password for the specified user. </param>
    </member>
    <member name="T:System.Web.Security.SqlRoleProvider">
      <summary>Manages storage of role membership information for an ASP.NET application in a SQL Server database.</summary>
    </member>
    <member name="M:System.Web.Security.SqlRoleProvider.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Web.Security.SqlRoleProvider" /> class.</summary>
    </member>
    <member name="M:System.Web.Security.SqlRoleProvider.AddUsersToRoles(System.String[],System.String[])">
      <summary>Adds the specified user names to each of the specified roles.</summary>
      <param name="usernames">A string array of user names to be added to the specified roles.</param>
      <param name="roleNames">A string array of role names to add the specified user names to.</param>
      <exception cref="T:System.ArgumentNullException">One of the roles in <paramref name="roleNames" /> is null.-or-One of the users in <paramref name="usernames" /> is null.</exception>
      <exception cref="T:System.ArgumentException">One of the roles in <paramref name="roleNames" /> is an empty string or contains a comma.-or-One of the users in <paramref name="usernames" /> is an empty string or contains a comma.-or-One of the roles in <paramref name="roleNames" /> is longer than 256 characters.-or-One of the users in <paramref name="usernames" /> is longer than 256 characters.-or-<paramref name="roleNames" /> contains a duplicate element.-or-<paramref name="usernames" /> contains a duplicate element.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">One or more of the specified role names was not found.-or- One or more of the specified user names was not found.-or- One or more of the specified user names is already associated with one or more of the specified role names.-or- An unknown error occurred while communicating with the database.</exception>
    </member>
    <member name="P:System.Web.Security.SqlRoleProvider.ApplicationName">
      <summary>Gets or sets the name of the application for which to store and retrieve role information.</summary>
      <returns>The name of the application for which to store and retrieve role information. The default is the <see cref="P:System.Web.HttpRequest.ApplicationPath" /> property value for the current <see cref="P:System.Web.HttpContext.Request" />.</returns>
      <exception cref="T:System.Web.HttpException">An attempt was made to set the <see cref="P:System.Web.Security.SqlRoleProvider.ApplicationName" /> property by a caller that does not have <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /> ASP.NET hosting permission.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">An attempt was made to set the <see cref="P:System.Web.Security.SqlRoleProvider.ApplicationName" /> to a string that is longer than 256 characters.</exception>
    </member>
    <member name="M:System.Web.Security.SqlRoleProvider.CreateRole(System.String)">
      <summary>Adds a new role to the role database.</summary>
      <param name="roleName">The name of the role to create. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="roleName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="roleName" /> is an empty string or contains a comma.-or-<paramref name="roleName" /> is longer than 256 characters.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">
        <paramref name="roleName" /> already exists in the database.-or- An unknown error occurred while communicating with the database. </exception>
    </member>
    <member name="M:System.Web.Security.SqlRoleProvider.DeleteRole(System.String,System.Boolean)">
      <summary>Removes a role from the role database.</summary>
      <returns>true if the role was successfully deleted; otherwise, false.</returns>
      <param name="roleName">The name of the role to delete.</param>
      <param name="throwOnPopulatedRole">If true, throws an exception if <paramref name="roleName" /> has one or more members.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="roleName" /> is null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="roleName" /> is an empty string or contains a comma.-or-<paramref name="roleName" /> is longer than 256 characters.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">
        <paramref name="roleName" /> has one or more members and <paramref name="throwOnPopulatedRole" /> is true.-or- An unknown error occurred while communicating with the database. </exception>
    </member>
    <member name="M:System.Web.Security.SqlRoleProvider.FindUsersInRole(System.String,System.String)">
      <summary>Gets an array of user names in a role where the user name contains the specified user name to match.</summary>
      <returns>A string array containing the names of all the users where the user name matches <paramref name="usernameToMatch" /> and the user is a member of the specified role.</returns>
      <param name="roleName">The role to search in.</param>
      <param name="usernameToMatch">The user name to search for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="roleName" /> is null (Nothing in Visual Basic).-or-<paramref name="usernameToMatch" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="roleName" /> is an empty string or contains a comma.-or-<paramref name="usernameToMatch" /> is an empty string.-or-<paramref name="roleName" /> is longer than 256 characters.-or-<paramref name="usernameToMatch" /> is longer than 256 characters.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">
        <paramref name="roleName" /> was not found in the database.-or- An unknown error occurred while communicating with the database. </exception>
    </member>
    <member name="M:System.Web.Security.SqlRoleProvider.GetAllRoles">
      <summary>Gets a list of all the roles for the application.</summary>
      <returns>A string array containing the names of all the roles stored in the database for a particular application.</returns>
      <exception cref="T:System.Configuration.Provider.ProviderException">An unknown error occurred while communicating with the database.</exception>
    </member>
    <member name="M:System.Web.Security.SqlRoleProvider.GetRolesForUser(System.String)">
      <summary>Gets a list of the roles that a user is in.</summary>
      <returns>A string array containing the names of all the roles that the specified user is in.</returns>
      <param name="username">The user to return a list of roles for. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="username" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" /> contains a comma.-or-<paramref name="username" /> is longer than 256 characters.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">An unknown error occurred while communicating with the database. </exception>
    </member>
    <member name="M:System.Web.Security.SqlRoleProvider.GetUsersInRole(System.String)">
      <summary>Gets a list of users in the specified role.</summary>
      <returns>A string array containing the names of all the users who are members of the specified role.</returns>
      <param name="roleName">The name of the role to get the list of users for. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="roleName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="roleName" /> is an empty string or contains a comma.-or-<paramref name="roleName" /> is longer than 256 characters.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">
        <paramref name="rolename" /> was not found in the database.-or- An unknown error occurred while communicating with the database. </exception>
    </member>
    <member name="M:System.Web.Security.SqlRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Initializes the SQL Server role provider with the property values specified in the ASP.NET application's configuration file. This method is not intended to be used directly from your code.</summary>
      <param name="name">The name of the <see cref="T:System.Web.Security.SqlRoleProvider" /> instance to initialize. </param>
      <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains the names and values of configuration options for the role provider. </param>
      <exception cref="T:System.Web.HttpException">The ASP.NET application is not running at <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />  trust or higher. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="config" /> is null. </exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">The connectionStringName attribute is empty or does not exist in the application configuration file for this <see cref="T:System.Web.Security.SqlRoleProvider" /> instance.-or-The applicationName attribute exceeds 256 characters.-or-The application configuration file for this <see cref="T:System.Web.Security.SqlRoleProvider" /> instance contains an unrecognized attribute. </exception>
    </member>
    <member name="M:System.Web.Security.SqlRoleProvider.IsUserInRole(System.String,System.String)">
      <summary>Gets a value indicating whether the specified user is in the specified role.</summary>
      <returns>true if the specified user name is in the specified role; otherwise, false.</returns>
      <param name="username">The user name to search for. </param>
      <param name="roleName">The role to search in. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="roleName" /> is null.-or-<paramref name="username" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="roleName" /> is an empty string or contains a comma.-or-<paramref name="username" /> is contains a comma.-or-<paramref name="roleName" /> is longer than 256 characters.-or-<paramref name="username" /> is longer than 256 characters.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">An unknown error occurred while communicating with the database. </exception>
    </member>
    <member name="M:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])">
      <summary>Removes the specified user names from the specified roles.</summary>
      <param name="usernames">A string array of user names to be removed from the specified roles. </param>
      <param name="roleNames">A string array of role names to remove the specified user names from. </param>
      <exception cref="T:System.ArgumentNullException">One of the roles in <paramref name="roleNames" /> is null.-or-One of the users in <paramref name="usernames" /> is null.</exception>
      <exception cref="T:System.ArgumentException">One of the roles in <paramref name="roleNames" /> is an empty string or contains a comma.-or-One of the users in <paramref name="usernames" /> is an empty string or contains a comma.-or-One of the roles in <paramref name="roleNames" /> is longer than 256 characters.-or-One of the users in <paramref name="usernames" /> is longer than 256 characters.-or-<paramref name="roleNames" /> contains a duplicate element.-or-<paramref name="usernames" /> contains a duplicate element.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">One or more of the specified user names was not found.-or- One or more of the specified role names was not found.-or- One or more of the specified user names is not associated with one or more of the specified role names.-or- An unknown error occurred while communicating with the database. </exception>
    </member>
    <member name="M:System.Web.Security.SqlRoleProvider.RoleExists(System.String)">
      <summary>Gets a value indicating whether the specified role name already exists in the role database.</summary>
      <returns>true if the role name already exists in the database; otherwise, false.</returns>
      <param name="roleName">The name of the role to search for in the database. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="roleName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="roleName" /> is an empty string or contains a comma.-or-<paramref name="roleName" /> is longer than 256 characters.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">An unknown error occurred while communicating with the database. </exception>
    </member>
    <member name="T:System.Web.Security.UrlAuthorizationModule">
      <summary>Verifies that the user has permission to access the URL requested. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Security.UrlAuthorizationModule.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Web.Security.UrlAuthorizationModule" /> class.</summary>
    </member>
    <member name="M:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal(System.String,System.Security.Principal.IPrincipal,System.String)">
      <summary>Determines whether the user has access to the requested file.</summary>
      <returns>true if the current user can access the file; otherwise, false.</returns>
      <param name="virtualPath">The virtual path to the file.</param>
      <param name="user">An <see cref="T:System.Security.Principal.IPrincipal" /> object representing the current user.</param>
      <param name="verb">The HTTP verb used to make the request.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="virtualPath" /> is null.- or -<paramref name="user" /> is null.- or -<paramref name="verb" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="virtualPath" /> is outside of the application root path.</exception>
    </member>
    <member name="M:System.Web.Security.UrlAuthorizationModule.Dispose">
      <summary>Releases all resources, other than memory, used by the <see cref="T:System.Web.Security.UrlAuthorizationModule" />.</summary>
    </member>
    <member name="M:System.Web.Security.UrlAuthorizationModule.Init(System.Web.HttpApplication)">
      <summary>Initializes the <see cref="T:System.Web.Security.UrlAuthorizationModule" /> object.</summary>
      <param name="app">The current <see cref="T:System.Web.HttpApplication" /> instance. </param>
    </member>
    <member name="T:System.Web.Security.WindowsAuthenticationEventArgs">
      <summary>Provides data for the WindowsAuthentication_OnAuthenticate event. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Security.WindowsAuthenticationEventArgs.#ctor(System.Security.Principal.WindowsIdentity,System.Web.HttpContext)">
      <summary>Initializes a newly created instance of the <see cref="T:System.Web.Security.WindowsAuthenticationEventArgs" /> class.</summary>
      <param name="identity">The Windows identity object. </param>
      <param name="context">The context for the event. </param>
    </member>
    <member name="P:System.Web.Security.WindowsAuthenticationEventArgs.Context">
      <summary>Gets the <see cref="T:System.Web.HttpContext" /> object for the current HTTP request.</summary>
      <returns>The <see cref="T:System.Web.HttpContext" /> object for the current HTTP request.</returns>
    </member>
    <member name="P:System.Web.Security.WindowsAuthenticationEventArgs.Identity">
      <summary>Gets the Windows identity passed to the <see cref="T:System.Web.Security.WindowsAuthenticationEventArgs" /> constructor.</summary>
      <returns>The Windows identity passed to the <see cref="T:System.Web.Security.WindowsAuthenticationEventArgs" /> constructor.</returns>
    </member>
    <member name="P:System.Web.Security.WindowsAuthenticationEventArgs.User">
      <summary>Gets or sets the <see cref="T:System.Security.Principal.IPrincipal" /> object to be associated with the current request.</summary>
      <returns>The <see cref="T:System.Security.Principal.IPrincipal" /> object to be associated with the current request.</returns>
    </member>
    <member name="T:System.Web.Security.WindowsAuthenticationEventHandler">
      <summary>Represents the method that handles the WindowsAuthentication_OnAuthenticate event of a <see cref="T:System.Web.Security.WindowsAuthenticationModule" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Web.Security.WindowsAuthenticationEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Web.Security.WindowsAuthenticationModule">
      <summary>Sets the identity of the user for an ASP.NET application when Windows authentication is enabled. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Security.WindowsAuthenticationModule.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Web.Security.WindowsAuthenticationModule" /> class.</summary>
    </member>
    <member name="E:System.Web.Security.WindowsAuthenticationModule.Authenticate">
      <summary>Occurs when the application authenticates the current request.</summary>
    </member>
    <member name="M:System.Web.Security.WindowsAuthenticationModule.Dispose">
      <summary>Releases all resources, other than memory, used by the <see cref="T:System.Web.Security.WindowsAuthenticationModule" />.</summary>
    </member>
    <member name="M:System.Web.Security.WindowsAuthenticationModule.Init(System.Web.HttpApplication)">
      <summary>Initializes the <see cref="T:System.Web.Security.WindowsAuthenticationModule" /> object.</summary>
      <param name="app">The current <see cref="T:System.Web.HttpApplication" /> instance. </param>
    </member>
    <member name="T:System.Web.Security.WindowsTokenRoleProvider">
      <summary>Gets role information for an ASP.NET application from Windows group membership.</summary>
    </member>
    <member name="M:System.Web.Security.WindowsTokenRoleProvider.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Web.Security.WindowsTokenRoleProvider" /> class.</summary>
    </member>
    <member name="M:System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(System.String[],System.String[])">
      <summary>This method is not supported by the Windows token role provider.</summary>
      <param name="usernames">A string array of user names to be added to the specified roles. </param>
      <param name="roleNames">A string array of role names to add the specified user names to. </param>
      <exception cref="T:System.Configuration.Provider.ProviderException">An unsupported method was called.</exception>
    </member>
    <member name="P:System.Web.Security.WindowsTokenRoleProvider.ApplicationName">
      <summary>Gets or sets the name of the application.</summary>
      <returns>The name of the application.</returns>
      <exception cref="T:System.Web.HttpException">An attempt was made to set the <see cref="P:System.Web.Security.WindowsTokenRoleProvider.ApplicationName" /> property by a caller that does not have <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /> ASP.NET hosting permission.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">An attempt was made to set the <see cref="P:System.Web.Security.WindowsTokenRoleProvider.ApplicationName" /> to a string that is longer than 256 characters.</exception>
    </member>
    <member name="M:System.Web.Security.WindowsTokenRoleProvider.CreateRole(System.String)">
      <summary>This method is not supported by the Windows token role provider.</summary>
      <param name="roleName">The name of the role to create.</param>
      <exception cref="T:System.Configuration.Provider.ProviderException">An unsupported method was called.</exception>
    </member>
    <member name="M:System.Web.Security.WindowsTokenRoleProvider.DeleteRole(System.String,System.Boolean)">
      <summary>This method is not supported by the Windows token role provider.</summary>
      <returns>None. The method is not supported by the <see cref="T:System.Web.Security.WindowsTokenRoleProvider" /> class and always throws a <see cref="T:System.Configuration.Provider.ProviderException" />.</returns>
      <param name="roleName">The name of the role to delete.</param>
      <param name="throwOnPopulatedRole">If true, an exception will be thrown on an attempt to delete a role that contains one or more members.</param>
      <exception cref="T:System.Configuration.Provider.ProviderException">An unsupported method was called.</exception>
    </member>
    <member name="M:System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(System.String,System.String)">
      <summary>This method is not supported by the Windows token role provider.</summary>
      <returns>None. The method is not supported by the <see cref="T:System.Web.Security.WindowsTokenRoleProvider" /> class and always throws a <see cref="T:System.Configuration.Provider.ProviderException" />.</returns>
      <param name="roleName">The role to search in.</param>
      <param name="usernameToMatch">The user name to find in the role.</param>
      <exception cref="T:System.Configuration.Provider.ProviderException">An unsupported method was called.</exception>
    </member>
    <member name="M:System.Web.Security.WindowsTokenRoleProvider.GetAllRoles">
      <summary>This method is not supported by the Windows token role provider.</summary>
      <returns>None. The method is not supported by the <see cref="T:System.Web.Security.WindowsTokenRoleProvider" /> class and always throws a <see cref="T:System.Configuration.Provider.ProviderException" />.</returns>
      <exception cref="T:System.Configuration.Provider.ProviderException">An unsupported method was called.</exception>
    </member>
    <member name="M:System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(System.String)">
      <summary>Gets a list of the Windows groups that a user is in.</summary>
      <returns>A string array containing the names of all the Windows groups that the specified user is in.</returns>
      <param name="username">The user to return the list of Windows groups for in the form DOMAIN\username. </param>
      <exception cref="T:System.Configuration.Provider.ProviderException">The currently executing user does not have an authenticated <see cref="T:System.Security.Principal.WindowsIdentity" /> attached to <see cref="P:System.Web.UI.Page.User" />. For non-HTTP scenarios, the currently executing user does not have an authenticated <see cref="T:System.Security.Principal.WindowsIdentity" /> attached to <see cref="P:System.Threading.Thread.CurrentPrincipal" />.-or-<paramref name="username" /> does not match the <see cref="P:System.Security.Principal.WindowsIdentity.Name" /> of the current <see cref="T:System.Security.Principal.WindowsIdentity" />.-or-A failure occurred while retrieving the user's Windows group information.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="username" /> is null.</exception>
      <exception cref="T:System.Web.HttpException">The trust level is less than <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" />.</exception>
    </member>
    <member name="M:System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(System.String)">
      <summary>This method is not supported by the Windows token role provider.</summary>
      <returns>None. The method is not supported by the <see cref="T:System.Web.Security.WindowsTokenRoleProvider" /> class and always throws a <see cref="T:System.Configuration.Provider.ProviderException" />.</returns>
      <param name="roleName">The name of the role to get the list of users for.</param>
      <exception cref="T:System.Configuration.Provider.ProviderException">An unsupported method was called.</exception>
    </member>
    <member name="M:System.Web.Security.WindowsTokenRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Initializes the Windows token role provider with the property values specified in the configuration file for the ASP.NET application. This method is not intended to be used directly from your code.</summary>
      <param name="name">The name of the <see cref="T:System.Web.Security.WindowsTokenRoleProvider" /> instance to initialize. </param>
      <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> constructor that contains the names and values of configuration options for the <see cref="T:System.Web.Security.WindowsTokenRoleProvider" /> class. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="config" /> is null.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">The applicationName attribute in the configuration is longer than 256 characters.-or-The application configuration file for this <see cref="T:System.Web.Security.WindowsTokenRoleProvider" /> instance contains an unrecognized attribute. </exception>
    </member>
    <member name="M:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.Security.Principal.WindowsBuiltInRole)">
      <summary>Gets a value indicating whether the specified user is in the specified built-in Windows role.</summary>
      <returns>true if the specified user is in the specified Windows role; otherwise, false.</returns>
      <param name="username">The user name to search for in the form DOMAIN\username.</param>
      <param name="role">The Windows role to search in. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="username" /> is null.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">The currently executing user does not have an authenticated <see cref="T:System.Security.Principal.WindowsIdentity" /> attached to <see cref="P:System.Web.UI.Page.User" />. For non-HTTP scenarios, the currently executing user does not have an authenticated <see cref="T:System.Security.Principal.WindowsIdentity" /> attached to <see cref="P:System.Threading.Thread.CurrentPrincipal" />.-or-<paramref name="username" /> does not match the <see cref="P:System.Security.Principal.WindowsIdentity.Name" /> of the current <see cref="T:System.Security.Principal.WindowsIdentity" />.</exception>
    </member>
    <member name="M:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.String)">
      <summary>Gets a value indicating whether the specified user is in the specified Windows group.</summary>
      <returns>true if the specified user name is in the specified Windows group; otherwise, false.</returns>
      <param name="username">The user name to search for in the form DOMAIN\username. </param>
      <param name="roleName">The Windows group to search in the form DOMAIN\rolename. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="username" /> is null.-or-<paramref name="roleName" /> is null.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">The currently executing user does not have an authenticated <see cref="T:System.Security.Principal.WindowsIdentity" /> attached to <see cref="P:System.Web.UI.Page.User" />. For non-HTTP scenarios, the currently executing user does not have an authenticated <see cref="T:System.Security.Principal.WindowsIdentity" /> attached to <see cref="P:System.Threading.Thread.CurrentPrincipal" />.-or-<paramref name="username" /> does not match the <see cref="P:System.Security.Principal.WindowsIdentity.Name" /> of the current <see cref="T:System.Security.Principal.WindowsIdentity" />.-or-A failure occurred while retrieving the user's Windows group information.</exception>
    </member>
    <member name="M:System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])">
      <summary>This method is not supported by the Windows token role provider.</summary>
      <param name="usernames">A string array of user names to be added to the specified roles. </param>
      <param name="roleNames">A string array of role names to add the specified user names to. </param>
      <exception cref="T:System.Configuration.Provider.ProviderException">An unsupported method was called.</exception>
    </member>
    <member name="M:System.Web.Security.WindowsTokenRoleProvider.RoleExists(System.String)">
      <summary>This method is not supported by the Windows token role provider.</summary>
      <returns>None. The method is not supported by the <see cref="T:System.Web.Security.WindowsTokenRoleProvider" /> class and always throws a <see cref="T:System.Configuration.Provider.ProviderException" />.</returns>
      <param name="roleName">The name of the role to search for in the data source.</param>
      <exception cref="T:System.Configuration.Provider.ProviderException">An unsupported method was called.</exception>
    </member>
    <member name="T:System.Web.SessionState.HttpSessionState">
      <summary>Provides access to session-state values as well as session-level settings and lifetime management methods.</summary>
    </member>
    <member name="M:System.Web.SessionState.HttpSessionState.Abandon">
      <summary>Cancels the current session.</summary>
    </member>
    <member name="M:System.Web.SessionState.HttpSessionState.Add(System.String,System.Object)">
      <summary>Adds a new item to the session-state collection.</summary>
      <param name="name">The name of the item to add to the session-state collection. </param>
      <param name="value">The value of the item to add to the session-state collection. </param>
    </member>
    <member name="M:System.Web.SessionState.HttpSessionState.Clear">
      <summary>Removes all keys and values from the session-state collection.</summary>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionState.CodePage">
      <summary>Gets or sets the character-set identifier for the current session.</summary>
      <returns>The character-set identifier for the current session.</returns>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionState.Contents">
      <summary>Gets a reference to the current session-state object.</summary>
      <returns>The current <see cref="T:System.Web.SessionState.HttpSessionState" />.</returns>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionState.CookieMode">
      <summary>Gets a value that indicates whether the application is configured for cookieless sessions.</summary>
      <returns>One of the <see cref="T:System.Web.HttpCookieMode" /> values that indicate whether the application is configured for cookieless sessions. The default is <see cref="F:System.Web.HttpCookieMode.UseCookies" />.</returns>
    </member>
    <member name="M:System.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)">
      <summary>Copies the collection of session-state values to a one-dimensional array, starting at the specified index in the array.</summary>
      <param name="array">The <see cref="T:System.Array" /> that receives the session values. </param>
      <param name="index">The zero-based index in <paramref name="array" /> from which copying starts. </param>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionState.Count">
      <summary>Gets the number of items in the session-state collection.</summary>
      <returns>The number of items in the collection.</returns>
    </member>
    <member name="M:System.Web.SessionState.HttpSessionState.GetEnumerator">
      <summary>Returns an enumerator that can be used to read all the session-state variable names in the current session.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the variable names in the session-state collection.</returns>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionState.IsCookieless">
      <summary>Gets a value indicating whether the session ID is embedded in the URL or stored in an HTTP cookie.</summary>
      <returns>true if the session is embedded in the URL; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionState.IsNewSession">
      <summary>Gets a value indicating whether the session was created with the current request.</summary>
      <returns>true if the session was created with the current request; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionState.IsReadOnly">
      <summary>Gets a value indicating whether the session is read-only.</summary>
      <returns>true if the session is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionState.IsSynchronized">
      <summary>Gets a value indicating whether access to the collection of session-state values is synchronized (thread safe).</summary>
      <returns>true if access to the collection is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionState.Item(System.Int32)">
      <summary>Gets or sets a session value by numerical index.</summary>
      <returns>The session-state value stored at the specified index, or null if the item does not exist.</returns>
      <param name="index">The numerical index of the session value. </param>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionState.Item(System.String)">
      <summary>Gets or sets a session value by name.</summary>
      <returns>The session-state value with the specified name, or null if the item does not exist.</returns>
      <param name="name">The key name of the session value. </param>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionState.Keys">
      <summary>Gets a collection of the keys for all values stored in the session-state collection.</summary>
      <returns>The <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> that contains all the session keys.</returns>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionState.LCID">
      <summary>Gets or sets the locale identifier (LCID) of the current session.</summary>
      <returns>A <see cref="T:System.Globalization.CultureInfo" /> instance that specifies the culture of the current session.</returns>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionState.Mode">
      <summary>Gets the current session-state mode.</summary>
      <returns>One of the <see cref="T:System.Web.SessionState.SessionStateMode" /> values.</returns>
    </member>
    <member name="M:System.Web.SessionState.HttpSessionState.Remove(System.String)">
      <summary>Deletes an item from the session-state collection.</summary>
      <param name="name">The name of the item to delete from the session-state collection. </param>
    </member>
    <member name="M:System.Web.SessionState.HttpSessionState.RemoveAll">
      <summary>Removes all keys and values from the session-state collection.</summary>
    </member>
    <member name="M:System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32)">
      <summary>Deletes an item at a specified index from the session-state collection.</summary>
      <param name="index">The index of the item to remove from the session-state collection. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.- or -<paramref name="index" /> is equal to or greater than <see cref="P:System.Web.SessionState.HttpSessionState.Count" />.</exception>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionState.SessionID">
      <summary>Gets the unique identifier for the session.</summary>
      <returns>The unique session identifier.</returns>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionState.StaticObjects">
      <summary>Gets a collection of objects declared by &lt;object Runat="Server" Scope="Session"/&gt; tags within the ASP.NET application file Global.asax.</summary>
      <returns>An <see cref="T:System.Web.HttpStaticObjectsCollection" /> containing objects declared in the Global.asax file.</returns>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionState.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection of session-state values.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionState.Timeout">
      <summary>Gets and sets the amount of time, in minutes, allowed between requests before the session-state provider terminates the session.</summary>
      <returns>The time-out period, in minutes.</returns>
    </member>
    <member name="T:System.Web.SessionState.HttpSessionStateContainer">
      <summary>Contains session-state values as well as session-level settings for the current request.</summary>
    </member>
    <member name="M:System.Web.SessionState.HttpSessionStateContainer.#ctor(System.String,System.Web.SessionState.ISessionStateItemCollection,System.Web.HttpStaticObjectsCollection,System.Int32,System.Boolean,System.Web.HttpCookieMode,System.Web.SessionState.SessionStateMode,System.Boolean)">
      <summary>Creates a new <see cref="T:System.Web.SessionState.HttpSessionStateContainer" /> object and initializes it with the specified settings and values.</summary>
      <param name="id">A session identifier for the new session. If null, an <see cref="T:System.ArgumentException" /> is thrown.</param>
      <param name="sessionItems">An <see cref="T:System.Web.SessionState.ISessionStateItemCollection" /> that contains the session values for the new session-state provider.</param>
      <param name="staticObjects">An <see cref="T:System.Web.HttpStaticObjectsCollection" /> that specifies the objects declared by &lt;object Runat="Server" Scope="Session"/&gt; tags within the ASP.NET application file Global.asax.</param>
      <param name="timeout">The amount of time, in minutes, allowed between requests before the session-state provider terminates the session.</param>
      <param name="newSession">true to indicate the session was created with the current request; otherwise, false. </param>
      <param name="cookieMode">The <see cref="P:System.Web.SessionState.HttpSessionStateContainer.CookieMode" /> for the new session-state provider.</param>
      <param name="mode">One of the <see cref="T:System.Web.SessionState.SessionStateMode" /> values that specifies the current session-state mode. </param>
      <param name="isReadonly">true to indicate the session is read-only; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> is null.</exception>
    </member>
    <member name="M:System.Web.SessionState.HttpSessionStateContainer.Abandon">
      <summary>Marks the current session as abandoned.</summary>
    </member>
    <member name="M:System.Web.SessionState.HttpSessionStateContainer.Add(System.String,System.Object)">
      <summary>Adds a new item to the session-state collection.</summary>
      <param name="name">The name of the item to add to the session-state collection. </param>
      <param name="value">The value of the item to add to the session-state collection. </param>
    </member>
    <member name="M:System.Web.SessionState.HttpSessionStateContainer.Clear">
      <summary>Removes all values and keys from the session-state collection.</summary>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionStateContainer.CodePage">
      <summary>Gets or sets the character-set identifier for the current session.</summary>
      <returns>The character-set identifier for the current session.</returns>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionStateContainer.CookieMode">
      <summary>Gets a value that indicates whether the application is configured for cookieless sessions.</summary>
      <returns>One of the <see cref="T:System.Web.HttpCookieMode" /> values that indicates whether the application is configured for cookieless sessions. The default is <see cref="F:System.Web.HttpCookieMode.UseCookies" />.</returns>
    </member>
    <member name="M:System.Web.SessionState.HttpSessionStateContainer.CopyTo(System.Array,System.Int32)">
      <summary>Copies the collection of session-state values to a one-dimensional array, starting at the specified index in the array.</summary>
      <param name="array">The <see cref="T:System.Array" /> that receives the session values. </param>
      <param name="index">The zero-based index in <paramref name="array" /> from which copying starts. </param>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionStateContainer.Count">
      <summary>Gets the number of items in the session-state collection.</summary>
      <returns>The number of items in the collection.</returns>
    </member>
    <member name="M:System.Web.SessionState.HttpSessionStateContainer.GetEnumerator">
      <summary>Returns an enumerator that can be used to read all the session-state variable names in the current session.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the variable names in the session-state collection.</returns>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned">
      <summary>Gets a value indicating whether the current session has been abandoned.</summary>
      <returns>true if the current session has been abandoned; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionStateContainer.IsCookieless">
      <summary>Gets a value indicating whether the session ID is embedded in the URL or stored in an HTTP cookie.</summary>
      <returns>true if the session is embedded in the URL; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionStateContainer.IsNewSession">
      <summary>Gets a value indicating whether the session was created with the current request.</summary>
      <returns>true if the session was created with the current request; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionStateContainer.IsReadOnly">
      <summary>Gets a value indicating whether the session is read-only.</summary>
      <returns>true if the session is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionStateContainer.IsSynchronized">
      <summary>Gets a value indicating whether access to the collection of session-state values is synchronized (thread safe).</summary>
      <returns>Always false, because thread-safe <see cref="T:System.Web.SessionState.HttpSessionStateContainer" /> objects are not supported.</returns>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionStateContainer.Item(System.Int32)">
      <summary>Gets or sets a session value by numerical index.</summary>
      <returns>The session-state value stored at the specified index.</returns>
      <param name="index">The numerical index of the session value. </param>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionStateContainer.Item(System.String)">
      <summary>Gets or sets a session value by name.</summary>
      <returns>The session-state value with the specified name.</returns>
      <param name="name">The key name of the session value. </param>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionStateContainer.Keys">
      <summary>Gets a collection of the keys for all values stored in the session-state collection.</summary>
      <returns>The <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> that contains all the session keys.</returns>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionStateContainer.LCID">
      <summary>Gets or sets the locale identifier (LCID) of the current session.</summary>
      <returns>A <see cref="T:System.Globalization.CultureInfo" /> instance that specifies the culture of the current session.</returns>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionStateContainer.Mode">
      <summary>Gets the current session-state mode.</summary>
      <returns>One of the <see cref="T:System.Web.SessionState.SessionStateMode" /> values.</returns>
    </member>
    <member name="M:System.Web.SessionState.HttpSessionStateContainer.Remove(System.String)">
      <summary>Deletes an item from the session-state collection.</summary>
      <param name="name">The name of the item to delete from the session-state collection. </param>
    </member>
    <member name="M:System.Web.SessionState.HttpSessionStateContainer.RemoveAll">
      <summary>Clears all session-state values.</summary>
    </member>
    <member name="M:System.Web.SessionState.HttpSessionStateContainer.RemoveAt(System.Int32)">
      <summary>Deletes an item at a specified index from the session-state collection.</summary>
      <param name="index">The index of the item to remove from the session-state collection. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.- or -<paramref name="index" /> is equal to or greater than <see cref="P:System.Web.SessionState.HttpSessionStateContainer.Count" />.</exception>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionStateContainer.SessionID">
      <summary>Gets the unique identifier for the session.</summary>
      <returns>The unique session identifier.</returns>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionStateContainer.StaticObjects">
      <summary>Gets a collection of objects declared by &lt;object Runat="Server" Scope="Session"/&gt; tags within the ASP.NET application file Global.asax.</summary>
      <returns>An <see cref="T:System.Web.HttpStaticObjectsCollection" /> containing objects declared in the Global.asax file.</returns>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionStateContainer.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection of session-state values.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="P:System.Web.SessionState.HttpSessionStateContainer.Timeout">
      <summary>Gets and sets the amount of time, in minutes, allowed between requests before the session-state provider terminates the session.</summary>
      <returns>The time-out period, in minutes.</returns>
      <exception cref="T:System.ArgumentException">An attempt was made to set the <see cref="P:System.Web.SessionState.HttpSessionStateContainer.Timeout" /> value to an integer value less than 1.- or -An attempt was made to set the <see cref="P:System.Web.SessionState.HttpSessionStateContainer.Timeout" /> value to an integer value greater than the maximum allowed when <see cref="P:System.Web.SessionState.HttpSessionState.Mode" /> is set to <see cref="F:System.Web.SessionState.SessionStateMode.InProc" /> or <see cref="F:System.Web.SessionState.SessionStateMode.StateServer" />. The maximum allowed is 525,600 (one year). </exception>
    </member>
    <member name="T:System.Web.SessionState.IHttpSessionState">
      <summary>Defines the contract to implement a custom session-state container.</summary>
    </member>
    <member name="M:System.Web.SessionState.IHttpSessionState.Abandon">
      <summary>Ends the current session.</summary>
    </member>
    <member name="M:System.Web.SessionState.IHttpSessionState.Add(System.String,System.Object)">
      <summary>Adds a new item to the session-state collection.</summary>
      <param name="name">The name of the item to add to the session-state collection. </param>
      <param name="value">The value of the item to add to the session-state collection. </param>
    </member>
    <member name="M:System.Web.SessionState.IHttpSessionState.Clear">
      <summary>Clears all values from the session-state item collection.</summary>
    </member>
    <member name="P:System.Web.SessionState.IHttpSessionState.CodePage">
      <summary>Gets or sets the code-page identifier for the current session.</summary>
      <returns>The code-page identifier for the current session.</returns>
    </member>
    <member name="P:System.Web.SessionState.IHttpSessionState.CookieMode">
      <summary>Gets a value that indicates whether the application is configured for cookieless sessions.</summary>
      <returns>One of the <see cref="T:System.Web.HttpCookieMode" /> values that indicate whether the application is configured for cookieless sessions. The default is <see cref="F:System.Web.HttpCookieMode.UseCookies" />.</returns>
    </member>
    <member name="M:System.Web.SessionState.IHttpSessionState.CopyTo(System.Array,System.Int32)">
      <summary>Copies the collection of session-state item values to a one-dimensional array, starting at the specified index in the array.</summary>
      <param name="array">The <see cref="T:System.Array" /> that receives the session values. </param>
      <param name="index">The index in <paramref name="array" /> where copying starts. </param>
    </member>
    <member name="P:System.Web.SessionState.IHttpSessionState.Count">
      <summary>Gets the number of items in the session-state item collection.</summary>
      <returns>The number of items in the session-state item collection.</returns>
    </member>
    <member name="M:System.Web.SessionState.IHttpSessionState.GetEnumerator">
      <summary>Returns an enumerator that can be used to read all the session-state item values in the current session.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the values in the session-state item collection.</returns>
    </member>
    <member name="P:System.Web.SessionState.IHttpSessionState.IsCookieless">
      <summary>Gets a value indicating whether the session ID is embedded in the URL or stored in an HTTP cookie.</summary>
      <returns>true if the session is embedded in the URL; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.SessionState.IHttpSessionState.IsNewSession">
      <summary>Gets a value indicating whether the session was created with the current request.</summary>
      <returns>true if the session was created with the current request; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.SessionState.IHttpSessionState.IsReadOnly">
      <summary>Gets a value indicating whether the session is read-only.</summary>
      <returns>true if the session is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.SessionState.IHttpSessionState.IsSynchronized">
      <summary>Gets a value indicating whether access to the collection of session-state values is synchronized (thread safe).</summary>
      <returns>true if access to the collection is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Web.SessionState.IHttpSessionState.Item(System.Int32)">
      <summary>Gets or sets a session-state item value by numerical index.</summary>
      <returns>The session-state item value specified in the <paramref name="index" /> parameter.</returns>
      <param name="index">The numerical index of the session-state item value. </param>
    </member>
    <member name="P:System.Web.SessionState.IHttpSessionState.Item(System.String)">
      <summary>Gets or sets a session-state item value by name.</summary>
      <returns>The session-state item value specified in the <paramref name="name" /> parameter.</returns>
      <param name="name">The key name of the session-state item value. </param>
    </member>
    <member name="P:System.Web.SessionState.IHttpSessionState.Keys">
      <summary>Gets a collection of the keys for all values stored in the session-state item collection.</summary>
      <returns>The <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> that contains all the session-item keys.</returns>
    </member>
    <member name="P:System.Web.SessionState.IHttpSessionState.LCID">
      <summary>Gets or sets the locale identifier (LCID) of the current session.</summary>
      <returns>A <see cref="T:System.Globalization.CultureInfo" /> instance that specifies the culture of the current session.</returns>
    </member>
    <member name="P:System.Web.SessionState.IHttpSessionState.Mode">
      <summary>Gets the current session-state mode.</summary>
      <returns>One of the <see cref="T:System.Web.SessionState.SessionStateMode" /> values.</returns>
    </member>
    <member name="M:System.Web.SessionState.IHttpSessionState.Remove(System.String)">
      <summary>Deletes an item from the session-state item collection.</summary>
      <param name="name">The name of the item to delete from the session-state item collection. </param>
    </member>
    <member name="M:System.Web.SessionState.IHttpSessionState.RemoveAll">
      <summary>Clears all values from the session-state item collection.</summary>
    </member>
    <member name="M:System.Web.SessionState.IHttpSessionState.RemoveAt(System.Int32)">
      <summary>Deletes an item at a specified index from the session-state item collection.</summary>
      <param name="index">The index of the item to remove from the session-state collection. </param>
    </member>
    <member name="P:System.Web.SessionState.IHttpSessionState.SessionID">
      <summary>Gets the unique session identifier for the session.</summary>
      <returns>The session ID.</returns>
    </member>
    <member name="P:System.Web.SessionState.IHttpSessionState.StaticObjects">
      <summary>Gets a collection of objects declared by &lt;object Runat="Server" Scope="Session"/&gt; tags within the ASP.NET application file Global.asax.</summary>
      <returns>An <see cref="T:System.Web.HttpStaticObjectsCollection" /> containing objects declared in the Global.asax file.</returns>
    </member>
    <member name="P:System.Web.SessionState.IHttpSessionState.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection of session-state values.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="P:System.Web.SessionState.IHttpSessionState.Timeout">
      <summary>Gets and sets the time-out period (in minutes) allowed between requests before the session-state provider terminates the session.</summary>
      <returns>The time-out period, in minutes.</returns>
    </member>
    <member name="T:System.Web.SessionState.IPartialSessionState">
      <summary>When implemented in a type, returns a list of zero or more session keys that indicate to a session-state provider which session-state items have to be retrieved.</summary>
    </member>
    <member name="P:System.Web.SessionState.IPartialSessionState.PartialSessionStateKeys">
      <summary>Gets a list of keys that are associated with session-state values.</summary>
      <returns>A generic list of strings that serve as keys for session-state values. </returns>
    </member>
    <member name="T:System.Web.SessionState.IReadOnlySessionState">
      <summary>Specifies that the target HTTP handler requires only read access to session-state values. This is a marker interface and has no methods.</summary>
    </member>
    <member name="T:System.Web.SessionState.IRequiresSessionState">
      <summary>Specifies that the target HTTP handler requires read and write access to session-state values. This is a marker interface and has no methods.</summary>
    </member>
    <member name="T:System.Web.SessionState.ISessionIDManager">
      <summary>Defines the contract that a custom session-state identifier manager must implement.</summary>
    </member>
    <member name="M:System.Web.SessionState.ISessionIDManager.CreateSessionID(System.Web.HttpContext)">
      <summary>Creates a unique session identifier.</summary>
      <returns>A unique session identifier.</returns>
      <param name="context">The current <see cref="T:System.Web.HttpContext" /> object that references server objects used to process HTTP requests (for example, the <see cref="P:System.Web.HttpContext.Request" /> and <see cref="P:System.Web.HttpContext.Response" /> properties). </param>
    </member>
    <member name="M:System.Web.SessionState.ISessionIDManager.GetSessionID(System.Web.HttpContext)">
      <summary>Gets the session identifier from the context of the current HTTP request.</summary>
      <returns>The current session identifier sent with the HTTP request.</returns>
      <param name="context">The current <see cref="T:System.Web.HttpContext" /> object that references server objects used to process HTTP requests (for example, the <see cref="P:System.Web.HttpContext.Request" /> and <see cref="P:System.Web.HttpContext.Response" /> properties).</param>
    </member>
    <member name="M:System.Web.SessionState.ISessionIDManager.Initialize">
      <summary>Initializes the <see cref="T:System.Web.SessionState.SessionIDManager" /> object.</summary>
    </member>
    <member name="M:System.Web.SessionState.ISessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)">
      <summary>Performs per-request initialization of the <see cref="T:System.Web.SessionState.SessionIDManager" /> object.</summary>
      <returns>true to indicate that the initialization performed a redirect; otherwise, false.</returns>
      <param name="context">The <see cref="T:System.Web.HttpContext" /> object that contains information about the current request.</param>
      <param name="suppressAutoDetectRedirect">true if the session-ID manager should redirect to determine cookie support; otherwise, false to suppress automatic redirection to determine cookie support.</param>
      <param name="supportSessionIDReissue">When this method returns, contains a Boolean that indicates whether the <see cref="T:System.Web.SessionState.ISessionIDManager" /> object supports issuing new session IDs when the original ID is out of date. This parameter is passed uninitialized. Session ID reuse is appropriate when the session-state ID is encoded on a URL and the potential exists for the URL to be shared or emailed.If a custom session-state implementation partitions cookies by virtual path, session state should also be supported.</param>
    </member>
    <member name="M:System.Web.SessionState.ISessionIDManager.RemoveSessionID(System.Web.HttpContext)">
      <summary>Deletes the session identifier from the cookie or from the URL.</summary>
      <param name="context">The current <see cref="T:System.Web.HttpContext" /> object that references server objects used to process HTTP requests (for example, the <see cref="P:System.Web.HttpContext.Request" /> and <see cref="P:System.Web.HttpContext.Response" /> properties).</param>
    </member>
    <member name="M:System.Web.SessionState.ISessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)">
      <summary>Saves a newly created session identifier to the HTTP response.</summary>
      <param name="context">The current <see cref="T:System.Web.HttpContext" /> object that references server objects used to process HTTP requests (for example, the <see cref="P:System.Web.HttpContext.Request" /> and <see cref="P:System.Web.HttpContext.Response" /> properties).</param>
      <param name="id">The session identifier. </param>
      <param name="redirected">When this method returns, contains a Boolean value that is true if the response is redirected to the current URL with the session identifier added to the URL; otherwise, false. </param>
      <param name="cookieAdded">When this method returns, contains a Boolean value that is true if a cookie has been added to the HTTP response; otherwise, false. </param>
    </member>
    <member name="M:System.Web.SessionState.ISessionIDManager.Validate(System.String)">
      <summary>Confirms that the supplied session identifier is valid.</summary>
      <returns>true if the session identifier is valid; otherwise, false.</returns>
      <param name="id">The session identifier to validate. </param>
    </member>
    <member name="T:System.Web.SessionState.ISessionStateItemCollection">
      <summary>Defines the contract for the collection used by ASP.NET session state to manage session.</summary>
    </member>
    <member name="M:System.Web.SessionState.ISessionStateItemCollection.Clear">
      <summary>Removes all values and keys from the session-state collection.</summary>
    </member>
    <member name="P:System.Web.SessionState.ISessionStateItemCollection.Dirty">
      <summary>Gets or sets a value indicating whether the collection has been marked as changed.</summary>
      <returns>true if the <see cref="T:System.Web.SessionState.SessionStateItemCollection" /> contents have been changed; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.SessionState.ISessionStateItemCollection.Item(System.Int32)">
      <summary>Gets or sets a value in the collection by numerical index.</summary>
      <returns>The value in the collection stored at the specified index.</returns>
      <param name="index">The numerical index of the value in the collection.</param>
    </member>
    <member name="P:System.Web.SessionState.ISessionStateItemCollection.Item(System.String)">
      <summary>Gets or sets a value in the collection by name.</summary>
      <returns>The value in the collection with the specified name.</returns>
      <param name="name">The key name of the value in the collection.</param>
    </member>
    <member name="P:System.Web.SessionState.ISessionStateItemCollection.Keys">
      <summary>Gets a collection of the variable names for all values stored in the collection.</summary>
      <returns>The <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> that contains all the collection keys.</returns>
    </member>
    <member name="M:System.Web.SessionState.ISessionStateItemCollection.Remove(System.String)">
      <summary>Deletes an item from the collection.</summary>
      <param name="name">The name of the item to delete from the collection.</param>
    </member>
    <member name="M:System.Web.SessionState.ISessionStateItemCollection.RemoveAt(System.Int32)">
      <summary>Deletes an item at a specified index from the collection.</summary>
      <param name="index">The index of the item to remove from the collection.</param>
    </member>
    <member name="T:System.Web.SessionState.IStateRuntime">
      <summary>Defines the interface used by the ASP.NET state service to manage session data.</summary>
    </member>
    <member name="M:System.Web.SessionState.IStateRuntime.ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)">
      <summary>Used by the ASP.NET state server to process session data.</summary>
      <param name="tracker">An <see cref="T:System.IntPtr" /> pointer to an object stored in the unmanaged ASP.NET state server.</param>
      <param name="verb">The action to take on the object.</param>
      <param name="uri">An identifier for the session.</param>
      <param name="exclusive">The type of access to objects in the store.</param>
      <param name="extraFlags">A value that indicates whether the current session is an uninitialized, cookieless session.</param>
      <param name="timeout">The number of minutes the session data is stored.</param>
      <param name="lockCookieExists">A value that indicates whether the lock cookie exists in the original request from the ASP.NET Web server to the ASP.NET state server.</param>
      <param name="lockCookie">The owner of the lock on the session state.</param>
      <param name="contentLength">The length, in bytes, of the data stored for the session.</param>
      <param name="content">An <see cref="T:System.IntPtr" /> pointer to the content stored for the session in the unmanaged ASP.NET state server.</param>
    </member>
    <member name="M:System.Web.SessionState.IStateRuntime.ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)">
      <summary>Used by the ASP.NET state server to process session data.</summary>
      <param name="tracker">An <see cref="T:System.IntPtr" /> pointer to an object stored in the unmanaged ASP.NET state server.</param>
      <param name="verb">The action to take on the object.</param>
      <param name="uri">An identifier for the session.</param>
      <param name="exclusive">The type of access to objects in the store.</param>
      <param name="timeout">The number of minutes the session data is stored.</param>
      <param name="lockCookieExists">A value that indicates whether the lock cookie exists in the original request from the ASP.NET Web server to the ASP.NET state server.</param>
      <param name="lockCookie">The owner of the lock on the session state.</param>
      <param name="contentLength">The length, in bytes, of the data stored for the session.</param>
      <param name="content">An <see cref="T:System.IntPtr" /> pointer to the content stored for the session in the unmanaged ASP.NET state server.</param>
    </member>
    <member name="M:System.Web.SessionState.IStateRuntime.StopProcessing">
      <summary>Stops the processing of session data stored in ASP.NET state server.</summary>
    </member>
    <member name="T:System.Web.SessionState.SessionIDManager">
      <summary>Manages unique identifiers for ASP.NET session state.</summary>
    </member>
    <member name="M:System.Web.SessionState.SessionIDManager.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Web.SessionState.SessionIDManager" /> class.</summary>
    </member>
    <member name="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)">
      <summary>Creates a unique session identifier for the session.</summary>
      <returns>A unique session identifier.</returns>
      <param name="context">The current <see cref="T:System.Web.HttpContext" /> object that references server objects used to process HTTP requests (for example, the <see cref="P:System.Web.HttpContext.Request" /> and <see cref="P:System.Web.HttpContext.Response" /> properties).</param>
    </member>
    <member name="M:System.Web.SessionState.SessionIDManager.Decode(System.String)">
      <summary>Decodes a URL-encoded session identifier obtained from a cookie or the URL.</summary>
      <returns>The decoded session identifier.</returns>
      <param name="id">The session identifier to decode. </param>
    </member>
    <member name="M:System.Web.SessionState.SessionIDManager.Encode(System.String)">
      <summary>Encodes the session identifier for saving to either a cookie or the URL.</summary>
      <returns>The encoded session identifier.</returns>
      <param name="id">The session identifier to encode. </param>
    </member>
    <member name="M:System.Web.SessionState.SessionIDManager.GetSessionID(System.Web.HttpContext)">
      <summary>Gets the session-identifier value from the current Web request.</summary>
      <returns>The current <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" />.</returns>
      <param name="context">The current <see cref="T:System.Web.HttpContext" /> object that references server objects used to process HTTP requests (for example, the <see cref="P:System.Web.HttpContext.Request" /> and <see cref="P:System.Web.HttpContext.Response" /> properties).</param>
      <exception cref="T:System.Web.HttpException">The length of the session-identifier value retrieved from the HTTP request exceeds the <see cref="P:System.Web.SessionState.SessionIDManager.SessionIDMaxLength" /> value.</exception>
    </member>
    <member name="M:System.Web.SessionState.SessionIDManager.Initialize">
      <summary>Initializes the <see cref="T:System.Web.SessionState.SessionIDManager" /> object with information from configuration files.</summary>
    </member>
    <member name="M:System.Web.SessionState.SessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)">
      <summary>Performs per-request initialization of the <see cref="T:System.Web.SessionState.SessionIDManager" /> object.</summary>
      <returns>true to indicate the <see cref="T:System.Web.SessionState.SessionIDManager" /> object has done a redirect to determine cookie support; otherwise, false.</returns>
      <param name="context">The <see cref="T:System.Web.HttpContext" /> object that contains information about the current request.</param>
      <param name="suppressAutoDetectRedirect">true to redirect to determine cookie support; otherwise, false to suppress automatic redirection to determine cookie support.</param>
      <param name="supportSessionIDReissue">When this method returns, contains a Boolean that indicates whether the <see cref="T:System.Web.SessionState.SessionIDManager" /> object supports issuing new session IDs when the original ID is out of date. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Web.SessionState.SessionIDManager.RemoveSessionID(System.Web.HttpContext)">
      <summary>Deletes the session-identifier cookie from the HTTP response.</summary>
      <param name="context">The current <see cref="T:System.Web.HttpContext" /> object that references server objects used to process HTTP requests (for example, the <see cref="P:System.Web.HttpContext.Request" /> and <see cref="P:System.Web.HttpContext.Response" /> properties).</param>
    </member>
    <member name="M:System.Web.SessionState.SessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)">
      <summary>Saves a newly created session identifier to the HTTP response.</summary>
      <param name="context">The current <see cref="T:System.Web.HttpContext" /> object that references server objects used to process HTTP requests (for example, the <see cref="P:System.Web.HttpContext.Request" /> and <see cref="P:System.Web.HttpContext.Response" /> properties).</param>
      <param name="id">The session identifier. </param>
      <param name="redirected">When this method returns, contains a Boolean value that is true if the response is redirected to the current URL with the session identifier added to the URL; otherwise, false. </param>
      <param name="cookieAdded">When this method returns, contains a Boolean value that is true if a cookie has been added to the HTTP response; otherwise, false. </param>
      <exception cref="T:System.Web.HttpException">The response has already been sent.-or-The session ID passed to this method failed validation. </exception>
    </member>
    <member name="P:System.Web.SessionState.SessionIDManager.SessionIDMaxLength">
      <summary>Gets the maximum length of a valid session identifier.</summary>
      <returns>The maximum length of a valid session identifier.</returns>
    </member>
    <member name="M:System.Web.SessionState.SessionIDManager.Validate(System.String)">
      <summary>Gets a value indicating whether a session identifier is valid.</summary>
      <returns>true if the session identifier is valid; otherwise, false.</returns>
      <param name="id">The session identifier to validate. </param>
    </member>
    <member name="T:System.Web.SessionState.SessionStateActions">
      <summary>Identifies whether a session item from a data store is for a session that requires initialization.</summary>
    </member>
    <member name="F:System.Web.SessionState.SessionStateActions.None">
      <summary>No initialization actions need to be performed by the calling code.</summary>
    </member>
    <member name="F:System.Web.SessionState.SessionStateActions.InitializeItem">
      <summary>The session item from the data store is for a session that requires initialization.</summary>
    </member>
    <member name="T:System.Web.SessionState.SessionStateBehavior">
      <summary>Specifies the type of session support that is required in order to handle a request. </summary>
    </member>
    <member name="F:System.Web.SessionState.SessionStateBehavior.Default">
      <summary>The default ASP.NET logic is used to determine the session state behavior for the request. The default logic looks for the existence of marker session state interfaces on the <see cref="T:System.Web.IHttpHandler" />.</summary>
    </member>
    <member name="F:System.Web.SessionState.SessionStateBehavior.Required">
      <summary>Full read-write session state behavior is enabled for the request. This setting overrides whatever session behavior would have been determined by inspecting the handler for the request.</summary>
    </member>
    <member name="F:System.Web.SessionState.SessionStateBehavior.ReadOnly">
      <summary>Read-only session state is enabled for the request. This means that session state cannot be updated. This setting overrides whatever session state behavior would have been determined by inspecting the handler for the request.</summary>
    </member>
    <member name="F:System.Web.SessionState.SessionStateBehavior.Disabled">
      <summary>Session state is not enabled for processing the request. This setting overrides whatever session behavior would have been determined by inspecting the handler for the request.</summary>
    </member>
    <member name="T:System.Web.SessionState.SessionStateItemCollection">
      <summary>A collection of objects stored in session state. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.SessionState.SessionStateItemCollection.#ctor">
      <summary>Creates a new, empty <see cref="T:System.Web.SessionState.SessionStateItemCollection" /> object.</summary>
    </member>
    <member name="M:System.Web.SessionState.SessionStateItemCollection.Clear">
      <summary>Removes all values and keys from the session-state collection.</summary>
    </member>
    <member name="M:System.Web.SessionState.SessionStateItemCollection.Deserialize(System.IO.BinaryReader)">
      <summary>Creates a <see cref="T:System.Web.SessionState.SessionStateItemCollection" /> collection from a storage location that is written to using the <see cref="M:System.Web.SessionState.SessionStateItemCollection.Serialize(System.IO.BinaryWriter)" /> method.</summary>
      <returns>A <see cref="T:System.Web.SessionState.SessionStateItemCollection" /> collection populated with the contents from a storage location that is written to using the <see cref="M:System.Web.SessionState.SessionStateItemCollection.Serialize(System.IO.BinaryWriter)" /> method.</returns>
      <param name="reader">The <see cref="T:System.IO.BinaryReader" /> used to read the serialized collection from a stream or encoded string.</param>
      <exception cref="T:System.Web.HttpException">The session state information is invalid or corrupted</exception>
    </member>
    <member name="P:System.Web.SessionState.SessionStateItemCollection.Dirty">
      <summary>Gets or sets a value indicating whether the collection has been marked as changed.</summary>
      <returns>true if the <see cref="T:System.Web.SessionState.SessionStateItemCollection" /> contents have been changed; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.SessionState.SessionStateItemCollection.GetEnumerator">
      <summary>Returns an enumerator that can be used to read all the key names in the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the variable names in the session-state collection.</returns>
    </member>
    <member name="P:System.Web.SessionState.SessionStateItemCollection.Item(System.Int32)">
      <summary>Gets or sets a value in the collection by numerical index.</summary>
      <returns>The value in the collection stored at the specified index. If the specified key is not found, attempting to get it returns null, and attempting to set it creates a new element using the specified key.</returns>
      <param name="index">The numerical index of the value in the collection.</param>
    </member>
    <member name="P:System.Web.SessionState.SessionStateItemCollection.Item(System.String)">
      <summary>Gets or sets a value in the collection by name.</summary>
      <returns>The value in the collection with the specified name. If the specified key is not found, attempting to get it returns null, and attempting to set it creates a new element using the specified key.</returns>
      <param name="name">The key name of the value in the collection.</param>
    </member>
    <member name="P:System.Web.SessionState.SessionStateItemCollection.Keys">
      <summary>Gets a collection of the variable names for all values stored in the collection.</summary>
      <returns>The <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> collection that contains all the collection keys. </returns>
    </member>
    <member name="M:System.Web.SessionState.SessionStateItemCollection.Remove(System.String)">
      <summary>Deletes an item from the collection.</summary>
      <param name="name">The name of the item to delete from the collection. </param>
    </member>
    <member name="M:System.Web.SessionState.SessionStateItemCollection.RemoveAt(System.Int32)">
      <summary>Deletes an item at a specified index from the collection.</summary>
      <param name="index">The index of the item to remove from the collection. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.- or -<paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ICollection.Count" />.</exception>
    </member>
    <member name="M:System.Web.SessionState.SessionStateItemCollection.Serialize(System.IO.BinaryWriter)">
      <summary>Writes the contents of the collection to a <see cref="T:System.IO.BinaryWriter" />.</summary>
      <param name="writer">The <see cref="T:System.IO.BinaryWriter" /> used to write the serialized collection to a stream or encoded string.</param>
    </member>
    <member name="T:System.Web.SessionState.SessionStateItemExpireCallback">
      <summary>Represents the method that handles the <see cref="E:System.Web.SessionState.SessionStateModule.End" /> event of a session-state module.</summary>
      <param name="id">The <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" /> parameter of the session that is ending. </param>
      <param name="item">A <see cref="T:System.Web.SessionState.SessionStateStoreData" /> object containing the session-state data for the session that is ending. </param>
    </member>
    <member name="T:System.Web.SessionState.SessionStateMode">
      <summary>Specifies the session-state mode.</summary>
    </member>
    <member name="F:System.Web.SessionState.SessionStateMode.Off">
      <summary>Session state is disabled.</summary>
    </member>
    <member name="F:System.Web.SessionState.SessionStateMode.InProc">
      <summary>Session state is in process with an ASP.NET worker process.</summary>
    </member>
    <member name="F:System.Web.SessionState.SessionStateMode.StateServer">
      <summary>Session state is using the out-of-process ASP.NET State Service to store state information.</summary>
    </member>
    <member name="F:System.Web.SessionState.SessionStateMode.SQLServer">
      <summary>Session state is using an out-of-process SQL Server database to store state information.</summary>
    </member>
    <member name="F:System.Web.SessionState.SessionStateMode.Custom">
      <summary>Session state is using a custom data store to store session-state information.</summary>
    </member>
    <member name="T:System.Web.SessionState.SessionStateModule">
      <summary>Provides session-state services for an application. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.SessionState.SessionStateModule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.SessionState.SessionStateModule" /> class.</summary>
    </member>
    <member name="M:System.Web.SessionState.SessionStateModule.Dispose">
      <summary>Executes final cleanup code before the <see cref="T:System.Web.SessionState.SessionStateModule" /> object is released from memory.</summary>
    </member>
    <member name="E:System.Web.SessionState.SessionStateModule.End">
      <summary>Occurs when a session ends.</summary>
    </member>
    <member name="M:System.Web.SessionState.SessionStateModule.Init(System.Web.HttpApplication)">
      <summary>Calls initialization code when a <see cref="T:System.Web.SessionState.SessionStateModule" /> object is created.</summary>
      <param name="app">The current application. </param>
      <exception cref="T:System.Web.HttpException">The mode attribute in the sessionState Element (ASP.NET Settings Schema) configuration element is set to <see cref="F:System.Web.SessionState.SessionStateMode.StateServer" /> or <see cref="F:System.Web.SessionState.SessionStateMode.SQLServer" />, and the ASP.NET application has less than <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> trust.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The mode attribute in the sessionState Element (ASP.NET Settings Schema) configuration element is set to <see cref="F:System.Web.SessionState.SessionStateMode.Custom" /> and the customProvider attribute is empty or does not exist.-or-The mode attribute in the sessionState Element (ASP.NET Settings Schema) configuration element is set to <see cref="F:System.Web.SessionState.SessionStateMode.Custom" /> and the provider identified by name in the customProvider attribute has not been added to the providers Element for sessionState (ASP.NET Settings Schema) sub-element.</exception>
    </member>
    <member name="E:System.Web.SessionState.SessionStateModule.Start">
      <summary>The event that occurs when a session is created.</summary>
    </member>
    <member name="T:System.Web.SessionState.SessionStateStoreData">
      <summary>Represents session-state data for a session store.</summary>
    </member>
    <member name="M:System.Web.SessionState.SessionStateStoreData.#ctor(System.Web.SessionState.ISessionStateItemCollection,System.Web.HttpStaticObjectsCollection,System.Int32)">
      <summary>Creates a new instance of the <see cref="T:System.Web.SessionState.SessionStateStoreData" /> class.</summary>
      <param name="sessionItems">The session variables and values for the current session.</param>
      <param name="staticObjects">The <see cref="T:System.Web.HttpStaticObjectsCollection" /> for the current session.</param>
      <param name="timeout">The <see cref="P:System.Web.SessionState.SessionStateStoreData.Timeout" /> for the current session.</param>
    </member>
    <member name="P:System.Web.SessionState.SessionStateStoreData.Items">
      <summary>The session variables and values for the current session.</summary>
      <returns>An <see cref="T:System.Web.SessionState.ISessionStateItemCollection" /> object that contains variables and values for the current session.</returns>
    </member>
    <member name="P:System.Web.SessionState.SessionStateStoreData.StaticObjects">
      <summary>Gets a collection of objects declared by &lt;object Runat="Server" Scope="Session"/&gt; tags within the ASP.NET application file Global.asax.</summary>
      <returns>An <see cref="T:System.Web.HttpStaticObjectsCollection" /> containing objects declared in the Global.asax file.</returns>
    </member>
    <member name="P:System.Web.SessionState.SessionStateStoreData.Timeout">
      <summary>Gets and sets the amount of time, in minutes, allowed between requests before the session-state provider terminates the session.</summary>
      <returns>The time-out period in minutes.</returns>
    </member>
    <member name="T:System.Web.SessionState.SessionStateStoreProviderBase">
      <summary>Defines the required members of a session-state provider for a data store.</summary>
    </member>
    <member name="M:System.Web.SessionState.SessionStateStoreProviderBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> class.</summary>
    </member>
    <member name="M:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)">
      <summary>Creates a new <see cref="T:System.Web.SessionState.SessionStateStoreData" /> object to be used for the current request.</summary>
      <returns>A new <see cref="T:System.Web.SessionState.SessionStateStoreData" /> for the current request.</returns>
      <param name="context">The <see cref="T:System.Web.HttpContext" /> for the current request.</param>
      <param name="timeout">The session-state <see cref="P:System.Web.SessionState.HttpSessionState.Timeout" /> value for the new <see cref="T:System.Web.SessionState.SessionStateStoreData" />.</param>
    </member>
    <member name="M:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)">
      <summary>Adds a new session-state item to the data store.</summary>
      <param name="context">The <see cref="T:System.Web.HttpContext" /> for the current request.</param>
      <param name="id">The <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" /> for the current request.</param>
      <param name="timeout">The session <see cref="P:System.Web.SessionState.HttpSessionState.Timeout" /> for the current request.</param>
    </member>
    <member name="M:System.Web.SessionState.SessionStateStoreProviderBase.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> implementation.</summary>
    </member>
    <member name="M:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)">
      <summary>Called by the <see cref="T:System.Web.SessionState.SessionStateModule" /> object at the end of a request.</summary>
      <param name="context">The <see cref="T:System.Web.HttpContext" /> for the current request.</param>
    </member>
    <member name="M:System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)">
      <summary>Returns read-only session-state data from the session data store.</summary>
      <returns>A <see cref="T:System.Web.SessionState.SessionStateStoreData" /> populated with session values and information from the session data store.</returns>
      <param name="context">The <see cref="T:System.Web.HttpContext" /> for the current request.</param>
      <param name="id">The <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" /> for the current request.</param>
      <param name="locked">When this method returns, contains a Boolean value that is set to true if the requested session item is locked at the session data store; otherwise, false.</param>
      <param name="lockAge">When this method returns, contains a <see cref="T:System.TimeSpan" /> object that is set to the amount of time that an item in the session data store has been locked.</param>
      <param name="lockId">When this method returns, contains an object that is set to the lock identifier for the current request. For details on the lock identifier, see "Locking Session-Store Data" in the <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> class summary.</param>
      <param name="actions">When this method returns, contains one of the <see cref="T:System.Web.SessionState.SessionStateActions" /> values, indicating whether the current session is an uninitialized, cookieless session.</param>
    </member>
    <member name="M:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)">
      <summary>Returns read-only session-state data from the session data store.</summary>
      <returns>A <see cref="T:System.Web.SessionState.SessionStateStoreData" /> populated with session values and information from the session data store.</returns>
      <param name="context">The <see cref="T:System.Web.HttpContext" /> for the current request.</param>
      <param name="id">The <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" /> for the current request.</param>
      <param name="locked">When this method returns, contains a Boolean value that is set to true if a lock is successfully obtained; otherwise, false.</param>
      <param name="lockAge">When this method returns, contains a <see cref="T:System.TimeSpan" /> object that is set to the amount of time that an item in the session data store has been locked.</param>
      <param name="lockId">When this method returns, contains an object that is set to the lock identifier for the current request. For details on the lock identifier, see "Locking Session-Store Data" in the <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> class summary.</param>
      <param name="actions">When this method returns, contains one of the <see cref="T:System.Web.SessionState.SessionStateActions" /> values, indicating whether the current session is an uninitialized, cookieless session.</param>
    </member>
    <member name="M:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)">
      <summary>Called by the <see cref="T:System.Web.SessionState.SessionStateModule" /> object for per-request initialization.</summary>
      <param name="context">The <see cref="T:System.Web.HttpContext" /> for the current request.</param>
    </member>
    <member name="M:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)">
      <summary>Releases a lock on an item in the session data store.</summary>
      <param name="context">The <see cref="T:System.Web.HttpContext" /> for the current request.</param>
      <param name="id">The session identifier for the current request.</param>
      <param name="lockId">The lock identifier for the current request. </param>
    </member>
    <member name="M:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)">
      <summary>Deletes item data from the session data store.</summary>
      <param name="context">The <see cref="T:System.Web.HttpContext" /> for the current request.</param>
      <param name="id">The session identifier for the current request.</param>
      <param name="lockId">The lock identifier for the current request.</param>
      <param name="item">The <see cref="T:System.Web.SessionState.SessionStateStoreData" /> that represents the item to delete from the data store.</param>
    </member>
    <member name="M:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)">
      <summary>Updates the expiration date and time of an item in the session data store.</summary>
      <param name="context">The <see cref="T:System.Web.HttpContext" /> for the current request.</param>
      <param name="id">The session identifier for the current request.</param>
    </member>
    <member name="M:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)">
      <summary>Updates the session-item information in the session-state data store with values from the current request, and clears the lock on the data.</summary>
      <param name="context">The <see cref="T:System.Web.HttpContext" /> for the current request.</param>
      <param name="id">The session identifier for the current request.</param>
      <param name="item">The <see cref="T:System.Web.SessionState.SessionStateStoreData" /> object that contains the current session values to be stored.</param>
      <param name="lockId">The lock identifier for the current request. </param>
      <param name="newItem">true to identify the session item as a new item; false to identify the session item as an existing item.</param>
    </member>
    <member name="M:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)">
      <summary>Sets a reference to the <see cref="T:System.Web.SessionState.SessionStateItemExpireCallback" /> delegate for the Session_OnEnd event defined in the Global.asax file.</summary>
      <returns>true if the session-state store provider supports calling the Session_OnEnd event; otherwise, false.</returns>
      <param name="expireCallback">The <see cref="T:System.Web.SessionState.SessionStateItemExpireCallback" />  delegate for the Session_OnEnd event defined in the Global.asax file.</param>
    </member>
    <member name="T:System.Web.SessionState.SessionStateUtility">
      <summary>Provides helper methods used by session-state modules and session-state store providers to manage session information for an ASP.NET application. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext(System.Web.HttpContext,System.Web.SessionState.IHttpSessionState)">
      <summary>Applies the session data to the context for the current request.</summary>
      <param name="context">The <see cref="T:System.Web.HttpContext" /> object to which to add the <see cref="T:System.Web.SessionState.HttpSessionState" /> object.</param>
      <param name="container">The <see cref="T:System.Web.SessionState.IHttpSessionState" /> implementation instance to add to the specified HTTP context.</param>
      <exception cref="T:System.Web.HttpException">An <see cref="T:System.Web.SessionState.HttpSessionState" /> object for the current session has already been added to the specified <paramref name="context" />.</exception>
    </member>
    <member name="M:System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext(System.Web.HttpContext)">
      <summary>Retrieves session data from the context for the current request.</summary>
      <returns>An <see cref="T:System.Web.SessionState.IHttpSessionState" /> implementation instance populated with session data from the current request.</returns>
      <param name="context">The <see cref="T:System.Web.HttpContext" /> from which to retrieve session data.</param>
    </member>
    <member name="M:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects(System.Web.HttpContext)">
      <summary>Gets a reference to the static objects collection for the specified context.</summary>
      <returns>An <see cref="T:System.Web.HttpStaticObjectsCollection" /> collection populated with the <see cref="P:System.Web.SessionState.HttpSessionState.StaticObjects" /> property value for the specified <see cref="T:System.Web.HttpContext" />.</returns>
      <param name="context">The <see cref="T:System.Web.HttpContext" /> from which to get the static objects collection.</param>
    </member>
    <member name="M:System.Web.SessionState.SessionStateUtility.RaiseSessionEnd(System.Web.SessionState.IHttpSessionState,System.Object,System.EventArgs)">
      <summary>Executes the Session_OnEnd event defined in the Global.asax file for the ASP.NET application.</summary>
      <param name="session">The <see cref="T:System.Web.SessionState.IHttpSessionState" /> implementation instance for the session that has ended.</param>
      <param name="eventSource">The event source object to supply to the Session_OnEnd event.</param>
      <param name="eventArgs">The <see cref="T:System.EventArgs" /> object to supply to the Session_OnEnd event.</param>
    </member>
    <member name="M:System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext(System.Web.HttpContext)">
      <summary>Removes session data from the specified context.</summary>
      <param name="context">The <see cref="T:System.Web.HttpContext" /> from which to remove session data.</param>
    </member>
    <member name="T:System.Web.SessionState.StateRuntime">
      <summary>Manages session data stored in the ASP.NET state service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.SessionState.StateRuntime.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.SessionState.StateRuntime" /> class.</summary>
    </member>
    <member name="M:System.Web.SessionState.StateRuntime.ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)">
      <summary>Used by the ASP.NET state server to process session data.</summary>
      <param name="tracker">An <see cref="T:System.IntPtr" /> pointer to an object stored in the unmanaged ASP.NET state server.</param>
      <param name="verb">The action to take on the object.</param>
      <param name="uri">An identifier for the session.</param>
      <param name="exclusive">The type of access to objects in the store.</param>
      <param name="extraFlags">A value that indicates whether the current session is an uninitialized, cookieless session.</param>
      <param name="timeout">The number of minutes the session data is stored.</param>
      <param name="lockCookieExists">A value that indicates whether the lock cookie exists in the original request from the ASP.NET Web server to the ASP.NET state server.</param>
      <param name="lockCookie">The owner of the lock on the session state.</param>
      <param name="contentLength">The length, in bytes, of the data stored for the session.</param>
      <param name="content">An <see cref="T:System.IntPtr" /> pointer to the content stored for the session in the unmanaged ASP.NET state server.</param>
    </member>
    <member name="M:System.Web.SessionState.StateRuntime.ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)">
      <summary>Used by the ASP.NET state server to process session data.</summary>
      <param name="tracker">An <see cref="T:System.IntPtr" /> pointer to an object stored in the unmanaged ASP.NET state server.</param>
      <param name="verb">The action to take on the object.</param>
      <param name="uri">An identifier for the session.</param>
      <param name="exclusive">The type of access to objects in the store.</param>
      <param name="timeout">The number of minutes the session data is stored.</param>
      <param name="lockCookieExists">A value that indicates whether the lock cookie exists in the original request from the ASP.NET Web server to the ASP.NET state server.</param>
      <param name="lockCookie">The owner of the lock on the session state.</param>
      <param name="contentLength">The length, in bytes, of the data stored for the session.</param>
      <param name="content">An <see cref="T:System.IntPtr" /> pointer to the content stored for the session in the unmanaged ASP.NET state server.</param>
    </member>
    <member name="M:System.Web.SessionState.StateRuntime.StopProcessing">
      <summary>Stops the processing of session data stored in the ASP.NET state server.</summary>
    </member>
    <member name="T:System.Web.UI.AttributeCollection">
      <summary>Provides object-model access to all attributes declared in the opening tag of an ASP.NET server control element. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.AttributeCollection.#ctor(System.Web.UI.StateBag)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.AttributeCollection" /> class.</summary>
      <param name="bag">An object that contains the attribute keys and their values from the opening tag of the server control. </param>
    </member>
    <member name="M:System.Web.UI.AttributeCollection.Add(System.String,System.String)">
      <summary>Adds an attribute to a server control's <see cref="T:System.Web.UI.AttributeCollection" /> object.</summary>
      <param name="key">The attribute name. </param>
      <param name="value">The attribute value. </param>
    </member>
    <member name="M:System.Web.UI.AttributeCollection.AddAttributes(System.Web.UI.HtmlTextWriter)">
      <summary>Adds attributes from the <see cref="T:System.Web.UI.AttributeCollection" /> class to the <see cref="T:System.Web.UI.HtmlTextWriter" /> object that is responsible for rendering the attributes as markup.</summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> instance that writes the attribute to the opening tag of an ASP.NET server control. </param>
    </member>
    <member name="M:System.Web.UI.AttributeCollection.Clear">
      <summary>Removes all attributes from a server control's <see cref="T:System.Web.UI.AttributeCollection" /> object.</summary>
    </member>
    <member name="P:System.Web.UI.AttributeCollection.Count">
      <summary>Gets the number of attributes in the <see cref="T:System.Web.UI.AttributeCollection" /> object.</summary>
      <returns>The number of items in the collection.</returns>
    </member>
    <member name="P:System.Web.UI.AttributeCollection.CssStyle">
      <summary>Gets a collection of styles for the ASP.NET server control to which the current <see cref="T:System.Web.UI.AttributeCollection" /> object belongs.</summary>
      <returns>A collection that contains the styles for the current server control.</returns>
    </member>
    <member name="M:System.Web.UI.AttributeCollection.Equals(System.Object)">
      <summary>Determines whether the current instance of the <see cref="T:System.Web.UI.AttributeCollection" /> object is equal to the specified object.</summary>
      <returns>true if the object that is contained in the <paramref name="o" /> parameter is equal to the current instance of <see cref="T:System.Web.UI.AttributeCollection" />; otherwise, false.</returns>
      <param name="o">The object instance to compare with this instance.</param>
    </member>
    <member name="M:System.Web.UI.AttributeCollection.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="P:System.Web.UI.AttributeCollection.Item(System.String)">
      <summary>Gets or sets a specified attribute value for a server control.</summary>
      <returns>The attribute value.</returns>
      <param name="key">The location of the attribute in the collection. </param>
    </member>
    <member name="P:System.Web.UI.AttributeCollection.Keys">
      <summary>Gets a collection of keys to all attributes in the server control's <see cref="T:System.Web.UI.AttributeCollection" /> object.</summary>
      <returns>The collection of keys.</returns>
    </member>
    <member name="M:System.Web.UI.AttributeCollection.Remove(System.String)">
      <summary>Removes an attribute from a server control's <see cref="T:System.Web.UI.AttributeCollection" /> object.</summary>
      <param name="key">The name of the attribute to remove. </param>
    </member>
    <member name="M:System.Web.UI.AttributeCollection.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Writes the collection of attributes to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> output stream for the control to which the collection belongs.</summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> instance that writes the attribute collection to the current output stream. </param>
    </member>
    <member name="T:System.Web.UI.BaseParser">
      <summary>Provides a base set of functionality for classes involved in parsing ASP.NET page requests and server controls.</summary>
    </member>
    <member name="M:System.Web.UI.BaseParser.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.BaseParser" /> class.</summary>
    </member>
    <member name="T:System.Web.UI.BasePartialCachingControl">
      <summary>Provides the base functionality for the <see cref="T:System.Web.UI.StaticPartialCachingControl" /> and <see cref="T:System.Web.UI.PartialCachingControl" /> classes.</summary>
    </member>
    <member name="M:System.Web.UI.BasePartialCachingControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.BasePartialCachingControl" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.BasePartialCachingControl.CachePolicy">
      <summary>Gets the <see cref="T:System.Web.UI.ControlCachePolicy" /> object that is associated with the wrapped user control.</summary>
      <returns>A <see cref="T:System.Web.UI.ControlCachePolicy" /> that stores output caching-related properties of the wrapped user control.</returns>
    </member>
    <member name="P:System.Web.UI.BasePartialCachingControl.Dependency">
      <summary>Gets or sets an instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class associated with the cached user control output.</summary>
      <returns>The <see cref="T:System.Web.Caching.CacheDependency" /> associated with the server control.</returns>
    </member>
    <member name="M:System.Web.UI.BasePartialCachingControl.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Web.UI.BasePartialCachingControl" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.BasePartialCachingControl.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Outputs the user control's content to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> output stream.</summary>
      <param name="output">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that writes the cached control to the page.</param>
    </member>
    <member name="T:System.Web.UI.BaseTemplateParser">
      <summary>Implements ASP.NET template parsing for template files.</summary>
    </member>
    <member name="M:System.Web.UI.BaseTemplateParser.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.BaseTemplateParser" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.BaseTemplateParser.GetReferencedType(System.String)">
      <summary>Compiles and returns the type of the <see cref="T:System.Web.UI.Page" /> or <see cref="T:System.Web.UI.UserControl" /> control that is specified by the virtual path.</summary>
      <returns>The type of the page or user control.</returns>
      <param name="virtualPath">The virtual path of the <see cref="T:System.Web.UI.Page" /> or <see cref="T:System.Web.UI.UserControl" />. </param>
      <exception cref="T:System.Web.HttpException">The parser does not permit a virtual reference to the resource specified by <paramref name="virtualPath" />. </exception>
    </member>
    <member name="M:System.Web.UI.BaseTemplateParser.GetUserControlType(System.String)">
      <summary>Compiles and returns the type of the <see cref="T:System.Web.UI.UserControl" /> object that is specified by the virtual path.</summary>
      <returns>The type of the user control. </returns>
      <param name="virtualPath">The virtual path of the <see cref="T:System.Web.UI.UserControl" />. </param>
      <exception cref="T:System.Web.HttpException">The <see cref="T:System.Web.UI.UserControl" /> specified by <paramref name="virtualPath" /> is marked as no compile.- or -The parser does not permit a virtual reference to the <see cref="T:System.Web.UI.UserControl" />. </exception>
    </member>
    <member name="T:System.Web.UI.BindableTemplateBuilder">
      <summary>Supports page parsing of data-bound controls that automatically bind to an ASP.NET data source control within templated content sections. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.BindableTemplateBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.BindableTemplateBuilder" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.BindableTemplateBuilder.ExtractValues(System.Web.UI.Control)">
      <summary>Retrieves a set of name/value pairs for values that are bound using two-way ASP.NET data-binding syntax within the templated content at design-time and in no-compile pages.</summary>
      <returns>An <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> of name/value pairs, where the name represents the data item field specified as the first parameter to bind within the templated content and the value is the current value of a property value bound using two-way ASP.NET data-binding syntax.</returns>
      <param name="container">The <see cref="T:System.Web.UI.Control" /> from which to extract name/value pairs, which are passed by the data-bound control to an associated data source control in two-way data-binding scenarios.</param>
    </member>
    <member name="M:System.Web.UI.BindableTemplateBuilder.OnAppendToParentBuilder(System.Web.UI.ControlBuilder)">
      <summary>Notifies the <see cref="T:System.Web.UI.BindableTemplateBuilder" /> object that it is being added to a parent control builder.</summary>
      <param name="parentBuilder">The <see cref="T:System.Web.UI.BindableTemplateBuilder" /> to which to add the current builder. </param>
    </member>
    <member name="T:System.Web.UI.BoundPropertyEntry">
      <summary>Represents a control property that is data-bound to an expression.</summary>
    </member>
    <member name="P:System.Web.UI.BoundPropertyEntry.ControlID">
      <summary>Gets or sets the ID of the control that contains this binding.</summary>
      <returns>A <see cref="T:System.String" /> with the <see cref="P:System.Web.UI.Control.ID" /> of the control that contains this binding.</returns>
    </member>
    <member name="P:System.Web.UI.BoundPropertyEntry.ControlType">
      <summary>Gets or sets the type of the control that is being bound to at run time.</summary>
      <returns>The <see cref="T:System.Type" /> of the control bound by the expression.</returns>
    </member>
    <member name="P:System.Web.UI.BoundPropertyEntry.Expression">
      <summary>Gets or sets the value representing an expression during page parsing.</summary>
      <returns>A <see cref="T:System.String" /> that contains the expression.</returns>
    </member>
    <member name="P:System.Web.UI.BoundPropertyEntry.ExpressionBuilder">
      <summary>Gets or sets the object used for evaluating the expression during page parsing.</summary>
      <returns>An <see cref="T:System.Web.Compilation.ExpressionBuilder" /> for evaluating this expression.</returns>
    </member>
    <member name="P:System.Web.UI.BoundPropertyEntry.ExpressionPrefix">
      <summary>Gets or sets the prefix for this expression.</summary>
      <returns>A <see cref="T:System.String" /> containing the prefix.</returns>
    </member>
    <member name="P:System.Web.UI.BoundPropertyEntry.FieldName">
      <summary>Gets or sets the name of the data field bound to by the expression.</summary>
      <returns>A <see cref="T:System.String" /> containing the data field name.</returns>
    </member>
    <member name="P:System.Web.UI.BoundPropertyEntry.FormatString">
      <summary>Gets or sets the format specifier characters that indicate how a value is to be displayed.</summary>
      <returns>A <see cref="T:System.String" /> containing the format specifier characters that indicate how a value is to be displayed.</returns>
    </member>
    <member name="P:System.Web.UI.BoundPropertyEntry.Generated">
      <summary>Gets or sets a value indicating whether the expression was generated by the parser.</summary>
      <returns>true if the expression was generated by the parser; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.BoundPropertyEntry.ParsedExpressionData">
      <summary>Gets or sets the data retrieved from an expression builder object during page parsing.</summary>
      <returns>An <see cref="T:System.Object" /> containing the data retrieved from an <see cref="T:System.Web.Compilation.ExpressionBuilder" /> after it has called <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />.</returns>
    </member>
    <member name="P:System.Web.UI.BoundPropertyEntry.ReadOnlyProperty">
      <summary>Gets or sets a value indicating whether the property contains a set accessor.</summary>
      <returns>true if the property does not contain a set accessor, which indicates that the property is ReadOnly; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.BoundPropertyEntry.TwoWayBound">
      <summary>Gets or sets a value indicating whether the expression is bound to a control that allows for inserting, updating, or deleting data.</summary>
      <returns>true if the expression is bound to a control that allows for inserting, updating, or deleting data; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.BoundPropertyEntry.UseSetAttribute">
      <summary>Gets or sets a value indicating whether a control's SetAttribute method can be called.</summary>
      <returns>true if the SetAttribute method can be called; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.UI.BuilderPropertyEntry">
      <summary>Serves as the base class for all property entries that require a control builder.</summary>
    </member>
    <member name="P:System.Web.UI.BuilderPropertyEntry.Builder">
      <summary>Gets or sets the control builder for the property entry.</summary>
      <returns>A <see cref="T:System.Web.UI.ControlBuilder" /> for this property entry.</returns>
    </member>
    <member name="T:System.Web.UI.BuildMethod">
      <summary>Represents the method that is used to build a control.</summary>
      <returns>The built control.</returns>
    </member>
    <member name="T:System.Web.UI.BuildTemplateMethod">
      <summary>Supports ASP.NET during the creation of a template for a templated control from generated class code. The <see cref="T:System.Web.UI.BuildTemplateMethod" /> delegate handles the <see cref="M:System.Web.UI.CompiledTemplateBuilder.InstantiateIn(System.Web.UI.Control)" /> method. </summary>
      <param name="control">A <see cref="T:System.Web.UI.Control" /> that represents the container used to store the child controls in the template. </param>
    </member>
    <member name="T:System.Web.UI.ChtmlTextWriter">
      <summary>Writes a series of cHTML-specific characters and text to the output stream of an ASP.NET server control. The <see cref="T:System.Web.UI.ChtmlTextWriter" /> class provides formatting capabilities that ASP.NET server controls use when rendering cHTML content to clients.</summary>
    </member>
    <member name="M:System.Web.UI.ChtmlTextWriter.#ctor(System.IO.TextWriter)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ChtmlTextWriter" /> class that uses the <see cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" /> constant to indent lines.</summary>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> that renders the markup content. </param>
    </member>
    <member name="M:System.Web.UI.ChtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ChtmlTextWriter" /> class with the specified line indentation.</summary>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> that renders the markup content. </param>
      <param name="tabString">The number of spaces defined in the <see cref="P:System.Web.UI.HtmlTextWriter.Indent" />. </param>
    </member>
    <member name="M:System.Web.UI.ChtmlTextWriter.AddRecognizedAttribute(System.String,System.String)">
      <summary>Adds an attribute to a cHTML element of the <see cref="T:System.Web.UI.ChtmlTextWriter" /> object.</summary>
      <param name="elementName">The cHTML element to add the attribute to.</param>
      <param name="attributeName">The attribute to add to <paramref name="elementName" />.</param>
    </member>
    <member name="P:System.Web.UI.ChtmlTextWriter.GlobalSuppressedAttributes">
      <summary>Gets a <see cref="T:System.Collections.Hashtable" /> object of globally suppressed attributes that cannot be rendered on cHTML elements. </summary>
      <returns>A <see cref="T:System.Collections.Hashtable" /> of globally suppressed cHTML attributes.</returns>
    </member>
    <member name="M:System.Web.UI.ChtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
      <summary>Determines whether the specified cHTML attribute and its value are rendered to the requesting page. You can override the <see cref="M:System.Web.UI.ChtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> method in classes that derive from the <see cref="T:System.Web.UI.ChtmlTextWriter" /> class to filter out attributes that you do not want to render on devices that support cHTML.</summary>
      <returns>true to write the attribute and its value to the <see cref="T:System.Web.UI.ChtmlTextWriter" /> output stream; otherwise, false.</returns>
      <param name="name">The cHTML attribute to render. </param>
      <param name="value">The value assigned to <paramref name="name" />. </param>
      <param name="key">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with <paramref name="name" />. </param>
    </member>
    <member name="M:System.Web.UI.ChtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
      <summary>Determines whether the specified cHTML markup style attribute and its value can be rendered to the current markup element.</summary>
      <returns>true if the style can be rendered; otherwise, false.</returns>
      <param name="name">A string containing the name of the style attribute to render. </param>
      <param name="value">A string containing the value that is assigned to <paramref name="name" />. </param>
      <param name="key">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with <paramref name="name" />.</param>
    </member>
    <member name="M:System.Web.UI.ChtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
      <summary>Determines whether the specified cHTML markup element is rendered to the requesting page. </summary>
      <returns>true if the specified cHTML markup element can be rendered; otherwise, false.</returns>
      <param name="name">A string containing the name of the cHTML element to render.</param>
      <param name="key">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> associated with <paramref name="name" />.</param>
    </member>
    <member name="P:System.Web.UI.ChtmlTextWriter.RecognizedAttributes">
      <summary>Gets a <see cref="T:System.Collections.Hashtable" /> object of recognized attributes that could be rendered on cHTML elements.</summary>
      <returns>A <see cref="T:System.Collections.Hashtable" /> of recognized cHTML attributes.</returns>
    </member>
    <member name="M:System.Web.UI.ChtmlTextWriter.RemoveRecognizedAttribute(System.String,System.String)">
      <summary>Removes an attribute of a cHTML element of the <see cref="T:System.Web.UI.ChtmlTextWriter" /> object.</summary>
      <param name="elementName">The cHTML element to remove an attribute from.</param>
      <param name="attributeName">The attribute to remove from <paramref name="elementName" />.</param>
    </member>
    <member name="P:System.Web.UI.ChtmlTextWriter.SuppressedAttributes">
      <summary>Gets a <see cref="T:System.Collections.Hashtable" /> object of user-specified suppressed attributes that are not rendered on cHTML elements.</summary>
      <returns>A <see cref="T:System.Collections.Hashtable" /> of suppressed cHTML attributes.</returns>
    </member>
    <member name="M:System.Web.UI.ChtmlTextWriter.WriteBreak">
      <summary>Writes a br element to the cHTML output stream.</summary>
    </member>
    <member name="M:System.Web.UI.ChtmlTextWriter.WriteEncodedText(System.String)">
      <summary>Encodes the specified text for the requesting device, and then writes it to the output stream. </summary>
      <param name="text">The text string to encode and write to the output stream. </param>
    </member>
    <member name="T:System.Web.UI.ClientIDMode">
      <summary>Specifies how ASP.NET generates the <see cref="P:System.Web.UI.Control.ClientID" /> for a control that can be accessed in client script.</summary>
    </member>
    <member name="F:System.Web.UI.ClientIDMode.Inherit">
      <summary>The control inherits the <see cref="T:System.Web.UI.ClientIDMode" /> setting of its parent control.</summary>
    </member>
    <member name="F:System.Web.UI.ClientIDMode.AutoID">
      <summary>The <see cref="P:System.Web.UI.Control.ClientID" /> value is generated by concatenating the <see cref="P:System.Web.UI.Control.ID" /> values of each parent naming container with the <see cref="P:System.Web.UI.Control.ID" /> value of the control. In data-binding scenarios where multiple instances of a control are rendered, an incrementing value is inserted in front of the control's <see cref="P:System.Web.UI.Control.ID" /> value. Each segment is separated by an underscore character (_). This algorithm is the only one that was available in versions of ASP.NET earlier than ASP.NET 4.</summary>
    </member>
    <member name="F:System.Web.UI.ClientIDMode.Predictable">
      <summary>This algorithm is used for controls that are in data-bound controls. The <see cref="P:System.Web.UI.Control.ClientID" /> value is generated by concatenating the <see cref="P:System.Web.UI.Control.ClientID" /> value of the parent naming container with the <see cref="P:System.Web.UI.Control.ID" /> value of the control. If the control is a data-bound control that generates multiple rows, the value of the data field specified in the <see cref="P:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix" /> property is added at the end. For the <see cref="T:System.Web.UI.WebControls.GridView" /> control, multiple data fields can be specified. If the <see cref="P:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix" /> property is blank, a sequential number is added at the end instead of a data field value. Each segment is separated by an underscore character (_).</summary>
    </member>
    <member name="F:System.Web.UI.ClientIDMode.Static">
      <summary>The <see cref="P:System.Web.UI.Control.ClientID" /> value is set to the value of the <see cref="P:System.Web.UI.Control.ID" /> property. If the control is a naming container, the control is used as the top of the hierarchy of naming containers for any controls that it contains.</summary>
    </member>
    <member name="T:System.Web.UI.ClientScriptManager">
      <summary>Defines methods for managing client scripts in Web applications.</summary>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Obtains a reference to a client function that, when invoked, initiates a client call back to server events. The client function for this overloaded method includes a specified target, argument, client script, context, error handler, and Boolean value.</summary>
      <returns>The name of a client function that invokes the client callback. </returns>
      <param name="target">The name of a server <see cref="T:System.Web.UI.Control" /> that handles the client callback. The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</param>
      <param name="argument">An argument passed from the client script to the server <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />  method. </param>
      <param name="clientCallback">The name of the client event handler that receives the result of the successful server event. </param>
      <param name="context">Client script that is evaluated on the client prior to initiating the callback. The result of the script is passed back to the client event handler.</param>
      <param name="clientErrorCallback">The name of the client event handler that receives the result when an error occurs in the server event handler. </param>
      <param name="useAsync">true to perform the callback asynchronously; false to perform the callback synchronously.</param>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
      <summary>Obtains a reference to a client function that, when invoked, initiates a client call back to a server event. The client function for this overloaded method includes a specified control, argument, client script, and context.</summary>
      <returns>The name of a client function that invokes the client callback. </returns>
      <param name="control">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback. The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method. </param>
      <param name="argument">An argument passed from the client script to the server <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />  method. </param>
      <param name="clientCallback">The name of the client event handler that receives the result of the successful server event. </param>
      <param name="context">Client script that is evaluated on the client prior to initiating the callback. The result of the script is passed back to the client event handler. </param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Web.UI.Control" /> specified is null. </exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</exception>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
      <summary>Obtains a reference to a client function that, when invoked, initiates a client call back to server events. The client function for this overloaded method includes a specified control, argument, client script, context, and Boolean value.</summary>
      <returns>The name of a client function that invokes the client callback. </returns>
      <param name="control">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback. The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method. </param>
      <param name="argument">An argument passed from the client script to the server <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />  method. </param>
      <param name="clientCallback">The name of the client event handler that receives the result of the successful server event. </param>
      <param name="context">Client script that is evaluated on the client prior to initiating the callback. The result of the script is passed back to the client event handler. </param>
      <param name="useAsync">true to perform the callback asynchronously; false to perform the callback synchronously.</param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Web.UI.Control" /> specified is null. </exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</exception>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Obtains a reference to a client function that, when invoked, initiates a client call back to server events. The client function for this overloaded method includes a specified control, argument, client script, context, error handler, and Boolean value.</summary>
      <returns>The name of a client function that invokes the client callback. </returns>
      <param name="control">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback. The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method. </param>
      <param name="argument">An argument passed from the client script to the server <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />  method. </param>
      <param name="clientCallback">The name of the client event handler that receives the result of the successful server event. </param>
      <param name="context">Client script that is evaluated on the client prior to initiating the callback. The result of the script is passed back to the client event handler. </param>
      <param name="clientErrorCallback">The name of the client event handler that receives the result when an error occurs in the server event handler. </param>
      <param name="useAsync">true to perform the callback asynchronously; false to perform the callback synchronously. </param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Web.UI.Control" /> specified is null. </exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</exception>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)">
      <summary>Gets a reference, with javascript: appended to the beginning of it, that can be used in a client event to post back to the server for the specified control and with the specified event arguments.</summary>
      <returns>A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</returns>
      <param name="control">The server control to process the postback .</param>
      <param name="argument">The parameter passed to the server control. </param>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)">
      <summary>Gets a reference, with javascript: appended to the beginning of it, that can be used in a client event to post back to the server for the specified control with the specified event arguments and Boolean indication whether to register the post back for event validation.</summary>
      <returns>A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</returns>
      <param name="control">The server control to process the postback</param>
      <param name="argument">The parameter passed to the server control.</param>
      <param name="registerForEventValidation">true to register the post back event for validation; false to not register the post back event for validation.</param>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)">
      <summary>Returns a string that can be used in a client event to cause postback to the server. The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</summary>
      <returns>A string that, when treated as script on the client, initiates the postback.</returns>
      <param name="control">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.</param>
      <param name="argument">A string of optional arguments to pass to the control that processes the postback.</param>
      <exception cref="T:System.ArgumentNullException">The specified <see cref="T:System.Web.UI.Control" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)">
      <summary>Returns a string to use in a client event to cause postback to the server. The reference string is defined by the specified control that handles the postback and a string argument of additional event information. Optionally, registers the event reference for validation.</summary>
      <returns>A string that, when treated as script on the client, initiates the postback.</returns>
      <param name="control">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.</param>
      <param name="argument">A string of optional arguments to pass to <paramref name="control" />.</param>
      <param name="registerForEventValidation">true to register the event reference for validation; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">The specified <see cref="T:System.Web.UI.Control" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)">
      <summary>Returns a string that can be used in a client event to cause postback to the server. The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> instance.</summary>
      <returns>A string that, when treated as script on the client, initiates the client postback.</returns>
      <param name="options">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.</param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Web.UI.PostBackOptions" /> parameter is null</exception>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)">
      <summary>Returns a string that can be used in a client event to cause postback to the server. The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> object. Optionally, registers the event reference for validation.</summary>
      <returns>A string that, when treated as script on the client, initiates the client postback.</returns>
      <param name="options">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.</param>
      <param name="registerForEventValidation">true to register the event reference for validation; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Web.UI.PostBackOptions" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
      <summary>Gets a URL reference to a resource in an assembly.</summary>
      <returns>The URL reference to the resource.</returns>
      <param name="type">The type of the resource. </param>
      <param name="resourceName">The fully qualified name of the resource in the assembly. </param>
      <exception cref="T:System.ArgumentNullException">The web resource type is null.</exception>
      <exception cref="T:System.ArgumentNullException">The web resource name is null.- or -The web resource name has a length of zero.</exception>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)">
      <summary>Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key. </summary>
      <returns>true if the client script block is registered; otherwise, false.</returns>
      <param name="key">The key of the client script block to search for.</param>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)">
      <summary>Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.</summary>
      <returns>true if the client script block is registered; otherwise, false.</returns>
      <param name="type">The type of the client script block to search for.  </param>
      <param name="key">The key of the client script block to search for. </param>
      <exception cref="T:System.ArgumentNullException">The client script type is null.</exception>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)">
      <summary>Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key. </summary>
      <returns>true if the client script include is registered; otherwise, false.</returns>
      <param name="key">The key of the client script include to search for. </param>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
      <summary>Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.</summary>
      <returns>true if the client script include is registered; otherwise, false.</returns>
      <param name="type">The type of the client script include to search for. </param>
      <param name="key">The key of the client script include to search for. </param>
      <exception cref="T:System.ArgumentNullException">The client script include type is null.</exception>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)">
      <summary>Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key. </summary>
      <returns>true if the OnSubmit statement is registered; otherwise, false.</returns>
      <param name="key">The key of the OnSubmit statement to search for.</param>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)">
      <summary>Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.</summary>
      <returns>true if the OnSubmit statement is registered; otherwise, false.</returns>
      <param name="type">The type of the OnSubmit statement to search for. </param>
      <param name="key">The key of the OnSubmit statement to search for. </param>
      <exception cref="T:System.ArgumentNullException">The OnSubmit statement type is null.</exception>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)">
      <summary>Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</summary>
      <returns>true if the startup script is registered; otherwise, false.</returns>
      <param name="key">The key of the startup script to search for.</param>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)">
      <summary>Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.</summary>
      <returns>true if the startup script is registered; otherwise, false.</returns>
      <param name="type">The type of the startup script to search for. </param>
      <param name="key">The key of the startup script to search for.</param>
      <exception cref="T:System.ArgumentNullException">The startup script type is null.</exception>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)">
      <summary>Registers a JavaScript array declaration with the <see cref="T:System.Web.UI.Page" /> object using an array name and array value.</summary>
      <param name="arrayName">The array name to register.</param>
      <param name="arrayValue">The array value or values to register.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="arrayName" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)">
      <summary>Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, and script literal.</summary>
      <param name="type">The type of the client script to register. </param>
      <param name="key">The key of the client script to register. </param>
      <param name="script">The client script literal to register. </param>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
      <summary>Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, script literal, and Boolean value indicating whether to add script tags.</summary>
      <param name="type">The type of the client script to register. </param>
      <param name="key">The key of the client script to register. </param>
      <param name="script">The client script literal to register.  </param>
      <param name="addScriptTags">A Boolean value indicating whether to add script tags.</param>
      <exception cref="T:System.ArgumentNullException">The client script block type is null.</exception>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)">
      <summary>Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a key and a URL.</summary>
      <param name="key">The key of the client script include to register. </param>
      <param name="url">The URL of the client script include to register. </param>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
      <summary>Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a URL.</summary>
      <param name="type">The type of the client script include to register. </param>
      <param name="key">The key of the client script include to register. </param>
      <param name="url">The URL of the client script include to register. </param>
      <exception cref="T:System.ArgumentNullException">The client script include type is null.</exception>
      <exception cref="T:System.ArgumentException">The URL is null. - or -The URL is empty.</exception>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)">
      <summary>Registers the client script resource with the <see cref="T:System.Web.UI.Page" /> object using a type and a resource name.</summary>
      <param name="type">The type of the client script resource to register. </param>
      <param name="resourceName">The name of the client script resource to register. </param>
      <exception cref="T:System.ArgumentNullException">The client resource type is null.</exception>
      <exception cref="T:System.ArgumentNullException">The client resource name is null.- or -The client resource name has a length of zero.</exception>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)">
      <summary>Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, attribute name, and attribute value.</summary>
      <param name="controlId">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute. </param>
      <param name="attributeName">The name of the custom attribute to register. </param>
      <param name="attributeValue">The value of the custom attribute. </param>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)">
      <summary>Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, an attribute name, an attribute value, and a Boolean value indicating whether to encode the attribute value.</summary>
      <param name="controlId">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.</param>
      <param name="attributeName">The name of the custom attribute to register.</param>
      <param name="attributeValue">The value of the custom attribute.</param>
      <param name="encode">A Boolean value indicating whether to encode the custom attribute to register.</param>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)">
      <summary>Registers an event reference for validation with a unique control ID representing the client control generating the event.</summary>
      <param name="uniqueId">A unique ID representing the client control generating the event.</param>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)">
      <summary>Registers an event reference for validation with a unique control ID and event arguments representing the client control generating the event.</summary>
      <param name="uniqueId">A unique ID representing the client control generating the event.</param>
      <param name="argument">Event arguments passed with the client event.</param>
      <exception cref="T:System.InvalidOperationException">The method is called prior to the <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> method.</exception>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)">
      <summary>Registers an event reference for validation with <see cref="T:System.Web.UI.PostBackOptions" />.</summary>
      <param name="options">A <see cref="T:System.Web.UI.PostBackOptions" /> object that specifies how client JavaScript is generated to initiate a postback event.</param>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)">
      <summary>Registers a hidden value with the <see cref="T:System.Web.UI.Page" /> object.</summary>
      <param name="hiddenFieldName">The name of the hidden field to register.</param>
      <param name="hiddenFieldInitialValue">The initial value of the field to register.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hiddenFieldName" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
      <summary>Registers an OnSubmit statement with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal. The statement executes when the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> is submitted.</summary>
      <param name="type">The type of the OnSubmit statement to register. </param>
      <param name="key">The key of the OnSubmit statement to register. </param>
      <param name="script">The script literal of the OnSubmit statement to register. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
      <summary>Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.</summary>
      <param name="type">The type of the startup script to register. </param>
      <param name="key">The key of the startup script to register. </param>
      <param name="script">The startup script literal to register. </param>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
      <summary>Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, a script literal, and a Boolean value indicating whether to add script tags.</summary>
      <param name="type">The type of the startup script to register. </param>
      <param name="key">The key of the startup script to register. </param>
      <param name="script">The startup script literal to register. </param>
      <param name="addScriptTags">A Boolean value indicating whether to add script tags. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String)">
      <summary>Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" /> method.</summary>
      <param name="uniqueId">A unique ID representing the client control generating the event.</param>
    </member>
    <member name="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)">
      <summary>Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" /> method.</summary>
      <param name="uniqueId">A unique ID representing the client control generating the event.</param>
      <param name="argument">Event arguments passed with the client event.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="uniqueId" /> is null or an empty string ("").</exception>
    </member>
    <member name="T:System.Web.UI.CodeConstructType">
      <summary>Specifies the code constructs that can be parsed in the <see cref="M:System.Web.UI.PageParserFilter.ProcessCodeConstruct(System.Web.UI.CodeConstructType,System.String)" /> method of the <see cref="T:System.Web.UI.PageParserFilter" /> class.</summary>
    </member>
    <member name="F:System.Web.UI.CodeConstructType.CodeSnippet">
      <summary>An expression in &lt;% ... %&gt; tags.</summary>
    </member>
    <member name="F:System.Web.UI.CodeConstructType.ExpressionSnippet">
      <summary>An expression in &lt;%# ... %&gt; tags.</summary>
    </member>
    <member name="F:System.Web.UI.CodeConstructType.DataBindingSnippet">
      <summary>An expression in &lt;%= ... %&gt; tags.</summary>
    </member>
    <member name="F:System.Web.UI.CodeConstructType.ScriptTag">
      <summary>An expression in a script element that contains the runat="server" attribute.</summary>
    </member>
    <member name="F:System.Web.UI.CodeConstructType.EncodedExpressionSnippet">
      <summary>An expression in &lt;%: ... %&gt; tags.</summary>
    </member>
    <member name="T:System.Web.UI.CompilationMode">
      <summary>Defines constants that specify how ASP.NET should compile .aspx pages and .ascx controls.</summary>
    </member>
    <member name="F:System.Web.UI.CompilationMode.Auto">
      <summary>ASP.NET will not compile the page, if possible.</summary>
    </member>
    <member name="F:System.Web.UI.CompilationMode.Never">
      <summary>The page or control should never be dynamically compiled.</summary>
    </member>
    <member name="F:System.Web.UI.CompilationMode.Always">
      <summary>The page should always be compiled.</summary>
    </member>
    <member name="T:System.Web.UI.CompiledBindableTemplateBuilder">
      <summary>Provides the default implementation of an <see cref="T:System.Web.UI.IBindableTemplate" /> object, which ASP.NET uses whenever it parses two-way data-binding within the templated content of an ASP.NET control such as <see cref="T:System.Web.UI.WebControls.FormView" />. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.CompiledBindableTemplateBuilder.#ctor(System.Web.UI.BuildTemplateMethod,System.Web.UI.ExtractTemplateValuesMethod)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.CompiledBindableTemplateBuilder" /> class.</summary>
      <param name="buildTemplateMethod">A delegate used to handle the <see cref="M:System.Web.UI.CompiledBindableTemplateBuilder.InstantiateIn(System.Web.UI.Control)" /> method call.</param>
      <param name="extractTemplateValuesMethod">A delegate used to handle the <see cref="M:System.Web.UI.CompiledBindableTemplateBuilder.ExtractValues(System.Web.UI.Control)" /> method call.</param>
    </member>
    <member name="M:System.Web.UI.CompiledBindableTemplateBuilder.ExtractValues(System.Web.UI.Control)">
      <summary>Retrieves a set of name/value pairs for values bound using two-way ASP.NET data-binding syntax within the templated content.</summary>
      <returns>An <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> of name/value pairs. The name represents the name of the data item field specified as the first parameter to bind within templated content. The value is the current value of a property value bound using two-way ASP.NET data-binding syntax.</returns>
      <param name="container">The <see cref="T:System.Web.UI.Control" /> from which to extract name/value pairs, which are passed by the data-bound control to an associated data source control in two-way data-binding scenarios.</param>
    </member>
    <member name="M:System.Web.UI.CompiledBindableTemplateBuilder.InstantiateIn(System.Web.UI.Control)">
      <summary>Defines the <see cref="T:System.Web.UI.Control" /> object that child controls and templates belong to. These child controls are in turn defined within an inline template.</summary>
      <param name="container">The <see cref="T:System.Web.UI.Control" /> to contain the controls that are created from the inline template. </param>
    </member>
    <member name="T:System.Web.UI.CompiledTemplateBuilder">
      <summary>An <see cref="T:System.Web.UI.ITemplate" /> implementation that is called from the generated page class code. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.CompiledTemplateBuilder.#ctor(System.Web.UI.BuildTemplateMethod)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.CompiledTemplateBuilder" /> class.</summary>
      <param name="buildTemplateMethod">A delegate used to handle the <see cref="M:System.Web.UI.CompiledTemplateBuilder.InstantiateIn(System.Web.UI.Control)" /> method call.</param>
    </member>
    <member name="M:System.Web.UI.CompiledTemplateBuilder.InstantiateIn(System.Web.UI.Control)">
      <summary>Populates the <see cref="T:System.Web.UI.Control" /> object with the child controls contained in the template.</summary>
      <param name="container">A <see cref="T:System.Web.UI.Control" /> that represents the container used to store the child controls in the template.</param>
    </member>
    <member name="T:System.Web.UI.ComplexPropertyEntry">
      <summary>Serves as the property entry for read/write and read-only properties such as templates.</summary>
    </member>
    <member name="P:System.Web.UI.ComplexPropertyEntry.IsCollectionItem">
      <summary>Gets a value indicating whether the property is a collection object.</summary>
      <returns>true if the property entry represents an item that contains a collection of values; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.ComplexPropertyEntry.ReadOnly">
      <summary>Gets or sets a value indicating whether the item represented in the property entry contains a method for setting its value.</summary>
      <returns>true if the item represented by the property entry does not contain a set method; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.UI.ConflictOptions">
      <summary>Determines how ASP.NET data source controls handle data conflicts when updating or deleting data.</summary>
    </member>
    <member name="F:System.Web.UI.ConflictOptions.OverwriteChanges">
      <summary>A data source control overwrites all values in a data row with its own values for the row.</summary>
    </member>
    <member name="F:System.Web.UI.ConflictOptions.CompareAllValues">
      <summary>A data source control uses the <paramref name="oldValues" /> collection of the Update and Delete methods to determine whether the data has been changed by another process.</summary>
    </member>
    <member name="T:System.Web.UI.ConstructorNeedsTagAttribute">
      <summary>Specifies that a server control needs a tag name in its constructor.</summary>
    </member>
    <member name="M:System.Web.UI.ConstructorNeedsTagAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ConstructorNeedsTagAttribute" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.ConstructorNeedsTagAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ConstructorNeedsTagAttribute" /> class.</summary>
      <param name="needsTag">true to add a tag to a control; otherwise, false. </param>
    </member>
    <member name="P:System.Web.UI.ConstructorNeedsTagAttribute.NeedsTag">
      <summary>Indicates whether a control needs a tag name in its constructor. This property is read-only.</summary>
      <returns>true if the control needs a tag in its constructor. The default is false.</returns>
    </member>
    <member name="T:System.Web.UI.Control">
      <summary>Defines the properties, methods, and events that are shared by all ASP.NET server controls.</summary>
    </member>
    <member name="M:System.Web.UI.Control.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Control" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Control.Adapter">
      <summary>Gets the browser-specific adapter for the control.</summary>
      <returns>A <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> for this control. If the target browser does not require an adapter, returns null.</returns>
    </member>
    <member name="M:System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)">
      <summary>Called after a child control is added to the <see cref="P:System.Web.UI.Control.Controls" /> collection of the <see cref="T:System.Web.UI.Control" /> object.</summary>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> that has been added. </param>
      <param name="index">The index of the control in the <see cref="P:System.Web.UI.Control.Controls" /> collection. </param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="control" /> is a <see cref="T:System.Web.UI.WebControls.Substitution" />  control.</exception>
    </member>
    <member name="M:System.Web.UI.Control.AddParsedSubObject(System.Object)">
      <summary>Notifies the server control that an element, either XML or HTML, was parsed, and adds the element to the server control's <see cref="T:System.Web.UI.ControlCollection" /> object.</summary>
      <param name="obj">An <see cref="T:System.Object" /> that represents the parsed element. </param>
    </member>
    <member name="M:System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)">
      <summary>Applies the style properties defined in the page style sheet to the control.</summary>
      <param name="page">The <see cref="T:System.Web.UI.Page" /> containing the control.</param>
      <exception cref="T:System.InvalidOperationException">The style sheet is already applied.</exception>
    </member>
    <member name="P:System.Web.UI.Control.AppRelativeTemplateSourceDirectory">
      <summary>Gets or sets the application-relative virtual directory of the <see cref="T:System.Web.UI.Page" /> or <see cref="T:System.Web.UI.UserControl" /> object that contains this control.</summary>
      <returns>The application-relative virtual directory of the page or user control that contains this control.</returns>
    </member>
    <member name="P:System.Web.UI.Control.BindingContainer">
      <summary>Gets the control that contains this control's data binding.</summary>
      <returns>The <see cref="T:System.Web.UI.Control" /> that contains this control's data binding.</returns>
    </member>
    <member name="M:System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)">
      <summary>Gathers information about the server control and delivers it to the <see cref="P:System.Web.UI.Page.Trace" /> property to be displayed when tracing is enabled for the page.</summary>
      <param name="parentId">The identifier of the control's parent. </param>
      <param name="calcViewState">A Boolean that indicates whether the view-state size is calculated. </param>
    </member>
    <member name="P:System.Web.UI.Control.ChildControlsCreated">
      <summary>Gets a value that indicates whether the server control's child controls have been created.</summary>
      <returns>true if child controls have been created; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Control.ClearCachedClientID">
      <summary>Sets the cached <see cref="P:System.Web.UI.Control.ClientID" /> value to null.</summary>
    </member>
    <member name="M:System.Web.UI.Control.ClearChildControlState">
      <summary>Deletes the control-state information for the server control's child controls. </summary>
    </member>
    <member name="M:System.Web.UI.Control.ClearChildState">
      <summary>Deletes the view-state and control-state information for all the server control's child controls.</summary>
    </member>
    <member name="M:System.Web.UI.Control.ClearChildViewState">
      <summary>Deletes the view-state information for all the server control's child controls.</summary>
    </member>
    <member name="M:System.Web.UI.Control.ClearEffectiveClientIDMode">
      <summary>Sets the <see cref="P:System.Web.UI.Control.ClientIDMode" /> property of the current control instance and of any child controls to <see cref="F:System.Web.UI.ClientIDMode.Inherit" />.</summary>
    </member>
    <member name="P:System.Web.UI.Control.ClientID">
      <summary>Gets the control ID for HTML markup that is generated by ASP.NET.</summary>
      <returns>The control ID for HTML markup that is generated by ASP.NET.</returns>
    </member>
    <member name="P:System.Web.UI.Control.ClientIDMode">
      <summary>Gets or sets the algorithm that is used to generate the value of the <see cref="P:System.Web.UI.Control.ClientID" /> property.</summary>
      <returns>A value that indicates how the <see cref="P:System.Web.UI.Control.ClientID" /> property is generated. The default is <see cref="F:System.Web.UI.ClientIDMode.Inherit" />.</returns>
    </member>
    <member name="P:System.Web.UI.Control.ClientIDSeparator">
      <summary>Gets a character value representing the separator character used in the <see cref="P:System.Web.UI.Control.ClientID" /> property.</summary>
      <returns>Always returns the underscore character (_).</returns>
    </member>
    <member name="P:System.Web.UI.Control.Context">
      <summary>Gets the <see cref="T:System.Web.HttpContext" /> object associated with the server control for the current Web request.</summary>
      <returns>The specified <see cref="T:System.Web.HttpContext" /> object associated with the current request.</returns>
    </member>
    <member name="P:System.Web.UI.Control.Controls">
      <summary>Gets a <see cref="T:System.Web.UI.ControlCollection" /> object that represents the child controls for a specified server control in the UI hierarchy.</summary>
      <returns>The collection of child controls for the specified server control.</returns>
    </member>
    <member name="M:System.Web.UI.Control.CreateChildControls">
      <summary>Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.</summary>
    </member>
    <member name="M:System.Web.UI.Control.CreateControlCollection">
      <summary>Creates a new <see cref="T:System.Web.UI.ControlCollection" /> object to hold the child controls (both literal and server) of the server control.</summary>
      <returns>A <see cref="T:System.Web.UI.ControlCollection" /> object to contain the current server control's child server controls.</returns>
    </member>
    <member name="M:System.Web.UI.Control.DataBind">
      <summary>Binds a data source to the invoked server control and all its child controls.</summary>
    </member>
    <member name="M:System.Web.UI.Control.DataBind(System.Boolean)">
      <summary>Binds a data source to the invoked server control and all its child controls with an option to raise the <see cref="E:System.Web.UI.Control.DataBinding" /> event. </summary>
      <param name="raiseOnDataBinding">true if the <see cref="E:System.Web.UI.Control.DataBinding" /> event is raised; otherwise, false.</param>
    </member>
    <member name="M:System.Web.UI.Control.DataBindChildren">
      <summary>Binds a data source to the server control's child controls.</summary>
    </member>
    <member name="E:System.Web.UI.Control.DataBinding">
      <summary>Occurs when the server control binds to a data source.</summary>
    </member>
    <member name="P:System.Web.UI.Control.DataItemContainer">
      <summary>Gets a reference to the naming container if the naming container implements <see cref="T:System.Web.UI.IDataItemContainer" />.</summary>
      <returns>The naming container. In a hierarchy of naming containers that implement <see cref="T:System.Web.UI.IDataItemContainer" />, this property returns the naming container at the top of the hierarchy, or null if the current <see cref="T:System.Web.UI.Control" /> object is not in a naming container that implements <see cref="T:System.Web.UI.IDataItemContainer" />.</returns>
    </member>
    <member name="P:System.Web.UI.Control.DataKeysContainer">
      <summary>Gets a reference to the naming container if the naming container implements <see cref="T:System.Web.UI.IDataKeysControl" />.</summary>
      <returns>The naming container. In a hierarchy of naming containers that implement <see cref="T:System.Web.UI.IDataKeysControl" />, the property returns the naming container at the top of the hierarchy, or null if the current <see cref="T:System.Web.UI.Control" /> object is not in a naming container that implements <see cref="T:System.Web.UI.IDataKeysControl" />.</returns>
    </member>
    <member name="P:System.Web.UI.Control.DesignMode">
      <summary>Gets a value indicating whether a control is being used on a design surface.</summary>
      <returns>true if the control is being used in a designer; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Control.Dispose">
      <summary>Enables a server control to perform final clean up before it is released from memory.</summary>
    </member>
    <member name="E:System.Web.UI.Control.Disposed">
      <summary>Occurs when a server control is released from memory, which is the last stage of the server control lifecycle when an ASP.NET page is requested.</summary>
    </member>
    <member name="P:System.Web.UI.Control.EnableTheming">
      <summary>Gets or sets a value indicating whether themes apply to this control.</summary>
      <returns>true to use themes; otherwise, false. The default is true. </returns>
      <exception cref="T:System.InvalidOperationException">The Page_PreInit event has already occurred.- or -The control has already been added to the Controls collection.</exception>
    </member>
    <member name="P:System.Web.UI.Control.EnableViewState">
      <summary>Gets or sets a value indicating whether the server control persists its view state, and the view state of any child controls it contains, to the requesting client.</summary>
      <returns>true if the server control maintains its view state; otherwise false. The default is true.</returns>
    </member>
    <member name="M:System.Web.UI.Control.EnsureChildControls">
      <summary>Determines whether the server control contains child controls. If it does not, it creates child controls.</summary>
    </member>
    <member name="M:System.Web.UI.Control.EnsureID">
      <summary>Creates an identifier for controls that do not have an identifier assigned.</summary>
    </member>
    <member name="P:System.Web.UI.Control.Events">
      <summary>Gets a list of event handler delegates for the control. This property is read-only.</summary>
      <returns>The list of event handler delegates.</returns>
    </member>
    <member name="M:System.Web.UI.Control.FindControl(System.String)">
      <summary>Searches the current naming container for a server control with the specified <paramref name="id" /> parameter.</summary>
      <returns>The specified control, or null if the specified control does not exist.</returns>
      <param name="id">The identifier for the control to be found. </param>
    </member>
    <member name="M:System.Web.UI.Control.FindControl(System.String,System.Int32)">
      <summary>Searches the current naming container for a server control with the specified <paramref name="id" /> and an integer, specified in the <paramref name="pathOffset" /> parameter, which aids in the search. You should not override this version of the <see cref="Overload:System.Web.UI.Control.FindControl" /> method.</summary>
      <returns>The specified control, or null if the specified control does not exist.</returns>
      <param name="id">The identifier for the control to be found. </param>
      <param name="pathOffset">The number of controls up the page control hierarchy needed to reach a naming container. </param>
    </member>
    <member name="M:System.Web.UI.Control.Focus">
      <summary>Sets input focus to a control.</summary>
    </member>
    <member name="M:System.Web.UI.Control.GetDesignModeState">
      <summary>Gets design-time data for a control.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> containing the design-time data for the control.</returns>
    </member>
    <member name="M:System.Web.UI.Control.GetRouteUrl(System.Object)">
      <summary>Gets the URL that corresponds to a set of route parameters.</summary>
      <returns>The URL that corresponds to the specified route parameters.</returns>
      <param name="routeParameters">The route parameters.</param>
    </member>
    <member name="M:System.Web.UI.Control.GetRouteUrl(System.String,System.Object)">
      <summary>Gets the URL that corresponds to a set of route parameters and a route name.</summary>
      <returns>The URL that corresponds to the specified route parameters and route name.</returns>
      <param name="routeName">The name of the route.</param>
      <param name="routeParameters">The route parameters.</param>
    </member>
    <member name="M:System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Gets the URL that corresponds to a set of route parameters and a route name.</summary>
      <returns>The URL that corresponds to the specified route parameters and route name.</returns>
      <param name="routeName">The name of the route.</param>
      <param name="routeParameters">The route parameters.</param>
    </member>
    <member name="M:System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)">
      <summary>Gets the URL that corresponds to a set of route parameters.</summary>
      <returns>The URL that corresponds to the specified route parameters.</returns>
      <param name="routeParameters">The route parameters.</param>
    </member>
    <member name="M:System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)">
      <summary>Returns the prefixed portion of the <see cref="P:System.Web.UI.Control.UniqueID" /> property of the specified control.</summary>
      <returns>The prefixed portion of the <see cref="P:System.Web.UI.Control.UniqueID" /> property of the specified control.</returns>
      <param name="control">A control that is within a naming container.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.Control.NamingContainer" /> property of <paramref name="control" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.Control.HasChildViewState">
      <summary>Gets a value indicating whether the current server control's child controls have any saved view-state settings.</summary>
      <returns>true if any child controls have saved view state information; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Control.HasControls">
      <summary>Determines if the server control contains any child controls.</summary>
      <returns>true if the control contains other controls; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Control.HasEvents">
      <summary>Returns a value indicating whether events are registered for the control or any child controls.</summary>
      <returns>true if events are registered; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Control.ID">
      <summary>Gets or sets the programmatic identifier assigned to the server control.</summary>
      <returns>The programmatic identifier assigned to the control.</returns>
    </member>
    <member name="P:System.Web.UI.Control.IdSeparator">
      <summary>Gets the character used to separate control identifiers.</summary>
      <returns>The separator character. The default is "$".</returns>
    </member>
    <member name="E:System.Web.UI.Control.Init">
      <summary>Occurs when the server control is initialized, which is the first step in its lifecycle.</summary>
    </member>
    <member name="P:System.Web.UI.Control.IsChildControlStateCleared">
      <summary>Gets a value indicating whether controls contained within this control have control state.</summary>
      <returns>true if children of this control do not use control state; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Control.IsLiteralContent">
      <summary>Determines if the server control holds only literal content.</summary>
      <returns>true if the server control contains solely literal content; otherwise false.</returns>
    </member>
    <member name="P:System.Web.UI.Control.IsTrackingViewState">
      <summary>Gets a value that indicates whether the server control is saving changes to its view state.</summary>
      <returns>true if the control is marked to save its state; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Control.IsViewStateEnabled">
      <summary>Gets a value indicating whether view state is enabled for this control.</summary>
      <returns>true if view state is enabled for the control; otherwise, false.</returns>
    </member>
    <member name="E:System.Web.UI.Control.Load">
      <summary>Occurs when the server control is loaded into the <see cref="T:System.Web.UI.Page" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.Control.LoadControlState(System.Object)">
      <summary>Restores control-state information from a previous page request that was saved by the <see cref="M:System.Web.UI.Control.SaveControlState" /> method.</summary>
      <param name="savedState">An <see cref="T:System.Object" /> that represents the control state to be restored. </param>
    </member>
    <member name="M:System.Web.UI.Control.LoadViewState(System.Object)">
      <summary>Restores view-state information from a previous page request that was saved by the <see cref="M:System.Web.UI.Control.SaveViewState" /> method.</summary>
      <param name="savedState">An <see cref="T:System.Object" /> that represents the control state to be restored. </param>
    </member>
    <member name="P:System.Web.UI.Control.LoadViewStateByID">
      <summary>Gets a value indicating whether the control participates in loading its view state by <see cref="P:System.Web.UI.Control.ID" /> instead of index. </summary>
      <returns>true if the control loads its view state by <see cref="P:System.Web.UI.Control.ID" />; otherwise, false. The default value is false.</returns>
    </member>
    <member name="M:System.Web.UI.Control.MapPathSecure(System.String)">
      <summary>Retrieves the physical path that a virtual path, either absolute or relative, maps to.</summary>
      <returns>The physical path to the requested file.</returns>
      <param name="virtualPath">A relative or root relative URL. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="virtualPath" /> is null or an empty string ("").</exception>
    </member>
    <member name="P:System.Web.UI.Control.NamingContainer">
      <summary>Gets a reference to the server control's naming container, which creates a unique namespace for differentiating between server controls with the same <see cref="P:System.Web.UI.Control.ID" /> property value.</summary>
      <returns>The server control's naming container.</returns>
    </member>
    <member name="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)">
      <summary>Determines whether the event for the server control is passed up the page's UI server control hierarchy.</summary>
      <returns>true if the event has been canceled; otherwise, false. The default is false.</returns>
      <param name="source">The source of the event. </param>
      <param name="args">An <see cref="T:System.EventArgs" /> object that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.Control.OnDataBinding(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.DataBinding" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.Control.OnInit(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Init" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.Control.OnLoad(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Load" /> event.</summary>
      <param name="e">The <see cref="T:System.EventArgs" /> object that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.Control.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.Control.OnUnload(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Unload" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains event data. </param>
    </member>
    <member name="M:System.Web.UI.Control.OpenFile(System.String)">
      <summary>Gets a <see cref="T:System.IO.Stream" /> used to read a file.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> that references the desired file.</returns>
      <param name="path">The path to the desired file.</param>
      <exception cref="T:System.Web.HttpException">Access to the specified file was denied.</exception>
    </member>
    <member name="P:System.Web.UI.Control.Page">
      <summary>Gets a reference to the <see cref="T:System.Web.UI.Page" /> instance that contains the server control.</summary>
      <returns>The <see cref="T:System.Web.UI.Page" /> instance that contains the server control.</returns>
      <exception cref="T:System.InvalidOperationException">The control is a <see cref="T:System.Web.UI.WebControls.Substitution" /> control.</exception>
    </member>
    <member name="P:System.Web.UI.Control.Parent">
      <summary>Gets a reference to the server control's parent control in the page control hierarchy.</summary>
      <returns>A reference to the server control's parent control.</returns>
    </member>
    <member name="E:System.Web.UI.Control.PreRender">
      <summary>Occurs after the <see cref="T:System.Web.UI.Control" /> object is loaded but prior to rendering.</summary>
    </member>
    <member name="M:System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)">
      <summary>Assigns any sources of the event and its information to the control's parent.</summary>
      <param name="source">The source of the event. </param>
      <param name="args">An <see cref="T:System.EventArgs" /> object that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.Control.RemovedControl(System.Web.UI.Control)">
      <summary>Called after a child control is removed from the <see cref="P:System.Web.UI.Control.Controls" /> collection of the <see cref="T:System.Web.UI.Control" /> object.</summary>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> that has been removed. </param>
      <exception cref="T:System.InvalidOperationException">The control is a <see cref="T:System.Web.UI.WebControls.Substitution" /> control.</exception>
    </member>
    <member name="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter" /> object, which writes the content to be rendered on the client.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> object that receives the server control content. </param>
    </member>
    <member name="M:System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)">
      <summary>Outputs the content of a server control's children to a provided <see cref="T:System.Web.UI.HtmlTextWriter" /> object, which writes the content to be rendered on the client.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> object that receives the rendered content. </param>
    </member>
    <member name="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)">
      <summary>Outputs server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter" /> object and stores tracing information about the control if tracing is enabled.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> object that receives the control content. </param>
    </member>
    <member name="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)">
      <summary>Outputs server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter" /> object using a provided <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the control content.</param>
      <param name="adapter">The <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> that defines the rendering.</param>
    </member>
    <member name="P:System.Web.UI.Control.RenderingCompatibility">
      <summary>Gets a value that specifies the ASP.NET version that rendered HTML will be compatible with.</summary>
      <returns>The ASP.NET version that rendered HTML will be compatible with.</returns>
    </member>
    <member name="M:System.Web.UI.Control.ResolveAdapter">
      <summary>Gets the control adapter responsible for rendering the specified control.</summary>
      <returns>A <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> that will render the control.</returns>
    </member>
    <member name="M:System.Web.UI.Control.ResolveClientUrl(System.String)">
      <summary>Gets a URL that can be used by the browser.</summary>
      <returns>A fully qualified URL to the specified resource suitable for use on the browser.</returns>
      <param name="relativeUrl">A URL relative to the current page.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relativeUrl" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Control.ResolveUrl(System.String)">
      <summary>Converts a URL into one that is usable on the requesting client.</summary>
      <returns>The converted URL.</returns>
      <param name="relativeUrl">The URL associated with the <see cref="P:System.Web.UI.Control.TemplateSourceDirectory" /> property. </param>
      <exception cref="T:System.ArgumentNullException">Occurs if the <paramref name="relativeUrl" /> parameter contains null. </exception>
    </member>
    <member name="M:System.Web.UI.Control.SaveControlState">
      <summary>Saves any server control state changes that have occurred since the time the page was posted back to the server.</summary>
      <returns>Returns the server control's current state. If there is no state associated with the control, this method returns null.</returns>
    </member>
    <member name="M:System.Web.UI.Control.SaveViewState">
      <summary>Saves any server control view-state changes that have occurred since the time the page was posted back to the server.</summary>
      <returns>Returns the server control's current view state. If there is no view state associated with the control, this method returns null.</returns>
    </member>
    <member name="M:System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)">
      <summary>Sets design-time data for a control.</summary>
      <param name="data">An <see cref="T:System.Collections.IDictionary" /> containing the design-time data for the control. </param>
    </member>
    <member name="M:System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)">
      <summary>Assigns an event handler delegate to render the server control and its content into its parent control.</summary>
      <param name="renderMethod">The information necessary to pass to the delegate so that it can render the server control. </param>
    </member>
    <member name="P:System.Web.UI.Control.Site">
      <summary>Gets information about the container that hosts the current control when rendered on a design surface.</summary>
      <returns>An <see cref="T:System.ComponentModel.ISite" /> that contains information about the container that the control is hosted in.</returns>
      <exception cref="T:System.InvalidOperationException">The control is a <see cref="T:System.Web.UI.WebControls.Substitution" /> control.</exception>
    </member>
    <member name="P:System.Web.UI.Control.SkinID">
      <summary>Gets or sets the skin to apply to the control.</summary>
      <returns>The name of the skin to apply to the control. The default is <see cref="F:System.String.Empty" />.</returns>
      <exception cref="T:System.InvalidOperationException">The style sheet has already been applied.- or -The Page_PreInit event has already occurred.- or -The control was already added to the Controls collection.</exception>
    </member>
    <member name="P:System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.IControlBuilderAccessor.ControlBuilder" />. </summary>
      <returns>The <see cref="T:System.Web.UI.ControlBuilder" /> that built the control; otherwise, null if no builder was used.</returns>
    </member>
    <member name="M:System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IControlDesignerAccessor.GetDesignModeState" />.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> of the control state.</returns>
    </member>
    <member name="M:System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IControlDesignerAccessor.SetDesignModeState(System.Collections.IDictionary)" />. </summary>
      <param name="data">An <see cref="T:System.Collections.IDictionary" /> containing the design-time data for the control. </param>
    </member>
    <member name="M:System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IControlDesignerAccessor.SetOwnerControl(System.Web.UI.Control)" />. </summary>
      <param name="owner">The owner of the control. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="owner" /> is set to the current control.</exception>
    </member>
    <member name="P:System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.IControlDesignerAccessor.UserData" />. </summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> containing information about the control.</returns>
    </member>
    <member name="P:System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.IDataBindingsAccessor.DataBindings" />. </summary>
      <returns>The collection of data bindings.</returns>
    </member>
    <member name="P:System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.IDataBindingsAccessor.HasDataBindings" />. </summary>
      <returns>true if the control contains data-binding logic; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.IExpressionsAccessor.Expressions" />. </summary>
      <returns>An <see cref="T:System.Web.UI.ExpressionBindingCollection" /> containing <see cref="T:System.Web.UI.ExpressionBinding" /> objects that represent the properties and expressions for a control.</returns>
    </member>
    <member name="P:System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.IExpressionsAccessor.HasExpressions" />. </summary>
      <returns>true if the control has properties set through expressions; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IParserAccessor.AddParsedSubObject(System.Object)" />. </summary>
      <param name="obj">The object to add.</param>
    </member>
    <member name="P:System.Web.UI.Control.TemplateControl">
      <summary>Gets or sets a reference to the template that contains this control. </summary>
      <returns>The <see cref="T:System.Web.UI.TemplateControl" /> instance that contains this control. </returns>
    </member>
    <member name="P:System.Web.UI.Control.TemplateSourceDirectory">
      <summary>Gets the virtual directory of the <see cref="T:System.Web.UI.Page" /> or <see cref="T:System.Web.UI.UserControl" /> that contains the current server control.</summary>
      <returns>The virtual directory of the page or user control that contains the server control.</returns>
    </member>
    <member name="M:System.Web.UI.Control.TrackViewState">
      <summary>Causes tracking of view-state changes to the server control so they can be stored in the server control's <see cref="T:System.Web.UI.StateBag" /> object. This object is accessible through the <see cref="P:System.Web.UI.Control.ViewState" /> property.</summary>
    </member>
    <member name="P:System.Web.UI.Control.UniqueID">
      <summary>Gets the unique, hierarchically qualified identifier for the server control.</summary>
      <returns>The fully qualified identifier for the server control.</returns>
    </member>
    <member name="E:System.Web.UI.Control.Unload">
      <summary>Occurs when the server control is unloaded from memory.</summary>
    </member>
    <member name="P:System.Web.UI.Control.ViewState">
      <summary>Gets a dictionary of state information that allows you to save and restore the view state of a server control across multiple requests for the same page.</summary>
      <returns>An instance of the <see cref="T:System.Web.UI.StateBag" /> class that contains the server control's view-state information.</returns>
    </member>
    <member name="P:System.Web.UI.Control.ViewStateIgnoresCase">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.StateBag" /> object is case-insensitive.</summary>
      <returns>true if the <see cref="T:System.Web.UI.StateBag" /> instance is case-insensitive; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.Control.ViewStateMode">
      <summary>Gets or sets the view-state mode of this control.</summary>
      <returns>The view-state mode of this control.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">An attempt was made to set this property to a value that is not in the <see cref="T:System.Web.UI.ViewStateMode" /> enumeration.</exception>
    </member>
    <member name="P:System.Web.UI.Control.Visible">
      <summary>Gets or sets a value that indicates whether a server control is rendered as UI on the page.</summary>
      <returns>true if the control is visible on the page; otherwise false.</returns>
    </member>
    <member name="T:System.Web.UI.ControlBuilder">
      <summary>Supports the page parser in building a control and the child controls it contains.</summary>
    </member>
    <member name="M:System.Web.UI.ControlBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ControlBuilder" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.ControlBuilder.AllowWhitespaceLiterals">
      <summary>Determines whether white space literals are permitted in the content between a control's opening and closing tags. This method is called by the ASP.NET page framework.</summary>
      <returns>Always returns true.</returns>
    </member>
    <member name="M:System.Web.UI.ControlBuilder.AppendLiteralString(System.String)">
      <summary>Adds the specified literal content to a control. This method is called by the ASP.NET page framework.</summary>
      <param name="s">The content to add to the control.</param>
      <exception cref="T:System.Web.HttpException">The string literal is not well formed. </exception>
    </member>
    <member name="M:System.Web.UI.ControlBuilder.AppendSubBuilder(System.Web.UI.ControlBuilder)">
      <summary>Adds builders to the <see cref="T:System.Web.UI.ControlBuilder" /> object for any child controls that belong to the container control.</summary>
      <param name="subBuilder">The <see cref="T:System.Web.UI.ControlBuilder" /> object assigned to the child control. </param>
    </member>
    <member name="P:System.Web.UI.ControlBuilder.BindingContainerType">
      <summary>Gets the type of the binding container for the control that this builder creates.</summary>
      <returns>A <see cref="T:System.Type" /> that represent the type of the binding container for the control that this builder creates.</returns>
    </member>
    <member name="M:System.Web.UI.ControlBuilder.BuildObject">
      <summary>Builds a design-time instance of the control that is referred to by this <see cref="T:System.Web.UI.ControlBuilder" /> object.</summary>
      <returns>The resulting built control.</returns>
    </member>
    <member name="M:System.Web.UI.ControlBuilder.CloseControl">
      <summary>Called by the parser to inform the builder that the parsing of the control's opening and closing tags is complete.</summary>
    </member>
    <member name="P:System.Web.UI.ControlBuilder.ControlType">
      <summary>Gets the <see cref="T:System.Type" /> for the control to be created.</summary>
      <returns>The <see cref="T:System.Type" /> for the control to be created.</returns>
    </member>
    <member name="M:System.Web.UI.ControlBuilder.CreateBuilderFromType(System.Web.UI.TemplateParser,System.Web.UI.ControlBuilder,System.Type,System.String,System.String,System.Collections.IDictionary,System.Int32,System.String)">
      <summary>Creates a <see cref="T:System.Web.UI.ControlBuilder" /> object from the specified tag name and object type, as well as other parameters defining the builder.</summary>
      <returns>The builder that is responsible for creating the control.</returns>
      <param name="parser">The <see cref="T:System.Web.UI.TemplateParser" /> object responsible for parsing the control. </param>
      <param name="parentBuilder">The <see cref="T:System.Web.UI.ControlBuilder" /> object responsible for building the parent control. </param>
      <param name="type">The <see cref="T:System.Type" /> of the object that the builder will create. </param>
      <param name="tagName">The name of the tag to be built. This allows the builder to support multiple tag types. </param>
      <param name="id">The <see cref="P:System.Web.UI.ControlBuilder.ID" /> attribute assigned to the control. </param>
      <param name="attribs">The <see cref="T:System.Collections.IDictionary" /> object that holds all the specified tag attributes. </param>
      <param name="line">The source file line number for the specified control. </param>
      <param name="sourceFileName">The name of the source file from which the control is to be created. </param>
    </member>
    <member name="P:System.Web.UI.ControlBuilder.CurrentFilterResolutionService">
      <summary>Gets an <see cref="T:System.Web.UI.IFilterResolutionService" /> object that is used to manage device-filter related services when parsing and persisting controls in the designer.</summary>
      <returns>An <see cref="T:System.Web.UI.IFilterResolutionService" />.</returns>
    </member>
    <member name="P:System.Web.UI.ControlBuilder.DeclareType">
      <summary>Gets the type that will be used by code generation to declare the control.</summary>
      <returns>The <see cref="T:System.Type" /> of the control used by code generation to declare the control.</returns>
    </member>
    <member name="F:System.Web.UI.ControlBuilder.DesignerFilter">
      <summary>Represents the "__designer" literal string.</summary>
    </member>
    <member name="P:System.Web.UI.ControlBuilder.FChildrenAsProperties">
      <summary>Determines whether the control has a <see cref="T:System.Web.UI.ParseChildrenAttribute" /> with <see cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" /> set to true.</summary>
      <returns>true if the control has a <see cref="T:System.Web.UI.ParseChildrenAttribute" /> with <see cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" /> set to true, otherwise false.</returns>
    </member>
    <member name="P:System.Web.UI.ControlBuilder.FIsNonParserAccessor">
      <summary>Determines whether the control implements the <see cref="T:System.Web.UI.IParserAccessor" /> interface.</summary>
      <returns>false if the control implements the <see cref="T:System.Web.UI.IParserAccessor" /> interface, otherwise true.</returns>
    </member>
    <member name="M:System.Web.UI.ControlBuilder.GetChildControlType(System.String,System.Collections.IDictionary)">
      <summary>Obtains the <see cref="T:System.Type" /> of the control type corresponding to a child tag. This method is called by the ASP.NET page framework.</summary>
      <returns>The <see cref="T:System.Type" /> of the specified control's child.</returns>
      <param name="tagName">The tag name of the child. </param>
      <param name="attribs">An array of attributes contained in the child control. </param>
    </member>
    <member name="M:System.Web.UI.ControlBuilder.GetObjectPersistData">
      <summary>Creates the <see cref="T:System.Web.UI.ObjectPersistData" /> object for this <see cref="T:System.Web.UI.ControlBuilder" /> object.</summary>
      <returns>The <see cref="T:System.Web.UI.ObjectPersistData" /> for this <see cref="T:System.Web.UI.ControlBuilder" />.</returns>
    </member>
    <member name="M:System.Web.UI.ControlBuilder.GetResourceKey">
      <summary>Retrieves the resource key for this <see cref="T:System.Web.UI.ControlBuilder" /> object.</summary>
      <returns>The resource key for this <see cref="T:System.Web.UI.ControlBuilder" />.</returns>
    </member>
    <member name="P:System.Web.UI.ControlBuilder.HasAspCode">
      <summary>Gets a value indicating whether the control contains any code blocks.</summary>
      <returns>true if the control contains at least one code block; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.ControlBuilder.HasBody">
      <summary>Determines if a control has both an opening and closing tag. This method is called by the ASP.NET page framework.</summary>
      <returns>true if the control has an opening and closing tag; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.ControlBuilder.HtmlDecodeLiterals">
      <summary>Determines whether the literal string of an HTML control must be HTML decoded. This method is called by the ASP.NET page framework.</summary>
      <returns>true if the HTML control literal string is to be decoded; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.ControlBuilder.ID">
      <summary>Gets or sets the identifier property for the control to be built.</summary>
      <returns>The identifier property for the control.</returns>
    </member>
    <member name="P:System.Web.UI.ControlBuilder.InDesigner">
      <summary>Returns whether the <see cref="T:System.Web.UI.ControlBuilder" /> is running in the designer.</summary>
      <returns>true if the <see cref="T:System.Web.UI.ControlBuilder" /> is running in the designer; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.ControlBuilder.Init(System.Web.UI.TemplateParser,System.Web.UI.ControlBuilder,System.Type,System.String,System.String,System.Collections.IDictionary)">
      <summary>Initializes the <see cref="T:System.Web.UI.ControlBuilder" /> for use after it is instantiated. This method is called by the ASP.NET page framework.</summary>
      <param name="parser">The <see cref="T:System.Web.UI.TemplateParser" /> object responsible for parsing the control. </param>
      <param name="parentBuilder">The <see cref="T:System.Web.UI.ControlBuilder" /> object responsible for building the parent control. </param>
      <param name="type">The <see cref="T:System.Type" /> assigned to the control that the builder will create. </param>
      <param name="tagName">The name of the tag to be built. This allows the builder to support multiple tag types. </param>
      <param name="id">The <see cref="P:System.Web.UI.ControlBuilder.ID" /> attribute assigned to the control. </param>
      <param name="attribs">The <see cref="T:System.Collections.IDictionary" /> object that holds all the specified tag attributes. </param>
    </member>
    <member name="P:System.Web.UI.ControlBuilder.InPageTheme">
      <summary>Gets a Boolean value indicating whether this <see cref="T:System.Web.UI.ControlBuilder" /> object is used to generate page themes.</summary>
      <returns>true to use this <see cref="T:System.Web.UI.ControlBuilder" /> to generate page themes; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.ControlBuilder.Localize">
      <summary>Gets a Boolean value indicating whether the control that is created by this <see cref="T:System.Web.UI.ControlBuilder" /> object is localized.</summary>
      <returns>true to indicate that the control created by this <see cref="T:System.Web.UI.ControlBuilder" /> object is localized; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.ControlBuilder.NamingContainerType">
      <summary>Gets the type of the naming container for the control that this builder creates.</summary>
      <returns>A <see cref="T:System.Type" /> that represent the type of the naming container for the control that this builder creates.</returns>
    </member>
    <member name="M:System.Web.UI.ControlBuilder.NeedsTagInnerText">
      <summary>Determines if the control builder needs to get its inner text. If so, the <see cref="M:System.Web.UI.ControlBuilder.SetTagInnerText(System.String)" /> method must be called. This method is called by the ASP.NET page framework.</summary>
      <returns>true if the control builder needs to get its inner text. The default is false.</returns>
    </member>
    <member name="M:System.Web.UI.ControlBuilder.OnAppendToParentBuilder(System.Web.UI.ControlBuilder)">
      <summary>Notifies the <see cref="T:System.Web.UI.ControlBuilder" /> that it is being added to a parent control builder.</summary>
      <param name="parentBuilder">The <see cref="T:System.Web.UI.ControlBuilder" /> object to which the current builder is added. </param>
    </member>
    <member name="P:System.Web.UI.ControlBuilder.Parser">
      <summary>Gets the <see cref="T:System.Web.UI.TemplateParser" /> responsible for parsing the control.</summary>
      <returns>The <see cref="T:System.Web.UI.TemplateParser" /> used to parse the control.</returns>
    </member>
    <member name="M:System.Web.UI.ControlBuilder.ProcessGeneratedCode(System.CodeDom.CodeCompileUnit,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeMemberMethod,System.CodeDom.CodeMemberMethod)">
      <summary>Enables custom control builders to access the generated Code Document Object Model (CodeDom) and insert and modify code during the process of parsing and building controls.</summary>
      <param name="codeCompileUnit">The root container of a CodeDOM graph of the control that is being built.</param>
      <param name="baseType">The base type of the page or user control that contains the control that is being built.</param>
      <param name="derivedType">The derived type of the page or user control that contains the control that is being built.</param>
      <param name="buildMethod">The code that is used to build the control.</param>
      <param name="dataBindingMethod">The code that is used to build the data-binding method of the control.</param>
    </member>
    <member name="P:System.Web.UI.ControlBuilder.ServiceProvider">
      <summary>Gets the service object for this <see cref="T:System.Web.UI.ControlBuilder" /> object.</summary>
      <returns>An <see cref="T:System.IServiceProvider" /> that represents the service object for this <see cref="T:System.Web.UI.ControlBuilder" />.</returns>
    </member>
    <member name="M:System.Web.UI.ControlBuilder.SetResourceKey(System.String)">
      <summary>Sets the resource key for this <see cref="T:System.Web.UI.ControlBuilder" /> object.</summary>
      <param name="resourceKey">The resource key for this <see cref="T:System.Web.UI.ControlBuilder" />.</param>
    </member>
    <member name="M:System.Web.UI.ControlBuilder.SetServiceProvider(System.IServiceProvider)">
      <summary>Sets the service object for this <see cref="T:System.Web.UI.ControlBuilder" /> object.</summary>
      <param name="serviceProvider">An <see cref="T:System.IServiceProvider" /> that represents the service object for the <see cref="T:System.Web.UI.ControlBuilder" />.</param>
    </member>
    <member name="M:System.Web.UI.ControlBuilder.SetTagInnerText(System.String)">
      <summary>Provides the <see cref="T:System.Web.UI.ControlBuilder" /> with the inner text of the control tag.</summary>
      <param name="text">The text to be provided. </param>
    </member>
    <member name="P:System.Web.UI.ControlBuilder.TagName">
      <summary>Gets the tag name for the control to be built.</summary>
      <returns>The tag name for the control.</returns>
    </member>
    <member name="P:System.Web.UI.ControlBuilder.ThemeResolutionService">
      <summary>Gets an <see cref="T:System.Web.UI.IThemeResolutionService" /> object that is used in design time to manage control themes and skins.</summary>
      <returns>An <see cref="T:System.Web.UI.IThemeResolutionService" />.</returns>
    </member>
    <member name="T:System.Web.UI.ControlBuilderAttribute">
      <summary>Specifies a <see cref="T:System.Web.UI.ControlBuilder" /> class for building a custom control within the ASP.NET parser. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.ControlBuilderAttribute.#ctor(System.Type)">
      <summary>Specifies the control builder for a custom control.</summary>
      <param name="builderType">The control builder type </param>
    </member>
    <member name="P:System.Web.UI.ControlBuilderAttribute.BuilderType">
      <summary>Gets the <see cref="T:System.Type" /> of the control associated with the attribute. This property is read-only.</summary>
      <returns>The <see cref="T:System.Type" /> of the control associated with the attribute.</returns>
    </member>
    <member name="F:System.Web.UI.ControlBuilderAttribute.Default">
      <summary>Specifies the new <see cref="T:System.Web.UI.ControlBuilderAttribute" /> object. By default, the new object is set to null. This field is read-only.</summary>
    </member>
    <member name="M:System.Web.UI.ControlBuilderAttribute.Equals(System.Object)">
      <summary>Gets a value indicating whether the current <see cref="T:System.Web.UI.ControlBuilderAttribute" /> is identical to the specified object. </summary>
      <returns>true if <paramref name="obj" /> is a <see cref="T:System.Web.UI.ControlBuilderAttribute" /> and is identical to the current <see cref="T:System.Web.UI.ControlBuilderAttribute" />; otherwise, false.</returns>
      <param name="obj">An object to compare to the current <see cref="T:System.Web.UI.ControlBuilderAttribute" />.</param>
    </member>
    <member name="M:System.Web.UI.ControlBuilderAttribute.GetHashCode">
      <summary>Returns the hash code of the <see cref="T:System.Web.UI.ControlBuilderAttribute" /> object. </summary>
      <returns>A 32-bit signed integer representing the hash code; otherwise, 0, if the <see cref="P:System.Web.UI.ControlBuilderAttribute.BuilderType" /> is null.</returns>
    </member>
    <member name="M:System.Web.UI.ControlBuilderAttribute.IsDefaultAttribute">
      <summary>Determines whether the current control builder is the default.</summary>
      <returns>true if the current control builder is the default.</returns>
    </member>
    <member name="T:System.Web.UI.ControlCachePolicy">
      <summary>Provides programmatic access to an ASP.NET user control's output cache settings.</summary>
    </member>
    <member name="P:System.Web.UI.ControlCachePolicy.Cached">
      <summary>Gets or sets a value indicating whether fragment caching is enabled for the user control.</summary>
      <returns>true if the user control's output is cached; otherwise, false.</returns>
      <exception cref="T:System.Web.HttpException">The user control is not associated with a <see cref="T:System.Web.UI.BasePartialCachingControl" /> and is not cacheable.- or -The <see cref="P:System.Web.UI.ControlCachePolicy.Cached" /> property is set outside of the initialization and rendering stages of the control.</exception>
    </member>
    <member name="P:System.Web.UI.ControlCachePolicy.Dependency">
      <summary>Gets or sets an instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class associated with the cached user control output.</summary>
      <returns>The <see cref="T:System.Web.Caching.CacheDependency" /> associated with the control. The default is null.</returns>
      <exception cref="T:System.Web.HttpException">The user control is not associated with a <see cref="T:System.Web.UI.BasePartialCachingControl" /> and is not cacheable.- or -The <see cref="P:System.Web.UI.ControlCachePolicy.Dependency" /> property is set outside of the initialization and rendering stages of the control.</exception>
    </member>
    <member name="P:System.Web.UI.ControlCachePolicy.Duration">
      <summary>Gets or sets the amount of time that cached items are to remain in the output cache.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that represents the amount of time a user control is to remain in the output cache. The default is <see cref="F:System.TimeSpan.Zero" />.</returns>
      <exception cref="T:System.Web.HttpException">The user control is not associated with a <see cref="T:System.Web.UI.BasePartialCachingControl" /> and is not cacheable.- or -The <see cref="P:System.Web.UI.ControlCachePolicy.Duration" /> property is set outside of the initialization and rendering stages of the control.</exception>
    </member>
    <member name="P:System.Web.UI.ControlCachePolicy.ProviderName">
      <summary>Gets or sets the name of the output-cache provider that is associated with a control instance.</summary>
      <returns>The name of the provider.</returns>
      <exception cref="T:System.Configuration.Provider.ProviderException">The provider name was not found.</exception>
      <exception cref="T:System.Web.HttpException">An attempt was made to set the <see cref="P:System.Web.UI.ControlCachePolicy.ProviderName" /> property during or after the <see cref="E:System.Web.UI.Control.PreRender" /> event.</exception>
    </member>
    <member name="M:System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)">
      <summary>Instructs the <see cref="T:System.Web.UI.BasePartialCachingControl" /> control that wraps the user control to expire the cache entry at the specified date and time.</summary>
      <param name="expirationTime">A <see cref="T:System.DateTime" /> after which the cached entry expires.</param>
      <exception cref="T:System.Web.HttpException">The user control is not associated with a <see cref="T:System.Web.UI.BasePartialCachingControl" /> and is not cacheable.</exception>
    </member>
    <member name="M:System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)">
      <summary>Instructs the <see cref="T:System.Web.UI.BasePartialCachingControl" /> control that wraps the user control to set the user control's cache entry to use sliding or absolute expiration. </summary>
      <param name="useSlidingExpiration">true to use sliding cache expiration instead of absolute expiration; otherwise, false.</param>
      <exception cref="T:System.Web.HttpException">The user control is not associated with a <see cref="T:System.Web.UI.BasePartialCachingControl" /> and is not cacheable.</exception>
    </member>
    <member name="M:System.Web.UI.ControlCachePolicy.SetVaryByCustom(System.String)">
      <summary>Sets a list of custom strings that the output cache will use to vary the user control.</summary>
      <param name="varyByCustom">The list of custom strings.</param>
      <exception cref="T:System.Web.HttpException">The user control is not associated with a <see cref="T:System.Web.UI.BasePartialCachingControl" /> and is not cacheable.</exception>
    </member>
    <member name="P:System.Web.UI.ControlCachePolicy.SupportsCaching">
      <summary>Gets a value indicating whether the user control supports caching.</summary>
      <returns>true if the user control supports caching; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.ControlCachePolicy.VaryByControl">
      <summary>Gets or sets a list of control identifiers to vary the cached output by.</summary>
      <returns>A semicolon-separated list of strings used to vary a user control's output cache. These strings represent the <see cref="P:System.Web.UI.Control.ID" /> property values of ASP.NET server controls declared in the user control.</returns>
      <exception cref="T:System.Web.HttpException">The user control is not associated with a <see cref="T:System.Web.UI.BasePartialCachingControl" /> and is not cacheable.- or -The <see cref="P:System.Web.UI.ControlCachePolicy.VaryByControl" /> property is set outside of the initialization and rendering stages of the control.</exception>
    </member>
    <member name="P:System.Web.UI.ControlCachePolicy.VaryByParams">
      <summary>Gets or sets a list of GET or POST parameter names to vary the cached output by. </summary>
      <returns>A semicolon-separated list of strings used to vary the output cache. </returns>
      <exception cref="T:System.Web.HttpException">The user control is not associated with a <see cref="T:System.Web.UI.BasePartialCachingControl" /> and is not cacheable.</exception>
    </member>
    <member name="T:System.Web.UI.ControlCollection">
      <summary>Provides a collection container that enables ASP.NET server controls to maintain a list of their child controls.</summary>
    </member>
    <member name="M:System.Web.UI.ControlCollection.#ctor(System.Web.UI.Control)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ControlCollection" /> class for the specified parent server control.</summary>
      <param name="owner">The ASP.NET server control that the control collection is created for. </param>
      <exception cref="T:System.ArgumentNullException">Occurs if the <paramref name="owner" /> parameter is null. </exception>
    </member>
    <member name="M:System.Web.UI.ControlCollection.Add(System.Web.UI.Control)">
      <summary>Adds the specified <see cref="T:System.Web.UI.Control" /> object to the collection.</summary>
      <param name="child">The <see cref="T:System.Web.UI.Control" /> to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">Thrown if the <paramref name="child" /> parameter does not specify a control. </exception>
      <exception cref="T:System.Web.HttpException">Thrown if the <see cref="T:System.Web.UI.ControlCollection" /> is read-only. </exception>
    </member>
    <member name="M:System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)">
      <summary>Adds the specified <see cref="T:System.Web.UI.Control" /> object to the collection at the specified index location.</summary>
      <param name="index">The location in the array at which to add the child control. </param>
      <param name="child">The <see cref="T:System.Web.UI.Control" /> to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="child" /> parameter does not specify a control. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is less than zero or greater than the <see cref="P:System.Web.UI.ControlCollection.Count" /> property. </exception>
      <exception cref="T:System.Web.HttpException">The <see cref="T:System.Web.UI.ControlCollection" /> is read-only. </exception>
    </member>
    <member name="M:System.Web.UI.ControlCollection.Clear">
      <summary>Removes all controls from the current server control's <see cref="T:System.Web.UI.ControlCollection" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.ControlCollection.Contains(System.Web.UI.Control)">
      <summary>Determines whether the specified server control is in the parent server control's <see cref="T:System.Web.UI.ControlCollection" /> object.</summary>
      <returns>true if the specified server control exists in the collection; otherwise, false.</returns>
      <param name="c">The server control to search for in the collection. </param>
    </member>
    <member name="M:System.Web.UI.ControlCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the child controls stored in the <see cref="T:System.Web.UI.ControlCollection" /> object to an <see cref="T:System.Array" /> object, beginning at the specified index location in the <see cref="T:System.Array" />.</summary>
      <param name="array">The <see cref="T:System.Array" /> to copy the child controls to. </param>
      <param name="index">The zero-based relative index in <paramref name="array" /> where copying begins. </param>
      <exception cref="T:System.Web.HttpException">
        <paramref name="array" /> is not null and not one-dimensional. </exception>
    </member>
    <member name="P:System.Web.UI.ControlCollection.Count">
      <summary>Gets the number of server controls in the <see cref="T:System.Web.UI.ControlCollection" /> object for the specified ASP.NET server control.</summary>
      <returns>The number of server controls in the <see cref="T:System.Web.UI.ControlCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.ControlCollection.GetEnumerator">
      <summary>Retrieves an enumerator that can iterate through the <see cref="T:System.Web.UI.ControlCollection" /> object.</summary>
      <returns>The enumerator to iterate through the collection.</returns>
    </member>
    <member name="M:System.Web.UI.ControlCollection.IndexOf(System.Web.UI.Control)">
      <summary>Retrieves the index of a specified <see cref="T:System.Web.UI.Control" /> object in the collection.</summary>
      <returns>The index of the specified server control. If the server control is not currently a member of the collection, it returns -1.</returns>
      <param name="value">The <see cref="T:System.Web.UI.Control" /> for which the index is returned. </param>
    </member>
    <member name="P:System.Web.UI.ControlCollection.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.ControlCollection" /> object is read-only.</summary>
      <returns>true if the control is read-only; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.ControlCollection.IsSynchronized">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.ControlCollection" /> object is synchronized.</summary>
      <returns>This property is always false.</returns>
    </member>
    <member name="P:System.Web.UI.ControlCollection.Item(System.Int32)">
      <summary>Gets a reference to the server control at the specified index location in the <see cref="T:System.Web.UI.ControlCollection" /> object.</summary>
      <returns>The reference to the control.</returns>
      <param name="index">The location of the server control in the <see cref="T:System.Web.UI.ControlCollection" />. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is less than zero or greater than or equal to <see cref="P:System.Web.UI.ControlCollection.Count" />. </exception>
    </member>
    <member name="P:System.Web.UI.ControlCollection.Owner">
      <summary>Gets the ASP.NET server control to which the <see cref="T:System.Web.UI.ControlCollection" /> object belongs.</summary>
      <returns>The <see cref="T:System.Web.UI.Control" /> to which the <see cref="T:System.Web.UI.ControlCollection" /> belongs.</returns>
    </member>
    <member name="M:System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)">
      <summary>Removes the specified server control from the parent server control's <see cref="T:System.Web.UI.ControlCollection" /> object.</summary>
      <param name="value">The server control to be removed. </param>
    </member>
    <member name="M:System.Web.UI.ControlCollection.RemoveAt(System.Int32)">
      <summary>Removes a child control, at the specified index location, from the <see cref="T:System.Web.UI.ControlCollection" /> object.</summary>
      <param name="index">The ordinal index of the server control to be removed from the collection. </param>
      <exception cref="T:System.Web.HttpException">Thrown if the <see cref="T:System.Web.UI.ControlCollection" /> is read-only. </exception>
    </member>
    <member name="P:System.Web.UI.ControlCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection of controls.</summary>
      <returns>The <see cref="T:System.Object" /> used to synchronize the collection.</returns>
    </member>
    <member name="T:System.Web.UI.ControlSkin">
      <summary>Represents a control skin, which is a means to define stylistic properties that are applied to an ASP.NET Web server control. </summary>
    </member>
    <member name="M:System.Web.UI.ControlSkin.#ctor(System.Type,System.Web.UI.ControlSkinDelegate)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.ControlSkin" /> class using the passed <see cref="T:System.Web.UI.Control" /> type and delegate.</summary>
      <param name="controlType">The <see cref="T:System.Type" /> of <see cref="T:System.Web.UI.Control" /> to which the skin is applied, used to enforce type consistency among named skins. </param>
      <param name="themeDelegate">The <see cref="T:System.Web.UI.ControlSkinDelegate" /> that applies the style elements defined in a control skin file to the type identified by the <paramref name="controlType" /> parameter. </param>
    </member>
    <member name="M:System.Web.UI.ControlSkin.ApplySkin(System.Web.UI.Control)">
      <summary>Applies the skin to the <see cref="T:System.Web.UI.Control" /> control contained by the <see cref="T:System.Web.UI.ControlSkin" /> object.</summary>
      <param name="control">The control to which to apply the skin. </param>
    </member>
    <member name="P:System.Web.UI.ControlSkin.ControlType">
      <summary>Gets the <see cref="T:System.Type" /> of the control that the <see cref="T:System.Web.UI.ControlSkin" /> object is associated with.</summary>
      <returns>The <see cref="T:System.Type" /> of the <see cref="T:System.Web.UI.Control" /> used in this instance.</returns>
    </member>
    <member name="T:System.Web.UI.ControlSkinDelegate">
      <summary>Represents the method that applies the correct control skin to the specified control.</summary>
      <returns>The <see cref="T:System.Web.UI.Control" /> that was passed to the method, with a control skin applied.</returns>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to which to apply the theme skin.</param>
    </member>
    <member name="T:System.Web.UI.ControlValuePropertyAttribute">
      <summary>Specifies the default property of a control that a <see cref="T:System.Web.UI.WebControls.ControlParameter" /> object binds to at run time. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ControlValuePropertyAttribute" /> class using the specified property name.</summary>
      <param name="name">The default property for the control.</param>
    </member>
    <member name="M:System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ControlValuePropertyAttribute" /> class using the specified property name and default value.</summary>
      <param name="name">The default property for the control.</param>
      <param name="defaultValue">The default value for the default property.</param>
    </member>
    <member name="M:System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Type,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ControlValuePropertyAttribute" /> class using the specified property name and default value. The default value is also converted to the specified data type.</summary>
      <param name="name">The default property for the control.</param>
      <param name="type">The <see cref="T:System.Type" /> to which the default value is converted.</param>
      <param name="defaultValue">The default value for the default property.</param>
    </member>
    <member name="P:System.Web.UI.ControlValuePropertyAttribute.DefaultValue">
      <summary>Gets the default value for the default property of a control.</summary>
      <returns>The default value for the default property of a control.</returns>
    </member>
    <member name="M:System.Web.UI.ControlValuePropertyAttribute.Equals(System.Object)">
      <summary>Determines whether the current instance of the <see cref="T:System.Web.UI.ControlValuePropertyAttribute" /> object is equal to the specified object.</summary>
      <returns>true if the object contained in the <paramref name="obj" /> parameter is equal to the current instance of <see cref="T:System.Web.UI.ControlValuePropertyAttribute" />; otherwise, false.</returns>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
    </member>
    <member name="M:System.Web.UI.ControlValuePropertyAttribute.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="P:System.Web.UI.ControlValuePropertyAttribute.Name">
      <summary>Gets the default property for a control.</summary>
      <returns>The default property for a control.</returns>
    </member>
    <member name="T:System.Web.UI.CssClassPropertyAttribute">
      <summary>Adds Cascading Style Sheet (CSS) editing capabilities to a property at design time.</summary>
    </member>
    <member name="M:System.Web.UI.CssClassPropertyAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.CssClassPropertyAttribute" /> class.</summary>
    </member>
    <member name="T:System.Web.UI.CssStyleCollection">
      <summary>Contains the HTML cascading-style sheets (CSS) inline style attributes for a specified HTML server control. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.CssStyleCollection.Add(System.String,System.String)">
      <summary>Adds a style item to the <see cref="T:System.Web.UI.CssStyleCollection" /> of a control using the specified name/value pair.</summary>
      <param name="key">The name of the new style attribute to add to the collection. </param>
      <param name="value">The value of the style attribute to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.CssStyleCollection.Add(System.Web.UI.HtmlTextWriterStyle,System.String)">
      <summary>Adds a style item to the <see cref="T:System.Web.UI.CssStyleCollection" /> collection of a control using the specified <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value and corresponding value.</summary>
      <param name="key">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value to add to the collection.</param>
      <param name="value">The value of the style attribute to add to the collection.</param>
    </member>
    <member name="M:System.Web.UI.CssStyleCollection.Clear">
      <summary>Removes all style items from the <see cref="T:System.Web.UI.CssStyleCollection" /> object.</summary>
    </member>
    <member name="P:System.Web.UI.CssStyleCollection.Count">
      <summary>Gets the number of items in the <see cref="T:System.Web.UI.CssStyleCollection" /> object.</summary>
      <returns>The number of items in the <see cref="T:System.Web.UI.CssStyleCollection" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.CssStyleCollection.Item(System.String)">
      <summary>Gets or sets the specified CSS value for the HTML server control.</summary>
      <returns>The value of <paramref name="key" />.</returns>
      <param name="key">The index to the CSS attribute. </param>
    </member>
    <member name="P:System.Web.UI.CssStyleCollection.Item(System.Web.UI.HtmlTextWriterStyle)">
      <summary>Gets or sets the specified <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> value for the HTML server control.</summary>
      <returns>The value <paramref name="key" />; otherwise, null, if <paramref name="key" /> is not in the server control's collection.</returns>
      <param name="key">An <see cref="T:System.Web.UI.HtmlTextWriterStyle" />.</param>
    </member>
    <member name="P:System.Web.UI.CssStyleCollection.Keys">
      <summary>Gets a collection of keys to all the styles in the <see cref="T:System.Web.UI.CssStyleCollection" /> object for a specific HTML server control.</summary>
      <returns>A collection of keys contained in the <see cref="T:System.Web.UI.CssStyleCollection" /> for the specified HTML server control.</returns>
    </member>
    <member name="M:System.Web.UI.CssStyleCollection.Remove(System.String)">
      <summary>Removes a style item from the <see cref="T:System.Web.UI.CssStyleCollection" /> of a control using the specified style key.</summary>
      <param name="key">The string literal of the style item to remove. </param>
    </member>
    <member name="M:System.Web.UI.CssStyleCollection.Remove(System.Web.UI.HtmlTextWriterStyle)">
      <summary>Removes a style item from the <see cref="T:System.Web.UI.CssStyleCollection" /> collection of a control using the specified <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value.</summary>
      <param name="key">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value to remove.</param>
    </member>
    <member name="P:System.Web.UI.CssStyleCollection.Value">
      <summary>Gets or sets the value of the style attribute of the HTML server control.</summary>
      <returns>The style string literal.</returns>
    </member>
    <member name="T:System.Web.UI.DataBinder">
      <summary>Provides support for rapid application development (RAD) designers to generate and parse data-binding expression syntax. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.DataBinder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataBinder" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.DataBinder.EnableCaching">
      <summary>Gets or sets a value that indicates whether data caching is enabled at run time.</summary>
      <returns>true if caching is enabled for the <see cref="T:System.Web.UI.DataBinder" /> class; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.DataBinder.Eval(System.Object,System.String)">
      <summary>Evaluates data-binding expressions at run time.</summary>
      <returns>An <see cref="T:System.Object" /> instance that results from the evaluation of the data-binding expression.</returns>
      <param name="container">The object reference against which the expression is evaluated. This must be a valid object identifier in the page's specified language. </param>
      <param name="expression">The navigation path from the <paramref name="container" /> object to the public property value to be placed in the bound control property. This must be a string of property or field names separated by periods, such as Tables[0].DefaultView.[0].Price in C# or Tables(0).DefaultView.(0).Price in Visual Basic. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> is null or is an empty string after trimming.</exception>
    </member>
    <member name="M:System.Web.UI.DataBinder.Eval(System.Object,System.String,System.String)">
      <summary>Evaluates data-binding expressions at run time and formats the result as a string.</summary>
      <returns>A <see cref="T:System.String" /> object that results from evaluating the data-binding expression and converting it to a string type.</returns>
      <param name="container">The object reference against which the expression is evaluated. This must be a valid object identifier in the page's specified language. </param>
      <param name="expression">The navigation path from the <paramref name="container" /> object to the public property value to be placed in the bound control property. This must be a string of property or field names separated by periods, such as Tables[0].DefaultView.[0].Price in C# or Tables(0).DefaultView.(0).Price in Visual Basic. </param>
      <param name="format">A .NET Framework format string (like those used by <see cref="M:System.String.Format(System.String,System.Object)" />) that converts the <see cref="T:System.Object" /> instance returned by the data-binding expression to a <see cref="T:System.String" /> object. </param>
    </member>
    <member name="M:System.Web.UI.DataBinder.GetDataItem(System.Object)">
      <summary>Retrieves an object's declared data item.</summary>
      <returns>An object that represents the container's declared data item. Returns null if no data item is found or if the container evaluates to null.</returns>
      <param name="container">The object reference against which the expression is evaluated. This must be a valid object identifier in the page's specified language.</param>
    </member>
    <member name="M:System.Web.UI.DataBinder.GetDataItem(System.Object,System.Boolean@)">
      <summary>Retrieves an object's declared data item, indicating success or failure.</summary>
      <returns>An object that represents the container's declared data item. Returns null if no data item is found or if the container evaluates to null.</returns>
      <param name="container">The object reference against which the expression is evaluated. This must be a valid object identifier in the page's specified language.</param>
      <param name="foundDataItem">A Boolean value that indicates whether the data item was successfully resolved and returned. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String)">
      <summary>Retrieves the value of a property of the specified container and navigation path.</summary>
      <returns>An object that results from the evaluation of the data-binding expression.</returns>
      <param name="container">The object reference against which <paramref name="expr" /> is evaluated. This must be a valid object identifier in the specified language for the page.</param>
      <param name="expr">The navigation path from the <paramref name="container" /> object to the public property value to place in the bound control property. This must be a string of property or field names separated by periods, such as Tables[0].DefaultView.[0].Price in C# or Tables(0).DefaultView.(0).Price in Visual Basic.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="container" /> is null.- or -<paramref name="expr" /> is null or an empty string ("").</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expr" /> is not a valid indexed expression.- or -<paramref name="expr" /> does not allow indexed access.</exception>
    </member>
    <member name="M:System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String,System.String)">
      <summary>Retrieves the value of the specified property for the specified container, and then formats the results.</summary>
      <returns>The value of the specified property in the format specified by <paramref name="format" />.</returns>
      <param name="container">The object reference against which the expression is evaluated. This must be a valid object identifier in the specified language for the page.</param>
      <param name="propName">The name of the property that contains the value to retrieve.</param>
      <param name="format">A string that specifies the format in which to display the results.</param>
    </member>
    <member name="M:System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String)">
      <summary>Retrieves the value of the specified property of the specified object.</summary>
      <returns>The value of the specified property.</returns>
      <param name="container">The object that contains the property. </param>
      <param name="propName">The name of the property that contains the value to retrieve. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="container" /> is null.-or- <paramref name="propName" /> is null or an empty string (""). </exception>
      <exception cref="T:System.Web.HttpException">The object in <paramref name="container" /> does not have the property specified by <paramref name="propName" />. </exception>
    </member>
    <member name="M:System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String,System.String)">
      <summary>Retrieves the value of the specified property of the specified object, and then formats the results.</summary>
      <returns>The value of the specified property in the format specified by <paramref name="format" />.</returns>
      <param name="container">The object that contains the property. </param>
      <param name="propName">The name of the property that contains the value to retrieve. </param>
      <param name="format">A string that specifies the format in which to display the results. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="container" /> is null.- or - <paramref name="propName" /> is null or an empty string (""). </exception>
      <exception cref="T:System.Web.HttpException">The object in <paramref name="container" /> does not have the property specified by <paramref name="propName" />. </exception>
    </member>
    <member name="T:System.Web.UI.DataBinding">
      <summary>Contains information about a single data-binding expression in an ASP.NET server control, which allows rapid-application development (RAD) designers, such as Microsoft Visual Studio, to create data-binding expressions at design time. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.DataBinding.#ctor(System.String,System.Type,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataBinding" /> class.</summary>
      <param name="propertyName">The property to bind data to. </param>
      <param name="propertyType">The .NET Framework type of the property to bind data to. </param>
      <param name="expression">The data-binding expression to be evaluated. </param>
    </member>
    <member name="M:System.Web.UI.DataBinding.Equals(System.Object)">
      <summary>Determines whether the specified object is the same instance of the <see cref="T:System.Web.UI.DataBinding" /> class as the current object.</summary>
      <returns>true if the data-binding property names match; otherwise, false.</returns>
      <param name="obj">The object to compare against the current <see cref="T:System.Web.UI.DataBinding" />. </param>
    </member>
    <member name="P:System.Web.UI.DataBinding.Expression">
      <summary>Gets or sets the data-binding expression to be evaluated.</summary>
      <returns>The data-binding expression to be evaluated.</returns>
    </member>
    <member name="M:System.Web.UI.DataBinding.GetHashCode">
      <summary>Retrieves the hash code for an instance of the <see cref="T:System.Web.UI.DataBinding" /> object.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="P:System.Web.UI.DataBinding.PropertyName">
      <summary>Gets the name of the ASP.NET server control property to bind data to.</summary>
      <returns>The property to bind data to.</returns>
    </member>
    <member name="P:System.Web.UI.DataBinding.PropertyType">
      <summary>Gets the .NET Framework type of the data-bound ASP.NET server control property.</summary>
      <returns>The .NET Framework type of the data-bound property.</returns>
    </member>
    <member name="T:System.Web.UI.DataBindingCollection">
      <summary>Provides a collection of <see cref="T:System.Web.UI.DataBinding" /> objects for an ASP.NET server control. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.DataBindingCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataBindingCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.DataBindingCollection.Add(System.Web.UI.DataBinding)">
      <summary>Adds the specified <see cref="T:System.Web.UI.DataBinding" /> object to the <see cref="T:System.Web.UI.DataBindingCollection" /> collection.</summary>
      <param name="binding">The data-binding object to add to the collection. </param>
    </member>
    <member name="E:System.Web.UI.DataBindingCollection.Changed">
      <summary>Occurs when the collection of <see cref="T:System.Web.UI.DataBinding" /> objects is changed. </summary>
    </member>
    <member name="M:System.Web.UI.DataBindingCollection.Clear">
      <summary>Removes all <see cref="T:System.Web.UI.DataBinding" /> objects from the <see cref="T:System.Web.UI.DataBindingCollection" /> collection.</summary>
    </member>
    <member name="M:System.Web.UI.DataBindingCollection.Contains(System.String)">
      <summary>Determines whether the data-binding collection contains a specific <see cref="T:System.Web.UI.DataBinding" /> object.</summary>
      <returns>true if the <see cref="T:System.Web.UI.DataBindingCollection" /> contains an element with the specified name; otherwise, false.</returns>
      <param name="propertyName">The name of the object to locate in the collection.</param>
    </member>
    <member name="M:System.Web.UI.DataBindingCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the <see cref="T:System.Web.UI.DataBindingCollection" /> values to a one-dimensional <see cref="T:System.Array" />, beginning at the <see cref="T:System.Array" /> object's specified index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from <see cref="T:System.Web.UI.DataBindingCollection" />. </param>
      <param name="index">The index in the array, specified by the <paramref name="array" /> parameter, where copying begins. </param>
    </member>
    <member name="P:System.Web.UI.DataBindingCollection.Count">
      <summary>Gets the number of <see cref="T:System.Web.UI.DataBinding" /> objects in the <see cref="T:System.Web.UI.DataBindingCollection" /> object.</summary>
      <returns>The number of <see cref="T:System.Web.UI.DataBinding" /> objects in the <see cref="T:System.Web.UI.DataBindingCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.DataBindingCollection.GetEnumerator">
      <summary>Returns an enumerator to iterate through the <see cref="T:System.Web.UI.DataBindingCollection" /> object.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that contains the collection's members.</returns>
    </member>
    <member name="P:System.Web.UI.DataBindingCollection.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataBindingCollection" /> collection is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.DataBindingCollection.IsSynchronized">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataBindingCollection" /> collection is synchronized (thread safe).</summary>
      <returns>Always false.</returns>
    </member>
    <member name="P:System.Web.UI.DataBindingCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.Web.UI.DataBinding" /> object with the specified property name.</summary>
      <returns>The <see cref="T:System.Web.UI.DataBinding" /> with the specified property name. If no object with the specified name exists, this value is null.</returns>
      <param name="propertyName">The name of the property to be found. </param>
    </member>
    <member name="M:System.Web.UI.DataBindingCollection.Remove(System.String)">
      <summary>Removes the <see cref="T:System.Web.UI.DataBinding" /> object associated with the specified property name from the <see cref="T:System.Web.UI.DataBindingCollection" /> collection and adds it to the <see cref="P:System.Web.UI.DataBindingCollection.RemovedBindings" /> collection.</summary>
      <param name="propertyName">The property name associated with the <see cref="T:System.Web.UI.DataBinding" /> to be removed. </param>
    </member>
    <member name="M:System.Web.UI.DataBindingCollection.Remove(System.String,System.Boolean)">
      <summary>Removes the <see cref="T:System.Web.UI.DataBinding" /> object, associated with the specified property name, from the <see cref="T:System.Web.UI.DataBindingCollection" /> collection and controls whether to add the binding to the <see cref="P:System.Web.UI.DataBindingCollection.RemovedBindings" /> list.</summary>
      <param name="propertyName">The property associated with the <see cref="T:System.Web.UI.DataBinding" /> to be removed. </param>
      <param name="addToRemovedList">A Boolean value that indicates whether to add the property name to the <see cref="P:System.Web.UI.DataBindingCollection.RemovedBindings" /> list. true indicates that the <paramref name="propertyName" /> parameter will be added to the <see cref="P:System.Web.UI.DataBindingCollection.RemovedBindings" /> property, and false indicates that <paramref name="propertyName" /> will not be added to the <see cref="P:System.Web.UI.DataBindingCollection.RemovedBindings" /> property. </param>
    </member>
    <member name="M:System.Web.UI.DataBindingCollection.Remove(System.Web.UI.DataBinding)">
      <summary>Removes the specified <see cref="T:System.Web.UI.DataBinding" /> object from the <see cref="T:System.Web.UI.DataBindingCollection" /> collection and adds it to the <see cref="P:System.Web.UI.DataBindingCollection.RemovedBindings" /> collection.</summary>
      <param name="binding">The <see cref="T:System.Web.UI.DataBinding" /> to be removed from the <see cref="T:System.Web.UI.DataBindingCollection" />. </param>
    </member>
    <member name="P:System.Web.UI.DataBindingCollection.RemovedBindings">
      <summary>Gets an array of the names of the <see cref="T:System.Web.UI.DataBinding" /> objects removed from the collection.</summary>
      <returns>The array of names of the <see cref="T:System.Web.UI.DataBinding" /> objects removed from the collection. </returns>
    </member>
    <member name="P:System.Web.UI.DataBindingCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Web.UI.DataBindingCollection" /> collection.</summary>
      <returns>The <see cref="T:System.Object" /> to be used to synchronize access to the collection.</returns>
    </member>
    <member name="T:System.Web.UI.DataBindingHandlerAttribute">
      <summary>Specifies a design-time class that performs data binding of controls within a designer. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.DataBindingHandlerAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataBindingHandlerAttribute" /> class using no parameters. This is the default constructor.</summary>
    </member>
    <member name="M:System.Web.UI.DataBindingHandlerAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataBindingHandlerAttribute" /> class with the specified type name.</summary>
      <param name="typeName">The fully qualified name of the data-binding handler <see cref="T:System.Type" />. </param>
    </member>
    <member name="M:System.Web.UI.DataBindingHandlerAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataBindingHandlerAttribute" /> class of the specified <see cref="T:System.Type" />.</summary>
      <param name="type">The <see cref="T:System.Type" /> for the data-binding handler. </param>
    </member>
    <member name="F:System.Web.UI.DataBindingHandlerAttribute.Default">
      <summary>Defines the default attribute for the <see cref="T:System.Web.UI.DataBindingHandlerAttribute" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.DataBindingHandlerAttribute.Equals(System.Object)">
      <summary>Determines whether two object instances are equal.</summary>
      <returns>true if the <paramref name="obj" /> parameter equals the <see cref="T:System.Web.UI.DataBindingHandlerAttribute" /> object; otherwise, false.</returns>
      <param name="obj">The object to compare to the current <see cref="T:System.Web.UI.DataBindingHandlerAttribute" />.</param>
    </member>
    <member name="M:System.Web.UI.DataBindingHandlerAttribute.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="P:System.Web.UI.DataBindingHandlerAttribute.HandlerTypeName">
      <summary>Gets the type name of the data-binding handler. </summary>
      <returns>The type name of the handler. If the type name is null, this property returns an empty string ("").</returns>
    </member>
    <member name="T:System.Web.UI.DataBoundLiteralControl">
      <summary>Retains data-binding expressions and static literal text. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.DataBoundLiteralControl.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataBoundLiteralControl" /> class. </summary>
      <param name="staticLiteralsCount">Defines the size of the array to create for storing static literal strings.</param>
      <param name="dataBoundLiteralCount">Defines the size of the array to create for storing data-bound literal strings.</param>
    </member>
    <member name="M:System.Web.UI.DataBoundLiteralControl.SetDataBoundString(System.Int32,System.String)">
      <summary>Assigns a string value to an array containing data-bound values.</summary>
      <param name="index">The position in an array at which to retain the <paramref name="s" /> parameter value. </param>
      <param name="s">A <see cref="T:System.String" /> containing the value for the data-bound expression.</param>
    </member>
    <member name="M:System.Web.UI.DataBoundLiteralControl.SetStaticString(System.Int32,System.String)">
      <summary>Assigns a string value to an array containing static values.</summary>
      <param name="index">The position in an array at which to retain the <paramref name="s" /> parameter value.</param>
      <param name="s">A <see cref="T:System.String" /> containing the value for the data-bound expression.</param>
    </member>
    <member name="P:System.Web.UI.DataBoundLiteralControl.System#Web#UI#ITextControl#Text">
      <summary>Gets or sets the text content of the <see cref="T:System.Web.UI.DataBoundLiteralControl" /> object.</summary>
      <returns>A <see cref="T:System.String" /> that represents the text content of the <see cref="T:System.Web.UI.DataBoundLiteralControl" />.</returns>
      <exception cref="T:System.NotSupportedException">An attempt to set the value is made.</exception>
    </member>
    <member name="P:System.Web.UI.DataBoundLiteralControl.Text">
      <summary>Gets the text content of the <see cref="T:System.Web.UI.DataBoundLiteralControl" /> object. </summary>
      <returns>A <see cref="T:System.String" /> that represents the text content of the <see cref="T:System.Web.UI.DataBoundLiteralControl" />.</returns>
    </member>
    <member name="T:System.Web.UI.DataKeyPropertyAttribute">
      <summary>Specifies the default property of a control that the <see cref="T:System.Web.UI.WebControls.ControlParameter" /> property binds to at run time.</summary>
    </member>
    <member name="M:System.Web.UI.DataKeyPropertyAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataKeyPropertyAttribute" /> class by using the name of the data-key property attribute.</summary>
      <param name="name">The name of the data-key property attribute.</param>
    </member>
    <member name="M:System.Web.UI.DataKeyPropertyAttribute.Equals(System.Object)">
      <summary>Compares the name of the <see cref="T:System.Web.UI.DataKeyPropertyAttribute" /> object to a specified object.</summary>
      <returns>true if the name is the same as the object; otherwise, false.</returns>
      <param name="obj">The object to compare.</param>
    </member>
    <member name="M:System.Web.UI.DataKeyPropertyAttribute.GetHashCode">
      <summary>Gets the hash code for an instance of the <see cref="T:System.Web.UI.DataKeyPropertyAttribute" /> class.</summary>
      <returns>The hash code for an instance of the <see cref="T:System.Web.UI.DataKeyPropertyAttribute" /> class.</returns>
    </member>
    <member name="P:System.Web.UI.DataKeyPropertyAttribute.Name">
      <summary>Gets the name of the data-key property attribute.</summary>
      <returns>The name of the data-key property attribute.</returns>
    </member>
    <member name="T:System.Web.UI.DataSourceCacheDurationConverter">
      <summary>Provides a type converter to convert 32-bit signed integer objects to and from data source control cache duration representations.</summary>
    </member>
    <member name="M:System.Web.UI.DataSourceCacheDurationConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataSourceCacheDurationConverter" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.DataSourceCacheDurationConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether the <see cref="T:System.Web.UI.DataSourceCacheDurationConverter" /> can convert an object in the given source type to an <see cref="T:System.Int32" /> object.</summary>
      <returns>true if this converter can perform the operation; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents a type that the converter converts.</param>
    </member>
    <member name="M:System.Web.UI.DataSourceCacheDurationConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value indicating whether the <see cref="T:System.Web.UI.DataSourceCacheDurationConverter" /> instance can convert an object to the given destination type.</summary>
      <returns>true if this converter can perform the operation; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="destinationType">A <see cref="T:System.Type" />  that represents the type to which you want to convert.</param>
    </member>
    <member name="M:System.Web.UI.DataSourceCacheDurationConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to an <see cref="T:System.Int32" /> object.</summary>
      <returns>An object that represents the converted value. If null is passed in the value parameter, null is returned.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture in which to represent the number.</param>
      <param name="value">The object to convert.</param>
    </member>
    <member name="M:System.Web.UI.DataSourceCacheDurationConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the specified object to another type.</summary>
      <returns>An object that represents the converted value.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture in which to represent the number.</param>
      <param name="value">The object to convert.</param>
      <param name="destinationType">The type to convert the object to.</param>
    </member>
    <member name="M:System.Web.UI.DataSourceCacheDurationConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a collection of standard values for the data type the <see cref="T:System.Web.UI.DataSourceCacheDurationConverter" /> instance is designed for.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that contains 0 for cache duration, which represents "Infinite".</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  that provides a format context.</param>
    </member>
    <member name="M:System.Web.UI.DataSourceCacheDurationConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Specifies whether the collection of standard values returned from the <see cref="Overload:System.Web.UI.DataSourceCacheDurationConverter.GetStandardValues" /> method is an exclusive list, using the specified context.</summary>
      <returns>false in all cases.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
    </member>
    <member name="M:System.Web.UI.DataSourceCacheDurationConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Specifies whether the <see cref="T:System.Web.UI.DataSourceCacheDurationConverter" /> object supports a standard set of values that can be picked from a list, using the specified context.</summary>
      <returns>true in all cases.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  that provides a format context.</param>
    </member>
    <member name="T:System.Web.UI.DataSourceCacheExpiry">
      <summary>Describes the way data cached using ASP.NET caching mechanisms expires when a time-out is set. </summary>
    </member>
    <member name="F:System.Web.UI.DataSourceCacheExpiry.Absolute">
      <summary>Cached data expires when the amount of time specified by the CacheDuration property has passed since the data was first cached.</summary>
    </member>
    <member name="F:System.Web.UI.DataSourceCacheExpiry.Sliding">
      <summary>Cached data expires only when the cache entry has not been used for the amount of time specified by the CacheDuration property.</summary>
    </member>
    <member name="T:System.Web.UI.DataSourceCapabilities">
      <summary>Provides a way to request processing beyond record retrieval for a data retrieval operation of a data source control.</summary>
    </member>
    <member name="F:System.Web.UI.DataSourceCapabilities.None">
      <summary>Represents no paging, sorting, or total row count retrieval capabilities.</summary>
    </member>
    <member name="F:System.Web.UI.DataSourceCapabilities.Sort">
      <summary>Represents the capability to sort through the rows returned by an <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> operation.</summary>
    </member>
    <member name="F:System.Web.UI.DataSourceCapabilities.Page">
      <summary>Represents the capability to page through the rows returned by an <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> operation.</summary>
    </member>
    <member name="F:System.Web.UI.DataSourceCapabilities.RetrieveTotalRowCount">
      <summary>Represents the capability to retrieve a total row count of data, which corresponds to using the <see cref="F:System.Web.UI.DataSourceOperation.SelectCount" /> value. </summary>
    </member>
    <member name="T:System.Web.UI.DataSourceControl">
      <summary>Serves as the base class for controls that represent data sources to data-bound controls.</summary>
    </member>
    <member name="M:System.Web.UI.DataSourceControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataSourceControl" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.DataSourceControl.ApplyStyleSheetSkin(System.Web.UI.Page)">
      <summary>Applies the style properties that are defined in the page style sheet to the control. </summary>
      <param name="page">The <see cref="T:System.Web.UI.Page" /> containing the control.</param>
    </member>
    <member name="P:System.Web.UI.DataSourceControl.ClientID">
      <summary>Gets the server control identifier generated by ASP.NET.</summary>
      <returns>The server control identifier generated by ASP.NET.</returns>
    </member>
    <member name="P:System.Web.UI.DataSourceControl.ClientIDMode">
      <summary>This property is not used for data source controls.</summary>
      <returns>This property is not used for data source controls.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set this property.</exception>
    </member>
    <member name="P:System.Web.UI.DataSourceControl.Controls">
      <summary>Gets a <see cref="T:System.Web.UI.ControlCollection" /> object that represents the child controls for a specified server control in the UI hierarchy.</summary>
      <returns>The collection of child controls for the specified server control.</returns>
    </member>
    <member name="M:System.Web.UI.DataSourceControl.CreateControlCollection">
      <summary>Creates a collection to store child controls.</summary>
      <returns>Returns a <see cref="T:System.Web.UI.EmptyControlCollection" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataSourceControl.EnableTheming">
      <summary>Gets a value indicating whether this control supports themes.</summary>
      <returns>false in all cases.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the value of the <see cref="P:System.Web.UI.DataSourceControl.EnableTheming" /> property. </exception>
    </member>
    <member name="M:System.Web.UI.DataSourceControl.FindControl(System.String)">
      <summary>Searches the current naming container for a server control with the specified <paramref name="id" /> parameter. </summary>
      <returns>The specified control, or null if the specified control does not exist.</returns>
      <param name="id">The identifier for the control to be found.</param>
    </member>
    <member name="M:System.Web.UI.DataSourceControl.Focus">
      <summary>Sets input focus to the control.</summary>
      <exception cref="T:System.NotSupportedException">An attempt was made to call the <see cref="M:System.Web.UI.DataSourceControl.Focus" /> method.</exception>
    </member>
    <member name="M:System.Web.UI.DataSourceControl.GetView(System.String)">
      <summary>Gets the named data source view associated with the data source control.</summary>
      <returns>Returns the named <see cref="T:System.Web.UI.DataSourceView" /> associated with the <see cref="T:System.Web.UI.DataSourceControl" />.</returns>
      <param name="viewName">The name of the <see cref="T:System.Web.UI.DataSourceView" /> to retrieve. In data source controls that support only one view, such as <see cref="T:System.Web.UI.WebControls.SqlDataSource" />, this parameter is ignored. </param>
    </member>
    <member name="M:System.Web.UI.DataSourceControl.GetViewNames">
      <summary>Gets a collection of names, representing the list of <see cref="T:System.Web.UI.DataSourceView" /> objects associated with the <see cref="T:System.Web.UI.DataSourceControl" /> control.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> that contains the names of the <see cref="T:System.Web.UI.DataSourceView" /> objects associated with the <see cref="T:System.Web.UI.DataSourceControl" />.</returns>
    </member>
    <member name="M:System.Web.UI.DataSourceControl.HasControls">
      <summary>Determines if the server control contains any child controls. </summary>
      <returns>true if the control contains other controls; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.IDataSource.DataSourceChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains event data.</param>
    </member>
    <member name="M:System.Web.UI.DataSourceControl.RenderControl(System.Web.UI.HtmlTextWriter)">
      <summary>Outputs server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter" /> object and stores tracing information about the control if tracing is enabled. </summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> object that receives the control content. </param>
    </member>
    <member name="P:System.Web.UI.DataSourceControl.SkinID">
      <summary>Gets the skin to apply to the <see cref="T:System.Web.UI.DataSourceControl" /> control.</summary>
      <returns>
        <see cref="F:System.String.Empty" />.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the value of the <see cref="P:System.Web.UI.DataSourceControl.SkinID" /> property. </exception>
    </member>
    <member name="P:System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>Indicates whether the data source control is associated with one or more lists of data.</summary>
      <returns>true if the <see cref="T:System.Web.UI.DataSourceControl" /> is associated with one or more <see cref="T:System.Web.UI.DataSourceView" /> objects; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#GetList">
      <summary>Gets a list of data source controls that can be used as sources of lists of data.</summary>
      <returns>An <see cref="T:System.Collections.IList" /> of data source controls that can be used as sources of lists of data.</returns>
    </member>
    <member name="E:System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#DataSourceChanged">
      <summary>Occurs when a data source control has changed in a way that affects data-bound controls. </summary>
    </member>
    <member name="M:System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetView(System.String)">
      <summary>Gets the named <see cref="T:System.Web.UI.DataSourceView" /> object associated with the <see cref="T:System.Web.UI.DataSourceControl" /> control. Some data source controls support only one view, while others support more than one.</summary>
      <returns>Returns the named <see cref="T:System.Web.UI.DataSourceView" /> associated with the <see cref="T:System.Web.UI.DataSourceControl" />.</returns>
      <param name="viewName">The name of the <see cref="T:System.Web.UI.DataSourceView" /> to retrieve. In data source controls that support only one view, such as <see cref="T:System.Web.UI.WebControls.SqlDataSource" />, this parameter is ignored.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="viewName" /> is null. </exception>
    </member>
    <member name="M:System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetViewNames">
      <summary>Gets a collection of names, representing the list of <see cref="T:System.Web.UI.DataSourceView" /> objects associated with the <see cref="T:System.Web.UI.DataSourceControl" /> control.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> that contains the names of the <see cref="T:System.Web.UI.DataSourceView" /> objects associated with the <see cref="T:System.Web.UI.DataSourceControl" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataSourceControl.Visible">
      <summary>Gets or sets a value indicating whether the control is visually displayed.</summary>
      <returns>Always false.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the value of the <see cref="P:System.Web.UI.DataSourceControl.Visible" /> property. </exception>
    </member>
    <member name="T:System.Web.UI.DataSourceControlBuilder">
      <summary>Supports the page parser in building controls that are connected to a data provider. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.DataSourceControlBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataSourceControlBuilder" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.DataSourceControlBuilder.AllowWhitespaceLiterals">
      <summary>Determines whether white-space literals are permitted in the content between a control's opening and closing tags.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="T:System.Web.UI.DataSourceOperation">
      <summary>Specifies a data operation performed by a data source control.</summary>
    </member>
    <member name="F:System.Web.UI.DataSourceOperation.Delete">
      <summary>The operation deletes records from a data source.</summary>
    </member>
    <member name="F:System.Web.UI.DataSourceOperation.Insert">
      <summary>The operation inserts one or more records into a data source.</summary>
    </member>
    <member name="F:System.Web.UI.DataSourceOperation.Select">
      <summary>The operation retrieves records from a data source.</summary>
    </member>
    <member name="F:System.Web.UI.DataSourceOperation.Update">
      <summary>The operation updates records in a data source.</summary>
    </member>
    <member name="F:System.Web.UI.DataSourceOperation.SelectCount">
      <summary>The operation retrieves the total number of records for a query from the data source.</summary>
    </member>
    <member name="T:System.Web.UI.DataSourceSelectArguments">
      <summary>Provides a mechanism that data-bound controls use to request data-related operations from data source controls when data is retrieved. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.DataSourceSelectArguments.#ctor">
      <summary>Initializes a new default instance of the <see cref="T:System.Web.UI.DataSourceSelectArguments" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.DataSourceSelectArguments.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataSourceSelectArguments" /> class with the specified starting position and number of rows to return for paging scenarios.</summary>
      <param name="startRowIndex">The index of the data row that marks the beginning of data returned by a data retrieval operation.</param>
      <param name="maximumRows">The maximum number of rows that a data retrieval operation returns.</param>
    </member>
    <member name="M:System.Web.UI.DataSourceSelectArguments.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataSourceSelectArguments" /> class with the specified sort expression.</summary>
      <param name="sortExpression">A sort expression that data source controls use to sort the result of a data retrieval operation before the result is returned to a caller.</param>
    </member>
    <member name="M:System.Web.UI.DataSourceSelectArguments.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataSourceSelectArguments" /> class with the specified sort expression, starting position, and number of rows to return for paging scenarios.</summary>
      <param name="sortExpression">A sort expression that data source controls use to sort the result of a data retrieval operation before the result is returned to a caller.</param>
      <param name="startRowIndex">The index of the data row that marks the beginning of data returned by a data retrieval operation.</param>
      <param name="maximumRows">The maximum number of rows that a data retrieval operation returns.</param>
    </member>
    <member name="M:System.Web.UI.DataSourceSelectArguments.AddSupportedCapabilities(System.Web.UI.DataSourceCapabilities)">
      <summary>Adds one capability to the <see cref="T:System.Web.UI.DataSourceSelectArguments" /> instance, which is used to compare supported capabilities and requested capabilities. </summary>
      <param name="capabilities">One of the <see cref="T:System.Web.UI.DataSourceCapabilities" /> values. </param>
    </member>
    <member name="P:System.Web.UI.DataSourceSelectArguments.Empty">
      <summary>Gets a <see cref="T:System.Web.UI.DataSourceSelectArguments" /> object with the sort expression set to <see cref="F:System.String.Empty" />. </summary>
      <returns>A <see cref="T:System.Web.UI.DataSourceSelectArguments" />.</returns>
    </member>
    <member name="M:System.Web.UI.DataSourceSelectArguments.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Web.UI.DataSourceSelectArguments" /> instance is equal to the current instance.</summary>
      <returns>true if the specified <see cref="T:System.Web.UI.DataSourceSelectArguments" /> is equal to the current instance; otherwise, false.</returns>
      <param name="obj">The <see cref="T:System.Web.UI.DataSourceSelectArguments" /> to compare with the current one.</param>
    </member>
    <member name="M:System.Web.UI.DataSourceSelectArguments.GetHashCode">
      <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Web.UI.DataSourceSelectArguments.MaximumRows">
      <summary>Gets or sets a value that represents the maximum number of data rows that a data source control returns for a data retrieval operation.</summary>
      <returns>The maximum number of data rows that a data source returns for a data retrieval operation. The default value is 0, which indicates that all possible data rows are returned.</returns>
    </member>
    <member name="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)">
      <summary>Compares the capabilities requested for an <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> operation against those that the specified data source view supports.</summary>
      <param name="view">The data source view that performs the data retrieval operation.</param>
      <exception cref="T:System.NotSupportedException">The data source view does not support the data source capability specified.</exception>
    </member>
    <member name="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount">
      <summary>Gets or sets a value indicating whether a data source control should retrieve a count of all the data rows during a data retrieval operation.</summary>
      <returns>true if the data source control should retrieve a total data row count; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.DataSourceSelectArguments.SortExpression">
      <summary>Gets or sets an expression that the data source view uses to sort the data retrieved by the <see cref="M:System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)" /> method.</summary>
      <returns>A string that the data source view uses to sort data retrieved by the <see cref="M:System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)" /> method. <see cref="F:System.String.Empty" /> is returned if sort expression has not been set.</returns>
    </member>
    <member name="P:System.Web.UI.DataSourceSelectArguments.StartRowIndex">
      <summary>Gets or sets a value that represents the starting position the data source control should use when retrieving data rows during a data retrieval operation.</summary>
      <returns>The starting row position from which a data source control retrieves data. The default value is 0, which indicates that the starting position is the beginning of the result set.</returns>
    </member>
    <member name="P:System.Web.UI.DataSourceSelectArguments.TotalRowCount">
      <summary>Gets or sets the number of rows retrieved during a data retrieval operation.</summary>
      <returns>The total number of data rows retrieved by the data retrieval operation. </returns>
    </member>
    <member name="T:System.Web.UI.DataSourceView">
      <summary>Serves as the base class for all data source view classes, which define the capabilities of data source controls.</summary>
    </member>
    <member name="M:System.Web.UI.DataSourceView.#ctor(System.Web.UI.IDataSource,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataSourceView" /> class.</summary>
      <param name="owner">The data source control that the <see cref="T:System.Web.UI.DataSourceView" /> is associated with.</param>
      <param name="viewName">The name of the <see cref="T:System.Web.UI.DataSourceView" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> is null.- or -<paramref name="viewName" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.DataSourceView.CanDelete">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> operation.</summary>
      <returns>true if the operation is supported; otherwise, false. The base class implementation returns false.</returns>
    </member>
    <member name="M:System.Web.UI.DataSourceView.CanExecute(System.String)">
      <summary>Determines whether the specified command can be executed.</summary>
      <returns>true if the command can be executed; otherwise, false.</returns>
      <param name="commandName">The name of the command.</param>
    </member>
    <member name="P:System.Web.UI.DataSourceView.CanInsert">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> operation.</summary>
      <returns>true if the operation is supported; otherwise, false. The base class implementation returns false.</returns>
    </member>
    <member name="P:System.Web.UI.DataSourceView.CanPage">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports paging through the data retrieved by the <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> method.</summary>
      <returns>true if the operation is supported; otherwise, false. The base class implementation returns false.</returns>
    </member>
    <member name="P:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports retrieving the total number of data rows, instead of the data.</summary>
      <returns>true if the operation is supported; otherwise, false. The base class implementation returns false.</returns>
    </member>
    <member name="P:System.Web.UI.DataSourceView.CanSort">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports a sorted view on the underlying data source.</summary>
      <returns>true if the operation is supported; otherwise, false. The default implementation returns false.</returns>
    </member>
    <member name="P:System.Web.UI.DataSourceView.CanUpdate">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> operation.</summary>
      <returns>true if the operation is supported; otherwise, false. The default implementation returns false.</returns>
    </member>
    <member name="E:System.Web.UI.DataSourceView.DataSourceViewChanged">
      <summary>Occurs when the data source view has changed.</summary>
    </member>
    <member name="M:System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)">
      <summary>Performs an asynchronous delete operation on the list of data that the <see cref="T:System.Web.UI.DataSourceView" /> object represents.</summary>
      <param name="keys">An <see cref="T:System.Collections.IDictionary" /> of object or row keys to be deleted by the <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> operation.</param>
      <param name="oldValues">An <see cref="T:System.Collections.IDictionary" /> of name/value pairs that represent data elements and their original values.</param>
      <param name="callback">A <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> delegate that is used to notify a data-bound control when the asynchronous operation is complete.</param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> supplied is null. </exception>
    </member>
    <member name="P:System.Web.UI.DataSourceView.Events">
      <summary>Gets a list of event-handler delegates for the data source view.</summary>
      <returns>The list of event-handler delegates.</returns>
    </member>
    <member name="M:System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>Executes the specified command.</summary>
      <returns>The number of items that were affected by the operation.</returns>
      <param name="commandName">The name of the command.</param>
      <param name="keys">A dictionary of object keys or row keys to act on.</param>
      <param name="values">A dictionary of name/value pairs that represent data elements and their values.</param>
    </member>
    <member name="M:System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)">
      <summary>Executes the specified command.</summary>
      <param name="commandName">The name of the command.</param>
      <param name="keys">A dictionary of object keys or row keys to act on.</param>
      <param name="values">A dictionary of name/value pairs that represent data elements and their values.</param>
      <param name="callback">A <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> object.</param>
    </member>
    <member name="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>Performs a delete operation on the list of data that the <see cref="T:System.Web.UI.DataSourceView" /> object represents.</summary>
      <returns>The number of items that were deleted from the underlying data storage.</returns>
      <param name="keys">An <see cref="T:System.Collections.IDictionary" /> of object or row keys to be deleted by the <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> operation.</param>
      <param name="oldValues">An <see cref="T:System.Collections.IDictionary" /> of name/value pairs that represent data elements and their original values.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> operation is not supported by the <see cref="T:System.Web.UI.DataSourceView" />. </exception>
    </member>
    <member name="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)">
      <summary>Performs an insert operation on the list of data that the <see cref="T:System.Web.UI.DataSourceView" /> object represents.</summary>
      <returns>The number of items that were inserted into the underlying data storage.</returns>
      <param name="values">An <see cref="T:System.Collections.IDictionary" /> of name/value pairs used during an insert operation.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> operation is not supported by the <see cref="T:System.Web.UI.DataSourceView" />. </exception>
    </member>
    <member name="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
      <summary>Gets a list of data from the underlying data storage.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> list of data from the underlying data storage.</returns>
      <param name="arguments">A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> that is used to request operations on the data beyond basic data retrieval.</param>
    </member>
    <member name="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>Performs an update operation on the list of data that the <see cref="T:System.Web.UI.DataSourceView" /> object represents.</summary>
      <returns>The number of items that were updated in the underlying data storage.</returns>
      <param name="keys">An <see cref="T:System.Collections.IDictionary" /> of object or row keys to be updated by the update operation.</param>
      <param name="values">An <see cref="T:System.Collections.IDictionary" /> of name/value pairs that represent data elements and their new values.</param>
      <param name="oldValues">An <see cref="T:System.Collections.IDictionary" /> of name/value pairs that represent data elements and their original values.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> operation is not supported by the <see cref="T:System.Web.UI.DataSourceView" />. </exception>
    </member>
    <member name="M:System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)">
      <summary>Performs an asynchronous insert operation on the list of data that the <see cref="T:System.Web.UI.DataSourceView" /> object represents.</summary>
      <param name="values">An <see cref="T:System.Collections.IDictionary" /> of name/value pairs used during an insert operation.</param>
      <param name="callback">A <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> delegate that is used to notify a data-bound control when the asynchronous operation is complete. </param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> supplied is null.</exception>
    </member>
    <member name="P:System.Web.UI.DataSourceView.Name">
      <summary>Gets the name of the data source view.</summary>
      <returns>The name of the <see cref="T:System.Web.UI.DataSourceView" />, if it has one. The default value is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains event data.</param>
    </member>
    <member name="M:System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)">
      <summary>Called by the <see cref="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)" /> method to compare the capabilities requested for an <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> operation against those that the view supports.</summary>
      <param name="capability">One of the <see cref="T:System.Web.UI.DataSourceCapabilities" /> values that is compared against the capabilities that the view supports.</param>
      <exception cref="T:System.NotSupportedException">The data source view does not support the data source capability specified.</exception>
    </member>
    <member name="M:System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)">
      <summary>Gets a list of data asynchronously from the underlying data storage.</summary>
      <param name="arguments">A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> that is used to request operations on the data beyond basic data retrieval.</param>
      <param name="callback">A <see cref="T:System.Web.UI.DataSourceViewSelectCallback" /> delegate that is used to notify a data-bound control when the asynchronous operation is complete.</param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Web.UI.DataSourceViewSelectCallback" /> supplied is null.</exception>
    </member>
    <member name="M:System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)">
      <summary>Performs an asynchronous update operation on the list of data that the <see cref="T:System.Web.UI.DataSourceView" /> object represents.</summary>
      <param name="keys">An <see cref="T:System.Collections.IDictionary" /> of object or row keys to be updated by the update operation.</param>
      <param name="values">An <see cref="T:System.Collections.IDictionary" /> of name/value pairs that represent data elements and their new values.</param>
      <param name="oldValues">An <see cref="T:System.Collections.IDictionary" /> of name/value pairs that represent data elements and their original values.</param>
      <param name="callback">A <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> delegate that is used to notify a data-bound control when the asynchronous operation is complete.</param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> supplied is null.</exception>
    </member>
    <member name="T:System.Web.UI.DataSourceViewOperationCallback">
      <summary>Represents the asynchronous callback method that a data-bound control supplies to a data source view for asynchronous insert, update, or delete data operations.</summary>
      <returns>A value indicating whether any exceptions thrown during the data operation were handled.</returns>
      <param name="affectedRecords">The number of records that the data operation affected.</param>
      <param name="ex">An <see cref="T:System.Exception" />, if one is thrown by the data operation during processing.</param>
    </member>
    <member name="T:System.Web.UI.DataSourceViewSelectCallback">
      <summary>Represents the asynchronous callback method that a data-bound control supplies to a data source view for asynchronous data retrieval. </summary>
      <param name="data">An <see cref="T:System.Collections.IEnumerable" /> collection of data records that the <see cref="M:System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)" /> and <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> methods return.</param>
    </member>
    <member name="T:System.Web.UI.DesignerDataBoundLiteralControl">
      <summary>Represents the design-time version of the <see cref="T:System.Web.UI.DataBoundLiteralControl" /> control. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.DesignerDataBoundLiteralControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DesignerDataBoundLiteralControl" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.DesignerDataBoundLiteralControl.Text">
      <summary>Gets or sets the text content of the <see cref="T:System.Web.UI.DataBoundLiteralControl" /> control.</summary>
      <returns>A <see cref="T:System.String" /> that represents the text in the &lt;%# … %&gt; data-binding expression.</returns>
    </member>
    <member name="T:System.Web.UI.DesignTimeParseData">
      <summary>Provides information to the parser during design time.</summary>
    </member>
    <member name="M:System.Web.UI.DesignTimeParseData.#ctor(System.ComponentModel.Design.IDesignerHost,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DesignTimeParseData" /> class without a specified filter. </summary>
      <param name="designerHost">The object for managing designer transactions and components.</param>
      <param name="parseText">The text to parse during design time.</param>
    </member>
    <member name="M:System.Web.UI.DesignTimeParseData.#ctor(System.ComponentModel.Design.IDesignerHost,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DesignTimeParseData" /> class with the specified filter. </summary>
      <param name="designerHost">The object for managing designer transactions and components.</param>
      <param name="parseText">The text to parse during design time.</param>
      <param name="filter">The filter to apply during design time.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parseText" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.DesignTimeParseData.DataBindingHandler">
      <summary>Gets or sets the delegate for data binding at design time.</summary>
      <returns>An <see cref="T:System.EventHandler" /> for data binding at design time.</returns>
    </member>
    <member name="P:System.Web.UI.DesignTimeParseData.DesignerHost">
      <summary>Gets the object for managing designer transactions and components.</summary>
      <returns>An <see cref="T:System.ComponentModel.Design.IDesignerHost" />.</returns>
    </member>
    <member name="P:System.Web.UI.DesignTimeParseData.DocumentUrl">
      <summary>Gets or sets the URL at which the document is located.</summary>
      <returns>A <see cref="T:System.String" /> containing the URL.</returns>
    </member>
    <member name="P:System.Web.UI.DesignTimeParseData.Filter">
      <summary>Gets the filter used at design time.</summary>
      <returns>A <see cref="T:System.String" /> representing the filter.</returns>
    </member>
    <member name="P:System.Web.UI.DesignTimeParseData.ParseText">
      <summary>Gets the text to parse.</summary>
      <returns>A <see cref="T:System.String" /> containing the text to parse.</returns>
    </member>
    <member name="P:System.Web.UI.DesignTimeParseData.ShouldApplyTheme">
      <summary>Gets or sets a value that indicates whether a theme should be applied.</summary>
      <returns>true if a theme should be applied; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.DesignTimeParseData.UserControlRegisterEntries">
      <summary>Gets a collection of information about user control registrations.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> containing the tag prefix, tag name, and location of the user control. The collection is populated automatically by the .NET Framework at parse time.</returns>
    </member>
    <member name="T:System.Web.UI.DesignTimeTemplateParser">
      <summary>Provides parsing at design time.</summary>
    </member>
    <member name="M:System.Web.UI.DesignTimeTemplateParser.ParseControl(System.Web.UI.DesignTimeParseData)">
      <summary>Parses and builds one control at design time.</summary>
      <returns>The built <see cref="T:System.Web.UI.Control" /> object.</returns>
      <param name="data">Information used in creating the parser.</param>
    </member>
    <member name="M:System.Web.UI.DesignTimeTemplateParser.ParseControls(System.Web.UI.DesignTimeParseData)">
      <summary>Parses and builds one or more controls at design time.</summary>
      <returns>An array of built <see cref="T:System.Web.UI.Control" /> objects.</returns>
      <param name="data">Information used in creating the parser.</param>
    </member>
    <member name="M:System.Web.UI.DesignTimeTemplateParser.ParseTemplate(System.Web.UI.DesignTimeParseData)">
      <summary>Parses a template at design time.</summary>
      <returns>The <see cref="T:System.Web.UI.RootBuilder" /> from the parser that parsed the template.</returns>
      <param name="data">Information used in creating the parser.</param>
    </member>
    <member name="M:System.Web.UI.DesignTimeTemplateParser.ParseTheme(System.ComponentModel.Design.IDesignerHost,System.String,System.String)">
      <summary>Parses a theme at design time.</summary>
      <returns>The <see cref="T:System.Web.UI.RootBuilder" /> from the parser that parsed the theme.</returns>
      <param name="host">Manages designer components.</param>
      <param name="theme">The content to parse.</param>
      <param name="themePath">The path to the theme, which is used in creating the parser.</param>
      <exception cref="T:System.Exception">An error occurred while parsing the theme.</exception>
    </member>
    <member name="T:System.Web.UI.EmptyControlCollection">
      <summary>Provides standard support for a <see cref="T:System.Web.UI.ControlCollection" /> collection that is always empty.</summary>
    </member>
    <member name="M:System.Web.UI.EmptyControlCollection.#ctor(System.Web.UI.Control)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.EmptyControlCollection" /> class.</summary>
      <param name="owner">The <see cref="T:System.Web.UI.Control" /> that owns this collection as its collection of child controls. </param>
    </member>
    <member name="M:System.Web.UI.EmptyControlCollection.Add(System.Web.UI.Control)">
      <summary>Denies the addition of the specified <see cref="T:System.Web.UI.Control" /> object to the collection.</summary>
      <param name="child">The <see cref="T:System.Web.UI.Control" /> to be added. This parameter is always ignored. </param>
      <exception cref="T:System.Web.HttpException">Always issued, because the control does not allow child controls. </exception>
    </member>
    <member name="M:System.Web.UI.EmptyControlCollection.AddAt(System.Int32,System.Web.UI.Control)">
      <summary>Denies the addition of the specified <see cref="T:System.Web.UI.Control" /> object to the collection, at the specified index position.</summary>
      <param name="index">The index at which to add the <see cref="T:System.Web.UI.Control" />. This parameter is always ignored. </param>
      <param name="child">The <see cref="T:System.Web.UI.Control" /> to be added. This parameter is always ignored. </param>
      <exception cref="T:System.Web.HttpException">Always issued, because the control does not allow child controls. </exception>
    </member>
    <member name="T:System.Web.UI.EventEntry">
      <summary>Acts as the property entry for event handlers.</summary>
    </member>
    <member name="M:System.Web.UI.EventEntry.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.EventEntry" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.EventEntry.HandlerMethodName">
      <summary>Gets or sets the name of the method that handles the event.</summary>
      <returns>A <see cref="T:System.String" /> containing the event handler method name.</returns>
    </member>
    <member name="P:System.Web.UI.EventEntry.HandlerType">
      <summary>Gets or sets the type of delegate for the event.</summary>
      <returns>A <see cref="T:System.Type" /> that represents the type of delegate for the event.</returns>
    </member>
    <member name="P:System.Web.UI.EventEntry.Name">
      <summary>Gets or sets the name of the property from the expression.</summary>
      <returns>A <see cref="T:System.String" /> that contains the name of the property.</returns>
    </member>
    <member name="T:System.Web.UI.ExpressionBinding">
      <summary>Supports the parsing and persisting of an expression-binding instance. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.ExpressionBinding.#ctor(System.String,System.Type,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ExpressionBinding" /> class.</summary>
      <param name="propertyName">A string indicating the name of the property of the object to which the <paramref name="expression" /> parameter is applied.</param>
      <param name="propertyType">A <see cref="T:System.Type" /> indicating the type of the property of the object to which the <paramref name="expression" /> parameter is applied.</param>
      <param name="expressionPrefix">A string representing the expression's prefix value.</param>
      <param name="expression">A string representing the value of the expression in its declarative syntax.</param>
    </member>
    <member name="M:System.Web.UI.ExpressionBinding.Equals(System.Object)">
      <summary>Determines whether the specified object is the same instance as the current <see cref="T:System.Web.UI.ExpressionBinding" /> object.</summary>
      <returns>true if the specified object is the same instance as the current <see cref="T:System.Web.UI.ExpressionBinding" />; otherwise, false.</returns>
      <param name="obj">The object to compare with the current <see cref="T:System.Web.UI.ExpressionBinding" />.</param>
    </member>
    <member name="P:System.Web.UI.ExpressionBinding.Expression">
      <summary>Gets or sets a value of the expression in its declarative syntax.</summary>
      <returns>A string that is used with the <see cref="P:System.Web.UI.ExpressionBinding.ExpressionPrefix" /> property to perform an action.</returns>
    </member>
    <member name="P:System.Web.UI.ExpressionBinding.ExpressionPrefix">
      <summary>Gets or sets a value for the prefix of an expression in its declarative syntax.</summary>
      <returns>A string that represents the expression prefix.</returns>
    </member>
    <member name="P:System.Web.UI.ExpressionBinding.Generated">
      <summary>Gets a value indicating whether the expression was implicitly generated by the parser. </summary>
      <returns>true if the expression was implicitly generated by the parser; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.ExpressionBinding.GetHashCode">
      <summary>Serves as a hash function for the current <see cref="T:System.Web.UI.ExpressionBinding" /> object; suitable for hashing algorithms and data structures, such as a hash table.</summary>
      <returns>A hash code for the current <see cref="T:System.Web.UI.ExpressionBinding" />.</returns>
    </member>
    <member name="P:System.Web.UI.ExpressionBinding.ParsedExpressionData">
      <summary>Gets an object representing the data from an expression as created through the <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> method.</summary>
      <returns>The object representing the data from an expression as created by calling the <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> method.</returns>
    </member>
    <member name="P:System.Web.UI.ExpressionBinding.PropertyName">
      <summary>Gets a value indicating the name of the property of the object to which the expression is applied.</summary>
      <returns>A value that represents the name of the property of the object to which the expression is applied.</returns>
    </member>
    <member name="P:System.Web.UI.ExpressionBinding.PropertyType">
      <summary>Gets a value indicating the <see cref="T:System.Type" /> of the property of the object to which the expression is applied.</summary>
      <returns>The <see cref="T:System.Type" /> of the property of the object to which the expression is applied.</returns>
    </member>
    <member name="T:System.Web.UI.ExpressionBindingCollection">
      <summary>Represents a collection of <see cref="T:System.Web.UI.ExpressionBinding" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.ExpressionBindingCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ExpressionBindingCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.ExpressionBindingCollection.Add(System.Web.UI.ExpressionBinding)">
      <summary>Appends the specified <see cref="T:System.Web.UI.ExpressionBinding" /> object to the end of the collection.</summary>
      <param name="binding">The <see cref="T:System.Web.UI.ExpressionBinding" /> to append to the <see cref="T:System.Web.UI.ExpressionBindingCollection" />.</param>
    </member>
    <member name="E:System.Web.UI.ExpressionBindingCollection.Changed">
      <summary>Occurs when the collection of <see cref="T:System.Web.UI.ExpressionBinding" /> objects is changed.</summary>
    </member>
    <member name="M:System.Web.UI.ExpressionBindingCollection.Clear">
      <summary>Removes all the <see cref="T:System.Web.UI.ExpressionBinding" /> objects from the collection.</summary>
    </member>
    <member name="M:System.Web.UI.ExpressionBindingCollection.Contains(System.String)">
      <summary>Determines whether the <see cref="T:System.Web.UI.ExpressionBindingCollection" /> collection contains a specific <see cref="T:System.Web.UI.ExpressionBinding" /> object.</summary>
      <returns>true if the <see cref="T:System.Web.UI.ExpressionBinding" /> is found in the <see cref="T:System.Web.UI.ExpressionBindingCollection" />; otherwise, false.</returns>
      <param name="propName">The <see cref="P:System.Web.UI.ExpressionBinding.PropertyName" /> of the <see cref="T:System.Web.UI.ExpressionBinding" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Web.UI.ExpressionBindingCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies all the <see cref="T:System.Web.UI.ExpressionBinding" /> objects from the <see cref="T:System.Web.UI.ExpressionBindingCollection" /> collection to a one-dimensional array, starting at the specified index in the target array.</summary>
      <param name="array">The zero-based array that receives the <see cref="T:System.Web.UI.ExpressionBinding" /> objects copied from the collection.</param>
      <param name="index">The position in the target array at which the array starts receiving the copied items.</param>
    </member>
    <member name="M:System.Web.UI.ExpressionBindingCollection.CopyTo(System.Web.UI.ExpressionBinding[],System.Int32)">
      <summary>Copies all the <see cref="T:System.Web.UI.ExpressionBinding" /> objects from the <see cref="T:System.Web.UI.ExpressionBindingCollection" /> collection to a one-dimensional array of <see cref="T:System.Web.UI.ExpressionBinding" /> objects, starting at the specified index in the target array.</summary>
      <param name="array">The zero-based array of <see cref="T:System.Web.UI.ExpressionBinding" /> objects that receives the <see cref="T:System.Web.UI.ExpressionBinding" /> objects copied from the collection.</param>
      <param name="index">The position in the target array at which the array starts receiving the copied items.</param>
    </member>
    <member name="P:System.Web.UI.ExpressionBindingCollection.Count">
      <summary>Gets the number of <see cref="T:System.Web.UI.ExpressionBinding" /> objects in the <see cref="T:System.Web.UI.ExpressionBindingCollection" /> collection.</summary>
      <returns>The number of <see cref="T:System.Web.UI.ExpressionBinding" /> objects in the <see cref="T:System.Web.UI.ExpressionBindingCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.ExpressionBindingCollection.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" />-implemented object that can be used to iterate through the <see cref="T:System.Web.UI.ExpressionBinding" /> objects in the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" />-implemented object that contains all the <see cref="T:System.Web.UI.ExpressionBinding" /> objects in the <see cref="T:System.Web.UI.ExpressionBindingCollection" />.</returns>
    </member>
    <member name="P:System.Web.UI.ExpressionBindingCollection.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.ExpressionBinding" /> objects in the collection can be modified.</summary>
      <returns>false in all cases. </returns>
    </member>
    <member name="P:System.Web.UI.ExpressionBindingCollection.IsSynchronized">
      <summary>Gets a value indicating whether access to the collection is synchronized (thread safe).</summary>
      <returns>false in all cases. </returns>
    </member>
    <member name="P:System.Web.UI.ExpressionBindingCollection.Item(System.String)">
      <summary>Gets an <see cref="T:System.Web.UI.ExpressionBinding" /> object from the collection with the specified <see cref="P:System.Web.UI.ExpressionBinding.PropertyName" /> value.</summary>
      <returns>An <see cref="T:System.Web.UI.ExpressionBinding" /> in the <see cref="T:System.Web.UI.ExpressionBindingCollection" /> with the specified <see cref="P:System.Web.UI.ExpressionBinding.PropertyName" />.</returns>
      <param name="propertyName">The <see cref="P:System.Web.UI.ExpressionBinding.PropertyName" /> of the <see cref="T:System.Web.UI.ExpressionBinding" /> to retrieve.</param>
    </member>
    <member name="M:System.Web.UI.ExpressionBindingCollection.Remove(System.String)">
      <summary>Removes the specified <see cref="T:System.Web.UI.ExpressionBinding" /> object from the collection.</summary>
      <param name="propertyName">The <see cref="P:System.Web.UI.ExpressionBinding.PropertyName" /> of the <see cref="T:System.Web.UI.ExpressionBinding" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Web.UI.ExpressionBindingCollection.Remove(System.String,System.Boolean)">
      <summary>Removes the specified <see cref="T:System.Web.UI.ExpressionBinding" /> object from the collection.</summary>
      <param name="propertyName">The <see cref="P:System.Web.UI.ExpressionBinding.PropertyName" /> of the <see cref="T:System.Web.UI.ExpressionBinding" /> to remove from the collection.</param>
      <param name="addToRemovedList">true to add the <see cref="T:System.Web.UI.ExpressionBinding" /> to the <see cref="P:System.Web.UI.ExpressionBindingCollection.RemovedBindings" /> collection; otherwise, false.</param>
    </member>
    <member name="M:System.Web.UI.ExpressionBindingCollection.Remove(System.Web.UI.ExpressionBinding)">
      <summary>Removes the specified <see cref="T:System.Web.UI.ExpressionBinding" /> object from the collection.</summary>
      <param name="binding">The <see cref="T:System.Web.UI.ExpressionBinding" /> to remove from the collection.</param>
    </member>
    <member name="P:System.Web.UI.ExpressionBindingCollection.RemovedBindings">
      <summary>Gets a collection of strings representing the names of bindings that have been removed.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> containing the names of bindings that have been removed.</returns>
    </member>
    <member name="P:System.Web.UI.ExpressionBindingCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection.</summary>
      <returns>An <see cref="T:System.Object" /> that can be used to synchronize access to the <see cref="T:System.Web.UI.ExpressionBindingCollection" />.</returns>
    </member>
    <member name="T:System.Web.UI.ExtractTemplateValuesMethod">
      <summary>Provides a delegate with which ASP.NET extracts a set of name/value pairs from an <see cref="T:System.Web.UI.IBindableTemplate" /> object at run time. This class cannot be inherited.</summary>
      <returns>An <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> of name/value pairs used in two-way, templated data-binding scenarios between ASP.NET data-bound controls and data source controls.</returns>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> from which to extract name/value pairs, which are passed by the data-bound control to an associated data source control in two-way data-binding scenarios. This parameter corresponds to the <paramref name="control" /> parameter passed by the <see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" /> method.</param>
    </member>
    <member name="T:System.Web.UI.FileLevelControlBuilderAttribute">
      <summary>Allows a <see cref="T:System.Web.UI.TemplateControl" />-derived class to specify the control builder used at the top level of the builder tree when parsing the file. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.FileLevelControlBuilderAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.FileLevelControlBuilderAttribute" /> class.</summary>
      <param name="builderType">The <see cref="T:System.Type" /> of the control builder used when parsing the file.</param>
    </member>
    <member name="P:System.Web.UI.FileLevelControlBuilderAttribute.BuilderType">
      <summary>Gets the <see cref="T:System.Type" /> of the control builder used when parsing the file. This property is read-only. </summary>
      <returns>The <see cref="T:System.Type" /> of the control builder used when parsing the file.</returns>
    </member>
    <member name="F:System.Web.UI.FileLevelControlBuilderAttribute.Default">
      <summary>Specifies the new <see cref="T:System.Web.UI.FileLevelControlBuilderAttribute" /> object. By default, the new object is set to null. This field is read-only.</summary>
    </member>
    <member name="M:System.Web.UI.FileLevelControlBuilderAttribute.Equals(System.Object)">
      <summary>Returns a value that indicates whether this instance is equal to a specified object.</summary>
      <returns>true if <paramref name="obj" /> equals the type and value of this instance; otherwise, false.</returns>
      <param name="obj">An <see cref="T:System.Object" /> to compare with this instance. </param>
    </member>
    <member name="M:System.Web.UI.FileLevelControlBuilderAttribute.GetHashCode"></member>
    <member name="M:System.Web.UI.FileLevelControlBuilderAttribute.IsDefaultAttribute">
      <summary>Determines whether the current <see cref="T:System.Web.UI.FileLevelControlBuilderAttribute" /> object is the default.</summary>
      <returns>true if the current <see cref="T:System.Web.UI.FileLevelControlBuilderAttribute" /> is the default; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.UI.FileLevelMasterPageControlBuilder">
      <summary>Parses master page files.</summary>
    </member>
    <member name="M:System.Web.UI.FileLevelMasterPageControlBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.FileLevelMasterPageControlBuilder" /> class.</summary>
    </member>
    <member name="T:System.Web.UI.FileLevelPageControlBuilder">
      <summary>Parses page files and is the default <see cref="T:System.Web.UI.ControlBuilder" /> class for parsing page files.</summary>
    </member>
    <member name="M:System.Web.UI.FileLevelPageControlBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.FileLevelPageControlBuilder" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.FileLevelPageControlBuilder.AppendLiteralString(System.String)">
      <summary>Adds the specified literal content to a control. </summary>
      <param name="text">The content to add to the control.</param>
      <exception cref="T:System.Web.HttpException">The <see cref="M:System.Web.UI.FileLevelPageControlBuilder.AppendLiteralString(System.String)" /> method cannot append the literal string to a content page.</exception>
    </member>
    <member name="M:System.Web.UI.FileLevelPageControlBuilder.AppendSubBuilder(System.Web.UI.ControlBuilder)">
      <summary>Adds a <see cref="T:System.Web.UI.ControlBuilder" /> object to the <see cref="T:System.Web.UI.FileLevelPageControlBuilder" /> object for any child controls that belong to the container control.</summary>
      <param name="subBuilder">The <see cref="T:System.Web.UI.ControlBuilder" /> assigned to the child control. </param>
      <exception cref="T:System.Web.HttpException">The <see cref="T:System.Web.UI.ControlBuilder" /> that was added is associated with a <see cref="T:System.Web.UI.WebControls.Content" /> control and is only allowed on pages that contain <see cref="T:System.Web.UI.WebControls.Content" /> controls.</exception>
      <exception cref="T:System.Web.HttpParseException">The content page contained a literal other than a <see cref="T:System.Web.UI.WebControls.Content" /> control.</exception>
    </member>
    <member name="T:System.Web.UI.FileLevelUserControlBuilder">
      <summary>Supports the page parser in building a user control by specifying the <see cref="T:System.Web.UI.FileLevelUserControlBuilder" /> class that is used to parse the user control file.</summary>
    </member>
    <member name="M:System.Web.UI.FileLevelUserControlBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.FileLevelUserControlBuilder" /> class.</summary>
    </member>
    <member name="T:System.Web.UI.FilterableAttribute">
      <summary>Specifies whether the property to which the attribute is applied supports device filtering. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.FilterableAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.FilterableAttribute" /> class.</summary>
      <param name="filterable">true to indicate that the property to which the attribute is applied supports device filtering; otherwise, false.</param>
    </member>
    <member name="F:System.Web.UI.FilterableAttribute.Default">
      <summary>Represents a predefined <see cref="T:System.Web.UI.FilterableAttribute" /> object with default property settings. This field is read-only.</summary>
    </member>
    <member name="M:System.Web.UI.FilterableAttribute.Equals(System.Object)">
      <summary>Determines whether the current instance of the <see cref="T:System.Web.UI.FilterableAttribute" /> class is equal to the specified object.</summary>
      <returns>true if the object contained in the <paramref name="obj" /> parameter is equal to the current instance of the <see cref="T:System.Web.UI.FilterableAttribute" /> object; otherwise, false.</returns>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
    </member>
    <member name="P:System.Web.UI.FilterableAttribute.Filterable">
      <summary>Gets a value indicating whether the property to which the <see cref="T:System.Web.UI.FilterableAttribute" /> attribute is applied supports device filtering.</summary>
      <returns>true to indicate that the property to which the attribute is applied supports device filtering; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.FilterableAttribute.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:System.Web.UI.FilterableAttribute.IsDefaultAttribute">
      <summary>Determines whether the current instance of the <see cref="T:System.Web.UI.FilterableAttribute" /> class is equal to the <see cref="F:System.Web.UI.FilterableAttribute.Default" /> attribute.</summary>
      <returns>true if the current instance of <see cref="T:System.Web.UI.FilterableAttribute" /> is equal to <see cref="F:System.Web.UI.FilterableAttribute.Default" />; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.FilterableAttribute.IsObjectFilterable(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> supports device filtering.</summary>
      <returns>true if the <see cref="T:System.Object" /> contained in the <paramref name="instance" /> parameter supports device filtering; otherwise, false.</returns>
      <param name="instance">The <see cref="T:System.Object" /> to test.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="instance" /> parameter is null.</exception>
    </member>
    <member name="M:System.Web.UI.FilterableAttribute.IsPropertyFilterable(System.ComponentModel.PropertyDescriptor)">
      <summary>Determines whether a property supports device filtering.</summary>
      <returns>true if the property represented by the <see cref="T:System.ComponentModel.PropertyDescriptor" /> object contained in the <paramref name="propertyDescriptor" /> parameter supports device filtering; otherwise, false.</returns>
      <param name="propertyDescriptor">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that contains the properties of the property to test.</param>
    </member>
    <member name="M:System.Web.UI.FilterableAttribute.IsTypeFilterable(System.Type)">
      <summary>Determines whether the specified data type supports device filtering.</summary>
      <returns>true if the data type contained in the <paramref name="type" /> parameter supports device filtering; otherwise, false.</returns>
      <param name="type">A <see cref="T:System.Type" /> that represents the data type to test.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="type" /> parameter is null.</exception>
    </member>
    <member name="F:System.Web.UI.FilterableAttribute.No">
      <summary>Represents a predefined <see cref="T:System.Web.UI.FilterableAttribute" /> object that indicates that a property does not support device filtering. This field is read-only.</summary>
    </member>
    <member name="F:System.Web.UI.FilterableAttribute.Yes">
      <summary>Represents a predefined <see cref="T:System.Web.UI.FilterableAttribute" /> object that indicates that a property supports device filtering. This field is read-only.</summary>
    </member>
    <member name="T:System.Web.UI.HiddenFieldPageStatePersister">
      <summary>Stores ASP.NET page view state on the Web client in a hidden HTML element. </summary>
    </member>
    <member name="M:System.Web.UI.HiddenFieldPageStatePersister.#ctor(System.Web.UI.Page)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HiddenFieldPageStatePersister" /> class.</summary>
      <param name="page">The <see cref="T:System.Web.UI.Page" /> that the view state persistence mechanism is created for.</param>
    </member>
    <member name="M:System.Web.UI.HiddenFieldPageStatePersister.Load">
      <summary>Deserializes and loads persisted state information from an <see cref="T:System.Web.HttpRequest" /> object when a <see cref="T:System.Web.UI.Page" /> object initializes its control hierarchy.</summary>
      <exception cref="T:System.Web.HttpException">The <see cref="M:System.Web.UI.HiddenFieldPageStatePersister.Load" /> method could not successfully deserialize the state information contained in the request to the Web server.</exception>
    </member>
    <member name="M:System.Web.UI.HiddenFieldPageStatePersister.Save">
      <summary>Serializes any object state contained in the <see cref="P:System.Web.UI.PageStatePersister.ViewState" /> or <see cref="P:System.Web.UI.PageStatePersister.ControlState" /> property and writes the state to the response stream.</summary>
    </member>
    <member name="T:System.Web.UI.HierarchicalDataSourceControl">
      <summary>Provides a base class for data source controls that represent hierarchical data.</summary>
    </member>
    <member name="M:System.Web.UI.HierarchicalDataSourceControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HierarchicalDataSourceControl" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.HierarchicalDataSourceControl.ApplyStyleSheetSkin(System.Web.UI.Page)">
      <summary>Applies the style properties that are defined in the page style sheet to the control.</summary>
      <param name="page">The <see cref="T:System.Web.UI.Page" /> containing the control.</param>
    </member>
    <member name="P:System.Web.UI.HierarchicalDataSourceControl.ClientID">
      <summary>Gets the server control identifier generated by ASP.NET.</summary>
      <returns>The server control identifier generated by ASP.NET.</returns>
    </member>
    <member name="P:System.Web.UI.HierarchicalDataSourceControl.ClientIDMode">
      <summary>This property is not used for data source controls.</summary>
      <returns>This property is not used for data source controls.</returns>
    </member>
    <member name="P:System.Web.UI.HierarchicalDataSourceControl.Controls">
      <summary>Gets a <see cref="T:System.Web.UI.ControlCollection" /> object that represents the child controls for a specified server control in the UI hierarchy.</summary>
      <returns>The collection of child controls for the specified server control.</returns>
    </member>
    <member name="M:System.Web.UI.HierarchicalDataSourceControl.CreateControlCollection">
      <summary>Creates a new <see cref="T:System.Web.UI.ControlCollection" /> object to hold the child controls (both literal and server) of the server control.</summary>
      <returns>An <see cref="T:System.Web.UI.EmptyControlCollection" /> that prevents any child controls from being added.</returns>
    </member>
    <member name="P:System.Web.UI.HierarchicalDataSourceControl.EnableTheming">
      <summary>Gets a value indicating whether this control supports themes.</summary>
      <returns>false in all cases.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the value of the <see cref="P:System.Web.UI.HierarchicalDataSourceControl.EnableTheming" /> property. </exception>
    </member>
    <member name="M:System.Web.UI.HierarchicalDataSourceControl.FindControl(System.String)">
      <summary>Searches the current naming container for a server control with the specified <paramref name="id" /> parameter.</summary>
      <returns>The specified control, or null if the specified control does not exist.</returns>
      <param name="id">The identifier for the control to be found.</param>
    </member>
    <member name="M:System.Web.UI.HierarchicalDataSourceControl.Focus">
      <summary>Sets input focus to the control.</summary>
      <exception cref="T:System.NotSupportedException">An attempt was made to call the <see cref="M:System.Web.UI.HierarchicalDataSourceControl.Focus" /> method.</exception>
    </member>
    <member name="M:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView(System.String)">
      <summary>Gets the view helper object for the <see cref="T:System.Web.UI.IHierarchicalDataSource" /> interface for the specified path.</summary>
      <returns>A <see cref="T:System.Web.UI.HierarchicalDataSourceView" /> that represents a single view of the data at the hierarchical level identified by the <paramref name="viewPath" /> parameter.</returns>
      <param name="viewPath">The hierarchical path of the view to retrieve. </param>
    </member>
    <member name="M:System.Web.UI.HierarchicalDataSourceControl.HasControls">
      <summary>Determines if the server control contains any child controls.</summary>
      <returns>true if the control contains other controls; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.HierarchicalDataSourceControl.OnDataSourceChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.IHierarchicalDataSource.DataSourceChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains event data. </param>
    </member>
    <member name="M:System.Web.UI.HierarchicalDataSourceControl.RenderControl(System.Web.UI.HtmlTextWriter)">
      <param name="writer">The HTML text writer.</param>
    </member>
    <member name="P:System.Web.UI.HierarchicalDataSourceControl.SkinID">
      <summary>Gets or sets the skin to apply to the <see cref="T:System.Web.UI.HierarchicalDataSourceControl" /> control.</summary>
      <returns>
        <see cref="F:System.String.Empty" /> in all cases.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the value of the <see cref="P:System.Web.UI.HierarchicalDataSourceControl.SkinID" /> property. </exception>
    </member>
    <member name="E:System.Web.UI.HierarchicalDataSourceControl.System#Web#UI#IHierarchicalDataSource#DataSourceChanged">
      <summary>Occurs when the <see cref="T:System.Web.UI.HierarchicalDataSourceControl" /> has changed in some way that affects data-bound controls.</summary>
    </member>
    <member name="M:System.Web.UI.HierarchicalDataSourceControl.System#Web#UI#IHierarchicalDataSource#GetHierarchicalView(System.String)">
      <summary>Gets the view helper object for the <see cref="T:System.Web.UI.IHierarchicalDataSource" /> interface for the specified path.</summary>
      <returns>Returns a <see cref="T:System.Web.UI.HierarchicalDataSourceView" /> that represents a single view of the data at the hierarchical level identified by the <paramref name="viewPath" /> parameter.</returns>
      <param name="viewPath">The hierarchical path of the view to retrieve. </param>
    </member>
    <member name="P:System.Web.UI.HierarchicalDataSourceControl.Visible">
      <summary>Gets or sets a value indicating whether the control is visually displayed.</summary>
      <returns>false in all cases.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the value of the <see cref="P:System.Web.UI.HierarchicalDataSourceControl.Visible" /> property. </exception>
    </member>
    <member name="T:System.Web.UI.HierarchicalDataSourceView">
      <summary>Represents a data view on a node or collection of nodes in a hierarchical data structure for a <see cref="T:System.Web.UI.HierarchicalDataSourceControl" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.HierarchicalDataSourceView.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HierarchicalDataSourceView" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.HierarchicalDataSourceView.Select">
      <summary>Gets a list of all the data items in the view.</summary>
      <returns>An <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> collection of data items.</returns>
    </member>
    <member name="T:System.Web.UI.Html32TextWriter">
      <summary>Writes a series of HTML 3.2–specific characters and text to the output stream for an ASP.NET server control. The <see cref="T:System.Web.UI.Html32TextWriter" /> class provides formatting capabilities that ASP.NET server controls use when rendering HTML 3.2 content to clients.</summary>
    </member>
    <member name="M:System.Web.UI.Html32TextWriter.#ctor(System.IO.TextWriter)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Html32TextWriter" /> class that uses the line indentation that is specified in the <see cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" /> field when the requesting browser requires line indentation.</summary>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> that renders the HMTL content. </param>
    </member>
    <member name="M:System.Web.UI.Html32TextWriter.#ctor(System.IO.TextWriter,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Html32TextWriter" /> class that uses the specified line indentation.</summary>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> that renders the HMTL 3.2 content. </param>
      <param name="tabString">A string that represents the number of spaces defined by the <see cref="P:System.Web.UI.HtmlTextWriter.Indent" />. </param>
    </member>
    <member name="P:System.Web.UI.Html32TextWriter.FontStack">
      <summary>Gets a collection of font information for the HTML to render.</summary>
      <returns>The collection of font information.</returns>
    </member>
    <member name="M:System.Web.UI.Html32TextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
      <summary>Returns the HTML element that is associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value.</summary>
      <returns>The HTML element.</returns>
      <param name="tagKey">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value to obtain the HTML element for. </param>
    </member>
    <member name="M:System.Web.UI.Html32TextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
      <summary>Determines whether to write the specified HTML style attribute and its value to the output stream.</summary>
      <returns>true if the HTML style attribute and its value will be rendered to the output stream; otherwise, false.</returns>
      <param name="name">The HTML style attribute to write to the output stream. </param>
      <param name="value">The value associated with the HTML style attribute. </param>
      <param name="key">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value associated with the HTML style attribute. </param>
    </member>
    <member name="M:System.Web.UI.Html32TextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
      <summary>Determines whether to write the specified HTML element to the output stream.</summary>
      <returns>true if the HTML element is written to the output stream; otherwise, false.</returns>
      <param name="name">The HTML element to write to the output stream. </param>
      <param name="key">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value associated with the HTML element. </param>
    </member>
    <member name="M:System.Web.UI.Html32TextWriter.RenderAfterContent">
      <summary>Writes any text or spacing that appears after the content of the HTML element.</summary>
      <returns>The spacing or text to write after the content of the HTML element; otherwise, if there is no such information to render, null.</returns>
    </member>
    <member name="M:System.Web.UI.Html32TextWriter.RenderAfterTag">
      <summary>Writes any spacing or text that occurs after an HTML element's closing tag.</summary>
      <returns>The spacing or text to write after the closing tag of the HTML element; otherwise, if there is no such information to render, null.</returns>
    </member>
    <member name="M:System.Web.UI.Html32TextWriter.RenderBeforeContent">
      <summary>Writes any tab spacing or font information that appears before the content that is contained in an HTML element.</summary>
      <returns>The font information or spacing to write before rendering the content of the HTML element; otherwise, if there is no such information to render, null.</returns>
    </member>
    <member name="M:System.Web.UI.Html32TextWriter.RenderBeforeTag">
      <summary>Writes any text or tab spacing that occurs before the opening tag of an HTML element to the HTML 3.2 output stream.</summary>
      <returns>The HTML font and spacing information to render before the tag; otherwise, if there is no such information to render, null.</returns>
    </member>
    <member name="M:System.Web.UI.Html32TextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
      <summary>Writes the opening tag of the specified element to the HTML 3.2 output stream.</summary>
      <param name="tagKey">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value that indicates which HTML element to write. </param>
    </member>
    <member name="M:System.Web.UI.Html32TextWriter.RenderEndTag">
      <summary>Writes the end tag of an HTML element to the <see cref="T:System.Web.UI.Html32TextWriter" /> output stream, along with any font information that is associated with the element.</summary>
    </member>
    <member name="P:System.Web.UI.Html32TextWriter.ShouldPerformDivTableSubstitution">
      <summary>Gets or sets a Boolean value indicating whether to replace a Table element with a Div element to reduce the time that it takes to render a block of HTML.</summary>
      <returns>true to replace Table with Div; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Html32TextWriter.SupportsBold">
      <summary>Gets or sets a Boolean value indicating whether the requesting device supports bold HTML text. Use the <see cref="P:System.Web.UI.Html32TextWriter.SupportsBold" /> property to conditionally render bold text to the <see cref="T:System.Web.UI.Html32TextWriter" /> output stream.</summary>
      <returns>true if the requesting device supports bold text; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.Html32TextWriter.SupportsItalic">
      <summary>Gets or sets a Boolean value indicating whether the requesting device supports italic HTML text. Use the <see cref="P:System.Web.UI.Html32TextWriter.SupportsItalic" /> property to conditionally render italicized text to the <see cref="T:System.Web.UI.Html32TextWriter" /> output stream.</summary>
      <returns>true if the requesting device supports italic text; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.Web.UI.HtmlTextWriter">
      <summary>Writes markup characters and text to an ASP.NET server control output stream. This class provides formatting capabilities that ASP.NET server controls use when rendering markup to clients.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class that uses a default tab string.</summary>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> instance that renders the markup content. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class with a specified tab string character.</summary>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> that renders the markup content. </param>
      <param name="tabString">The string to use to render a line indentation. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
      <summary>Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</summary>
      <param name="name">A string containing the name of the attribute to add. </param>
      <param name="value">A string containing the value to assign to the attribute. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
      <summary>Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method, with optional encoding.</summary>
      <param name="name">A string containing the name of the attribute to add. </param>
      <param name="value">A string containing the value to assign to the attribute. </param>
      <param name="fEndode">true to encode the attribute and its value; otherwise, false. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
      <summary>Adds the specified markup attribute and value, along with an <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value, to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</summary>
      <param name="name">A string containing the name of the attribute to add. </param>
      <param name="value">A string containing the value to assign to the attribute. </param>
      <param name="key">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the attribute. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
      <summary>Adds the markup attribute and the attribute value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</summary>
      <param name="key">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the markup attribute to add to the output stream. </param>
      <param name="value">A string containing the value to assign to the attribute. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
      <summary>Adds the markup attribute and the attribute value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method, with optional encoding.</summary>
      <param name="key">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the markup attribute to add to the output stream. </param>
      <param name="value">A string containing the value to assign to the attribute. </param>
      <param name="fEncode">true to encode the attribute and its value; otherwise, false. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
      <summary>Adds the specified markup style attribute and the attribute value to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</summary>
      <param name="name">A string that contains the style attribute to add. </param>
      <param name="value">A string that contains the value to assign to the attribute. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
      <summary>Adds the specified markup style attribute and the attribute value, along with an <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value, to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</summary>
      <param name="name">A string that contains the style attribute to be added. </param>
      <param name="value">A string that contains the value to assign to the attribute. </param>
      <param name="key">An <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that represents the style attribute to add. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
      <summary>Adds the markup style attribute associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> value and the attribute value to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</summary>
      <param name="key">An <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that represents the style attribute to add to the output stream. </param>
      <param name="value">A string that contains the value to assign to the attribute. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.BeginRender">
      <summary>Notifies an <see cref="T:System.Web.UI.HtmlTextWriter" /> object, or an object of a derived class, that a control is about to be rendered. </summary>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.Close">
      <summary>Closes the <see cref="T:System.Web.UI.HtmlTextWriter" /> object and releases any system resources associated with it.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriter.DefaultTabString">
      <summary>Represents a single tab character.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar">
      <summary>Represents the quotation mark (") character.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
      <summary>Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</summary>
      <returns>A string containing the encoded attribute value, null if <paramref name="value" /> is empty, or the unencoded attribute value if <paramref name="fEncode" /> is false.</returns>
      <param name="value">A string containing the attribute value to encode. </param>
      <param name="fEncode">true to encode the attribute value; otherwise, false. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
      <summary>Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</summary>
      <returns>A string containing the encoded attribute value.</returns>
      <param name="attrKey">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> representing the markup attribute. </param>
      <param name="value">A string containing the attribute value to encode. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
      <summary>Performs minimal URL encoding by converting spaces in the specified URL to the string "%20".</summary>
      <returns>A string containing the encoded URL.</returns>
      <param name="url">A string containing the URL to encode. </param>
    </member>
    <member name="P:System.Web.UI.HtmlTextWriter.Encoding">
      <summary>Gets the encoding that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object uses to write content to the page.</summary>
      <returns>The <see cref="T:System.Text.Encoding" /> in which the markup is written to the page.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.EndRender">
      <summary>Notifies an <see cref="T:System.Web.UI.HtmlTextWriter" /> object, or an object of a derived class, that a control has finished rendering. You can use this method to close any markup elements opened in the <see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /> method.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars">
      <summary>Represents the left angle bracket and slash mark (&lt;/) of the closing tag of a markup element.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
      <summary>Writes the opening tag of a &lt;span&gt; element that contains attributes that implement the layout and character formatting of the specified style. </summary>
      <param name="style">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to begin applying to the block of markup. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
      <summary>Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style. </summary>
      <param name="style">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to begin applying to the block of markup.</param>
      <param name="tag">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies the opening tag of the markup element that will contain the style object specified in <paramref name="style" />. </param>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriter.EqualsChar">
      <summary>Represents the equal sign (=).</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString">
      <summary>Represents an equal sign (=) and a double quotation mark (") together in a string (="). </summary>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
      <summary>Writes the closing tag of a &lt;span&gt; element to end the specified layout and character formatting. </summary>
      <param name="style">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to close. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
      <summary>Writes the closing tag of the specified markup element to end the specified layout and character formatting. </summary>
      <param name="style">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to stop applying to the output text.</param>
      <param name="tag">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies the closing tag of the markup element that contained the attributes that applied the specified style. This must match the key passed in the corresponding <see cref="M:System.Web.UI.HtmlTextWriter.EnterStyle" /> call. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
      <summary>Removes all the markup and style attributes on all properties of the page or Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.Flush">
      <summary>Clears all buffers for the current <see cref="T:System.Web.UI.HtmlTextWriter" /> object and causes any buffered data to be written to the output stream.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
      <summary>Obtains the corresponding <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value for the specified attribute.</summary>
      <returns>The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value for the specified attribute; otherwise, an invalid <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> value if the attribute is not a member of the enumeration.</returns>
      <param name="attrName">A string that contains the attribute for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)">
      <summary>Obtains the name of the markup attribute associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> value.</summary>
      <returns>A string containing the name of the markup attribute.</returns>
      <param name="attrKey">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> to obtain the markup attribute name for. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
      <summary>Obtains the <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value for the specified style.</summary>
      <returns>The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value corresponding to <paramref name="styleName" />.</returns>
      <param name="styleName">The style attribute for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterStyle" />. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
      <summary>Obtains the markup style attribute name associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value.</summary>
      <returns>The style attribute name associated with the <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value specified in <paramref name="styleKey" />.</returns>
      <param name="styleKey">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> to obtain the style attribute name for. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
      <summary>Obtains the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value associated with the specified markup element.</summary>
      <returns>The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value; otherwise, if <paramref name="tagName" /> is not associated with a specific <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value, <see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" />.</returns>
      <param name="tagName">The markup element for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterTag" />. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
      <summary>Obtains the markup element associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value.</summary>
      <returns>A string representing the markup element.</returns>
      <param name="tagKey">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> to obtain the markup element for. </param>
    </member>
    <member name="P:System.Web.UI.HtmlTextWriter.Indent">
      <summary>Gets or sets the number of tab positions to indent the beginning of each line of markup.</summary>
      <returns>The number of tab positions to indent each line.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlTextWriter.InnerWriter">
      <summary>Gets or sets the text writer that writes the inner content of the markup element.</summary>
      <returns>A <see cref="T:System.IO.TextWriter" /> that writes the inner markup content.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
      <summary>Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</summary>
      <returns>true if the attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, false.</returns>
      <param name="key">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)">
      <summary>Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</summary>
      <returns>true if the attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, false.</returns>
      <param name="key">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute. </param>
      <param name="value">The value assigned to the attribute. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
      <summary>Determines whether the specified markup style attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</summary>
      <returns>true if the attribute will be rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, false.</returns>
      <param name="key">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the attribute. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)">
      <summary>Determines whether the specified markup style attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</summary>
      <returns>true if the attribute and its value will be rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, false.</returns>
      <param name="key">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the attribute. </param>
      <param name="value">The value assigned to the style attribute. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
      <summary>Checks an attribute to ensure that it can be rendered in the opening tag of a &lt;form&gt; markup element. </summary>
      <returns>Always true.</returns>
      <param name="attribute">A string that contains the name of the attribute to check. </param>
    </member>
    <member name="P:System.Web.UI.HtmlTextWriter.NewLine">
      <summary>Gets or sets the line terminator string used by the <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <returns>The line terminator string used by the current <see cref="T:System.Web.UI.HtmlTextWriter" />.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
      <summary>Determines whether the specified markup attribute and its value can be rendered to the current markup element.</summary>
      <returns>Always true.</returns>
      <param name="name">A string containing the name of the attribute to render. </param>
      <param name="value">A string containing the value that is assigned to the attribute. </param>
      <param name="key">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
      <summary>Determines whether the specified markup style attribute and its value can be rendered to the current markup element.</summary>
      <returns>Always true.</returns>
      <param name="name">A string containing the name of the style attribute to render. </param>
      <param name="value">A string containing the value that is assigned to the style attribute. </param>
      <param name="key">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the style attribute. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
      <summary>Determines whether the specified markup element will be rendered to the requesting page.</summary>
      <returns>Always true.</returns>
      <param name="name">A string containing the name of the element to render. </param>
      <param name="key">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> associated with the element. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.OutputTabs">
      <summary>Writes a series of tab strings that represent the indentation level for a line of markup characters.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.PopEndTag">
      <summary>Removes the most recently saved markup element from the list of rendered elements.</summary>
      <returns>A <see cref="T:System.String" /> containing the most recently rendered markup element.</returns>
      <exception cref="T:System.InvalidOperationException">The list of rendered elements is empty. </exception>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)">
      <summary>Saves the specified markup element for later use when generating the end tag for a markup element.</summary>
      <param name="endTag">The closing tag of the markup element. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
      <summary>Registers markup attributes, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</summary>
      <param name="name">A string containing the name of the markup attribute to register. </param>
      <param name="key">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that corresponds with the attribute name. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
      <summary>Registers markup style properties, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</summary>
      <param name="name">The string passed from the source file specifying the style name. </param>
      <param name="key">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that corresponds with the specified style. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
      <summary>Registers markup tags, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</summary>
      <param name="name">A string that contains the HTML tag. </param>
      <param name="key">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies which element to render. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
      <summary>Writes any text or spacing that occurs after the content and before the closing tag of the markup element to the markup output stream.</summary>
      <returns>A string that contains the spacing or text to write after the content of the element. </returns>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
      <summary>Writes any spacing or text that occurs after the closing tag for a markup element.</summary>
      <returns>The spacing or text to write after the closing tag of the element. </returns>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
      <summary>Writes any text or spacing before the content and after the opening tag of a markup element.</summary>
      <returns>The text or spacing to write prior to the content of the element. If not overridden, <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> returns null.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
      <summary>Writes any text or spacing that occurs before the opening tag of a markup element.</summary>
      <returns>The text or spacing to write before the markup element opening tag. If not overridden, null.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
      <summary>Writes the opening tag of the specified markup element to the output stream.</summary>
      <param name="tagName">A string containing the name of the markup element for which to render the opening tag.</param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
      <summary>Writes the opening tag of the markup element associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value to the output stream.</summary>
      <param name="tagKey">One of the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> values that defines the opening tag of the markup element to render. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.RenderEndTag">
      <summary>Writes the end tag of a markup element to the output stream.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriter.SelfClosingChars">
      <summary>Represents a space and the self-closing slash mark (/) of a markup tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd">
      <summary>Represents the closing slash mark and right angle bracket (/&gt;) of a self-closing markup element.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
      <summary>Represents the semicolon (;).</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriter.SingleQuoteChar">
      <summary>Represents an apostrophe (').</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriter.SlashChar">
      <summary>Represents the slash mark (/).</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriter.SpaceChar">
      <summary>Represents a space ( ) character.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar">
      <summary>Represents the style equals (:) character used to set style attributes equal to values.</summary>
    </member>
    <member name="P:System.Web.UI.HtmlTextWriter.TagKey">
      <summary>Gets or sets the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value for the specified markup element.</summary>
      <returns>The markup element that is having its opening tag rendered.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property value cannot be set. </exception>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriter.TagLeftChar">
      <summary>Represents the opening angle bracket (&lt;) of a markup tag.</summary>
    </member>
    <member name="P:System.Web.UI.HtmlTextWriter.TagName">
      <summary>Gets or sets the tag name of the markup element being rendered.</summary>
      <returns>The tag name of the markup element being rendered.</returns>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriter.TagRightChar">
      <summary>Represents the closing angle bracket (&gt;) of a markup tag.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.Write(System.Boolean)">
      <summary>Writes the text representation of a Boolean value to the output stream, along with any pending tab spacing.</summary>
      <param name="value">The <see cref="T:System.Boolean" /> to write to the output stream. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.Write(System.Char)">
      <summary>Writes the text representation of a Unicode character to the output stream, along with any pending tab spacing.</summary>
      <param name="value">The Unicode character to write to the output stream. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
      <summary>Writes the text representation of an array of Unicode characters to the output stream, along with any pending tab spacing.</summary>
      <param name="buffer">The array of Unicode characters to write to the output stream. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
      <summary>Writes the text representation of a subarray of Unicode characters to the output stream, along with any pending tab spacing.</summary>
      <param name="buffer">The array of characters from which to write text to the output stream. </param>
      <param name="index">The index location in the array where writing begins. </param>
      <param name="count">The number of characters to write to the output stream. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.Write(System.Double)">
      <summary>Writes the text representation of a double-precision floating-point number to the output stream, along with any pending tab spacing.</summary>
      <param name="value">The double-precision floating-point number to write to the output stream. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.Write(System.Int32)">
      <summary>Writes the text representation of a 32-byte signed integer to the output stream, along with any pending tab spacing.</summary>
      <param name="value">The 32-byte signed integer to write to the output stream. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.Write(System.Int64)">
      <summary>Writes the text representation of a 64-byte signed integer to the output stream, along with any pending tab spacing.</summary>
      <param name="value">The 64-byte signed integer to write to the output stream. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
      <summary>Writes the text representation of an object to the output stream, along with any pending tab spacing.</summary>
      <param name="value">The object to write to the output stream. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.Write(System.Single)">
      <summary>Writes the text representation of a single-precision floating-point number to the output stream, along with any pending tab spacing.</summary>
      <param name="value">The single-precision floating-point number to write to the output stream. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.Write(System.String)">
      <summary>Writes the specified string to the output stream, along with any pending tab spacing.</summary>
      <param name="s">The string to write to the output stream. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)">
      <summary>Writes a tab string and a formatted string to the output stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object)" /> method, along with any pending tab spacing.</summary>
      <param name="format">A string that contains zero or more format items. </param>
      <param name="arg0">An object to format.</param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
      <summary>Writes a formatted string that contains the text representation of two objects to the output stream, along with any pending tab spacing. This method uses the same semantics as the <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> method.</summary>
      <param name="format">A string that contains zero or more format items. </param>
      <param name="arg0">An object to format. </param>
      <param name="arg1">An object to format.</param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
      <summary>Writes a formatted string that contains the text representation of an object array to the output stream, along with any pending tab spacing. This method uses the same semantics as the <see cref="M:System.String.Format(System.String,System.Object[])" /> method.</summary>
      <param name="format">A string that contains zero or more format items. </param>
      <param name="arg">An object array to format. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
      <summary>Writes the specified markup attribute and value to the output stream.</summary>
      <param name="name">The attribute to write to the output stream. </param>
      <param name="value">The value assigned to the attribute. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
      <summary>Writes the specified markup attribute and value to the output stream, and, if specified, writes the value encoded.</summary>
      <param name="name">The markup attribute to write to the output stream. </param>
      <param name="value">The value assigned to the attribute. </param>
      <param name="fEncode">true to encode the attribute and its assigned value; otherwise, false. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
      <summary>Writes any tab spacing and the opening tag of the specified markup element to the output stream.</summary>
      <param name="tagName">The markup element of which to write the opening tag. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.WriteBreak">
      <summary>Writes a &lt;br /&gt; markup element to the output stream. </summary>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
      <summary>Encodes the specified text for the requesting device, and then writes it to the output stream. </summary>
      <param name="text">The text string to encode and write to the output stream. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
      <summary>Encodes the specified URL, and then writes it to the output stream. The URL might include parameters.</summary>
      <param name="url">The URL string to encode and write to the output stream. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)">
      <summary>Encodes the specified URL parameter for the requesting device, and then writes it to the output stream.</summary>
      <param name="urlText">The URL parameter string to encode and write to the output stream. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
      <summary>Writes any tab spacing and the closing tag of the specified markup element.</summary>
      <param name="tagName">The element to write the closing tag for. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)">
      <summary>Writes any tab spacing and the opening tag of the specified markup element to the output stream.</summary>
      <param name="tagName">The element to write to the output stream. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.WriteLine">
      <summary>Writes a line terminator string to the output stream.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)">
      <summary>Writes any pending tab spacing and the text representation of a Boolean value, followed by a line terminator string, to the output stream.</summary>
      <param name="value">The Boolean to write to the output stream. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)">
      <summary>Writes any pending tab spacing and a Unicode character, followed by a line terminator string, to the output stream.</summary>
      <param name="value">The character to write to the output stream. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
      <summary>Writes any pending tab spacing and an array of Unicode characters, followed by a line terminator string, to the output stream.</summary>
      <param name="buffer">The character array to write to the output stream. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
      <summary>Writes any pending tab spacing and a subarray of Unicode characters, followed by a line terminator string, to the output stream.</summary>
      <param name="buffer">The character array from which to write text to the output stream. </param>
      <param name="index">The location in the character array where writing begins. </param>
      <param name="count">The number of characters in the array to write to the output stream. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
      <summary>Writes any pending tab spacing and the text representation of a double-precision floating-point number, followed by a line terminator string, to the output stream.</summary>
      <param name="value">The double-precision floating-point number to write to the output stream. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)">
      <summary>Writes any pending tab spacing and the text representation of a 32-byte signed integer, followed by a line terminator string, to the output stream.</summary>
      <param name="value">The 32-byte signed integer to write to the output stream. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)">
      <summary>Writes any pending tab spacing and the text representation of a 64-byte signed integer, followed by a line terminator string, to the output stream.</summary>
      <param name="value">The 64-byte signed integer to write to the output stream. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)">
      <summary>Writes any pending tab spacing and the text representation of an object, followed by a line terminator string, to the output stream.</summary>
      <param name="value">The object to write to the output stream. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
      <summary>Writes any pending tab spacing and the text representation of a single-precision floating-point number, followed by a line terminator string, to the output stream.</summary>
      <param name="value">The single-precision floating point number to write to the output stream. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)">
      <summary>Writes any pending tab spacing and a text string, followed by a line terminator string, to the output stream.</summary>
      <param name="s">The string to write to the output stream. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
      <summary>Writes any pending tab spacing and a formatted string containing the text representation of an object, followed by a line terminator string, to the output stream. </summary>
      <param name="format">A string containing zero or more format items. </param>
      <param name="arg0">An object to format.</param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
      <summary>Writes any pending tab spacing and a formatted string that contains the text representation of two objects, followed by a line terminator string, to the output stream.</summary>
      <param name="format">A string containing zero or more format items.</param>
      <param name="arg0">An object to format.</param>
      <param name="arg1">An object to format.</param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
      <summary>Writes any pending tab spacing and a formatted string that contains the text representation of an object array, followed by a line terminator string, to the output stream.</summary>
      <param name="format">A string containing zero or more format items.</param>
      <param name="arg">An object array to format. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)">
      <summary>Writes any pending tab spacing and the text representation of a 4-byte unsigned integer, followed by a line terminator string, to the output stream.</summary>
      <param name="value">The 4-byte unsigned integer to write to the output stream. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
      <summary>Writes a string, followed by a line terminator string, to the output stream. This method ignores any specified tab spacing.</summary>
      <param name="s">The string to write to the output stream. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)">
      <summary>Writes the specified style attribute to the output stream.</summary>
      <param name="name">The style attribute to write to the output stream. </param>
      <param name="value">The value assigned to the style attribute. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
      <summary>Writes the specified style attribute and value to the output stream, and encodes the value, if specified.</summary>
      <param name="name">The style attribute to write to the output stream. </param>
      <param name="value">The value assigned to the style attribute. </param>
      <param name="fEncode">true to encode the style attribute and its assigned value; otherwise, false. </param>
    </member>
    <member name="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)">
      <summary>Writes the specified string, encoding it according to URL requirements.</summary>
      <param name="text">The string to encode and write to the output stream. </param>
      <param name="argument">true to encode the string as a part of the parameter section of the URL; false to encode the string as part of the path section of the URL. </param>
    </member>
    <member name="T:System.Web.UI.HtmlTextWriterAttribute">
      <summary>Specifies the HTML attributes that an <see cref="T:System.Web.UI.HtmlTextWriter" /> or <see cref="T:System.Web.UI.Html32TextWriter" /> object writes to the opening tag of an HTML element when a Web request is processed.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Accesskey">
      <summary>Specifies that the HTML accesskey attribute be written to the tag. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Align">
      <summary>Specifies that the HTML align attribute be written to the tag. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Alt">
      <summary>Specifies that the HTML alt attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Background">
      <summary>Specifies that the HTML background attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Bgcolor">
      <summary>Specifies that the HTML bgcolor attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Border">
      <summary>Specifies that the HTML border attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Bordercolor">
      <summary>Specifies that the HTML bordercolor attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Cellpadding">
      <summary>Specifies that the HTML cellpadding attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Cellspacing">
      <summary>Specifies that the HTML cellspacing attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Checked">
      <summary>Specifies that the HTML checked attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Class">
      <summary>Specifies that the HTML class attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Cols">
      <summary>Specifies that the HTML cols attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Colspan">
      <summary>Specifies that the HTML colspan attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Disabled">
      <summary>Specifies that the HTML disabled attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.For">
      <summary>Specifies that the HTML for attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Height">
      <summary>Specifies that the HTML height attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Href">
      <summary>Specifies that the HTML href attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Id">
      <summary>Specifies that the HTML id attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Maxlength">
      <summary>Specifies that the HTML maxlength attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Multiple">
      <summary>Specifies that the HTML multiple attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Name">
      <summary>Specifies that the HTML name attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Nowrap">
      <summary>Specifies that the HTML nowrap attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Onchange">
      <summary>Specifies that the HTML onchange attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Onclick">
      <summary>Specifies that the HTML onclick attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.ReadOnly">
      <summary>Specifies that the HTML readonly attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Rows">
      <summary>Specifies that the HTML rows attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Rowspan">
      <summary>Specifies that the HTML rowspan attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Rules">
      <summary>Specifies that the HTML rules attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Selected">
      <summary>Specifies that the HTML selected attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Size">
      <summary>Specifies that the HTML size attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Src">
      <summary>Specifies that the HTML src attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Style">
      <summary>Specifies that the HTML style attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Tabindex">
      <summary>Specifies that the HTML tabindex attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Target">
      <summary>Specifies that the HTML target attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Title">
      <summary>Specifies that the HTML title attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Type">
      <summary>Specifies that the HTML type attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Valign">
      <summary>Specifies that the HTML valign attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Value">
      <summary>Specifies that the HTML value attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Width">
      <summary>Specifies that the HTML width attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Wrap">
      <summary>Specifies that the HTML wrap attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Abbr">
      <summary>Specifies that the HTML abbr attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.AutoComplete">
      <summary>Specifies that the HTML autocomplete attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Axis">
      <summary>Specifies that the HTML axis attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Content">
      <summary>Specifies that the HTML content attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Coords">
      <summary>Specifies that the HTML coords attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.DesignerRegion">
      <summary>Specifies that the HTML designerregion attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Dir">
      <summary>Specifies that the HTML dir attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Headers">
      <summary>Specifies that the HTML headers attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Longdesc">
      <summary>Specifies that the HTML longdesc attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Rel">
      <summary>Specifies that the HTML rel attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Scope">
      <summary>Specifies that the HTML scope attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Shape">
      <summary>Specifies that the HTML shape attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.Usemap">
      <summary>Specifies that the HTML usemap attribute be written to the tag.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterAttribute.VCardName">
      <summary>Specifies that the HTML vcardname attribute be written to the tag.</summary>
    </member>
    <member name="T:System.Web.UI.HtmlTextWriterStyle">
      <summary>Specifies the HTML styles available to an <see cref="T:System.Web.UI.HtmlTextWriter" /> or <see cref="T:System.Web.UI.Html32TextWriter" /> object output stream.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.BackgroundColor">
      <summary>Specifies the HTML backgroundcolor style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.BackgroundImage">
      <summary>Specifies the HTML backgroundimage style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.BorderCollapse">
      <summary>Specifies the HTML bordercollapse style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.BorderColor">
      <summary>Specifies the HTML bordercolor style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.BorderStyle">
      <summary>Specifies the HTML borderstyle style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.BorderWidth">
      <summary>Specifies the HTML borderwidth style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.Color">
      <summary>Specifies the HTML color style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.FontFamily">
      <summary>Specifies the HTML fontfamily style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.FontSize">
      <summary>Specifies the HTML fontsize style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.FontStyle">
      <summary>Specifies the HTML fontstyle style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.FontWeight">
      <summary>Specifies the HTML fontheight style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.Height">
      <summary>Specifies the HTML height style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.TextDecoration">
      <summary>Specifies the HTML textdecoration style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.Width">
      <summary>Specifies the HTML width style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.ListStyleImage">
      <summary>Specifies the HTML liststyleimage style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.ListStyleType">
      <summary>Specifies the HTML liststyletype style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.Cursor">
      <summary>Specifies the HTML cursor style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.Direction">
      <summary>Specifies the HTML direction style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.Display">
      <summary>Specifies the HTML display style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.Filter">
      <summary>Specifies the HTML filter style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.FontVariant">
      <summary>Specifies the HTML fontvariant style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.Left">
      <summary>Specifies the HTML left style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.Margin">
      <summary>Specifies the HTML margin style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.MarginBottom">
      <summary>Specifies the HTML marginbottom style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.MarginLeft">
      <summary>Specifies the HTML marginleft style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.MarginRight">
      <summary>Specifies the HTML marginright style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.MarginTop">
      <summary>Specifies the HTML margintop style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.Overflow">
      <summary>Specifies the HTML overflow style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.OverflowX">
      <summary>Specifies the HTML overflowx style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.OverflowY">
      <summary>Specifies the HTML overflowy style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.Padding">
      <summary>Specifies the HTML padding style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.PaddingBottom">
      <summary>Specifies the HTML paddingbottom style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.PaddingLeft">
      <summary>Specifies the HTML paddingleft style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.PaddingRight">
      <summary>Specifies the HTML paddingright style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.PaddingTop">
      <summary>Specifies the HTML paddingtop style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.Position">
      <summary>Specifies the HTML position style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.TextAlign">
      <summary>Specifies the HTML textalign style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.VerticalAlign">
      <summary>Specifies the HTML verticalalign style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.TextOverflow">
      <summary>Specifies the HTML textoverflow style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.Top">
      <summary>Specifies the HTML top style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.Visibility">
      <summary>Specifies the HTML visibility style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.WhiteSpace">
      <summary>Specifies the HTML whitespace style.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterStyle.ZIndex">
      <summary>Specifies the HTML zindex style.</summary>
    </member>
    <member name="T:System.Web.UI.HtmlTextWriterTag">
      <summary>Specifies the HTML tags that can be passed to an <see cref="T:System.Web.UI.HtmlTextWriter" /> or <see cref="T:System.Web.UI.Html32TextWriter" /> object output stream.</summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Unknown">
      <summary>The string passed as an HTML tag is not recognized. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.A">
      <summary>The HTML a element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Acronym">
      <summary>The HTML acronym element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Address">
      <summary>The HTML address element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Area">
      <summary>The HTML area element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.B">
      <summary>The HTML b element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Base">
      <summary>The HTML base element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Basefont">
      <summary>The HTML basefont element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Bdo">
      <summary>The HTML bdo element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Bgsound">
      <summary>The HTML bgsound element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Big">
      <summary>The HTML big element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Blockquote">
      <summary>The HTML blockquote element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Body">
      <summary>The HTML body element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Br">
      <summary>The HTML br element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Button">
      <summary>The HTML button element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Caption">
      <summary>The HTML caption element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Center">
      <summary>The HTML center element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Cite">
      <summary>The HTML cite element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Code">
      <summary>The HTML code element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Col">
      <summary>The HTML col element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Colgroup">
      <summary>The HTML colgroup element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Dd">
      <summary>The HTML dd element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Del">
      <summary>The HTML del element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Dfn">
      <summary>The HTML dfn element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Dir">
      <summary>The HTML dir element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Div">
      <summary>The HTML div element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Dl">
      <summary>The HTML dl element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Dt">
      <summary>The HTML dt element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Em">
      <summary>The HTML em element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Embed">
      <summary>The HTML embed element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Fieldset">
      <summary>The HTML fieldset element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Font">
      <summary>The HTML font element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Form">
      <summary>The HTML form element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Frame">
      <summary>The HTML frame element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Frameset">
      <summary>The HTML frameset element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.H1">
      <summary>The HTML H1 element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.H2">
      <summary>The HTML H2 element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.H3">
      <summary>The HTML H3 element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.H4">
      <summary>The HTML H4 element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.H5">
      <summary>The HTML H5 element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.H6">
      <summary>The HTML H6 element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Head">
      <summary>The HTML head element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Hr">
      <summary>The HTML hr element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Html">
      <summary>The HTML html element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.I">
      <summary>The HTML i element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Iframe">
      <summary>The HTML iframe element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Img">
      <summary>The HTML img element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Input">
      <summary>The HTML input element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Ins">
      <summary>The HTML ins element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Isindex">
      <summary>The HTML isindex element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Kbd">
      <summary>The HTML kbd element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Label">
      <summary>The HTML label element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Legend">
      <summary>The HTML legend element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Li">
      <summary>The HTML li element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Link">
      <summary>The HTML link element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Map">
      <summary>The HTML map element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Marquee">
      <summary>The HTML marquee element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Menu">
      <summary>The HTML menu element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Meta">
      <summary>The HTML meta element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Nobr">
      <summary>The HTML nobr element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Noframes">
      <summary>The HTML noframes element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Noscript">
      <summary>The HTML noscript element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Object">
      <summary>The HTML object element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Ol">
      <summary>The HTML ol element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Option">
      <summary>The HTML option element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.P">
      <summary>The HTML p element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Param">
      <summary>The HTML param element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Pre">
      <summary>The HTML pre element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Q">
      <summary>The HTML q element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Rt">
      <summary>The DHTML rt element, which specifies text for the ruby element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Ruby">
      <summary>The DHTML ruby element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.S">
      <summary>The HTML s element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Samp">
      <summary>The HTML samp element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Script">
      <summary>The HTML script element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Select">
      <summary>The HTML select element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Small">
      <summary>The HTML small element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Span">
      <summary>The HTML span element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Strike">
      <summary>The HTML strike element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Strong">
      <summary>The HTML strong element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Style">
      <summary>The HTML style element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Sub">
      <summary>The HTML sub element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Sup">
      <summary>The HTML sup element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Table">
      <summary>The HTML table element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Tbody">
      <summary>The HTML tbody element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Td">
      <summary>The HTML td element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Textarea">
      <summary>The HTML textarea element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Tfoot">
      <summary>The HTML tfoot element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Th">
      <summary>The HTML th element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Thead">
      <summary>The HTML thead element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Title">
      <summary>The HTML title element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Tr">
      <summary>The HTML tr element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Tt">
      <summary>The HTML tt element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.U">
      <summary>The HTML u element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Ul">
      <summary>The HTML ul element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Var">
      <summary>The HTML var element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Wbr">
      <summary>The HTML wbr element. </summary>
    </member>
    <member name="F:System.Web.UI.HtmlTextWriterTag.Xml">
      <summary>The HTML xml element. </summary>
    </member>
    <member name="T:System.Web.UI.IAttributeAccessor">
      <summary>Defines methods used by ASP.NET server controls to provide programmatic access to any attribute declared in the opening tag of a server control.</summary>
    </member>
    <member name="M:System.Web.UI.IAttributeAccessor.GetAttribute(System.String)">
      <summary>When implemented by a class, retrieves the specified attribute property from the server control.</summary>
      <returns>The value of the specified attribute.</returns>
      <param name="key">A <see cref="T:System.String" /> that represents the name of the server control attribute. </param>
    </member>
    <member name="M:System.Web.UI.IAttributeAccessor.SetAttribute(System.String,System.String)">
      <summary>When implemented by a class, designates an attribute and its value to assign to the ASP.NET server control.</summary>
      <param name="key">The name of the attribute to be set. </param>
      <param name="value">The value assigned to the attribute. </param>
    </member>
    <member name="T:System.Web.UI.IAutoFieldGenerator">
      <summary>Defines a method that automatically generates fields for data-bound controls that use ASP.NET Dynamic Data features.</summary>
    </member>
    <member name="M:System.Web.UI.IAutoFieldGenerator.GenerateFields(System.Web.UI.Control)">
      <summary>Automatically generates <see cref="T:System.Web.DynamicData.DynamicField" /> objects based on metadata information for the table.</summary>
      <returns>A collection of <see cref="T:System.Web.DynamicData.DynamicField" /> objects.</returns>
      <param name="control">The data-bound control that will contain the <see cref="T:System.Web.DynamicData.DynamicField" /> objects.</param>
    </member>
    <member name="T:System.Web.UI.IBindableControl">
      <summary>Defines a method that enables field template controls to implement two-way data-binding.</summary>
    </member>
    <member name="M:System.Web.UI.IBindableControl.ExtractValues(System.Collections.Specialized.IOrderedDictionary)">
      <summary>Retrieves a set of name/value pairs to implement two-way data-binding in field template controls.</summary>
      <param name="dictionary">The dictionary that contains the name/value pairs. </param>
    </member>
    <member name="T:System.Web.UI.IBindableTemplate">
      <summary>Provides a way for ASP.NET data-bound controls, such as <see cref="T:System.Web.UI.WebControls.DetailsView" /> and <see cref="T:System.Web.UI.WebControls.FormView" />, to automatically bind to an ASP.NET data source control within templated content sections. </summary>
    </member>
    <member name="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)">
      <summary>When implemented by a class, retrieves a set of name/value pairs for values bound using two-way ASP.NET data-binding syntax within the templated content.</summary>
      <returns>An <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> of name/value pairs. The name represents the name of a control within templated content, and the value is the current value of a property value bound using two-way ASP.NET data-binding syntax.</returns>
      <param name="container">The <see cref="T:System.Web.UI.Control" /> from which to extract name/value pairs, which are passed by the data-bound control to an associated data source control in two-way data-binding scenarios.</param>
    </member>
    <member name="T:System.Web.UI.ICallbackEventHandler">
      <summary>Used to indicate that a control can be the target of a callback event on the server.</summary>
    </member>
    <member name="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult">
      <summary>Returns the results of a callback event that targets a control.</summary>
      <returns>The result of the callback.</returns>
    </member>
    <member name="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)">
      <summary>Processes a callback event that targets a control.</summary>
      <param name="eventArgument">A string that represents an event argument to pass to the event handler.</param>
    </member>
    <member name="T:System.Web.UI.ICheckBoxControl">
      <summary>Defines the property and event a control implements to act as a check box. </summary>
    </member>
    <member name="P:System.Web.UI.ICheckBoxControl.Checked">
      <summary>Gets or sets the value of an <see cref="T:System.Web.UI.ICheckBoxControl" /> control that indicates whether the control is selected.</summary>
      <returns>true if the check box is selected; otherwise, false.</returns>
    </member>
    <member name="E:System.Web.UI.ICheckBoxControl.CheckedChanged">
      <summary>Occurs when the value of the <see cref="P:System.Web.UI.ICheckBoxControl.Checked" /> property changes between posts to the server.</summary>
    </member>
    <member name="T:System.Web.UI.IControlBuilderAccessor">
      <summary>Allows the control serializer to get to the builder for a control.</summary>
    </member>
    <member name="P:System.Web.UI.IControlBuilderAccessor.ControlBuilder">
      <summary>Gets the control builder for this control.</summary>
      <returns>The <see cref="T:System.Web.UI.ControlBuilder" /> that built the control; otherwise, null if no builder was used.</returns>
    </member>
    <member name="T:System.Web.UI.IControlDesignerAccessor">
      <summary>Provides access to a control designer to store temporary design-time data associated with a control.</summary>
    </member>
    <member name="M:System.Web.UI.IControlDesignerAccessor.GetDesignModeState">
      <summary>When implemented, gets the state from the control during use on the design surface.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> of the control state.</returns>
    </member>
    <member name="M:System.Web.UI.IControlDesignerAccessor.SetDesignModeState(System.Collections.IDictionary)">
      <summary>When implemented, sets control state before rendering it on the design surface.</summary>
      <param name="data">The <see cref="T:System.Collections.IDictionary" /> containing the control state.</param>
    </member>
    <member name="M:System.Web.UI.IControlDesignerAccessor.SetOwnerControl(System.Web.UI.Control)">
      <summary>When implemented, specifies the control that acts as the owner to the control implementing this method.</summary>
      <param name="owner">The control to act as owner.</param>
    </member>
    <member name="P:System.Web.UI.IControlDesignerAccessor.UserData">
      <summary>When implemented, gets a collection of information that can be accessed by a control designer.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> containing information about the control.</returns>
    </member>
    <member name="T:System.Web.UI.IDataBindingsAccessor">
      <summary>Allows access to the collection of data-binding expressions on a control at design time.</summary>
    </member>
    <member name="P:System.Web.UI.IDataBindingsAccessor.DataBindings">
      <summary>Gets a collection of all data bindings on the control. This property is read-only.</summary>
      <returns>The collection of data bindings.</returns>
    </member>
    <member name="P:System.Web.UI.IDataBindingsAccessor.HasDataBindings">
      <summary>Gets a value indicating whether the control contains any data-binding logic.</summary>
      <returns>true if the control contains data binding logic.</returns>
    </member>
    <member name="T:System.Web.UI.IDataItemContainer">
      <summary>Enables data-bound control containers to identify a data item object for simplified data-binding operations.</summary>
    </member>
    <member name="P:System.Web.UI.IDataItemContainer.DataItem">
      <summary>When implemented, gets an object that is used in simplified data-binding operations.</summary>
      <returns>An object that represents the value to use when data-binding operations are performed.</returns>
    </member>
    <member name="P:System.Web.UI.IDataItemContainer.DataItemIndex">
      <summary>When implemented, gets the index of the data item bound to a control.</summary>
      <returns>An Integer representing the index of the data item in the data source.</returns>
    </member>
    <member name="P:System.Web.UI.IDataItemContainer.DisplayIndex">
      <summary>When implemented, gets the position of the data item as displayed in a control.</summary>
      <returns>An Integer representing the position of the data item as displayed in a control.</returns>
    </member>
    <member name="T:System.Web.UI.IDataKeysControl">
      <summary>Defines properties that specify how ASP.NET creates client IDs for a data-bound control.</summary>
    </member>
    <member name="P:System.Web.UI.IDataKeysControl.ClientIDRowSuffix">
      <summary>Gets the names of the data fields whose values are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <see cref="P:System.Web.UI.Control.ClientID" /> value by using the <see cref="F:System.Web.UI.ClientIDMode.Predictable" /> algorithm.</summary>
      <returns>A collection of data-field names.</returns>
    </member>
    <member name="P:System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys">
      <summary>Gets a collection of the data values that are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <see cref="P:System.Web.UI.Control.ClientID" /> value.</summary>
      <returns>A collection of data-field values.</returns>
    </member>
    <member name="T:System.Web.UI.IDataSource">
      <summary>Represents an abstract data source that data-bound controls bind to.</summary>
    </member>
    <member name="E:System.Web.UI.IDataSource.DataSourceChanged">
      <summary>Occurs when a data source control has changed in some way that affects data-bound controls. </summary>
    </member>
    <member name="M:System.Web.UI.IDataSource.GetView(System.String)">
      <summary>Gets the named data source view associated with the data source control.</summary>
      <returns>Returns the named <see cref="T:System.Web.UI.DataSourceView" /> associated with the <see cref="T:System.Web.UI.IDataSource" />.</returns>
      <param name="viewName">The name of the view to retrieve. </param>
    </member>
    <member name="M:System.Web.UI.IDataSource.GetViewNames">
      <summary>Gets a collection of names representing the list of view objects associated with the <see cref="T:System.Web.UI.IDataSource" /> interface.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> that contains the names of the views associated with the <see cref="T:System.Web.UI.IDataSource" />.</returns>
    </member>
    <member name="T:System.Web.UI.IDataSourceViewSchemaAccessor">
      <summary>Allows a type converter to access schema information stored on an object.</summary>
    </member>
    <member name="P:System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema">
      <summary>When implemented, gets or sets the schema associated with the object.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the schema.</returns>
    </member>
    <member name="T:System.Web.UI.IDReferencePropertyAttribute">
      <summary>Defines an attribute applied to properties that contain ID references. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.IDReferencePropertyAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.IDReferencePropertyAttribute" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.IDReferencePropertyAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.IDReferencePropertyAttribute" /> class using the specified type.</summary>
      <param name="referencedControlType">A <see cref="T:System.Type" /> that specifies the type of the control represented by the property to which the <see cref="T:System.Web.UI.IDReferencePropertyAttribute" /> is applied.</param>
    </member>
    <member name="M:System.Web.UI.IDReferencePropertyAttribute.Equals(System.Object)">
      <returns>true if <paramref name="obj" /> equals the type and value of this instance; otherwise, false.</returns>
      <param name="obj">An <see cref="T:System.Object" /> to compare with this instance or null. </param>
    </member>
    <member name="M:System.Web.UI.IDReferencePropertyAttribute.GetHashCode">
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="P:System.Web.UI.IDReferencePropertyAttribute.ReferencedControlType">
      <summary>Gets the type of the controls allowed by the property to which the <see cref="T:System.Web.UI.IDReferencePropertyAttribute" /> attribute is applied.</summary>
      <returns>A <see cref="T:System.Type" /> that represents the type of control allowed by the property to which the <see cref="T:System.Web.UI.IDReferencePropertyAttribute" /> is applied. The default is <see cref="T:System.Web.UI.Control" />.</returns>
    </member>
    <member name="T:System.Web.UI.IEditableTextControl">
      <summary>Represents a control that renders text that can be changed by the user.</summary>
    </member>
    <member name="E:System.Web.UI.IEditableTextControl.TextChanged">
      <summary>Occurs when the content of the text changes between posts to the server. </summary>
    </member>
    <member name="T:System.Web.UI.IExpressionsAccessor">
      <summary>Defines the properties a class must implement to support collections of expressions.</summary>
    </member>
    <member name="P:System.Web.UI.IExpressionsAccessor.Expressions">
      <summary>Gets a collection of <see cref="T:System.Web.UI.ExpressionBinding" /> objects.</summary>
      <returns>An <see cref="T:System.Web.UI.ExpressionBindingCollection" /> containing <see cref="T:System.Web.UI.ExpressionBinding" /> objects that represent the properties and expressions for a control.</returns>
    </member>
    <member name="P:System.Web.UI.IExpressionsAccessor.HasExpressions">
      <summary>Gets a value indicating whether the instance of the class that implements this interface has any properties bound by an expression.</summary>
      <returns>true if the control has properties set through expressions; otherwise, false. </returns>
    </member>
    <member name="T:System.Web.UI.IFilterResolutionService">
      <summary>Provides an interface that designer developers can use to evaluate device filters by name.</summary>
    </member>
    <member name="M:System.Web.UI.IFilterResolutionService.CompareFilters(System.String,System.String)">
      <summary>Returns a value indicating whether a parent-child relationship exists between two specified device filters. </summary>
      <returns>1 if the device filter identified by <paramref name="filter1" /> is a parent of the filter identified by <paramref name="filter2" />, -1 if the device filter identified by <paramref name="filter2" /> is a parent of the filter identified by <paramref name="filter1" />, and 0 if there is no parent-child relationship between the two filters.</returns>
      <param name="filter1">A device filter name.</param>
      <param name="filter2">A device filter name</param>
    </member>
    <member name="M:System.Web.UI.IFilterResolutionService.EvaluateFilter(System.String)">
      <summary>Returns a value indicating whether the specified filter is a type of the current filter object.</summary>
      <returns>true if the specified filter is a type applicable to the current filter object; otherwise, false.</returns>
      <param name="filterName">The name of a device filter.</param>
    </member>
    <member name="T:System.Web.UI.IHierarchicalDataSource">
      <summary>Represents a hierarchical data source that hierarchical data-bound controls such as <see cref="T:System.Web.UI.WebControls.TreeView" /> can bind to.</summary>
    </member>
    <member name="E:System.Web.UI.IHierarchicalDataSource.DataSourceChanged">
      <summary>Occurs when the data storage that the <see cref="T:System.Web.UI.IHierarchicalDataSource" /> interface represents has changed.</summary>
    </member>
    <member name="M:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView(System.String)">
      <summary>Gets the view helper object for the <see cref="T:System.Web.UI.IHierarchicalDataSource" /> interface for the specified path.</summary>
      <returns>Returns a <see cref="T:System.Web.UI.HierarchicalDataSourceView" /> that represents a single view of the data at the hierarchical level identified by the <paramref name="viewPath" /> parameter.</returns>
      <param name="viewPath">The hierarchical path of the view to retrieve. </param>
    </member>
    <member name="T:System.Web.UI.IHierarchicalEnumerable">
      <summary>Represents a hierarchical collection that can be enumerated with an <see cref="T:System.Collections.IEnumerator" /> interface. Collections that implement the <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> interface are used by ASP.NET site navigation and data source controls.</summary>
    </member>
    <member name="M:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(System.Object)">
      <summary>Returns a hierarchical data item for the specified enumerated item.</summary>
      <returns>An <see cref="T:System.Web.UI.IHierarchyData" /> instance that represents the <see cref="T:System.Object" /> passed to the <see cref="M:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(System.Object)" /> method.</returns>
      <param name="enumeratedItem">The <see cref="T:System.Object" /> for which to return an <see cref="T:System.Web.UI.IHierarchyData" />. </param>
    </member>
    <member name="T:System.Web.UI.IHierarchyData">
      <summary>Exposes a node of a hierarchical data structure, including the node object and some properties that describe characteristics of the node. Objects that implement the <see cref="T:System.Web.UI.IHierarchyData" /> interface can be contained in <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> collections, and are used by ASP.NET site navigation and data source controls.</summary>
    </member>
    <member name="M:System.Web.UI.IHierarchyData.GetChildren">
      <summary>Gets an enumeration object that represents all the child nodes of the current hierarchical node.</summary>
      <returns>An <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> collection of child nodes of the current hierarchical node.</returns>
    </member>
    <member name="M:System.Web.UI.IHierarchyData.GetParent">
      <summary>Gets an <see cref="T:System.Web.UI.IHierarchyData" /> object that represents the parent node of the current hierarchical node.</summary>
      <returns>An <see cref="T:System.Web.UI.IHierarchyData" /> object that represents the parent node of the current hierarchical node.</returns>
    </member>
    <member name="P:System.Web.UI.IHierarchyData.HasChildren">
      <summary>Indicates whether the hierarchical data node that the <see cref="T:System.Web.UI.IHierarchyData" /> object represents has any child nodes.</summary>
      <returns>true if the current node has child nodes; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.IHierarchyData.Item">
      <summary>Gets the hierarchical data node that the <see cref="T:System.Web.UI.IHierarchyData" /> object represents.</summary>
      <returns>An <see cref="T:System.Object" /> hierarchical data node object.</returns>
    </member>
    <member name="P:System.Web.UI.IHierarchyData.Path">
      <summary>Gets the hierarchical path of the node.</summary>
      <returns>A <see cref="T:System.String" /> that identifies the hierarchical path relative to the current node.</returns>
    </member>
    <member name="P:System.Web.UI.IHierarchyData.Type">
      <summary>Gets the name of the type of <see cref="T:System.Object" /> contained in the <see cref="P:System.Web.UI.IHierarchyData.Item" /> property.</summary>
      <returns>The name of the type of object that the <see cref="T:System.Web.UI.IHierarchyData" /> object represents.</returns>
    </member>
    <member name="T:System.Web.UI.ImageClickEventArgs">
      <summary>Provides data for any events that occur when a user clicks an image-based ASP.NET server control, such as the <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> or <see cref="T:System.Web.UI.WebControls.ImageButton" /> server controls. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.ImageClickEventArgs.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ImageClickEventArgs" /> class.</summary>
      <param name="x">The x-coordinate where the user clicked an image-based ASP.NET server control. </param>
      <param name="y">The y-coordinate where the user clicked an image-based ASP.NET server control. </param>
    </member>
    <member name="F:System.Web.UI.ImageClickEventArgs.X">
      <summary>An integer that represents the x-coordinate where a user clicked an image-based ASP.NET server control.</summary>
    </member>
    <member name="F:System.Web.UI.ImageClickEventArgs.Y">
      <summary>An integer that represents the y-coordinate where a user clicked an image-based ASP.NET server control.</summary>
    </member>
    <member name="T:System.Web.UI.ImageClickEventHandler">
      <summary>Represents the method that handles any events that are raised when a user clicks an image-based ASP.NET server control.</summary>
      <param name="sender">The server control that is the source of the event. </param>
      <param name="e">An <see cref="T:System.Web.UI.ImageClickEventArgs" /> that contains event data. </param>
    </member>
    <member name="T:System.Web.UI.INamingContainer">
      <summary>Identifies a container control that creates a new ID namespace within a <see cref="T:System.Web.UI.Page" /> object's control hierarchy. This is a marker interface only.</summary>
    </member>
    <member name="T:System.Web.UI.INavigateUIData">
      <summary>Provides an interface that classes implement to provide navigation user interface data and values to navigation controls. </summary>
    </member>
    <member name="P:System.Web.UI.INavigateUIData.Description">
      <summary>Gets text that represents the description of a navigation node of a navigation control.</summary>
      <returns>Text that is the description of a node of a navigation control; otherwise, null.</returns>
    </member>
    <member name="P:System.Web.UI.INavigateUIData.Name">
      <summary>Gets the text that represents the name of a navigation node of a navigation control.</summary>
      <returns>Text that represents the name of a node of a navigation control; otherwise, null.</returns>
    </member>
    <member name="P:System.Web.UI.INavigateUIData.NavigateUrl">
      <summary>Gets the URL to navigate to when the navigation node is clicked.</summary>
      <returns>The URL to navigate to when the node is clicked; otherwise, null.</returns>
    </member>
    <member name="P:System.Web.UI.INavigateUIData.Value">
      <summary>Gets a non-displayed value that is used to store any additional data about the navigation node.</summary>
      <returns>A value that is not displayed and is used to store additional data about the navigation node; otherwise, null.</returns>
    </member>
    <member name="T:System.Web.UI.IndexedString">
      <summary>Provides a utility string class that is used by the <see cref="T:System.Web.UI.ObjectStateFormatter" /> class to optimize object graph serialization. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.IndexedString.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.IndexedString" /> class. </summary>
      <param name="s">The string.</param>
      <exception cref="T:System.ArgumentNullException">The string parameter passed to the constructor is null or <see cref="F:System.String.Empty" />.</exception>
    </member>
    <member name="P:System.Web.UI.IndexedString.Value">
      <summary>Gets the string associated with the <see cref="T:System.Web.UI.IndexedString" /> object.</summary>
      <returns>An initialized string.</returns>
    </member>
    <member name="T:System.Web.UI.IParserAccessor">
      <summary>Defines the method that ASP.NET server controls must implement to recognize when elements, either HTML or XML, are parsed.</summary>
    </member>
    <member name="M:System.Web.UI.IParserAccessor.AddParsedSubObject(System.Object)">
      <summary>When implemented by an ASP.NET server control, notifies the server control that an element, either XML or HTML, was parsed.</summary>
      <param name="obj">The <see cref="T:System.Object" /> that was parsed. </param>
    </member>
    <member name="T:System.Web.UI.IPostBackDataHandler">
      <summary>Defines methods that ASP.NET server controls must implement to automatically load postback data.</summary>
    </member>
    <member name="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>When implemented by a class, processes postback data for an ASP.NET server control.</summary>
      <returns>true if the server control's state changes as a result of the postback; otherwise, false.</returns>
      <param name="postDataKey">The key identifier for the control. </param>
      <param name="postCollection">The collection of all incoming name values. </param>
    </member>
    <member name="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <summary>When implemented by a class, signals the server control to notify the ASP.NET application that the state of the control has changed.</summary>
    </member>
    <member name="T:System.Web.UI.IPostBackEventHandler">
      <summary>Defines the method ASP.NET server controls must implement to handle postback events.</summary>
    </member>
    <member name="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)">
      <summary>When implemented by a class, enables a server control to process an event raised when a form is posted to the server.</summary>
      <param name="eventArgument">A <see cref="T:System.String" /> that represents an optional event argument to be passed to the event handler. </param>
    </member>
    <member name="T:System.Web.UI.IResourceUrlGenerator">
      <summary>Defines the method that a designer-host must implement to provide URL reference look-up for embedded resources.</summary>
    </member>
    <member name="M:System.Web.UI.IResourceUrlGenerator.GetResourceUrl(System.Type,System.String)">
      <summary>Returns a URL reference to an embedded resource in an assembly that is used at design time.</summary>
      <returns>The URL reference to the resource.</returns>
      <param name="type">The type in the assembly that contains the embedded resource.</param>
      <param name="resourceName">The name of the resource to retrieve.</param>
    </member>
    <member name="T:System.Web.UI.IStateFormatter">
      <summary>Defines methods that a type implements to serialize and deserialize an object graph. </summary>
    </member>
    <member name="M:System.Web.UI.IStateFormatter.Deserialize(System.String)">
      <summary>Deserializes an object state graph from its serialized string form.</summary>
      <returns>An object that represents the state of an ASP.NET server control.</returns>
      <param name="serializedState">A string that the <see cref="T:System.Web.UI.IStateFormatter" /> deserializes into an initialized object.</param>
    </member>
    <member name="M:System.Web.UI.IStateFormatter.Serialize(System.Object)">
      <summary>Serializes ASP.NET Web server control state to string form.</summary>
      <returns>A string that represents a Web server control's view state. </returns>
      <param name="state">The object that represents the view state of the Web server control to serialize to string form.</param>
    </member>
    <member name="T:System.Web.UI.IStateManager">
      <summary>Defines the properties and methods any class must implement to support view state management for a server control.</summary>
    </member>
    <member name="P:System.Web.UI.IStateManager.IsTrackingViewState">
      <summary>When implemented by a class, gets a value indicating whether a server control is tracking its view state changes.</summary>
      <returns>true if a server control is tracking its view state changes; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.IStateManager.LoadViewState(System.Object)">
      <summary>When implemented by a class, loads the server control's previously saved view state to the control.</summary>
      <param name="state">An <see cref="T:System.Object" /> that contains the saved view state values for the control. </param>
    </member>
    <member name="M:System.Web.UI.IStateManager.SaveViewState">
      <summary>When implemented by a class, saves the changes to a server control's view state to an <see cref="T:System.Object" />.</summary>
      <returns>The <see cref="T:System.Object" /> that contains the view state changes.</returns>
    </member>
    <member name="M:System.Web.UI.IStateManager.TrackViewState">
      <summary>When implemented by a class, instructs the server control to track changes to its view state.</summary>
    </member>
    <member name="T:System.Web.UI.IStyleSheet">
      <summary>Defines the methods that a class must implement in order to support the creation of style rules.</summary>
    </member>
    <member name="M:System.Web.UI.IStyleSheet.CreateStyleRule(System.Web.UI.WebControls.Style,System.Web.UI.IUrlResolutionService,System.String)">
      <summary>When implemented by a class, creates a style rule for the specified document language element type, or selector.</summary>
      <param name="style">The style rule to be added to the embedded style sheet.</param>
      <param name="urlResolver">An <see cref="T:System.Web.UI.IUrlResolutionService" />-implemented object that contains the context information for the current location (URL).</param>
      <param name="selector">The part of the HTML page affected by the style.</param>
    </member>
    <member name="M:System.Web.UI.IStyleSheet.RegisterStyle(System.Web.UI.WebControls.Style,System.Web.UI.IUrlResolutionService)">
      <summary>When implemented by a class, adds a new style rule to the embedded style sheet in the &lt;head&gt; section of a Web page.</summary>
      <param name="style">The style rule to be added to the embedded style sheet.</param>
      <param name="urlResolver">An <see cref="T:System.Web.UI.IUrlResolutionService" />-implemented object that contains the context information for the current location (URL).</param>
    </member>
    <member name="T:System.Web.UI.ITemplate">
      <summary>Defines the behavior for populating a templated ASP.NET server control with child controls. The child controls represent the inline templates defined on the page.</summary>
    </member>
    <member name="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)">
      <summary>When implemented by a class, defines the <see cref="T:System.Web.UI.Control" /> object that child controls and templates belong to. These child controls are in turn defined within an inline template.</summary>
      <param name="container">The <see cref="T:System.Web.UI.Control" /> object to contain the instances of controls from the inline template. </param>
    </member>
    <member name="T:System.Web.UI.ITextControl">
      <summary>Defines the interface a control implements to get or set its text content.</summary>
    </member>
    <member name="P:System.Web.UI.ITextControl.Text">
      <summary>Gets or sets the text content of a control.</summary>
      <returns>The text content of a control.</returns>
    </member>
    <member name="T:System.Web.UI.IThemeResolutionService">
      <summary>Provides an interface that designer tool developers can use to supply a set of <see cref="T:System.Web.UI.ThemeProvider" /> objects, which can be used to apply themes and control skins to controls in a design-time environment.</summary>
    </member>
    <member name="M:System.Web.UI.IThemeResolutionService.GetAllThemeProviders">
      <summary>Gets an <see cref="T:System.Array" /> of <see cref="T:System.Web.UI.ThemeProvider" /> objects.</summary>
      <returns>An <see cref="T:System.Array" /> of <see cref="T:System.Web.UI.ThemeProvider" /> objects associated with the current <see cref="T:System.Web.UI.IThemeResolutionService" />.</returns>
    </member>
    <member name="M:System.Web.UI.IThemeResolutionService.GetStylesheetThemeProvider">
      <summary>Gets a <see cref="T:System.Web.UI.ThemeProvider" /> object that represents the customization theme from a style sheet.</summary>
      <returns>A <see cref="T:System.Web.UI.ThemeProvider" /> that represents the page theme that is applied to a control built by the <see cref="T:System.Web.UI.ControlBuilder" />.</returns>
    </member>
    <member name="M:System.Web.UI.IThemeResolutionService.GetThemeProvider">
      <summary>Gets a <see cref="T:System.Web.UI.ThemeProvider" /> object that represents the customization theme on an ASP.NET page. </summary>
      <returns>A <see cref="T:System.Web.UI.ThemeProvider" /> that represents the page theme that is applied to a control built by the <see cref="T:System.Web.UI.ControlBuilder" />.</returns>
    </member>
    <member name="T:System.Web.UI.IUrlResolutionService">
      <summary>Defines a service implemented by objects to resolve relative URLs based on contextual information.</summary>
    </member>
    <member name="M:System.Web.UI.IUrlResolutionService.ResolveClientUrl(System.String)">
      <summary>Returns a resolved URL that is suitable for use by the client.</summary>
      <returns>A <see cref="T:System.String" /> containing the resolved URL.</returns>
      <param name="relativeUrl">A URL relative to the current page.</param>
    </member>
    <member name="T:System.Web.UI.IUserControlDesignerAccessor">
      <summary>Defines the properties that allow the designer to access information about a user control at design time.</summary>
    </member>
    <member name="P:System.Web.UI.IUserControlDesignerAccessor.InnerText">
      <summary>When implemented, gets or sets text between the opening and closing tags of a user control.</summary>
      <returns>The text placed between the opening and closing tags of a user control.</returns>
    </member>
    <member name="P:System.Web.UI.IUserControlDesignerAccessor.TagName">
      <summary>When implemented, gets or sets the full tag name of the user control.</summary>
      <returns>The full tag name of the user control.</returns>
    </member>
    <member name="T:System.Web.UI.IUserControlTypeResolutionService">
      <summary>Defines the method a class must implement to return a control's type for a specified tag prefix and tag name.</summary>
    </member>
    <member name="M:System.Web.UI.IUserControlTypeResolutionService.GetType(System.String,System.String)">
      <summary>Retrieves a type based on a parsed ASP.NET tag prefix and the name of the tag.</summary>
      <returns>A <see cref="T:System.Type" /> that represents the type of control the prefix and tag identify.</returns>
      <param name="tagPrefix">The parsed prefix of an ASP.NET tag.</param>
      <param name="tagName">The name of the parsed ASP.NET tag.</param>
    </member>
    <member name="T:System.Web.UI.IValidator">
      <summary>Defines the properties and methods that objects that participate in Web Forms validation must implement.</summary>
    </member>
    <member name="P:System.Web.UI.IValidator.ErrorMessage">
      <summary>When implemented by a class, gets or sets the error message text generated when the condition being validated fails.</summary>
      <returns>The error message to generate.</returns>
    </member>
    <member name="P:System.Web.UI.IValidator.IsValid">
      <summary>When implemented by a class, gets or sets a value indicating whether the user-entered content in the specified control passes validation.</summary>
      <returns>true if the content is valid; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.IValidator.Validate">
      <summary>When implemented by a class, evaluates the condition it checks and updates the <see cref="P:System.Web.UI.IValidator.IsValid" /> property.</summary>
    </member>
    <member name="T:System.Web.UI.ListSourceHelper">
      <summary>Used by data source controls when implementing the members defined by the <see cref="T:System.ComponentModel.IListSource" /> interface. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.ListSourceHelper.ContainsListCollection(System.Web.UI.IDataSource)">
      <summary>Indicates whether the specified data source control contains a collection of data source view objects.</summary>
      <returns>true if the data source control contains a collection of data source view objects; otherwise, false.</returns>
      <param name="dataSource">An <see cref="T:System.Web.UI.IDataSource" /> that specifies the data source control to test for associated data source view objects.</param>
    </member>
    <member name="M:System.Web.UI.ListSourceHelper.GetList(System.Web.UI.IDataSource)">
      <summary>Retrieves an <see cref="T:System.Collections.IList" /> collection of data source objects.</summary>
      <returns>An <see cref="T:System.Collections.IList" /> of one <see cref="T:System.Web.UI.IDataSource" />, if the <see cref="T:System.Web.UI.IDataSource" /> has one or more associated <see cref="T:System.Web.UI.DataSourceView" /> objects; otherwise, returns null. </returns>
      <param name="dataSource">An <see cref="T:System.Web.UI.IDataSource" /> that contains one or more associated <see cref="T:System.Web.UI.DataSourceView" /> objects, which are retrieved by a call to <see cref="M:System.Web.UI.DataSourceControl.GetViewNames" />.</param>
    </member>
    <member name="T:System.Web.UI.LiteralControl">
      <summary>Represents HTML elements, text, and any other strings in an ASP.NET page that do not require processing on the server.</summary>
    </member>
    <member name="M:System.Web.UI.LiteralControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.LiteralControl" /> class that contains a literal string to be rendered on the requested ASP.NET page.</summary>
    </member>
    <member name="M:System.Web.UI.LiteralControl.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.LiteralControl" /> class with the specified text.</summary>
      <param name="text">The text to be rendered on the requested Web page. </param>
    </member>
    <member name="M:System.Web.UI.LiteralControl.CreateControlCollection">
      <summary>Creates an <see cref="T:System.Web.UI.EmptyControlCollection" /> object for the current instance of the <see cref="T:System.Web.UI.LiteralControl" /> class.</summary>
      <returns>The <see cref="T:System.Web.UI.EmptyControlCollection" /> for the current control.</returns>
    </member>
    <member name="M:System.Web.UI.LiteralControl.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Writes the content of the <see cref="T:System.Web.UI.LiteralControl" /> object to the ASP.NET page.</summary>
      <param name="output">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that renders the content of the <see cref="T:System.Web.UI.LiteralControl" /> to the requesting client. </param>
    </member>
    <member name="P:System.Web.UI.LiteralControl.Text">
      <summary>Gets or sets the text content of the <see cref="T:System.Web.UI.LiteralControl" /> object.</summary>
      <returns>A <see cref="T:System.String" /> that represents the text content of the literal control. The default is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="T:System.Web.UI.LosFormatter">
      <summary>Serializes the view state for a Web Forms page. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.LosFormatter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.LosFormatter" /> class using default values.</summary>
    </member>
    <member name="M:System.Web.UI.LosFormatter.#ctor(System.Boolean,System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.LosFormatter" /> class using the specified enable flag and machine authentication code (MAC) key modifier.</summary>
      <param name="enableMac">true to enable view-state MAC; otherwise, false.</param>
      <param name="macKeyModifier">The modifier for the MAC key.</param>
    </member>
    <member name="M:System.Web.UI.LosFormatter.#ctor(System.Boolean,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.LosFormatter" /> class using the specified enable flag and machine authentication code (MAC) key modifier.</summary>
      <param name="enableMac">true to enable view-state MAC; otherwise, false. </param>
      <param name="macKeyModifier">The modifier for the MAC key. </param>
    </member>
    <member name="M:System.Web.UI.LosFormatter.Deserialize(System.IO.Stream)">
      <summary>Transforms the view-state value contained in a <see cref="T:System.IO.Stream" /> object to a limited object serialization (LOS)-formatted object.</summary>
      <returns>A LOS-formatted object.</returns>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the view-state value to transform. </param>
    </member>
    <member name="M:System.Web.UI.LosFormatter.Deserialize(System.IO.TextReader)">
      <summary>Transforms the view-state value contained in a <see cref="T:System.IO.TextReader" /> object to a limited object serialization (LOS)-formatted object.</summary>
      <returns>A LOS-formatted object.</returns>
      <param name="input">A <see cref="T:System.IO.TextReader" /> that contains the view-state value to transform. </param>
    </member>
    <member name="M:System.Web.UI.LosFormatter.Deserialize(System.String)">
      <summary>Transforms the specified view-state value to a limited object serialization (LOS)-formatted object.</summary>
      <returns>A LOS-formatted object.</returns>
      <param name="input">The view-state value to transform. </param>
      <exception cref="T:System.Web.HttpException">The view state is invalid. </exception>
    </member>
    <member name="M:System.Web.UI.LosFormatter.Serialize(System.IO.Stream,System.Object)">
      <summary>Transforms a limited object serialization (LOS)-formatted object into a view-state value and places the results into a <see cref="T:System.IO.Stream" /> object.</summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> to receive the transformed value. </param>
      <param name="value">The LOS-formatted object to transform into a view-state value. </param>
    </member>
    <member name="M:System.Web.UI.LosFormatter.Serialize(System.IO.TextWriter,System.Object)">
      <summary>Transforms a limited object serialization (LOS)-formatted object into a view-state value and places the results into a <see cref="T:System.IO.TextWriter" /> object.</summary>
      <param name="output">The <see cref="T:System.IO.TextWriter" /> to receive the transformed value. </param>
      <param name="value">The LOS-formatted object to transform into a view-state value. </param>
    </member>
    <member name="T:System.Web.UI.MasterPage">
      <summary>Acts as a template and merging container for pages that are composed only of <see cref="T:System.Web.UI.WebControls.Content" /> controls and their respective child controls.</summary>
    </member>
    <member name="M:System.Web.UI.MasterPage.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.MasterPage" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.MasterPage.AddContentTemplate(System.String,System.Web.UI.ITemplate)">
      <summary>Adds a <see cref="T:System.Web.UI.WebControls.Content" /> control to the <see cref="P:System.Web.UI.MasterPage.ContentTemplates" /> dictionary.</summary>
      <param name="templateName">A unique name for the <see cref="T:System.Web.UI.WebControls.Content" />.</param>
      <param name="template">The <see cref="T:System.Web.UI.WebControls.Content" />.</param>
      <exception cref="T:System.Web.HttpException">A <see cref="T:System.Web.UI.WebControls.Content" /> control with the same name already exists in the <see cref="P:System.Web.UI.MasterPage.ContentTemplates" /> dictionary.</exception>
    </member>
    <member name="P:System.Web.UI.MasterPage.ContentPlaceHolders">
      <summary>Gets a list of <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" /> controls that the master page uses to define different content regions.</summary>
      <returns>An <see cref="T:System.Collections.IList" /> of <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" /> controls that the master page uses as placeholders for <see cref="T:System.Web.UI.WebControls.Content" /> controls found in content pages.</returns>
    </member>
    <member name="P:System.Web.UI.MasterPage.ContentTemplates">
      <summary>Gets a list of content controls that are associated with the master page. </summary>
      <returns>An <see cref="T:System.Collections.IList" /> of content controls associated with the master page. </returns>
    </member>
    <member name="M:System.Web.UI.MasterPage.InstantiateInContentPlaceHolder(System.Web.UI.Control,System.Web.UI.ITemplate)">
      <summary>Provides a method to set the current template control to a page that owns the master page.</summary>
      <param name="contentPlaceHolder">The control that represents the container of the content.</param>
      <param name="template">The <see cref="T:System.Web.UI.WebControls.Content" /> instance to use.</param>
    </member>
    <member name="P:System.Web.UI.MasterPage.Master">
      <summary>Gets the parent master page of the current master in nested master pages scenarios.</summary>
      <returns>The master page that is the parent of the current master page; otherwise, null, if the current master page has no parent.</returns>
    </member>
    <member name="P:System.Web.UI.MasterPage.MasterPageFile">
      <summary>Gets or sets the name of the master page that contains the current content.</summary>
      <returns>The name of the master page that is the parent of the current master page; otherwise, null, if the current master page has no parent.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.MasterPage.MasterPageFile" /> property can only be set in or before the <see cref="E:System.Web.UI.Page.PreInit" /> event.</exception>
    </member>
    <member name="T:System.Web.UI.MasterPageControlBuilder">
      <summary>Acts as a merging class and container for content pages that are composed only of <see cref="T:System.Web.UI.WebControls.Content" /> controls and their respective child controls. </summary>
    </member>
    <member name="M:System.Web.UI.MasterPageControlBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.MasterPageControlBuilder" /> class. </summary>
    </member>
    <member name="T:System.Web.UI.NonVisualControlAttribute">
      <summary>Defines the attribute that indicates whether a control is treated as a visual or non-visual control during design time. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.NonVisualControlAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.NonVisualControlAttribute" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.NonVisualControlAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.NonVisualControlAttribute" /> class, using the specified Boolean value to determine whether the attribute represents a visual or non-visual control. </summary>
      <param name="nonVisual">true to initialize the <see cref="T:System.Web.UI.NonVisualControlAttribute" /> to represent a Web control that is not rendered to the client at run time; otherwise, false.</param>
    </member>
    <member name="F:System.Web.UI.NonVisualControlAttribute.Default">
      <summary>Returns a <see cref="T:System.Web.UI.NonVisualControlAttribute" /> instance that represents the application-defined default value of the attribute. This field is read-only.</summary>
    </member>
    <member name="M:System.Web.UI.NonVisualControlAttribute.Equals(System.Object)">
      <returns>true if <paramref name="obj" /> equals the type and value of this instance; otherwise, false.</returns>
      <param name="obj">An <see cref="T:System.Object" /> to compare with this instance or null. </param>
    </member>
    <member name="M:System.Web.UI.NonVisualControlAttribute.GetHashCode">
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:System.Web.UI.NonVisualControlAttribute.IsDefaultAttribute">
      <summary>Returns a value indicating whether the current instance is equivalent to a default instance of the <see cref="T:System.Web.UI.NonVisualControlAttribute" /> class.</summary>
      <returns>true if the current instance is equivalent to a <see cref="F:System.Web.UI.NonVisualControlAttribute.Default" /> instance of the class; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.NonVisualControlAttribute.IsNonVisual">
      <summary>Gets a value indicating whether the control is non-visual.</summary>
      <returns>true if the control has been marked as non-visual; otherwise, false. </returns>
    </member>
    <member name="F:System.Web.UI.NonVisualControlAttribute.NonVisual">
      <summary>Returns a <see cref="T:System.Web.UI.NonVisualControlAttribute" /> instance that is applied to a Web control to be treated as a non-visual control during design time. This field is read-only.</summary>
    </member>
    <member name="F:System.Web.UI.NonVisualControlAttribute.Visual">
      <summary>Gets a <see cref="T:System.Web.UI.NonVisualControlAttribute" /> instance that is applied to a Web control to be treated as a visual control during design time. </summary>
    </member>
    <member name="T:System.Web.UI.ObjectConverter">
      <summary>Converts an object from one object type to another object type. This class is obsolete. Use the <see cref="T:System.Convert" /> class and the <see cref="M:System.String.Format(System.String,System.Object)" /> method instead.</summary>
    </member>
    <member name="M:System.Web.UI.ObjectConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ObjectConverter" /> class. This class is obsolete. Use the <see cref="T:System.Convert" /> class and the <see cref="M:System.String.Format(System.String,System.Object)" /> method instead.</summary>
    </member>
    <member name="M:System.Web.UI.ObjectConverter.ConvertValue(System.Object,System.Type,System.String)">
      <summary>Converts an object from one object type to another object type. This class is obsolete. Use the <see cref="T:System.Convert" /> class and the <see cref="M:System.String.Format(System.String,System.Object)" /> method instead.</summary>
      <returns>The converted object.</returns>
      <param name="value">The object to convert.</param>
      <param name="toType">The <see cref="T:System.Type" /> to convert <paramref name="value" /> to.</param>
      <param name="formatString">The format string to apply during conversion.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> cannot be converted to type <paramref name="toType" /> with this method.</exception>
    </member>
    <member name="T:System.Web.UI.ObjectPersistData">
      <summary>During the build process, retains information about property entries.</summary>
    </member>
    <member name="M:System.Web.UI.ObjectPersistData.#ctor(System.Web.UI.ControlBuilder,System.Collections.IDictionary)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ObjectPersistData" /> class. </summary>
      <param name="builder">The object for building the control.</param>
      <param name="builtObjects">A collection of objects that have been built by this builder.</param>
    </member>
    <member name="M:System.Web.UI.ObjectPersistData.AddToObjectControlBuilderTable(System.Collections.IDictionary)">
      <summary>Adds built objects to a collection.</summary>
      <param name="table">A collection for the control builder.</param>
    </member>
    <member name="P:System.Web.UI.ObjectPersistData.AllPropertyEntries">
      <summary>Gets all the property entries for the control being built.</summary>
      <returns>An <see cref="T:System.Collections.ArrayList" /> containing the property entries for the control.</returns>
    </member>
    <member name="P:System.Web.UI.ObjectPersistData.BuiltObjects">
      <summary>Gets a collection of the objects that have been built by the control builder.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> containing the items that have been built by the control builder.</returns>
    </member>
    <member name="P:System.Web.UI.ObjectPersistData.CollectionItems">
      <summary>Gets items that are collection types.</summary>
      <returns>An <see cref="T:System.Collections.ArrayList" /> containing items of type <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Web.UI.ObjectPersistData.EventEntries">
      <summary>Gets event entries for the control being built.</summary>
      <returns>An <see cref="T:System.Collections.ArrayList" /> containing the event entries.</returns>
    </member>
    <member name="M:System.Web.UI.ObjectPersistData.GetFilteredProperties(System.String)">
      <summary>Gets the property entries with the specified filter.</summary>
      <returns>The property entries with the specified filter.</returns>
      <param name="filter">The <see cref="P:System.Web.UI.PropertyEntry.Filter" /> on an expression.</param>
    </member>
    <member name="M:System.Web.UI.ObjectPersistData.GetFilteredProperty(System.String,System.String)">
      <summary>Gets all property entries for the specified filter and property name.</summary>
      <returns>All property entries for the specified filter and property name.</returns>
      <param name="filter">The <see cref="P:System.Web.UI.PropertyEntry.Filter" /> on an expression.</param>
      <param name="name">The <see cref="P:System.Web.UI.PropertyEntry.Name" /> on an expression.</param>
    </member>
    <member name="M:System.Web.UI.ObjectPersistData.GetPropertyAllFilters(System.String)">
      <summary>Returns all filtered property entries for a specified property name.</summary>
      <returns>All filtered property entries for a specified property name.</returns>
      <param name="name">The <see cref="P:System.Web.UI.PropertyEntry.Name" /> on an expression.</param>
    </member>
    <member name="P:System.Web.UI.ObjectPersistData.IsCollection">
      <summary>Gets a value that indicates whether the persisted data is for a collection.</summary>
      <returns>true if this persisted data is for a collection; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.ObjectPersistData.Localize">
      <summary>Gets a value indicating whether the control created by the control builder object is localized.</summary>
      <returns>true if the control created by the control builder object is localized; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.ObjectPersistData.ObjectType">
      <summary>Gets the type of the object associated with the persisted properties.</summary>
      <returns>The <see cref="T:System.Type" /> of the object being built.</returns>
    </member>
    <member name="P:System.Web.UI.ObjectPersistData.ResourceKey">
      <summary>Gets the resource key for the control builder object.</summary>
      <returns>A <see cref="T:System.String" /> representing the resource key for the control builder.</returns>
    </member>
    <member name="T:System.Web.UI.ObjectStateFormatter">
      <summary>Serializes and deserializes object graphs that represent the state of an object. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.ObjectStateFormatter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ObjectStateFormatter" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.ObjectStateFormatter.Deserialize(System.IO.Stream)">
      <summary>Deserializes an object state graph from its binary-serialized form that is contained in the specified <see cref="T:System.IO.Stream" /> object.</summary>
      <returns>An object that represents a deserialized object state graph.</returns>
      <param name="inputStream">A <see cref="T:System.IO.Stream" /> that the <see cref="T:System.Web.UI.ObjectStateFormatter" /> deserializes into an initialized object. </param>
      <exception cref="T:System.ArgumentNullException">The specified <paramref name="inputStream" /> is null.</exception>
      <exception cref="T:System.ArgumentException">An exception occurs during deserialization of the <see cref="T:System.IO.Stream" />. The exception message is appended to the message of the <see cref="T:System.ArgumentException" />.</exception>
    </member>
    <member name="M:System.Web.UI.ObjectStateFormatter.Deserialize(System.String)">
      <summary>Deserializes an object state graph from its serialized base64-encoded string form.</summary>
      <returns>An object that represents a deserialized object state graph.</returns>
      <param name="inputString">A string that the <see cref="T:System.Web.UI.ObjectStateFormatter" /> deserializes into an initialized object.</param>
      <exception cref="T:System.ArgumentNullException">The specified <paramref name="inputString" /> is null or has a <see cref="P:System.String.Length" /> of 0.</exception>
      <exception cref="T:System.ArgumentException">The serialized data is invalid.</exception>
      <exception cref="T:System.Web.HttpException">The machine authentication code (MAC) validation check that is performed when deserializing view state fails.</exception>
    </member>
    <member name="M:System.Web.UI.ObjectStateFormatter.Serialize(System.IO.Stream,System.Object)">
      <summary>Serializes an object state graph to the specified <see cref="T:System.IO.Stream" /> object.</summary>
      <param name="outputStream">A <see cref="T:System.IO.Stream" /> to which the <see cref="T:System.Web.UI.ObjectStateFormatter" /> serializes the state of the specified object.</param>
      <param name="stateGraph">The object to serialize.</param>
      <exception cref="T:System.ArgumentNullException">The specified <paramref name="inputStream" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.ObjectStateFormatter.Serialize(System.Object)">
      <summary>Serializes an object state graph to a base64-encoded string.</summary>
      <returns>A base-64 encoded string that represents the serialized object state of the <paramref name="stateGraph" /> parameter.</returns>
      <param name="stateGraph">The object to serialize.</param>
    </member>
    <member name="P:System.Web.UI.ObjectStateFormatter.System#Runtime#Serialization#IFormatter#Binder">
      <summary>For a description of this member, see <see cref="P:System.Runtime.Serialization.Formatter.Binder" />.</summary>
      <returns>The <see cref="T:System.Runtime.Serialization.SerializationBinder" /> that performs type lookups during deserialization.</returns>
    </member>
    <member name="P:System.Web.UI.ObjectStateFormatter.System#Runtime#Serialization#IFormatter#Context">
      <summary>For a description of this member, see <see cref="P:System.Runtime.Serialization.IFormatter.Context" />.</summary>
      <returns>The <see cref="T:System.Runtime.Serialization.StreamingContext" /> used for serialization and deserialization.</returns>
    </member>
    <member name="M:System.Web.UI.ObjectStateFormatter.System#Runtime#Serialization#IFormatter#Deserialize(System.IO.Stream)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.ObjectStateFormatter.Deserialize(System.IO.Stream)" />.</summary>
      <returns>The top object of the deserialized graph.</returns>
      <param name="serializationStream">The stream that contains the data to deserialize.</param>
    </member>
    <member name="M:System.Web.UI.ObjectStateFormatter.System#Runtime#Serialization#IFormatter#Serialize(System.IO.Stream,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.ObjectStateFormatter.Serialize(System.IO.Stream,System.Object)" />.</summary>
      <param name="serializationStream">The stream where the formatter puts the serialized data. This stream can reference a variety of backing stores (such as files, network, memory, and so on). </param>
      <param name="stateGraph">The object, or root of the object graph, to serialize. All child objects of this root object are automatically serialized. </param>
    </member>
    <member name="P:System.Web.UI.ObjectStateFormatter.System#Runtime#Serialization#IFormatter#SurrogateSelector">
      <summary>For a description of this member, see <see cref="T:System.Runtime.Serialization.SurrogateSelector" />.</summary>
      <returns>The <see cref="T:System.Runtime.Serialization.SurrogateSelector" /> used by this formatter.</returns>
    </member>
    <member name="M:System.Web.UI.ObjectStateFormatter.System#Web#UI#IStateFormatter#Deserialize(System.String)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.ObjectStateFormatter.Deserialize(System.String)" />.</summary>
      <returns>An object that represents the state of an ASP.NET server control.</returns>
      <param name="serializedState"> A string that the <see cref="T:System.Web.UI.IStateFormatter" /> deserializes into an initialized object.</param>
    </member>
    <member name="M:System.Web.UI.ObjectStateFormatter.System#Web#UI#IStateFormatter#Serialize(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.ObjectStateFormatter.Serialize(System.Object)" />.</summary>
      <returns>A string that represents a Web server control's view state.</returns>
      <param name="state"> The object that represents the view state of the Web server control to serialize to string form.</param>
    </member>
    <member name="T:System.Web.UI.ObjectTagBuilder">
      <summary>Used by the ASP.NET <see cref="T:System.Web.UI.TemplateParser" /> class to parse server-side &lt;object&gt; tags. This class can not be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.ObjectTagBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ObjectTagBuilder" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.ObjectTagBuilder.AppendLiteralString(System.String)">
      <summary>Adds content, such as text or HTML, to a control.</summary>
      <param name="s">The content to add to the control.</param>
    </member>
    <member name="M:System.Web.UI.ObjectTagBuilder.AppendSubBuilder(System.Web.UI.ControlBuilder)">
      <summary>Adds builders to the <see cref="T:System.Web.UI.ObjectTagBuilder" /> object for any child controls that belong to the container control.</summary>
      <param name="subBuilder">The <see cref="T:System.Web.UI.ControlBuilder" /> assigned to the child control.</param>
    </member>
    <member name="M:System.Web.UI.ObjectTagBuilder.Init(System.Web.UI.TemplateParser,System.Web.UI.ControlBuilder,System.Type,System.String,System.String,System.Collections.IDictionary)">
      <summary>Initializes the object tag builder when the page is parsed.</summary>
      <param name="parser">The <see cref="T:System.Web.UI.TemplateParser" /> responsible for parsing the control.</param>
      <param name="parentBuilder">The <see cref="T:System.Web.UI.ControlBuilder" /> responsible for building the control.</param>
      <param name="type">The <see cref="T:System.Type" /> assigned to the control that the builder will create.</param>
      <param name="tagName">The name of the tag to be built. This allows the builder to support multiple tag types.</param>
      <param name="id">The <see cref="P:System.Web.UI.Control.ID" /> assigned to the control.</param>
      <param name="attribs">The <see cref="T:System.Collections.IDictionary" /> that holds all the specified tag attributes.</param>
      <exception cref="T:System.Web.HttpException">The <paramref name="id" /> parameter is null.- or -The object tag scope is invalid.- or -The classid or progid attributes are not included or are invalid.</exception>
    </member>
    <member name="T:System.Web.UI.OutputCacheLocation">
      <summary>Specifies the valid values for controlling the location of the output-cached HTTP response for a resource.</summary>
    </member>
    <member name="F:System.Web.UI.OutputCacheLocation.Any">
      <summary>The output cache can be located on the browser client (where the request originated), on a proxy server (or any other server) participating in the request, or on the server where the request was processed. This value corresponds to the <see cref="F:System.Web.HttpCacheability.Public" /> enumeration value.</summary>
    </member>
    <member name="F:System.Web.UI.OutputCacheLocation.Client">
      <summary>The output cache is located on the browser client where the request originated. This value corresponds to the <see cref="F:System.Web.HttpCacheability.Private" /> enumeration value.</summary>
    </member>
    <member name="F:System.Web.UI.OutputCacheLocation.Downstream">
      <summary>The output cache can be stored in any HTTP 1.1 cache-capable devices other than the origin server. This includes proxy servers and the client that made the request.</summary>
    </member>
    <member name="F:System.Web.UI.OutputCacheLocation.Server">
      <summary>The output cache is located on the Web server where the request was processed. This value corresponds to the <see cref="F:System.Web.HttpCacheability.Server" /> enumeration value.</summary>
    </member>
    <member name="F:System.Web.UI.OutputCacheLocation.None">
      <summary>The output cache is disabled for the requested page. This value corresponds to the <see cref="F:System.Web.HttpCacheability.NoCache" /> enumeration value.</summary>
    </member>
    <member name="F:System.Web.UI.OutputCacheLocation.ServerAndClient">
      <summary>The output cache can be stored only at the origin server or at the requesting client. Proxy servers are not allowed to cache the response. This value corresponds to the combination of the <see cref="F:System.Web.HttpCacheability.Private" /> and <see cref="F:System.Web.HttpCacheability.Server" /> enumeration values.</summary>
    </member>
    <member name="T:System.Web.UI.OutputCacheParameters">
      <summary>Encapsulates the output cache initialization settings parsed from an @ OutputCache page directive by ASP.NET. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.OutputCacheParameters.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.OutputCacheParameters" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.OutputCacheParameters.CacheProfile">
      <summary>Gets or sets an <see cref="T:System.Web.Configuration.OutputCacheProfile" /> name that is associated with the settings of the output cache entry.</summary>
      <returns>An <see cref="T:System.Web.Configuration.OutputCacheProfile" /> name that is associated with the settings of the output cache entry.</returns>
    </member>
    <member name="P:System.Web.UI.OutputCacheParameters.Duration">
      <summary>Gets or sets the amount of time that a cache entry is to remain in the output cache.</summary>
      <returns>The amount of time, in seconds, that a cache entry is to remain in the output cache. The default is 0, which indicates an infinite duration.</returns>
    </member>
    <member name="P:System.Web.UI.OutputCacheParameters.Enabled">
      <summary>Gets or sets a value indicating whether output caching is enabled for the current content.</summary>
      <returns>true if output caching is enabled for the current content; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.OutputCacheParameters.Location">
      <summary>Gets or sets a value that determines the location of the cache entry.</summary>
      <returns>One of the <see cref="T:System.Web.UI.OutputCacheLocation" /> values.</returns>
    </member>
    <member name="P:System.Web.UI.OutputCacheParameters.NoStore">
      <summary>Gets or sets a value that determines whether the HTTP Cache-Control: no-store directive is set.</summary>
      <returns>true if the Cache-Control: no-store directive is set on <see cref="T:System.Web.HttpResponse" />; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.OutputCacheParameters.SqlDependency">
      <summary>Gets or sets a set of database and table name pairs that the cache entry depends on.</summary>
      <returns>A string that identifies a set of database and table name pairs that the cache entry depends on. The cache entry is expired when the table's data is updated or changes.</returns>
    </member>
    <member name="P:System.Web.UI.OutputCacheParameters.VaryByContentEncoding">
      <summary>Gets or sets a comma-delimited set of character sets (content encodings) used to vary the cache entry.</summary>
      <returns>A list of character sets by which to vary the content.</returns>
    </member>
    <member name="P:System.Web.UI.OutputCacheParameters.VaryByControl">
      <summary>Gets or sets a semicolon-delimited set of control identifiers contained within the current page or user control used to vary the current cache entry.</summary>
      <returns>A semicolon-separated list of strings used to vary an entry's output cache. The <see cref="P:System.Web.UI.OutputCacheParameters.VaryByControl" /> property is set to fully qualified control identifiers, where the identifier is a concatenation of control IDs starting from the top-level parent control and delimited with a dollar sign ($) character.</returns>
    </member>
    <member name="P:System.Web.UI.OutputCacheParameters.VaryByCustom">
      <summary>Gets a list of custom strings that the output cache uses to vary the cache entry.</summary>
      <returns>The list of custom strings.</returns>
    </member>
    <member name="P:System.Web.UI.OutputCacheParameters.VaryByHeader">
      <summary>Gets or sets a comma-delimited set of header names used to vary the cache entry. The header names identify HTTP headers associated with the request.</summary>
      <returns>A list of headers by which to vary the content.</returns>
    </member>
    <member name="P:System.Web.UI.OutputCacheParameters.VaryByParam">
      <summary>Gets a comma-delimited list of query string or form POST parameters that the output cache uses to vary the cache entry.</summary>
      <returns>The list of query string or form POST parameters.</returns>
    </member>
    <member name="T:System.Web.UI.Page">
      <summary>Represents an .aspx file, also known as a Web Forms page, requested from a server that hosts an ASP.NET Web application.</summary>
    </member>
    <member name="M:System.Web.UI.Page.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Page" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Page.AddContentTemplate(System.String,System.Web.UI.ITemplate)">
      <summary>Called during page initialization to create a collection of content (from content controls) that is handed to a master page, if the current page or master page refers to a master page. </summary>
      <param name="templateName">The name of the content template to add.</param>
      <param name="template">The content template</param>
      <exception cref="T:System.Web.HttpException">A content template with the same name already exists.</exception>
    </member>
    <member name="M:System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
      <summary>Registers beginning and ending event handler delegates that do not require state information for an asynchronous page.</summary>
      <param name="beginHandler">The delegate for the <see cref="T:System.Web.BeginEventHandler" /> method.</param>
      <param name="endHandler">The delegate for the <see cref="T:System.Web.EndEventHandler" /> method.</param>
      <exception cref="T:System.InvalidOperationException">The &lt;async&gt; page directive is not set to true.- or -The <see cref="M:System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" /> method is called after the <see cref="E:System.Web.UI.Control.PreRender" /> event.</exception>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Web.UI.PageAsyncTask.BeginHandler" /> or <see cref="P:System.Web.UI.PageAsyncTask.EndHandler" /> is null. </exception>
    </member>
    <member name="M:System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
      <summary>Registers beginning and ending  event handler delegates for an asynchronous page.</summary>
      <param name="beginHandler">The delegate for the <see cref="T:System.Web.BeginEventHandler" /> method.</param>
      <param name="endHandler">The delegate for the <see cref="T:System.Web.EndEventHandler" /> method.</param>
      <param name="state">An object containing state information for the event handlers.</param>
      <exception cref="T:System.InvalidOperationException">The &lt;async&gt; page directive is not set to true.- or -The <see cref="M:System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" /> method is called after the <see cref="E:System.Web.UI.Control.PreRender" /> event.</exception>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Web.UI.PageAsyncTask.BeginHandler" /> or <see cref="P:System.Web.UI.PageAsyncTask.EndHandler" /> is null. </exception>
    </member>
    <member name="M:System.Web.UI.Page.AddWrappedFileDependencies(System.Object)">
      <summary>Adds a list of dependent files that make up the current page. This method is used internally by the ASP.NET page framework and is not intended to be used directly from your code.</summary>
      <param name="virtualFileDependencies">An <see cref="T:System.Object" /> containing the list of file names.</param>
    </member>
    <member name="P:System.Web.UI.Page.Application">
      <summary>Gets the <see cref="T:System.Web.HttpApplicationState" /> object for the current Web request.</summary>
      <returns>The current data in the <see cref="T:System.Web.HttpApplicationState" /> class.</returns>
    </member>
    <member name="M:System.Web.UI.Page.AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Initiates a request for Active Server Page (ASP) resources. This method is provided for compatibility with legacy ASP applications.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object.</returns>
      <param name="context">An <see cref="T:System.Web.HttpContext" /> with information about the current request. </param>
      <param name="cb">The callback method. </param>
      <param name="extraData">Any extra data needed to process the request in the same manner as an ASP request. </param>
    </member>
    <member name="M:System.Web.UI.Page.AspCompatEndProcessRequest(System.IAsyncResult)">
      <summary>Terminates a request for Active Server Page (ASP) resources. This method is provided for compatibility with legacy ASP applications.</summary>
      <param name="result">The ASP page generated by the request. </param>
    </member>
    <member name="P:System.Web.UI.Page.AspCompatMode">
      <summary>Sets a value indicating whether the page can be executed on a single-threaded apartment (STA) thread.</summary>
      <returns>true if the page supports Active Server Pages (ASP) code; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.Page.AsyncMode">
      <summary>Sets a value indicating whether the page is processed synchronously or asynchronously.</summary>
      <returns>true if the page is processed asynchronously; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Page.AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Begins processing an asynchronous page request.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous request.</returns>
      <param name="context">The <see cref="T:System.Web.HttpContext" /> for the request.</param>
      <param name="callback">The callback method to notify when the process is complete.</param>
      <param name="extraData">State data for the asynchronous method.</param>
    </member>
    <member name="M:System.Web.UI.Page.AsyncPageEndProcessRequest(System.IAsyncResult)">
      <summary>Ends processing an asynchronous page request.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> referencing a pending asynchronous request.</param>
    </member>
    <member name="P:System.Web.UI.Page.AsyncTimeout">
      <summary>Gets or sets a value indicating the time-out interval used when processing asynchronous tasks.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that contains the allowed time interval for completion of the asynchronous task. The default time interval is 45 seconds.</returns>
      <exception cref="T:System.ArgumentException">The property was set to a negative value.</exception>
    </member>
    <member name="P:System.Web.UI.Page.AutoPostBackControl">
      <summary>Gets or sets the control in the page that is used to perform postbacks.</summary>
      <returns>The control that is used to perform postbacks.</returns>
    </member>
    <member name="P:System.Web.UI.Page.Buffer">
      <summary>Sets a value indicating whether the page output is buffered.</summary>
      <returns>true if page output is buffered; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.Page.Cache">
      <summary>Gets the <see cref="T:System.Web.Caching.Cache" /> object associated with the application in which the page resides.</summary>
      <returns>The <see cref="T:System.Web.Caching.Cache" /> associated with the page's application.</returns>
      <exception cref="T:System.Web.HttpException">An instance of <see cref="T:System.Web.Caching.Cache" /> is not created. </exception>
    </member>
    <member name="P:System.Web.UI.Page.ClientQueryString">
      <summary>Gets the query string portion of the requested URL.</summary>
      <returns>The query string portion of the requested URL.</returns>
    </member>
    <member name="P:System.Web.UI.Page.ClientScript">
      <summary>Gets a <see cref="T:System.Web.UI.ClientScriptManager" /> object used to manage, register, and add script to the page.</summary>
      <returns>A <see cref="T:System.Web.UI.ClientScriptManager" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.Page.ClientTarget">
      <summary>Gets or sets a value that allows you to override automatic detection of browser capabilities and to specify how a page is rendered for particular browser clients.</summary>
      <returns>A <see cref="T:System.String" /> that specifies the browser capabilities that you want to override.</returns>
    </member>
    <member name="P:System.Web.UI.Page.CodePage">
      <summary>Sets the code page identifier for the current <see cref="T:System.Web.UI.Page" />.</summary>
      <returns>An integer that represents the code page identifier for the current <see cref="T:System.Web.UI.Page" />.</returns>
    </member>
    <member name="P:System.Web.UI.Page.ContentType">
      <summary>Sets the HTTP MIME type for the <see cref="T:System.Web.HttpResponse" /> object associated with the page.</summary>
      <returns>The HTTP MIME type associated with the current page.</returns>
    </member>
    <member name="P:System.Web.UI.Page.Context">
      <summary>Gets the <see cref="T:System.Web.HttpContext" /> object associated with the page.</summary>
      <returns>An <see cref="T:System.Web.HttpContext" /> object that contains information associated with the current page.</returns>
    </member>
    <member name="M:System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter)">
      <summary>Creates an <see cref="T:System.Web.UI.HtmlTextWriter" /> object to render the page's content.</summary>
      <returns>An <see cref="T:System.Web.UI.HtmlTextWriter" /> or <see cref="T:System.Web.UI.Html32TextWriter" />.</returns>
      <param name="tw">The <see cref="T:System.IO.TextWriter" /> used to create the <see cref="T:System.Web.UI.HtmlTextWriter" />.</param>
    </member>
    <member name="M:System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)">
      <summary>Creates a specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object to render the page's content.</summary>
      <returns>An <see cref="T:System.Web.UI.HtmlTextWriter" /> that renders the content of the page.</returns>
      <param name="tw">The <see cref="T:System.IO.TextWriter" /> used to create the <see cref="T:System.Web.UI.HtmlTextWriter" />. </param>
      <param name="writerType">The type of text writer to create.</param>
      <exception cref="T:System.Web.HttpException">The <paramref name="writerType" /> parameter is set to an invalid type.</exception>
    </member>
    <member name="P:System.Web.UI.Page.Culture">
      <summary>Sets the culture ID for the <see cref="T:System.Threading.Thread" /> object associated with the page.</summary>
      <returns>A valid culture ID.</returns>
    </member>
    <member name="M:System.Web.UI.Page.DesignerInitialize">
      <summary>Performs any initialization of the instance of the <see cref="T:System.Web.UI.Page" /> class that is required by RAD designers. This method is used only at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Page.DeterminePostBackMode">
      <summary>Returns a <see cref="T:System.Collections.Specialized.NameValueCollection" /> of data posted back to the page using either a POST or a GET command. </summary>
      <returns>A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains the form data. If the postback used the POST command, the form information is returned from the <see cref="P:System.Web.UI.Page.Context" /> object. If the postback used the GET command, the query string information is returned. If the page is being requested for the first time, null is returned.</returns>
    </member>
    <member name="P:System.Web.UI.Page.EnableEventValidation">
      <summary>Gets or sets a value indicating whether the page validates postback and callback events.</summary>
      <returns>true if the page validates events; otherwise, false.The default is true.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.Page.EnableEventValidation" /> property was set after the page was initialized.</exception>
    </member>
    <member name="P:System.Web.UI.Page.EnableViewState">
      <summary>Gets or sets a value indicating whether the page maintains its view state, and the view state of any server controls it contains, when the current page request ends.</summary>
      <returns>true if the page maintains its view state; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.Page.EnableViewStateMac">
      <summary>Gets or sets a value indicating whether ASP.NET should check message authentication codes (MAC) in the page's view state when the page is posted back from the client.</summary>
      <returns>true if the view state should be MAC checked and encoded; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.Page.ErrorPage">
      <summary>Gets or sets the error page to which the requesting browser is redirected in the event of an unhandled page exception.</summary>
      <returns>The error page to which the browser is redirected.</returns>
    </member>
    <member name="M:System.Web.UI.Page.ExecuteRegisteredAsyncTasks">
      <summary>Starts the execution of an asynchronous task.</summary>
      <exception cref="T:System.Web.HttpException">There is an exception in the asynchronous task.</exception>
    </member>
    <member name="P:System.Web.UI.Page.FileDependencies">
      <summary>Sets an array of files that the current <see cref="T:System.Web.HttpResponse" /> object is dependent upon.</summary>
      <returns>The array of files that the current <see cref="T:System.Web.HttpResponse" /> object is dependent upon.</returns>
    </member>
    <member name="M:System.Web.UI.Page.FindControl(System.String)">
      <summary>Searches the page naming container for a server control with the specified identifier.</summary>
      <returns>The specified control, or null if the specified control does not exist.</returns>
      <param name="id">The identifier for the control to be found. </param>
    </member>
    <member name="P:System.Web.UI.Page.Form">
      <summary>Gets the HTML form for the page.</summary>
      <returns>The <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> object associated with the page.</returns>
    </member>
    <member name="M:System.Web.UI.Page.FrameworkInitialize">
      <summary>Initializes the control tree during page generation based on the declarative nature of the page. </summary>
    </member>
    <member name="M:System.Web.UI.Page.GetDataItem">
      <summary>Gets the data item at the top of the data-binding context stack.</summary>
      <returns>The object at the top of the data binding context stack.</returns>
      <exception cref="T:System.InvalidOperationException">There is no data-binding context for the page.</exception>
    </member>
    <member name="M:System.Web.UI.Page.GetPostBackClientEvent(System.Web.UI.Control,System.String)">
      <summary>Gets a reference that can be used in a client event to post back to the server for the specified control and with the specified event arguments.</summary>
      <returns>The string that represents the client event.</returns>
      <param name="control">The server control that receives the client event postback. </param>
      <param name="argument">A <see cref="T:System.String" /> that is passed to <see cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />. </param>
    </member>
    <member name="M:System.Web.UI.Page.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)">
      <summary>Gets a reference, with javascript: appended to the beginning of it, that can be used in a client event to post back to the server for the specified control and with the specified event arguments.</summary>
      <returns>A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</returns>
      <param name="control">The server control to process the postback. </param>
      <param name="argument">The parameter passed to the server control. </param>
    </member>
    <member name="M:System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control)">
      <summary>Returns a string that can be used in a client event to cause postback to the server. The reference string is defined by the specified <see cref="T:System.Web.UI.Control" /> object.</summary>
      <returns>A string that, when treated as script on the client, initiates the postback.</returns>
      <param name="control">The server control to process the postback on the server. </param>
    </member>
    <member name="M:System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control,System.String)">
      <summary>Returns a string that can be used in a client event to cause postback to the server. The reference string is defined by the specified control that handles the postback and a string argument of additional event information. </summary>
      <returns>A string that, when treated as script on the client, initiates the postback.</returns>
      <param name="control">The server control to process the postback. </param>
      <param name="argument">The parameter passed to the server control. </param>
    </member>
    <member name="M:System.Web.UI.Page.GetTypeHashCode">
      <summary>Retrieves a hash code that is generated by <see cref="T:System.Web.UI.Page" /> objects that are generated at run time. This hash code is unique to the <see cref="T:System.Web.UI.Page" /> object's control hierarchy.</summary>
      <returns>The hash code generated at run time. The default is 0.</returns>
    </member>
    <member name="M:System.Web.UI.Page.GetValidators(System.String)">
      <summary>Returns a collection of control validators for a specified validation group.</summary>
      <returns>A <see cref="T:System.Web.UI.ValidatorCollection" /> that contains the control validators for the specified validation group.</returns>
      <param name="validationGroup">The validation group to return, or null to return the default validation group.</param>
    </member>
    <member name="M:System.Web.UI.Page.GetWrappedFileDependencies(System.String[])">
      <summary>Returns a list of physical file names that correspond to a list of virtual file locations.</summary>
      <returns>An object containing a list of physical file locations.</returns>
      <param name="virtualFileDependencies">A string array of virtual file locations.</param>
    </member>
    <member name="P:System.Web.UI.Page.Header">
      <summary>Gets the document header for the page if the head element is defined with a runat=server in the page declaration.</summary>
      <returns>An <see cref="T:System.Web.UI.HtmlControls.HtmlHead" /> containing the page header.</returns>
    </member>
    <member name="P:System.Web.UI.Page.ID">
      <summary>Gets or sets an identifier for a particular instance of the <see cref="T:System.Web.UI.Page" /> class.</summary>
      <returns>The identifier for the instance of the <see cref="T:System.Web.UI.Page" /> class. The default value is '_Page'.</returns>
    </member>
    <member name="P:System.Web.UI.Page.IdSeparator">
      <summary>Gets the character used to separate control identifiers when building a unique ID for a control on a page.</summary>
      <returns>The character used to separate control identifiers. The default is set by the <see cref="T:System.Web.UI.Adapters.PageAdapter" /> instance that renders the page. The <see cref="P:System.Web.UI.Page.IdSeparator" /> is a server-side field and should not be modified.</returns>
    </member>
    <member name="E:System.Web.UI.Page.InitComplete">
      <summary>Occurs when page initialization is complete.</summary>
    </member>
    <member name="M:System.Web.UI.Page.InitializeCulture">
      <summary>Sets the <see cref="P:System.Web.UI.Page.Culture" /> and <see cref="P:System.Web.UI.Page.UICulture" /> for the current thread of the page.</summary>
    </member>
    <member name="M:System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)">
      <summary>Initializes the output cache for the current page request.</summary>
      <param name="duration">The amount of time that objects stored in the output cache are valid.</param>
      <param name="varyByContentEncoding">A semicolon-separated list of character-sets (content encodings) that content from the output cache will vary by.</param>
      <param name="varyByHeader">A semicolon-separated list of headers that content from the output cache will vary by.</param>
      <param name="varyByCustom">The Vary HTTP header.</param>
      <param name="location">One of the <see cref="T:System.Web.UI.OutputCacheLocation" /> values.</param>
      <param name="varyByParam">A semicolon-separated list of parameters received by a GET or POST method that content from the output cache will vary by.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">An invalid value is specified for <paramref name="location" />. </exception>
    </member>
    <member name="M:System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)">
      <summary>Initializes the output cache for the current page request.</summary>
      <param name="duration">The amount of time that objects stored in the output cache are valid. </param>
      <param name="varyByHeader">A semicolon-separated list of headers that content from the output cache will vary by. </param>
      <param name="varyByCustom">The Vary HTTP header. </param>
      <param name="location">One of the <see cref="T:System.Web.UI.OutputCacheLocation" /> values. </param>
      <param name="varyByParam">A semicolon-separated list of parameters received by a GET or POST method that content from the output cache will vary by.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">An invalid value is specified for <paramref name="location" />. </exception>
    </member>
    <member name="M:System.Web.UI.Page.InitOutputCache(System.Web.UI.OutputCacheParameters)">
      <summary>Initializes the output cache for the current page request based on an <see cref="T:System.Web.UI.OutputCacheParameters" /> object.</summary>
      <param name="cacheSettings">An <see cref="T:System.Web.UI.OutputCacheParameters" /> that contains the cache settings.</param>
      <exception cref="T:System.Web.HttpException">The cache profile was not found.- or -A missing directive or configuration settings profile attribute.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The output cache settings location is invalid. </exception>
    </member>
    <member name="P:System.Web.UI.Page.IsAsync">
      <summary>Gets a value indicating whether the page is processed asynchronously.</summary>
      <returns>true if the page is in asynchronous mode; otherwise, false;</returns>
    </member>
    <member name="P:System.Web.UI.Page.IsCallback">
      <summary>Gets a value that indicates whether the page request is the result of a callback.</summary>
      <returns>true if the page request is the result of a callback; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Page.IsClientScriptBlockRegistered(System.String)">
      <summary>Determines whether the client script block with the specified key is registered with the page.</summary>
      <returns>true if the script block is registered; otherwise, false.</returns>
      <param name="key">The string key of the client script to search for. </param>
    </member>
    <member name="P:System.Web.UI.Page.IsCrossPagePostBack">
      <summary>Gets a value indicating whether the page is involved in a cross-page postback.</summary>
      <returns>true if the page is participating in a cross-page request; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Page.IsPostBack">
      <summary>Gets a value that indicates whether the page is being rendered for the first time or is being loaded in response to a postback.</summary>
      <returns>true if the page is being loaded in response to a client postback; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Page.IsPostBackEventControlRegistered">
      <summary>Gets a value that indicates whether the control in the page that performs postbacks has been registered.</summary>
      <returns>true if the control has been registered; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Page.IsReusable">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.Page" /> object can be reused.</summary>
      <returns>false in all cases. </returns>
    </member>
    <member name="M:System.Web.UI.Page.IsStartupScriptRegistered(System.String)">
      <summary>Determines whether the client startup script is registered with the <see cref="T:System.Web.UI.Page" /> object.</summary>
      <returns>true if the startup script is registered; otherwise, false.</returns>
      <param name="key">The string key of the startup script to search for. </param>
    </member>
    <member name="P:System.Web.UI.Page.IsValid">
      <summary>Gets a value indicating whether page validation succeeded.</summary>
      <returns>true if page validation succeeded; otherwise, false.</returns>
      <exception cref="T:System.Web.HttpException">The <see cref="P:System.Web.UI.Page.IsValid" /> property is called before validation has occurred.</exception>
    </member>
    <member name="P:System.Web.UI.Page.Items">
      <summary>Gets a list of objects stored in the page context.</summary>
      <returns>A reference to an <see cref="T:System.Collections.IDictionary" /> containing objects stored in the page context.</returns>
    </member>
    <member name="P:System.Web.UI.Page.LCID">
      <summary>Sets the locale identifier for the <see cref="T:System.Threading.Thread" /> object associated with the page.</summary>
      <returns>The locale identifier to pass to the <see cref="T:System.Threading.Thread" />.</returns>
    </member>
    <member name="E:System.Web.UI.Page.LoadComplete">
      <summary>Occurs at the end of the load stage of the page's life cycle.</summary>
    </member>
    <member name="M:System.Web.UI.Page.LoadPageStateFromPersistenceMedium">
      <summary>Loads any saved view-state information to the <see cref="T:System.Web.UI.Page" /> object. </summary>
      <returns>The saved view state.</returns>
    </member>
    <member name="P:System.Web.UI.Page.MaintainScrollPositionOnPostBack">
      <summary>Gets or sets a value indicating whether to return the user to the same position in the client browser after postback. This property replaces the obsolete <see cref="P:System.Web.UI.Page.SmartNavigation" /> property.</summary>
      <returns>true if the client position should be maintained; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Page.MapPath(System.String)">
      <summary>Retrieves the physical path that a virtual path, either absolute or relative, or an application-relative path maps to.</summary>
      <returns>The physical path associated with the virtual path or application-relative path.</returns>
      <param name="virtualPath">A <see cref="T:System.String" /> that represents the virtual path. </param>
    </member>
    <member name="P:System.Web.UI.Page.Master">
      <summary>Gets the master page that determines the overall look of the page.</summary>
      <returns>The <see cref="T:System.Web.UI.MasterPage" /> associated with this page if it exists; otherwise, null. </returns>
    </member>
    <member name="P:System.Web.UI.Page.MasterPageFile">
      <summary>Gets or sets the file name of the master page.</summary>
      <returns>The file name of the master page.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.Page.MasterPageFile" /> property is set after the <see cref="E:System.Web.UI.Page.PreInit" /> event is complete.</exception>
      <exception cref="T:System.Web.HttpException">The file specified in the <see cref="P:System.Web.UI.Page.MasterPageFile" /> property does not exist.- or -The page does not have a <see cref="T:System.Web.UI.WebControls.Content" /> control as the top level control.</exception>
    </member>
    <member name="P:System.Web.UI.Page.MaxPageStateFieldLength">
      <summary>Gets or sets the maximum length for the page's state field.</summary>
      <returns>The maximum length, in bytes, for the page's state field. The default is -1.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Web.UI.Page.MaxPageStateFieldLength" /> property is not equal to -1 or a positive number.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.Page.MaxPageStateFieldLength" /> property was set after the page was initialized.</exception>
    </member>
    <member name="P:System.Web.UI.Page.MetaDescription">
      <summary>Gets or sets the content of the "description" meta element.</summary>
      <returns>The content of the "description" meta element.</returns>
      <exception cref="T:System.InvalidOperationException">The page does not have a header control (a head element with the runat attribute set to "server"). </exception>
    </member>
    <member name="P:System.Web.UI.Page.MetaKeywords">
      <summary>Gets or sets the content of the "keywords" meta element.</summary>
      <returns>The content of the "keywords" meta element.</returns>
      <exception cref="T:System.InvalidOperationException">The page does not have a header control (a head element with the runat attribute set to "server"). </exception>
    </member>
    <member name="M:System.Web.UI.Page.OnInit(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Init" /> event to initialize the page.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.Page.OnInitComplete(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Page.InitComplete" /> event after page initialization.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.Page.OnLoadComplete(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Page.LoadComplete" /> event at the end of the page load stage.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.Page.OnPreInit(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Page.PreInit" /> event at the beginning of page initialization.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.Page.OnPreLoad(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Page.PreLoad" /> event after postback data is loaded into the page server controls but before the <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> event. </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Page.PreRenderComplete" /> event after the <see cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" /> event and before the page is rendered.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Page.SaveStateComplete" /> event after the page state has been saved to the persistence medium.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> object containing the event data.</param>
    </member>
    <member name="P:System.Web.UI.Page.PageAdapter">
      <summary>Gets the adapter that renders the page for the specific requesting browser.</summary>
      <returns>The <see cref="T:System.Web.UI.Adapters.PageAdapter" /> that renders the page.</returns>
    </member>
    <member name="P:System.Web.UI.Page.PageStatePersister">
      <summary>Gets the <see cref="T:System.Web.UI.PageStatePersister" /> object associated with the page.</summary>
      <returns>A <see cref="T:System.Web.UI.PageStatePersister" /> associated with the page.</returns>
    </member>
    <member name="F:System.Web.UI.Page.postEventArgumentID">
      <summary>A string that defines the EVENTARGUMENT hidden field in the rendered page.</summary>
    </member>
    <member name="F:System.Web.UI.Page.postEventSourceID">
      <summary>A string that defines the EVENTTARGET hidden field in the rendered page.</summary>
    </member>
    <member name="E:System.Web.UI.Page.PreInit">
      <summary>Occurs at the beginning of page initialization.</summary>
    </member>
    <member name="E:System.Web.UI.Page.PreLoad">
      <summary>Occurs before the page <see cref="E:System.Web.UI.Control.Load" /> event.</summary>
    </member>
    <member name="E:System.Web.UI.Page.PreRenderComplete">
      <summary>Occurs before the page content is rendered.</summary>
    </member>
    <member name="P:System.Web.UI.Page.PreviousPage">
      <summary>Gets the page that transferred control to the current page.</summary>
      <returns>The <see cref="T:System.Web.UI.Page" /> representing the page that transferred control to the current page.</returns>
      <exception cref="T:System.InvalidOperationException">The current user is not allowed to access the previous page.-or-ASP.NET routing is in use and the previous page's URL is a routed URL. When ASP.NET checks access permissions, it assumes that the URL is an actual path to a file. Because this is not the case with a routed URL, the check fails.</exception>
    </member>
    <member name="M:System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)">
      <summary>Sets the intrinsic server objects of the <see cref="T:System.Web.UI.Page" /> object, such as the <see cref="P:System.Web.UI.Page.Context" />, <see cref="P:System.Web.UI.Page.Request" />, <see cref="P:System.Web.UI.Page.Response" />, and <see cref="P:System.Web.UI.Page.Application" /> properties.</summary>
      <param name="context">An <see cref="T:System.Web.HttpContext" /> object that provides references to the intrinsic server objects (for example, <see cref="P:System.Web.HttpContext.Request" />, <see cref="P:System.Web.HttpContext.Response" />, and <see cref="P:System.Web.HttpContext.Session" />) used to service HTTP requests. </param>
    </member>
    <member name="M:System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)">
      <summary>Notifies the server control that caused the postback that it should handle an incoming postback event.</summary>
      <param name="sourceControl">The ASP.NET server control that caused the postback. This control must implement the <see cref="T:System.Web.UI.IPostBackEventHandler" /> interface. </param>
      <param name="eventArgument">The postback argument. </param>
    </member>
    <member name="M:System.Web.UI.Page.RegisterArrayDeclaration(System.String,System.String)">
      <summary>Declares a value that is declared as an ECMAScript array declaration when the page is rendered.</summary>
      <param name="arrayName">The name of the array in which to declare the value. </param>
      <param name="arrayValue">The value to place in the array. </param>
    </member>
    <member name="M:System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)">
      <summary>Registers a new asynchronous task with the page.</summary>
      <param name="task">A <see cref="T:System.Web.UI.PageAsyncTask" /> that defines the asynchronous task.</param>
      <exception cref="T:System.ArgumentNullException">The asynchronous task is null. </exception>
    </member>
    <member name="M:System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)">
      <summary>Emits client-side script blocks to the response.</summary>
      <param name="key">Unique key that identifies a script block. </param>
      <param name="script">Content of script that is sent to the client. </param>
    </member>
    <member name="M:System.Web.UI.Page.RegisterHiddenField(System.String,System.String)">
      <summary>Allows server controls to automatically register a hidden field on the form. The field will be sent to the <see cref="T:System.Web.UI.Page" /> object when the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> server control is rendered.</summary>
      <param name="hiddenFieldName">The unique name of the hidden field to be rendered. </param>
      <param name="hiddenFieldInitialValue">The value to be emitted in the hidden form. </param>
    </member>
    <member name="M:System.Web.UI.Page.RegisterOnSubmitStatement(System.String,System.String)">
      <summary>Allows a page to access the client OnSubmit event. The script should be a function call to client code registered elsewhere.</summary>
      <param name="key">Unique key that identifies a script block. </param>
      <param name="script">The client-side script to be sent to the client. </param>
    </member>
    <member name="M:System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)">
      <summary>Registers a control as one whose control state must be persisted.</summary>
      <param name="control">The control to register.</param>
      <exception cref="T:System.ArgumentException">The control to register is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)" /> method can be called only before or during the <see cref="E:System.Web.UI.Control.PreRender" /> event.</exception>
    </member>
    <member name="M:System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)">
      <summary>Registers a control as one that requires postback handling when the page is posted back to the server. </summary>
      <param name="control">The control to be registered. </param>
      <exception cref="T:System.Web.HttpException">The control to register does not implement the <see cref="T:System.Web.UI.IPostBackDataHandler" /> interface. </exception>
    </member>
    <member name="M:System.Web.UI.Page.RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)">
      <summary>Registers an ASP.NET server control as one requiring an event to be raised when the control is processed on the <see cref="T:System.Web.UI.Page" /> object.</summary>
      <param name="control">The control to register. </param>
    </member>
    <member name="M:System.Web.UI.Page.RegisterRequiresViewStateEncryption">
      <summary>Registers a control with the page as one requiring view-state encryption. </summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.UI.Page.RegisterRequiresViewStateEncryption" /> method must be called before or during the page PreRenderphase in the page life cycle. </exception>
    </member>
    <member name="M:System.Web.UI.Page.RegisterStartupScript(System.String,System.String)">
      <summary>Emits a client-side script block in the page response. </summary>
      <param name="key">Unique key that identifies a script block. </param>
      <param name="script">Content of script that will be sent to the client. </param>
    </member>
    <member name="M:System.Web.UI.Page.RegisterViewStateHandler">
      <summary>Causes page view state to be persisted, if called.</summary>
    </member>
    <member name="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Initializes the <see cref="T:System.Web.UI.HtmlTextWriter" /> object and calls on the child controls of the <see cref="T:System.Web.UI.Page" /> to render.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the page content.</param>
    </member>
    <member name="P:System.Web.UI.Page.Request">
      <summary>Gets the <see cref="T:System.Web.HttpRequest" /> object for the requested page.</summary>
      <returns>The current <see cref="T:System.Web.HttpRequest" /> associated with the page.</returns>
      <exception cref="T:System.Web.HttpException">Occurs when the <see cref="T:System.Web.HttpRequest" /> object is not available. </exception>
    </member>
    <member name="M:System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)">
      <summary>Determines whether the specified <see cref="T:System.Web.UI.Control" /> object is registered to participate in control state management.</summary>
      <returns>true if the specified <see cref="T:System.Web.UI.Control" /> requires control state; otherwise, false</returns>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to check for a control state requirement.</param>
    </member>
    <member name="P:System.Web.UI.Page.Response">
      <summary>Gets the <see cref="T:System.Web.HttpResponse" /> object associated with the <see cref="T:System.Web.UI.Page" /> object. This object allows you to send HTTP response data to a client and contains information about that response.</summary>
      <returns>The current <see cref="T:System.Web.HttpResponse" /> associated with the page.</returns>
      <exception cref="T:System.Web.HttpException">The <see cref="T:System.Web.HttpResponse" /> object is not available. </exception>
    </member>
    <member name="P:System.Web.UI.Page.ResponseEncoding">
      <summary>Sets the encoding language for the current <see cref="T:System.Web.HttpResponse" /> object.</summary>
      <returns>A string that contains the encoding language for the current <see cref="T:System.Web.HttpResponse" />.</returns>
    </member>
    <member name="P:System.Web.UI.Page.RouteData">
      <summary>Gets the <see cref="P:System.Web.Routing.RequestContext.RouteData" /> value of the current <see cref="T:System.Web.Routing.RequestContext" /> instance.</summary>
      <returns>The <see cref="P:System.Web.Routing.RequestContext.RouteData" /> value of the current <see cref="T:System.Web.Routing.RequestContext" /> instance.</returns>
    </member>
    <member name="M:System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)">
      <summary>Saves any view-state and control-state information for the page.</summary>
      <param name="state"></param>
    </member>
    <member name="E:System.Web.UI.Page.SaveStateComplete">
      <summary>Occurs after the page has completed saving all view state and control state information for the page and controls on the page.</summary>
    </member>
    <member name="P:System.Web.UI.Page.Server">
      <summary>Gets the Server object, which is an instance of the <see cref="T:System.Web.HttpServerUtility" /> class.</summary>
      <returns>The current Server object associated with the page.</returns>
    </member>
    <member name="P:System.Web.UI.Page.Session">
      <summary>Gets the current Session object provided by ASP.NET.</summary>
      <returns>The current session-state data.</returns>
      <exception cref="T:System.Web.HttpException">Occurs when the session information is set to null. </exception>
    </member>
    <member name="M:System.Web.UI.Page.SetFocus(System.String)">
      <summary>Sets the browser focus to the control with the specified identifier. </summary>
      <param name="clientID">The ID of the control to set focus to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="clientID" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Web.UI.Page.SetFocus(System.String)" /> is called when the control is not part of a Web Forms page.- or -<see cref="M:System.Web.UI.Page.SetFocus(System.String)" /> is called after the <see cref="E:System.Web.UI.Control.PreRender" /> event.</exception>
    </member>
    <member name="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)">
      <summary>Sets the browser focus to the specified control. </summary>
      <param name="control">The control to receive focus.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is null. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" /> is called when the control is not part of a Web Forms page. - or -<see cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" /> is called after the <see cref="E:System.Web.UI.Control.PreRender" /> event. </exception>
    </member>
    <member name="P:System.Web.UI.Page.SmartNavigation">
      <summary>Gets or sets a value indicating whether smart navigation is enabled. This property is deprecated.</summary>
      <returns>true if smart navigation is enabled; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Page.StyleSheetTheme">
      <summary>Gets or sets the name of the style sheet applied to this page.</summary>
      <returns>The name of the style sheet applied to this page.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.Page.StyleSheetTheme" /> property is set before the <see cref="E:System.Web.UI.Control.Init" /> event completes.</exception>
    </member>
    <member name="P:System.Web.UI.Page.Theme">
      <summary>Gets or sets the name of the page theme.</summary>
      <returns>The name of the page theme.</returns>
      <exception cref="T:System.InvalidOperationException">An attempt was made to set <see cref="P:System.Web.UI.Page.Theme" /> after the <see cref="E:System.Web.UI.Page.PreInit" /> event has occurred.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Web.UI.Page.Theme" /> is set to an invalid theme name.</exception>
    </member>
    <member name="P:System.Web.UI.Page.Title">
      <summary>Gets or sets the title for the page.</summary>
      <returns>The title of the page.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.Page.Title" /> property requires a header control on the page.</exception>
    </member>
    <member name="P:System.Web.UI.Page.Trace">
      <summary>Gets the <see cref="T:System.Web.TraceContext" /> object for the current Web request.</summary>
      <returns>Data from the <see cref="T:System.Web.TraceContext" /> object for the current Web request.</returns>
    </member>
    <member name="P:System.Web.UI.Page.TraceEnabled">
      <summary>Sets a value indicating whether tracing is enabled for the <see cref="T:System.Web.UI.Page" /> object.</summary>
      <returns>true if tracing is enabled for the page; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.Page.TraceModeValue">
      <summary>Sets the mode in which trace statements are displayed on the page.</summary>
      <returns>One of the <see cref="T:System.Web.TraceMode" /> enumeration members.</returns>
    </member>
    <member name="P:System.Web.UI.Page.TransactionMode">
      <summary>Sets the level of transaction support for the page.</summary>
      <returns>An integer that represents one of the <see cref="T:System.EnterpriseServices.TransactionOption" /> enumeration members.</returns>
    </member>
    <member name="P:System.Web.UI.Page.UICulture">
      <summary>Sets the user interface (UI) ID for the <see cref="T:System.Threading.Thread" /> object associated with the page.</summary>
      <returns>The UI ID.</returns>
    </member>
    <member name="P:System.Web.UI.Page.UniqueFilePathSuffix">
      <summary>Gets a unique suffix to append to the file path for caching browsers.</summary>
      <returns>A unique suffix appended to the file path. The default is "__ufps=" plus a unique 6-digit number.</returns>
    </member>
    <member name="M:System.Web.UI.Page.UnregisterRequiresControlState(System.Web.UI.Control)">
      <summary>Stops persistence of control state for the specified control.</summary>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> for which to stop persistence of control state.</param>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Web.UI.Control" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.Page.User">
      <summary>Gets information about the user making the page request.</summary>
      <returns>An <see cref="T:System.Security.Principal.IPrincipal" /> that represents the user making the page request.</returns>
    </member>
    <member name="M:System.Web.UI.Page.Validate">
      <summary>Instructs any validation controls included on the page to validate their assigned information.</summary>
    </member>
    <member name="M:System.Web.UI.Page.Validate(System.String)">
      <summary>Instructs the validation controls in the specified validation group to validate their assigned information.</summary>
      <param name="validationGroup">The validation group name of the controls to validate.</param>
    </member>
    <member name="P:System.Web.UI.Page.Validators">
      <summary>Gets a collection of all validation controls contained on the requested page.</summary>
      <returns>The collection of validation controls.</returns>
    </member>
    <member name="M:System.Web.UI.Page.VerifyRenderingInServerForm(System.Web.UI.Control)">
      <summary>Confirms that an <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control is rendered for the specified ASP.NET server control at run time.</summary>
      <param name="control">The ASP.NET server control that is required in the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control. </param>
      <exception cref="T:System.Web.HttpException">The specified server control is not contained between the opening and closing tags of the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> server control at run time. </exception>
      <exception cref="T:System.ArgumentNullException">The control to verify is null.</exception>
    </member>
    <member name="P:System.Web.UI.Page.ViewStateEncryptionMode">
      <summary>Gets or sets the encryption mode of the view state.</summary>
      <returns>One of the <see cref="T:System.Web.UI.ViewStateEncryptionMode" /> values. The default value is <see cref="F:System.Web.UI.ViewStateEncryptionMode.Auto" />. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is not a member of the <see cref="T:System.Web.UI.ViewStateEncryptionMode" /> enumeration.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.Page.ViewStateEncryptionMode" /> property can be set only in or before the page PreRenderphase in the page life cycle.</exception>
    </member>
    <member name="P:System.Web.UI.Page.ViewStateUserKey">
      <summary>Assigns an identifier to an individual user in the view-state variable associated with the current page.</summary>
      <returns>The identifier for the individual user.</returns>
      <exception cref="T:System.Web.HttpException">The <see cref="P:System.Web.UI.Page.ViewStateUserKey" /> property was accessed too late during page processing. </exception>
    </member>
    <member name="P:System.Web.UI.Page.Visible">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Web.UI.Page" /> object is rendered.</summary>
      <returns>true if the <see cref="T:System.Web.UI.Page" /> is to be rendered; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.Web.UI.PageAsyncTask">
      <summary>Contains information about an asynchronous task registered to a page. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using the default value for executing in parallel. </summary>
      <param name="beginHandler">The handler to call when beginning an asynchronous task.</param>
      <param name="endHandler">The handler to call when the task is completed successfully within the time-out period.</param>
      <param name="timeoutHandler">The handler to call when the task is not completed successfully within the time-out period.</param>
      <param name="state">The object that represents the state of the task.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="beginHandler" /> parameter or <paramref name="endHandler" /> parameter is not specified.</exception>
    </member>
    <member name="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using the specified value for executing in parallel. </summary>
      <param name="beginHandler">The handler to call when beginning an asynchronous task.</param>
      <param name="endHandler">The handler to call when the task is completed successfully within the time-out period.</param>
      <param name="timeoutHandler">The handler to call when the task is not completed successfully within the time-out period.</param>
      <param name="state">The object that represents the state of the task.</param>
      <param name="executeInParallel">The value that indicates whether the task can be processed in parallel with other tasks.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="beginHandler" /> parameter or <paramref name="endHandler" /> parameter is not specified.</exception>
    </member>
    <member name="P:System.Web.UI.PageAsyncTask.BeginHandler">
      <summary>Gets the method to call when beginning an asynchronous task.</summary>
      <returns>A <see cref="T:System.Web.BeginEventHandler" /> delegate that represents the method to call when beginning the asynchronous task. </returns>
    </member>
    <member name="P:System.Web.UI.PageAsyncTask.EndHandler">
      <summary>Gets the method to call when the task completes successfully within the time-out period.</summary>
      <returns>An <see cref="T:System.Web.EndEventHandler" /> delegate that represents the method to call when the task completes successfully within the time-out period.</returns>
    </member>
    <member name="P:System.Web.UI.PageAsyncTask.ExecuteInParallel">
      <summary>Gets a value that indicates whether the task can be processed in parallel with other tasks.</summary>
      <returns>true if the task should be processed in parallel with other tasks; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.PageAsyncTask.State">
      <summary>Gets an object that represents the state of the task.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the state of the task.</returns>
    </member>
    <member name="P:System.Web.UI.PageAsyncTask.TimeoutHandler">
      <summary>Gets the method to call when the task does not complete successfully within the time-out period.</summary>
      <returns>An <see cref="T:System.Web.EndEventHandler" /> delegate that represents the method to call when the task does not complete successfully within the time-out period.</returns>
    </member>
    <member name="T:System.Web.UI.PageHandlerFactory">
      <summary>Creates instances of classes that inherit from the <see cref="T:System.Web.UI.Page" /> class and implement the <see cref="T:System.Web.IHttpHandler" /> interface. Instances are created dynamically to handle requests for ASP.NET files. The <see cref="T:System.Web.UI.PageHandlerFactory" /> class is the default handler factory implementation for ASP.NET pages.</summary>
    </member>
    <member name="M:System.Web.UI.PageHandlerFactory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.PageHandlerFactory" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.PageHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)">
      <summary>Returns an instance of the <see cref="T:System.Web.IHttpHandler" /> interface to process the requested resource.</summary>
      <returns>A new <see cref="T:System.Web.IHttpHandler" /> that processes the request; otherwise, null.</returns>
      <param name="context">An instance of the <see cref="T:System.Web.HttpContext" /> class that provides references to intrinsic server objects (for example, Request, Response, Session, and Server) used to service HTTP requests. </param>
      <param name="requestType">The HTTP data transfer method (GET or POST) that the client uses.</param>
      <param name="virtualPath">The virtual path to the requested resource.</param>
      <param name="path">The <see cref="P:System.Web.HttpRequest.PhysicalApplicationPath" /> property to the requested resource.</param>
    </member>
    <member name="M:System.Web.UI.PageHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)">
      <summary>Enables a factory to reuse an existing instance of a handler.</summary>
      <param name="handler">The <see cref="T:System.Web.IHttpHandler" /> to reuse.</param>
    </member>
    <member name="T:System.Web.UI.PageParser">
      <summary>Implements a parser for .aspx files. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.PageParser.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.PageParser" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.PageParser.DefaultPageBaseType">
      <summary>Gets or sets the type from which all pages are derived.</summary>
      <returns>The type.</returns>
    </member>
    <member name="P:System.Web.UI.PageParser.DefaultPageParserFilterType">
      <summary>Gets or sets the page parser filter type that should be used at parse time.</summary>
      <returns>The type of the page parser filter.</returns>
    </member>
    <member name="P:System.Web.UI.PageParser.DefaultUserControlBaseType">
      <summary>Gets or sets the type from which all user controls are derived.</summary>
      <returns>The type from which user controls are derived.</returns>
    </member>
    <member name="P:System.Web.UI.PageParser.EnableLongStringsAsResources">
      <summary>Gets or sets a value that indicates whether ASP.NET should optimize its internal handling of long strings that are encountered when ASP.NET parses a page or control.</summary>
      <returns>true if ASP.NET should optimize its internal handling of long strings; otherwise false.</returns>
    </member>
    <member name="M:System.Web.UI.PageParser.GetCompiledPageInstance(System.String,System.String,System.Web.HttpContext)">
      <summary>Returns an instance of a compiled page for the specific virtual path.</summary>
      <returns>Returns the compiled instance of the requested page. </returns>
      <param name="virtualPath">The virtual path of the requested file. </param>
      <param name="inputFile">The physical path of the page. </param>
      <param name="context">An object that contains information about the current Web request. </param>
    </member>
    <member name="T:System.Web.UI.PageParserFilter">
      <summary>Provides an abstract base class for a page parser filter that is used by the ASP.NET parser to determine whether an item is allowed in the page at parse time. </summary>
    </member>
    <member name="M:System.Web.UI.PageParserFilter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.PageParserFilter" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.PageParserFilter.AddControl(System.Type,System.Collections.IDictionary)">
      <summary>Adds a <see cref="T:System.Web.UI.ControlBuilder" /> object in the page control tree at the current page parser position.</summary>
      <param name="type">The control type that the <see cref="T:System.Web.UI.ControlBuilder" /> represents.</param>
      <param name="attributes">The <see cref="T:System.Collections.IDictionary" /> object that holds all the specified tag attributes.</param>
    </member>
    <member name="M:System.Web.UI.PageParserFilter.AllowBaseType(System.Type)">
      <summary>Determines whether the page can be derived from the specified <see cref="T:System.Type" />.</summary>
      <returns>true if the page can inherit from the specified type; otherwise, false. The default is false.</returns>
      <param name="baseType">A <see cref="T:System.Type" /> that represents the potential base class of the current page.</param>
    </member>
    <member name="P:System.Web.UI.PageParserFilter.AllowCode">
      <summary>Gets a value indicating whether an ASP.NET parser filter permits code on the page. </summary>
      <returns>true if a parser filter permits code; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Web.UI.PageParserFilter.AllowControl(System.Type,System.Web.UI.ControlBuilder)">
      <summary>Gets a value indicating whether the specified control type is allowed for this page.</summary>
      <returns>true if the control can be used with the current page; otherwise, false. The default value is false.</returns>
      <param name="controlType">A <see cref="T:System.Type" /> that represents the type of control to add.</param>
      <param name="builder">A <see cref="T:System.Web.UI.ControlBuilder" /> used to build the specified type of control.</param>
    </member>
    <member name="M:System.Web.UI.PageParserFilter.AllowServerSideInclude(System.String)">
      <summary>Determines whether a parser permits a specific server-side include on a page.</summary>
      <returns>true if a parser permits the specific server-side include; otherwise, false. The default is false.</returns>
      <param name="includeVirtualPath">The virtual path to the included file.</param>
    </member>
    <member name="M:System.Web.UI.PageParserFilter.AllowVirtualReference(System.String,System.Web.UI.VirtualReferenceType)">
      <summary>Determines whether a parser permits a virtual reference to a specific type of resource on a page.</summary>
      <returns>true if the parser permits a virtual reference to a specific type of resource; otherwise, false.</returns>
      <param name="referenceVirtualPath">The virtual path to a resource, such as a master page file, ASP.NET page, or user control. </param>
      <param name="referenceType">A <see cref="T:System.Web.UI.VirtualReferenceType" /> value that identifies the type of resource.</param>
    </member>
    <member name="P:System.Web.UI.PageParserFilter.CalledFromParseControl">
      <summary>Gets a value that indicates whether the parser filter was called from the page.</summary>
      <returns>true if a parser filter was called from the page; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.PageParserFilter.GetCompilationMode(System.Web.UI.CompilationMode)">
      <summary>Retrieves the current compilation mode for the page.</summary>
      <returns>One of the <see cref="T:System.Web.UI.CompilationMode" /> values.</returns>
      <param name="current">The current compilation mode for the page.</param>
    </member>
    <member name="M:System.Web.UI.PageParserFilter.GetNoCompileUserControlType">
      <summary>Returns a <see cref="T:System.Type" /> that should be used for pages or controls that are not dynamically compiled.</summary>
      <returns>The return <see cref="T:System.Type" /> that should be used for pages or controls that are not dynamically compiled. The default is null.</returns>
    </member>
    <member name="M:System.Web.UI.PageParserFilter.Initialize">
      <summary>Initializes a filter used for a page.</summary>
    </member>
    <member name="P:System.Web.UI.PageParserFilter.Line">
      <summary>Gets the line number that is currently being parsed in the file.</summary>
      <returns>The integer value representing the line in the file that the parser filter is currently processing.</returns>
    </member>
    <member name="P:System.Web.UI.PageParserFilter.NumberOfControlsAllowed">
      <summary>Gets the maximum number of controls that a parser filter can parse for a single page.</summary>
      <returns>The maximum number of controls a parser filter can parse for a page. The default value is 0, which indicates that no controls are parsed.</returns>
    </member>
    <member name="P:System.Web.UI.PageParserFilter.NumberOfDirectDependenciesAllowed">
      <summary>Gets the maximum number of direct file dependencies that the page parser permits for a single page.</summary>
      <returns>The maximum number of direct file dependencies the page parser can parse for a page. The default is 0, which that indicates no dependencies are allowed.</returns>
    </member>
    <member name="M:System.Web.UI.PageParserFilter.ParseComplete(System.Web.UI.ControlBuilder)">
      <summary>Called by an ASP.NET page parser to notify a filter when the parsing of a page is complete.</summary>
      <param name="rootBuilder">The <see cref="T:System.Web.UI.ControlBuilder" /> associated with the page parsing.</param>
    </member>
    <member name="M:System.Web.UI.PageParserFilter.PreprocessDirective(System.String,System.Collections.IDictionary)">
      <summary>Allows the page parser filter to preprocess page directives.</summary>
      <param name="directiveName">The page directive.</param>
      <param name="attributes">A collection of attributes and values parsed from the page.</param>
    </member>
    <member name="M:System.Web.UI.PageParserFilter.ProcessCodeConstruct(System.Web.UI.CodeConstructType,System.String)">
      <summary>Returns a value that indicates whether a code block should be processed by subsequent parser filters.</summary>
      <returns>true if the parser should process a code construct further; otherwise, false. The default is false.</returns>
      <param name="codeType">One of the <see cref="T:System.Web.UI.CodeConstructType" /> enumeration values that identifies the type of the code construct.</param>
      <param name="code">The string literal that contains the code inside the code construct.</param>
    </member>
    <member name="M:System.Web.UI.PageParserFilter.ProcessDataBindingAttribute(System.String,System.String,System.String)">
      <summary>Returns a value that indicates whether the parser filter processes a data binding expression in an attribute.</summary>
      <returns>true if the parser filter processes data binding attributes; otherwise, false. The default is false.</returns>
      <param name="controlId">The ID of the control that contains the data binding attribute.</param>
      <param name="name">The name of the attribute with the data binding expression.</param>
      <param name="value">The data binding expression.</param>
    </member>
    <member name="M:System.Web.UI.PageParserFilter.ProcessEventHookup(System.String,System.String,System.String)">
      <summary>Returns a value that indicates whether event handlers should be processed further by the parser filter.</summary>
      <returns>true if the parser processes event handlers; otherwise, false. The default is false.</returns>
      <param name="controlId">The ID of the control whose event has the event handler to process.</param>
      <param name="eventName">The event name of the <paramref name="controlID" /> to filter on.</param>
      <param name="handlerName">The handler of the <paramref name="eventName" /> name to filter on.</param>
    </member>
    <member name="M:System.Web.UI.PageParserFilter.SetPageProperty(System.String,System.String,System.String)">
      <summary>Sets a property on a control derived from the <see cref="T:System.Web.UI.TemplateControl" /> class, which includes the <see cref="T:System.Web.UI.Page" />, <see cref="T:System.Web.UI.UserControl" />, and <see cref="T:System.Web.UI.MasterPage" /> controls.</summary>
      <param name="filter">A string containing the value of the filter on an expression. For an example, see <see cref="T:System.Web.UI.PropertyEntry" />.</param>
      <param name="name">The name of the property to set a value for.</param>
      <param name="value">The value of the property to set.</param>
    </member>
    <member name="P:System.Web.UI.PageParserFilter.TotalNumberOfDependenciesAllowed">
      <summary>Gets the maximum number of direct and indirect file dependencies that the page parser permits for a single page.</summary>
      <returns>The maximum number of direct and indirect file dependencies the page parser can parse for a page. The default is 0, which indicates that no dependencies are allowed.</returns>
    </member>
    <member name="P:System.Web.UI.PageParserFilter.VirtualPath">
      <summary>Gets the virtual path to the page currently being parsed.</summary>
      <returns>A virtual path to an ASP.NET page.</returns>
    </member>
    <member name="T:System.Web.UI.PageStatePersister">
      <summary>Provides the base functionality for ASP.NET view state persistence mechanisms.</summary>
    </member>
    <member name="M:System.Web.UI.PageStatePersister.#ctor(System.Web.UI.Page)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.PageStatePersister" /> class.</summary>
      <param name="page">The <see cref="T:System.Web.UI.Page" /> that the view state persistence mechanism is created for.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="page" /> parameter is null.</exception>
    </member>
    <member name="P:System.Web.UI.PageStatePersister.ControlState">
      <summary>Gets or sets an object that represents the data that controls contained by the current <see cref="T:System.Web.UI.Page" /> object use to persist across HTTP requests to the Web server. </summary>
      <returns>An object that contains view state data.</returns>
    </member>
    <member name="M:System.Web.UI.PageStatePersister.Load">
      <summary>Overridden by derived classes to deserialize and load persisted state information when a <see cref="T:System.Web.UI.Page" /> object initializes its control hierarchy.</summary>
    </member>
    <member name="P:System.Web.UI.PageStatePersister.Page">
      <summary>Gets or sets the <see cref="T:System.Web.UI.Page" /> object that the view state persistence mechanism is created for.</summary>
      <returns>The <see cref="T:System.Web.UI.Page" /> that the <see cref="T:System.Web.UI.PageStatePersister" /> is associated with.</returns>
    </member>
    <member name="M:System.Web.UI.PageStatePersister.Save">
      <summary>Overridden by derived classes to serialize persisted state information when a <see cref="T:System.Web.UI.Page" /> object is unloaded from memory.</summary>
    </member>
    <member name="P:System.Web.UI.PageStatePersister.StateFormatter">
      <summary>Gets an <see cref="T:System.Web.UI.IStateFormatter" /> object that is used to serialize and deserialize the state information contained in the <see cref="P:System.Web.UI.PageStatePersister.ViewState" /> and <see cref="P:System.Web.UI.PageStatePersister.ControlState" /> properties during calls to the <see cref="M:System.Web.UI.PageStatePersister.Save" /> and <see cref="M:System.Web.UI.PageStatePersister.Load" /> methods.</summary>
      <returns>An instance of <see cref="T:System.Web.UI.IStateFormatter" /> that is used to serialize and deserialize object state.</returns>
    </member>
    <member name="P:System.Web.UI.PageStatePersister.ViewState">
      <summary>Gets or sets an object that represents the data that controls contained by the current <see cref="T:System.Web.UI.Page" /> object use to persist across HTTP requests to the Web server. </summary>
      <returns>An object that contains view state data.</returns>
    </member>
    <member name="T:System.Web.UI.PageTheme">
      <summary>Represents the base class for a page theme, which is a collection of resources that are used to define a consistent look across pages and controls in a Web site. The page theme can be set through configuration or the page directive.</summary>
    </member>
    <member name="M:System.Web.UI.PageTheme.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.PageTheme" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.PageTheme.AppRelativeTemplateSourceDirectory">
      <summary>When overridden a derived class, gets the relative URL of the directory for the <see cref="T:System.Web.UI.PageTheme" /> object.</summary>
      <returns>A string value containing the relative URL of the <see cref="T:System.Web.UI.PageTheme" /> directory.</returns>
    </member>
    <member name="P:System.Web.UI.PageTheme.ControlSkins">
      <summary>When overridden in a derived class, gets an <see cref="T:System.Collections.IDictionary" /> interface of the names of all default skins that are available for the current page theme, indexed by control type.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> that represents the control skins associated with the current page theme.</returns>
    </member>
    <member name="M:System.Web.UI.PageTheme.CreateSkinKey(System.Type,System.String)">
      <summary>Creates a lookup key object for a particular control type and skin ID. </summary>
      <returns>An object that can be used as a lookup key in a dictionary-style collection, which contains the control type and skin ID information.</returns>
      <param name="controlType">The <see cref="T:System.Type" /> of control to which a control skin applies, which is passed typically from the <see cref="P:System.Web.UI.ControlBuilder.ControlType" />.</param>
      <param name="skinID">The name of the control skin for which to create a key. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controlType" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.PageTheme.Eval(System.String)">
      <summary>Uses the <see cref="M:System.Web.UI.DataBinder.Eval(System.Object,System.String)" /> method of the <see cref="P:System.Web.UI.PageTheme.Page" /> property that the instance of the <see cref="T:System.Web.UI.PageTheme" /> class is associated with to evaluate a data-binding expression.</summary>
      <returns>An object that results from the evaluation of the data-binding expression.</returns>
      <param name="expression">The navigation path from the container to the public property value. For details, see <see cref="T:System.Web.UI.DataBinder" />.</param>
    </member>
    <member name="M:System.Web.UI.PageTheme.Eval(System.String,System.String)">
      <summary>Uses the <see cref="M:System.Web.UI.DataBinder.Eval(System.Object,System.String,System.String)" /> method of the <see cref="P:System.Web.UI.PageTheme.Page" /> property that the instance of the <see cref="T:System.Web.UI.PageTheme" /> class is associated with to evaluate a data-binding expression.</summary>
      <returns>A string that results from the evaluation of the data-binding expression and conversion to a string type.</returns>
      <param name="expression">The navigation path from the container to the public property value. For details, see <see cref="T:System.Web.UI.DataBinder" />.</param>
      <param name="format">A .NET Framework format string. For details, see <see cref="T:System.Web.UI.DataBinder" />.</param>
    </member>
    <member name="P:System.Web.UI.PageTheme.LinkedStyleSheets">
      <summary>When overridden in a derived class, gets an array of style sheets that are linked to this page.</summary>
      <returns>A string array of style sheets linked to this page.</returns>
    </member>
    <member name="P:System.Web.UI.PageTheme.Page">
      <summary>Gets the <see cref="T:System.Web.UI.Page" /> object that is associated with the instance of the <see cref="T:System.Web.UI.PageTheme" /> class.</summary>
      <returns>The <see cref="T:System.Web.UI.Page" /> associated with the <see cref="T:System.Web.UI.PageTheme" />.</returns>
    </member>
    <member name="M:System.Web.UI.PageTheme.TestDeviceFilter(System.String)">
      <summary>Tests whether a device filter applies to the <see cref="T:System.Web.UI.Page" /> control that the instance of the <see cref="T:System.Web.UI.PageTheme" /> class is associated with.</summary>
      <returns>true if <paramref name="deviceFilterName" /> applies to the page; otherwise; false.</returns>
      <param name="deviceFilterName">The string name of the device filter to check. </param>
    </member>
    <member name="M:System.Web.UI.PageTheme.XPath(System.String)">
      <summary>Evaluates an XPath data-binding expression.</summary>
      <returns>An object that results from the evaluation of the data-binding <paramref name="xPathExpression" />.</returns>
      <param name="xPathExpression">The XPath expression to evaluate. For details, see <see cref="T:System.Web.UI.XPathBinder" />.</param>
    </member>
    <member name="M:System.Web.UI.PageTheme.XPath(System.String,System.String)">
      <summary>Evaluates an XPath data-binding expression using the specified format string to display the result.</summary>
      <returns>A string that results from the evaluation of the data-binding expression and conversion to a string type.</returns>
      <param name="xPathExpression">The XPath expression to evaluate. For details, see <see cref="T:System.Web.UI.XPathBinder" />.</param>
      <param name="format">A .NET Framework format string to apply to the result. </param>
    </member>
    <member name="M:System.Web.UI.PageTheme.XPath(System.String,System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Uses the <see cref="M:System.Web.UI.TemplateControl.XPath(System.String,System.String,System.Xml.IXmlNamespaceResolver)" /> method of the <see cref="P:System.Web.UI.PageTheme.Page" /> control that the instance of the <see cref="T:System.Web.UI.PageTheme" /> class is associated with to evaluate an XPath data-binding expression.</summary>
      <returns>A string that results from the evaluation of the data-binding expression and conversion to a string type.</returns>
      <param name="xPathExpression">The XPath expression to evaluate. For details, see <see cref="T:System.Web.UI.XPathBinder" />. </param>
      <param name="format">A .NET Framework format string to apply to the result. </param>
      <param name="resolver">A set of prefix and namespace mappings used for namespace resolution.</param>
    </member>
    <member name="M:System.Web.UI.PageTheme.XPath(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Evaluates an XPath data-binding expression using the specified prefix and namespace mappings for namespace resolution. </summary>
      <returns>An object that results from the evaluation of the data-binding <paramref name="xPathExpression" />.</returns>
      <param name="xPathExpression">The XPath expression to evaluate. For details, see <see cref="T:System.Web.UI.XPathBinder" />. </param>
      <param name="resolver">A set of prefix and namespace mappings used for namespace resolution.</param>
    </member>
    <member name="M:System.Web.UI.PageTheme.XPathSelect(System.String)">
      <summary>Evaluates an XPath data-binding expression and returns a node collection that implements the <see cref="T:System.Collections.IEnumerable" /> interface.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> list of nodes.</returns>
      <param name="xPathExpression">The XPath expression to evaluate. For details, see <see cref="T:System.Web.UI.XPathBinder" />.</param>
    </member>
    <member name="M:System.Web.UI.PageTheme.XPathSelect(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Evaluates an XPath data-binding expression using the specified prefix and namespace mappings for namespace resolution and returns a node collection that implements the <see cref="T:System.Collections.IEnumerable" /> interface.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> list of nodes. </returns>
      <param name="xPathExpression">The XPath expression to evaluate. For details, see <see cref="T:System.Web.UI.XPathBinder" />. </param>
      <param name="resolver">A set of prefix and namespace mappings used to for namespace resolution. </param>
    </member>
    <member name="T:System.Web.UI.Pair">
      <summary>Provides a basic utility class that is used to store two related objects. </summary>
    </member>
    <member name="M:System.Web.UI.Pair.#ctor">
      <summary>Creates a new, uninitialized instance of the <see cref="T:System.Web.UI.Pair" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Pair.#ctor(System.Object,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Pair" /> class, using the specified object pair.</summary>
      <param name="x">An object. </param>
      <param name="y">An object. </param>
    </member>
    <member name="F:System.Web.UI.Pair.First">
      <summary>Gets or sets the first object of the object pair.</summary>
    </member>
    <member name="F:System.Web.UI.Pair.Second">
      <summary>Gets or sets the second object of the object pair.</summary>
    </member>
    <member name="T:System.Web.UI.ParseChildrenAttribute">
      <summary>Defines a metadata attribute that you can use when developing ASP.NET server controls. Use the <see cref="T:System.Web.UI.ParseChildrenAttribute" /> class to indicate how the page parser should treat content nested inside a server control tag declared on a page. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.ParseChildrenAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ParseChildrenAttribute" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.ParseChildrenAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ParseChildrenAttribute" /> class using the <see cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" /> property to determine if the elements that are contained within a server control are parsed as properties of the server control.</summary>
      <param name="childrenAsProperties">true to parse the elements as properties of the server control; otherwise, false. </param>
    </member>
    <member name="M:System.Web.UI.ParseChildrenAttribute.#ctor(System.Boolean,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ParseChildrenAttribute" /> class using the <paramref name="childrenAsProperties" /> and <paramref name="defaultProperty" /> parameters.</summary>
      <param name="childrenAsProperties">true to parse the elements as properties of the server control; otherwise, false. </param>
      <param name="defaultProperty">A string that defines a collection property of the server control into which nested content is parsed by default. </param>
    </member>
    <member name="M:System.Web.UI.ParseChildrenAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ParseChildrenAttribute" /> class using the <see cref="P:System.Web.UI.ParseChildrenAttribute.ChildControlType" /> property to determine which elements that are contained within a server control are parsed as controls.</summary>
      <param name="childControlType">The control type to parse as a property. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="childControlType" /> is null. </exception>
    </member>
    <member name="P:System.Web.UI.ParseChildrenAttribute.ChildControlType">
      <summary>Gets a value indicating the allowed type of a control. </summary>
      <returns>The control type. The default is <see cref="T:System.Web.UI.Control" />. </returns>
    </member>
    <member name="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties">
      <summary>Gets or sets a value indicating whether to parse the elements that are contained within a server control as properties.</summary>
      <returns>true to parse the elements as properties; otherwise, false. The default is true.</returns>
      <exception cref="T:System.NotSupportedException">The current <see cref="T:System.Web.UI.ParseChildrenAttribute" /> was invoked with <paramref name="childrenAsProperties" /> set to false.</exception>
    </member>
    <member name="F:System.Web.UI.ParseChildrenAttribute.Default">
      <summary>Defines the default value for the <see cref="T:System.Web.UI.ParseChildrenAttribute" /> class. This field is read-only.</summary>
    </member>
    <member name="P:System.Web.UI.ParseChildrenAttribute.DefaultProperty">
      <summary>Gets or sets the default property for the server control into which the elements are parsed.</summary>
      <returns>The name of the default collection property of the server control into which the elements are parsed.</returns>
      <exception cref="T:System.NotSupportedException">The current <see cref="T:System.Web.UI.ParseChildrenAttribute" /> was invoked with <paramref name="childrenAsProperties" /> set to false.</exception>
    </member>
    <member name="M:System.Web.UI.ParseChildrenAttribute.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <returns>true if <paramref name="obj" /> is equal to the current object; otherwise, false.</returns>
      <param name="obj">The object to compare with the current object.</param>
    </member>
    <member name="M:System.Web.UI.ParseChildrenAttribute.GetHashCode">
      <summary>Serves as a hash function for the <see cref="T:System.Web.UI.ParseChildrenAttribute" /> object.</summary>
      <returns>A hash code for the current <see cref="T:System.Web.UI.ParseChildrenAttribute" /> object. </returns>
    </member>
    <member name="M:System.Web.UI.ParseChildrenAttribute.IsDefaultAttribute">
      <summary>Returns a value indicating whether the value of the current instance of the <see cref="T:System.Web.UI.ParseChildrenAttribute" /> class is the default value of the derived class.</summary>
      <returns>true if the current <see cref="T:System.Web.UI.ParseChildrenAttribute" /> value is the default instance; otherwise, false.</returns>
    </member>
    <member name="F:System.Web.UI.ParseChildrenAttribute.ParseAsChildren">
      <summary>Indicates that the nested content that is contained within the server control is parsed as controls.</summary>
    </member>
    <member name="F:System.Web.UI.ParseChildrenAttribute.ParseAsProperties">
      <summary>Indicates that the nested content that is contained within a server control is parsed as properties of the control. </summary>
    </member>
    <member name="T:System.Web.UI.PartialCachingAttribute">
      <summary>Defines the metadata attribute that Web Forms user controls (.ascx files) use to indicate if and how their output is cached. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.PartialCachingAttribute.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.PartialCachingAttribute" /> class with the specified duration assigned to the user control to be cached.</summary>
      <param name="duration">The amount of time, in seconds, a user control should remain in the output cache. </param>
    </member>
    <member name="M:System.Web.UI.PartialCachingAttribute.#ctor(System.Int32,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.PartialCachingAttribute" /> class, specifying the caching duration, any GET and POST values, control names, and custom output caching requirements used to vary the cache.</summary>
      <param name="duration">The amount of time, in seconds, that the user control is cached. </param>
      <param name="varyByParams">A semicolon-separated list of strings used to vary the output cache. By default, these strings correspond to a query string value sent with GET method attributes or to a parameter sent using the POST method. When this attribute is set to multiple parameters, the output cache contains a different version of the requested document for each specified parameter. Possible values include "none", "*", and any valid query string or POST parameter name. </param>
      <param name="varyByControls">A semicolon-separated list of strings used to vary the output cache. These strings represent fully qualified names of properties on a user control. When this parameter is used for a user control, the user control output is varied to the cache for each specified user control property. </param>
      <param name="varyByCustom">Any text that represents custom output caching requirements. If this parameter is given a value of "browser", the cache is varied by browser name and major version information. If a custom string is entered, you must override the <see cref="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)" /> method in your application's Global.asax file. </param>
    </member>
    <member name="M:System.Web.UI.PartialCachingAttribute.#ctor(System.Int32,System.String,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.PartialCachingAttribute" /> class, specifying the caching duration, any GET and POST values, control names, custom output caching requirements used to vary the cache, and whether the user control output can be shared with multiple pages.</summary>
      <param name="duration">The amount of time, in seconds, that the user control is cached.</param>
      <param name="varyByParams">A semicolon-separated list of strings used to vary the output cache. By default, these strings correspond to a query string value sent with GET method attributes, or a parameter sent using the POST method. When this attribute is set to multiple parameters, the output cache contains a different version of the requested document for each specified parameter. Possible values include "none", "*", and any valid query string or POST parameter name.</param>
      <param name="varyByControls">A semicolon-separated list of strings used to vary the output cache. These strings represent fully qualified names of properties on a user control. When this parameter is used for a user control, the user control output is varied to the cache for each specified user control property.</param>
      <param name="varyByCustom">Any text that represents custom output caching requirements. If this parameter is given a value of "browser", the cache is varied by browser name and major version information. If a custom string is entered, you must override the <see cref="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)" /> method in your application's Global.asax file.</param>
      <param name="shared">true to indicate that the user control output can be shared with multiple pages; otherwise, false. </param>
    </member>
    <member name="M:System.Web.UI.PartialCachingAttribute.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.PartialCachingAttribute" /> class, specifying the caching duration, any GET and POST values, control names, custom output caching requirements used to vary the cache, the database dependencies, and whether the user control output can be shared with multiple pages. </summary>
      <param name="duration">The amount of time, in seconds, that the user control is cached.</param>
      <param name="varyByParams">A semicolon-separated list of strings used to vary the output cache. By default, these strings correspond to a query string value sent with GET method attributes, or a parameter sent using the POST method. When this attribute is set to multiple parameters, the output cache contains a different version of the requested document for each specified parameter. Possible values include "none", "*", and any valid query string or POST parameter name.</param>
      <param name="varyByControls">A semicolon-separated list of strings used to vary the output cache. These strings represent fully qualified names of properties on a user control. When this parameter is used for a user control, the user control output is varied to the cache for each specified user control property.</param>
      <param name="varyByCustom">Any text that represents custom output caching requirements. If this parameter is given a value of "browser", the cache is varied by browser name and major version information. If a custom string is entered, you must override the <see cref="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)" /> method in your application's Global.asax file.</param>
      <param name="sqlDependency">A delimited list of database names and table names that, when changed, explicitly expire a cache entry in the ASP.NET cache. These database names match those SQL Server cache dependencies identified in your Web configuration section.</param>
      <param name="shared">true to indicate that the user control output can be shared with multiple pages; otherwise, false.</param>
    </member>
    <member name="P:System.Web.UI.PartialCachingAttribute.Duration">
      <summary>Gets the amount of time, in seconds, that cached items should remain in the output cache.</summary>
      <returns>The amount of time, in seconds, a user control should remain in the output cache.</returns>
    </member>
    <member name="P:System.Web.UI.PartialCachingAttribute.ProviderName">
      <summary>Gets or sets the name of the provider that is used to store the output-cached data for the associated control.</summary>
      <returns>The name of the provider.</returns>
    </member>
    <member name="P:System.Web.UI.PartialCachingAttribute.Shared">
      <summary>Gets a value indicating whether user control output can be shared with multiple pages.</summary>
      <returns>true if user control output can be shared between multiple pages; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.PartialCachingAttribute.SqlDependency">
      <summary>Gets a delimited string that identifies one or more database and table name pairs that the cached user control is dependent on.</summary>
      <returns>A delimited string that identifies a set of database and table names that the user control cache entry is dependent on.</returns>
    </member>
    <member name="P:System.Web.UI.PartialCachingAttribute.VaryByControls">
      <summary>Gets a list of user control properties that the output cache uses to vary the user control.</summary>
      <returns>The list of user control properties.</returns>
    </member>
    <member name="P:System.Web.UI.PartialCachingAttribute.VaryByCustom">
      <summary>Gets a list of custom strings that the output cache will use to vary the user control.</summary>
      <returns>The list of custom strings.</returns>
    </member>
    <member name="P:System.Web.UI.PartialCachingAttribute.VaryByParams">
      <summary>Gets a list of query string or form POST parameters that the output cache will use to vary the user control.</summary>
      <returns>The list of query string or form POST parameters.</returns>
    </member>
    <member name="T:System.Web.UI.PartialCachingControl">
      <summary>Created when a user control (.ascx file) is specified for output caching, using either the @ OutputCache page directive or the <see cref="T:System.Web.UI.PartialCachingAttribute" /> attribute, and the user control is inserted into a page's control hierarchy by dynamically loading the user control with the <see cref="M:System.Web.UI.TemplateControl.LoadControl(System.String)" /> method.</summary>
    </member>
    <member name="P:System.Web.UI.PartialCachingControl.CachedControl">
      <summary>Gets a reference to the user control that is cached.</summary>
      <returns>The user control that is cached.</returns>
    </member>
    <member name="T:System.Web.UI.PersistChildrenAttribute">
      <summary>Defines an attribute that is used by ASP.NET server controls to indicate at design time whether nested content that is contained within a server control corresponds to controls or to properties of the server control. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.PersistChildrenAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.PersistChildrenAttribute" /> class using a Boolean value indicating whether to persist nested content as nested controls. </summary>
      <param name="persist">true to persist the nested content as nested controls; otherwise, false. </param>
    </member>
    <member name="M:System.Web.UI.PersistChildrenAttribute.#ctor(System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.PersistChildrenAttribute" /> class using two Boolean values. One indicating whether to persist nested content as nested controls and the other indicating whether to use a custom persistence method.</summary>
      <param name="persist">true to persist nested content as nested controls; otherwise, false.</param>
      <param name="usesCustomPersistence">true to use customized persistence; otherwise, false.</param>
    </member>
    <member name="F:System.Web.UI.PersistChildrenAttribute.Default">
      <summary>Indicates the default attribute state. The <see cref="F:System.Web.UI.PersistChildrenAttribute.Default" /> field is read-only.</summary>
    </member>
    <member name="M:System.Web.UI.PersistChildrenAttribute.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <returns>true if <paramref name="obj" /> is equal to the current object; otherwise, false.</returns>
      <param name="obj">The object to compare with the current object.</param>
    </member>
    <member name="M:System.Web.UI.PersistChildrenAttribute.GetHashCode">
      <summary>Serves as a hash function for the <see cref="T:System.Web.UI.PersistChildrenAttribute" /> class.</summary>
      <returns>A hash code for the <see cref="T:System.Web.UI.PersistChildrenAttribute" />.</returns>
    </member>
    <member name="M:System.Web.UI.PersistChildrenAttribute.IsDefaultAttribute">
      <summary>Returns a value indicating whether the value of the current instance of the <see cref="T:System.Web.UI.PersistChildrenAttribute" /> class is the default value of the derived clss.</summary>
      <returns>true if the value of the current instance of the <see cref="T:System.Web.UI.PersistChildrenAttribute" /> is the default instance; otherwise, false. </returns>
    </member>
    <member name="F:System.Web.UI.PersistChildrenAttribute.No">
      <summary>Indicates that nested content should not persist as nested controls at design time. This field is read-only.</summary>
    </member>
    <member name="P:System.Web.UI.PersistChildrenAttribute.Persist">
      <summary>Gets a value that indicates whether the nested content is persisted as nested controls at design time.</summary>
      <returns>true to persist nested content as nested controls; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.PersistChildrenAttribute.UsesCustomPersistence">
      <summary>Gets a value indicating whether the server control provides custom persistence of nested controls at design time. </summary>
      <returns>true to provide custom persistence of nested content; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Web.UI.PersistChildrenAttribute.Yes">
      <summary>Indicates that nested content should persist as controls at design time. The <see cref="F:System.Web.UI.PersistChildrenAttribute.Yes" /> field is read-only.</summary>
    </member>
    <member name="T:System.Web.UI.PersistenceMode">
      <summary>Specifies how an ASP.NET server control property or event is persisted declaratively in an .aspx or .ascx file.</summary>
    </member>
    <member name="F:System.Web.UI.PersistenceMode.Attribute">
      <summary>Specifies that the property or event persists as an attribute.</summary>
    </member>
    <member name="F:System.Web.UI.PersistenceMode.InnerProperty">
      <summary>Specifies that the property persists in the ASP.NET server control as a nested tag. This is commonly used for complex objects, those that have persistable properties of their own.</summary>
    </member>
    <member name="F:System.Web.UI.PersistenceMode.InnerDefaultProperty">
      <summary>Specifies that the property persists in the ASP.NET server control as inner text. Also indicates that this property is defined as the element's default property. Only one property can be designated the default property.</summary>
    </member>
    <member name="F:System.Web.UI.PersistenceMode.EncodedInnerDefaultProperty">
      <summary>Specifies that the property persists as the only inner text of the ASP.NET server control. The property value is HTML encoded. Only a string can be given this designation.</summary>
    </member>
    <member name="T:System.Web.UI.PersistenceModeAttribute">
      <summary>Defines the metadata attribute that specifies how an ASP.NET server control property or event is persisted to an ASP.NET page at design time. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.PersistenceModeAttribute.#ctor(System.Web.UI.PersistenceMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.PersistenceModeAttribute" /> class. </summary>
      <param name="mode">The <see cref="T:System.Web.UI.PersistenceMode" /> value to assign to <see cref="P:System.Web.UI.PersistenceModeAttribute.Mode" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> is not one of the <see cref="T:System.Web.UI.PersistenceMode" /> values.</exception>
    </member>
    <member name="F:System.Web.UI.PersistenceModeAttribute.Attribute">
      <summary>Specifies that the property or event persists in the opening tag of the server control as an attribute. This field is read-only.</summary>
    </member>
    <member name="F:System.Web.UI.PersistenceModeAttribute.Default">
      <summary>Specifies the default type for the <see cref="T:System.Web.UI.PersistenceModeAttribute" /> class. The default is PersistenceMode.Attribute. This field is read-only.</summary>
    </member>
    <member name="F:System.Web.UI.PersistenceModeAttribute.EncodedInnerDefaultProperty">
      <summary>Specifies that a property is HTML-encoded and persists as the only inner content of the ASP.NET server control. This field is read-only.</summary>
    </member>
    <member name="M:System.Web.UI.PersistenceModeAttribute.Equals(System.Object)">
      <summary>Compares the <see cref="T:System.Web.UI.PersistenceModeAttribute" /> object against another object.</summary>
      <returns>true if the objects are considered equal; otherwise, false.</returns>
      <param name="obj">The object to compare to.</param>
    </member>
    <member name="M:System.Web.UI.PersistenceModeAttribute.GetHashCode">
      <summary>Provides a hash value for a <see cref="T:System.Web.UI.PersistenceModeAttribute" /> attribute.</summary>
      <returns>The hash value to be assigned to the <see cref="T:System.Web.UI.PersistenceModeAttribute" />.</returns>
    </member>
    <member name="F:System.Web.UI.PersistenceModeAttribute.InnerDefaultProperty">
      <summary>Specifies that a property persists as the only inner content of the ASP.NET server control. This field is read-only.</summary>
    </member>
    <member name="F:System.Web.UI.PersistenceModeAttribute.InnerProperty">
      <summary>Specifies that the property persists as a nested tag within the opening and closing tags of the server control. This field is read-only.</summary>
    </member>
    <member name="M:System.Web.UI.PersistenceModeAttribute.IsDefaultAttribute">
      <summary>Indicates whether the <see cref="T:System.Web.UI.PersistenceModeAttribute" /> object is of the default type.</summary>
      <returns>true if the <see cref="T:System.Web.UI.PersistenceModeAttribute" /> is of the default type; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.PersistenceModeAttribute.Mode">
      <summary>Gets the current value of the <see cref="T:System.Web.UI.PersistenceMode" /> enumeration.</summary>
      <returns>A <see cref="T:System.Web.UI.PersistenceMode" /> that represents the current value of the enumeration. This value can be Attribute, InnerProperty, InnerDefaultProperty, or EncodedInnerDefaultProperty. The default is Attribute.</returns>
    </member>
    <member name="T:System.Web.UI.PostBackOptions">
      <summary>Specifies how client-side JavaScript is generated to initiate a postback event.</summary>
    </member>
    <member name="M:System.Web.UI.PostBackOptions.#ctor(System.Web.UI.Control)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.PostBackOptions" /> class with the specified target control data.</summary>
      <param name="targetControl">The <see cref="T:System.Web.UI.Control" /> that receives the postback event.</param>
    </member>
    <member name="M:System.Web.UI.PostBackOptions.#ctor(System.Web.UI.Control,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.PostBackOptions" /> class with the specified target control and argument data.</summary>
      <param name="targetControl">The <see cref="T:System.Web.UI.Control" /> that receives the postback event.</param>
      <param name="argument">The optional parameter passed during the postback event.</param>
    </member>
    <member name="M:System.Web.UI.PostBackOptions.#ctor(System.Web.UI.Control,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.PostBackOptions" /> class with the specified values for the instance's properties.</summary>
      <param name="targetControl">The <see cref="T:System.Web.UI.Control" /> that receives the postback event.</param>
      <param name="argument">The optional parameter passed during the postback event.</param>
      <param name="actionUrl">The target of the postback.</param>
      <param name="autoPostBack">true to automatically post the form back to the server in response to a user action; otherwise, false.</param>
      <param name="requiresJavaScriptProtocol">true if the javascript: prefix is required; otherwise, false.</param>
      <param name="trackFocus">true if the postback event should return the page to the current scroll position and return focus to the target control; otherwise, false.</param>
      <param name="clientSubmit">true if the postback event can be raised by client script; otherwise, false.</param>
      <param name="performValidation">true if client-side validation is required before the postback event occurs; otherwise, false.</param>
      <param name="validationGroup">The group of controls for which <see cref="T:System.Web.UI.PostBackOptions" /> causes validation when it posts back to the server.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetControl" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.PostBackOptions.ActionUrl">
      <summary>Gets or sets the target URL for the postback of a Web Forms page.</summary>
      <returns>The URL for the postback of a Web Forms page. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.PostBackOptions.Argument">
      <summary>Gets or sets an optional argument that is transferred in the postback event.</summary>
      <returns>The optional argument that is transferred in the postback event. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.PostBackOptions.AutoPostBack">
      <summary>Gets or sets a value that indicates whether the form will automatically post back to the server in response to a user action.</summary>
      <returns>true if the form will automatically post back in response to a user action; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.UI.PostBackOptions.ClientSubmit">
      <summary>Gets or sets a value indicating whether the postback event should occur from client-side script.</summary>
      <returns>true if the postback event should occur from client-side script; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Web.UI.PostBackOptions.PerformValidation">
      <summary>Gets or sets a value indicating whether client-side validation is required before the postback event occurs.</summary>
      <returns>true if client-side validation is required before the postback event occurs; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.UI.PostBackOptions.RequiresJavaScriptProtocol">
      <summary>Gets or sets a value indicating whether the javascript: prefix is generated for the client-side script. </summary>
      <returns>true if the javascript: prefix is generated for the client-side script; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Web.UI.PostBackOptions.TargetControl">
      <summary>Gets the control target that receives the postback event.</summary>
      <returns>A <see cref="T:System.Web.UI.Control" /> that represents the control that receives the postback event.</returns>
    </member>
    <member name="P:System.Web.UI.PostBackOptions.TrackFocus">
      <summary>Gets or sets a value indicating whether the postback event should return the page to the current scroll position and return focus to the current control.</summary>
      <returns>true if the postback event should return the page to the current scroll position and return focus to the target control; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.UI.PostBackOptions.ValidationGroup">
      <summary>Gets or sets the group of controls for which the <see cref="T:System.Web.UI.PostBackOptions" /> object causes validation when it posts back to the server. </summary>
      <returns>The group of controls for which the <see cref="T:System.Web.UI.PostBackOptions" /> object causes validation when it posts back to the server. The default value is an empty string ("").</returns>
    </member>
    <member name="T:System.Web.UI.PropertyConverter">
      <summary>Contains helper functions to convert property values to and from strings.</summary>
    </member>
    <member name="M:System.Web.UI.PropertyConverter.EnumFromString(System.Type,System.String)">
      <summary>Converts the string representation to a value of the specified enumeration type. </summary>
      <returns>An enumeration of type <paramref name="enumType" />.</returns>
      <param name="enumType">A <see cref="T:System.Type" /> that represents the enumeration type to create from the <paramref name="value" /> parameter.</param>
      <param name="value">The <see cref="T:System.String" /> that represents a value in the enumerator.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> or <paramref name="value" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.- or -<paramref name="value" /> is either an empty string ("") or contains only white spaces.- or - <paramref name="value" /> is a name, but not one of the named constants defined for the enumeration.</exception>
    </member>
    <member name="M:System.Web.UI.PropertyConverter.EnumToString(System.Type,System.Object)">
      <summary>Converts the value of the specified enumeration type to its equivalent string representation.</summary>
      <returns>The string representation of <paramref name="enumValue" />.</returns>
      <param name="enumType">A <see cref="T:System.Type" /> that represents the enumeration type of <paramref name="enumValue" />. </param>
      <param name="enumValue">The value to convert. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="enumType" /> or <paramref name="enumValue" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="enumType" /> parameter is not an <see cref="T:System.Enum" /> type.- or - The <paramref name="enumValue" /> parameter contains a value from an enumeration that differs in type from <paramref name="enumType" />.- or - The type of <paramref name="enumValue" /> is not an underlying type of <paramref name="enumType" />. </exception>
    </member>
    <member name="M:System.Web.UI.PropertyConverter.ObjectFromString(System.Type,System.Reflection.MemberInfo,System.String)">
      <summary>Converts the string value to the specified object type.</summary>
      <returns>An object of type <paramref name="objType" />.</returns>
      <param name="objType">The <see cref="T:System.Type" /> to create from <paramref name="value" />.</param>
      <param name="propertyInfo">The properties to use during conversion.</param>
      <param name="value">The <see cref="T:System.String" /> to convert into an object.</param>
      <exception cref="T:System.Web.HttpException">An object of the type specified by <paramref name="objType" /> cannot be created from the <paramref name="value" /> parameter.</exception>
    </member>
    <member name="T:System.Web.UI.PropertyEntry">
      <summary>Acts as the base class for all property entry classes.</summary>
    </member>
    <member name="P:System.Web.UI.PropertyEntry.DeclaringType">
      <summary>Gets the type of the class that declares this member.</summary>
      <returns>The <see cref="T:System.Type" /> that declares this member.</returns>
    </member>
    <member name="P:System.Web.UI.PropertyEntry.Filter">
      <summary>Gets or sets the value pertaining to the filter portion of an expression.</summary>
      <returns>A <see cref="T:System.String" /> containing the value of the filter on an expression.</returns>
    </member>
    <member name="P:System.Web.UI.PropertyEntry.Name">
      <summary>Gets or sets the property name that the expression applies to.</summary>
      <returns>A <see cref="T:System.String" /> containing the property name.</returns>
    </member>
    <member name="P:System.Web.UI.PropertyEntry.PropertyInfo">
      <summary>Gets or sets an object containing attributes of the property the expression applies to.</summary>
      <returns>A <see cref="T:System.Reflection.PropertyInfo" /> containing the attributes of the property.</returns>
    </member>
    <member name="P:System.Web.UI.PropertyEntry.Type">
      <summary>Gets or sets the type of the entry.</summary>
      <returns>The <see cref="T:System.Type" /> of the entry.</returns>
    </member>
    <member name="T:System.Web.UI.RenderMethod">
      <summary>Represents the method that renders the specified <see cref="T:System.Web.UI.Control" /> container to the specified <see cref="T:System.Web.UI.HtmlTextWriter" />.</summary>
      <param name="output">The <see cref="T:System.Web.UI.HtmlTextWriter" /> to render content to.</param>
      <param name="container">The <see cref="T:System.Web.UI.Control" /> to render.</param>
    </member>
    <member name="T:System.Web.UI.RootBuilder">
      <summary>Supports the page parser in defining the behavior for how content is parsed.</summary>
    </member>
    <member name="M:System.Web.UI.RootBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.RootBuilder" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.RootBuilder.#ctor(System.Web.UI.TemplateParser)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.RootBuilder" /> class with the specified template parser.</summary>
      <param name="parser">The object to use to parse files.</param>
    </member>
    <member name="P:System.Web.UI.RootBuilder.BuiltObjects">
      <summary>Gets a collection of the objects to persist that were built by the root builder.</summary>
      <returns>A <see cref="T:System.Collections.Hashtable" /> object that contains the objects that were built by the root builder.</returns>
    </member>
    <member name="M:System.Web.UI.RootBuilder.GetChildControlType(System.String,System.Collections.IDictionary)">
      <summary>Returns the control type of any parsed child controls.</summary>
      <returns>The type of the child control.</returns>
      <param name="tagName">The tag name of the child control.</param>
      <param name="attribs">The <see cref="T:System.Collections.IDictionary" /> object that holds all the specified tag attributes.</param>
    </member>
    <member name="M:System.Web.UI.RootBuilder.OnCodeGenerationComplete">
      <summary>Provides a way to modify the <see cref="T:System.CodeDom.CodeCompileUnit" /> object after code generation is finished.</summary>
    </member>
    <member name="T:System.Web.UI.SessionPageStatePersister">
      <summary>Stores ASP.NET page view state on the Web server.</summary>
    </member>
    <member name="M:System.Web.UI.SessionPageStatePersister.#ctor(System.Web.UI.Page)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HiddenFieldPageStatePersister" /> class.</summary>
      <param name="page">The <see cref="T:System.Web.UI.Page" /> that the view state persistence mechanism is created for.</param>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Web.SessionState.HttpSessionState" /> is null (Nothing in Visual Basic)</exception>
    </member>
    <member name="M:System.Web.UI.SessionPageStatePersister.Load">
      <summary>Deserializes and loads persisted state from the server-side session object when a <see cref="T:System.Web.UI.Page" /> object initializes its control hierarchy.</summary>
      <exception cref="T:System.Web.HttpException">The <see cref="M:System.Web.UI.SessionPageStatePersister.Load" /> method could not successfully deserialize the state contained in the request to the Web server.</exception>
    </member>
    <member name="M:System.Web.UI.SessionPageStatePersister.Save">
      <summary>Serializes any object state contained in the <see cref="P:System.Web.UI.PageStatePersister.ViewState" /> or the <see cref="P:System.Web.UI.PageStatePersister.ControlState" /> property and writes the state to the session object.</summary>
    </member>
    <member name="T:System.Web.UI.SimplePropertyEntry">
      <summary>Represents the definition of the control property and its value.</summary>
    </member>
    <member name="P:System.Web.UI.SimplePropertyEntry.PersistedValue">
      <summary>Gets or sets the formatted string representation of the property entry.</summary>
      <returns>A <see cref="T:System.String" /> pertaining to the property entry.</returns>
    </member>
    <member name="P:System.Web.UI.SimplePropertyEntry.UseSetAttribute">
      <summary>Gets or sets a value indicating whether the <see cref="M:System.Web.UI.IAttributeAccessor.SetAttribute(System.String,System.String)" /> method should be called for the property during code creation.</summary>
      <returns>true if <see cref="M:System.Web.UI.IAttributeAccessor.SetAttribute(System.String,System.String)" /> should be called; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.SimplePropertyEntry.Value">
      <summary>Gets or sets the value of the property entry.</summary>
      <returns>An <see cref="T:System.Object" /> containing the value of the property entry.</returns>
    </member>
    <member name="T:System.Web.UI.SimpleWebHandlerParser">
      <summary>Provides base functionality for parsing Web handler files.</summary>
    </member>
    <member name="M:System.Web.UI.SimpleWebHandlerParser.#ctor(System.Web.HttpContext,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.SimpleWebHandlerParser" /> class. </summary>
      <param name="context">Pass null. Parameter is now obsolete.</param>
      <param name="virtualPath">The path of the current virtual directory.</param>
      <param name="physicalPath">Pass null. Parameter is now obsolete.</param>
    </member>
    <member name="P:System.Web.UI.SimpleWebHandlerParser.DefaultDirectiveName">
      <summary>When overridden in a derived class, gets the name of the main directive from a &lt;%@ %&gt; block.</summary>
      <returns>A <see cref="T:System.String" /> that contains the default directive name.</returns>
    </member>
    <member name="M:System.Web.UI.SimpleWebHandlerParser.GetCompiledTypeFromCache">
      <summary>Returns the type for the compiled object from the virtual path.</summary>
      <returns>The <see cref="T:System.Type" /> assigned to the virtual path.</returns>
    </member>
    <member name="T:System.Web.UI.SkinBuilder">
      <summary>Provides a <see cref="T:System.Web.UI.ControlBuilder" /> object used at design time to apply control skins to controls. </summary>
    </member>
    <member name="M:System.Web.UI.SkinBuilder.#ctor(System.Web.UI.ThemeProvider,System.Web.UI.Control,System.Web.UI.ControlBuilder,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.SkinBuilder" /> class, setting the control with which the builder is associated, the general <see cref="T:System.Web.UI.ControlBuilder" /> object provided by the <see cref="T:System.Web.UI.ThemeProvider" /> object for the control, and a path to the theme file.</summary>
      <param name="provider">A <see cref="T:System.Web.UI.ThemeProvider" /> that encapsulates theme information for controls in a designer environment.</param>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> with which the <see cref="T:System.Web.UI.SkinBuilder" /> is associated. The <see cref="M:System.Web.UI.SkinBuilder.ApplyTheme" /> method applies a control skin to this control and returns it.</param>
      <param name="skinBuilder">A <see cref="T:System.Web.UI.ControlBuilder" /> provided by the <see cref="T:System.Web.UI.ThemeProvider" /> for the control's type. </param>
      <param name="themePath">The absolute path to the theme file. </param>
    </member>
    <member name="M:System.Web.UI.SkinBuilder.ApplyTheme">
      <summary>Applies a theme and a control skin to the current control at design time, if a <see cref="T:System.Web.UI.SkinBuilder" /> object is associated with the control. </summary>
      <returns>The control instance to which the theme or style sheet theme and any control skin was applied. This is the same instance passed to the builder's <see cref="M:System.Web.UI.SkinBuilder.#ctor(System.Web.UI.ThemeProvider,System.Web.UI.Control,System.Web.UI.ControlBuilder,System.String)" /> constructor. This method will return null if no control was passed to the constructor.</returns>
    </member>
    <member name="T:System.Web.UI.StateBag">
      <summary>Manages the view state of ASP.NET server controls, including pages. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.StateBag.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.StateBag" /> class. This is the default constructor for this class.</summary>
    </member>
    <member name="M:System.Web.UI.StateBag.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.StateBag" /> class that allows stored state values to be case-insensitive.</summary>
      <param name="ignoreCase">true to ignore case; otherwise, false. </param>
    </member>
    <member name="M:System.Web.UI.StateBag.Add(System.String,System.Object)">
      <summary>Adds a new <see cref="T:System.Web.UI.StateItem" /> object to the <see cref="T:System.Web.UI.StateBag" /> object. If the item already exists in the <see cref="T:System.Web.UI.StateBag" /> object, this method updates the value of the item.</summary>
      <returns>Returns a <see cref="T:System.Web.UI.StateItem" /> that represents the object added to view state.</returns>
      <param name="key">The attribute name for the <see cref="T:System.Web.UI.StateItem" />. </param>
      <param name="value">The value of the item to add to the <see cref="T:System.Web.UI.StateBag" />. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> is null.- or -The number of characters in <paramref name="key" /> is 0. </exception>
    </member>
    <member name="M:System.Web.UI.StateBag.Clear">
      <summary>Removes all items from the current <see cref="T:System.Web.UI.StateBag" /> object.</summary>
    </member>
    <member name="P:System.Web.UI.StateBag.Count">
      <summary>Gets the number of <see cref="T:System.Web.UI.StateItem" /> objects in the <see cref="T:System.Web.UI.StateBag" /> object.</summary>
      <returns>The number of items in the <see cref="T:System.Web.UI.StateBag" />.</returns>
    </member>
    <member name="M:System.Web.UI.StateBag.GetEnumerator">
      <summary>Returns an enumerator that iterates over all the key/value pairs of the <see cref="T:System.Web.UI.StateItem" /> objects stored in the <see cref="T:System.Web.UI.StateBag" /> object.</summary>
      <returns>The enumerator to iterate through the state bag.</returns>
    </member>
    <member name="M:System.Web.UI.StateBag.IsItemDirty(System.String)">
      <summary>Checks a <see cref="T:System.Web.UI.StateItem" /> object stored in the <see cref="T:System.Web.UI.StateBag" /> object to evaluate whether it has been modified since the call to <see cref="M:System.Web.UI.Control.TrackViewState" />.</summary>
      <returns>true if the item has been modified; otherwise, false.</returns>
      <param name="key">The key of the item to check. </param>
    </member>
    <member name="P:System.Web.UI.StateBag.Item(System.String)">
      <summary>Gets or sets the value of an item stored in the <see cref="T:System.Web.UI.StateBag" /> object.</summary>
      <returns>The specified item in the <see cref="T:System.Web.UI.StateBag" /> object.</returns>
      <param name="key">The key for the item. </param>
    </member>
    <member name="P:System.Web.UI.StateBag.Keys">
      <summary>Gets a collection of keys representing the items in the <see cref="T:System.Web.UI.StateBag" /> object.</summary>
      <returns>The collection of keys.</returns>
    </member>
    <member name="M:System.Web.UI.StateBag.Remove(System.String)">
      <summary>Removes the specified key/value pair from the <see cref="T:System.Web.UI.StateBag" /> object.</summary>
      <param name="key">The item to remove. </param>
    </member>
    <member name="M:System.Web.UI.StateBag.SetDirty(System.Boolean)">
      <summary>Sets the state of the <see cref="T:System.Web.UI.StateBag" /> object as well as the <see cref="P:System.Web.SessionState.ISessionStateItemCollection.Dirty" /> property of each of the <see cref="T:System.Web.UI.StateItem" /> objects contained by it.</summary>
      <param name="dirty">true to mark the state of the collection and its items as modified; otherwise, false.</param>
    </member>
    <member name="M:System.Web.UI.StateBag.SetItemDirty(System.String,System.Boolean)">
      <summary>Sets the <see cref="P:System.Web.SessionState.ISessionStateItemCollection.Dirty" /> property for the specified <see cref="T:System.Web.UI.StateItem" /> object in the <see cref="T:System.Web.UI.StateBag" /> object.</summary>
      <param name="key">The key that identifies which <see cref="T:System.Web.UI.StateItem" /> in the <see cref="T:System.Web.UI.StateBag" /> to set. </param>
      <param name="dirty">true to mark the state of the item as modified; otherwise, false.</param>
    </member>
    <member name="M:System.Web.UI.StateBag.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="P:System.Web.UI.StateBag.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.StateBag.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.StateBag.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />.</summary>
      <param name="key">The <see cref="T:System.Object" /> to use as the key of the element to add.</param>
      <param name="value">The <see cref="T:System.Object" /> to use as the value of the element to add. </param>
    </member>
    <member name="M:System.Web.UI.StateBag.System#Collections#IDictionary#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IDictionary.Contains(System.Object)" />.</summary>
      <returns>true if the <see cref="T:System.Collections.IDictionary" /> contains an element with the key; otherwise, false.</returns>
      <param name="key">The key to locate in the <see cref="T:System.Collections.IDictionary" /> object.</param>
    </member>
    <member name="P:System.Web.UI.StateBag.System#Collections#IDictionary#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IDictionary.IsFixedSize" />.</summary>
      <returns>true if the <see cref="T:System.Collections.IDictionary" /> object has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.StateBag.System#Collections#IDictionary#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IDictionary.IsReadOnly" />.</summary>
      <returns>true if the <see cref="T:System.Collections.IDictionary" /> object is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.StateBag.System#Collections#IDictionary#Item(System.Object)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IDictionary.Item(System.Object)" />.</summary>
      <returns>The element with the specified <paramref name="key" />.</returns>
      <param name="key">The key of the element to get.</param>
    </member>
    <member name="M:System.Web.UI.StateBag.System#Collections#IDictionary#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IDictionary.Remove(System.Object)" />.</summary>
      <param name="key">The key of the element to remove. </param>
    </member>
    <member name="M:System.Web.UI.StateBag.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:System.Web.UI.StateBag.System#Web#UI#IStateManager#IsTrackingViewState">
      <summary>Gets a value indicating whether state changes are being tracked.</summary>
      <returns>true if the <see cref="T:System.Web.UI.StateBag" /> is marked to save changes to its state; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.StateBag.System#Web#UI#IStateManager#LoadViewState(System.Object)">
      <summary>Restores the previously saved view state of the <see cref="T:System.Web.UI.StateBag" /> object.</summary>
      <param name="state">An object that represents the <see cref="T:System.Web.UI.StateBag" /> state to restore. </param>
    </member>
    <member name="M:System.Web.UI.StateBag.System#Web#UI#IStateManager#SaveViewState">
      <summary>Saves the changes to the <see cref="T:System.Web.UI.StateBag" /> object since the time the page was posted back to the server.</summary>
      <returns>The object that contains the changes to the view state of the <see cref="T:System.Web.UI.StateBag" />. If there are no changes, or there are no <see cref="T:System.Web.UI.StateItem" /> elements in the <see cref="T:System.Web.UI.StateBag" />, this method returns null.</returns>
    </member>
    <member name="M:System.Web.UI.StateBag.System#Web#UI#IStateManager#TrackViewState">
      <summary>Causes the <see cref="T:System.Web.UI.StateBag" /> object to track changes to its state so that it can be persisted across requests.</summary>
    </member>
    <member name="P:System.Web.UI.StateBag.Values">
      <summary>Gets a collection of the view-state values stored in the <see cref="T:System.Web.UI.StateBag" /> object.</summary>
      <returns>The collection of view-state values.</returns>
    </member>
    <member name="T:System.Web.UI.StateItem">
      <summary>Represents an item that is saved in the <see cref="T:System.Web.UI.StateBag" /> class when view state information is persisted between Web requests. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Web.UI.StateItem.IsDirty">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Web.UI.StateItem" /> object has been modified.</summary>
      <returns>true if the stored <see cref="T:System.Web.UI.StateItem" /> object has been modified; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.StateItem.Value">
      <summary>Gets or sets the value of the <see cref="T:System.Web.UI.StateItem" /> object that is stored in the <see cref="T:System.Web.UI.StateBag" /> object.</summary>
      <returns>The value of the <see cref="T:System.Web.UI.StateItem" /> stored in the <see cref="T:System.Web.UI.StateBag" />.</returns>
    </member>
    <member name="T:System.Web.UI.StateManagedCollection">
      <summary>Provides a base class for all strongly typed collections that manage <see cref="T:System.Web.UI.IStateManager" /> objects.</summary>
    </member>
    <member name="M:System.Web.UI.StateManagedCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.StateManagedCollection" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.StateManagedCollection.Clear">
      <summary>Removes all items from the <see cref="T:System.Web.UI.StateManagedCollection" /> collection.</summary>
    </member>
    <member name="M:System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Web.UI.StateManagedCollection" /> collection to an array, starting at a particular array index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Web.UI.StateManagedCollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.- or -<paramref name="index" /> is greater than or equal to the length of <paramref name="array" />.- or -The number of elements in the source <see cref="T:System.Web.UI.StateManagedCollection" /> is greater than the available space from the <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Web.UI.StateManagedCollection.Count">
      <summary>Gets the number of elements contained in the <see cref="T:System.Web.UI.StateManagedCollection" /> collection.</summary>
      <returns>The number of elements contained in the <see cref="T:System.Web.UI.StateManagedCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.StateManagedCollection.CreateKnownType(System.Int32)">
      <summary>When overridden in a derived class, creates an instance of a class that implements <see cref="T:System.Web.UI.IStateManager" />. The type of object created is based on the specified member of the collection returned by the <see cref="M:System.Web.UI.StateManagedCollection.GetKnownTypes" /> method.</summary>
      <returns>An instance of a class derived from <see cref="T:System.Web.UI.IStateManager" />, according to the <paramref name="index" /> provided.</returns>
      <param name="index">The index, from the ordered list of types returned by <see cref="M:System.Web.UI.StateManagedCollection.GetKnownTypes" />, of the type of <see cref="T:System.Web.UI.IStateManager" /> to create.</param>
      <exception cref="T:System.InvalidOperationException">In all cases when not overridden in a derived class.</exception>
    </member>
    <member name="M:System.Web.UI.StateManagedCollection.GetEnumerator">
      <summary>Returns an iterator that iterates through the <see cref="T:System.Web.UI.StateManagedCollection" /> collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the <see cref="T:System.Web.UI.StateManagedCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.StateManagedCollection.GetKnownTypes">
      <summary>When overridden in a derived class, gets an array of <see cref="T:System.Web.UI.IStateManager" /> types that the <see cref="T:System.Web.UI.StateManagedCollection" /> collection can contain.</summary>
      <returns>An ordered array of <see cref="T:System.Type" /> objects that identify the types of <see cref="T:System.Web.UI.IStateManager" /> objects the collection can contain. The default implementation returns null.</returns>
    </member>
    <member name="M:System.Web.UI.StateManagedCollection.OnClear">
      <summary>When overridden in a derived class, performs additional work before the <see cref="M:System.Web.UI.StateManagedCollection.Clear" /> method removes all items from the collection.</summary>
    </member>
    <member name="M:System.Web.UI.StateManagedCollection.OnClearComplete">
      <summary>When overridden in a derived class, performs additional work after the <see cref="M:System.Web.UI.StateManagedCollection.Clear" /> method finishes removing all items from the collection.</summary>
    </member>
    <member name="M:System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)">
      <summary>When overridden in a derived class, performs additional work before the <see cref="M:System.Web.UI.StateManagedCollection.System.Collections.IList.Insert(System.Int32,System.Object)" /> or <see cref="M:System.Web.UI.StateManagedCollection.System.Collections.IList.Add(System.Object)" /> method adds an item to the collection.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted by the <see cref="M:System.Web.UI.StateManagedCollection.System.Collections.IList.Insert(System.Int32,System.Object)" /> method.</param>
      <param name="value">The object to insert into the <see cref="T:System.Web.UI.StateManagedCollection" />.</param>
    </member>
    <member name="M:System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>When overridden in a derived class, performs additional work after the <see cref="M:System.Web.UI.StateManagedCollection.System.Collections.IList.Insert(System.Int32,System.Object)" /> or <see cref="M:System.Web.UI.StateManagedCollection.System.Collections.IList.Add(System.Object)" /> method adds an item to the collection.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> is inserted by the <see cref="M:System.Web.UI.StateManagedCollection.System.Collections.IList.Insert(System.Int32,System.Object)" /> method.</param>
      <param name="value">The object inserted into the <see cref="T:System.Web.UI.StateManagedCollection" />.</param>
    </member>
    <member name="M:System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)">
      <summary>When overridden in a derived class, performs additional work before the <see cref="M:System.Web.UI.StateManagedCollection.System.Collections.IList.Remove(System.Object)" /> or <see cref="M:System.Web.UI.StateManagedCollection.System.Collections.IList.RemoveAt(System.Int32)" /> method removes the specified item from the collection.</summary>
      <param name="index">The zero-based index of the item to remove, which is used when <see cref="M:System.Web.UI.StateManagedCollection.System.Collections.IList.RemoveAt(System.Int32)" /> is called.</param>
      <param name="value">The object to remove from the <see cref="T:System.Web.UI.StateManagedCollection" />, which is used when <see cref="M:System.Web.UI.StateManagedCollection.System.Collections.IList.Remove(System.Object)" /> is called.</param>
    </member>
    <member name="M:System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>When overridden in a derived class, performs additional work after the <see cref="M:System.Web.UI.StateManagedCollection.System.Collections.IList.Remove(System.Object)" /> or <see cref="M:System.Web.UI.StateManagedCollection.System.Collections.IList.RemoveAt(System.Int32)" /> method removes the specified item from the collection.</summary>
      <param name="index">The zero-based index of the item to remove, which is used when <see cref="M:System.Web.UI.StateManagedCollection.System.Collections.IList.RemoveAt(System.Int32)" /> is called.</param>
      <param name="value">The object removed from the <see cref="T:System.Web.UI.StateManagedCollection" />, which is used when <see cref="M:System.Web.UI.StateManagedCollection.System.Collections.IList.Remove(System.Object)" /> is called.</param>
    </member>
    <member name="M:System.Web.UI.StateManagedCollection.OnValidate(System.Object)">
      <summary>When overridden in a derived class, validates an element of the <see cref="T:System.Web.UI.StateManagedCollection" /> collection.</summary>
      <param name="value">The <see cref="T:System.Web.UI.IStateManager" /> to validate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.StateManagedCollection.SetDirty">
      <summary>Forces the entire <see cref="T:System.Web.UI.StateManagedCollection" /> collection to be serialized into view state. </summary>
    </member>
    <member name="M:System.Web.UI.StateManagedCollection.SetDirtyObject(System.Object)">
      <summary>When overridden in a derived class, instructs an object contained by the collection to record its entire state to view state, rather than recording only change information.</summary>
      <param name="o">The <see cref="T:System.Web.UI.IStateManager" /> that should serialize itself completely.</param>
    </member>
    <member name="P:System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count">
      <summary>Gets the number of elements contained in the <see cref="T:System.Web.UI.StateManagedCollection" /> collection.</summary>
      <returns>The number of elements in the <see cref="T:System.Web.UI.StateManagedCollection" />.</returns>
    </member>
    <member name="P:System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.StateManagedCollection" /> collection is synchronized (thread safe). This method returns false in all cases.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Web.UI.StateManagedCollection" /> collection. This method returns null in all cases.</summary>
      <returns>null in all cases.</returns>
    </member>
    <member name="M:System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an iterator that iterates through the <see cref="T:System.Web.UI.StateManagedCollection" /> collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the <see cref="T:System.Web.UI.StateManagedCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)">
      <summary>Adds an item to the <see cref="T:System.Web.UI.StateManagedCollection" /> collection.</summary>
      <returns>The position at which the new element was inserted.</returns>
      <param name="value">The object to add to the <see cref="T:System.Web.UI.StateManagedCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">The specified <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Clear">
      <summary>Removes all items from the <see cref="T:System.Web.UI.StateManagedCollection" /> collection.</summary>
    </member>
    <member name="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Determines whether the <see cref="T:System.Web.UI.StateManagedCollection" /> collection contains a specific value.</summary>
      <returns>true if the object is found in the <see cref="T:System.Web.UI.StateManagedCollection" />; otherwise, false. If null is passed for the value parameter, false is returned.</returns>
      <param name="value">The object to locate in the <see cref="T:System.Web.UI.StateManagedCollection" />.</param>
    </member>
    <member name="M:System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determines the index of a specified item in the <see cref="T:System.Web.UI.StateManagedCollection" /> collection.</summary>
      <returns>The index of <paramref name="value" />, if it is found in the list; otherwise, -1.</returns>
      <param name="value">The object to locate in the <see cref="T:System.Web.UI.StateManagedCollection" />.</param>
    </member>
    <member name="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserts an item into the <see cref="T:System.Web.UI.StateManagedCollection" /> collection at the specified index.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
      <param name="value">The object to insert into the <see cref="T:System.Web.UI.StateManagedCollection" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified <paramref name="index" /> is out of range of the collection.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Web.UI.StateManagedCollection" /> is read-only.</exception>
      <exception cref="T:System.ArgumentNullException">The specified <paramref name="value" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.StateManagedCollection" /> collection has a fixed size. This method returns false in all cases.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.StateManagedCollection" /> collection is read-only.</summary>
      <returns>true if the <see cref="T:System.Web.UI.StateManagedCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Web.UI.IStateManager" /> element at the specified index.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified <paramref name="index" /> is out of range of the collection.</exception>
    </member>
    <member name="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Removes the first occurrence of the specified object from the <see cref="T:System.Web.UI.StateManagedCollection" /> collection.</summary>
      <param name="value">The object to remove from the <see cref="T:System.Web.UI.StateManagedCollection" />.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Web.UI.StateManagedCollection" /> is read-only.</exception>
    </member>
    <member name="M:System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Web.UI.IStateManager" /> element at the specified index.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Web.UI.StateManagedCollection" /> is read-only.</exception>
    </member>
    <member name="P:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.StateManagedCollection" /> collection is saving changes to its view state.</summary>
      <returns>true if the collection is marked to save its own state and the state of all the <see cref="T:System.Web.UI.IStateManager" /> items it contains; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)">
      <summary>Restores the previously saved view state of the <see cref="T:System.Web.UI.StateManagedCollection" /> collection and the <see cref="T:System.Web.UI.IStateManager" /> items it contains.</summary>
      <param name="savedState">An object that represents the collection and collection elements' state to restore.</param>
    </member>
    <member name="M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState">
      <summary>Saves the changes to the <see cref="T:System.Web.UI.StateManagedCollection" /> collection and each <see cref="T:System.Web.UI.IStateManager" /> object it contains since the time the page was posted back to the server.</summary>
      <returns>The object that contains the changes to the view state of the <see cref="T:System.Web.UI.StateManagedCollection" /> and the items it contains. If no view state is associated with the collection and its elements, this method returns null.</returns>
    </member>
    <member name="M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState">
      <summary>Causes the <see cref="T:System.Web.UI.StateManagedCollection" /> collection and each of the <see cref="T:System.Web.UI.IStateManager" /> objects it contains to track changes to their view state so they can be persisted across requests for the same page.</summary>
    </member>
    <member name="T:System.Web.UI.StaticPartialCachingControl">
      <summary>Represents an instance of the <see cref="T:System.Web.UI.UserControl" /> class that is specified for output caching and included declaratively in a page or another user control.</summary>
    </member>
    <member name="M:System.Web.UI.StaticPartialCachingControl.#ctor(System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Web.UI.BuildMethod)">
      <summary>Creates the <see cref="T:System.Web.UI.StaticPartialCachingControl" /> object to contain the cached server control content.</summary>
      <param name="ctrlID">The identifier assigned to the server control by ASP.NET. </param>
      <param name="guid">The globally unique identifier passed from the server control. </param>
      <param name="duration">The length of time the server control is to remain in the cache. </param>
      <param name="varyByParams">A string of the query string or form POST parameters by which to vary the user control in the cache. </param>
      <param name="varyByControls">A string of the server control properties by which to vary the user control in the cache. </param>
      <param name="varyByCustom">A user-defined string that contains custom output-cache parameter values.</param>
      <param name="sqlDependency">A semicolon-delimited string that specifies which databases and tables to use for the Microsoft SQL Server cache dependency.</param>
      <param name="buildMethod">A delegate that calls the method to build the <see cref="T:System.Web.UI.StaticPartialCachingControl" />. </param>
    </member>
    <member name="M:System.Web.UI.StaticPartialCachingControl.#ctor(System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Web.UI.BuildMethod,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.StaticPartialCachingControl" /> class for a control that is defined in an .ascx file.</summary>
      <param name="ctrlID">The ID that is assigned to the control by ASP.NET.</param>
      <param name="guid">The globally unique identifier (GUID) for the cached control. </param>
      <param name="duration">The length of time that the control's output is cached.</param>
      <param name="varyByParams">A string of the query string or form POST parameters by which to vary the user control in the cache.</param>
      <param name="varyByControls">A string that lists the server-control properties by which to vary the user control in the cache.</param>
      <param name="varyByCustom">A user-defined string that contains custom output-cache parameter values.</param>
      <param name="sqlDependency">A semicolon-delimited string that specifies which databases and tables to use for the Microsoft SQL Server cache dependency.</param>
      <param name="buildMethod">A delegate that calls the method that builds the control. </param>
      <param name="providerName">The name of the provider that is used to store the output-cached control. </param>
    </member>
    <member name="M:System.Web.UI.StaticPartialCachingControl.#ctor(System.String,System.String,System.Int32,System.String,System.String,System.String,System.Web.UI.BuildMethod)">
      <summary>Creates the <see cref="T:System.Web.UI.StaticPartialCachingControl" /> object to contain the cached server control content.</summary>
      <param name="ctrlID">The identifier assigned to the server control by ASP.NET. </param>
      <param name="guid">The globally unique identifier passed from the server control. </param>
      <param name="duration">The length of time the server control is to remain in the cache. </param>
      <param name="varyByParams">A string of the query string or form POST parameters by which to vary the user control in the cache. </param>
      <param name="varyByControls">A string of the server control properties by which to vary the user control in the cache. </param>
      <param name="varyByCustom">A user-defined string that contains custom output-cache parameter values.</param>
      <param name="buildMethod">A delegate that calls the method to build the <see cref="T:System.Web.UI.StaticPartialCachingControl" />. </param>
    </member>
    <member name="M:System.Web.UI.StaticPartialCachingControl.BuildCachedControl(System.Web.UI.Control,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Web.UI.BuildMethod)">
      <summary>Builds a <see cref="T:System.Web.UI.StaticPartialCachingControl" /> object with the parameters specified in the user control (.ascx file) and adds it as a parsed sub-object to the containing server control.</summary>
      <param name="parent">The server control to contain the <see cref="T:System.Web.UI.StaticPartialCachingControl" /> instance. </param>
      <param name="ctrlID">The identifier assigned to the control by ASP.NET. </param>
      <param name="guid">The globally unique identifier for the cached control. </param>
      <param name="duration">The length of time the control's output is cached. </param>
      <param name="varyByParams">A string of the query string or form POST parameters by which to vary the server control in the cache. </param>
      <param name="varyByControls">A string that lists the server-control properties by which to vary the user control in the cache.</param>
      <param name="varyByCustom">A user-defined string that contains custom output-cache parameter values.</param>
      <param name="sqlDependency">A semicolon-delimited string that specifies which databases and tables to use for the Microsoft SQL Server cache dependency.</param>
      <param name="buildMethod">A delegate that calls the method to build the control.</param>
    </member>
    <member name="M:System.Web.UI.StaticPartialCachingControl.BuildCachedControl(System.Web.UI.Control,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Web.UI.BuildMethod,System.String)">
      <summary>Builds a new instance of the <see cref="T:System.Web.UI.StaticPartialCachingControl" /> class, for a control that is defined in an .ascx file.</summary>
      <param name="parent">The server control that is used as the container for the <see cref="T:System.Web.UI.StaticPartialCachingControl" /> instance.</param>
      <param name="ctrlID">The ID that is assigned to the control by ASP.NET.</param>
      <param name="guid">The globally unique identifier (GUID) for the cached control. </param>
      <param name="duration">The length of time that the control's output is cached.  </param>
      <param name="varyByParams">A string of the query string or form POST parameters by which to vary the user control in the cache.  </param>
      <param name="varyByControls">A string that lists the server-control properties by which to vary the user control in the cache. </param>
      <param name="varyByCustom">A user-defined string that contains custom output-cache parameter values.</param>
      <param name="sqlDependency">A semicolon-delimited string that specifies which databases and tables to use for the Microsoft SQL Server cache dependency.</param>
      <param name="buildMethod">A delegate that calls the method that builds the control. </param>
      <param name="providerName">The name of the provider that is used to store the output-cached control.  </param>
    </member>
    <member name="M:System.Web.UI.StaticPartialCachingControl.BuildCachedControl(System.Web.UI.Control,System.String,System.String,System.Int32,System.String,System.String,System.String,System.Web.UI.BuildMethod)">
      <summary>Builds a <see cref="T:System.Web.UI.StaticPartialCachingControl" /> object with the parameters specified in the user control (.ascx file) and adds it as a parsed sub-object to the containing server control.</summary>
      <param name="parent">The server control to contain the <see cref="T:System.Web.UI.StaticPartialCachingControl" /> instance. </param>
      <param name="ctrlID">The identifier assigned to the control by ASP.NET. </param>
      <param name="guid">The globally unique identifier for the cached control. </param>
      <param name="duration">The length of time the control's output is cached. </param>
      <param name="varyByParams">A string of the query string or form POST parameters by which to vary the server control in the cache. </param>
      <param name="varyByControls">A string that lists the server-control properties by which to vary the user control in the cache.</param>
      <param name="varyByCustom">A user-defined string that contains custom output-cache parameter values.</param>
      <param name="buildMethod">A delegate that calls the method to build the control. </param>
    </member>
    <member name="T:System.Web.UI.SupportsEventValidationAttribute">
      <summary>Defines the metadata attribute that Web server controls use to indicate support for event validation. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.SupportsEventValidationAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.SupportsEventValidationAttribute" /> class.</summary>
    </member>
    <member name="T:System.Web.UI.TagPrefixAttribute">
      <summary>Defines the tag prefix used in a Web page to identify custom controls. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.TagPrefixAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.TagPrefixAttribute" /> class.</summary>
      <param name="namespaceName">A string that identifies the custom control namespace. </param>
      <param name="tagPrefix">A string that identifies the custom control prefix. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="namespaceName" /> or the <paramref name="tagPrefix" /> is null or an empty string ("").</exception>
    </member>
    <member name="P:System.Web.UI.TagPrefixAttribute.NamespaceName">
      <summary>Gets the namespace prefix for the specified control.</summary>
      <returns>The namespace name.</returns>
    </member>
    <member name="P:System.Web.UI.TagPrefixAttribute.TagPrefix">
      <summary>Gets the tag prefix for the specified control.</summary>
      <returns>The tag prefix.</returns>
    </member>
    <member name="T:System.Web.UI.TemplateBuilder">
      <summary>Supports the page parser in building a template and the child controls it contains.</summary>
    </member>
    <member name="M:System.Web.UI.TemplateBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.TemplateBuilder" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.TemplateBuilder.BuildObject">
      <summary>Used during design time to build the template and its child controls. </summary>
      <returns>A reference to the instance of the <see cref="T:System.Web.UI.TemplateBuilder" /> class.</returns>
    </member>
    <member name="M:System.Web.UI.TemplateBuilder.CloseControl">
      <summary>Called by the parser to inform the builder that the parsing of the control's opening and closing tags is complete. </summary>
    </member>
    <member name="M:System.Web.UI.TemplateBuilder.Init(System.Web.UI.TemplateParser,System.Web.UI.ControlBuilder,System.Type,System.String,System.String,System.Collections.IDictionary)">
      <summary>Initializes the template builder when a Web request is made.</summary>
      <param name="parser">The <see cref="T:System.Web.UI.TemplateParser" /> responsible for parsing the control. </param>
      <param name="parentBuilder">The <see cref="T:System.Web.UI.ControlBuilder" /> responsible for building the control. </param>
      <param name="type">The <see cref="T:System.Type" /> assigned to the control that the builder will create. </param>
      <param name="tagName">The name of the tag to build. This allows the builder to support multiple tag types. </param>
      <param name="ID"></param>
      <param name="attribs">The <see cref="T:System.Collections.IDictionary" /> that holds all the specified tag attributes. </param>
    </member>
    <member name="M:System.Web.UI.TemplateBuilder.InstantiateIn(System.Web.UI.Control)">
      <summary>Defines the <see cref="T:System.Web.UI.Control" /> object that child controls and templates belong to in design time.</summary>
      <param name="container">The <see cref="T:System.Web.UI.Control" /> to contain the instances of controls from the inline template.</param>
    </member>
    <member name="M:System.Web.UI.TemplateBuilder.NeedsTagInnerText">
      <summary>Determines if the control builder needs to get its inner text.</summary>
      <returns>true if the control builder needs to get its inner text. The default is false.</returns>
    </member>
    <member name="M:System.Web.UI.TemplateBuilder.SetTagInnerText(System.String)">
      <summary>Saves the inner text of the template tag.</summary>
      <param name="text">The inner text of the template.</param>
    </member>
    <member name="P:System.Web.UI.TemplateBuilder.Text">
      <summary>Gets or sets the text between the opening and closing tags of the template.</summary>
      <returns>The text that appears between the opening and closing tags of the template.</returns>
    </member>
    <member name="T:System.Web.UI.TemplateContainerAttribute">
      <summary>Declares the base type of the container control of a property that returns an <see cref="T:System.Web.UI.ITemplate" /> interface and is marked with the <see cref="T:System.Web.UI.TemplateContainerAttribute" /> attribute. The control with the <see cref="T:System.Web.UI.ITemplate" /> property must implement the <see cref="T:System.Web.UI.INamingContainer" /> interface. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.TemplateContainerAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.TemplateContainerAttribute" /> class using the specified container type.</summary>
      <param name="containerType">The <see cref="T:System.Type" /> for the container control. </param>
    </member>
    <member name="M:System.Web.UI.TemplateContainerAttribute.#ctor(System.Type,System.ComponentModel.BindingDirection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.TemplateContainerAttribute" /> class using the specified container type and the <see cref="P:System.Web.UI.TemplateContainerAttribute.BindingDirection" /> property.</summary>
      <param name="containerType">The <see cref="T:System.Type" /> for the container control.</param>
      <param name="bindingDirection">The <see cref="P:System.Web.UI.TemplateContainerAttribute.BindingDirection" /> for the container control.</param>
    </member>
    <member name="P:System.Web.UI.TemplateContainerAttribute.BindingDirection">
      <summary>Gets the binding direction of the container control.</summary>
      <returns>A <see cref="T:System.ComponentModel.BindingDirection" /> indicating the container control's binding direction. The default is <see cref="F:System.ComponentModel.BindingDirection.OneWay" />.</returns>
    </member>
    <member name="P:System.Web.UI.TemplateContainerAttribute.ContainerType">
      <summary>Gets the container control type.</summary>
      <returns>The container control <see cref="T:System.Type" />.</returns>
    </member>
    <member name="T:System.Web.UI.TemplateControl">
      <summary>Provides the <see cref="T:System.Web.UI.Page" /> class and the <see cref="T:System.Web.UI.UserControl" /> class with a base set of functionality.</summary>
    </member>
    <member name="M:System.Web.UI.TemplateControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.TemplateControl" /> class.</summary>
    </member>
    <member name="E:System.Web.UI.TemplateControl.AbortTransaction">
      <summary>Occurs when a user ends a transaction.</summary>
    </member>
    <member name="P:System.Web.UI.TemplateControl.AppRelativeVirtualPath">
      <summary>Gets or sets the application-relative, virtual directory path to the file from which the control is parsed and compiled. </summary>
      <returns>A string representing the path.</returns>
      <exception cref="T:System.ArgumentNullException">The path that is set is null. </exception>
      <exception cref="T:System.ArgumentException">The path that is set is not rooted. </exception>
    </member>
    <member name="P:System.Web.UI.TemplateControl.AutoHandlers">
      <summary>The <see cref="P:System.Web.UI.TemplateControl.AutoHandlers" /> property has been deprecated in ASP.NET NET 2.0. It is used by generated classes and is not intended for use within your code.</summary>
      <returns>Always 0. </returns>
    </member>
    <member name="E:System.Web.UI.TemplateControl.CommitTransaction">
      <summary>Occurs when a transaction completes.</summary>
    </member>
    <member name="M:System.Web.UI.TemplateControl.Construct">
      <summary>Performs design-time logic.</summary>
    </member>
    <member name="M:System.Web.UI.TemplateControl.CreateResourceBasedLiteralControl(System.Int32,System.Int32,System.Boolean)">
      <summary>Accesses literal strings stored in a resource. The <see cref="M:System.Web.UI.TemplateControl.CreateResourceBasedLiteralControl(System.Int32,System.Int32,System.Boolean)" /> method is not intended for use from within your code.</summary>
      <returns>A <see cref="T:System.Web.UI.LiteralControl" /> representing a literal string in a resource.</returns>
      <param name="offset">The offset of the start of the string in the resource. </param>
      <param name="size">The size of the string in bytes. </param>
      <param name="fAsciiOnly">A Boolean value indicating if the string in the resource contains only 7-bit ASCII characters. </param>
    </member>
    <member name="P:System.Web.UI.TemplateControl.EnableTheming">
      <summary>Gets or sets a Boolean value indicating whether themes apply to the control that is derived from the <see cref="T:System.Web.UI.TemplateControl" /> class. </summary>
      <returns>true to use themes; otherwise, false. The default is true.</returns>
    </member>
    <member name="E:System.Web.UI.TemplateControl.Error">
      <summary>Occurs when an unhandled exception is thrown.</summary>
    </member>
    <member name="M:System.Web.UI.TemplateControl.Eval(System.String)">
      <summary>Evaluates a data-binding expression.</summary>
      <returns>An object that results from the evaluation of the data-binding expression.</returns>
      <param name="expression">The navigation path from the container to the public property value to place in the bound control property.</param>
      <exception cref="T:System.InvalidOperationException">The data-binding method can be used only for controls contained on a <see cref="T:System.Web.UI.Page" />. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> is null. - or -<paramref name="expression" /> is an empty string ("").</exception>
    </member>
    <member name="M:System.Web.UI.TemplateControl.Eval(System.String,System.String)">
      <summary>Evaluates a data-binding expression using the specified format string to display the result.</summary>
      <returns>A string that results from the evaluation of the data-binding expression and conversion to a string type.</returns>
      <param name="expression">The navigation path from the container to the public property value to place in the bound control property.</param>
      <param name="format">A .NET Framework format string to apply to the result.</param>
      <exception cref="T:System.InvalidOperationException">The data-binding method can only be used for controls contained on a <see cref="T:System.Web.UI.Page" />. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> is null. - or -<paramref name="expression" /> is an empty string ("").</exception>
    </member>
    <member name="M:System.Web.UI.TemplateControl.FrameworkInitialize">
      <summary>Initializes the control that is derived from the <see cref="T:System.Web.UI.TemplateControl" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.TemplateControl.GetGlobalResourceObject(System.String,System.String)">
      <summary>Gets an application-level resource object based on the specified <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties. </summary>
      <returns>An object representing the requested resource object; otherwise, null.</returns>
      <param name="className">A string representing a <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" />.</param>
      <param name="resourceKey">A string representing a <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" />.</param>
    </member>
    <member name="M:System.Web.UI.TemplateControl.GetGlobalResourceObject(System.String,System.String,System.Type,System.String)">
      <summary>Gets an application-level resource object based on the specified <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties, object type, and property name of the resource.</summary>
      <returns>An object representing the requested resource object; otherwise, null.</returns>
      <param name="className">A string representing a <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" />. </param>
      <param name="resourceKey">A string representing a <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" />. </param>
      <param name="objType">The type of object in the resource to get. </param>
      <param name="propName">The property name of the object to get.</param>
    </member>
    <member name="M:System.Web.UI.TemplateControl.GetLocalResourceObject(System.String)">
      <summary>Gets a page-level resource object based on the specified <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property.</summary>
      <returns>An object representing the requested resource object; otherwise, null.</returns>
      <param name="resourceKey">A string representing a <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" />.</param>
    </member>
    <member name="M:System.Web.UI.TemplateControl.GetLocalResourceObject(System.String,System.Type,System.String)">
      <summary>Gets a page-level resource object based on the specified <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property, object type, and property name.</summary>
      <returns>An object representing the requested resource object; otherwise, null.</returns>
      <param name="resourceKey">A string representing a <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" />.</param>
      <param name="objType">The type of the resource object to get.</param>
      <param name="propName">The property name of the resource object to get.</param>
    </member>
    <member name="M:System.Web.UI.TemplateControl.LoadControl(System.String)">
      <summary>Loads a <see cref="T:System.Web.UI.Control" /> object from a file based on a specified virtual path.</summary>
      <returns>Returns the specified <see cref="T:System.Web.UI.Control" />.</returns>
      <param name="virtualPath">The virtual path to a control file. </param>
      <exception cref="T:System.ArgumentNullException">The virtual path is null or empty.</exception>
    </member>
    <member name="M:System.Web.UI.TemplateControl.LoadControl(System.Type,System.Object[])">
      <summary>Loads a <see cref="T:System.Web.UI.Control" /> object based on a specified type and constructor parameters.</summary>
      <returns>Returns the specified <see cref="T:System.Web.UI.UserControl" />.</returns>
      <param name="t">The type of the control.</param>
      <param name="parameters">An array of arguments that match in number, order, and type the parameters of the constructor to invoke. If <paramref name="parameters" /> is an empty array or null, the constructor that takes no parameters (the default constructor) is invoked.</param>
    </member>
    <member name="M:System.Web.UI.TemplateControl.LoadTemplate(System.String)">
      <summary>Obtains an instance of the <see cref="T:System.Web.UI.ITemplate" /> interface from an external file.</summary>
      <returns>An instance of the specified template.</returns>
      <param name="virtualPath">The virtual path to a user control file. </param>
    </member>
    <member name="M:System.Web.UI.TemplateControl.OnAbortTransaction(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.TemplateControl.AbortTransaction" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.TemplateControl.OnCommitTransaction(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.TemplateControl.CommitTransaction" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.TemplateControl.OnError(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.TemplateControl.Error" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.TemplateControl.ParseControl(System.String)">
      <summary>Parses an input string into a <see cref="T:System.Web.UI.Control" /> object on the Web Forms page or user control.</summary>
      <returns>The parsed <see cref="T:System.Web.UI.Control" />.</returns>
      <param name="content">A string that contains a user control. </param>
    </member>
    <member name="M:System.Web.UI.TemplateControl.ParseControl(System.String,System.Boolean)">
      <summary>Parses an input string into a <see cref="T:System.Web.UI.Control" /> object on the ASP.NET Web page or user control.</summary>
      <returns>The parsed control.</returns>
      <param name="content">A string that contains a user control.</param>
      <param name="ignoreParserFilter">A value that specifies whether to ignore the parser filter.</param>
    </member>
    <member name="M:System.Web.UI.TemplateControl.ReadStringResource">
      <summary>Reads a string resource. The <see cref="M:System.Web.UI.TemplateControl.ReadStringResource" /> method is not intended for use from within your code.</summary>
      <returns>An object representing the resource.</returns>
      <exception cref="T:System.NotSupportedException">The <see cref="M:System.Web.UI.TemplateControl.ReadStringResource" /> is no longer supported.</exception>
    </member>
    <member name="M:System.Web.UI.TemplateControl.ReadStringResource(System.Type)">
      <summary>Reads a string resource. The <see cref="M:System.Web.UI.TemplateControl.ReadStringResource(System.Type)" /> method is not intended for use from within your code.</summary>
      <returns>Always <see cref="T:System.NotSupportedException" />.</returns>
      <param name="t">The <see cref="T:System.Type" /> of the resource to read.</param>
    </member>
    <member name="M:System.Web.UI.TemplateControl.SetStringResourcePointer(System.Object,System.Int32)">
      <summary>Sets a pointer to a string resource. The <see cref="M:System.Web.UI.TemplateControl.SetStringResourcePointer(System.Object,System.Int32)" /> method is used by generated classes and is not intended for use from within your code.</summary>
      <param name="stringResourcePointer">An object representing the pointer to the string resource.</param>
      <param name="maxResourceOffset">The resource size. </param>
    </member>
    <member name="P:System.Web.UI.TemplateControl.SupportAutoEvents">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.TemplateControl" /> control supports automatic events.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="M:System.Web.UI.TemplateControl.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)">
      <summary>Returns a value that indicates whether a parent/child relationship exists between two specified device filters. </summary>
      <returns>1, if <paramref name="filter1" /> is a parent of <paramref name="filter2" />; -1, if <paramref name="filter2" /> is a parent of <paramref name="filter1" />; otherwise, 0, if there is no parent/child relationship between <paramref name="filter1" /> and <paramref name="filter2" />.</returns>
      <param name="filter1">A device filter name. </param>
      <param name="filter2">A device filter name. </param>
    </member>
    <member name="M:System.Web.UI.TemplateControl.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)">
      <summary>Returns a value that indicates whether the specified filter is a type of the current filter object.</summary>
      <returns>true if the specified filter is a type applicable to the current filter object; otherwise, false.</returns>
      <param name="filterName">The name of a device filter.</param>
    </member>
    <member name="M:System.Web.UI.TemplateControl.TestDeviceFilter(System.String)">
      <summary>Returns a Boolean value indicating whether a device filter applies to the HTTP request.</summary>
      <returns>true if the client browser specified in <paramref name="filterName" /> is the same as the specified browser; otherwise, false. The default is false.</returns>
      <param name="filterName">The browser name to test. </param>
    </member>
    <member name="M:System.Web.UI.TemplateControl.WriteUTF8ResourceString(System.Web.UI.HtmlTextWriter,System.Int32,System.Int32,System.Boolean)">
      <summary>Writes a resource string to an <see cref="T:System.Web.UI.HtmlTextWriter" /> control. The <see cref="M:System.Web.UI.TemplateControl.WriteUTF8ResourceString(System.Web.UI.HtmlTextWriter,System.Int32,System.Int32,System.Boolean)" /> method is used by generated classes and is not intended for use from within your code.</summary>
      <param name="output">The control to write to.</param>
      <param name="offset">The starting position within <paramref name="value" />.</param>
      <param name="size">The number of characters within <paramref name="value" /> to use.</param>
      <param name="fAsciiOnly">true to bypass re-encoding; otherwise, false.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Data that is not valid is being accessed; <paramref name="offset" /> or <paramref name="size" /> is less than zero.- or -The sum of <paramref name="offset" /> and <paramref name="size" /> is greater than the resource size.</exception>
    </member>
    <member name="M:System.Web.UI.TemplateControl.XPath(System.String)">
      <summary>Evaluates an XPath data-binding expression.</summary>
      <returns>An object that results from the evaluation of the data-binding expression.</returns>
      <param name="xPathExpression">The XPath expression to evaluate. For more information, see <see cref="T:System.Web.UI.XPathBinder" />.</param>
      <exception cref="T:System.InvalidOperationException">The data-binding method can be used only for controls contained on a <see cref="T:System.Web.UI.Page" />. </exception>
    </member>
    <member name="M:System.Web.UI.TemplateControl.XPath(System.String,System.String)">
      <summary>Evaluates an XPath data-binding expression using the specified format string to display the result. </summary>
      <returns>A string that results from the evaluation of the data-binding expression and conversion to a string type.</returns>
      <param name="xPathExpression">The XPath expression to evaluate. For more information, see <see cref="T:System.Web.UI.XPathBinder" />. </param>
      <param name="format">A .NET Framework format string to apply to the result. </param>
      <exception cref="T:System.InvalidOperationException">The data-binding method can be used only for controls contained on a <see cref="T:System.Web.UI.Page" />. </exception>
    </member>
    <member name="M:System.Web.UI.TemplateControl.XPath(System.String,System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Evaluates an XPath data-binding expression using the specified prefix and namespace mappings for namespace resolution and the specified format string to display the result.</summary>
      <returns>A string that results from the evaluation of the data-binding expression and conversion to a string type.</returns>
      <param name="xPathExpression">The XPath expression to evaluate. For more information, see <see cref="T:System.Web.UI.XPathBinder" />. </param>
      <param name="format">A .NET Framework format string to apply to the result. </param>
      <param name="resolver">A set of prefix and namespace mappings used for namespace resolution. </param>
      <exception cref="T:System.InvalidOperationException">The data-binding method can be used only for controls contained on a <see cref="T:System.Web.UI.Page" />. </exception>
    </member>
    <member name="M:System.Web.UI.TemplateControl.XPath(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Evaluates an XPath data-binding expression using the specified prefix and namespace mappings for namespace resolution.</summary>
      <returns>An object that results from the evaluation of the data-binding expression. </returns>
      <param name="xPathExpression">The XPath expression to evaluate. For more information, see <see cref="T:System.Web.UI.XPathBinder" />. </param>
      <param name="resolver">A set of prefix and namespace mappings used for namespace resolution.</param>
      <exception cref="T:System.InvalidOperationException">The data-binding method can be used only for controls contained on a <see cref="T:System.Web.UI.Page" />. </exception>
    </member>
    <member name="M:System.Web.UI.TemplateControl.XPathSelect(System.String)">
      <summary>Evaluates an XPath data-binding expression and returns a node collection that implements the <see cref="T:System.Collections.IEnumerable" /> interface.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> node list. </returns>
      <param name="xPathExpression">The XPath expression to evaluate. For more information, see <see cref="T:System.Web.UI.XPathBinder" />. </param>
    </member>
    <member name="M:System.Web.UI.TemplateControl.XPathSelect(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Evaluates an XPath data-binding expression using the specified prefix and namespace mappings for namespace resolution and returns a node collection that implements the <see cref="T:System.Collections.IEnumerable" /> interface.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> node list. </returns>
      <param name="xPathExpression">The XPath expression to evaluate. For more information, see <see cref="T:System.Web.UI.XPathBinder" />. </param>
      <param name="resolver">A set of prefix and namespace mappings used for namespace resolution. </param>
    </member>
    <member name="T:System.Web.UI.TemplateControlParser">
      <summary>Implements ASP.NET template parsing for template controls.</summary>
    </member>
    <member name="M:System.Web.UI.TemplateControlParser.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.TemplateControlParser" /> class.</summary>
    </member>
    <member name="T:System.Web.UI.TemplateInstance">
      <summary>Specifies how many times an instance of a template can be created.</summary>
    </member>
    <member name="F:System.Web.UI.TemplateInstance.Multiple">
      <summary>A template that is instantiated multiple times. </summary>
    </member>
    <member name="F:System.Web.UI.TemplateInstance.Single">
      <summary>A template that is instantiated only one time. </summary>
    </member>
    <member name="T:System.Web.UI.TemplateInstanceAttribute">
      <summary>Defines a metadata attribute that is used to specify the number of allowed instances of a template. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.TemplateInstanceAttribute.#ctor(System.Web.UI.TemplateInstance)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.TemplateInstanceAttribute" /> class with the specified <see cref="T:System.Web.UI.TemplateInstance" /> enumeration value.</summary>
      <param name="instances">A <see cref="T:System.Web.UI.TemplateInstance" /> enumeration value.</param>
    </member>
    <member name="F:System.Web.UI.TemplateInstanceAttribute.Default">
      <summary>Defines the default value for the <see cref="T:System.Web.UI.TemplateInstanceAttribute" /> class. This field is read-only. </summary>
    </member>
    <member name="M:System.Web.UI.TemplateInstanceAttribute.Equals(System.Object)">
      <summary>Indicates whether the specified object is a <see cref="T:System.Web.UI.TemplateInstanceAttribute" /> object and is identical to the this <see cref="T:System.Web.UI.TemplateInstanceAttribute" /> object.</summary>
      <returns>true if value is both a <see cref="T:System.Web.UI.TemplateInstanceAttribute" /> object and is identical to the this <see cref="T:System.Web.UI.TemplateInstanceAttribute" /> object; otherwise false.</returns>
      <param name="obj">The <see cref="T:System.Object" /> to test.</param>
    </member>
    <member name="M:System.Web.UI.TemplateInstanceAttribute.GetHashCode">
      <summary>Gets a hash code for this <see cref="T:System.Web.UI.TemplateInstanceAttribute" /> object.</summary>
      <returns>The hash code for this <see cref="T:System.Web.UI.TemplateInstanceAttribute" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.TemplateInstanceAttribute.Instances">
      <summary>The <see cref="T:System.Web.UI.TemplateInstance" /> enumeration value that the current template instance represents.</summary>
      <returns>A <see cref="T:System.Web.UI.TemplateInstance" />.</returns>
    </member>
    <member name="M:System.Web.UI.TemplateInstanceAttribute.IsDefaultAttribute">
      <summary>Returns a value indicating if the current <see cref="T:System.Web.UI.TemplateInstanceAttribute" /> object is the same as the default <see cref="T:System.Web.UI.TemplateInstanceAttribute" /> object.</summary>
      <returns>true if the value of the current instance of <see cref="T:System.Web.UI.TemplateInstanceAttribute" /> is the default; otherwise, false.</returns>
    </member>
    <member name="F:System.Web.UI.TemplateInstanceAttribute.Multiple">
      <summary>Creates an instance of the <see cref="T:System.Web.UI.TemplateInstanceAttribute" /> class as one representing a template that will be instantiated multiple times. This field is read-only.</summary>
    </member>
    <member name="F:System.Web.UI.TemplateInstanceAttribute.Single">
      <summary>Creates an instance of the <see cref="T:System.Web.UI.TemplateInstanceAttribute" /> class as one representing a template that will be instantiated a single time. This field is read-only.</summary>
    </member>
    <member name="T:System.Web.UI.TemplateParser">
      <summary>Serves as the abstract base class for ASP.NET file parsers. </summary>
    </member>
    <member name="M:System.Web.UI.TemplateParser.ParseFile(System.String,System.String)">
      <summary>Parses the content of the file that is specified by either its virtual or physical path.</summary>
      <param name="physicalPath">The physical path of the file to parse. <paramref name="physicalPath" /> has precedence over <paramref name="virtualPath" />.</param>
      <param name="virtualPath">The virtual path of the file to parse. </param>
      <exception cref="T:System.Web.HttpException">
        <paramref name="physicalPath" /> or <paramref name="virtualPath" /> refers to the file currently being parsed. </exception>
    </member>
    <member name="M:System.Web.UI.TemplateParser.ProcessError(System.String)">
      <summary>Reports a process error by creating a new <see cref="T:System.Web.ParserError" /> object with the specified message and adding it to a <see cref="T:System.Web.ParserErrorCollection" /> collection.</summary>
      <param name="message">The error message text used to create a new <see cref="T:System.Web.ParserError" />. </param>
    </member>
    <member name="M:System.Web.UI.TemplateParser.ProcessException(System.Exception)">
      <summary>Reports a parser exception by creating a new <see cref="T:System.Web.ParserError" /> object as the specified <see cref="T:System.Exception" /> exception and adding it to a <see cref="T:System.Web.ParserErrorCollection" /> collection.</summary>
      <param name="ex">The <see cref="T:System.Exception" /> used to create a new <see cref="T:System.Web.ParserError" />. </param>
      <exception cref="T:System.Web.HttpCompileException">The <see cref="T:System.Exception" /> to process is a compiler error. </exception>
    </member>
    <member name="T:System.Web.UI.TemplatePropertyEntry">
      <summary>Enables property entry for <see cref="T:System.Web.UI.ITemplate" /> class properties. </summary>
    </member>
    <member name="P:System.Web.UI.TemplatePropertyEntry.BindableTemplate">
      <summary>Gets a value indicating if the <see cref="T:System.Web.UI.ITemplate" /> property can have data bound to it.</summary>
      <returns>true if the <see cref="T:System.Web.UI.ITemplate" /> property is bindable; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.Web.UI.ThemeableAttribute">
      <summary>Defines the metadata attribute that Web server controls and their members use to indicate whether their rendering can be affected by themes and control skins. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.ThemeableAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ThemeableAttribute" /> class, using the specified Boolean value to determine whether the attribute represents a type or member that is affected by themes and control skins.</summary>
      <param name="themeable">true to initialize the <see cref="T:System.Web.UI.ThemeableAttribute" /> to represent a type or member that can be affected by themes; otherwise, false.</param>
    </member>
    <member name="F:System.Web.UI.ThemeableAttribute.Default">
      <summary>Gets a <see cref="T:System.Web.UI.ThemeableAttribute" /> instance that represents the application-defined default value of the attribute.</summary>
    </member>
    <member name="M:System.Web.UI.ThemeableAttribute.Equals(System.Object)">
      <summary>Returns a value that indicates whether this instance is equal to a specified object.</summary>
      <returns>true if <paramref name="obj" /> is the same instance as the current instance, or if the instances are different, but the attribute values are equivalent; otherwise, false.</returns>
      <param name="obj">An object to compare with this instance, or null.</param>
    </member>
    <member name="M:System.Web.UI.ThemeableAttribute.GetHashCode">
      <summary>Serves as a hash function for the <see cref="T:System.Web.UI.ThemeableAttribute" /> type. </summary>
      <returns>A hash code for the current <see cref="T:System.Web.UI.ThemeableAttribute" />.</returns>
    </member>
    <member name="M:System.Web.UI.ThemeableAttribute.IsDefaultAttribute">
      <summary>Gets a value indicating whether the current instance is equivalent to a <see cref="F:System.Web.UI.ThemeableAttribute.Default" /> instance of the <see cref="T:System.Web.UI.ThemeableAttribute" /> class.</summary>
      <returns>true if the current instance is equivalent to a <see cref="F:System.Web.UI.ThemeableAttribute.Default" /> instance of the class; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.ThemeableAttribute.IsObjectThemeable(System.Object)">
      <summary>Returns a value indicating whether the object passed to the method supports themes. </summary>
      <returns>true if the object supports themes and control skins; otherwise, false.</returns>
      <param name="instance">The object to test for themes support.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="instance" /> parameter is null.</exception>
    </member>
    <member name="M:System.Web.UI.ThemeableAttribute.IsTypeThemeable(System.Type)">
      <summary>Returns a value indicating whether the <see cref="T:System.Type" /> passed to the method supports themes.</summary>
      <returns>true if the <see cref="T:System.Type" /> supports themes and control skins; otherwise, false.</returns>
      <param name="type">The <see cref="T:System.Type" /> to test for themes support.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="type" /> parameter is null.</exception>
    </member>
    <member name="F:System.Web.UI.ThemeableAttribute.No">
      <summary>Gets a <see cref="T:System.Web.UI.ThemeableAttribute" /> instance used to decorate a type or member that is not affected by themes and control skins.</summary>
    </member>
    <member name="P:System.Web.UI.ThemeableAttribute.Themeable">
      <summary>Gets a value indicating whether the current control or member of a control can be affected by themes and control skins defined for the Web application.</summary>
      <returns>true if the current type or member can be affected by themes; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Web.UI.ThemeableAttribute.Yes">
      <summary>Gets a <see cref="T:System.Web.UI.ThemeableAttribute" /> instance used to decorate a type or member that is affected by themes and control skins.</summary>
    </member>
    <member name="T:System.Web.UI.ThemeProvider">
      <summary>Provides a class that encapsulates theme and style sheet information for controls in a designer environment. </summary>
    </member>
    <member name="M:System.Web.UI.ThemeProvider.#ctor(System.ComponentModel.Design.IDesignerHost,System.String,System.String,System.String[],System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ThemeProvider" /> class. </summary>
      <param name="host">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that represents the current designer environment.</param>
      <param name="name">The name of the theme or style sheet theme that the <see cref="T:System.Web.UI.ThemeProvider" /> represents. This parameter can be null.</param>
      <param name="themeDefinition">Theme information passed to the <see cref="M:System.Web.UI.DesignTimeTemplateParser.ParseTheme(System.ComponentModel.Design.IDesignerHost,System.String,System.String)" /> method. These are the raw, concatenated contents of the theme.</param>
      <param name="cssFiles">The names of the cascading style sheet (CSS) files that are included with the theme that the <see cref="T:System.Web.UI.ThemeProvider" /> represents.</param>
      <param name="themePath">The absolute path of the file that contains the theme and control skin information for the named theme.</param>
    </member>
    <member name="P:System.Web.UI.ThemeProvider.ContentHashCode">
      <summary>Gets the hash of the theme definition passed to the constructor.</summary>
      <returns>A hash code for the string passed as the theme definition to the class constructor.</returns>
    </member>
    <member name="P:System.Web.UI.ThemeProvider.CssFiles">
      <summary>Gets a set of strings that represent the names of any cascading style sheet (CSS) files associated with the current theme, if the theme is a style sheet theme.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> of strings that identify the CSS files associated with the theme or style sheet theme. This property might return null. </returns>
    </member>
    <member name="P:System.Web.UI.ThemeProvider.DesignerHost">
      <summary>Gets an <see cref="T:System.ComponentModel.Design.IDesignerHost" /> object that represents the current designer environment.</summary>
      <returns>An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that represents the current designer environment. </returns>
    </member>
    <member name="M:System.Web.UI.ThemeProvider.GetSkinBuilder(System.Web.UI.Control)">
      <summary>Retrieves a <see cref="T:System.Web.UI.SkinBuilder" /> instance for the specified control, which is used to apply a theme and control skin in a designer environment.</summary>
      <returns>A <see cref="T:System.Web.UI.SkinBuilder" /> instance, if one is defined for the specified control type; otherwise, null.</returns>
      <param name="control">The control to apply a theme and control skin to.</param>
    </member>
    <member name="M:System.Web.UI.ThemeProvider.GetSkinControlBuildersForControlType(System.Type)">
      <summary>Gets an <see cref="T:System.Collections.IDictionary" /> object that contains a set of <see cref="T:System.Web.UI.SkinBuilder" /> objects for the specified <see cref="T:System.Type" />.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> that contains a list of one or more <see cref="T:System.Web.UI.ControlBuilder" /> objects associated with the <see cref="T:System.Type" /> passed to the method. This list is populated with <see cref="T:System.Collections.DictionaryEntry" /> objects where the <see cref="P:System.Web.UI.Control.SkinID" /> is a <see cref="P:System.Collections.DictionaryEntry.Key" />, and its associated <see cref="T:System.Web.UI.SkinBuilder" /> is the <see cref="P:System.Collections.DictionaryEntry.Value" />. </returns>
      <param name="type">A <see cref="T:System.Type" /> for which to retrieve any associated <see cref="T:System.Web.UI.ControlBuilder" /> objects.</param>
    </member>
    <member name="M:System.Web.UI.ThemeProvider.GetSkinsForControl(System.Type)">
      <summary>Gets an <see cref="T:System.Collections.ICollection" /> of skin identifiers that are associated with the specified <see cref="T:System.Type" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> of skin identifiers, if control skins are defined for the specified <see cref="T:System.Type" />. If no control skins are associated with the type, an empty <see cref="T:System.Collections.ICollection" /> is returned. </returns>
      <param name="type">A <see cref="T:System.Type" /> for which to retrieve any associated skin names.</param>
    </member>
    <member name="P:System.Web.UI.ThemeProvider.ThemeName">
      <summary>Gets the name of the theme or style sheet theme that the <see cref="T:System.Web.UI.ThemeProvider" /> instance represents.</summary>
      <returns>The name of the theme or style sheet theme that the <see cref="T:System.Web.UI.ThemeProvider" /> instance represents. </returns>
    </member>
    <member name="T:System.Web.UI.ToolboxDataAttribute">
      <summary>Specifies the default tag generated for a custom control when it is dragged from a toolbox in a tool such as Microsoft Visual Studio.</summary>
    </member>
    <member name="M:System.Web.UI.ToolboxDataAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ToolboxDataAttribute" /> class. </summary>
      <param name="data">The string to be set as the <see cref="P:System.Web.UI.ToolboxDataAttribute.Data" />.</param>
    </member>
    <member name="P:System.Web.UI.ToolboxDataAttribute.Data">
      <summary>Gets the string representing the initial values of the control's property, which is used in a visual designer for creating an instance of the control.</summary>
      <returns>A string representing the initial values for this attribute.</returns>
    </member>
    <member name="F:System.Web.UI.ToolboxDataAttribute.Default">
      <summary>Represents the default <see cref="T:System.Web.UI.ToolboxDataAttribute" /> value for a custom control.</summary>
    </member>
    <member name="M:System.Web.UI.ToolboxDataAttribute.Equals(System.Object)">
      <summary>Tests whether the <see cref="T:System.Web.UI.ToolboxDataAttribute" /> object is equal to the given object.</summary>
      <returns>true, if the <see cref="T:System.Web.UI.ToolboxDataAttribute" /> object is equal to the given object; otherwise, false.</returns>
      <param name="obj">The object to compare to.</param>
    </member>
    <member name="M:System.Web.UI.ToolboxDataAttribute.GetHashCode">
      <summary>Returns the hash code of the custom control.</summary>
      <returns>A 32-bit signed integer representing the hash code.</returns>
    </member>
    <member name="M:System.Web.UI.ToolboxDataAttribute.IsDefaultAttribute">
      <summary>Tests whether the <see cref="T:System.Web.UI.ToolboxDataAttribute" /> object contains the default value for the <see cref="P:System.Web.UI.ToolboxDataAttribute.Data" /> property.</summary>
      <returns>true, if the <see cref="T:System.Web.UI.ToolboxDataAttribute" /> contains the default value for the <see cref="P:System.Web.UI.ToolboxDataAttribute.Data" /> property; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.UI.Triplet">
      <summary>Provides a basic utility class that is used to store three related objects.</summary>
    </member>
    <member name="M:System.Web.UI.Triplet.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Triplet" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Triplet.#ctor(System.Object,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Triplet" /> class and sets the first two objects. </summary>
      <param name="x">Object assigned to <see cref="F:System.Web.UI.Triplet.First" />.</param>
      <param name="y">Object assigned to <see cref="F:System.Web.UI.Triplet.Second" />.</param>
    </member>
    <member name="M:System.Web.UI.Triplet.#ctor(System.Object,System.Object,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Triplet" /> class with the provided three objects. </summary>
      <param name="x">Object assigned to <see cref="F:System.Web.UI.Triplet.First" />.</param>
      <param name="y">Object assigned to <see cref="F:System.Web.UI.Triplet.Second" />.</param>
      <param name="z">Object assigned to <see cref="F:System.Web.UI.Triplet.Third" />.</param>
    </member>
    <member name="F:System.Web.UI.Triplet.First">
      <summary>Gets or sets the first object of the triplet.</summary>
    </member>
    <member name="F:System.Web.UI.Triplet.Second">
      <summary>Gets or sets the second object of the triplet.</summary>
    </member>
    <member name="F:System.Web.UI.Triplet.Third">
      <summary>Gets or sets the third object of the triplet.</summary>
    </member>
    <member name="T:System.Web.UI.UrlPropertyAttribute">
      <summary>Defines the attribute that controls use to identify string properties containing URL values. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.UrlPropertyAttribute.#ctor">
      <summary>Initializes a new default instance of the <see cref="T:System.Web.UI.UrlPropertyAttribute" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.UrlPropertyAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.UrlPropertyAttribute" /> class, setting the <see cref="P:System.Web.UI.UrlPropertyAttribute.Filter" /> property to the specified string.</summary>
      <param name="filter">A file filter associated with the URL-specific property.</param>
    </member>
    <member name="M:System.Web.UI.UrlPropertyAttribute.Equals(System.Object)">
      <returns>true if <paramref name="obj" /> equals the type and value of this instance; otherwise, false.</returns>
      <param name="obj">An <see cref="T:System.Object" /> to compare with this instance or null. </param>
    </member>
    <member name="P:System.Web.UI.UrlPropertyAttribute.Filter">
      <summary>Gets a file filter associated with the URL-specific property. </summary>
      <returns>A file filter associated with the URL-specific property. The default is "*.*".</returns>
    </member>
    <member name="M:System.Web.UI.UrlPropertyAttribute.GetHashCode">
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="T:System.Web.UI.UserControl">
      <summary>Represents an .ascx file, also known as a user control, requested from a server that hosts an ASP.NET Web application. The file must be called from a Web Forms page or a parser error will occur.</summary>
    </member>
    <member name="M:System.Web.UI.UserControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.UserControl" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.UserControl.Application">
      <summary>Gets the <see cref="P:System.Web.HttpContext.Application" /> object for the current Web request.</summary>
      <returns>The <see cref="T:System.Web.HttpApplicationState" /> object for the current Web request.</returns>
    </member>
    <member name="P:System.Web.UI.UserControl.Attributes">
      <summary>Gets a collection of all attribute name and value pairs declared in the user control tag within the .aspx file.</summary>
      <returns>An <see cref="T:System.Web.UI.AttributeCollection" /> object that contains all the name and value pairs declared in the user control tag.</returns>
    </member>
    <member name="P:System.Web.UI.UserControl.Cache">
      <summary>Gets the <see cref="T:System.Web.Caching.Cache" /> object that is associated with the application that contains the user control.</summary>
      <returns>The <see cref="T:System.Web.Caching.Cache" /> object in which to store the user control's data.</returns>
    </member>
    <member name="P:System.Web.UI.UserControl.CachePolicy">
      <summary>Gets a reference to a collection of caching parameters for this user control.</summary>
      <returns>A <see cref="T:System.Web.UI.ControlCachePolicy" /> containing properties that define the caching parameters for this <see cref="T:System.Web.UI.UserControl" />.</returns>
    </member>
    <member name="M:System.Web.UI.UserControl.DesignerInitialize">
      <summary>Performs any initialization steps on the user control that are required by RAD designers.</summary>
    </member>
    <member name="M:System.Web.UI.UserControl.InitializeAsUserControl(System.Web.UI.Page)">
      <summary>Initializes the <see cref="T:System.Web.UI.UserControl" /> object that has been created declaratively. Since there are some differences between pages and user controls, this method makes sure that the user control is initialized properly.</summary>
      <param name="page">The <see cref="T:System.Web.UI.Page" /> object that contains the user control. </param>
    </member>
    <member name="P:System.Web.UI.UserControl.IsPostBack">
      <summary>Gets a value indicating whether the user control is being loaded in response to a client postback, or if it is being loaded and accessed for the first time.</summary>
      <returns>true if the user control is being loaded in response to a client postback; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.UserControl.LoadViewState(System.Object)">
      <summary>Restores the view-state information from a previous user control request that was saved by the <see cref="M:System.Web.UI.UserControl.SaveViewState" /> method.</summary>
      <param name="savedState">An <see cref="T:System.Object" /> that represents the user control state to be restored. </param>
    </member>
    <member name="M:System.Web.UI.UserControl.MapPath(System.String)">
      <summary>Assigns a virtual file path, either absolute or relative, to a physical file path.</summary>
      <returns>The physical path to the file.</returns>
      <param name="virtualPath">The virtual file path to map. </param>
    </member>
    <member name="M:System.Web.UI.UserControl.OnInit(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Init" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data. </param>
    </member>
    <member name="P:System.Web.UI.UserControl.Request">
      <summary>Gets the <see cref="T:System.Web.HttpRequest" /> object for the current Web request.</summary>
      <returns>The <see cref="T:System.Web.HttpRequest" /> object associated with the <see cref="T:System.Web.UI.Page" /> that contains the <see cref="T:System.Web.UI.UserControl" /> instance.</returns>
    </member>
    <member name="P:System.Web.UI.UserControl.Response">
      <summary>Gets the <see cref="T:System.Web.HttpResponse" /> object for the current Web request.</summary>
      <returns>The <see cref="T:System.Web.HttpResponse" /> object associated with the <see cref="T:System.Web.UI.Page" /> that contains the <see cref="T:System.Web.UI.UserControl" /> instance.</returns>
    </member>
    <member name="M:System.Web.UI.UserControl.SaveViewState">
      <summary>Saves any user control view-state changes that have occurred since the last page postback.</summary>
      <returns>Returns the user control's current view state. If there is no view state associated with the control, it returns null.</returns>
    </member>
    <member name="P:System.Web.UI.UserControl.Server">
      <summary>Gets the <see cref="T:System.Web.HttpServerUtility" /> object for the current Web request.</summary>
      <returns>The <see cref="T:System.Web.HttpServerUtility" /> object associated with the <see cref="T:System.Web.UI.Page" /> that contains the <see cref="T:System.Web.UI.UserControl" /> instance.</returns>
    </member>
    <member name="P:System.Web.UI.UserControl.Session">
      <summary>Gets the <see cref="T:System.Web.SessionState.HttpSessionState" /> object for the current Web request.</summary>
      <returns>An <see cref="T:System.Web.SessionState.HttpSessionState" /> object associated with the <see cref="T:System.Web.UI.Page" /> that contains the <see cref="T:System.Web.UI.UserControl" /> instance.</returns>
    </member>
    <member name="M:System.Web.UI.UserControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)">
      <summary>Returns the value of the specified user control attribute.</summary>
      <returns>The value of the specified user control attribute.</returns>
      <param name="name">The name of the attribute to get the value of.</param>
    </member>
    <member name="M:System.Web.UI.UserControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)">
      <summary>Sets the value of the specified user control attribute.</summary>
      <param name="name">The name of the attribute to set.</param>
      <param name="value">The value of the attribute to set.</param>
    </member>
    <member name="P:System.Web.UI.UserControl.System#Web#UI#IUserControlDesignerAccessor#InnerText">
      <summary>Gets or sets the text that appears between the opening and closing tags of a user control.</summary>
      <returns>The text that appears between the opening and closing tabs of a user control.</returns>
    </member>
    <member name="P:System.Web.UI.UserControl.System#Web#UI#IUserControlDesignerAccessor#TagName">
      <summary>Gets or sets the full tag name of the user control.</summary>
      <returns>The full tag name of the user control.</returns>
    </member>
    <member name="P:System.Web.UI.UserControl.Trace">
      <summary>Gets the <see cref="T:System.Web.TraceContext" /> object for the current Web request.</summary>
      <returns>The data from the <see cref="T:System.Web.TraceContext" /> object for the current Web request.</returns>
    </member>
    <member name="T:System.Web.UI.UserControlControlBuilder">
      <summary>Supports the ASP.NET page parser in building an instance of a user control.</summary>
    </member>
    <member name="M:System.Web.UI.UserControlControlBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.UserControlControlBuilder" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.UserControlControlBuilder.BuildObject">
      <summary>Builds an instance of the control identified by the <see cref="P:System.Web.UI.ControlBuilder.ControlType" /> property. </summary>
      <returns>An instance of a user control identified by <see cref="P:System.Web.UI.ControlBuilder.ControlType" />.</returns>
    </member>
    <member name="M:System.Web.UI.UserControlControlBuilder.NeedsTagInnerText">
      <summary>Determines whether the control builder needs to get the control's inner text. </summary>
      <returns>true if the control builder requires the control's inner text; otherwise, false. </returns>
    </member>
    <member name="M:System.Web.UI.UserControlControlBuilder.SetTagInnerText(System.String)">
      <summary>Provides the <see cref="T:System.Web.UI.UserControlControlBuilder" /> object with the inner text of the control tag.</summary>
      <param name="text">The text to be provided.</param>
    </member>
    <member name="T:System.Web.UI.ValidationPropertyAttribute">
      <summary>Defines the metadata attribute that ASP.NET server controls use to identify a validation property. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.ValidationPropertyAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ValidationPropertyAttribute" /> class.</summary>
      <param name="name">The name of the validation property. </param>
    </member>
    <member name="P:System.Web.UI.ValidationPropertyAttribute.Name">
      <summary>Gets the name of the ASP.NET server control's validation property.</summary>
      <returns>The name of the validation property.</returns>
    </member>
    <member name="T:System.Web.UI.ValidatorCollection">
      <summary>Exposes an array of <see cref="T:System.Web.UI.IValidator" /> references. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.ValidatorCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ValidatorCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.ValidatorCollection.Add(System.Web.UI.IValidator)">
      <summary>Adds the specified validation server control to the <see cref="T:System.Web.UI.ValidatorCollection" /> collection.</summary>
      <param name="validator">The validation server control to add. </param>
    </member>
    <member name="M:System.Web.UI.ValidatorCollection.Contains(System.Web.UI.IValidator)">
      <summary>Determines whether the specified validation server control is contained within the page's <see cref="T:System.Web.UI.ValidatorCollection" /> collection.</summary>
      <returns>true if the validation server control is in the collection; otherwise, false.</returns>
      <param name="validator">The validation server control to check for. </param>
    </member>
    <member name="M:System.Web.UI.ValidatorCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the validator collection to the specified array, beginning at the specified location.</summary>
      <param name="array">The collection to which the validation server control is added. </param>
      <param name="index">The index where the validation server control is copied. </param>
    </member>
    <member name="P:System.Web.UI.ValidatorCollection.Count">
      <summary>Gets the number of references in the collection.</summary>
      <returns>The number of validation controls in the page's <see cref="T:System.Web.UI.ValidatorCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.ValidatorCollection.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> instance for the <see cref="T:System.Web.UI.ValidatorCollection" /> collection.</summary>
      <returns>The <see cref="T:System.Collections.IEnumerator" /> for the collection.</returns>
    </member>
    <member name="P:System.Web.UI.ValidatorCollection.IsReadOnly">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.ValidatorCollection" /> collection is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.ValidatorCollection.IsSynchronized">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.ValidatorCollection" /> collection is synchronized.</summary>
      <returns>true if the collection is synchronized; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.ValidatorCollection.Item(System.Int32)">
      <summary>Gets the validation server control at the specified index location in the <see cref="T:System.Web.UI.ValidatorCollection" /> collection.</summary>
      <returns>The value of the specified validator.</returns>
      <param name="index">The index of the validator to return. </param>
    </member>
    <member name="M:System.Web.UI.ValidatorCollection.Remove(System.Web.UI.IValidator)">
      <summary>Removes the specified validation server control from the page's <see cref="T:System.Web.UI.ValidatorCollection" /> collection.</summary>
      <param name="validator">The validation server control to remove from the collection. </param>
    </member>
    <member name="P:System.Web.UI.ValidatorCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize the <see cref="T:System.Web.UI.ValidatorCollection" /> collection.</summary>
      <returns>The <see cref="T:System.Object" /> to synchronize the collection with.</returns>
    </member>
    <member name="T:System.Web.UI.VerificationAttribute">
      <summary>Defines the metadata attribute of a Web content accessibility rule. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Web.UI.VerificationAttribute.#ctor(System.String,System.String,System.Web.UI.VerificationReportLevel,System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.VerificationAttribute" /> class with accessibility guideline, checkpoint, reporting level, checkpoint priority, and error message.</summary>
      <param name="guideline">The accessibility guideline the verification rule describes.</param>
      <param name="checkpoint">The checkpoint within the guideline.</param>
      <param name="reportLevel">One of the <see cref="T:System.Web.UI.VerificationReportLevel" /> values.</param>
      <param name="priority">The priority of the checkpoint.</param>
      <param name="message">The message displayed when the verification rule is true.</param>
    </member>
    <member name="M:System.Web.UI.VerificationAttribute.#ctor(System.String,System.String,System.Web.UI.VerificationReportLevel,System.Int32,System.String,System.Web.UI.VerificationRule,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.VerificationAttribute" /> class with accessibility guideline, checkpoint, reporting level, checkpoint priority, error message, <see cref="T:System.Web.UI.VerificationRule" />.value, and related conditional property.</summary>
      <param name="guideline">The accessibility guideline the verification rule describes.</param>
      <param name="checkpoint">The checkpoint within the guideline.</param>
      <param name="reportLevel">One of the <see cref="T:System.Web.UI.VerificationReportLevel" /> values.</param>
      <param name="priority">The priority of the checkpoint.</param>
      <param name="message">The message displayed when the verification rule is true.</param>
      <param name="rule">One of the <see cref="T:System.Web.UI.VerificationRule" />.values.</param>
      <param name="conditionalProperty">The left side of a conditional expression used to verify the accessibility rule.</param>
    </member>
    <member name="M:System.Web.UI.VerificationAttribute.#ctor(System.String,System.String,System.Web.UI.VerificationReportLevel,System.Int32,System.String,System.Web.UI.VerificationRule,System.String,System.Web.UI.VerificationConditionalOperator,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.VerificationAttribute" /> class with accessibility guideline, checkpoint, reporting level, checkpoint priority, error message, <see cref="T:System.Web.UI.VerificationRule" />.value, related conditional property, a related conditional property value, and a reference guideline URL.</summary>
      <param name="guideline">The accessibility guideline the verification rule describes.</param>
      <param name="checkpoint">The checkpoint within the guideline.</param>
      <param name="reportLevel">One of the <see cref="T:System.Web.UI.VerificationReportLevel" /> values.</param>
      <param name="priority">The priority of the checkpoint.</param>
      <param name="message">The message displayed when the verification rule is true.</param>
      <param name="rule">One of the <see cref="T:System.Web.UI.VerificationRule" />.values.</param>
      <param name="conditionalProperty">The left side of a conditional expression used to verify the accessibility rule.</param>
      <param name="conditionalOperator">One of the <see cref="T:System.Web.UI.VerificationConditionalOperator" /> values.</param>
      <param name="conditionalValue">The right hand side of a conditional expression used to verify the accessibility rule.</param>
      <param name="guidelineUrl">A reference URL for <paramref name="guideline" />.</param>
    </member>
    <member name="P:System.Web.UI.VerificationAttribute.Checkpoint">
      <summary>Gets the accessibility checkpoint reference in the specified <see cref="P:System.Web.UI.VerificationAttribute.Guideline" /> property.</summary>
      <returns>A string representing the checkpoint reference. </returns>
    </member>
    <member name="P:System.Web.UI.VerificationAttribute.ConditionalProperty">
      <summary>Gets the left side of a conditional expression used as part of the verification accessibility checkpoint.</summary>
      <returns>The left side of the conditional expression. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.VerificationAttribute.ConditionalValue">
      <summary>Gets the right side of a conditional expression used as part of the verification accessibility checkpoint.</summary>
      <returns>The right side of a conditional expression. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.VerificationAttribute.Guideline">
      <summary>Gets the guideline that used for accessibility checking.</summary>
      <returns>A string representing the guideline.</returns>
    </member>
    <member name="P:System.Web.UI.VerificationAttribute.GuidelineUrl">
      <summary>Gets the URL the can be used to get more information on the accessibility guidelines given in the <see cref="P:System.Web.UI.VerificationAttribute.Guideline" /> property.</summary>
      <returns>The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.VerificationAttribute.Message">
      <summary>Gets a message string when the accessibility checkpoint verification rule is true.</summary>
      <returns>An error string.</returns>
    </member>
    <member name="P:System.Web.UI.VerificationAttribute.Priority">
      <summary>Gets the priority of the accessibility checkpoint.</summary>
      <returns>An integer representing the priority.</returns>
    </member>
    <member name="P:System.Web.UI.VerificationAttribute.VerificationConditionalOperator">
      <summary>Gets a <see cref="T:System.Web.UI.VerificationConditionalOperator" /> enumeration value indication how the accessibility checkpoint is verified. </summary>
      <returns>One of the <see cref="T:System.Web.UI.VerificationConditionalOperator" /> enumeration values. The default value is <see cref="F:System.Web.UI.VerificationConditionalOperator.Equals" />.</returns>
    </member>
    <member name="P:System.Web.UI.VerificationAttribute.VerificationReportLevel">
      <summary>Gets a <see cref="T:System.Web.UI.VerificationReportLevel" /> enumeration value indicating how the accessibility checkpoint is used.</summary>
      <returns>One of the <see cref="T:System.Web.UI.VerificationReportLevel" /> enumeration values.</returns>
    </member>
    <member name="P:System.Web.UI.VerificationAttribute.VerificationRule">
      <summary>Gets a <see cref="T:System.Web.UI.VerificationRule" /> enumeration value indicating how the accessibility checkpoint is used.</summary>
      <returns>One of the <see cref="T:System.Web.UI.VerificationRule" /> enumeration values. The default value is <see cref="F:System.Web.UI.VerificationRule.Required" />.</returns>
    </member>
    <member name="T:System.Web.UI.VerificationConditionalOperator">
      <summary>Specifies operators for a conditional expression used in a <see cref="T:System.Web.UI.VerificationAttribute" /> class.</summary>
    </member>
    <member name="F:System.Web.UI.VerificationConditionalOperator.Equals">
      <summary>The equal to operator (=).</summary>
    </member>
    <member name="F:System.Web.UI.VerificationConditionalOperator.NotEquals">
      <summary>The not equal to operator (!=).</summary>
    </member>
    <member name="T:System.Web.UI.VerificationReportLevel">
      <summary>Specifies reporting levels for an accessibility rule defined by an <see cref="T:System.Web.UI.VerificationAttribute" /> instance.</summary>
    </member>
    <member name="F:System.Web.UI.VerificationReportLevel.Error">
      <summary>The verification rule represented by the <see cref="T:System.Web.UI.VerificationAttribute" /> instance is an error.</summary>
    </member>
    <member name="F:System.Web.UI.VerificationReportLevel.Warning">
      <summary>The verification rule represented by the <see cref="T:System.Web.UI.VerificationAttribute" /> instance is a warning.</summary>
    </member>
    <member name="F:System.Web.UI.VerificationReportLevel.Guideline">
      <summary>The verification rule represented by the <see cref="T:System.Web.UI.VerificationAttribute" /> instance is a guideline.</summary>
    </member>
    <member name="T:System.Web.UI.VerificationRule">
      <summary>Specifies how conditional expressions defined by an <see cref="T:System.Web.UI.VerificationAttribute" /> instance are used in verification.</summary>
    </member>
    <member name="F:System.Web.UI.VerificationRule.Required">
      <summary>The conditional expression specified in an <see cref="T:System.Web.UI.VerificationAttribute" /> instance is required.</summary>
    </member>
    <member name="F:System.Web.UI.VerificationRule.Prohibited">
      <summary>The conditional expression specified in an <see cref="T:System.Web.UI.VerificationAttribute" /> instance is prohibited.</summary>
    </member>
    <member name="F:System.Web.UI.VerificationRule.NotEmptyString">
      <summary>The conditional expression specified in an <see cref="T:System.Web.UI.VerificationAttribute" /> instance must have a left hand side that is not an empty string ("").</summary>
    </member>
    <member name="T:System.Web.UI.ViewStateEncryptionMode">
      <summary>Specifies whether view-state information is encrypted.</summary>
    </member>
    <member name="F:System.Web.UI.ViewStateEncryptionMode.Auto">
      <summary>The view-state information is encrypted if a control requests encryption by calling the <see cref="M:System.Web.UI.Page.RegisterRequiresViewStateEncryption" /> method. This is the default.</summary>
    </member>
    <member name="F:System.Web.UI.ViewStateEncryptionMode.Always">
      <summary>The view-state information is always encrypted.</summary>
    </member>
    <member name="F:System.Web.UI.ViewStateEncryptionMode.Never">
      <summary>The view-state information is never encrypted, even if a control requests it.</summary>
    </member>
    <member name="T:System.Web.UI.ViewStateException">
      <summary>Represents the exception that is thrown when the view state cannot be loaded or validated. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.ViewStateException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ViewStateException" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ViewStateException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="P:System.Web.UI.ViewStateException.IsConnected">
      <summary>Gets a value indicating whether the client is currently connected to the server.</summary>
      <returns>true if the client is still connected to the server; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.ViewStateException.Message">
      <summary>Gets debugging information about the HTTP request that resulted in a view-state exception.</summary>
      <returns>A <see cref="T:System.String" /> containing the formatted message with information about the exception.</returns>
    </member>
    <member name="P:System.Web.UI.ViewStateException.Path">
      <summary>Gets the path of the HTTP request that resulted in a view-state exception.</summary>
      <returns>A <see cref="T:System.String" /> containing the path from the request.</returns>
    </member>
    <member name="P:System.Web.UI.ViewStateException.PersistedState">
      <summary>Gets the contents of the view-state string that, when read, caused the view-state exception.</summary>
      <returns>A <see cref="T:System.String" /> containing the view-state values that caused the view-state exception.</returns>
    </member>
    <member name="P:System.Web.UI.ViewStateException.Referer">
      <summary>Gets the URL of the page that linked to the page where the view-state exception occurred.</summary>
      <returns>A <see cref="T:System.String" /> containing the HTTP referrer.</returns>
    </member>
    <member name="P:System.Web.UI.ViewStateException.RemoteAddress">
      <summary>Gets the IP address of the HTTP request that resulted in a view-state exception.</summary>
      <returns>A <see cref="T:System.String" /> containing the remote IP address of the client.</returns>
    </member>
    <member name="P:System.Web.UI.ViewStateException.RemotePort">
      <summary>Gets the port number of the HTTP request that resulted in a view-state exception.</summary>
      <returns>A <see cref="T:System.String" /> containing the remote port number.</returns>
    </member>
    <member name="P:System.Web.UI.ViewStateException.UserAgent">
      <summary>Gets the browser type of the HTTP request that resulted in a view-state exception.</summary>
      <returns>A <see cref="T:System.String" /> containing the user agent, which is typically the browser type.</returns>
    </member>
    <member name="T:System.Web.UI.ViewStateMode">
      <summary>Specifies whether view state will be enabled for a control.</summary>
    </member>
    <member name="F:System.Web.UI.ViewStateMode.Inherit">
      <summary>Inherit the value of <see cref="T:System.Web.UI.ViewStateMode" /> from the parent <see cref="T:System.Web.UI.Control" />.</summary>
    </member>
    <member name="F:System.Web.UI.ViewStateMode.Enabled">
      <summary>Enable view state for this control even if the parent control has view state disabled.</summary>
    </member>
    <member name="F:System.Web.UI.ViewStateMode.Disabled">
      <summary>Disable view state for this control even if the parent control has view state enabled.</summary>
    </member>
    <member name="T:System.Web.UI.ViewStateModeByIdAttribute">
      <summary>Defines the metadata attribute that ASP.NET server controls use to specify whether they participate in loading view-state information by <see cref="P:System.Web.UI.Control.ID" />. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.ViewStateModeByIdAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ViewStateModeByIdAttribute" /> class.</summary>
    </member>
    <member name="T:System.Web.UI.VirtualReferenceType">
      <summary>Specifies the type of resource referenced by a parsed virtual path.</summary>
    </member>
    <member name="F:System.Web.UI.VirtualReferenceType.Page">
      <summary>The parsed virtual path references an ASP.NET page.</summary>
    </member>
    <member name="F:System.Web.UI.VirtualReferenceType.UserControl">
      <summary>The parsed virtual path references an ASP.NET user control.</summary>
    </member>
    <member name="F:System.Web.UI.VirtualReferenceType.Master">
      <summary>The parsed virtual path references a master page file.</summary>
    </member>
    <member name="F:System.Web.UI.VirtualReferenceType.SourceFile">
      <summary>The parsed virtual path references a code file that is compiled using a specific language compiler.</summary>
    </member>
    <member name="F:System.Web.UI.VirtualReferenceType.Other">
      <summary>The parsed virtual path references a resource that is not an ASP.NET page, master page, user control, or language-specific code file.</summary>
    </member>
    <member name="T:System.Web.UI.WebResourceAttribute">
      <summary>Defines the metadata attribute that enables an embedded resource in an assembly. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Web.UI.WebResourceAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebResourceAttribute" /> class with the specified Web resource and resource content type.</summary>
      <param name="webResource">The name of the of Web resource.</param>
      <param name="contentType">The type of resource, such as "image/gif" or "text/javascript".</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="webResource" /> is null or an empty string ("").- or -<paramref name="contentType" /> is null or an empty string ("").</exception>
    </member>
    <member name="P:System.Web.UI.WebResourceAttribute.CdnPath">
      <summary>Gets or set the path of a Content Delivery Network (CDN) that contains Web resources.</summary>
      <returns>The path of a Content Delivery Network (CDN).</returns>
    </member>
    <member name="P:System.Web.UI.WebResourceAttribute.CdnSupportsSecureConnection">
      <summary>Gets or set a value that indicates to the <see cref="T:System.Web.UI.ScriptManager" /> whether a script resource should be accessed using a secure connection to the content delivery network (CDN) path when the page is accessed using HTTPS.</summary>
      <returns>true if the CDN should be accessed using HTTPS; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebResourceAttribute.ContentType">
      <summary>Gets a string containing the MIME type of the resource that is referenced by the <see cref="T:System.Web.UI.WebResourceAttribute" /> class.</summary>
      <returns>The content type of the resource.</returns>
    </member>
    <member name="P:System.Web.UI.WebResourceAttribute.PerformSubstitution">
      <summary>Gets or sets a Boolean value that determines whether, during processing of the embedded resource referenced by the <see cref="T:System.Web.UI.WebResourceAttribute" /> class, other Web resource URLs are parsed and replaced with the full path to the resource.</summary>
      <returns>true if embedded resources are resolved during processing of the resource; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebResourceAttribute.WebResource">
      <summary>Gets a string containing the name of the resource that is referenced by the <see cref="T:System.Web.UI.WebResourceAttribute" /> class.</summary>
      <returns>The name of the resource.</returns>
    </member>
    <member name="T:System.Web.UI.WebServiceParser">
      <summary>Provides a parser for Web service handlers. </summary>
    </member>
    <member name="P:System.Web.UI.WebServiceParser.DefaultDirectiveName">
      <summary>Gets the default directive name.</summary>
      <returns>A <see cref="T:System.String" /> containing the default directive name.</returns>
    </member>
    <member name="M:System.Web.UI.WebServiceParser.GetCompiledType(System.String,System.Web.HttpContext)">
      <summary>Returns the compiled type for a given input file.</summary>
      <returns>A <see cref="T:System.Type" /> as specified by the <see cref="T:System.Web.HttpContext" />.</returns>
      <param name="inputFile">The file to be compiled. </param>
      <param name="context">The <see cref="T:System.Web.HttpContext" /> object for the current request. </param>
    </member>
    <member name="T:System.Web.UI.XhtmlMobileDocType">
      <summary>Specifies the type of XHTML for the <see cref="T:System.Web.UI.XhtmlTextWriter" /> class to render to the page or control.</summary>
    </member>
    <member name="F:System.Web.UI.XhtmlMobileDocType.XhtmlBasic">
      <summary>Specifies the XHTML Basic format. This format does not support frames and styles.</summary>
    </member>
    <member name="F:System.Web.UI.XhtmlMobileDocType.XhtmlMobileProfile">
      <summary>Specifies the XHTML Mobile Profile format.</summary>
    </member>
    <member name="F:System.Web.UI.XhtmlMobileDocType.Wml20">
      <summary>Specifies the WML 2.0 format.</summary>
    </member>
    <member name="T:System.Web.UI.XhtmlTextWriter">
      <summary>Writes Extensible Hypertext Markup Language (XHTML)-specific characters, including all variations of XHTML modules that derive from XTHML, to the output stream for an ASP.NET server control for mobile devices. Override the <see cref="T:System.Web.UI.XhtmlTextWriter" /> class to provide custom XHTML rendering for ASP.NET pages and server controls.</summary>
    </member>
    <member name="M:System.Web.UI.XhtmlTextWriter.#ctor(System.IO.TextWriter)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.XhtmlTextWriter" /> class that uses the line indentation that is specified in the <see cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" /> field. Use the <see cref="M:System.Web.UI.XhtmlTextWriter.#ctor(System.IO.TextWriter)" /> constructor if you do not want to change the default line indentation.</summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> instance that renders the XHTML content. </param>
    </member>
    <member name="M:System.Web.UI.XhtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.XhtmlTextWriter" /> class with the specified line indentation.</summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> instance that renders the XHTML content. </param>
      <param name="tabString">The string used to render a line indentation.</param>
    </member>
    <member name="M:System.Web.UI.XhtmlTextWriter.AddRecognizedAttribute(System.String,System.String)">
      <summary>Adds an attribute to an XHTML element. The collection of element-specific attributes for the <see cref="T:System.Web.UI.XhtmlTextWriter" /> object is referenced by the <see cref="P:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes" /> property.</summary>
      <param name="elementName">The XHTML element to add the attribute to.</param>
      <param name="attributeName">The attribute to add.</param>
    </member>
    <member name="P:System.Web.UI.XhtmlTextWriter.CommonAttributes">
      <summary>Gets a <see cref="T:System.Collections.Hashtable" /> object containing common attributes of the markup tags for the <see cref="T:System.Web.UI.XhtmlTextWriter" /> object.</summary>
      <returns>A <see cref="T:System.Collections.Hashtable" /> object containing common attributes.</returns>
    </member>
    <member name="P:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes">
      <summary>Gets a <see cref="T:System.Collections.Hashtable" /> object containing element-specific attributes.</summary>
      <returns>A <see cref="T:System.Collections.Hashtable" /> object containing element-specific attributes.</returns>
    </member>
    <member name="M:System.Web.UI.XhtmlTextWriter.IsValidFormAttribute(System.String)">
      <summary>Checks an XHTML attribute to ensure that it can be rendered in the opening tag of a &lt;form&gt; element.</summary>
      <returns>true if the attribute can be applied to a &lt;form&gt; element; otherwise, false.</returns>
      <param name="attributeName">The attribute name to check. </param>
    </member>
    <member name="M:System.Web.UI.XhtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
      <summary>Determines whether the specified XHTML attribute and its value can be rendered to the current markup element.</summary>
      <returns>true if the attribute is rendered to the page; otherwise, false.</returns>
      <param name="name">The XHTML attribute to render. </param>
      <param name="value">The value assigned to the XHTML attribute. </param>
      <param name="key">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value associated with the XHTML attribute. </param>
    </member>
    <member name="M:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
      <summary>Determines whether the specified XHTML style attribute and its value can be rendered to the current markup element.</summary>
      <returns>true if the style attribute is rendered; otherwise, false.</returns>
      <param name="name">The XHTML style attribute to render. </param>
      <param name="value">The value assigned to the XHTML style attribute. </param>
      <param name="key">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value associated with the XHTML style attribute. </param>
    </member>
    <member name="M:System.Web.UI.XhtmlTextWriter.RemoveRecognizedAttribute(System.String,System.String)">
      <summary>Removes an attribute from the <see cref="P:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes" /> collection of an element.</summary>
      <param name="elementName">The XHTML element to remove an attribute from.</param>
      <param name="attributeName">The attribute to remove from the specified XHTML element.</param>
    </member>
    <member name="M:System.Web.UI.XhtmlTextWriter.SetDocType(System.Web.UI.XhtmlMobileDocType)">
      <summary>Specifies the XHTML document type for the text writer to render to the page or control.</summary>
      <param name="docType">One of the <see cref="T:System.Web.UI.XhtmlMobileDocType" /> enumeration values. </param>
    </member>
    <member name="P:System.Web.UI.XhtmlTextWriter.SuppressCommonAttributes">
      <summary>Gets a <see cref="T:System.Collections.Hashtable" /> object of elements for which <see cref="P:System.Web.UI.XhtmlTextWriter.CommonAttributes" /> attributes are suppressed.</summary>
      <returns>A <see cref="T:System.Collections.Hashtable" /> of elements containing a collection of <see cref="P:System.Web.UI.XhtmlTextWriter.CommonAttributes" /> that are not rendered.</returns>
    </member>
    <member name="M:System.Web.UI.XhtmlTextWriter.WriteBreak">
      <summary>Writes a &lt;br/&gt; element to the XHTML output stream.</summary>
    </member>
    <member name="T:System.Web.UI.XPathBinder">
      <summary>Provides support for rapid application development (RAD) designers to parse data-binding expressions that use XPath expressions. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.XPathBinder.Eval(System.Object,System.String)">
      <summary>Evaluates XPath data-binding expressions at run time.</summary>
      <returns>An <see cref="T:System.Object" /> that results from the evaluation of the data-binding expression.</returns>
      <param name="container">The <see cref="T:System.Xml.XPath.IXPathNavigable" /> object reference that the expression is evaluated against. This must be a valid object identifier in the page's specified language. </param>
      <param name="xPath">The XPath query from <paramref name="container" /> to the property value that is placed in the bound control property. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="container" /> or <paramref name="xpath" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The object specified by <paramref name="container" /> is not an <see cref="T:System.Xml.XPath.IXPathNavigable" /> object.</exception>
    </member>
    <member name="M:System.Web.UI.XPathBinder.Eval(System.Object,System.String,System.String)">
      <summary>Evaluates XPath data-binding expressions at run time and formats the result as text to be displayed in the requesting browser.</summary>
      <returns>A <see cref="T:System.String" /> that results from the evaluation of the data-binding expression and conversion to a string type.</returns>
      <param name="container">The <see cref="T:System.Xml.XPath.IXPathNavigable" /> object reference that the expression is evaluated against. This must be a valid object identifier in the page's specified language. </param>
      <param name="xPath">The XPath query from the <paramref name="container" /> to the property value to be placed in the bound control property. </param>
      <param name="format">A .NET Framework format string, similar to those used by <see cref="M:System.String.Format(System.String,System.Object)" />, that converts the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object (which results from the evaluation of the data-binding expression) to a <see cref="T:System.String" /> that can be displayed by the requesting browser. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="container" /> or <paramref name="xpath" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The object specified by <paramref name="container" /> is not an <see cref="T:System.Xml.XPath.IXPathNavigable" />.</exception>
    </member>
    <member name="M:System.Web.UI.XPathBinder.Eval(System.Object,System.String,System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Evaluates XPath data-binding expressions at run time and formats the result as text to be displayed in the requesting browser, using the <see cref="T:System.Xml.IXmlNamespaceResolver" /> object specified to resolve namespace prefixes in the XPath expression..</summary>
      <returns>A <see cref="T:System.String" /> that results from the evaluation of the data-binding expression and conversion to a string type.</returns>
      <param name="container">The <see cref="T:System.Xml.XPath.IXPathNavigable" /> object reference that the expression is evaluated against. This must be a valid object identifier in the page's specified language.</param>
      <param name="xPath">The XPath query from the <paramref name="container" /> to the property value to be placed in the bound control property.</param>
      <param name="format">A .NET Framework format string, similar to those used by <see cref="M:System.String.Format(System.String,System.Object)" />, that converts the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object (which results from the evaluation of the data-binding expression) to a <see cref="T:System.String" /> that can be displayed by the requesting browser.</param>
      <param name="resolver">The <see cref="T:System.Xml.IXmlNamespaceResolver" /> object used to resolve namespace prefixes in the XPath expression.</param>
    </member>
    <member name="M:System.Web.UI.XPathBinder.Eval(System.Object,System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Evaluates XPath data-binding expressions at run time and formats the result as text to be displayed in the requesting browser, using the <see cref="T:System.Xml.IXmlNamespaceResolver" /> object specified to resolve namespace prefixes in the XPath expression.</summary>
      <returns>A <see cref="T:System.Object" /> that results from the evaluation of the data-binding expression.</returns>
      <param name="container">The <see cref="T:System.Xml.XPath.IXPathNavigable" /> object reference that the expression is evaluated against. This must be a valid object identifier in the page's specified language.</param>
      <param name="xPath">The XPath query from the <paramref name="container" /> to the property value to be placed in the bound control property.</param>
      <param name="resolver">The <see cref="T:System.Xml.IXmlNamespaceResolver" /> object used to resolve namespace prefixes in the XPath expression.</param>
    </member>
    <member name="M:System.Web.UI.XPathBinder.Select(System.Object,System.String)">
      <summary>Uses an XPath data-binding expression at run time to return a list of nodes.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> list of nodes.</returns>
      <param name="container">The <see cref="T:System.Xml.XPath.IXPathNavigable" /> object reference that the expression is evaluated against. This must be a valid object identifier in the page's specified language. </param>
      <param name="xPath">The XPath query that retrieves a list of nodes. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="container" /> or <paramref name="xpath" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The object specified by <paramref name="container" /> is not an <see cref="T:System.Xml.XPath.IXPathNavigable" />. </exception>
      <exception cref="T:System.InvalidOperationException">The current node of the <see cref="T:System.Xml.XPath.XPathNodeIterator" /> does not have an associated XML node.</exception>
    </member>
    <member name="M:System.Web.UI.XPathBinder.Select(System.Object,System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Uses an XPath data-binding expression at run time to return a list of nodes, using the <see cref="T:System.Xml.IXmlNamespaceResolver" /> object specified to resolve namespace prefixes in the XPath expression.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> list of nodes.</returns>
      <param name="container">The <see cref="T:System.Xml.XPath.IXPathNavigable" /> object reference that the expression is evaluated against. This must be a valid object identifier in the page's specified language.</param>
      <param name="xPath">The XPath query that retrieves a list of nodes.</param>
      <param name="resolver">The <see cref="T:System.Xml.IXmlNamespaceResolver" /> object used to resolve namespace prefixes in the XPath expression.</param>
    </member>
    <member name="T:System.Web.UI.Adapters.ControlAdapter">
      <summary>Customizes rendering for the derived control to which the adapter is attached, to modify the default markup or behavior for specific browsers, and is the base class from which all control adapters inherit.</summary>
    </member>
    <member name="M:System.Web.UI.Adapters.ControlAdapter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)">
      <summary>Called prior to the rendering of a control. In a derived adapter class, generates opening tags that are required by a specific target but not needed by HTML browsers.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> containing methods to render the target-specific output. </param>
    </member>
    <member name="P:System.Web.UI.Adapters.ControlAdapter.Browser">
      <summary>Gets a reference to the browser capabilities of the client making the current HTTP request.</summary>
      <returns>An <see cref="T:System.Web.HttpBrowserCapabilities" /> specifying client browser and markup capabilities.</returns>
    </member>
    <member name="P:System.Web.UI.Adapters.ControlAdapter.Control">
      <summary>Gets a reference to the control to which this control adapter is attached.</summary>
      <returns>The <see cref="T:System.Web.UI.Control" /> to which this <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> is attached.</returns>
    </member>
    <member name="M:System.Web.UI.Adapters.ControlAdapter.CreateChildControls">
      <summary>Creates the target-specific child controls for a composite control.</summary>
    </member>
    <member name="M:System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)">
      <summary>Called after the rendering of a control. In a derived adapter class, generates closing tags that are required by a specific target but not needed by HTML browsers.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> containing methods to render the target-specific output. </param>
    </member>
    <member name="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)">
      <summary>Loads adapter control state information that was saved by <see cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState" /> during a previous request to the page where the control associated with this control adapter resides.</summary>
      <param name="state">An <see cref="T:System.Object" /> that contains the adapter's control state information as a <see cref="T:System.Web.UI.StateBag" />. </param>
    </member>
    <member name="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)">
      <summary>Loads adapter view state information that was saved by <see cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState" /> during a previous request to the page where the control associated with this control adapter resides.</summary>
      <param name="state">An <see cref="T:System.Object" /> that contains the adapter view state information as a <see cref="T:System.Web.UI.StateBag" />. </param>
    </member>
    <member name="M:System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)">
      <summary>Overrides the <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /> method for the associated control.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.Adapters.ControlAdapter.OnLoad(System.EventArgs)">
      <summary>Overrides the <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> method for the associated control.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)">
      <summary>Overrides the <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> method for the associated control.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.Adapters.ControlAdapter.OnUnload(System.EventArgs)">
      <summary>Overrides the <see cref="M:System.Web.UI.Control.OnUnload(System.EventArgs)" /> method for the associated control.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="P:System.Web.UI.Adapters.ControlAdapter.Page">
      <summary>Gets a reference to the page where the control associated with this adapter resides.</summary>
      <returns>A <see cref="T:System.Web.UI.Page" /> that provides access to the page instance where the associated control is situated.</returns>
    </member>
    <member name="P:System.Web.UI.Adapters.ControlAdapter.PageAdapter">
      <summary>Gets a reference to the page adapter for the page where the associated control resides.</summary>
      <returns>A <see cref="T:System.Web.UI.Adapters.PageAdapter" /> for the page where the control associated with the current <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> is situated.</returns>
    </member>
    <member name="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Generates the target-specific markup for the control to which the control adapter is attached.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> to use to render the target-specific output. </param>
    </member>
    <member name="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)">
      <summary>Generates the target-specific markup for the child controls in a composite control to which the control adapter is attached.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> to use to render the target-specific output. </param>
    </member>
    <member name="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState">
      <summary>Saves control state information for the control adapter.</summary>
      <returns>An <see cref="T:System.Object" /> that contains the adapter's control state information as a <see cref="T:System.Web.UI.StateBag" />. </returns>
    </member>
    <member name="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState">
      <summary>Saves view state information for the control adapter.</summary>
      <returns>An <see cref="T:System.Object" /> that contains the adapter view state information as a <see cref="T:System.Web.UI.StateBag" />. </returns>
    </member>
    <member name="T:System.Web.UI.Adapters.PageAdapter">
      <summary>Adapts a Web page for a specific browser and provides the base class from which all page adapters inherit, directly or indirectly. </summary>
    </member>
    <member name="M:System.Web.UI.Adapters.PageAdapter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Adapters.PageAdapter" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders">
      <summary>Gets a list of additional HTTP headers by which caching is varied for the Web page to which this derived page adapter is attached.</summary>
      <returns>An <see cref="T:System.Collections.IList" /> that contains a list of HTTP headers; otherwise, null.</returns>
    </member>
    <member name="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams">
      <summary>Gets a list of additional parameters from HTTP GET and POST requests by which caching is varied for the Web page to which this derived page adapter is attached.</summary>
      <returns>An <see cref="T:System.Collections.IList" /> that contains a list of the GET and POST parameters; otherwise, null.</returns>
    </member>
    <member name="P:System.Web.UI.Adapters.PageAdapter.ClientState">
      <summary>Gets an encoded string that contains the view and control states data of the Web page to which this derived page adapter is attached.</summary>
      <returns>An encoded <see cref="T:System.String" /> containing the combined view and control states of the controls on the associated <see cref="T:System.Web.UI.Page" />.</returns>
    </member>
    <member name="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode">
      <summary>Determines whether the Web page is in postback and returns a name/value collection of the postback variables.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of the postback variables, if any; otherwise null. </returns>
    </member>
    <member name="M:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference(System.String)">
      <summary>Returns a DHTML code fragment that the client browser can use to reference the form on the page that was posted.</summary>
      <returns>A <see cref="T:System.String" /> with a reference to the form on the page that was posted.</returns>
      <param name="formId">A <see cref="T:System.String" /> containing the client ID of the form that was posted. </param>
    </member>
    <member name="M:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup(System.String)">
      <summary>Retrieves a collection of radio button controls specified by <paramref name="groupName" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> of <see cref="T:System.Web.UI.WebControls.RadioButton" /> controls that make up <paramref name="groupName" />.</returns>
      <param name="groupName">A <see cref="T:System.String" /> that is the name of the <see cref="T:System.Web.UI.WebControls.RadioButton" /> group to retrieve. </param>
    </member>
    <member name="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister">
      <summary>Returns an object that is used by the Web page to maintain the control and view states.</summary>
      <returns>An object derived from <see cref="T:System.Web.UI.PageStatePersister" /> that supports creating and extracting the combined control and view states for the <see cref="T:System.Web.UI.Page" />.</returns>
    </member>
    <member name="M:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton(System.Web.UI.WebControls.RadioButton)">
      <summary>Adds a radio button control to the collection for a specified radio button group.</summary>
      <param name="radioButton">The <see cref="T:System.Web.UI.WebControls.RadioButton" /> to add to the collection. </param>
    </member>
    <member name="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)">
      <summary>Renders an opening hyperlink tag that includes the target URL to the response stream.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> containing methods to render the target-specific output. </param>
      <param name="targetUrl">The <see cref="T:System.String" /> value holding the target URL of the link. </param>
      <param name="encodeUrl">true to use <see cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" /> to encode the stream output; otherwise, false. </param>
      <param name="softkeyLabel">The <see cref="T:System.String" /> value to use as a soft key label. </param>
    </member>
    <member name="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)">
      <summary>Renders an opening hyperlink tag that includes the target URL and an access key to the response stream.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> containing methods to render the target-specific output. </param>
      <param name="targetUrl">The <see cref="T:System.String" /> value holding the target URL of the link. </param>
      <param name="encodeUrl">true to use <see cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" /> to encode the stream output; otherwise, false. </param>
      <param name="softkeyLabel">The <see cref="T:System.String" /> value to use as a soft key label. </param>
      <param name="accessKey">The <see cref="T:System.String" /> value to assign to the accessKey attribute of the link to create. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessKey" /> is longer than one character.</exception>
    </member>
    <member name="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)">
      <summary>Renders a closing hyperlink tag to the response stream.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that contains methods to render the target-specific output. </param>
    </member>
    <member name="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)">
      <summary>Renders a postback event into the response stream as a hyperlink, including the encoded and possibly encrypted view state, and event target and argument.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> containing methods to render the target-specific output. </param>
      <param name="target">The <see cref="T:System.String" /> value holding the postback event target name. </param>
      <param name="argument">The <see cref="T:System.String" /> value holding the argument to pass to the postback target event. </param>
      <param name="softkeyLabel">The <see cref="T:System.String" /> value to use as a soft key label. </param>
      <param name="text">The <see cref="T:System.String" /> value of the text to display as the link. </param>
    </member>
    <member name="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>Renders a postback event into the response stream as a hyperlink, including the encoded and possibly encrypted view state, an event target and argument, a previous-page parameter, and an access key.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> containing methods to render the target-specific output. </param>
      <param name="target">The <see cref="T:System.String" /> value holding the postback event target name. </param>
      <param name="argument">The <see cref="T:System.String" /> value holding the argument to pass to the postback target event. </param>
      <param name="softkeyLabel">The <see cref="T:System.String" /> value to use as a soft key label. </param>
      <param name="text">The <see cref="T:System.String" /> value of the text to display as the link. </param>
      <param name="postUrl">The <see cref="T:System.String" /> value holding the URL target page of the postback. </param>
      <param name="accessKey">The <see cref="T:System.String" /> value used to assign to the accessKey attribute of the created link. </param>
    </member>
    <member name="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Renders a postback event into the response stream as a hyperlink, including the encoded view state, an event target and argument, a previous-page parameter, and an access key.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> containing methods to render the target-specific output. </param>
      <param name="target">The <see cref="T:System.String" /> value holding the postback event target name. </param>
      <param name="argument">The <see cref="T:System.String" /> value holding the argument to pass to the postback target event. </param>
      <param name="softkeyLabel">The <see cref="T:System.String" /> value to use as a soft key label. </param>
      <param name="text">The <see cref="T:System.String" /> value of the text to display as the link. </param>
      <param name="postUrl">The <see cref="T:System.String" /> value holding the URL target page of the postback. </param>
      <param name="accessKey">The <see cref="T:System.String" /> value to assign to the accessKey attribute of the created link. </param>
      <param name="encode">true to use &amp;amp; as the URL parameter separator; false to use &amp;. </param>
    </member>
    <member name="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)">
      <summary>Transforms text for the target browser.</summary>
      <returns>A <see cref="T:System.String" /> that contains the transformed text.</returns>
      <param name="text">A <see cref="T:System.String" /> that is the text to transform.</param>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlAnchor">
      <summary>Allows programmatic access to the HTML &lt;a&gt; element on the server.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlAnchor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlAnchor.CausesValidation">
      <summary>Gets or sets a value indicating whether validation is performed when the <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor" /> control is clicked. </summary>
      <returns>true if validation is performed when the <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor" /> is clicked; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlAnchor.HRef">
      <summary>Gets or sets the URL target of the link specified in the <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor" /> server control.</summary>
      <returns>The URL target of the link.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlAnchor.Name">
      <summary>Gets or sets the bookmark name defined in the <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor" /> server control.</summary>
      <returns>The bookmark name.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlAnchor.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event and registers client script for generating a postback.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlAnchor.OnServerClick(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.HtmlControls.HtmlAnchor.ServerClick" /> event. This allows you to provide a custom handler for the event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains event data. </param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlAnchor.RaisePostBackEvent(System.String)">
      <summary>Raises events for the <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor" /> control when it posts back to the server. </summary>
      <param name="eventArgument">The argument for the event.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlAnchor.RenderAttributes(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor" /> control's attributes to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that contains the output stream to render on the client.</param>
      <exception cref="T:System.Web.HttpException">The <see cref="P:System.Web.UI.HtmlControls.HtmlAnchor.HRef" /> contains a malformed URL.</exception>
    </member>
    <member name="E:System.Web.UI.HtmlControls.HtmlAnchor.ServerClick">
      <summary>Occurs when the <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor" /> control is clicked.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlAnchor.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)" />.</summary>
      <param name="eventArgument">The event arguments.</param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlAnchor.Target">
      <summary>Gets or sets the name of the browser window or frame that displays the contents of the Web page that is linked to when the <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor" /> control is clicked. </summary>
      <returns>The browser window or frame that displays the contents of the Web page linked to when the <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor" /> is clicked. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlAnchor.Title">
      <summary>Gets or sets the ToolTip text displayed when the mouse pointer is placed over the <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor" /> control.</summary>
      <returns>The text displayed when the mouse pointer is placed over the <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor" />.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlAnchor.ValidationGroup">
      <summary>Gets or sets the group of controls for which the <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor" /> control causes validation when it posts back to the server.</summary>
      <returns>The group of controls for which the <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor" /> causes validation when it posts back to the server. The default is an empty string ("").</returns>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlButton">
      <summary>Allows programmatic access to the HTML &lt;button&gt; tag on the server.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlButton.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlButton.CausesValidation">
      <summary>Gets or sets a value indicating whether validation is performed when the <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> control is clicked.</summary>
      <returns>true if validation is performed when the <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> control is clicked; otherwise, false. The default value is true.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlButton.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event and registers client script for generating a postback.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains event data.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlButton.OnServerClick(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.HtmlControls.HtmlButton.ServerClick" /> event. This allows you to provide a custom handler for the event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlButton.RaisePostBackEvent(System.String)">
      <summary>Raises events for the <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> control when it posts back to the server. </summary>
      <param name="eventArgument">The argument for the event.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlButton.RenderAttributes(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> control's attributes to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that contains the output stream to render on the client.</param>
    </member>
    <member name="E:System.Web.UI.HtmlControls.HtmlButton.ServerClick">
      <summary>Occurs when the user clicks an <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> control on the client Web page.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlButton.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
      <summary>Raises events for the <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> control when it posts back to the server.</summary>
      <param name="eventArgument">The event arguments.</param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlButton.ValidationGroup">
      <summary>Gets or sets the group of controls for which the <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> causes validation when it posts back to the server.</summary>
      <returns>The group of controls for which the <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> control causes validation when it posts back to the server. The default value is an empty string ("") indicating that this property is not set.</returns>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlContainerControl">
      <summary>Serves as the abstract base class for HTML server controls that map to HTML elements that are required to have an opening and a closing tag.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlContainerControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> class using default values.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlContainerControl.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> class using the specified tag name.</summary>
      <param name="tag">A string that specifies the tag name of the control. </param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlContainerControl.CreateControlCollection">
      <returns>A <see cref="T:System.Web.UI.ControlCollection" /> that contains the <see cref="T:System.Web.UI.HtmlControls.HtmlControl" /> child server controls.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml">
      <summary>Gets or sets the content found between the opening and closing tags of the specified HTML server control.</summary>
      <returns>The HTML content between opening and closing tags of an HTML server control.</returns>
      <exception cref="T:System.Web.HttpException">There is more than one HTML server control.- or -The HTML server control is not a <see cref="T:System.Web.UI.LiteralControl" /> or a <see cref="T:System.Web.UI.DataBoundLiteralControl" />. </exception>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText">
      <summary>Gets or sets the text between the opening and closing tags of the specified HTML server control.</summary>
      <returns>The text between the opening and closing tags of an HTML server control.</returns>
      <exception cref="T:System.Web.HttpException">There is more than one HTML server control.- or - The HTML server control is not a <see cref="T:System.Web.UI.LiteralControl" /> or a <see cref="T:System.Web.UI.DataBoundLiteralControl" />. </exception>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlContainerControl.LoadViewState(System.Object)">
      <summary>Restores the <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> control's view state from a previous page request that was saved by the <see cref="M:System.Web.UI.Control.SaveViewState" /> method.</summary>
      <param name="savedState">An <see cref="T:System.Object" /> that represents the control state to be restored.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlContainerControl.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> control to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> content.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlContainerControl.RenderAttributes(System.Web.UI.HtmlTextWriter)">
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the rendered content.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlContainerControl.RenderEndTag(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the closing tag for the <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> control to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the rendered content.</param>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlControl">
      <summary>Defines the methods, properties, and events common to all HTML server controls in the ASP.NET page framework.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlControl" /> class using default values.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlControl.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlControl" /> class using the specified tag.</summary>
      <param name="tag">A string that specifies the tag name of the control. </param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlControl.Attributes">
      <summary>Gets a collection of all attribute name and value pairs expressed on a server control tag within the ASP.NET page.</summary>
      <returns>A <see cref="T:System.Web.UI.AttributeCollection" /> object that contains all attribute name and value pairs expressed on a server control tag within the Web page.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlControl.CreateControlCollection">
      <returns>A <see cref="T:System.Web.UI.ControlCollection" /> that contains the <see cref="T:System.Web.UI.HtmlControls.HtmlControl" /> child server controls.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlControl.Disabled">
      <summary>Gets or sets a value indicating whether the HTML server control is disabled.</summary>
      <returns>true if the control is disabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlControl.GetAttribute(System.String)">
      <summary>Gets the value of the named attribute on the <see cref="T:System.Web.UI.HtmlControls.HtmlControl" /> control.</summary>
      <returns>The value of this attribute on the element, as a <see cref="T:System.String" /> value. If the specified attribute does not exist on this element, returns an empty string ("").</returns>
      <param name="name">The name of the attribute. This argument is case-insensitive.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlControl.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Writes content to render on a client to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter" /> that contains the output stream to render on the client.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.HtmlControls.HtmlControl" /> control's attributes into the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the rendered content.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the opening HTML tag of the control into the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the rendered content.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlControl.SetAttribute(System.String,System.String)">
      <summary>Sets the value of the named attribute on the <see cref="T:System.Web.UI.HtmlControls.HtmlControl" /> control.</summary>
      <param name="name">The name of the attribute to set.</param>
      <param name="value">The value to set the attribute to.</param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlControl.Style">
      <summary>Gets a collection of all cascading style sheet (CSS) properties applied to a specified HTML server control in the ASP.NET file.</summary>
      <returns>A <see cref="T:System.Web.UI.CssStyleCollection" /> object that contains the style properties for the HTML server control.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IAttributeAccessor.GetAttribute(System.String)" />. </summary>
      <returns>The value of this attribute on the element, as a <see cref="T:System.String" /> value. If the specified attribute does not exist on this element, returns an empty string ("").</returns>
      <param name="name">The attribute name.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IAttributeAccessor.SetAttribute(System.String,System.String)" />. </summary>
      <param name="name">The name of the attribute to set.</param>
      <param name="value">The value to set the attribute to.</param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlControl.TagName">
      <summary>Gets the element name of a tag that contains a runat=server attribute and value pair.</summary>
      <returns>The element name of the specified tag.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlControl.ViewStateIgnoresCase">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.HtmlControls.HtmlControl" /> view state is case-sensitive.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlEmptyTagControlBuilder">
      <summary>Interacts with the page parser to build HTML server controls that do not have a body or closing tag. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlEmptyTagControlBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlEmptyTagControlBuilder" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlEmptyTagControlBuilder.HasBody">
      <summary>Indicates that the controls built with the <see cref="T:System.Web.UI.HtmlControls.HtmlEmptyTagControlBuilder" /> control do not have closing tags.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlForm">
      <summary>Provides programmatic access to the HTML &lt;form&gt; element on the server.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlForm.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlForm.Action">
      <summary>Gets or sets the action attribute of the HTML form.</summary>
      <returns>The action attribute of the HTML form. The default value is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlForm.ClientID">
      <summary>Gets the control identifier that is generated by ASP.NET for the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control </summary>
      <returns>The control identifier generated by ASP.NET for the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlForm.CreateControlCollection">
      <summary>Creates a new <see cref="T:System.Web.UI.ControlCollection" /> collection for the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.ControlCollection" /> that contains the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control's child server controls.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton">
      <summary>Gets or sets the child control of the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control that causes postback when the ENTER key is pressed.</summary>
      <returns>The <see cref="P:System.Web.UI.Control.ID" /> of the button control to display as the default button when the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> is loaded. The default value is an empty string ("").</returns>
      <exception cref="T:System.InvalidOperationException">The control referenced as the default button is not of the type <see cref="T:System.Web.UI.WebControls.IButtonControl" />.</exception>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus">
      <summary>Gets or sets the control on the form to display as the control with input focus when the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control is loaded.</summary>
      <returns>The <see cref="P:System.Web.UI.Control.ClientID" /> of the control on the form to display as the control with input focus when the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> is loaded. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlForm.Enctype">
      <summary>Gets or sets the encoding type a browser uses when posting the form's data to the server.</summary>
      <returns>A string that contains the encoding type. The default value is an empty string (""), indicating that the browser's default content type is used.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlForm.Method">
      <summary>Gets or sets a value that indicates how a browser posts form data to the server for processing.</summary>
      <returns>A string that indicates how a browser posts form data to the server. The default value is POST.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlForm.Name">
      <summary>Gets the identifier name for the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control.</summary>
      <returns>A string that contains the identifier name for the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Init" /> event for the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains event data.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlForm.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event for the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="output">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the rendered content.</param>
      <exception cref="T:System.Web.HttpException">The <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control is not rendered without a reference to the <see cref="T:System.Web.UI.Page" /> instance.</exception>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control's attributes to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the rendered content. </param>
      <exception cref="T:System.InvalidOperationException">The control ID set in the <see cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" /> property is not of the type <see cref="T:System.Web.UI.WebControls.IButtonControl" />.</exception>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the child controls of the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the rendered content.</param>
      <exception cref="T:System.Web.HttpException">The Web page has more than one server-side &lt;form&gt; tag.</exception>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the form control content.</param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls">
      <summary>Gets or sets a Boolean value indicating whether to force controls disabled on the client to submit their values, allowing them to preserve their values after the page posts back to the server. </summary>
      <returns>true if controls disabled on the client are forced to submit their values; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlForm.Target">
      <summary>Gets or sets the frame or window in which to render the results of information that is posted to the server.</summary>
      <returns>The browser window or frame that displays the results of the information posted to the server. The default is an empty string (""), which refreshes the window or frame with focus. </returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlForm.UniqueID">
      <summary>Gets the unique programmatic identifier assigned to the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control.</summary>
      <returns>The unique programmatic identifier assigned to the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control.</returns>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlGenericControl">
      <summary>Defines the methods, properties, and events for all HTML server control elements not represented by a specific .NET Framework class.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlGenericControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlGenericControl" /> class with default values.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlGenericControl.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlGenericControl" /> class with the specified tag.</summary>
      <param name="tag">The name of the element for which this instance of the class is created. </param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlGenericControl.TagName">
      <summary>Gets or sets the name of the HTML element represented by the <see cref="T:System.Web.UI.HtmlControls.HtmlGenericControl" /> control.</summary>
      <returns>The tag name of an element.</returns>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlHead">
      <summary>Provides programmatic access to the HTML head element in server code.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlHead.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlHead" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlHead.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlHead" /> class by using the specified tag.</summary>
      <param name="tag">A string that specifies the tag name of the control.</param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlHead.Description">
      <summary>Gets the page description that is contained in the <see cref="T:System.Web.UI.HtmlControls.HtmlHead" /> control.</summary>
      <returns>The page description.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlHead.Keywords">
      <summary>Gets the keywords that are contained in the <see cref="T:System.Web.UI.HtmlControls.HtmlHead" /> control.</summary>
      <returns>The page keywords.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlHead.StyleSheet">
      <summary>Gets an <see cref="T:System.Web.UI.IStyleSheet" /> instance that represents the style rules in the <see cref="T:System.Web.UI.HtmlControls.HtmlHead" /> control.</summary>
      <returns>An object that represents the style rules in the <see cref="T:System.Web.UI.HtmlControls.HtmlHead" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlHead.Title">
      <summary>Gets the page title.</summary>
      <returns>The page title.</returns>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlHeadBuilder">
      <summary>Interacts with the parser to build an <see cref="T:System.Web.UI.HtmlControls.HtmlHead" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlHeadBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlHeadBuilder" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlHeadBuilder.AllowWhitespaceLiterals">
      <summary>Determines whether the literal white space characters in the control must be processed or ignored.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlHeadBuilder.GetChildControlType(System.String,System.Collections.IDictionary)">
      <summary>Obtains the <see cref="T:System.Type" /> for the <see cref="T:System.Web.UI.HtmlControls.HtmlHead" /> control's child controls. </summary>
      <returns>The <see cref="T:System.Type" /> of the specified control's child control.</returns>
      <param name="tagName">The tag name of the child control.</param>
      <param name="attribs">An array of attributes contained in the child control.</param>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlImage">
      <summary>Provides programmatic access for the HTML &lt;img&gt; element on the server.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlImage.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlImage" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlImage.Align">
      <summary>Gets or sets the alignment of the image relative to other Web page elements.</summary>
      <returns>A string that specifies the alignment of the image relative to other Web page elements.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlImage.Alt">
      <summary>Gets or sets the alternative caption the browser displays if an image is unavailable or currently downloading and not yet finished.</summary>
      <returns>A string that contains the alternative caption for the browser to use when the image is unavailable.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlImage.Border">
      <summary>Gets or sets the width of a frame for an image.</summary>
      <returns>The width (in pixels) of a frame for an image.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlImage.Height">
      <summary>Gets or sets the height of the image.</summary>
      <returns>The height of the image.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlImage.RenderAttributes(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.HtmlControls.HtmlImage" /> control's attributes to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that contains the output stream to render on the client.</param>
      <exception cref="T:System.Web.HttpException">The <see cref="P:System.Web.UI.HtmlControls.HtmlImage.Src" /> property contains a malformed URL.</exception>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlImage.Src">
      <summary>Gets or sets the source of the image file to display.</summary>
      <returns>A string that contains the path to an image file to display.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlImage.Width">
      <summary>Gets or sets the width of the image.</summary>
      <returns>The width of the image.</returns>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlInputButton">
      <summary>Allows programmatic access to the HTML &lt;input type= button&gt;, &lt;input type= submit&gt;, and &lt;input type= reset&gt; elements on the server.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputButton.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> class using default values.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputButton.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> class using the specified button type.</summary>
      <param name="type">The input button type. </param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation">
      <summary>Gets or sets a value indicating whether validation is performed when the <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> control is clicked.</summary>
      <returns>true if validation is performed when the <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> control is clicked; otherwise, false. The default value is true.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputButton.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> event and registers client script for generating postback.</summary>
      <param name="e">An <see cref="P:System.Web.UI.Design.ViewEventArgs.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputButton.OnServerClick(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick" /> event. This allows you to handle the event directly.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputButton.RaisePostBackEvent(System.String)">
      <summary>Raises events for the <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> control when it posts back to the server.</summary>
      <param name="eventArgument">The argument for the event.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputButton.RenderAttributes(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the attributes into the specified writer and then calls the <see cref="M:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes(System.Web.UI.HtmlTextWriter)" /> method.</summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the rendered content.</param>
    </member>
    <member name="E:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick">
      <summary>Occurs when an <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> control is clicked on the Web page.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputButton.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
      <summary>Implements the <see cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" /> method by calling the <see cref="M:System.Web.UI.HtmlControls.HtmlInputButton.RaisePostBackEvent(System.String)" /> method.</summary>
      <param name="eventArgument">A <see cref="T:System.String" /> that represents an optional event argument to be passed to the event handler.</param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlInputButton.ValidationGroup">
      <summary>Gets or sets the group of controls for which the <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> causes validation when it posts back to the server.</summary>
      <returns>The group of controls for which the <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> control causes validation when it posts back to the server. The default value is an empty string (""), indicating that this property is not set. </returns>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlInputCheckBox">
      <summary>Allows programmatic access to the HTML &lt;input type= checkbox&gt; element on the server.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputCheckBox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlInputCheckBox" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlInputCheckBox.Checked">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Web.UI.HtmlControls.HtmlInputCheckBox" /> is selected.</summary>
      <returns>true if the <see cref="T:System.Web.UI.HtmlControls.HtmlInputCheckBox" /> control is selected; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputCheckBox.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Processes the postback data for the <see cref="T:System.Web.UI.HtmlControls.HtmlInputCheckBox" /> control. </summary>
      <returns>true if the <see cref="T:System.Web.UI.HtmlControls.HtmlInputCheckBox" /> control's state has changed as a result of the postback event; otherwise, false.</returns>
      <param name="postDataKey">The key identifier for the control.</param>
      <param name="postCollection">The collection of all incoming name values.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputCheckBox.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> event and registers the control as one that requires postback handling.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains event data. </param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputCheckBox.OnServerChange(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.HtmlControls.HtmlInputCheckBox.ServerChange" /> event. This method allows you to handle the event directly.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains event information. </param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputCheckBox.RaisePostDataChangedEvent">
      <summary>Calls the <see cref="M:System.Web.UI.HtmlControls.HtmlInputCheckBox.OnServerChange(System.EventArgs)" /> method to signal the <see cref="T:System.Web.UI.HtmlControls.HtmlInputCheckBox" /> control that the state of the control has changed.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputCheckBox.RenderAttributes(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.HtmlControls.HtmlInputCheckBox" /> control's attributes to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> instance.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> instance that contains the output stream to render on the client.</param>
    </member>
    <member name="E:System.Web.UI.HtmlControls.HtmlInputCheckBox.ServerChange">
      <summary>Occurs when the Web page is submitted to the server and the <see cref="T:System.Web.UI.HtmlControls.HtmlInputCheckBox" /> control changes state from the previous post.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputCheckBox.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Implements the <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> method by calling the <see cref="M:System.Web.UI.HtmlControls.HtmlInputCheckBox.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> method.</summary>
      <returns>true if the <see cref="T:System.Web.UI.HtmlControls.HtmlInputCheckBox" /> control's state has changed as a result of the postback; otherwise, false.</returns>
      <param name="postDataKey">The key identifier for the control.</param>
      <param name="postCollection">The collection of all incoming name values.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputCheckBox.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
      <summary>Implements the <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" /> method by calling the <see cref="M:System.Web.UI.HtmlControls.HtmlInputCheckBox.RaisePostDataChangedEvent" /> method.</summary>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlInputControl">
      <summary>Serves as the abstract base class that defines the methods, properties, and events common to all HTML input controls, such as the &lt;input type=text&gt;, &lt;input type=submit&gt;, and &lt;input type= file&gt; elements.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputControl.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlInputControl" /> class.</summary>
      <param name="type">The type of input control. </param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlInputControl.Name">
      <summary>Gets or sets the unique identifier name for the <see cref="T:System.Web.UI.HtmlControls.HtmlInputControl" /> control.</summary>
      <returns>A string that represents the value of the <see cref="P:System.Web.UI.Control.UniqueID" /> property.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputControl.RenderAttributes(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the attributes of the <see cref="T:System.Web.UI.HtmlControls.HtmlInputControl" /> control to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that contains the output stream to render to the client.</param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlInputControl.Type">
      <summary>Gets the type of an <see cref="T:System.Web.UI.HtmlControls.HtmlInputControl" />.</summary>
      <returns>A string that contains the type of an <see cref="T:System.Web.UI.HtmlControls.HtmlInputControl" />.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlInputControl.Value">
      <summary>Gets or sets the value associated with the <see cref="T:System.Web.UI.HtmlControls.HtmlInputControl" /> control.</summary>
      <returns>The value associated with the <see cref="T:System.Web.UI.HtmlControls.HtmlInputControl" />.</returns>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlInputFile">
      <summary>Allows programmatic access to the HTML &lt;input type= file&gt; element on the server.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputFile.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlInputFile" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlInputFile.Accept">
      <summary>Gets or sets a comma-separated list of MIME encodings used to constrain the file types the user can select.</summary>
      <returns>The comma-separated list of MIME encodings.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputFile.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Processes the postback data for the <see cref="T:System.Web.UI.HtmlControls.HtmlInputFile" /> control.</summary>
      <returns>This method always returns false.</returns>
      <param name="postDataKey">The key identifier for the control.</param>
      <param name="postCollection">The collection of all incoming name values.</param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlInputFile.MaxLength">
      <summary>Gets or sets the maximum length of the file path for the file to upload from the client computer.</summary>
      <returns>The maximum length of the file path. The default value is -1, which indicates that the property has not been set.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputFile.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event for the <see cref="T:System.Web.UI.HtmlControls.HtmlInputFile" /> control. </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains event data. </param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlInputFile.PostedFile">
      <summary>Gets access to the uploaded file specified by a client.</summary>
      <returns>A <see cref="T:System.Web.HttpPostedFile" /> that accesses the file to be uploaded.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputFile.RaisePostDataChangedEvent">
      <summary>Notifies the <see cref="T:System.Web.UI.HtmlControls.HtmlInputFile" /> control that the state of the control has changed.</summary>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlInputFile.Size">
      <summary>Gets or sets the width of the text box in which the file path is entered.</summary>
      <returns>The width of the file-path text box. The default value is -1, which indicates that the property has not been set.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />. </summary>
      <returns>true if the <see cref="T:System.Web.UI.HtmlControls.HtmlInputFile" /> control's state has changed as a result of the postback; otherwise, false.</returns>
      <param name="postDataKey">The key identifier for the control.</param>
      <param name="postCollection">The collection of all incoming name values.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />.</summary>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlInputFile.Value">
      <summary>Gets the full path of the file on the client's computer.</summary>
      <returns>The full path of the client's file.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to assign a value to this property. </exception>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlInputHidden">
      <summary>Allows programmatic access to the HTML &lt;input type=hidden&gt; element on the server.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputHidden.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlInputHidden" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputHidden.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Processes the postback data for the <see cref="T:System.Web.UI.HtmlControls.HtmlInputHidden" /> control.</summary>
      <returns>true if the <see cref="T:System.Web.UI.HtmlControls.HtmlInputHidden" /> control's state has changed as a result of the postback; otherwise, false.</returns>
      <param name="postDataKey">The key identifier for the control.</param>
      <param name="postCollection">The collection of all incoming name values.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputHidden.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains event data.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputHidden.OnServerChange(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.HtmlControls.HtmlInputHidden.ServerChange" /> event. This method allows you to handle the event directly.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains event data. </param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputHidden.RaisePostDataChangedEvent">
      <summary>Calls the <see cref="M:System.Web.UI.HtmlControls.HtmlInputHidden.OnServerChange(System.EventArgs)" /> method to signal the <see cref="T:System.Web.UI.HtmlControls.HtmlInputHidden" /> control that the state of the control has changed.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputHidden.RenderAttributes(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.HtmlControls.HtmlInputHidden" /> control's attributes to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that contains the output stream to render on the client.</param>
    </member>
    <member name="E:System.Web.UI.HtmlControls.HtmlInputHidden.ServerChange">
      <summary>Occurs when the <see cref="P:System.Web.UI.HtmlControls.HtmlInputControl.Value" /> property is changed on the server.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputHidden.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Implements the <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> interface method by calling the <see cref="M:System.Web.UI.HtmlControls.HtmlInputHidden.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> method.</summary>
      <returns>true if the <see cref="T:System.Web.UI.HtmlControls.HtmlInputHidden" /> control's state has changed as a result of the postback; otherwise, false.</returns>
      <param name="postDataKey">The key identifier for the control.</param>
      <param name="postCollection">The collection of all incoming name values.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputHidden.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
      <summary>Implements the <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" /> interface method by calling the <see cref="M:System.Web.UI.HtmlControls.HtmlInputHidden.RaisePostDataChangedEvent" /> method.</summary>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlInputImage">
      <summary>Allows programmatic access to the HTML &lt;input type= image&gt; element on the server.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputImage.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlInputImage.Align">
      <summary>Gets or sets the alignment of the <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> control in relation to other elements on the Web page.</summary>
      <returns>The alignment of the <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> control in relation to other elements on the Web page.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlInputImage.Alt">
      <summary>Gets or sets the alternative text that the browser displays if the image is unavailable or has not been downloaded.</summary>
      <returns>The alternative text for the specified image. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlInputImage.Border">
      <summary>Gets or sets the border width for the <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> control.</summary>
      <returns>The border width, in pixels, for the <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation">
      <summary>Gets or sets a value indicating whether validation is performed when the <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> control is clicked.</summary>
      <returns>true if validation is performed when the <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> control is clicked; otherwise, false. The default value is true.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputImage.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Processes the postback data for the <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> control.</summary>
      <returns>true if the <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> control's state has changed as a result of the postback; otherwise, false.</returns>
      <param name="postDataKey">The key identifier for the control.</param>
      <param name="postCollection">The collection of all incoming name values.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputImage.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputImage.OnServerClick(System.Web.UI.ImageClickEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick" /> event.</summary>
      <param name="e">An <see cref="T:System.Web.UI.ImageClickEventArgs" /> that contains event data. </param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputImage.RaisePostBackEvent(System.String)">
      <summary>Raises events for the <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> control when it posts back to the server.</summary>
      <param name="eventArgument">The argument for the event.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputImage.RaisePostDataChangedEvent">
      <summary>Notifies the <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> control that the state of the control has changed.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputImage.RenderAttributes(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> control's attributes to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that contains the output stream to render on the client.</param>
      <exception cref="T:System.Web.HttpException">The <see cref="P:System.Web.UI.HtmlControls.HtmlInputImage.Src" /> property contains a malformed URL.</exception>
    </member>
    <member name="E:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick">
      <summary>Occurs on the server when the user clicks an <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> control.</summary>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlInputImage.Src">
      <summary>Gets or sets the location of the image file.</summary>
      <returns>The location of the image file. The default value is an empty string ("").</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputImage.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Implements the <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> interface method by calling the <see cref="M:System.Web.UI.HtmlControls.HtmlInputImage.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> method.</summary>
      <returns>true if the <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> control's state has changed as a result of the postback; otherwise, false.</returns>
      <param name="postDataKey">The key identifier for the control.</param>
      <param name="postCollection">The collection of all incoming name values.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputImage.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
      <summary>Implements the <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" /> interface method by calling the <see cref="M:System.Web.UI.HtmlControls.HtmlInputImage.RaisePostDataChangedEvent" /> method.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputImage.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
      <summary>Enables the <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> control to raise events on postback.</summary>
      <param name="eventArgument">The argument for the event.</param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlInputImage.ValidationGroup">
      <summary>Gets or sets the group of controls for which the <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> control causes validation when it posts back to the server.</summary>
      <returns>The group of controls for which the <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> control causes validation when it posts back to the server. The default value is an empty string (""), indicating that this property is not set. </returns>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlInputPassword">
      <summary>Allows programmatic access to the HTML &lt;input type= password&gt; element on the server.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputPassword.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlInputPassword" /> class using default values.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputPassword.RenderAttributes(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the attributes of the <see cref="T:System.Web.UI.HtmlControls.HtmlInputPassword" /> control to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the rendered content.</param>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlInputRadioButton">
      <summary>Allows programmatic access to the HTML &lt;input type= radio&gt; element on the server.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputRadioButton.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlInputRadioButton.Checked">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> control is selected.</summary>
      <returns>true if the <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> control is selected; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputRadioButton.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Processes the postback data for the <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> control.</summary>
      <returns>true if the <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> control's state has changed as a result of the postback; otherwise, false.</returns>
      <param name="postDataKey">The key identifier for the control.</param>
      <param name="postCollection">The collection of all incoming name values.</param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlInputRadioButton.Name">
      <summary>Gets or sets the name of the group that the instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> class is associated with.</summary>
      <returns>The group of check box controls that the instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> class is a member of.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputRadioButton.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event and registers the <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> control as one that requires postback handling.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputRadioButton.OnServerChange(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.HtmlControls.HtmlInputRadioButton.ServerChange" /> event. This allows you to create a custom event handler when the event is raised.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputRadioButton.RaisePostDataChangedEvent">
      <summary>Calls the <see cref="M:System.Web.UI.HtmlControls.HtmlInputRadioButton.OnServerChange(System.EventArgs)" /> method to signal the <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> control that the state of the control has changed.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputRadioButton.RenderAttributes(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> control attributes to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object. </summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the rendered output.</param>
    </member>
    <member name="E:System.Web.UI.HtmlControls.HtmlInputRadioButton.ServerChange">
      <summary>Occurs when the value of the <see cref="P:System.Web.UI.HtmlControls.HtmlInputRadioButton.Checked" /> property of the <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> control changes between posts to the server.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputRadioButton.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Implements the <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> method by calling the <see cref="M:System.Web.UI.HtmlControls.HtmlInputRadioButton.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> method.</summary>
      <returns>true if the <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> control's state has changed as a result of the postback; otherwise, false.</returns>
      <param name="postDataKey">The key identifier for the control.</param>
      <param name="postCollection">The collection of all incoming name values</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputRadioButton.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
      <summary>Implements the <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" /> method by calling the <see cref="M:System.Web.UI.HtmlControls.HtmlInputRadioButton.RaisePostDataChangedEvent" /> method.</summary>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlInputRadioButton.Value">
      <summary>Gets or sets the value associated with the <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> control.</summary>
      <returns>The value associated with the <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> control.</returns>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlInputReset">
      <summary>Allows programmatic access to the HTML &lt;input type=reset&gt; element on the server.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputReset.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlInputReset" /> class using default values.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputReset.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlInputReset" /> class using the specified input type.</summary>
      <param name="type">The input type.</param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlInputReset.CausesValidation">
      <summary>Gets or sets a value that indicates whether validation is performed when the <see cref="T:System.Web.UI.HtmlControls.HtmlInputReset" /> control is clicked. </summary>
      <returns>true if validation is performed when the <see cref="T:System.Web.UI.HtmlControls.HtmlInputReset" /> control is clicked; otherwise, false. The default value is true. </returns>
    </member>
    <member name="E:System.Web.UI.HtmlControls.HtmlInputReset.ServerClick">
      <summary>Occurs when an <see cref="T:System.Web.UI.HtmlControls.HtmlInputReset" /> control is clicked on the Web page. </summary>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlInputReset.ValidationGroup">
      <summary>Gets or sets the group of controls for which the <see cref="T:System.Web.UI.HtmlControls.HtmlInputReset" /> control causes validation when it posts back to the server. </summary>
      <returns>The group of controls for which the <see cref="T:System.Web.UI.HtmlControls.HtmlInputReset" /> control causes validation when it posts back to the server. The default value is an empty string (""), which indicates that this property is not set.</returns>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlInputSubmit">
      <summary>Allows programmatic access to the HTML &lt;input type= submit&gt; element on the server.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputSubmit.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlInputSubmit" /> class using default values.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputSubmit.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlInputSubmit" /> class using the specified type.</summary>
      <param name="type">The input button type. </param>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlInputText">
      <summary>Allows programmatic access to the HTML &lt;input type= text&gt; and &lt;input type= password&gt; elements on the server.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputText.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlInputText" /> class using default values.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputText.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlInputText" /> class using the specified input control type.</summary>
      <param name="type">The type of input control. </param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputText.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Processes the postback data for the <see cref="T:System.Web.UI.HtmlControls.HtmlInputText" /> control. </summary>
      <returns>true if the <see cref="T:System.Web.UI.HtmlControls.HtmlInputText" /> control's state has changed as a result of the postback; otherwise, false.</returns>
      <param name="postDataKey">The key identifier for the control.</param>
      <param name="postCollection">The collection of all incoming name values.</param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlInputText.MaxLength">
      <summary>Gets or sets the maximum number of characters that can be entered in the text box.</summary>
      <returns>The maximum number of characters that can be entered in the text box.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputText.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputText.OnServerChange(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.HtmlControls.HtmlInputText.ServerChange" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains event data. </param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputText.RaisePostDataChangedEvent">
      <summary>Calls the <see cref="M:System.Web.UI.HtmlControls.HtmlInputText.OnServerChange(System.EventArgs)" /> method to signal the <see cref="T:System.Web.UI.HtmlControls.HtmlInputText" /> control that the state of the control has changed.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputText.RenderAttributes(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.HtmlControls.HtmlInputText" /> control's attributes to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that contains the output stream to render on the client.</param>
    </member>
    <member name="E:System.Web.UI.HtmlControls.HtmlInputText.ServerChange">
      <summary>Occurs when the <see cref="P:System.Web.UI.HtmlControls.HtmlInputText.Value" /> property is changed on the server.</summary>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlInputText.Size">
      <summary>Gets or sets the width of the text box.</summary>
      <returns>The width, in characters, of the text box.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputText.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Implements the <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> interface method by calling the <see cref="M:System.Web.UI.HtmlControls.HtmlInputText.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> method.</summary>
      <returns>true if the <see cref="T:System.Web.UI.HtmlControls.HtmlInputText" /> control's state has changed as a result of the postback; otherwise, false.</returns>
      <param name="postDataKey">The key identifier for the control.</param>
      <param name="postCollection">The collection of all incoming name values.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlInputText.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
      <summary>Implements the <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" /> interface method by calling the <see cref="M:System.Web.UI.HtmlControls.HtmlInputText.RaisePostDataChangedEvent" /> method.</summary>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlInputText.Value">
      <summary>Gets or sets the contents of the text box.</summary>
      <returns>The text contained in the text box. The default is an empty string ("").</returns>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlLink">
      <summary>Allows programmatic access to the HTML link element on the server.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlLink.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlLink" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlLink.Href">
      <summary>Gets or sets the URL target of the link specified in the <see cref="T:System.Web.UI.HtmlControls.HtmlLink" /> control. </summary>
      <returns>The URL target of the link.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlLink.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.HtmlControls.HtmlLink" /> control to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object. </summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the rendered content.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlLink.RenderAttributes(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.HtmlControls.HtmlLink" /> control's attributes to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the rendered content.</param>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlMeta">
      <summary>Allows programmatic access to the HTML &lt;meta&gt; tag on the server. </summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlMeta.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlMeta" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlMeta.Content">
      <summary>Gets or sets the metadata property value defined by the <see cref="T:System.Web.UI.HtmlControls.HtmlMeta" /> control.</summary>
      <returns>The metadata property value. </returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlMeta.HttpEquiv">
      <summary>Gets or sets an <see cref="T:System.Web.UI.HtmlControls.HtmlMeta" /> control property that is included in the HTTP response header.</summary>
      <returns>The name of the HTTP response header item. </returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlMeta.Name">
      <summary>Gets or sets the metadata property name defined by the <see cref="T:System.Web.UI.HtmlControls.HtmlMeta" /> control. </summary>
      <returns>The property name. </returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlMeta.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.HtmlControls.HtmlMeta" /> control to the client's browser using the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> used to render the <see cref="T:System.Web.UI.HtmlControls.HtmlMeta" /> control's content on the client's browser.</param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlMeta.Scheme">
      <summary>Gets or sets a scheme attribute used to interpret the metadata property value defined by the <see cref="T:System.Web.UI.HtmlControls.HtmlMeta" /> control.</summary>
      <returns>The scheme attribute. </returns>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlSelect">
      <summary>Allows programmatic access to the HTML &lt;select&gt; element on the server.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlSelect.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlSelect.AddParsedSubObject(System.Object)">
      <summary>Adds a parsed child control to the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control.</summary>
      <param name="obj">The parsed child control to add. </param>
      <exception cref="T:System.Web.HttpException">The child control specified by the <paramref name="obj" /> parameter must be of the type <see cref="T:System.Web.UI.WebControls.ListItem" />.</exception>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlSelect.ClearSelection">
      <summary>Clears the list selection of the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control and sets the <see cref="P:System.Web.UI.WebControls.ListItem.Selected" /> property of all items to false.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlSelect.CreateControlCollection">
      <summary>Creates an <see cref="T:System.Web.UI.EmptyControlCollection" /> object for the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.ControlCollection" /> to contain the current server control's child server controls. </returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember">
      <summary>Gets or sets the set of data to bind to the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control from a <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> property with multiple sets of data.</summary>
      <returns>The set of data to bind to the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control from a <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> with multiple sets of data. The default value is an empty string (""), which indicates the property has not been set.</returns>
      <exception cref="T:System.Web.HttpException">The <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" /> property is set during the data-binding phase of the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control. </exception>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource">
      <summary>Gets or sets the source of information to bind to the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> or <see cref="T:System.ComponentModel.IListSource" /> that contains a collection of values used to supply data to this control. The default value is null.</returns>
      <exception cref="T:System.ArgumentException">The specified data source is not compatible with either <see cref="T:System.Collections.IEnumerable" /> or <see cref="T:System.ComponentModel.IListSource" />, and it is not null. </exception>
      <exception cref="T:System.Web.HttpException">The data source cannot be resolved because a value is specified for both the <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> property and the <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> property. </exception>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID">
      <summary>Gets or sets the <see cref="P:System.Web.UI.Control.ID" /> property of the data source control that the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control should use to retrieve its data source.</summary>
      <returns>The programmatic identifier assigned to the data source control. The default value is an empty string (""), which indicates that the property has not been set.</returns>
      <exception cref="T:System.Web.HttpException">The data source cannot be resolved because a value is specified for both the <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> property and the <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> property. </exception>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlSelect.DataTextField">
      <summary>Gets or sets the field from the data source to bind to the <see cref="P:System.Web.UI.WebControls.ListItem.Text" /> property of each item in the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control.</summary>
      <returns>The field from the data source to bind to the <see cref="P:System.Web.UI.WebControls.ListItem.Text" /> property of each item in the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control. The default value is an empty string (""), which indicates that the property has not been set.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlSelect.DataValueField">
      <summary>Gets or sets the field from the data source to bind to the <see cref="P:System.Web.UI.WebControls.ListItem.Value" /> property of each item in the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control.</summary>
      <returns>The field from the data source to bind to the <see cref="P:System.Web.UI.WebControls.ListItem.Value" /> property of each item in the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control. The default value is an empty string (""), which indicates that the property has not been set.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlSelect.EnsureDataBound">
      <summary>Verifies that the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control requires data binding and that a valid data source control is specified before calling the <see cref="M:System.Web.UI.Control.DataBind" /> method.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlSelect.GetData">
      <summary>Gets an <see cref="T:System.Collections.IEnumerable" /> object that represents the data source that is bound to the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> object. If no data source is specified, a default value of null is returned.</returns>
      <exception cref="T:System.Web.HttpException">The <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> property is not of type <see cref="T:System.Web.UI.IDataSource" />.- or - The <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> property is not of type <see cref="T:System.Web.UI.IHierarchicalDataSource" />.</exception>
      <exception cref="T:System.InvalidOperationException">Both a <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> and a <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> property are defined for the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control.- or -The requested data view cannot be found.</exception>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlSelect.InnerHtml">
      <summary>Gets or sets the content between the opening and closing tags of the control without automatically converting special characters to their equivalent HTML entities. This property is not supported for this control.</summary>
      <returns>The content between the opening and closing tags of the control.</returns>
      <exception cref="T:System.NotSupportedException">An attempt is made to read from or assign a value to this property. </exception>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlSelect.InnerText">
      <summary>Gets or sets the content between the opening and closing tags of the control with automatic conversion of special characters to their equivalent HTML entities. This property is not supported for this control.</summary>
      <returns>The content between the opening and closing tags of the control.</returns>
      <exception cref="T:System.NotSupportedException">An attempt is made to read from or assign a value to this property. </exception>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlSelect.IsBoundUsingDataSourceID">
      <summary>Gets a value indicating whether a <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> property is defined for the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control. </summary>
      <returns>true if a data source control is defined; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlSelect.Items">
      <summary>Gets a collection that contains the items listed in an <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.ListItemCollection" /> that contains the items listed in an <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlSelect.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Processes the postback data for the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control.</summary>
      <returns>true if the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control's state has changed as a result of a postback; otherwise, false.</returns>
      <param name="postDataKey">The key identifier for the control.</param>
      <param name="postCollection">The collection of all incoming name values.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" /> property was set to a value greater than the number of items in the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control or less than -1.</exception>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlSelect.LoadViewState(System.Object)">
      <summary>Restores the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control's view state information from a previous page request that was saved by the <see cref="M:System.Web.UI.HtmlControls.HtmlSelect.SaveViewState" /> method.</summary>
      <param name="savedState">An <see cref="T:System.Object" /> that represents the control state to be restored.</param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlSelect.Multiple">
      <summary>Gets or sets a value indicating whether multiple items can be selected concurrently in the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control.</summary>
      <returns>true if multiple items can be concurrently selected in the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlSelect.Name">
      <summary>Gets or sets the unique identifier name associated with the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control.</summary>
      <returns>The unique identifier name associated with the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlSelect.OnDataBinding(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.DataBinding" /> event of an <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
      <exception cref="T:System.Web.HttpException">The <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> property is not of type <see cref="T:System.Web.UI.IDataSource" />.- or - The <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> property is not of type <see cref="T:System.Web.UI.IHierarchicalDataSource" />.</exception>
      <exception cref="T:System.InvalidOperationException">Both a <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> and a <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> property are defined for the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control.- or -The requested data view cannot be found.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" /> property was set to a value greater than the number of items in the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control or less than -1.</exception>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlSelect.OnDataPropertyChanged">
      <summary>Invoked when the <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />, <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" />, or <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> property is changed.</summary>
      <exception cref="T:System.Web.HttpException">An attempt was made to change the property value during the data-binding phase of the control.</exception>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlSelect.OnDataSourceViewChanged(System.Object,System.EventArgs)">
      <summary>Invoked when the <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />, <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" />, or <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> property is changed.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlSelect.OnInit(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Init" /> event for the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlSelect.OnLoad(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Load" /> event for the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
      <exception cref="T:System.Web.HttpException">The ID specified in the <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> property cannot be found.- or -The control specified in the <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> property is not of the type <see cref="T:System.Web.UI.IDataSource" />. </exception>
      <exception cref="T:System.InvalidOperationException">The data source cannot be resolved because a value is specified for both the <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> property and the <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> property. - or -The requested <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" /> property could not be found.</exception>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlSelect.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event for the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlSelect.OnServerChange(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.HtmlControls.HtmlSelect.ServerChange" /> event of the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control. This allows you to provide a custom handler for the event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlSelect.RaisePostDataChangedEvent">
      <summary>Calls the <see cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnServerChange(System.EventArgs)" /> method to signal the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control that the state of the control has changed.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlSelect.RenderAttributes(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control's attributes to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the rendered content.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlSelect.RenderChildren(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control's child controls to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the rendered content.</param>
      <exception cref="T:System.Web.HttpException">Multiple items were selected but the <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.Multiple" /> property is set to false.</exception>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control needs to bind to its specified data source.</summary>
      <returns>true if the control needs to bind to a data source; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlSelect.SaveViewState">
      <summary>Saves any <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control view state changes that have occurred since the page was posted back to the server.</summary>
      <returns>The <see cref="T:System.Object" /> that contains the changes to the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> view state. If no view state is associated with the object, this method returns a null reference (Nothing in Visual Basic).</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlSelect.Select(System.Int32[])">
      <summary>Selects multiple items of the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control's <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.Items" /> collection.</summary>
      <param name="selectedIndices">An <see cref="T:System.Array" /> of type <see cref="T:System.Int32" /> that contains the items to select.</param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex">
      <summary>Gets or sets the ordinal index of the selected item in an <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control.</summary>
      <returns>The ordinal index of the selected item in an <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control. A value of -1 indicates that no item is selected.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property was set to a value greater than the number of items in the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control or less than -1.</exception>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices">
      <summary>Gets a collection that contains the zero-based indexes of all currently selected items in the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control.</summary>
      <returns>A collection that contains the zero-based indexes of all currently selected items in the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control.</returns>
    </member>
    <member name="E:System.Web.UI.HtmlControls.HtmlSelect.ServerChange">
      <summary>Occurs when the selected items in the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control change between posts to the server.</summary>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlSelect.Size">
      <summary>Gets or sets the height (in rows) of the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control.</summary>
      <returns>The height (in rows) of the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlSelect.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />. </summary>
      <returns>true if the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control's state has changed as a result of a postback; otherwise, false.</returns>
      <param name="postDataKey">The key identifier for the control.</param>
      <param name="postCollection">The collection of all incoming name values.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" /> property was set to a value greater than the number of items in the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control or less than -1.</exception>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlSelect.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />. </summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlSelect.TrackViewState">
      <summary>Tracks view state changes to the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control so the changes can be stored in the control's <see cref="T:System.Web.UI.StateBag" /> object. This object is accessible through the <see cref="P:System.Web.UI.Control.ViewState" /> property.</summary>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlSelect.Value">
      <summary>Gets the value of the selected item in the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control or sets the <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" /> property of the control to the index of the first item in the list with the specified value.</summary>
      <returns>The value of the selected item in the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control. If no item is selected in the control, <see cref="F:System.String.Empty" /> is returned.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.Value" /> property was set to an item greater than the number of items in the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control or less than -1.</exception>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlSelectBuilder">
      <summary>Interacts with the parser to build an <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlSelectBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlSelectBuilder" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlSelectBuilder.AllowWhitespaceLiterals">
      <summary>Determines whether the white space literals in an <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control are to be processed or ignored.</summary>
      <returns>This method always returns false, indicating that white space in the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control is ignored.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlSelectBuilder.GetChildControlType(System.String,System.Collections.IDictionary)">
      <summary>Obtains the <see cref="T:System.Type" /> for the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control's child controls.</summary>
      <returns>The <see cref="T:System.Type" /> of the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control's specified child control.</returns>
      <param name="tagName">The tag name of the child control. </param>
      <param name="attribs">An array of attributes contained in the child control. </param>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlTable">
      <summary>Allows programmatic access on the server to the HTML &lt;table&gt; element.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTable.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTable.Align">
      <summary>Gets or sets the alignment of the <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control in relation to other elements on the Web page.</summary>
      <returns>The alignment of the <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control in relation to other elements on the Web page. The default value is <see cref="F:System.String.Empty" />, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTable.BgColor">
      <summary>Gets or sets the background color of the <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control.</summary>
      <returns>The background color of the <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control. The default value is <see cref="F:System.String.Empty" />, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTable.Border">
      <summary>Gets or sets the width (in pixels) of the border of the <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control.</summary>
      <returns>The width (in pixels) of the border of an <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control. The default is -1, which indicates that the border width is not set.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTable.BorderColor">
      <summary>Gets or sets the border color of the <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control.</summary>
      <returns>The border color of the <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control. The default value is <see cref="F:System.String.Empty" />, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTable.CellPadding">
      <summary>Gets or sets the amount of space (in pixels) between the contents of a cell and the cell's border in the <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control.</summary>
      <returns>The amount of space (in pixels) between the contents of a cell and the cell's border in the <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control. The default value is -1, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTable.CellSpacing">
      <summary>Gets or sets the amount of space (in pixels) between adjacent cells in the <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control.</summary>
      <returns>The amount of space (in pixels) between adjacent cells in the <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control. The default value is -1, which indicates that this property is not set.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTable.CreateControlCollection">
      <summary>Creates a new <see cref="T:System.Web.UI.ControlCollection" /> object for the <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control. </summary>
      <returns>A <see cref="T:System.Web.UI.ControlCollection" /> that contains the <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control's child server controls.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTable.Height">
      <summary>Gets or sets the height of the <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control.</summary>
      <returns>The height of the <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTable.InnerHtml">
      <summary>Gets or sets the content between the opening and closing tags of the control, without automatically converting special characters to their equivalent HTML entities. This property is not supported for this control.</summary>
      <returns>The content between the opening and closing tags of the control.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to read from or assign a value to this property. </exception>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTable.InnerText">
      <summary>Gets or sets the content between the opening and closing tags of the control, with automatic conversion of special characters to their equivalent HTML entities. This property is not supported for this control.</summary>
      <returns>The content between the opening and closing tags of the control.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to read from or assign a value to this property. </exception>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTable.RenderChildren(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control's child controls to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the rendered content. </param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTable.RenderEndTag(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control's end tag.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the rendered content. </param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTable.Rows">
      <summary>Gets an <see cref="T:System.Web.UI.HtmlControls.HtmlTableRowCollection" /> collection that contains all the rows in the <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control.</summary>
      <returns>An <see cref="T:System.Web.UI.HtmlControls.HtmlTableRowCollection" /> that contains all the rows in the <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTable.Width">
      <summary>Gets or sets the width of the <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control.</summary>
      <returns>The width of the <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control.</returns>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlTable.HtmlTableRowControlCollection">
      <summary>Represents a collection of <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> objects that are the rows of an <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control. </summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTable.HtmlTableRowControlCollection.Add(System.Web.UI.Control)">
      <summary>Adds the specified <see cref="T:System.Web.UI.Control" /> object to the collection.</summary>
      <param name="child">The <see cref="T:System.Web.UI.Control" /> to add to the collection.</param>
      <exception cref="T:System.ArgumentException">The added control must be of type <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />.</exception>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTable.HtmlTableRowControlCollection.AddAt(System.Int32,System.Web.UI.Control)">
      <summary>Adds the specified <see cref="T:System.Web.UI.Control" /> object to the collection. The new control is added to the array at the specified index location.</summary>
      <param name="index">The location in the array at which to add the child control. </param>
      <param name="child">The <see cref="T:System.Web.UI.Control" /> to add to the collection. </param>
      <exception cref="T:System.ArgumentException">The added control must be of type <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />. </exception>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlTableCell">
      <summary>Represents the &lt;td&gt; and &lt;th&gt; HTML elements in an <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTableCell.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> class using default values.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTableCell.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> class, using the specified tag name.</summary>
      <param name="tagName">The element name of the tag. </param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTableCell.Align">
      <summary>Gets or sets the horizontal alignment of the content in the cell represented by an instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> class.</summary>
      <returns>The horizontal alignment of the content in the cell represented by an instance of <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />. The default value is <see cref="F:System.String.Empty" />, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTableCell.BgColor">
      <summary>Gets or sets the background color of the cell represented by an instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> class.</summary>
      <returns>The background color of the cell represented by an instance of <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor">
      <summary>Gets or sets the border color of the cell represented by an instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> class.</summary>
      <returns>The border color of the cell represented by an instance of <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan">
      <summary>Gets or sets the number of columns occupied by a cell represented by an instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> class.</summary>
      <returns>The number of columns occupied by the cell represented by an instance of <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />. The default value is -1, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTableCell.Height">
      <summary>Gets or sets the height (in pixels) of the cell represented by an instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> class.</summary>
      <returns>The height (in pixels) of the cell represented by an instance of <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />. The default value is <see cref="F:System.String.Empty" />, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap">
      <summary>Gets or sets a value indicating whether the text in a cell represented by an instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> class automatically continues on the next line when it reaches the end of the cell.</summary>
      <returns>true if the text does not automatically wrap in the cell; otherwise, false. The default value is false.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTableCell.RenderEndTag(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> control's end tag.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the rendered content.</param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan">
      <summary>Gets or sets the number of rows occupied by a cell represented by an instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> class.</summary>
      <returns>The number of rows occupied by a cell represented by an instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> class. The default value is -1, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTableCell.VAlign">
      <summary>Gets or sets the vertical alignment for the content of a cell represented by an instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> class.</summary>
      <returns>The vertical alignment for the content of a cell represented by an instance of <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />. The default value is <see cref="F:System.String.Empty" />, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTableCell.Width">
      <summary>Gets or sets the width (in pixels) of the cell represented by an instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> class.</summary>
      <returns>The width (in pixels) of the cell represented by an instance of <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />. The default value is <see cref="F:System.String.Empty" />, which indicates that this property is not set.</returns>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlTableCellCollection">
      <summary>A collection of <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> objects that represent the cells in a single row of an <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.Add(System.Web.UI.HtmlControls.HtmlTableCell)">
      <summary>Appends the specified <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> object to the end of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> collection.</summary>
      <param name="cell">The <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> to add to the collection. </param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.Clear">
      <summary>Removes all <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> objects from the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> collection.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the items from the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> collection to the specified <see cref="T:System.Array" />, beginning with the specified index in the <see cref="T:System.Array" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />. </param>
      <param name="index">The first index in the specified <see cref="T:System.Array" /> to receive the items. </param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count">
      <summary>Gets the number of <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> objects in the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> collection.</summary>
      <returns>The number of <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> objects in the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />. The default value is 0.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.GetEnumerator">
      <summary>Returns a <see cref="T:System.Collections.IEnumerator" />-implemented object that contains all <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> objects in the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> collection.</summary>
      <returns>A <see cref="T:System.Collections.IEnumerator" />-implemented object that contains all <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> objects in the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert(System.Int32,System.Web.UI.HtmlControls.HtmlTableCell)">
      <summary>Adds the specified <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> object at the specified index location of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> collection.</summary>
      <param name="index">The location in the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> at which to add the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />. </param>
      <param name="cell">The <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> to add to the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />. </param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> collection is read-only.</summary>
      <returns>false for all cases.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> collection is synchronized (thread safe).</summary>
      <returns>false for all cases, which indicates that access to the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> is not synchronized (not thread safe).</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> object at the specified index from the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> collection.</summary>
      <returns>An <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> that represents a cell contained in the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</returns>
      <param name="index">An ordinal index value that specifies the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> to return. </param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.Remove(System.Web.UI.HtmlControls.HtmlTableCell)">
      <summary>Removes the specified <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> object from the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> collection.</summary>
      <param name="cell">The <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> to remove from the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />. </param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> object at the specified index from the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> collection.</summary>
      <param name="index">The index of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> to remove from the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified index is outside the range of index values in the collection. </exception>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.SyncRoot">
      <summary>Gets the object that can be used to synchronize access to the <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> collection.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlTableRow">
      <summary>Represents the &lt;tr&gt; HTML element in an <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTableRow.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTableRow.Align">
      <summary>Gets or sets the horizontal alignment of the content in the cells of a row in an <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control.</summary>
      <returns>The horizontal alignment of the content in the cells of a row in an <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control. The default value is <see cref="F:System.String.Empty" />, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTableRow.BgColor">
      <summary>Gets or sets the background color of the row represented by an instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> class.</summary>
      <returns>The background color of the row represented by an instance of <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTableRow.BorderColor">
      <summary>Gets or sets the border color of the row represented by an instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> class.</summary>
      <returns>The border color of the row represented by an instance of <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells">
      <summary>Gets a collection of <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> objects that represent the cells contained in a row of the <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control.</summary>
      <returns>An <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> that contains the cells of a row in an <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTableRow.CreateControlCollection">
      <summary>Creates a new <see cref="T:System.Web.UI.ControlCollection" /> object for the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.ControlCollection" /> that contains the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> control's child server controls.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTableRow.Height">
      <summary>Gets or sets the height (in pixels) of the row represented by an instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> class.</summary>
      <returns>The height (in pixels) of the row represented by an instance of <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />. The default value is <see cref="F:System.String.Empty" />, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTableRow.InnerHtml">
      <summary>Gets or sets the content between the opening and closing tags of the control without automatically converting special characters to their equivalent HTML entities. This property is not supported for this control.</summary>
      <returns>The content between the opening and closing tags of the control.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to read from or assign a value to this property. </exception>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTableRow.InnerText">
      <summary>Gets or sets the content between the opening and closing tags of the control with automatic conversion of special characters to their equivalent HTML entities. This property is not supported for this control.</summary>
      <returns>The content between the opening and closing tags of the control.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to read from or assign a value to this property. </exception>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTableRow.RenderChildren(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> control's child controls to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> object that receives the rendered content.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTableRow.RenderEndTag(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> control's end tag.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> object that receives the rendered content.</param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTableRow.VAlign">
      <summary>Gets or sets the vertical alignment of the content in the cells of a row in an <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control.</summary>
      <returns>The vertical alignment of the content in the cells of a row in an <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control. The default value is <see cref="F:System.String.Empty" />, which indicates that this property is not set.</returns>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlTableRow.HtmlTableCellControlCollection">
      <summary>Represents a collection of <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> objects that are the cells of an <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> control. </summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTableRow.HtmlTableCellControlCollection.Add(System.Web.UI.Control)">
      <summary>Adds the specified <see cref="T:System.Web.UI.Control" /> object to the collection.</summary>
      <param name="child">The <see cref="T:System.Web.UI.Control" /> to add to the collection.</param>
      <exception cref="T:System.ArgumentException">The added control must be of type <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />.</exception>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTableRow.HtmlTableCellControlCollection.AddAt(System.Int32,System.Web.UI.Control)">
      <summary>Adds the specified <see cref="T:System.Web.UI.Control" /> object to the collection at the specified index location.</summary>
      <param name="index">The location in the array at which to add the child control. </param>
      <param name="child">The <see cref="T:System.Web.UI.Control" /> to add to the collection. </param>
      <exception cref="T:System.ArgumentException">The added control must be of type <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />.</exception>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlTableRowCollection">
      <summary>A collection of <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> objects that represent the rows of an <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> control. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTableRowCollection.Add(System.Web.UI.HtmlControls.HtmlTableRow)">
      <summary>Appends the specified <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> object to the end of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRowCollection" /> collection.</summary>
      <param name="row">The <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> to add to the collection. </param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTableRowCollection.Clear">
      <summary>Removes all <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> objects from the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRowCollection" /> collection.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTableRowCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the items from the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRowCollection" /> collection to the specified <see cref="T:System.Array" /> object, starting at the specified index in the array.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRowCollection" />. </param>
      <param name="index">The first index in the specified array to receive the items. </param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTableRowCollection.Count">
      <summary>Gets the number of <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> objects in the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRowCollection" /> collection.</summary>
      <returns>The number of <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> objects in the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRowCollection" />. The default value is 0.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTableRowCollection.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" />-implemented object that contains all <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> objects in the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRowCollection" /> collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" />-implemented object that contains all <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> objects in the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRowCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTableRowCollection.Insert(System.Int32,System.Web.UI.HtmlControls.HtmlTableRow)">
      <summary>Adds an <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> object to the specified location in the collection.</summary>
      <param name="index">The location in the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRowCollection" /> at which to add the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />. </param>
      <param name="row">The <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> to add to the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRowCollection" />. </param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTableRowCollection.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRowCollection" /> collection is read-only.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTableRowCollection.IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRowCollection" /> collection is synchronized (thread safe).</summary>
      <returns>false in all cases, which indicates that access to the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRowCollection" /> is not synchronized (not thread safe).</returns>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTableRowCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> object at the specified index from the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRowCollection" /> collection.</summary>
      <returns>An <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> that represents a row contained in the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRowCollection" />.</returns>
      <param name="index">An ordinal index value that specifies the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> to return. </param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTableRowCollection.Remove(System.Web.UI.HtmlControls.HtmlTableRow)">
      <summary>Removes the specified <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> object from the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRowCollection" /> collection.</summary>
      <param name="row">The <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> to remove from the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRowCollection" />. </param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTableRowCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> object at the specified index from the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRowCollection" /> collection.</summary>
      <param name="index">The index of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> to remove from the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRowCollection" />. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified index is outside the range of index values in the collection. </exception>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTableRowCollection.SyncRoot">
      <summary>Gets the object that can be used to synchronize access to the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRowCollection" /> collection.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlTextArea">
      <summary>Allows programmatic access to the &lt;textarea&gt; HTML element on the server.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTextArea.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTextArea.AddParsedSubObject(System.Object)">
      <summary>Notifies the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control that an object was parsed and adds the object to the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control's <see cref="T:System.Web.UI.ControlCollection" /> object. </summary>
      <param name="obj">An <see cref="T:System.Object" /> that represents the parsed element. </param>
      <exception cref="T:System.Web.HttpException">The object specified by the <paramref name="obj" /> parameter can only be of the type <see cref="T:System.Web.UI.LiteralControl" /> or <see cref="T:System.Web.UI.DataBoundLiteralControl" />.</exception>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTextArea.Cols">
      <summary>Gets or sets the width (in characters) of the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control.</summary>
      <returns>The width (in characters) of the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control. The default value is -1, which indicates that this property is not set.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTextArea.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Processes the postback data for the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control.</summary>
      <returns>true if the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control's state has changed as a result of the postback; otherwise, false.</returns>
      <param name="postDataKey">The key identifier for the control.</param>
      <param name="postCollection">The collection of all incoming name values.</param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTextArea.Name">
      <summary>Gets or sets the unique identifier name for the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control.</summary>
      <returns>A string that represents the value of the <see cref="P:System.Web.UI.Control.UniqueID" /> property.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTextArea.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTextArea.OnServerChange(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.HtmlControls.HtmlTextArea.ServerChange" /> event of the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control. This allows you to provide a custom handler for the event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTextArea.RaisePostDataChangedEvent">
      <summary>Calls the <see cref="M:System.Web.UI.HtmlControls.HtmlTextArea.OnServerChange(System.EventArgs)" /> method to signal the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control that the state of the control has changed.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTextArea.RenderAttributes(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control's attributes to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the rendered content.</param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTextArea.Rows">
      <summary>Gets or sets the height (in characters) of the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control.</summary>
      <returns>The height (in characters) of the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control. The default value is -1, which indicates that this property is not set.</returns>
    </member>
    <member name="E:System.Web.UI.HtmlControls.HtmlTextArea.ServerChange">
      <summary>Occurs when the content of the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control changes between posts to the server.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTextArea.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />. </summary>
      <returns>true if the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control's state has changed as a result of postback; otherwise, false.</returns>
      <param name="postDataKey">The key identifier for the control.</param>
      <param name="postCollection">The collection of all incoming name values.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTextArea.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />.</summary>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTextArea.Value">
      <summary>Gets or sets the text entered in the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control.</summary>
      <returns>The text entered in the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control. The default value is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="T:System.Web.UI.HtmlControls.HtmlTitle">
      <summary>Allows programmatic access to the HTML &lt;title&gt; element on the server.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTitle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlTitle" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTitle.AddParsedSubObject(System.Object)">
      <summary>Notifies the <see cref="T:System.Web.UI.HtmlControls.HtmlTitle" /> control that an XML or HTML element was parsed and adds that element to the <see cref="T:System.Web.UI.ControlCollection" /> collection of the control.</summary>
      <param name="obj">An <see cref="T:System.Object" /> that represents the parsed element.</param>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTitle.CreateControlCollection">
      <summary>Creates a new <see cref="T:System.Web.UI.ControlCollection" /> collection for the <see cref="T:System.Web.UI.HtmlControls.HtmlTitle" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.ControlCollection" /> object to contain the current server control's child server controls.</returns>
    </member>
    <member name="M:System.Web.UI.HtmlControls.HtmlTitle.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.HtmlControls.HtmlTitle" /> control to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter" /> that contains the output stream to render on the client.</param>
    </member>
    <member name="P:System.Web.UI.HtmlControls.HtmlTitle.Text">
      <summary>Gets or sets the text of the HTML &lt;title&gt; element.</summary>
      <returns>The text of the HTML &lt;title&gt; element. The default value is an empty string ("").</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.AccessDataSource">
      <summary>Represents a Microsoft Access database for use with data-bound controls.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.AccessDataSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.AccessDataSource.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> class with the specified data file path and Select command.</summary>
      <param name="dataFile">The location of the Access .mdb file. The location can be relative to the current Web form's folder, an absolute physical path, or a virtual path.</param>
      <param name="selectCommand">The SQL query used to retrieve data from the Access database. If the SQL query is a parameterized SQL string, add <see cref="T:System.Web.UI.WebControls.Parameter" /> objects to the <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataFile" /> is null or an empty string.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.AccessDataSource.ConnectionString">
      <summary>Gets the connection string that is used to connect to the Microsoft Access database.</summary>
      <returns>The OLE DB connection string that the <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> control uses to connect to an Access database, through the <see cref="N:System.Data.OleDb" /> .NET data provider.</returns>
      <exception cref="T:System.InvalidOperationException">An attempt was made to set the <see cref="P:System.Web.UI.WebControls.AccessDataSource.ConnectionString" /> property.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.AccessDataSource.CreateDataSourceView(System.String)">
      <summary>Creates a data source view object that is associated with the data source control.</summary>
      <returns>An <see cref="T:System.Web.UI.WebControls.AccessDataSourceView" /> object that is associated with the <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> instance.</returns>
      <param name="viewName">The name of the data source view.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.AccessDataSource.DataFile">
      <summary>Gets or sets the location of the Microsoft Access .mdb file.</summary>
      <returns>The location of the Access .mdb file. Absolute, relative, and virtual paths are supported.</returns>
      <exception cref="T:System.ArgumentException">An invalid path was given.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.AccessDataSource.GetDbProviderFactory">
      <summary>Retrieves a <see cref="T:System.Data.Common.DbProviderFactory" /> object that is associated with the .NET data provider that is identified by the <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" /> property.</summary>
      <returns>An <see cref="T:System.Data.OleDb.OleDbFactory" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.AccessDataSource.ProviderName">
      <summary>Gets the name of the .NET data provider that the <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> control uses to connect to a Microsoft Access database.</summary>
      <returns>The string "System.Data.OleDb".</returns>
      <exception cref="T:System.InvalidOperationException">An attempt was made to set the <see cref="P:System.Web.UI.WebControls.AccessDataSource.ProviderName" /> property. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.AccessDataSource.SqlCacheDependency">
      <summary>The <see cref="P:System.Web.UI.WebControls.AccessDataSource.SqlCacheDependency" /> property overrides the <see cref="P:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency" /> property.</summary>
      <returns>Throws a <see cref="T:System.NotSupportedException" />, in all cases.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to get or set the <see cref="P:System.Web.UI.WebControls.AccessDataSource.SqlCacheDependency" />  property.</exception>
    </member>
    <member name="T:System.Web.UI.WebControls.AccessDataSourceView">
      <summary>Supports the <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> control and provides an interface for data-bound controls to perform data retrieval using Structured Query Language (SQL) against a Microsoft Access database.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.AccessDataSourceView.#ctor(System.Web.UI.WebControls.AccessDataSource,System.String,System.Web.HttpContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.AccessDataSourceView" /> class setting the specified <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> control as the owner of the current view.</summary>
      <param name="owner">The data source control with which the <see cref="T:System.Web.UI.WebControls.AccessDataSourceView" /> is associated. </param>
      <param name="name">A unique name for the data source view, within the scope of the data source control that owns it. </param>
      <param name="context">The current <see cref="T:System.Web.HttpContext" />. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.AccessDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
      <summary>Retrieves data from the underlying data storage using the SQL string in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> property and any parameters in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> of data rows.</returns>
      <param name="arguments">A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> that is used to request operations on the data beyond basic data retrieval.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.WebControls.AccessDataSource.DataFile" /> property is null or an empty string ("").</exception>
      <exception cref="T:System.NotSupportedException">The <paramref name="arguments" /> passed to the <see cref="M:System.Web.UI.WebControls.AccessDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.</exception>
    </member>
    <member name="T:System.Web.UI.WebControls.AdCreatedEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.AdRotator.AdCreated" /> event of the <see cref="T:System.Web.UI.WebControls.AdRotator" /> control. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.AdCreatedEventArgs.#ctor(System.Collections.IDictionary)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.AdCreatedEventArgs" /> class.</summary>
      <param name="adProperties">A <see cref="T:System.Collections.IDictionary" /> containing the advertisement properties from the XML file. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.AdCreatedEventArgs.AdProperties">
      <summary>Gets a <see cref="T:System.Collections.IDictionary" /> object that contains all the advertisement properties for the currently displayed advertisement.</summary>
      <returns>A <see cref="T:System.Collections.IDictionary" /> that contains a list of advertisement properties for the currently displayed advertisement. The default value is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.AdCreatedEventArgs.AlternateText">
      <summary>Gets or sets the alternate text displayed in the <see cref="T:System.Web.UI.WebControls.AdRotator" /> control when the advertisement image is unavailable. Browsers that support the ToolTips feature display this text as a ToolTip for the advertisement.</summary>
      <returns>The text displayed in place of the advertisement image if the image is unavailable. The default value is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.AdCreatedEventArgs.ImageUrl">
      <summary>Gets or sets the URL of an image to display in the <see cref="T:System.Web.UI.WebControls.AdRotator" /> control.</summary>
      <returns>The URL of an image to display in the <see cref="T:System.Web.UI.WebControls.AdRotator" /> control. The default value is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.AdCreatedEventArgs.NavigateUrl">
      <summary>Gets or sets the Web page to display when the <see cref="T:System.Web.UI.WebControls.AdRotator" /> control is clicked.</summary>
      <returns>The Web page to display when the <see cref="T:System.Web.UI.WebControls.AdRotator" /> control is clicked. The default value is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.AdCreatedEventHandler">
      <summary>Represents the method that handles the <see cref="E:System.Web.UI.WebControls.AdRotator.AdCreated" /> event of an <see cref="T:System.Web.UI.WebControls.AdRotator" /> control.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">An <see cref="T:System.Web.UI.WebControls.AdCreatedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.AdRotator">
      <summary>Displays an advertisement banner on a Web page.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.AdRotator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.AdRotator" /> class.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.AdRotator.AdCreated">
      <summary>Occurs once per round trip to the server after the creation of the control, but before the page is rendered.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.AdRotator.AdvertisementFile">
      <summary>Gets or sets the path to an XML file that contains advertisement information.</summary>
      <returns>The location of an XML file containing advertisement information. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.AdRotator.AlternateTextField">
      <summary>Gets or sets a custom data field to use in place of the AlternateText attribute for an advertisement.</summary>
      <returns>The name that identifies the field where the alternate text for an advertisement is stored. The default value is "AlternateText."</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.AdRotator.Font">
      <summary>Gets the font properties associated with the advertisement banner control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.FontInfo" /> object that represents the font properties of the control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.AdRotator.ImageUrlField">
      <summary>Gets or sets a custom data field to use in place of the ImageUrl attribute for an advertisement.</summary>
      <returns>The name that identifies the field where the URL for the image displayed for an advertisement is stored. The default value is "ImageUrl."</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.AdRotator.KeywordFilter">
      <summary>Gets or sets a category keyword to filter for specific types of advertisements in the XML advertisement file.</summary>
      <returns>The keyword to filter for specific types of advertisements in the XML advertisement file. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.AdRotator.NavigateUrlField">
      <summary>Gets or sets a custom data field to use in place of the NavigateUrl attribute for an advertisement.</summary>
      <returns>The name that identifies the field containing the URL for the page to navigate to when the <see cref="T:System.Web.UI.WebControls.AdRotator" /> control is clicked. The default value is "NavigateUrl."</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.AdRotator.OnAdCreated(System.Web.UI.WebControls.AdCreatedEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.AdRotator.AdCreated" /> event for the <see cref="T:System.Web.UI.WebControls.AdRotator" /> control.</summary>
      <param name="e">An <see cref="T:System.Web.UI.WebControls.AdCreatedEventArgs" /> that contains event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.AdRotator.OnInit(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Init" /> event.</summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.AdRotator.OnPreRender(System.EventArgs)">
      <summary>Gets the advertisement information for rendering by looking up the file data or calling the user event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.AdRotator.PerformDataBinding(System.Collections.IEnumerable)">
      <summary>Binds the specified data source to the <see cref="T:System.Web.UI.WebControls.AdRotator" /> control.</summary>
      <param name="data">An object that represents the data source; the object must implement the <see cref="T:System.Collections.IEnumerable" /> interface.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.AdRotator.PerformSelect">
      <summary>Retrieves the advertisement data from the associated data source.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.AdRotator.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Displays the <see cref="T:System.Web.UI.WebControls.AdRotator" /> control on the client.</summary>
      <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter" /> that contains the output stream to render on the client. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.AdRotator.TagKey">
      <summary>Gets the HTML tag for the <see cref="T:System.Web.UI.WebControls.AdRotator" /> control. </summary>
      <returns>An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value representing the HTML tag for an <see cref="T:System.Web.UI.WebControls.AdRotator" /> control. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.AdRotator.Target">
      <summa