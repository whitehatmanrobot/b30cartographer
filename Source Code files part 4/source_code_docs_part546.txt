 is an array. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBack">
      <summary>Represents a backspace character for print and display functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBinaryCompare">
      <summary>Specifies that a binary comparison should be performed when comparison functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBoolean">
      <summary>Indicates that the type of a variant object is Boolean. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbByte">
      <summary>Indicates that the type of a variant object is Byte. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCancel">
      <summary>Indicates that the Cancel button was clicked in a message box. Returned by the MsgBox function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCr">
      <summary>Represents a carriage-return character for print and display functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCritical">
      <summary>Indicates that the critical message icon will be displayed when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCrLf">
      <summary>Represents a carriage-return character combined with a linefeed character for print and display functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCurrency">
      <summary>Indicates that the type of a variant object is Currency. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDate">
      <summary>Indicates that the type of a variant object is Date. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDecimal">
      <summary>Indicates that the type of a variant object is Decimal. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton1">
      <summary>Indicates that the leftmost button is selected as the default button when the message box appears.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton2">
      <summary>Indicates that the second button from the left is selected as the default button when the message box appears.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton3">
      <summary>Indicates that the third button from the left is selected as the default button when the message box appears.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDirectory">
      <summary>Indicates that the file is a directory or folder for file-access functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDouble">
      <summary>Indicates that the type of a variant object is Double. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbEmpty">
      <summary>Indicates that the type of a variant object is Empty. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbExclamation">
      <summary>Indicates that the exclamation icon will be displayed when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFalse">
      <summary>Indicates that a Boolean value of False should be used when number-formatting functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFourDays">
      <summary>Indicates that the first week of the year that has at least four days should be used when date-related functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFullWeek">
      <summary>Indicates that the first full week of the year should be used when date-related functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstJan1">
      <summary>Indicates that the week of the year in which January 1 occurs should be used when date-related functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFormFeed">
      <summary>Represents a form-feed character for print functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFriday">
      <summary>Specifies that Friday should be used as the first day of the week when date-related functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGeneralDate">
      <summary>Indicates that the general date format for the current culture should be used when the FormatDateTime function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGet">
      <summary>Specifies that a property value should be retrieved when the CallByName function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHidden">
      <summary>Indicates that the file is a hidden file for file-access functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHide">
      <summary>Indicates that the window style is hidden for the invoked program when the Shell function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHiragana">
      <summary>Indicates Hiragana characters should be converted to Katakana characters when the StrConv function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbIgnore">
      <summary>Indicates that the Ignore button was clicked in a message box. Returned by the MsgBox function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInformation">
      <summary>Indicates that the information icon will display when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInteger">
      <summary>Indicates that the type of a variant object is Integer. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbKatakana">
      <summary>Indicates that Katakana characters should be converted to Hiragana characters when the StrConv function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLet">
      <summary>Indicates that a property value should be set to an object instance when the CallByName function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLf">
      <summary>Represents a linefeed character for print and display functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLinguisticCasing">
      <summary>Indicates that characters should be converted to use linguistic rules for casing instead of file system rules for casing to when the StrConv function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLong">
      <summary>Indicates the type of a variant object is Long. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongDate">
      <summary>Indicates that the long date format for the current culture should be used when the FormatDateTime function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongTime">
      <summary>Indicates that the long time format for the current culture should be used when the FormatDateTime function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLowerCase">
      <summary>Indicates that characters should be converted to lowercase when the StrConv function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMaximizedFocus">
      <summary>Indicates that the window style is maximized with focus for the invoked program when the Shell function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMethod">
      <summary>Specifies that a method should be called when the CallByName function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedFocus">
      <summary>Indicates that the window style is minimized with focus for the invoked program when the Shell function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedNoFocus">
      <summary>Indicates that the window style is minimized without focus for the invoked program when the Shell function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMonday">
      <summary>Specifies that Monday should be used as the first day of the week when date-related functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxHelp">
      <summary>Indicates that the Help button will be displayed when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRight">
      <summary>Indicates that text will be right-aligned when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRtlReading">
      <summary>Indicates that right-to-left reading text (Hebrew and Arabic systems) will be displayed when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxSetForeground">
      <summary>Indicates that the message box will display in the foreground when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNarrow">
      <summary>Indicates that wide (double-byte) characters should be converted to narrow (single-byte) characters when the StrConv function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNewLine">
      <summary>Represents a newline character for print and display functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNo">
      <summary>Indicates that the No button was clicked in a message box. Returned by the MsgBox function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormal">
      <summary>Indicates that the file is a normal file for file-access functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalFocus">
      <summary>Indicates that the window style is normal with focus for the invoked program when the Shell function is called. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalNoFocus">
      <summary>Indicates that the window style is normal without focus for the invoked program when the Shell function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNull">
      <summary>Indicates that the type of a variant object is Nothing. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullChar">
      <summary>Represents a null character for print and display functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullString">
      <summary>Represents a zero-length string for print and display functions, and for calling external procedures.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObject">
      <summary>Indicates that the type of a variant object is Object. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObjectError">
      <summary>Represents the object error number. User-defined error numbers should be greater than this value.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOK">
      <summary>Indicates that the OK button was clicked in a message box. Returned by the MsgBox function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKCancel">
      <summary>Indicates that the OK and Cancel buttons will be displayed when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKOnly">
      <summary>Indicates that only the OK button will be displayed when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbProperCase">
      <summary>Indicates that the first letter of every word in a string should be converted to uppercase and the remaining characters to lowercase when the StrConv function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbQuestion">
      <summary>Indicates that the question icon will be displayed when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbReadOnly">
      <summary>Indicates that the file is a read-only file for file-access functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetry">
      <summary>Indicates that the Retry button was clicked in a message box. Returned by the MsgBox function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetryCancel">
      <summary>Indicates that the Retry and Cancel buttons will be displayed when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSaturday">
      <summary>Specifies that Saturday should be used as the first day of the week when date-related functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSet">
      <summary>Indicates that a property value should be set when the CallByName function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortDate">
      <summary>Indicates that the short-date format for the current culture should be used when the FormatDateTime function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortTime">
      <summary>Indicates that the short-time format for the current culture should be used when the FormatDateTime function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSimplifiedChinese">
      <summary>Indicates that characters should be converted to Simplified Chinese when the StrConv function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSingle">
      <summary>Indicates that the type of a variant object is Single. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbString">
      <summary>Indicates that the type of a variant object is String. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSunday">
      <summary>Specifies that Sunday should be used as the first day of the week when date-related functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystem">
      <summary>Indicates that the file is a system file for file-access functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystemModal">
      <summary>Indicates that the message box will be displayed as a modal dialog box when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTab">
      <summary>Represents a tab character for print and display functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTextCompare">
      <summary>Indicates that a text comparison should be performed when comparison functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbThursday">
      <summary>Specifies that Thursday should be used as the first day of the week when date-related functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTraditionalChinese">
      <summary>Indicates that characters should be converted to Traditional Chinese when the StrConv function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTrue">
      <summary>Indicates that a Boolean value of True should be used when number-formatting functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTuesday">
      <summary>Specifies that Tuesday should be used as the first day of the week when date-related functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUpperCase">
      <summary>Indicates that characters should be converted to uppercase when the StrConv function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseDefault">
      <summary>Indicates that the default Boolean value should be used when number-formatting functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUserDefinedType">
      <summary>Indicates that the type of a variant object is a user-defined type. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystem">
      <summary>Indicates that the week specified by your system as the first week of the year should be used when date-related functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystemDayOfWeek">
      <summary>Indicates that the day specified by your system as the first day of the week should be used when date-related functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVariant">
      <summary>Indicates that the type of a variant object is Variant. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVerticalTab">
      <summary>Represents a carriage-return character for print functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVolume">
      <summary>Indicates the volume label file attribute for file-access functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWednesday">
      <summary>Specifies that Wednesday should be used as the first day of the week when date-related functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWide">
      <summary>Indicates that narrow (single-byte) characters should be converted to wide (double-byte) characters when the StrConv function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYes">
      <summary>Indicates that the Yes button was clicked in a message box. Returned by the MsgBox function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNo">
      <summary>Indicates that the Yes and No buttons will be displayed when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNoCancel">
      <summary>Indicates that the Yes, No, and Cancel buttons will be displayed when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.ControlChars">
      <summary>The ControlChars module contains constants used as control characters. These constants can be used anywhere in your code.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ControlChars.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ControlChars" /> class. </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Back">
      <summary>Represents a backspace character (vbBack).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Cr">
      <summary>Represents a carriage return character (vbCr).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.CrLf">
      <summary>Represents a carriage return/linefeed character combination (vbCrLf).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.FormFeed">
      <summary>Represents a form feed character for print functions (vbFormFeed).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Lf">
      <summary>Represents a line feed character (vbLf).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NewLine">
      <summary>Represents a new line character (vbNewLine).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NullChar">
      <summary>Represents a null character (vbNullChar).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Quote">
      <summary>Represents a double-quote character.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Tab">
      <summary>Represents a tab character (vbTab).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.VerticalTab">
      <summary>Represents a vertical tab character (vbVerticalTab).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Conversion">
      <summary>The Conversion module contains the procedures used to perform various conversion operations.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic``1(System.Object)">
      <summary>Converts an object to the specified generic type.</summary>
      <returns>An object statically typed as the requested generic type.</returns>
      <param name="Expression">The object to convert.</param>
      <typeparam name="TargetType">The type to which to convert the object.</typeparam>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic(System.Object,System.Type)">
      <summary>Converts an object to the specified type.</summary>
      <returns>An object whose type at run time is the requested target type.</returns>
      <param name="Expression">The object to convert.</param>
      <param name="TargetType">The type to which to convert the object.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString">
      <summary>Returns the error message that corresponds to a given error number.</summary>
      <returns>The error message that corresponds to the most recent run-time error.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="ErrorNumber" /> is out of range.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString(System.Int32)">
      <summary>Returns the error message that corresponds to a given error number.</summary>
      <returns>The error message that corresponds to a given error number.</returns>
      <param name="ErrorNumber">Optional. Any valid error number.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="ErrorNumber" /> is out of range.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Decimal)">
      <summary>Return the integer portion of a number.</summary>
      <returns>Return the integer portion of a number.</returns>
      <param name="Number">Required. A number of type Double or any valid numeric expression. If <paramref name="Number" /> contains Nothing, Nothing is returned.</param>
      <exception cref="T:System.ArgumentNullException">Number is not specified.</exception>
      <exception cref="T:System.ArgumentException">Number is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Double)">
      <summary>Return the integer portion of a number.</summary>
      <returns>Return the integer portion of a number.</returns>
      <param name="Number">Required. A number of type Double or any valid numeric expression. If <paramref name="Number" /> contains Nothing, Nothing is returned.</param>
      <exception cref="T:System.ArgumentNullException">Number is not specified.</exception>
      <exception cref="T:System.ArgumentException">Number is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int16)">
      <summary>Return the integer portion of a number.</summary>
      <returns>Return the integer portion of a number.</returns>
      <param name="Number">Required. A number of type Double or any valid numeric expression. If <paramref name="Number" /> contains Nothing, Nothing is returned.</param>
      <exception cref="T:System.ArgumentNullException">Number is not specified.</exception>
      <exception cref="T:System.ArgumentException">Number is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int32)">
      <summary>Return the integer portion of a number.</summary>
      <returns>Return the integer portion of a number.</returns>
      <param name="Number">Required. A number of type Double or any valid numeric expression. If <paramref name="Number" /> contains Nothing, Nothing is returned.</param>
      <exception cref="T:System.ArgumentNullException">Number is not specified.</exception>
      <exception cref="T:System.ArgumentException">Number is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int64)">
      <summary>Return the integer portion of a number.</summary>
      <returns>Return the integer portion of a number.</returns>
      <param name="Number">Required. A number of type Double or any valid numeric expression. If <paramref name="Number" /> contains Nothing, Nothing is returned.</param>
      <exception cref="T:System.ArgumentNullException">Number is not specified.</exception>
      <exception cref="T:System.ArgumentException">Number is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Object)">
      <summary>Return the integer portion of a number.</summary>
      <returns>Return the integer portion of a number.</returns>
      <param name="Number">Required. A number of type Double or any valid numeric expression. If <paramref name="Number" /> contains Nothing, Nothing is returned.</param>
      <exception cref="T:System.ArgumentNullException">Number is not specified.</exception>
      <exception cref="T:System.ArgumentException">Number is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Single)">
      <summary>Return the integer portion of a number.</summary>
      <returns>Return the integer portion of a number.</returns>
      <param name="Number">Required. A number of type Double or any valid numeric expression. If <paramref name="Number" /> contains Nothing, Nothing is returned.</param>
      <exception cref="T:System.ArgumentNullException">Number is not specified.</exception>
      <exception cref="T:System.ArgumentException">Number is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Byte)">
      <summary>Returns a string representing the hexadecimal value of a number.</summary>
      <returns>Returns a string representing the hexadecimal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int16)">
      <summary>Returns a string representing the hexadecimal value of a number.</summary>
      <returns>Returns a string representing the hexadecimal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int32)">
      <summary>Returns a string representing the hexadecimal value of a number.</summary>
      <returns>Returns a string representing the hexadecimal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int64)">
      <summary>Returns a string representing the hexadecimal value of a number.</summary>
      <returns>Returns a string representing the hexadecimal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Object)">
      <summary>Returns a string representing the hexadecimal value of a number.</summary>
      <returns>Returns a string representing the hexadecimal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.SByte)">
      <summary>Returns a string representing the hexadecimal value of a number.</summary>
      <returns>Returns a string representing the hexadecimal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt16)">
      <summary>Returns a string representing the hexadecimal value of a number.</summary>
      <returns>Returns a string representing the hexadecimal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt32)">
      <summary>Returns a string representing the hexadecimal value of a number.</summary>
      <returns>Returns a string representing the hexadecimal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt64)">
      <summary>Returns a string representing the hexadecimal value of a number.</summary>
      <returns>Returns a string representing the hexadecimal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Decimal)">
      <summary>Return the integer portion of a number.</summary>
      <returns>Return the integer portion of a number.</returns>
      <param name="Number">Required. A number of type Double or any valid numeric expression. If <paramref name="Number" /> contains Nothing, Nothing is returned.</param>
      <exception cref="T:System.ArgumentNullException">Number is not specified.</exception>
      <exception cref="T:System.ArgumentException">Number is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Double)">
      <summary>Return the integer portion of a number.</summary>
      <returns>Return the integer portion of a number.</returns>
      <param name="Number">Required. A number of type Double or any valid numeric expression. If <paramref name="Number" /> contains Nothing, Nothing is returned.</param>
      <exception cref="T:System.ArgumentNullException">Number is not specified.</exception>
      <exception cref="T:System.ArgumentException">Number is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int16)">
      <summary>Return the integer portion of a number.</summary>
      <returns>Return the integer portion of a number.</returns>
      <param name="Number">Required. A number of type Double or any valid numeric expression. If <paramref name="Number" /> contains Nothing, Nothing is returned.</param>
      <exception cref="T:System.ArgumentNullException">Number is not specified.</exception>
      <exception cref="T:System.ArgumentException">Number is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int32)">
      <summary>Return the integer portion of a number.</summary>
      <returns>Return the integer portion of a number.</returns>
      <param name="Number">Required. A number of type Double or any valid numeric expression. If <paramref name="Number" /> contains Nothing, Nothing is returned.</param>
      <exception cref="T:System.ArgumentNullException">Number is not specified.</exception>
      <exception cref="T:System.ArgumentException">Number is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int64)">
      <summary>Return the integer portion of a number.</summary>
      <returns>Return the integer portion of a number.</returns>
      <param name="Number">Required. A number of type Double or any valid numeric expression. If <paramref name="Number" /> contains Nothing, Nothing is returned.</param>
      <exception cref="T:System.ArgumentNullException">Number is not specified.</exception>
      <exception cref="T:System.ArgumentException">Number is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Object)">
      <summary>Return the integer portion of a number.</summary>
      <returns>Return the integer portion of a number.</returns>
      <param name="Number">Required. A number of type Double or any valid numeric expression. If <paramref name="Number" /> contains Nothing, Nothing is returned.</param>
      <exception cref="T:System.ArgumentNullException">Number is not specified.</exception>
      <exception cref="T:System.ArgumentException">Number is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Single)">
      <summary>Return the integer portion of a number.</summary>
      <returns>Return the integer portion of a number.</returns>
      <param name="Number">Required. A number of type Double or any valid numeric expression. If <paramref name="Number" /> contains Nothing, Nothing is returned.</param>
      <exception cref="T:System.ArgumentNullException">Number is not specified.</exception>
      <exception cref="T:System.ArgumentException">Number is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Byte)">
      <summary>Returns a string representing the octal value of a number.</summary>
      <returns>Returns a string representing the octal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int16)">
      <summary>Returns a string representing the octal value of a number.</summary>
      <returns>Returns a string representing the octal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int32)">
      <summary>Returns a string representing the octal value of a number.</summary>
      <returns>Returns a string representing the octal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int64)">
      <summary>Returns a string representing the octal value of a number.</summary>
      <returns>Returns a string representing the octal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Object)">
      <summary>Returns a string representing the octal value of a number.</summary>
      <returns>Returns a string representing the octal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.SByte)">
      <summary>Returns a string representing the octal value of a number.</summary>
      <returns>Returns a string representing the octal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt16)">
      <summary>Returns a string representing the octal value of a number.</summary>
      <returns>Returns a string representing the octal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt32)">
      <summary>Returns a string representing the octal value of a number.</summary>
      <returns>Returns a string representing the octal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt64)">
      <summary>Returns a string representing the octal value of a number.</summary>
      <returns>Returns a string representing the octal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Str(System.Object)">
      <summary>Returns a String representation of a number.</summary>
      <returns>Returns a String representation of a number.</returns>
      <param name="Number">Required. An Object containing any valid numeric expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Char)">
      <summary>Returns the numbers contained in a string as a numeric value of appropriate type.</summary>
      <returns>Returns the numbers contained in a string as a numeric value of appropriate type.</returns>
      <param name="Expression">Required. Any valid String expression, Object variable, or Char value. If <paramref name="Expression" /> is of type Object, its value must be convertible to String or an <see cref="T:System.ArgumentException" /> error occurs.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="InputStr" /> is too large.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" /> is an Object type expression that is not convertible to String.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Object)">
      <summary>Returns the numbers contained in a string as a numeric value of appropriate type.</summary>
      <returns>Returns the numbers contained in a string as a numeric value of appropriate type.</returns>
      <param name="Expression">Required. Any valid String expression, Object variable, or Char value. If <paramref name="Expression" /> is of type Object, its value must be convertible to String or an <see cref="T:System.ArgumentException" /> error occurs.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="InputStr" /> is too large.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" /> is an Object type expression that is not convertible to String.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.String)">
      <summary>Returns the numbers contained in a string as a numeric value of appropriate type.</summary>
      <returns>Returns the numbers contained in a string as a numeric value of appropriate type.</returns>
      <param name="InputStr">Required. Any valid String expression, Object variable, or Char value. If <paramref name="Expression" /> is of type Object, its value must be convertible to String or an <see cref="T:System.ArgumentException" /> error occurs.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="InputStr" /> is too large.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" /> is an Object type expression that is not convertible to String.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.DateAndTime">
      <summary>The DateAndTime module contains the procedures and properties used in date and time operations. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)">
      <summary>Returns a Date value containing a date and time value to which a specified time interval has been added.</summary>
      <returns>Returns a Date value containing a date and time value to which a specified time interval has been added.</returns>
      <param name="Interval">Required. DateInterval enumeration value or String expression representing the time interval you want to add.</param>
      <param name="Number">Required. Double. Floating-point expression representing the number of intervals you want to add. <paramref name="Number" /> can be positive (to get date/time values in the future) or negative (to get date/time values in the past). It can contain a fractional part when <paramref name="Interval" /> specifies hours, minutes, or seconds. For other values of <paramref name="Interval" />, any fractional part of <paramref name="Number" /> is ignored.</param>
      <param name="DateValue">Required. Date. An expression representing the date and time to which the interval is to be added. <paramref name="DateValue" /> itself is not changed in the calling program.</param>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" /> is not coercible to Date.</exception>
      <exception cref="T:System.ArgumentException">Interval is invalid.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)">
      <summary>Returns a Date value containing a date and time value to which a specified time interval has been added.</summary>
      <returns>Returns a Date value containing a date and time value to which a specified time interval has been added.</returns>
      <param name="Interval">Required. DateInterval enumeration value or String expression representing the time interval you want to add.</param>
      <param name="Number">Required. Double. Floating-point expression representing the number of intervals you want to add. <paramref name="Number" /> can be positive (to get date/time values in the future) or negative (to get date/time values in the past). It can contain a fractional part when <paramref name="Interval" /> specifies hours, minutes, or seconds. For other values of <paramref name="Interval" />, any fractional part of <paramref name="Number" /> is ignored.</param>
      <param name="DateValue">Required. Date. An expression representing the date and time to which the interval is to be added. <paramref name="DateValue" /> itself is not changed in the calling program.</param>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" /> is not coercible to Date.</exception>
      <exception cref="T:System.ArgumentException">Interval is invalid.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>Returns a Long value specifying the number of time intervals between two Date values.</summary>
      <returns>Returns a Long value specifying the number of time intervals between two Date values.</returns>
      <param name="Interval">Required. DateInterval enumeration value or String expression representing the time interval you want to use as the unit of difference between <paramref name="Date1" /> and <paramref name="Date2" />.</param>
      <param name="Date1">Required. Date. The first date/time value you want to use in the calculation. </param>
      <param name="Date2">Required. Date. The second date/time value you want to use in the calculation.</param>
      <param name="DayOfWeek">Optional. A value chosen from the FirstDayOfWeek enumeration that specifies the first day of the week. If not specified, FirstDayOfWeek.Sunday is used.</param>
      <param name="WeekOfYear">Optional. A value chosen from the FirstWeekOfYear enumeration that specifies the first week of the year. If not specified, FirstWeekOfYear.Jan1 is used.</param>
      <exception cref="T:System.ArgumentException">Invalid <paramref name="Interval" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Date1" />, <paramref name="Date2" />, or <paramref name="DayofWeek" /> is out of range.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="Date1" /> or <paramref name="Date2" /> is of an invalid type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>Returns a Long value specifying the number of time intervals between two Date values.</summary>
      <returns>Returns a Long value specifying the number of time intervals between two Date values.</returns>
      <param name="Interval">Required. DateInterval enumeration value or String expression representing the time interval you want to use as the unit of difference between <paramref name="Date1" /> and <paramref name="Date2" />.</param>
      <param name="Date1">Required. Date. The first date/time value you want to use in the calculation. </param>
      <param name="Date2">Required. Date. The second date/time value you want to use in the calculation.</param>
      <param name="DayOfWeek">Optional. A value chosen from the FirstDayOfWeek enumeration that specifies the first day of the week. If not specified, FirstDayOfWeek.Sunday is used.</param>
      <param name="WeekOfYear">Optional. A value chosen from the FirstWeekOfYear enumeration that specifies the first week of the year. If not specified, FirstWeekOfYear.Jan1 is used.</param>
      <exception cref="T:System.ArgumentException">Invalid <paramref name="Interval" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Date1" />, <paramref name="Date2" />, or <paramref name="DayofWeek" /> is out of range.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="Date1" /> or <paramref name="Date2" /> is of an invalid type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>Returns an Integer value containing the specified component of a given Date value.</summary>
      <returns>Returns an Integer value containing the specified component of a given Date value.</returns>
      <param name="Interval">Required. DateInterval enumeration value or String expression representing the part of the date/time value you want to return.</param>
      <param name="DateValue">Required. Date value that you want to evaluate.</param>
      <param name="FirstDayOfWeekValue">Optional. A value chosen from the FirstDayOfWeek enumeration that specifies the first day of the week. If not specified, FirstDayOfWeek.Sunday is used.</param>
      <param name="FirstWeekOfYearValue">Optional. A value chosen from the FirstWeekOfYear enumeration that specifies the first week of the year. If not specified, FirstWeekOfYear.Jan1 is used.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Interval" /> is invalid. </exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" /> is not coercible to Date.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>Returns an Integer value containing the specified component of a given Date value.</summary>
      <returns>Returns an Integer value containing the specified component of a given Date value.</returns>
      <param name="Interval">Required. DateInterval enumeration value or String expression representing the part of the date/time value you want to return.</param>
      <param name="DateValue">Required. Date value that you want to evaluate.</param>
      <param name="DayOfWeek">Optional. A value chosen from the FirstDayOfWeek enumeration that specifies the first day of the week. If not specified, FirstDayOfWeek.Sunday is used.</param>
      <param name="WeekOfYear">Optional. A value chosen from the FirstWeekOfYear enumeration that specifies the first week of the year. If not specified, FirstWeekOfYear.Jan1 is used.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Interval" /> is invalid. </exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" /> is not coercible to Date.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)">
      <summary>Returns a Date value representing a specified year, month, and day, with the time information set to midnight (00:00:00).</summary>
      <returns>Returns a Date value representing a specified year, month, and day, with the time information set to midnight (00:00:00).</returns>
      <param name="Year">Required. Integer expression from 1 through 9999. However, values below this range are also accepted. If <paramref name="Year" /> is 0 through 99, it is interpreted as being between 1930 and 2029, as explained in the "Remarks" section below. If <paramref name="Year" /> is less than 1, it is subtracted from the current year.</param>
      <param name="Month">Required. Integer expression from 1 through 12. However, values outside this range are also accepted. The value of <paramref name="Month" /> is offset by 1 and applied to January of the calculated year. In other words, (<paramref name="Month" /> - 1) is added to January. The year is recalculated if necessary. The following results illustrate this effect:If <paramref name="Month" /> is 1, the result is January of the calculated year.If <paramref name="Month" /> is 0, the result is December of the previous year.If <paramref name="Month" /> is -1, the result is November of the previous year.If <paramref name="Month" /> is 13, the result is January of the following year.</param>
      <param name="Day">Required. Integer expression from 1 through 31. However, values outside this range are also accepted. The value of <paramref name="Day" /> is offset by 1 and applied to the first day of the calculated month. In other words, (<paramref name="Day" /> - 1) is added to the first of the month. The month and year are recalculated if necessary. The following results illustrate this effect:If <paramref name="Day" /> is 1, the result is the first day of the calculated month.If <paramref name="Day" /> is 0, the result is the last day of the previous month.If <paramref name="Day" /> is -1, the result is the penultimate day of the previous month.If <paramref name="Day" /> is past the end of the current month, the result is the appropriate day of the following month. For example, if <paramref name="Month" /> is 4 and <paramref name="Day" /> is 31, the result is May 1.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.DateString">
      <summary>Returns or sets a String value representing the current date according to your system.</summary>
      <returns>Returns or sets a String value representing the current date according to your system.</returns>
      <exception cref="T:System.InvalidCastException">Invalid format used to set value of DateString.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)">
      <summary>Returns a Date value containing the date information represented by a string, with the time information set to midnight (00:00:00).</summary>
      <returns>Date value containing the date information represented by a string, with the time information set to midnight (00:00:00).</returns>
      <param name="StringDate">Required. String expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.</param>
      <exception cref="T:System.InvalidCastException">
        <paramref name="StringDate" /> includes invalid time information.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)">
      <summary>Returns an Integer value from 1 through 31 representing the day of the month.</summary>
      <returns>Returns an Integer value from 1 through 31 representing the day of the month.</returns>
      <param name="DateValue">Required. Date value from which you want to extract the day.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)">
      <summary>Returns an Integer value from 0 through 23 representing the hour of the day.</summary>
      <returns>Returns an Integer value from 0 through 23 representing the hour of the day.</returns>
      <param name="TimeValue">Required. Date value from which you want to extract the hour.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)">
      <summary>Returns an Integer value from 0 through 59 representing the minute of the hour.</summary>
      <returns>Returns an Integer value from 0 through 59 representing the minute of the hour.</returns>
      <param name="TimeValue">Required. Date value from which you want to extract the minute.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)">
      <summary>Returns an Integer value from 1 through 12 representing the month of the year.</summary>
      <returns>Returns an Integer value from 1 through 12 representing the month of the year.</returns>
      <param name="DateValue">Required. Date value from which you want to extract the month.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)">
      <summary>Returns a String value containing the name of the specified month.</summary>
      <returns>Returns a String value containing the name of the specified month.</returns>
      <param name="Month">Required. Integer. The numeric designation of the month, from 1 through 13; 1 indicates January and 12 indicates December. You can use the value 13 with a 13-month calendar. If your system is using a 12-month calendar and <paramref name="Month" /> is 13, MonthName returns an empty string.</param>
      <param name="Abbreviate">Optional. Boolean value that indicates if the month name is to be abbreviated. If omitted, the default is False, which means the month name is not abbreviated.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Month" /> is less than 1 or greater than 13.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Now">
      <summary>Returns a Date value containing the current date and time according to your system.</summary>
      <returns>Returns a Date value containing the current date and time according to your system.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)">
      <summary>Returns an Integer value from 0 through 59 representing the second of the minute.</summary>
      <returns>Returns an Integer value from 0 through 59 representing the second of the minute.</returns>
      <param name="TimeValue">Required. Date value from which you want to extract the second.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay">
      <summary>Returns or sets a Date value containing the current time of day according to your system.</summary>
      <returns>Returns or sets a Date value containing the current time of day according to your system.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Timer">
      <summary>Returns a Double value representing the number of seconds elapsed since midnight.</summary>
      <returns>Returns a Double value representing the number of seconds elapsed since midnight.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)">
      <summary>Returns a Date value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.</summary>
      <returns>Returns a Date value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.</returns>
      <param name="Hour">Required. Integer expression from 0 through 23. However, values outside this range are also accepted.</param>
      <param name="Minute">Required. Integer expression from 0 through 59. However, values outside this range are also accepted. The value of <paramref name="Minute" /> is added to the calculated hour, so a negative value specifies minutes before that hour.</param>
      <param name="Second">Required. Integer expression from 0 through 59. However, values outside this range are also accepted. The value of <paramref name="Second" /> is added to the calculated minute, so a negative value specifies seconds before that minute.</param>
      <exception cref="T:System.ArgumentException">Argument is outside the range -2,147,483,648 through 2,147,483,647</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Calculated time is less than negative 24 hours.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeString">
      <summary>Returns or sets a String value representing the current time of day according to your system.</summary>
      <returns>Returns or sets a String value representing the current time of day according to your system.</returns>
      <exception cref="T:System.InvalidCastException">Invalid format used to set value of TimeString.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)">
      <summary>Returns a Date value containing the time information represented by a string, with the date information set to January 1 of the year 1.</summary>
      <returns>Returns a Date value containing the time information represented by a string, with the date information set to January 1 of the year 1.</returns>
      <param name="StringTime">Required. String expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.</param>
      <exception cref="T:System.InvalidCastException">
        <paramref name="StringTime" /> includes invalid date information.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Today">
      <summary>Returns or sets a Date value containing the current date according to your system.</summary>
      <returns>Returns or sets a Date value containing the current date according to your system.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary>Returns an Integer value containing a number representing the day of the week.</summary>
      <returns>Returns an Integer value containing a number representing the day of the week.</returns>
      <param name="DateValue">Required. Date value for which you want to determine the day of the week.</param>
      <param name="DayOfWeek">Optional. A value chosen from the FirstDayOfWeek enumeration that specifies the first day of the week. If not specified, FirstDayOfWeek.Sunday is used.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="DayOfWeek" /> is less than 0 or more than 7.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary>Returns a String value containing the name of the specified weekday.</summary>
      <returns>Returns a String value containing the name of the specified weekday.</returns>
      <param name="Weekday">Required. Integer. The numeric designation for the weekday, from 1 through 7; 1 indicates the first day of the week and 7 indicates the last day of the week. The identities of the first and last days depend on the setting of <paramref name="FirstDayOfWeekValue" />.</param>
      <param name="Abbreviate">Optional. Boolean value that indicates if the weekday name is to be abbreviated. If omitted, the default is False, which means the weekday name is not abbreviated.</param>
      <param name="FirstDayOfWeekValue">Optional. A value chosen from the FirstDayOfWeek enumeration that specifies the first day of the week. If not specified, FirstDayOfWeek.System is used.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Weekday" /> is less than 1 or greater than 7, or <paramref name="FirstDayOfWeekValue" /> is less than 0 or greater than 7.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)">
      <summary>Returns an Integer value from 1 through 9999 representing the year.</summary>
      <returns>Returns an Integer value from 1 through 9999 representing the year.</returns>
      <param name="DateValue">Required. Date value from which you want to extract the year.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.DateFormat">
      <summary>Indicates how to display dates when calling the FormatDateTime function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.GeneralDate">
      <summary>For real numbers, displays a date and time. If the number has no fractional part, displays only a date. If the number has no integer part, displays time only. Date and time display is determined by your computer's regional settings. This member is equivalent to the Visual Basic constant vbGeneralDate.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongDate">
      <summary>Displays a date using the long-date format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant vbLongDate.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortDate">
      <summary>Displays a date using the short-date format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant vbShortDate.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongTime">
      <summary>Displays a time using the long-time format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant vbLongTime.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortTime">
      <summary>Displays a time using the short-time format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant vbShortTime.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.DateInterval">
      <summary>Indicates how to determine and format date intervals when calling date-related functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Year">
      <summary>Year</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Quarter">
      <summary>Quarter of year (1 through 4)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Month">
      <summary>Month (1 through 12)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.DayOfYear">
      <summary>Day of year (1 through 366)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Day">
      <summary>Day of month (1 through 31)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.WeekOfYear">
      <summary>Week of year (1 through 53)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Weekday">
      <summary>Day of week (1 through 7)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Hour">
      <summary>Hour (1 through 24)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Minute">
      <summary>Minute (1 through 60)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Second">
      <summary>Second (1 through 60)</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.DueDate">
      <summary>Indicates when payments are due when calling financial methods.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.EndOfPeriod">
      <summary>Falls at the end of the date interval</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.BegOfPeriod">
      <summary>Falls at the beginning of the date interval</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ErrObject">
      <summary>The ErrObject module contains properties and procedures used to identify and handle run-time errors using the Err object. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Clear">
      <summary>Clears all property settings of the Err object.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Description">
      <summary>Returns or sets a String expression containing a descriptive string associated with an error. Read/write.</summary>
      <returns>Returns or sets a String expression containing a descriptive string associated with an error. Read/write.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Erl">
      <summary>Returns an integer indicating the line number of the last executed statement. Read-only.</summary>
      <returns>Returns an integer indicating the line number of the last executed statement. Read-only.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.GetException">
      <summary>Returns the exception representing the error that occurred.</summary>
      <returns>Returns the exception representing the error that occurred.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.HelpContext">
      <summary>Returns or sets an Integer containing the context ID for a topic in a Help file. Read/write.</summary>
      <returns>Returns or sets an Integer containing the context ID for a topic in a Help file. Read/write.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.HelpFile">
      <summary>Returns or sets a String expression containing the fully qualified path to a Help file. Read/write.</summary>
      <returns>Returns or sets a String expression containing the fully qualified path to a Help file. Read/write.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.LastDllError">
      <summary>Returns a system error code produced by a call to a dynamic-link library (DLL). Read-only.</summary>
      <returns>Returns a system error code produced by a call to a dynamic-link library (DLL). Read-only.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Number">
      <summary>Returns or sets a numeric value specifying an error. Read/write.</summary>
      <returns>Returns or sets a numeric value specifying an error. Read/write.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is greater than 65535.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
      <summary>Generates a run-time error; can be used instead of the Error statement.</summary>
      <param name="Number">Required. Long integer that identifies the nature of the error. Visual Basic errors are in the range 0–65535; the range 0–512 is reserved for system errors; the range 513–65535 is available for user-defined errors. When setting the Number property to your own error code in a class module, you add your error code number to the vbObjectError constant. For example, to generate the error number 513, assign vbObjectError + 513 to the Number property.</param>
      <param name="Source">Optional. String expression naming the object or application that generated the error. When setting this property for an object, use the form project.class. If <paramref name="Source" /> is not specified, the process ID of the current Visual Basic project is used.</param>
      <param name="Description">Optional. String expression describing the error. If unspecified, the value in the Number property is examined. If it can be mapped to a Visual Basic run-time error code, the string that would be returned by the Error function is used as the Description property. If there is no Visual Basic error corresponding to the Number property, the "Application-defined or object-defined error" message is used.</param>
      <param name="HelpFile">Optional. The fully qualified path to the Help file in which help on this error can be found. If unspecified, Visual Basic uses the fully qualified drive, path, and file name of the Visual Basic Help file.</param>
      <param name="HelpContext">Optional. The context ID identifying a topic within <paramref name="HelpFile" /> that provides help for the error. If omitted, the Visual Basic Help-file context ID for the error corresponding to the Number property is used, if it exists.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Source">
      <summary>Returns or sets a String expression specifying the name of the object or application that originally generated the error. Read/write.</summary>
      <returns>Returns or sets a String expression specifying the name of the object or application that originally generated the error. Read/write.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.FileAttribute">
      <summary>Indicates the file attributes to use when calling file-access functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Normal">
      <summary>Normal (default for Dir and SetAttr). No special characteristics apply to this file. This member is equivalent to the Visual Basic constant vbNormal.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.ReadOnly">
      <summary>Read only. This member is equivalent to the Visual Basic constant vbReadOnly.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Hidden">
      <summary>Hidden. This member is equivalent to the Visual Basic constant vbHidden.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.System">
      <summary>System file. This member is equivalent to the Visual Basic constant vbSystem.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Volume">
      <summary>Volume label. This attribute is not valid when used with SetAttr. This member is equivalent to the Visual Basic constant vbVolume.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Directory">
      <summary>Directory or folder. This member is equivalent to the Visual Basic constant vbDirectory.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Archive">
      <summary>File has changed since last backup. This member is equivalent to the Visual Basic constant vbArchive.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileSystem">
      <summary>The FileSystem module contains the procedures that are used to perform file, directory or folder, and system operations. The My feature gives you better productivity and performance in file I/O operations than using the FileSystem module. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)">
      <summary>Changes the current directory or folder. The My feature gives you better productivity and performance in file I/O operations than the ChDir function. For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" /> .</summary>
      <param name="Path">Required. A String expression that identifies which directory or folder becomes the new default directory or folder. <paramref name="Path" /> may include the drive. If no drive is specified, ChDir changes the default directory or folder on the current drive. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Path" /> is empty.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Invalid drive is specified, or drive is unavailable.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.Char)">
      <summary>Changes the current drive.</summary>
      <param name="Drive">Required. String expression that specifies an existing drive. If you supply a zero-length string (""), the current drive does not change. If the <paramref name="Drive" /> argument is a multiple-character string, ChDrive uses only the first letter.</param>
      <exception cref="T:System.IO.IOException">Invalid drive is specified, or drive is unavailable.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.String)">
      <summary>Changes the current drive.</summary>
      <param name="Drive">Required. String expression that specifies an existing drive. If you supply a zero-length string (""), the current drive does not change. If the <paramref name="Drive" /> argument is a multiple-character string, ChDrive uses only the first letter.</param>
      <exception cref="T:System.IO.IOException">Invalid drive is specified, or drive is unavailable.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir">
      <summary>Returns a string representing the current path. The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />  gives you better productivity and performance in file I/O operations than CurDir. For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</summary>
      <returns>A string representing the current path.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir(System.Char)">
      <summary>Returns a string representing the current path. The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />  gives you better productivity and performance in file I/O operations than CurDir. For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</summary>
      <returns>A string representing the current path. </returns>
      <param name="Drive">Optional. Char expression that specifies an existing drive. If no drive is specified, or if <paramref name="Drive" /> is a zero-length string (""), CurDir returns the path for the current drive.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir">
      <summary>Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive. The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the Dir function. See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />  for more information.</summary>
      <returns>A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary>Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive. The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the Dir function. See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />  for more information.</summary>
      <returns>A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</returns>
      <param name="PathName">Optional. String expression that specifies a file name, directory or folder name, or drive volume label. A zero-length string ("") is returned if <paramref name="PathName" /> is not found. </param>
      <param name="Attributes">Optional. Enumeration or numeric expression whose value specifies file attributes. If omitted, Dir returns files that match <paramref name="PathName" /> but have no attributes.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)">
      <summary>Returns a Boolean value True when the end of a file opened for Random or sequential Input has been reached.</summary>
      <returns>Returns a Boolean value True when the end of a file opened for Random or sequential Input has been reached.</returns>
      <param name="FileNumber">Required. An Integer that contains any valid file number.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)">
      <summary>Returns an enumeration representing the file mode for files opened using the FileOpen function. The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the FileAttr function. See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /> for more information.</summary>
      <returns>The following enumeration values indicate the file access mode:ValueMode1OpenMode.Input2OpenMode.Output4OpenMode.Random8OpenMode.Append32OpenMode.Binary</returns>
      <param name="FileNumber">Required. Integer. Any valid file number.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])">
      <summary>Concludes input/output (I/O) to a file opened using the FileOpen function. My gives you better productivity and performance in file I/O operations. See <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />  for more information.</summary>
      <param name="FileNumbers">Optional. Parameter array of 0 or more channels to be closed. </param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileCopy(System.String,System.String)">
      <summary>Copies a file. The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than FileCopy. See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" /> for more information.</summary>
      <param name="Source">Required. String expression that specifies the name of the file to be copied. <paramref name="Source" /> may include the directory or folder, and drive, of the source file.</param>
      <param name="Destination">Required. String expression that specifies the destination file name. <paramref name="Destination" /> may include the directory or folder, and drive, of the destination file.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Source" /> or <paramref name="Destination" /> is invalid or not specified.</exception>
      <exception cref="T:System.IO.IOException">File is already open.</exception>
      <exception cref="T:System.IO.FileNotFoundException">File does not exist.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)">
      <summary>Returns a Date value that indicates the date and time a file was written to. The My feature gives you better productivity and performance in file I/O operations than FileDateTime. For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /></summary>
      <returns>Date value that indicates the date and time a file was created or last modified. </returns>
      <param name="PathName">Required. String expression that specifies a file name. <paramref name="PathName" /> may include the directory or folder, and the drive.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="PathName" /> is invalid or contains wildcards.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Target file does not exist.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Array@,System.Int64,System.Boolean,System.Boolean)">
      <summary>Reads data from an open disk file into a variable. The My feature gives you better productivity and performance in file I/O operations than FileGet. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name into which data is read.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which reading starts.</param>
      <param name="ArrayIsDynamic">Optional. Applies only when writing an array. Specifies whether the array is to be treated as dynamic and whether an array descriptor describing the size and bounds of the array is necessary.</param>
      <param name="StringIsFixedLength">Optional. Applies only when writing a string. Specifies whether to write a two-byte descriptor for the string that describes the length. The default is False.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Boolean@,System.Int64)">
      <summary>Reads data from an open disk file into a variable. The My feature gives you better productivity and performance in file I/O operations than FileGet. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /></summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name into which data is read.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which reading starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Byte@,System.Int64)">
      <summary>Reads data from an open disk file into a variable. The My feature gives you better productivity and performance in file I/O operations than FileGet. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name into which data is read.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which reading starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Char@,System.Int64)">
      <summary>Reads data from an open disk file into a variable. The My feature gives you better productivity and performance in file I/O operations than FileGet. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name into which data is read.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which reading starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.DateTime@,System.Int64)">
      <summary>Reads data from an open disk file into a variable. The My feature gives you better productivity and performance in file I/O operations than FileGet. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name into which data is read.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which reading starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Decimal@,System.Int64)">
      <summary>Reads data from an open disk file into a variable. The My feature gives you better productivity and performance in file I/O operations than FileGet. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name into which data is read.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which reading starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Double@,System.Int64)">
      <summary>Reads data from an open disk file into a variable. The My feature gives you better productivity and performance in file I/O operations than FileGet. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name into which data is read.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which reading starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int16@,System.Int64)">
      <summary>Reads data from an open disk file into a variable. The My feature gives you better productivity and performance in file I/O operations than FileGet. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name into which data is read.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which reading starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int32@,System.Int64)">
      <summary>Reads data from an open disk file into a variable. The My feature gives you better productivity and performance in file I/O operations than FileGet. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name into which data is read.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which reading starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int64@,System.Int64)">
      <summary>Reads data from an open disk file into a variable. The My feature gives you better productivity and performance in file I/O operations than FileGet. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name into which data is read.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which reading starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Single@,System.Int64)">
      <summary>Reads data from an open disk file into a variable. The My feature gives you better productivity and performance in file I/O operations than FileGet. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name into which data is read.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which reading starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.String@,System.Int64,System.Boolean)">
      <summary>Reads data from an open disk file into a variable. The My feature gives you better productivity and performance in file I/O operations than FileGet. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name into which data is read.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which reading starts.</param>
      <param name="StringIsFixedLength">Optional. Applies only when writing a string. Specifies whether to write a two-byte descriptor for the string that describes the length. The default is False.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.ValueType@,System.Int64)">
      <summary>Reads data from an open disk file into a variable. The My feature gives you better productivity and performance in file I/O operations than FileGet. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name into which data is read.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which reading starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)">
      <summary>Reads data from an open disk file into a variable.  The My feature gives you better productivity and performance in file I/O operations than FileGetObject. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name into which data is read.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which reading starts.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)">
      <summary>Returns a Long value that specifies the length of a file in bytes. The My feature gives you better productivity and performance in file I/O operations than FileLen. For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</summary>
      <returns>Long value that specifies the length of a file in bytes. </returns>
      <param name="PathName">Required. String expression that specifies a file. <paramref name="PathName" /> may include the directory or folder, and the drive.</param>
      <exception cref="T:System.IO.FileNotFoundException">File does not exist.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)">
      <summary>Opens a file for input or output. The My feature gives you better productivity and performance in file I/O operations than FileOpen. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number. Use the FreeFile function to obtain the next available file number.</param>
      <param name="FileName">Required. String expression that specifies a file name—may include directory or folder, and drive.</param>
      <param name="Mode">Required. Enumeration specifying the file mode: Append, Binary, Input, Output, or Random. For more information, see <see cref="T:Microsoft.VisualBasic.OpenMode" /> .</param>
      <param name="Access">Optional. Enumeration specifying the operations permitted on the open file: Read, Write, or ReadWrite. Defaults to ReadWrite. For more information, see <see cref="T:Microsoft.VisualBasic.OpenAccess" /> .</param>
      <param name="Share">Optional. Enumeration specifying the operations not permitted on the open file by other processes: Shared, Lock Read, Lock Write, and Lock Read Write. Defaults to Lock Read Write. For more information, see <see cref="T:Microsoft.VisualBasic.OpenShare" /> .</param>
      <param name="RecordLength">Optional. Number less than or equal to 32,767 (bytes). For files opened for random access, this value is the record length. For sequential files, this value is the number of characters buffered.</param>
      <exception cref="T:System.ArgumentException">Invalid Access, Share, or Mode.</exception>
      <exception cref="T:System.ArgumentException">WriteOnly file is opened for Input.</exception>
      <exception cref="T:System.ArgumentException">ReadOnly file is opened for Output.</exception>
      <exception cref="T:System.ArgumentException">ReadOnly file is opened for Append.</exception>
      <exception cref="T:System.ArgumentException">Record length is negative (and not equal to -1).</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> is invalid (&lt;-1 or &gt;255), or <paramref name="FileNumber" /> is already in use.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileName" /> is already open, or <paramref name="FileName" /> is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Array,System.Int64,System.Boolean,System.Boolean)">
      <summary>Writes data from a variable to a disk file. The My feature gives you better productivity and performance in file I/O operations than FilePut. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name that contains data written to disk.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which writing starts.</param>
      <param name="ArrayIsDynamic">Optional. Applies only when writing an array. Specifies whether the array is to be treated as dynamic, and whether to write an array descriptor for the string that describes the length. </param>
      <param name="StringIsFixedLength">Optional. Applies only when writing a string. Specifies whether to write a two-byte string length descriptor for the string to the file. The default is False.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Boolean,System.Int64)">
      <summary>Writes data from a variable to a disk file. The My feature gives you better productivity and performance in file I/O operations than FilePut. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name that contains data written to disk.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which writing starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Byte,System.Int64)">
      <summary>Writes data from a variable to a disk file. The My feature gives you better productivity and performance in file I/O operations than FilePut. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name that contains data written to disk.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which writing starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Char,System.Int64)">
      <summary>Writes data from a variable to a disk file. The My feature gives you better productivity and performance in file I/O operations than FilePut. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name that contains data written to disk.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which writing starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.DateTime,System.Int64)">
      <summary>Writes data from a variable to a disk file. The My feature gives you better productivity and performance in file I/O operations than FilePut. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name that contains data written to disk.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which writing starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Decimal,System.Int64)">
      <summary>Writes data from a variable to a disk file. The My feature gives you better productivity and performance in file I/O operations than FilePut. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name that contains data written to disk.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which writing starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Double,System.Int64)">
      <summary>Writes data from a variable to a disk file. The My feature gives you better productivity and performance in file I/O operations than FilePut. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name that contains data written to disk.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which writing starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int16,System.Int64)">
      <summary>Writes data from a variable to a disk file. The My feature gives you better productivity and performance in file I/O operations than FilePut. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name that contains data written to disk.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which writing starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int32,System.Int64)">
      <summary>Writes data from a variable to a disk file. The My feature gives you better productivity and performance in file I/O operations than FilePut. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name that contains data written to disk.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which writing starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int64,System.Int64)">
      <summary>Writes data from a variable to a disk file. The My feature gives you better productivity and performance in file I/O operations than FilePut. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name that contains data written to disk.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which writing starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Single,System.Int64)">
      <summary>Writes data from a variable to a disk file. The My feature gives you better productivity and performance in file I/O operations than FilePut. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name that contains data written to disk.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which writing starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.String,System.Int64,System.Boolean)">
      <summary>Writes data from a variable to a disk file. The My feature gives you better productivity and performance in file I/O operations than FilePut. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />..</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name that contains data written to disk.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which writing starts.</param>
      <param name="StringIsFixedLength">Optional. Applies only when writing a string. Specifies whether to write a two-byte string length descriptor for the string to the file. The default is False.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.ValueType,System.Int64)">
      <summary>Writes data from a variable to a disk file. The My feature gives you better productivity and performance in file I/O operations than FilePut. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name that contains data written to disk.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which writing starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Object,System.Object,System.Object)">
      <summary>Writes data from a variable to a disk file. The My feature gives you better productivity and performance in file I/O operations than FilePut. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name that contains data written to disk.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which writing starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePutObject(System.Int32,System.Object,System.Int64)">
      <summary>Writes data from a variable to a disk file.  The My feature gives you better productivity and performance in file I/O operations than FilePutObject. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name that contains data written to disk.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which writing starts.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)">
      <summary>Assigns an output line width to a file opened by using the FileOpen function.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="RecordWidth">Required. Numeric expression in the range 0–255, inclusive, which indicates how many characters appear on a line before a new line is started. If <paramref name="RecordWidth" /> equals 0, there is no limit to the length of a line. The default value for <paramref name="RecordWidth" /> is 0.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FreeFile">
      <summary>Returns an Integer value that represents the next file number available for use by the FileOpen function.</summary>
      <returns>Returns an Integer value that represents the next file number available for use by the FileOpen function.</returns>
      <exception cref="T:System.IO.IOException">More than 255 files are in use.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)">
      <summary>Returns a FileAttribute value that represents the attributes of a file, directory, or folder. The My feature gives you better productivity and performance in file I/O operations than FileAttribute. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <returns>The value returned by GetAttr is the sum of the following enumeration values:ValueConstantDescriptionNormalvbNormalNormal.ReadOnlyvbReadOnlyRead-only.HiddenvbHiddenHidden.SystemvbSystemSystem file.DirectoryvbDirectoryDirectory or folder.ArchivevbArchiveFile has changed since last backup.AliasvbAliasFile has a different name.NoteThese enumerations are specified by the Visual Basic language. The names can be used anywhere in your code in place of the actual values.</returns>
      <param name="PathName">Required. String expression that specifies a file, directory, or folder name. <paramref name="PathName" /> can include the directory or folder, and the drive.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="Pathname" /> is invalid or contains wildcards.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Target file does not exist.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Boolean@)">
      <summary>Reads data from an open sequential file and assigns the data to variables.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Variable that is assigned the values read from the file—cannot be an array or object variable.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Byte@)">
      <summary>Reads data from an open sequential file and assigns the data to variables.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Variable that is assigned the values read from the file—cannot be an array or object variable.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Char@)">
      <summary>Reads data from an open sequential file and assigns the data to variables.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Variable that is assigned the values read from the file—cannot be an array or object variable.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.DateTime@)">
      <summary>Reads data from an open sequential file and assigns the data to variables.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Variable that is assigned the values read from the file—cannot be an array or object variable.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Decimal@)">
      <summary>Reads data from an open sequential file and assigns the data to variables.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Variable that is assigned the values read from the file—cannot be an array or object variable.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Double@)">
      <summary>Reads data from an open sequential file and assigns the data to variables.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Variable that is assigned the values read from the file—cannot be an array or object variable.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int16@)">
      <summary>Reads data from an open sequential file and assigns the data to variables.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Variable that is assigned the values read from the file—cannot be an array or object variable.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int32@)">
      <summary>Reads data from an open sequential file and assigns the data to variables.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Variable that is assigned the values read from the file—cannot be an array or object variable.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int64@)">
      <summary>Reads data from an open sequential file and assigns the data to variables.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Variable that is assigned the values read from the file—cannot be an array or object variable.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Object@)">
      <summary>Reads data from an open sequential file and assigns the data to variables.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Variable that is assigned the values read from the file—cannot be an array or object variable.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Single@)">
      <summary>Reads data from an open sequential file and assigns the data to variables.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Variable that is assigned the values read from the file—cannot be an array or object variable.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.String@)">
      <summary>Reads data from an open sequential file and assigns the data to variables.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Variable that is assigned the values read from the file—cannot be an array or object variable.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)">
      <summary>Returns String value that contains characters from a file opened in Input or Binary mode. The My feature gives you better productivity and performance in file I/O operations than InputString. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <returns>Returns String value that contains characters from a file opened in Input or Binary mode. The My feature gives you better productivity and performance in file I/O operations than InputString. </returns>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="CharCount">Required. Any valid numeric expression specifying the number of characters to read.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="CharCount" /> &lt; 0 or &gt; 214.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)">
      <summary>Deletes files from a disk. The My feature gives you better productivity and performance in file I/O operations than Kill. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> .</summary>
      <param name="PathName">Required. String expression that specifies one or more file names to be deleted. <paramref name="PathName" /> can include the directory or folder, and the drive.</param>
      <exception cref="T:System.IO.IOException">Target file(s) open.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Target file(s) not found.</exception>
      <exception cref="T:System.Security.SecurityException">Permission denied.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LineInput(System.Int32)">
      <summary>Reads a single line from an open sequential file and assigns it to a String variable.</summary>
      <returns>Reads a single line from an open sequential file and assigns it to a String variable.</returns>
      <param name="FileNumber">Required. Any valid file number.</param>
      <exception cref="T:System.IO.EndOfStreamException">End of file reached.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)">
      <summary>Returns a Long value that specifies the current read/write position in an open file.</summary>
      <returns>Returns a Long value that specifies the current read/write position in an open file.</returns>
      <param name="FileNumber">Required. Any valid Integer file number.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32)">
      <summary>Controls access by other processes to all or part of a file opened by using the Open function. The My feature gives you better productivity and performance in file I/O operations than Lock and Unlock. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64)">
      <summary>Controls access by other processes to all or part of a file opened by using the Open function. The My feature gives you better productivity and performance in file I/O operations than Lock and Unlock. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Record">Optional. Number of the only record or byte to lock or unlock</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64,System.Int64)">
      <summary>Controls access by other processes to all or part of a file opened by using the Open function. The My feature gives you better productivity and performance in file I/O operations than Lock and Unlock. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="FromRecord">Optional. Number of the first record or byte to lock or unlock.</param>
      <param name="ToRecord">Optional. Number of the last record or byte to lock or unlock.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)">
      <summary>Returns a Long representing the size, in bytes, of a file opened by using the FileOpen function. The My feature gives you better productivity and performance in file I/O operations than LOF. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <returns>Returns a Long representing the size, in bytes, of a file opened by using the FileOpen function. The My feature gives you better productivity and performance in file I/O operations than LOF.</returns>
      <param name="FileNumber">Required. An Integer that contains a valid file number.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)">
      <summary>Creates a new directory. The My feature gives you better productivity and performance in file I/O operations than MkDir. For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />.</summary>
      <param name="Path">Required. String expression that identifies the directory to be created. The <paramref name="Path" /> may include the drive. If no drive is specified, MkDir creates the new directory on the current drive.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Path" /> is not specified or is empty.</exception>
      <exception cref="T:System.Security.SecurityException">Permission denied.</exception>
      <exception cref="T:System.IO.IOException">Directory already exists.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])">
      <summary>Writes display-formatted data to a sequential file.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Output">Optional. Zero or more comma-delimited expressions to write to a file.The <paramref name="Output" /> argument settings are: </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])">
      <summary>Writes display-formatted data to a sequential file.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Output">Optional. Zero or more comma-delimited expressions to write to a file.The <paramref name="Output" /> argument settings are: </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Rename(System.String,System.String)">
      <summary>Renames a disk file or directory. The My feature gives you better productivity and performance in file I/O operations than Rename. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="OldPath">Required. String expression that specifies the existing file name and location. <paramref name="OldPath" /> may include the directory, and drive, of the file.</param>
      <param name="NewPath">Required. String expression that specifies the new file name and location. <paramref name="NewPath" /> may include directory and drive of the destination location. The file name specified by <paramref name="NewPath" /> cannot already exist.</param>
      <exception cref="T:System.ArgumentException">Path is invalid.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="OldPath" /> file does not exist.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="NewPath" /> file already exists.</exception>
      <exception cref="T:System.IO.IOException">Access is invalid.</exception>
      <exception cref="T:System.IO.IOException">Cannot rename to different device.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Reset">
      <summary>Closes all disk files opened by using the FileOpen function. The My feature gives you better productivity and performance in file I/O operations than Reset. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)">
      <summary>Removes an existing directory. The My feature gives you better productivity and performance in file I/O operations than RmDir. For more information, see <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />.</summary>
      <param name="Path">Required. String expression that identifies the directory or folder to be removed. <paramref name="Path" /> can include the drive. If no drive is specified, RmDir removes the directory on the current drive.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Path" /> is not specified or is empty.</exception>
      <exception cref="T:System.IO.IOException">Target directory contains files.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Directory does not exist.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32)">
      <summary>Returns a Long specifying the current read/write position in a file opened by using the FileOpen function, or sets the position for the next read/write operation in a file opened by using the FileOpen function. The My feature gives you better productivity and performance in file I/O operations than Seek. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <returns>Returns a Long specifying the current read/write position in a file opened by using the FileOpen function, or sets the position for the next read/write operation in a file opened by using the FileOpen function. </returns>
      <param name="FileNumber">Required. An Integer that contains a valid file number.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32,System.Int64)">
      <summary>Returns a Long specifying the current read/write position in a file opened by using the FileOpen function, or sets the position for the next read/write operation in a file opened by using the FileOpen function. The My feature gives you better productivity and performance in file I/O operations than Seek. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. An Integer that contains a valid file number.</param>
      <param name="Position">Required. Number in the range 1–2,147,483,647, inclusive, that indicates where the next read/write operation should occur.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary>Sets attribute information for a file. The My feature gives you better productivity and performance in file I/O operations than SetAttr. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="PathName">Required. String expression that specifies a file name. <paramref name="PathName" /> can include directory or folder, and drive.</param>
      <param name="Attributes">Required. Constant or numeric expression, whose sum specifies file attributes.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="PathName" /> invalid or does not exist.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Attribute" /> type is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)">
      <summary>Used with the Print or PrintLine function to position output.</summary>
      <returns>Used with the Print or PrintLine function to position output.</returns>
      <param name="Count">Required. The number of spaces to insert before displaying or printing the next expression in a list.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB">
      <summary>Used with the Print or PrintLine functions to position output.</summary>
      <returns>Used with the Print or PrintLine functions to position output.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB(System.Int16)">
      <summary>Used with the Print or PrintLine functions to position output.</summary>
      <returns>Used with the Print or PrintLine functions to position output.</returns>
      <param name="Column">Optional. The column number moved to before displaying or printing the next expression in a list. If omitted, TAB moves the insertion point to the start of the next print zone. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32)">
      <summary>Controls access by other processes to all or part of a file opened by using the Open function. The My feature gives you better productivity and performance in file I/O operations than Lock and Unlock. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64)">
      <summary>Controls access by other processes to all or part of a file opened by using the Open function. The My feature gives you better productivity and performance in file I/O operations than Lock and Unlock. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Record">Optional. Number of the only record or byte to lock or unlock</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64,System.Int64)">
      <summary>Controls access by other processes to all or part of a file opened by using the Open function. The My feature gives you better productivity and performance in file I/O operations than Lock and Unlock. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="FromRecord">Optional. Number of the first record or byte to lock or unlock.</param>
      <param name="ToRecord">Optional. Number of the last record or byte to lock or unlock.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])">
      <summary>Writes data to a sequential file. Data written with Write is usually read from a file by using Input.</summary>
      <param name="FileNumber">Required. An Integer expression that contains any valid file number.</param>
      <param name="Output">Optional. One or more comma-delimited expressions to write to a file.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])">
      <summary>Writes data to a sequential file. Data written with Write is usually read from a file by using Input.</summary>
      <param name="FileNumber">Required. An Integer expression that contains any valid file number.</param>
      <param name="Output">Optional. One or more comma-delimited expressions to write to a file.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.Financial">
      <summary>The Financial module contains procedures used to perform financial operations. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>Returns a Double specifying the depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.</summary>
      <returns>Returns a Double specifying the depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.</returns>
      <param name="Cost">Required. Double specifying initial cost of the asset.</param>
      <param name="Salvage">Required. Double specifying value of the asset at the end of its useful life.</param>
      <param name="Life">Required. Double specifying length of useful life of the asset.</param>
      <param name="Period">Required. Double specifying period for which asset depreciation is calculated.</param>
      <param name="Factor">Optional. Double specifying rate at which the balance declines. If omitted, 2 (double-declining method) is assumed.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Factor" /> &lt;= 0, <paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &lt;= 0, or <paramref name="Period" /> &gt; <paramref name="Life." /></exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Returns a Double specifying the future value of an annuity based on periodic, fixed payments and a fixed interest rate.</summary>
      <returns>Returns a Double specifying the future value of an annuity based on periodic, fixed payments and a fixed interest rate.</returns>
      <param name="Rate">Required. Double specifying interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</param>
      <param name="NPer">Required. Double specifying total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.</param>
      <param name="Pmt">Required. Double specifying payment to be made each period. Payments usually contain principal and interest that doesn't change over the life of the annuity.</param>
      <param name="PV">Optional. Double specifying present value (or lump sum) of a series of future payments. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make. If omitted, 0 is assumed.</param>
      <param name="Due">Optional. Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due. This argument must be either DueDate.EndOfPeriod if payments are due at the end of the payment period, or DueDate.BegOfPeriod if payments are due at the beginning of the period. If omitted, DueDate.EndOfPeriod is assumed.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Returns a Double specifying the interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.</summary>
      <returns>Returns a Double specifying the interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.</returns>
      <param name="Rate">Required. Double specifying interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</param>
      <param name="Per">Required. Double specifying payment period in the range 1 through <paramref name="NPer" />.</param>
      <param name="NPer">Required. Double specifying total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.</param>
      <param name="PV">Required. Double specifying present value, or value today, of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</param>
      <param name="FV">Optional. Double specifying future value or cash balance you want after you've made the final payment. For example, the future value of a loan is $0 because that's its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.</param>
      <param name="Due">Optional. Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due. This argument must be either DueDate.EndOfPeriod if payments are due at the end of the payment period, or DueDate.BegOfPeriod if payments are due at the beginning of the period. If omitted, DueDate.EndOfPeriod is assumed.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Per" /> &lt;= 0 or <paramref name="Per" /> &gt; <paramref name="NPer" /></exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)">
      <summary>Returns a Double specifying the internal rate of return for a series of periodic cash flows (payments and receipts).</summary>
      <returns>Returns a Double specifying the internal rate of return for a series of periodic cash flows (payments and receipts).</returns>
      <param name="ValueArray">Required. Array of Double specifying cash flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).</param>
      <param name="Guess">Optional. Object specifying value you estimate will be returned by IRR. If omitted, <paramref name="Guess" /> is 0.1 (10 percent).</param>
      <exception cref="T:System.ArgumentException">Array argument values are invalid or <paramref name="Guess" /> &lt;= -1.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)">
      <summary>Returns a Double specifying the modified internal rate of return for a series of periodic cash flows (payments and receipts).</summary>
      <returns>Returns a Double specifying the modified internal rate of return for a series of periodic cash flows (payments and receipts).</returns>
      <param name="ValueArray">Required. Array of Double specifying cash-flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).</param>
      <param name="FinanceRate">Required. Double specifying interest rate paid as the cost of financing.</param>
      <param name="ReinvestRate">Required. Double specifying interest rate received on gains from cash reinvestment.</param>
      <exception cref="T:System.ArgumentException">Rank of <paramref name="ValueArray" /> does not equal 1, <paramref name="FinanceRate" /> = -1, or <paramref name="ReinvestRate" /> = -1</exception>
      <exception cref="T:System.DivideByZeroException">Division by zero has occurred.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Returns a Double specifying the number of periods for an annuity based on periodic fixed payments and a fixed interest rate.</summary>
      <returns>Returns a Double specifying the number of periods for an annuity based on periodic fixed payments and a fixed interest rate.</returns>
      <param name="Rate">Required. Double specifying interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</param>
      <param name="Pmt">Required. Double specifying payment to be made each period. Payments usually contain principal and interest that does not change over the life of the annuity.</param>
      <param name="PV">Required. Double specifying present value, or value today, of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</param>
      <param name="FV">Optional. Double specifying future value or cash balance you want after you have made the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.</param>
      <param name="Due">Optional. Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due. This argument must be either DueDate.EndOfPeriod if payments are due at the end of the payment period, or DueDate.BegOfPeriod if payments are due at the beginning of the period. If omitted, DueDate.EndOfPeriod is assumed.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Rate" /> &lt;= -1.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Rate" /> = 0 and <paramref name="Pmt" /> = 0</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)">
      <summary>Returns a Double specifying the net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.</summary>
      <returns>Returns a Double specifying the net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.</returns>
      <param name="Rate">Required. Double specifying discount rate over the length of the period, expressed as a decimal.</param>
      <param name="ValueArray">Required. Array of Double specifying cash flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="ValueArray" /> is Nothing, rank of <paramref name="ValueArray" /> &lt;&gt; 1, or <paramref name="Rate" /> = -1 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Returns a Double specifying the payment for an annuity based on periodic, fixed payments and a fixed interest rate.</summary>
      <returns>Returns a Double specifying the payment for an annuity based on periodic, fixed payments and a fixed interest rate.</returns>
      <param name="Rate">Required. Double specifies the interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</param>
      <param name="NPer">Required. Double specifies the total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 × 12 (or 48) payment periods.</param>
      <param name="PV">Required. Double specifies the present value (or lump sum) that a series of payments to be paid in the future is worth now. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</param>
      <param name="FV">Optional. Double specifying future value or cash balance you want after you have made the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 during 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.</param>
      <param name="Due">Optional. Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due. This argument must be either DueDate.EndOfPeriod if payments are due at the end of the payment period, or DueDate.BegOfPeriod if payments are due at the beginning of the period. If omitted, DueDate.EndOfPeriod is assumed.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="NPer" /> = 0.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Returns a Double specifying the principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.</summary>
      <returns>Returns a Double specifying the principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.</returns>
      <param name="Rate">Required. Double specifies the interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</param>
      <param name="Per">Required. Double specifies the payment period in the range 1 through <paramref name="NPer" />.</param>
      <param name="NPer">Required. Double specifies the total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.</param>
      <param name="PV">Required. Double specifies the current value of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</param>
      <param name="FV">Optional. Double specifying future value or cash balance you want after you have made the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.</param>
      <param name="Due">Optional. Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due. This argument must be either DueDate.EndOfPeriod if payments are due at the end of the payment period, or DueDate.BegOfPeriod if payments are due at the beginning of the period. If omitted, DueDate.EndOfPeriod is assumed.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Per" /> &lt;=0 or <paramref name="Per" /> &gt; <paramref name="NPer" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Returns a Double specifying the present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.</summary>
      <returns>Returns a Double specifying the present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.</returns>
      <param name="Rate">Required. Double specifies the interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</param>
      <param name="NPer">Required. Double specifies the total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has 4 x 12 (or 48) payment periods.</param>
      <param name="Pmt">Required. Double specifies the payment to be made each period. Payments usually contain principal and interest that does not change during the life of the annuity.</param>
      <param name="FV">Optional. Double specifies the future value or cash balance you want after you make the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.</param>
      <param name="Due">Optional. Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due. This argument must be either DueDate.EndOfPeriod if payments are due at the end of the payment period, or DueDate.BegOfPeriod if payments are due at the beginning of the period. If omitted, DueDate.EndOfPeriod is assumed.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)">
      <summary>Returns a Double specifying the interest rate per period for an annuity.</summary>
      <returns>Returns a Double specifying the interest rate per period for an annuity.</returns>
      <param name="NPer">Required. Double specifies the total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 * 12 (or 48) payment periods.</param>
      <param name="Pmt">Required. Double specifies the payment to be made each period. Payments usually contain principal and interest that doesn't change over the life of the annuity.</param>
      <param name="PV">Required. Double specifies the present value, or value today, of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</param>
      <param name="FV">Optional. Double specifies the future value or cash balance you want after you make the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.</param>
      <param name="Due">Optional. Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due. This argument must be either DueDate.EndOfPeriod if payments are due at the end of the payment period, or DueDate.BegOfPeriod if payments are due at the beginning of the period. If omitted, DueDate.EndOfPeriod is assumed.</param>
      <param name="Guess">Optional. Double specifying value you estimate is returned by Rate. If omitted, <paramref name="Guess" /> is 0.1 (10 percent).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="NPer" /> &lt;= 0.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)">
      <summary>Returns a Double specifying the straight-line depreciation of an asset for a single period.</summary>
      <returns>Returns a Double specifying the straight-line depreciation of an asset for a single period.</returns>
      <param name="Cost">Required. Double specifying initial cost of the asset.</param>
      <param name="Salvage">Required. Double specifying value of the asset at the end of its useful life.</param>
      <param name="Life">Required. Double specifying length of the useful life of the asset.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Life" /> = 0.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)">
      <summary>Returns a Double specifying the sum-of-years digits depreciation of an asset for a specified period.</summary>
      <returns>Returns a Double specifying the sum-of-years digits depreciation of an asset for a specified period.</returns>
      <param name="Cost">Required. Double specifying the initial cost of the asset.</param>
      <param name="Salvage">Required. Double specifying the value of the asset at the end of its useful life.</param>
      <param name="Life">Required. Double specifying the length of the useful life of the asset.</param>
      <param name="Period">Required. Double specifying the period for which asset depreciation is calculated.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &gt; <paramref name="Life" />, or <paramref name="Period" /> &lt;=0.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstDayOfWeek">
      <summary>Indicates the first day of the week to use when calling date-related functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.System">
      <summary>The first day of the week as specified in your system settings This member is equivalent to the Visual Basic constant vbUseSystemDayOfWeek.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday">
      <summary>Sunday (default) This member is equivalent to the Visual Basic constant vbSunday.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Monday">
      <summary>Monday This member is equivalent to the Visual Basic constant vbMonday.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Tuesday">
      <summary>Tuesday This member is equivalent to the Visual Basic constant vbTuesday.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Wednesday">
      <summary>Wednesday This member is equivalent to the Visual Basic constant vbWednesday.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Thursday">
      <summary>Thursday This member is equivalent to the Visual Basic constant vbThursday.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Friday">
      <summary>Friday This member is equivalent to the Visual Basic constant vbFriday.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Saturday">
      <summary>Saturday This member is equivalent to the Visual Basic constant vbSaturday.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstWeekOfYear">
      <summary>Indicates the first week of the year to use when calling date-related functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.System">
      <summary>The weekspecified in your system settings as the first week of the year. This member is equivalent to the Visual Basic constant vbUseSystem.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1">
      <summary>The week in which January 1 occurs (default). This member is equivalent to the Visual Basic constant vbFirstJan1.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFourDays">
      <summary>The first week that has at least four days in the new year. This member is equivalent to the Visual Basic constant vbFirstFourDays.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFullWeek">
      <summary>The first full week of the year. This member is equivalent to the Visual Basic constant vbFirstFullWeek.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Globals">
      <summary>The Globals module contains script engine functions. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Globals.ScriptEngine">
      <summary>Returns a String representing the runtime currently in use.</summary>
      <returns>Returns a String representing the runtime currently in use.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Globals.ScriptEngineBuildVersion">
      <summary>Returns an Integer containing the build version number of the runtime currently in use.</summary>
      <returns>Returns an Integer containing the build version number of the runtime currently in use.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Globals.ScriptEngineMajorVersion">
      <summary>Returns an Integer containing the major version number of the runtime currently in use.</summary>
      <returns>Returns an Integer containing the major version number of the runtime currently in use.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Globals.ScriptEngineMinorVersion">
      <summary>Returns an Integer containing the minor version number of the runtime currently in use.</summary>
      <returns>Returns an Integer containing the minor version number of the runtime currently in use.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.HideModuleNameAttribute">
      <summary>The HideModuleNameAttribute attribute, when applied to a module, allows the module members to be accessed using only the qualification needed for the module.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.HideModuleNameAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.HideModuleNameAttribute" /> attribute. </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Information">
      <summary>The Information module contains the procedures used to return, test for, or verify information. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.Erl">
      <summary>Returns an integer indicating the line number of the last executed statement. Read-only.</summary>
      <returns>Returns an integer indicating the line number of the last executed statement. Read-only.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.Err">
      <summary>Contains information about run-time errors.</summary>
      <returns>Contains information about run-time errors.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
      <summary>Returns a Boolean value indicating whether a variable points to an array.</summary>
      <returns>Returns a Boolean value indicating whether a variable points to an array.</returns>
      <param name="VarName">Required. Object variable.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
      <summary>Returns a Boolean value indicating whether an expression represents a valid Date value.</summary>
      <returns>Returns a Boolean value indicating whether an expression represents a valid Date value.</returns>
      <param name="Expression">Required. Object expression.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
      <summary>Returns a Boolean value indicating whether an expression evaluates to the <see cref="T:System.DBNull" /> class.</summary>
      <returns>Returns a Boolean value indicating whether an expression evaluates to the <see cref="T:System.DBNull" /> class.</returns>
      <param name="Expression">Required. Object expression.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
      <summary>Returns a Boolean value indicating whether an expression is an exception type.</summary>
      <returns>Returns a Boolean value indicating whether an expression is an exception type.</returns>
      <param name="Expression">Required. Object expression.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
      <summary>Returns a Boolean value indicating whether an expression has no object assigned to it.</summary>
      <returns>Returns a Boolean value indicating whether an expression has no object assigned to it.</returns>
      <param name="Expression">Required. Object expression.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
      <summary>Returns a Boolean value indicating whether an expression can be evaluated as a number.</summary>
      <returns>Returns a Boolean value indicating whether an expression can be evaluated as a number.</returns>
      <param name="Expression">Required. Object expression.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
      <summary>Returns a Boolean value indicating whether an expression evaluates to a reference type.</summary>
      <returns>Returns a Boolean value indicating whether an expression evaluates to a reference type.</returns>
      <param name="Expression">Required. Object expression.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
      <summary>Returns the lowest available subscript for the indicated dimension of an array.</summary>
      <returns>Integer. The lowest value the subscript for the specified dimension can contain. LBound always returns 0 as long as <paramref name="Array" /> has been initialized, even if it has no elements, for example if it is a zero-length string. If <paramref name="Array" /> is Nothing, LBound throws an <see cref="T:System.ArgumentNullException" />.</returns>
      <param name="Array">Required. Array of any data type. The array in which you want to find the lowest possible subscript of a dimension.</param>
      <param name="Rank">Optional. Integer. The dimension for which the lowest possible subscript is to be returned. Use 1 for the first dimension, 2 for the second, and so on. If <paramref name="Rank" /> is omitted, 1 is assumed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Array" /> is Nothing.</exception>
      <exception cref="T:System.RankException">
        <paramref name="Rank" /> &lt; 1 or <paramref name="Rank" /> is greater than the rank of <paramref name="Array" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
      <summary>Returns an Integer value representing the RGB color code corresponding to the specified color number.</summary>
      <returns>Returns an Integer value representing the RGB color code corresponding to the specified color number.</returns>
      <param name="Color">Required. A whole number in the range 0–15.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Color" /> is outside of range 0 to 15, inclusive.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
      <summary>Returns an Integer value representing an RGB color value from a set of red, green and blue color components.</summary>
      <returns>Returns an Integer value representing an RGB color value from a set of red, green and blue color components.</returns>
      <param name="Red">Required. Integer in the range 0–255, inclusive, that represents the intensity of the red component of the color.</param>
      <param name="Green">Required. Integer in the range 0–255, inclusive, that represents the intensity of the green component of the color.</param>
      <param name="Blue">Required. Integer in the range 0–255, inclusive, that represents the intensity of the blue component of the color.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Green" />, <paramref name="Blue" />, or <paramref name="Red" /> outside of range 0 and 255, inclusive.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
      <summary>Returns a String value containing the system data type name of a variable.</summary>
      <returns>Returns a String value containing the system data type name of a variable.</returns>
      <param name="VbName">Required. A String variable containing a Visual Basic type name.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
      <summary>Returns a String value containing data-type information about a variable.</summary>
      <returns>Returns a String value containing data-type information about a variable.</returns>
      <param name="VarName">Required. Object variable. If Option Strict is Off, you can pass a variable of any data type except a structure.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
      <summary>Returns the highest available subscript for the indicated dimension of an array.</summary>
      <returns>Integer. The highest value the subscript for the specified dimension can contain. If <paramref name="Array" /> has only one element, UBound returns 0. If <paramref name="Array" /> has no elements, for example if it is a zero-length string, UBound returns -1. </returns>
      <param name="Array">Required. Array of any data type. The array in which you want to find the highest possible subscript of a dimension.</param>
      <param name="Rank">Optional. Integer. The dimension for which the highest possible subscript is to be returned. Use 1 for the first dimension, 2 for the second, and so on. If <paramref name="Rank" /> is omitted, 1 is assumed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Array" /> is Nothing</exception>
      <exception cref="T:System.RankException">
        <paramref name="Rank" /> is less than 1 or <paramref name="Rank" /> is greater than the rank of <paramref name="Array" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
      <summary>Returns an Integer value containing the data type classification of a variable.</summary>
      <returns>Returns an Integer value containing the data type classification of a variable.</returns>
      <param name="VarName">Required. Object variable. If Option Strict is Off, you can pass a variable of any data type except a structure.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
      <summary>Returns a String value containing the Visual Basic data type name of a variable.</summary>
      <returns>Returns a String value containing the Visual Basic data type name of a variable.</returns>
      <param name="UrtName">Required. String variable containing a type name used by the common language runtime.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Interaction">
      <summary>The Interaction module contains procedures used to interact with objects, applications, and systems. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
      <summary>Activates an application that is already running.</summary>
      <param name="ProcessId">Integer specifying the Win32 process ID number assigned to this process. You can use the ID returned by the <see cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />, provided it is not zero.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="AllWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
      <summary>Activates an application that is already running.</summary>
      <param name="Title">String expression specifying the title in the title bar of the application you want to activate. You can use the title assigned to the application when it was launched.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="AllWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Beep">
      <summary>Sounds a tone through the computer's speaker.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary>Executes a method on an object, or sets or returns a property on an object.</summary>
      <returns>Executes a method on an object, or sets or returns a property on an object.</returns>
      <param name="ObjectRef">Required. Object. A pointer to the object exposing the property or method.</param>
      <param name="ProcName">Required. String. A string expression containing the name of the property or method on the object.</param>
      <param name="UseCallType">Required. An enumeration member of type <see cref="T:Microsoft.VisualBasic.CallType" /> representing the type of procedure being called. The value of CallType can be Method, Get, or Set.</param>
      <param name="Args">Optional. ParamArray. A parameter array containing the arguments to be passed to the property or method being called.</param>
      <exception cref="T:System.ArgumentException">Invalid <paramref name="UseCallType" /> value; must be Method, Get, or Set.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
      <summary>Selects and returns a value from a list of arguments.</summary>
      <returns>Selects and returns a value from a list of arguments.</returns>
      <param name="Index">Required. Double. Numeric expression that results in a value between 1 and the number of elements passed in the <paramref name="Choice" /> argument.</param>
      <param name="Choice">Required. Object parameter array. You can supply either a single variable or an expression that evaluates to the Object data type, to a list of Object variables or expressions separated by commas, or to a single-dimensional array of Object elements.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Command">
      <summary>Returns the argument portion of the command line used to start Visual Basic or an executable program developed with Visual Basic. The My feature provides greater productivity and performance than the Command function. For more information, see <see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />.</summary>
      <returns>Returns the argument portion of the command line used to start Visual Basic or an executable program developed with Visual Basic.The My feature provides greater productivity and performance than the Command function. For more information, see <see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="Path" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
      <summary>Creates and returns a reference to a COM object. CreateObject cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.</summary>
      <returns>Creates and returns a reference to a COM object. CreateObject cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.</returns>
      <param name="ProgId">Required. String. The program ID of the object to create.</param>
      <param name="ServerName">Optional. String. The name of the network server where the object will be created. If <paramref name="ServerName" /> is an empty string (""), the local computer is used.</param>
      <exception cref="T:System.Exception">
        <paramref name="ProgId" /> not found or not supplied-or-<paramref name="ServerName" /> fails the DnsValidateName function, most likely because it is longer than 63 characters or contains an invalid character.</exception>
      <exception cref="T:System.Exception">Server is unavailable</exception>
      <exception cref="T:System.IO.FileNotFoundException">No object of the specified type exists</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="COMPUTERNAME" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
      <summary>Deletes a section or key setting from an application's entry in the Windows registry. The My feature gives you greater productivity and performance in registry operations than the DeleteSetting function. For more information, see <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" /> .</summary>
      <param name="AppName">Required. String expression containing the name of the application or project to which the section or key setting applies.</param>
      <param name="Section">Required. String expression containing the name of the section from which the key setting is being deleted. If only <paramref name="AppName" /> and <paramref name="Section" /> are provided, the specified section is deleted along with all related key settings.</param>
      <param name="Key">Optional. String expression containing the name of the key setting being deleted.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Section" />, <paramref name="AppName" />, or <paramref name="Key" /> setting does not exist.</exception>
      <exception cref="T:System.ArgumentException">User is not logged in. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
      <summary>Returns the string associated with an operating-system environment variable. </summary>
      <returns>Returns the string associated with an operating-system environment variable. </returns>
      <param name="Expression">Required. Expression that evaluates either a string containing the name of an environment variable, or an integer corresponding to the numeric order of an environment string in the environment-string table.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" /> is missing.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
      <summary>Returns the string associated with an operating-system environment variable. </summary>
      <returns>Returns the string associated with an operating-system environment variable. </returns>
      <param name="Expression">Required. Expression that evaluates either a string containing the name of an environment variable, or an integer corresponding to the numeric order of an environment string in the environment-string table.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" /> is missing.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
      <summary>Returns a list of key settings and their respective values (originally created with SaveSetting) from an application's entry in the Windows registry. Using the My feature gives you greater productivity and performance in registry operations than GetAllSettings. For more information, see <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />.</summary>
      <returns>Returns a list of key settings and their respective values (originally created with SaveSetting) from an application's entry in the Windows registry.Using the My feature gives you greater productivity and performance in registry operations than GetAllSettings. For more information, see <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />.</returns>
      <param name="AppName">Required. String expression containing the name of the application or project whose key settings are requested.</param>
      <param name="Section">Required. String expression containing the name of the section whose key settings are requested. GetAllSettings returns an object that contains a two-dimensional array of strings. The strings contain all the key settings in the specified section, plus their corresponding values.</param>
      <exception cref="T:System.ArgumentException">User is not logged in. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
      <summary>Returns a reference to an object provided by a COM component.</summary>
      <returns>Returns a reference to an object provided by a COM component.</returns>
      <param name="PathName">Optional. String. The full path and name of the file containing the object to retrieve. If <paramref name="PathName" /> is omitted, <paramref name="Class" /> is required.</param>
      <param name="Class">Required if <paramref name="PathName" /> is not supplied. String. A string representing the class of the object. The <paramref name="Class" /> argument has the following syntax and parts:<paramref name="appname" />.<paramref name="objecttype" />ParameterDescription<paramref name="appname" />Required. String. The name of the application providing the object.<paramref name="objecttype" />Required. String. The type or class of object to create.</param>
      <exception cref="T:System.Exception">No object of the specified class type exists.</exception>
      <exception cref="T:System.IO.FileNotFoundException">No object with the specified path and file name exists.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
      <summary>Returns a key setting value from an application's entry in the Windows registry. The My feature gives you greater productivity and performance in registry operations than GetAllSettings. For more information, see <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />.</summary>
      <returns>Returns a key setting value from an application's entry in the Windows registry.The My feature gives you greater productivity and performance in registry operations than GetAllSettings. </returns>
      <param name="AppName">Required. String expression containing the name of the application or project whose key setting is requested.</param>
      <param name="Section">Required. String expression containing the name of the section in which the key setting is found.</param>
      <param name="Key">Required. String expression containing the name of the key setting to return.</param>
      <param name="Default">Optional. Expression containing the value to return if no value is set in the <paramref name="Key" /> setting. If omitted, <paramref name="Default" /> is assumed to be a zero-length string ("").</param>
      <exception cref="T:System.ArgumentException">One or more arguments are not String expressions, or user is not logged in.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
      <summary>Returns one of two objects, depending on the evaluation of an expression.</summary>
      <returns>Returns one of two objects, depending on the evaluation of an expression.</returns>
      <param name="Expression">Required. Boolean. The expression you want to evaluate.</param>
      <param name="TruePart">Required. Object. Returned if <paramref name="Expression" /> evaluates to True.</param>
      <param name="FalsePart">Required. Object. Returned if <paramref name="Expression" /> evaluates to False.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
      <summary>Displays a prompt in a dialog box, waits for the user to input text or click a button, and then returns a string containing the contents of the text box.</summary>
      <returns>Displays a prompt in a dialog box, waits for the user to input text or click a button, and then returns a string containing the contents of the text box.</returns>
      <param name="Prompt">Required String expression displayed as the message in the dialog box. The maximum length of <paramref name="Prompt" /> is approximately 1024 characters, depending on the width of the characters used. If <paramref name="Prompt" /> consists of more than one line, you can separate the lines using a carriage return character (Chr(13)), a line feed character (Chr(10)), or a carriage return/line feed combination (Chr(13) &amp; Chr(10)) between each line.</param>
      <param name="Title">Optional. String expression displayed in the title bar of the dialog box. If you omit <paramref name="Title" />, the application name is placed in the title bar.</param>
      <param name="DefaultResponse">Optional. String expression displayed in the text box as the default response if no other input is provided. If you omit <paramref name="DefaultResponse" />, the displayed text box is empty.</param>
      <param name="XPos">Optional. Numeric expression that specifies, in twips, the distance of the left edge of the dialog box from the left edge of the screen. If you omit <paramref name="XPos" />, the dialog box is centered horizontally.</param>
      <param name="YPos">Optional. Numeric expression that specifies, in twips, the distance of the upper edge of the dialog box from the top of the screen. If you omit <paramref name="YPos" />, the dialog box is positioned vertically approximately one-third of the way down the screen.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
      <summary>Displays a message in a dialog box, waits for the user to click a button, and then returns an integer indicating which button the user clicked.</summary>
      <returns>ConstantValueOK1Cancel2Abort3Retry4Ignore5Yes6No7</returns>
      <param name="Prompt">Required. String expression displayed as the message in the dialog box. The maximum length of <paramref name="Prompt" /> is approximately 1024 characters, depending on the width of the characters used. If <paramref name="Prompt" /> consists of more than one line, you can separate the lines using a carriage return character (Chr(13)), a line feed character (Chr(10)), or a carriage return/linefeed character combination (Chr(13) &amp; Chr(10)) between each line.</param>
      <param name="Buttons">Optional. Numeric expression that is the sum of values specifying the number and type of buttons to display, the icon style to use, the identity of the default button, and the modality of the message box. If you omit <paramref name="Buttons" />, the default value is zero.</param>
      <param name="Title">Optional. String expression displayed in the title bar of the dialog box. If you omit <paramref name="Title" />, the application name is placed in the title bar.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Prompt" /> is not a String expression, or <paramref name="Title" /> is invalid.</exception>
      <exception cref="T:System.InvalidOperationException">Process is not running in User Interactive mode.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">One or more parameters not a member of MsgBoxResult or MsgBoxStyle enumeration.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
      <summary>Returns a string representing the calculated range that contains a number.</summary>
      <returns>Returns a string representing the calculated range that contains a number.</returns>
      <param name="Number">Required. Long. Whole number that you want to locate within one of the calculated ranges.</param>
      <param name="Start">Required. Long. Whole number that indicates the start of the set of calculated ranges. <paramref name="Start" /> cannot be less than 0.</param>
      <param name="Stop">Required. Long. Whole number that indicates the end of the set of calculated ranges. <paramref name="Stop" /> cannot be less than or equal to <paramref name="Start" />.</param>
      <param name="Interval">Required. Long. Whole number that indicates the size of each range calculated between <paramref name="Start" /> and <paramref name="Stop" />. <paramref name="Interval" /> cannot be less than 1.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt; 0, <paramref name="Stop" /> &lt;= <paramref name="Start" />, or <paramref name="Interval" /> &lt; 1.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
      <summary>Saves or creates an application entry in the Windows registry. The My feature gives you greater productivity and performance in registry operations than SaveSetting. For more information, see <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />.</summary>
      <param name="AppName">Required. String expression containing the name of the application or project to which the setting applies.</param>
      <param name="Section">Required. String expression containing the name of the section in which the key setting is being saved.</param>
      <param name="Key">Required. String expression containing the name of the key setting being saved.</param>
      <param name="Setting">Required. Expression containing the value to which <paramref name="Key" /> is being set.</param>
      <exception cref="T:System.ArgumentException">Key registry could not be created, or user is not logged in.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
      <summary>Runs an executable program and returns an integer containing the program's process ID if it is still running.</summary>
      <returns>Runs an executable program and returns an integer containing the program's process ID if it is still running.</returns>
      <param name="PathName">Required. String. Name of the program to execute, together with any required arguments and command-line switches. <paramref name="PathName" /> can also include the drive and the directory path or folder.If you do not know the path to the program, you can use the <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles" /> to locate it. For example, you can call My.Computer.FileSystem.GetFiles("C:\", True, "testFile.txt"), which returns the full path of every file named testFile.txt anywhere on drive C:\.</param>
      <param name="Style">Optional. AppWinStyle. A value chosen from the <see cref="T:Microsoft.VisualBasic.AppWinStyle" /> specifying the style of the window in which the program is to run. If <paramref name="Style" /> is omitted, Shell uses AppWinStyle.MinimizedFocus, which starts the program minimized and with focus. </param>
      <param name="Wait">Optional. Boolean. A value indicating whether the Shell function should wait for completion of the program. If <paramref name="Wait" /> is omitted, Shell uses False.</param>
      <param name="Timeout">Optional. Integer. The number of milliseconds to wait for completion if <paramref name="Wait" /> is True. If <paramref name="Timeout" /> is omitted, Shell uses -1, which means there is no timeout and Shell does not return until the program finishes. Therefore, if you omit <paramref name="Timeout" /> or set it to -1, it is possible that Shell might never return control to your program.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Style" /> is not within range 0 through 9, inclusive.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Shell cannot find the <paramref name="PathName" /> file.</exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="PathName" /> is Nothing.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="AllWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
      <summary>Evaluates a list of expressions and returns an Object value corresponding to the first expression in the list that is True.</summary>
      <returns>Evaluates a list of expressions and returns an Object value corresponding to the first expression in the list that is True.</returns>
      <param name="VarExpr">Required. Object parameter array. Must have an even number of elements. You can supply a list of Object variables or expressions separated by commas, or a single-dimensional array of Object elements.</param>
      <exception cref="T:System.ArgumentException">Number of arguments is odd.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxResult">
      <summary>Indicates which button was pressed on a message box, returned by the MsgBox function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ok">
      <summary>OK button was pressed. This member is equivalent to the Visual Basic constant vbOK.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Cancel">
      <summary>Cancel button was pressed. This member is equivalent to the Visual Basic constant vbCancel.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Abort">
      <summary>Abort button was pressed. This member is equivalent to the Visual Basic constant vbAbort.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Retry">
      <summary>Retry button was pressed. This member is equivalent to the Visual Basic constant vbRetry.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ignore">
      <summary>Ignore button was pressed. This member is equivalent to the Visual Basic constant vbIgnore.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Yes">
      <summary>Yes button was pressed. This member is equivalent to the Visual Basic constant vbYes.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.No">
      <summary>No button was pressed. This member is equivalent to the Visual Basic constant vbNo.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.OK">
      <summary />
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxStyle">
      <summary>Indicates which buttons to display when calling the MsgBox function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkOnly">
      <summary>OK button only (default). This member is equivalent to the Visual Basic constant vbOKOnly.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkCancel">
      <summary>OK and Cancel buttons. This member is equivalent to the Visual Basic constant vbOKCancel.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.AbortRetryIgnore">
      <summary>Abort, Retry, and Ignore buttons. This member is equivalent to the Visual Basic constant vbAbortRetryIgnore.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNoCancel">
      <summary>Yes, No, and Cancel buttons. This member is equivalent to the Visual Basic constant vbYesNoCancel.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNo">
      <summary>Yes and No buttons. This member is equivalent to the Visual Basic constant vbYesNo.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.RetryCancel">
      <summary>Retry and Cancel buttons. This member is equivalent to the Visual Basic constant vbRetryCancel.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Critical">
      <summary>Critical message. This member is equivalent to the Visual Basic constant vbCritical.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Question">
      <summary>Warning query. This member is equivalent to the Visual Basic constant vbQuestion.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Exclamation">
      <summary>Warning message. This member is equivalent to the Visual Basic constant vbExclamation.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Information">
      <summary>Information message. This member is equivalent to the Visual Basic constant vbInformation.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton1">
      <summary>First button is default. This member is equivalent to the Visual Basic constant vbDefaultButton1.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton2">
      <summary>Second button is default. This member is equivalent to the Visual Basic constant vbDefaultButton2.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton3">
      <summary>Third button is default. This member is equivalent to the Visual Basic constant vbDefaultButton3.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.ApplicationModal">
      <summary>Application modal message box. This member is equivalent to the Visual Basic constant vbApplicationModal.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.SystemModal">
      <summary>System modal message box. This member is equivalent to the Visual Basic constant vbSystemModal.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxHelp">
      <summary>Help text. This member is equivalent to the Visual Basic constant vbMsgBoxHelp.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRight">
      <summary>Right-aligned text. This member is equivalent to the Visual Basic constant vbMsgBoxRight.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRtlReading">
      <summary>Right-to-left reading text (Hebrew and Arabic systems). This member is equivalent to the Visual Basic constant vbMsgBoxRtlReading.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxSetForeground">
      <summary>Foreground message box window. This member is equivalent to the Visual Basic constant vbMsgBoxSetForeground.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OKOnly">
      <summary />
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OKCancel">
      <summary />
    </member>
    <member name="T:Microsoft.VisualBasic.MyGroupCollectionAttribute">
      <summary>This attribute supports My.Forms and My.WebServices in Visual Basic.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyGroupCollectionAttribute.#ctor(System.String,System.String,System.String,System.String)">
      <summary>This attribute supports My.Forms and My.WebServices in Visual Basic.</summary>
      <param name="typeToCollect">String. Initializes the <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName" /> property. The compiler generates accessor properties for classes that derive from this type.</param>
      <param name="createInstanceMethodName">String. Initializes the <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod" /> property. Specifies the method in the class that creates the type's instances.</param>
      <param name="disposeInstanceMethodName">String. Initializes the <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod" /> property. Specifies the method in the class that disposes of the type's instances.</param>
      <param name="defaultInstanceAlias">String. Initializes the <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias" /> property. Specifies the name of the property that returns the default instance of the class.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod">
      <summary>This property supports My in Visual Basic.</summary>
      <returns>Specifies the method in the class that creates the type's instances.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias">
      <summary>This property supports My in Visual Basic.</summary>
      <returns>Specifies the name of the property that returns the default instance of the class.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod">
      <summary>This property supports My in Visual Basic.</summary>
      <returns>Specifies the method in the class that disposes of the type's instances.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName">
      <summary>This property supports My in Visual Basic.</summary>
      <returns>Specifies the name of the type for which the compiler generates accessor properties.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenAccess">
      <summary>Indicates how to open a file when calling file-access functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Default">
      <summary>Read and write access permitted. This is the default.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Read">
      <summary>Read access permitted.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.ReadWrite">
      <summary>Read and write access permitted.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Write">
      <summary>Write access permitted.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenMode">
      <summary>Indicates how to open a file when calling file-access functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Input">
      <summary>File opened for read access.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Output">
      <summary>File opened for write access.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Random">
      <summary>File opened for random access.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Append">
      <summary>File opened to append to it. Default.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Binary">
      <summary>File opened for binary access.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenShare">
      <summary>Indicates how to open a file when calling file-access functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Default">
      <summary>LockReadWrite. This is the default.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Shared">
      <summary>Any process can read or write to the file.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockRead">
      <summary>Other processes cannot read the file.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockReadWrite">
      <summary>Other processes cannot read or write to the file.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockWrite">
      <summary>Other processes cannot write to the file.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.SpcInfo">
      <summary>This class supports the Visual Basic Print and PrintLine functions.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.SpcInfo.Count">
      <summary>This field supports the Visual Basic Print and PrintLine functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Strings">
      <summary>The Strings module contains procedures used to perform string operations. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
      <summary>Returns an Integer value representing the character code corresponding to a character.</summary>
      <returns>Returns an Integer value representing the character code corresponding to a character.</returns>
      <param name="String">Required. Any valid Char or String expression. If <paramref name="String" /> is a String expression, only the first character of the string is used for input. If <paramref name="String" /> is Nothing or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
      <summary>Returns an Integer value representing the character code corresponding to a character.</summary>
      <returns>Returns an Integer value representing the character code corresponding to a character.</returns>
      <param name="String">Required. Any valid Char or String expression. If <paramref name="String" /> is a String expression, only the first character of the string is used for input. If <paramref name="String" /> is Nothing or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
      <summary>Returns an Integer value representing the character code corresponding to a character.</summary>
      <returns>Returns an Integer value representing the character code corresponding to a character.</returns>
      <param name="String">Required. Any valid Char or String expression. If <paramref name="String" /> is a String expression, only the first character of the string is used for input. If <paramref name="String" /> is Nothing or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
      <summary>Returns an Integer value representing the character code corresponding to a character.</summary>
      <returns>Returns an Integer value representing the character code corresponding to a character.</returns>
      <param name="String">Required. Any valid Char or String expression. If <paramref name="String" /> is a String expression, only the first character of the string is used for input. If <paramref name="String" /> is Nothing or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
      <summary>Returns the character associated with the specified character code.</summary>
      <returns>Returns the character associated with the specified character code.</returns>
      <param name="CharCode">Required. An Integer expression representing the code point, or character code, for the character.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="CharCode" /> &lt; 0 or &gt; 255 for Chr.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
      <summary>Returns the character associated with the specified character code.</summary>
      <returns>Returns the character associated with the specified character code.</returns>
      <param name="CharCode">Required. An Integer expression representing the code point, or character code, for the character. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="CharCode" /> &lt; -32768 or &gt; 65535 for ChrW.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary>Returns a zero-based array containing a subset of a String array based on specified filter criteria.</summary>
      <returns>Returns a zero-based array containing a subset of a String array based on specified filter criteria.</returns>
      <param name="Source">Required. One-dimensional array of strings to be searched.</param>
      <param name="Match">Required. String to search for.</param>
      <param name="Include">Optional. Boolean value indicating whether to return substrings that include or exclude <paramref name="Match" />. If <paramref name="Include" /> is True, the Filter function returns the subset of the array that contains <paramref name="Match" /> as a substring. If <paramref name="Include" /> is False, the Filter function returns the subset of the array that does not contain <paramref name="Match" /> as a substring.</param>
      <param name="Compare">Optional. Numeric value indicating the kind of string comparison to use. See "Settings" for values.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Source" /> is Nothing or is not a one-dimensional array.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary>Returns a zero-based array containing a subset of a String array based on specified filter criteria.</summary>
      <returns>Returns a zero-based array containing a subset of a String array based on specified filter criteria.</returns>
      <param name="Source">Required. One-dimensional array of strings to be searched.</param>
      <param name="Match">Required. String to search for.</param>
      <param name="Include">Optional. Boolean value indicating whether to return substrings that include or exclude <paramref name="Match" />. If <paramref name="Include" /> is True, the Filter function returns the subset of the array that contains <paramref name="Match" /> as a substring. If <paramref name="Include" /> is False, the Filter function returns the subset of the array that does not contain <paramref name="Match" /> as a substring.</param>
      <param name="Compare">Optional. Numeric value indicating the kind of string comparison to use. See "Settings" for values.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Source" /> is Nothing or is not a one-dimensional array.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
      <summary>Returns a string formatted according to instructions contained in a format String expression.</summary>
      <returns>Returns a string formatted according to instructions contained in a format String expression.</returns>
      <param name="Expression">Required. Any valid expression.</param>
      <param name="Style">Optional. A valid named or user-defined format String expression.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary>Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.</summary>
      <returns>Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.</returns>
      <param name="Expression">Required. Expression to be formatted.</param>
      <param name="NumDigitsAfterDecimal">Optional. Numeric value indicating how many places are displayed to the right of the decimal. Default value is –1, which indicates that the computer's regional settings are used.</param>
      <param name="IncludeLeadingDigit">Optional. <see cref="T:Microsoft.VisualBasic.TriState" /> enumeration that indicates whether or not a leading zero is displayed for fractional values. See "Remarks" for values.</param>
      <param name="UseParensForNegativeNumbers">Optional. <see cref="T:Microsoft.VisualBasic.TriState" /> enumeration that indicates whether or not to place negative values within parentheses. See "Remarks" for values.</param>
      <param name="GroupDigits">Optional. <see cref="T:Microsoft.VisualBasic.TriState" /> enumeration that indicates whether or not numbers are grouped using the group delimiter specified in the computer's regional settings. See "Remarks" for values.</param>
      <exception cref="T:System.ArgumentException">Number of digits after decimal point is greater than 99.</exception>
      <exception cref="T:System.InvalidCastException">Type is not numeric.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
      <summary>Returns a string expression representing a date/time value.</summary>
      <returns>Returns a string expression representing a date/time value.</returns>
      <param name="Expression">Required. Date expression to be formatted.</param>
      <param name="NamedFormat">Optional. Numeric value that indicates the date/time format used. If omitted, DateFormat.GeneralDate is used.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="NamedFormat" /> setting is not valid.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary>Returns an expression formatted as a number.</summary>
      <returns>Returns an expression formatted as a number.</returns>
      <param name="Expression">Required. Expression to be formatted.</param>
      <param name="NumDigitsAfterDecimal">Optional. Numeric value indicating how many places are displayed to the right of the decimal. The default value is –1, which indicates that the computer's regional settings are used.</param>
      <param name="IncludeLeadingDigit">Optional. <see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether a leading 0 is displayed for fractional values. See "Settings" for values.</param>
      <param name="UseParensForNegativeNumbers">Optional. <see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether to place negative values within parentheses. See "Settings" for values.</param>
      <param name="GroupDigits">Optional. <see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings. See "Settings" for values.</param>
      <exception cref="T:System.InvalidCastException">Type is not numeric.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary>Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.</summary>
      <returns>Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.</returns>
      <param name="Expression">Required. Expression to be formatted.</param>
      <param name="NumDigitsAfterDecimal">Optional. Numeric value indicating how many places to the right of the decimal are displayed. Default value is –1, which indicates that the locale settings are used.</param>
      <param name="IncludeLeadingDigit">Optional. <see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not a leading zero displays for fractional values. See "Settings" for values.</param>
      <param name="UseParensForNegativeNumbers">Optional. <see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not to place negative values within parentheses. See "Settings" for values.</param>
      <param name="GroupDigits">Optional. <see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings. See "Settings" for values.</param>
      <exception cref="T:System.InvalidCastException">Type is not numeric.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
      <summary>Returns a Char value representing the character from the specified index in the supplied string.</summary>
      <returns>Char value representing the character from the specified index in the supplied string.</returns>
      <param name="str">Required. Any valid String expression.</param>
      <param name="Index">Required. Integer expression. The (1-based) index of the character in <paramref name="str" /> to be returned.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="str" /> is Nothing, <paramref name="Index" /> &lt; 1, or <paramref name="Index" /> is greater than index of last character of <paramref name="str" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Returns an integer specifying the start position of the first occurrence of one string within another.</summary>
      <returns>IfInStr returns<paramref name="String1" /> is zero length or Nothing0<paramref name="String2" /> is zero length or Nothing<paramref name="start" /><paramref name="String2" /> is not found0<paramref name="String2" /> is found within <paramref name="String1" />Position where match begins<paramref name="Start" /> &gt; <paramref name="String2" />0</returns>
      <param name="Start">Optional. Numeric expression that sets the starting position for each search. If omitted, search begins at the first character position. The start index is 1-based.</param>
      <param name="String1">Required. String expression being searched.</param>
      <param name="String2">Required. String expression sought.</param>
      <param name="Compare">Optional. Specifies the type of string comparison. If <paramref name="Compare" /> is omitted, the Option Compare setting determines the type of comparison. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt; 1.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Returns an integer specifying the start position of the first occurrence of one string within another.</summary>
      <returns>IfInStr returns<paramref name="String1" /> is zero length or Nothing0<paramref name="String2" /> is zero length or Nothing<paramref name="start" /><paramref name="String2" /> is not found0<paramref name="String2" /> is found within <paramref name="String1" />Position where match begins<paramref name="Start" /> &gt; <paramref name="String2" />0</returns>
      <param name="String1">Required. String expression being searched.</param>
      <param name="String2">Required. String expression sought.</param>
      <param name="Compare">Optional. Specifies the type of string comparison. If <paramref name="Compare" /> is omitted, the Option Compare setting determines the type of comparison. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt; 1.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary>Returns the position of the first occurrence of one string within another, starting from the right side of the string.</summary>
      <returns>IfInStrRev returns<paramref name="StringCheck" /> is zero-length0<paramref name="StringMatch" /> is zero-length<paramref name="Start" /><paramref name="StringMatch" /> is not found0<paramref name="StringMatch" /> is found within <paramref name="StringCheck" />Position at which the first match is found, starting with the right side of the string.<paramref name="Start" /> is greater than length of <paramref name="StringMatch" />0</returns>
      <param name="StringCheck">Required. String expression being searched.</param>
      <param name="StringMatch">Required. String expression being searched for.</param>
      <param name="Start">Optional. Numeric expression setting the one-based starting position for each search, starting from the left side of the string. If <paramref name="Start" /> is omitted then –1 is used, meaning the search begins at the last character position. Search then proceeds from right to left.</param>
      <param name="Compare">Optional. Numeric value indicating the kind of comparison to use when evaluating substrings. If omitted, a binary comparison is performed. See Settings for values.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> = 0 or <paramref name="Start" /> &lt; -1.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
      <summary>Returns a string created by joining a number of substrings contained in an array.</summary>
      <returns>Returns a string created by joining a number of substrings contained in an array.</returns>
      <param name="SourceArray">Required. One-dimensional array containing substrings to be joined.</param>
      <param name="Delimiter">Optional. Any string, used to separate the substrings in the returned string. If omitted, the space character (" ") is used. If <paramref name="Delimiter" /> is a zero-length string ("") or Nothing, all items in the list are concatenated with no delimiters.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="SourceArray" /> is not one dimensional.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
      <summary>Returns a string created by joining a number of substrings contained in an array.</summary>
      <returns>Returns a string created by joining a number of substrings contained in an array.</returns>
      <param name="SourceArray">Required. One-dimensional array containing substrings to be joined.</param>
      <param name="Delimiter">Optional. Any string, used to separate the substrings in the returned string. If omitted, the space character (" ") is used. If <paramref name="Delimiter" /> is a zero-length string ("") or Nothing, all items in the list are concatenated with no delimiters.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="SourceArray" /> is not one dimensional.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
      <summary>Returns a string or character converted to lowercase.</summary>
      <returns>Returns a string or character converted to lowercase.</returns>
      <param name="Value">Required. Any valid String or Char expression.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
      <summary>Returns a string or character converted to lowercase.</summary>
      <returns>Returns a string or character converted to lowercase.</returns>
      <param name="Value">Required. Any valid String or Char expression.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
      <summary>Returns a string containing a specified number of characters from the left side of a string.</summary>
      <returns>Returns a string containing a specified number of characters from the left side of a string.</returns>
      <param name="str">Required. String expression from which the leftmost characters are returned.</param>
      <param name="Length">Required. Integer expression. Numeric expression indicating how many characters to return. If 0, a zero-length string ("") is returned. If greater than or equal to the number of characters in <paramref name="str" />, the entire string is returned.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Length" /> &lt; 0.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.String)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
      <summary>Returns a left-aligned string containing the specified string adjusted to the specified length.</summary>
      <returns>Returns a left-aligned string containing the specified string adjusted to the specified length.</returns>
      <param name="Source">Required. String expression. Name of string variable.</param>
      <param name="Length">Required. Integer expression. Length of returned string.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
      <summary>Returns a string containing a copy of a specified string with no leading spaces (LTrim), no trailing spaces (RTrim), or no leading or trailing spaces (Trim).</summary>
      <returns>Returns a string containing a copy of a specified string with no leading spaces (LTrim), no trailing spaces (RTrim), or no leading or trailing spaces (Trim).</returns>
      <param name="str">Required. Any valid String expression.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
      <summary>Returns a string containing a specified number of characters from a string.</summary>
      <returns>Returns a string containing a specified number of characters from a string.</returns>
      <param name="str">Required. String expression from which characters are returned.</param>
      <param name="Start">Required. Integer expression. Starting position of the characters to return. If <paramref name="Start" /> is greater than the number of characters in <paramref name="str" />, the Mid function returns a zero-length string (""). <paramref name="Start" /> is one based.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt;= 0 or <paramref name="Length" /> &lt; 0.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
      <summary>Returns a string containing a specified number of characters from a string.</summary>
      <returns>Returns a string containing a specified number of characters from a string.</returns>
      <param name="str">Required. String expression from which characters are returned.</param>
      <param name="Start">Required. Integer expression. Starting position of the characters to return. If <paramref name="Start" /> is greater than the number of characters in <paramref name="str" />, the Mid function returns a zero-length string (""). <paramref name="Start" /> is one based.</param>
      <param name="Length">Optional. Integer expression. Number of characters to return. If omitted or if there are fewer than <paramref name="Length" /> characters in the text (including the character at position <paramref name="Start" />), all characters from the start position to the end of the string are returned.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt;= 0 or <paramref name="Length" /> &lt; 0.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary>Returns a string in which a specified substring has been replaced with another substring a specified number of times.</summary>
      <returns>Replace returns the following values.IfReplace returns<paramref name="Find" /> is zero-length or NothingCopy of <paramref name="Expression" /><paramref name="Replace" /> is zero-lengthCopy of <paramref name="Expression" /> with no occurrences of <paramref name="Find" /><paramref name="Expression" /> is zero-length or Nothing, or <paramref name="Start" /> is greater than length of <paramref name="Expression" />Nothing<paramref name="Count" /> is 0Copy of <paramref name="Expression" /></returns>
      <param name="Expression">Required. String expression containing substring to replace.</param>
      <param name="Find">Required. Substring being searched for.</param>
      <param name="Replacement">Required. Replacement substring.</param>
      <param name="Start">Optional. Position within <paramref name="Expression" /> where substring search is to begin. If omitted, 1 is assumed.</param>
      <param name="Count">Optional. Number of substring substitutions to perform. If omitted, the default value is –1, which means "make all possible substitutions."</param>
      <param name="Compare">Optional. Numeric value indicating the kind of comparison to use when evaluating substrings. See Settings for values.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Count" /> &lt; -1 or <paramref name="Start" /> &lt;= 0.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
      <summary>Returns a string containing a specified number of characters from the right side of a string.</summary>
      <returns>Returns a string containing a specified number of characters from the right side of a string.</returns>
      <param name="str">Required. String expression from which the rightmost characters are returned.</param>
      <param name="Length">Required. Integer. Numeric expression indicating how many characters to return. If 0, a zero-length string ("") is returned. If greater than or equal to the number of characters in <paramref name="str" />, the entire string is returned.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Length" /> &lt; 0.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
      <summary>Returns a right-aligned string containing the specified string adjusted to the specified length. </summary>
      <returns>Returns a right-aligned string containing the specified string adjusted to the specified length. </returns>
      <param name="Source">Required. String expression. Name of string variable.</param>
      <param name="Length">Required. Integer expression. Length of returned string.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
      <summary>Returns a string containing a copy of a specified string with no leading spaces (LTrim), no trailing spaces (RTrim), or no leading or trailing spaces (Trim).</summary>
      <returns>Returns a string containing a copy of a specified string with no leading spaces (LTrim), no trailing spaces (RTrim), or no leading or trailing spaces (Trim).</returns>
      <param name="str">Required. Any valid String expression.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
      <summary>Returns a string consisting of the specified number of spaces.</summary>
      <returns>Returns a string consisting of the specified number of spaces.</returns>
      <param name="Number">Required. Integer expression. The number of spaces you want in the string.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> &lt; 0.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary>Returns a zero-based, one-dimensional array containing a specified number of substrings.</summary>
      <returns>String array. If <paramref name="Expression" /> is a zero-length string (""), Split returns a single-element array containing a zero-length string. If <paramref name="Delimiter" /> is a zero-length string, or if it does not appear anywhere in <paramref name="Expression" />, Split returns a single-element array containing the entire <paramref name="Expression" /> string.</returns>
      <param name="Expression">Required. String expression containing substrings and delimiters.</param>
      <param name="Delimiter">Optional. Any single character used to identify substring limits. If <paramref name="Delimiter" /> is omitted, the space character (" ") is assumed to be the delimiter.</param>
      <param name="Limit">Optional. Maximum number of substrings into which the input string should be split. The default, –1, indicates that the input string should be split at every occurrence of the <paramref name="Delimiter" /> string.</param>
      <param name="Compare">Optional. Numeric value indicating the comparison to use when evaluating substrings. See "Settings" for values.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Returns -1, 0, or 1, based on the result of a string comparison. </summary>
      <returns>The StrComp function has the following return values.IfStrComp returns<paramref name="String1" /> sorts ahead of <paramref name="String2" />-1<paramref name="String1" /> is equal to <paramref name="String2" /> 0<paramref name="String1" /> sorts after <paramref name="String2" /> 1</returns>
      <param name="String1">Required. Any valid String expression.</param>
      <param name="String2">Required. Any valid String expression.</param>
      <param name="Compare">Optional. Specifies the type of string comparison. If <paramref name="Compare" /> is omitted, the Option Compare setting determines the type of comparison.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Compare" /> value is not valid.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
      <summary>Returns a string converted as specified.</summary>
      <returns>Returns a string converted as specified.</returns>
      <param name="str">Required. String expression to be converted.</param>
      <param name="Conversion">Required. <see cref="T:Microsoft.VisualBasic.VbStrConv" /> member. The enumeration value specifying the type of conversion to perform.</param>
      <param name="LocaleID">Optional. The LocaleID value, if different from the system LocaleID value. (The system LocaleID value is the default.)</param>
      <exception cref="T:System.ArgumentException">Unsupported <paramref name="LocaleID" />, <paramref name="Conversion" /> &lt; 0 or &gt; 2048, or unsupported conversion for specified locale.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
      <summary>Returns a string or object consisting of the specified character repeated the specified number of times.</summary>
      <returns>Returns a string or object consisting of the specified character repeated the specified number of times.</returns>
      <param name="Number">Required. Integer expression. The length to the string to be returned.</param>
      <param name="Character">Required. Any valid Char, String, or Object expression. Only the first character of the expression will be used. If Character is of type Object, it must contain either a Char or a String value. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is less than 0 or <paramref name="Character" /> type is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Character" /> is Nothing.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
      <summary>Returns a string or object consisting of the specified character repeated the specified number of times.</summary>
      <returns>Returns a string or object consisting of the specified character repeated the specified number of times.</returns>
      <param name="Number">Required. Integer expression. The length to the string to be returned.</param>
      <param name="Character">Required. Any valid Char, String, or Object expression. Only the first character of the expression will be used. If Character is of type Object, it must contain either a Char or a String value. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is less than 0 or <paramref name="Character" /> type is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Character" /> is Nothing.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
      <summary>Returns a string or object consisting of the specified character repeated the specified number of times.</summary>
      <returns>Returns a string or object consisting of the specified character repeated the specified number of times.</returns>
      <param name="Number">Required. Integer expression. The length to the string to be returned.</param>
      <param name="Character">Required. Any valid Char, String, or Object expression. Only the first character of the expression will be used. If Character is of type Object, it must contain either a Char or a String value. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is less than 0 or <paramref name="Character" /> type is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Character" /> is Nothing.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)">
      <summary>Returns a string in which the character order of a specified string is reversed.</summary>
      <returns>Returns a string in which the character order of a specified string is reversed.</returns>
      <param name="Expression">Required. String expression whose characters are to be reversed. If <paramref name="Expression" /> is a zero-length string (""), a zero-length string is returned.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
      <summary>Returns a string containing a copy of a specified string with no leading spaces (LTrim), no trailing spaces (RTrim), or no leading or trailing spaces (Trim).</summary>
      <returns>Returns a string containing a copy of a specified string with no leading spaces (LTrim), no trailing spaces (RTrim), or no leading or trailing spaces (Trim).</returns>
      <param name="str">Required. Any valid String expression.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
      <summary>Returns a string or character containing the specified string converted to uppercase.</summary>
      <returns>Returns a string or character containing the specified string converted to uppercase.</returns>
      <param name="Value">Required. Any valid String or Char expression.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
      <summary>Returns a string or character containing the specified string converted to uppercase.</summary>
      <returns>Returns a string or character containing the specified string converted to uppercase.</returns>
      <param name="Value">Required. Any valid String or Char expression.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.TabInfo">
      <summary>This class supports the Visual Basic Print and PrintLine functions.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.TabInfo.Column">
      <summary>This field supports the Visual Basic Print and PrintLine functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.TriState">
      <summary>Indicates a Boolean value or whether the default should be used when calling number-formatting functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.False">
      <summary>False. The numeric value of this member is 0.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.True">
      <summary>True. The numeric value of this member is -1.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.UseDefault">
      <summary>Default setting. The numeric value of this member is -2.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VariantType">
      <summary>Indicates the type of a variant object, returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Empty">
      <summary>Null reference. This member is equivalent to the Visual Basic constant vbEmpty.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Null">
      <summary>Null object. This member is equivalent to the Visual Basic constant vbNull.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Short">
      <summary>Short. (-32,768 through 32,767.)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Integer">
      <summary>Integer. (-2,147,483,648 through 2,147,483,647.) This member is equivalent to the Visual Basic constant vbInteger.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Single">
      <summary>Single. (-3.402823E+38 through -1.401298E-45 for negative values; 1.401298E-45 through 3.402823E+38 for positive values.) This member is equivalent to the Visual Basic constant vbSingle.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Double">
      <summary>Double. (-1.79769313486231E+308 through -4.94065645841247E-324 for negative values; 4.94065645841247E-324 through 1.79769313486231E+308 for positive values.) This member is equivalent to the Visual Basic constant vbDouble.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Currency">
      <summary>Currency. This member is equivalent to the Visual Basic constant vbCurrency.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Date">
      <summary>Date. (0:00:00 on January 1, 0001 through 11:59:59 PM on December 31, 9999.) This member is equivalent to the Visual Basic constant vbDate.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.String">
      <summary>String. (0 to approximately 2 billion Unicode characters.) This member is equivalent to the Visual Basic constant vbString.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Object">
      <summary>Any type can be stored in a variable of type Object. This member is equivalent to the Visual Basic constant vbObject.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Error">
      <summary>
        <see cref="T:System.Exception" />
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Boolean">
      <summary>Boolean. (True or False.) This member is equivalent to the Visual Basic constant vbBoolean.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Variant">
      <summary>Variant. This member is equivalent to the Visual Basic constant vbVariant.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.DataObject">
      <summary>DataObject.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Decimal">
      <summary>Decimal. (0 through +/-79,228,162,514,264,337,593,543,950,335 with no decimal point; 0 through +/-7.9228162514264337593543950335 with 28 places to the right of the decimal; smallest non-zero number is +/-0.0000000000000000000000000001.) This member is equivalent to the Visual Basic constant vbDecimal.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Byte">
      <summary>Byte. (0 through 255.) This member is equivalent to the Visual Basic constant vbByte.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Char">
      <summary>Char. (0 through 65535.) This member is equivalent to the Visual Basic constant vbChar.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Long">
      <summary>Long. (-9,223,372,036,854,775,808 through 9,223,372,036,854,775,807.) This member is equivalent to the Visual Basic constant vbLong.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.UserDefinedType">
      <summary>User-defined type. Each member of the structure has a range determined by its data type and independent of the ranges of the other members. This member is equivalent to the Visual Basic constant vbUserDefinedType.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Array">
      <summary>Array. This member is equivalent to the Visual Basic constant vbArray.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedArrayAttribute">
      <summary>Indicates that an array in a structure or non-local variable should be treated as a fixed-length array.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32)">
      <summary>Initializes the value of the Bounds property.</summary>
      <param name="UpperBound1">Initializes the value of upper field, which represents the size of the first dimension of the array.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32,System.Int32)">
      <summary>Initializes the value of the Bounds property.</summary>
      <param name="UpperBound1">Initializes the value of upper field, which represents the size of the first dimension of the array.</param>
      <param name="UpperBound2">Initializes the value of upper field, which represents the size of the second dimension of the array.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Bounds">
      <summary>Returns the bounds of the array.</summary>
      <returns>Contains an integer array that represents the bounds of the array.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Length">
      <summary>Returns the size of the array.</summary>
      <returns>Contains an integer that represents the number of elements in the array.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedStringAttribute">
      <summary>Indicates that a string should be treated as if it were fixed length.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedStringAttribute.#ctor(System.Int32)">
      <summary>Initializes the value of the SizeConst field.</summary>
      <param name="Length">The length of the fixed string.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedStringAttribute.Length">
      <summary>Gets the length of the string.</summary>
      <returns>Returns the length of the string.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.VBMath">
      <summary>The VbMath module contains procedures used to perform mathematical operations. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize">
      <summary>Initializes the random-number generator.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
      <summary>Initializes the random-number generator.</summary>
      <param name="Number">Optional. An Object or any valid numeric expression.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd">
      <summary>Returns a random number of type Single.</summary>
      <returns>The next random number in the sequence.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
      <summary>Returns a random number of type Single.</summary>
      <returns>If number is less than zero, Rnd generates the same number every time, using <paramref name="Number" /> as the seed. If number is greater than zero, Rnd generates the next random number in the sequence. If number is equal to zero, Rnd generates the most recently generated number. If number is not supplied, Rnd generates the next random number in the sequence.</returns>
      <param name="Number">Optional. A Single value or any valid Single expression.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.VbStrConv">
      <summary>Indicates which type of conversion to perform when calling the StrConv function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.None">
      <summary>Performs no conversion.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Uppercase">
      <summary>Converts the string to uppercase characters. This member is equivalent to the Visual Basic constant vbUpperCase.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Lowercase">
      <summary>Converts the string to lowercase characters. This member is equivalent to the Visual Basic constant vbLowerCase.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.ProperCase">
      <summary>Converts the first letter of every word in the string to uppercase. This member is equivalent to the Visual Basic constant vbProperCase.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Wide">
      <summary>Converts narrow (single-byte) characters in the string to wide (double-byte) characters. Applies to Asian locales. This member is equivalent to the Visual Basic constant vbWide.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Narrow">
      <summary>Converts wide (double-byte) characters in the string to narrow (single-byte) characters. Applies to Asian locales. This member is equivalent to the Visual Basic constant vbNarrow.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Katakana">
      <summary>Converts Hiragana characters in the string to Katakana characters. Applies to Japanese locale only. This member is equivalent to the Visual Basic constant vbKatakana.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Hiragana">
      <summary>Converts Katakana characters in the string to Hiragana characters. Applies to Japanese locale only. This member is equivalent to the Visual Basic constant vbHiragana.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.SimplifiedChinese">
      <summary>Converts the string to Simplified Chinese characters. This member is equivalent to the Visual Basic constant vbSimplifiedChinese.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.TraditionalChinese">
      <summary>Converts the string to Traditional Chinese characters. This member is equivalent to the Visual Basic constant vbTraditionalChinese.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.LinguisticCasing">
      <summary>Converts the string from file system rules for casing to linguistic rules. This member is equivalent to the Visual Basic constant vbLinguisticCasing.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.UpperCase">
      <summary />
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.LowerCase">
      <summary />
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase">
      <summary>Provides properties, methods, and events related to the current application.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture(System.String)">
      <summary>Changes the culture used by the current thread for string manipulation and for string formatting.</summary>
      <param name="cultureName">String. Name of the culture as a string. For a list of possible names, see <see cref="T:System.Globalization.CultureInfo" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cultureName" /> is Nothing.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cultureName" /> is not a valid culture name.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture(System.String)">
      <summary>Changes the culture that the current thread uses for retrieving culture-specific resources.</summary>
      <param name="cultureName">String. Name of the culture as a string. For a list of possible names, see <see cref="T:System.Globalization.CultureInfo" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cultureName" /> is Nothing.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cultureName" /> is not a valid culture name.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture">
      <summary>Gets the culture that the current thread uses for string manipulation and string formatting.</summary>
      <returns>A <see cref="T:System.Globalization.CultureInfo" /> object that represents the culture the current thread uses for string manipulation and string formatting.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.GetEnvironmentVariable(System.String)">
      <summary>Returns the value of the specified environment variable.</summary>
      <returns>A String containing the value of the environment variable with the name <paramref name="name" />.</returns>
      <param name="name">A String containing the name of the environment variable.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is Nothing.</exception>
      <exception cref="T:System.ArgumentException">The environment variable specified by <paramref name="name" /> does not exist.</exception>
      <exception cref="T:System.Security.SecurityException">The calling code does not have <see cref="T:System.Security.Permissions.EnvironmentPermission" /> with Read access.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info">
      <summary>Gets an object that provides properties for getting information about the application's assembly, such as the version number, description, and so on. </summary>
      <returns>The <see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> object for the current application.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Log">
      <summary>Gets an object that provides properties and methods for writing event and exception information to the application's log listeners. </summary>
      <returns>The <see cref="T:Microsoft.VisualBasic.Logging.Log" /> object for the current application.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture">
      <summary>Gets the culture that the current thread uses for retrieving culture-specific resources.</summary>
      <returns>A <see cref="T:System.Globalization.CultureInfo" /> object that represents the culture that the current thread uses for retrieving culture-specific resources.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo">
      <summary>Provides properties for getting the information about the application, such as the version number, description, loaded assemblies, and so on.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> class with the specified assembly information. </summary>
      <param name="currentAssembly">
        <see cref="T:System.Reflection.Assembly" />. The assembly for which to obtain the information.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName">
      <summary>Gets the name, without the extension, of the assembly file for the application.</summary>
      <returns>A String containing the file name.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName">
      <summary>Gets the company name associated with the application.</summary>
      <returns>A String that contains the company name associated with the application.</returns>
      <exception cref="T:System.InvalidOperationException">The assembly does not have an <see cref="T:System.Reflection.AssemblyCompanyAttribute" /> attribute.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright">
      <summary>Gets the copyright notice associated with the application.</summary>
      <returns>A String containing the copyright notice associated with the application.</returns>
      <exception cref="T:System.InvalidOperationException">The assembly does not have an <see cref="T:System.Reflection.AssemblyCopyrightAttribute" /> attribute.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description">
      <summary>Gets the description associated with the application.</summary>
      <returns>A String containing the description associated with the application.</returns>
      <exception cref="T:System.InvalidOperationException">The assembly does not have an <see cref="T:System.Reflection.AssemblyDescriptionAttribute" /> attribute.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath">
      <summary>Gets the directory where the application is stored.</summary>
      <returns>A String that contains the directory where the application is stored.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies">
      <summary>Gets a collection of all assemblies loaded by the application.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Reflection.Assembly" /> containing all the assemblies loaded by the application.</returns>
      <exception cref="T:System.AppDomainUnloadedException">The application domain is not loaded.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName">
      <summary>Gets the product name associated with the application.</summary>
      <returns>A String containing the product name associated with the application.</returns>
      <exception cref="T:System.InvalidOperationException">The assembly does not have an <see cref="T:System.Reflection.AssemblyProductAttribute" /> attribute.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace">
      <summary>Gets the current stack-trace information.</summary>
      <returns>A String containing the current stack-trace information. The return value can be <see cref="F:System.String.Empty" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The requested stack-trace information is out of range.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title">
      <summary>Gets the title associated with the application.</summary>
      <returns>A String containing the <see cref="T:System.Reflection.AssemblyTitleAttribute" /> associated with the application.</returns>
      <exception cref="T:System.InvalidOperationException">The assembly does not have an <see cref="T:System.Reflection.AssemblyTitleAttribute" /> attribute.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark">
      <summary>Gets the trademark notice associated with the application.</summary>
      <returns>A String containing the trademark notice associated with the application.</returns>
      <exception cref="T:System.InvalidOperationException">The assembly does not have an <see cref="T:System.Reflection.AssemblyTrademarkAttribute" /> attribute.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version">
      <summary>Gets the version number of the application.</summary>
      <returns>A <see cref="T:System.Version" /> object containing the version number of the application.</returns>
      <exception cref="T:System.Security.SecurityException">The application does not have sufficient permissions to access the assembly version.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet">
      <summary>Gets the amount of physical memory mapped to the process context.</summary>
      <returns>A Long containing the number of bytes of physical memory mapped to the process context.</returns>
      <exception cref="T:System.Security.SecurityException">A situation in which partial trust exists and the user lacks necessary permissions.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode">
      <summary>Indicates how a Visual Basic application authenticates the user for the My.User object.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows">
      <summary>The <see cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)" /> constructor initializes the principal for the application's main thread with the current user's Windows user information. </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.ApplicationDefined">
      <summary>The <see cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)" /> constructor does not initialize the principal for the application's main thread. The application needs to initialize the principal for the application's main thread.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRole">
      <summary>Indicates the type of role to check when calling the <see cref="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)" /> method.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.AccountOperator">
      <summary>Account operators manage the user accounts on a computer or domain.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.Administrator">
      <summary>Administrators have complete and unrestricted access to the computer or domain.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.BackupOperator">
      <summary>Backup operators can override security restrictions for the sole purpose of backing up or restoring files.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.Guest">
      <summary>Guests are more restricted than users.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.PowerUser">
      <summary>Power users possess most administrative permissions with some restrictions. Thus, power users can run legacy applications, in addition to certified applications.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.PrintOperator">
      <summary>Print operators can take control of a printer.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.Replicator">
      <summary>Replicators support file replication in a domain.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.SystemOperator">
      <summary>System operators manage a particular computer.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.User">
      <summary>Users are prevented from making accidental or intentional system-wide changes. Thus, users can run certified applications, but not most legacy applications.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter">
      <summary>Provides a type converter to convert <see cref="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRole" /> enumeration values to <see cref="T:System.Security.Principal.WindowsBuiltInRole" /> enumeration values.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value indicating whether this converter can convert an object to the given destination type using the context.</summary>
      <returns>A <see cref="T:System.Boolean" /> object that indicates whether this converter can perform the conversion.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that provides a format context. </param>
      <param name="destinationType">A <see cref="T:System.Type" /> object that represents the type you wish to convert to. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the given object to another type.</summary>
      <returns>The converted object.</returns>
      <param name="context">A formatter context. </param>
      <param name="culture">The culture into which <paramref name="value" /> will be converted.</param>
      <param name="value">The object to convert. </param>
      <param name="destinationType">The type to convert the object to. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> is Nothing.</exception>
      <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException">
      <summary>This exception is thrown when a subsequent instance of a single-instance application is unable to connect to the first application instance.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" /> class with a specified error message.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">A <see cref="T:System.String" /> object describing the error.</param>
      <param name="inner">The <see cref="T:System.Exception" /> object that is the cause of the current exception. If the <see cref="P:System.Exception.InnerException" /> parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a Catch block that handles the inner exception.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase">
      <summary>Provides properties, methods, and events related to the current application.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" /> class. </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs">
      <summary>Gets a collection containing the command-line arguments as strings for the current application.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of String, containing the command-line arguments as strings for the current application.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment">
      <summary>Gets the current application's ClickOnce deployment object, which provides support for updating the current deployment programmatically and support for the on-demand download of files.</summary>
      <returns>Returns the <see cref="T:System.Deployment.Application.ApplicationDeployment" /> object for the application's ClickOnce deployment.</returns>
      <exception cref="T:System.Deployment.Application.InvalidDeploymentException">The application is not deployed as a ClickOnce application.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine">
      <summary>Sets the values to use as the current application's command-line arguments.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of String, containing the strings to use as the command-line arguments for the current application.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.IsNetworkDeployed">
      <summary>Gets a Boolean that represents whether the application was deployed from a network using ClickOnce.</summary>
      <returns>A Boolean that represents whether the application was deployed from a network. The value is True if the current application was deployed from a network; otherwise the value is False.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException">
      <summary>This exception is thrown by the Visual Basic Application Model when the <see cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm" /> property has not been set.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException" /> class with a specified error message.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">A <see cref="T:System.String" /> object describing the error.</param>
      <param name="inner">The <see cref="T:System.Exception" /> object that is the cause of the current exception. If the <see cref="P:System.Exception.InnerException" /> parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler">
      <summary>Represents the method that will handle the My.Application.Shutdown event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.EventArgs" /> object that contains the event data. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ShutdownMode">
      <summary>Indicates which condition should cause a Windows Forms application to shut down.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses">
      <summary>Shut down when the main form closes.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterAllFormsClose">
      <summary>Shut down only after the last form closes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs">
      <summary>Provides data for the My.Application.Startup event. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" /> class.</summary>
      <param name="args">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> object that contains the command-line arguments of the application.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine">
      <summary>Gets the command-line arguments of the application.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> object that contains the command-line arguments of the application.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupEventHandler">
      <summary>Represents the method that will handle the My.Application.Startup event. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" /> object that contains the event data.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs">
      <summary>Provides data for the My.Application.StartupNextInstance event. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String},System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" /> class.</summary>
      <param name="args">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> object that contains the command-line arguments of the subsequent application instance.</param>
      <param name="bringToForegroundFlag">A <see cref="T:System.Boolean" /> that indicates whether the first application instance should be brought to the foreground upon exiting the exception handler.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground">
      <summary>Indicates whether the first application instance should be brought to the foreground upon exiting the exception handler.</summary>
      <returns>A <see cref="T:System.Boolean" /> that indicates whether the first application instance should be brought to the foreground upon exiting the exception handler.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.CommandLine">
      <summary>Gets the command-line arguments of the subsequent application instance.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> object that contains the command-line arguments of the subsequent application instance.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler">
      <summary>Represents the method that will handle the My.Application.StartupNextInstance event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" /> object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs">
      <summary>Provides data for the My.Application.UnhandledException event. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.#ctor(System.Boolean,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" /> class.</summary>
      <param name="exitApplication">A <see cref="T:System.Boolean" /> that indicates whether the application should exit upon exiting the exception handler.</param>
      <param name="exception">The <see cref="T:System.Exception" /> that occurred. </param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication">
      <summary>Indicates whether the application should exit upon exiting the exception handler.</summary>
      <returns>A <see cref="T:System.Boolean" /> that indicates whether the application should exit upon exiting the exception handler.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler">
      <summary>Represents the method that will handle the My.Application.UnhandledException event. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" /> object that contains the event data.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.User">
      <summary>Provides access to the information about the current user.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.User" /> class. </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal">
      <summary>Gets or sets the current principal (for role-based security).</summary>
      <returns>A <see cref="T:System.Security.Principal.IPrincipal" /> value representing the security context.</returns>
      <exception cref="T:System.Security.SecurityException">The caller does not have the permission required to set the principal.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlPrincipal" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser">
      <summary>Sets the thread's current principal to the Windows user that started the application.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal">
      <summary>Gets or sets the principal object representing the current user.</summary>
      <returns>An <see cref="T:System.Security.Principal.IPrincipal" /> object representing the current user.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated">
      <summary>Gets a value that indicates whether the user has been authenticated.</summary>
      <returns>True if the user was authenticated; otherwise, False.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlPrincipal" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)">
      <summary>Determines whether the current user belongs to the specified role. </summary>
      <returns>True if the current user is a member of the specified role; otherwise, False.</returns>
      <param name="role">The built-in Windows role for which to check membership. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlPrincipal" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)">
      <summary>Determines whether the current user belongs to the specified role. </summary>
      <returns>True if the current user is a member of the specified role; otherwise, False.</returns>
      <param name="role">The name of the role for which to check membership. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlPrincipal" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.Name">
      <summary>Gets the name of the current user. </summary>
      <returns>String. The name of the current user.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlPrincipal" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.WebUser">
      <summary>Provides access to the information about the current user.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WebUser.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.WebUser" /> class. </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal">
      <summary>Gets or sets the principal object representing the current user.</summary>
      <returns>An <see cref="T:System.Security.Principal.IPrincipal" /> object representing the current user.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase">
      <summary>Provides properties, methods, and events related to the current application.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" /> class with the specified authentication mode.</summary>
      <param name="authenticationMode">
        <see cref="T:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode" />. Specifies the application's authentication mode.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext">
      <summary>Gets the <see cref="T:System.Windows.Forms.ApplicationContext" /> object for the current thread of a Windows Forms application.</summary>
      <returns>This property returns the <see cref="T:System.Windows.Forms.ApplicationContext" /> object for the current thread. That object contains contextual information about the thread.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents">
      <summary>Processes all Windows messages currently in the message queue.</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles">
      <summary>Determines whether this application will use the Windows XP styles for windows, controls, and so on.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether this application will use the XP Windows styles for windows, controls, and so on.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen">
      <summary>Hides the application's splash screen.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance">
      <summary>Determines whether this application is a single-instance application.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether this application is a single-instance application.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm">
      <summary>Gets or sets the main form for this application.</summary>
      <returns>Gets or sets the main form for this application.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime">
      <summary>Determines the minimum length of time, in milliseconds, for which the splash screen is displayed.</summary>
      <returns>Integer. The minimum length of time, in milliseconds, for which the splash screen is displayed.</returns>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged">
      <summary>Occurs when the network availability changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm">
      <summary>When overridden in a derived class, allows a designer to emit code that configures the splash screen and main form.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen">
      <summary>When overridden in a derived class, allows a designer to emit code that initializes the splash screen.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
      <summary>Sets the visual styles, text display styles, and current principal for the main application thread (if the application uses Windows authentication), and initializes the splash screen, if defined.</summary>
      <returns>A <see cref="T:System.Boolean" /> indicating if application startup should continue.</returns>
      <param name="commandLineArgs">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of String, containing the command-line arguments as strings for the current application.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun">
      <summary>Provides the starting point for when the main application is ready to start running, after the initialization is done.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown">
      <summary>When overridden in a derived class, allows for code to run when the application shuts down.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(Microsoft.VisualBasic.ApplicationServices.StartupEventArgs)">
      <summary>When overridden in a derived class, allows for code to run when the application starts.</summary>
      <returns>A <see cref="T:System.Boolean" /> that indicates if the application should continue starting up.</returns>
      <param name="eventArgs">
        <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" />. Contains the command-line arguments of the application and indicates whether the application startup should be canceled.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs)">
      <summary>When overridden in a derived class, allows for code to run when a subsequent instance of a single-instance application starts.</summary>
      <param name="eventArgs">
        <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" />. Contains the command-line arguments of the subsequent application instance and indicates whether the first application instance should be brought to the foreground upon exiting the exception handler.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs)">
      <summary>When overridden in a derived class, allows for code to run when an unhandled exception occurs in the application.</summary>
      <returns>A <see cref="T:System.Boolean" /> that indicates whether the <see cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException" /> event was raised.</returns>
      <param name="e">
        <see cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms">
      <summary>Gets a collection of all the application's open forms.</summary>
      <returns>A <see cref="T:System.Windows.Forms.FormCollection" /> object that contains all of the application's open forms.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="AllWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(System.String[])">
      <summary>Sets up and starts the Visual Basic Application model. </summary>
      <param name="commandLine">Array of type String. The command line from Sub Main.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal, RemotingConfiguration" />
        <IPermission class="System.Net.NetworkInformation.NetworkInformationPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Access="Read" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit">
      <summary>Determines whether the application saves the user settings on exit.</summary>
      <returns>Boolean. True indicates that the application saves the user settings on exit. Otherwise, the settings are not implicitly saved.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen">
      <summary>Determines if the application has a splash screen defined, and if it does, displays it.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown">
      <summary>Occurs when the application shuts down.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle">
      <summary>Determines what happens when the application's main form closes.</summary>
      <returns>A <see cref="T:Microsoft.VisualBasic.ApplicationServices.ShutdownMode" /> enumeration value, indicating what the application should do when the main form closes.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen">
      <summary>Gets or sets the splash screen for this application.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Form" /> object that the application uses as the splash screen.</returns>
      <exception cref="T:System.ArgumentNullException">The same value is assigned to this property and the <see cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm" />  property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup">
      <summary>Occurs when the application starts.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance">
      <summary>Occurs when attempting to start a single-instance application and the application is already active.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException">
      <summary>Occurs when the application encounters an unhandled exception.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering">
      <summary>When overridden in a derived class, this property allows a designer to specify the default text rendering engine for the application's forms.</summary>
      <returns>Boolean. A value of False indicates that the application should use the default text rendering engine for Visual Basic 2005. A value of True indicates that the application should use the text rendering engine for Visual Basic .NET 2002 and Visual Basic .NET 2003.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.BooleanType">
      <summary>This class has been deprecated as of Visual Basic 2005. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromObject(System.Object)">
      <summary>Returns a Boolean value that corresponds to the specified object.</summary>
      <returns>The Boolean value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. Object to convert to a Boolean value.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromString(System.String)">
      <summary>Returns a Boolean value that corresponds to the specified string. </summary>
      <returns>The Boolean value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Boolean value.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ByteType">
      <summary>This class has been deprecated as of Visual Basic 2005. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromObject(System.Object)">
      <summary>Returns a Byte value that corresponds to the specified object. </summary>
      <returns>The Byte value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. Object to convert to a Byte value.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromString(System.String)">
      <summary>Returns a Byte value that corresponds to the specified string. </summary>
      <returns>The Byte value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Byte value.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharArrayType">
      <summary>This class has been deprecated as of Visual Basic 2005. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromObject(System.Object)">
      <summary>Returns a CharArray value that corresponds to the specified object. </summary>
      <returns>The CharArray value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. Object to convert to a CharArray value.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromString(System.String)">
      <summary>Returns a CharArray value that corresponds to the specified string. </summary>
      <returns>The CharArray value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a CharArray value.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharType">
      <summary>This class has been deprecated as of Visual Basic 2005. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromObject(System.Object)">
      <summary>Returns a Char value that corresponds to the specified object. </summary>
      <returns>The Char value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. Object to convert to a Char value.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromString(System.String)">
      <summary>Returns a Char value that corresponds to the specified string. </summary>
      <returns>The Char value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Char value.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Conversions">
      <summary>Provides methods that perform various type conversions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ChangeType(System.Object,System.Type)">
      <summary>Converts an object to the specified type.</summary>
      <returns>An object of the specified target type.</returns>
      <param name="Expression">The object to convert.</param>
      <param name="TargetType">The type to which to convert the object.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FallbackUserDefinedConversion(System.Object,System.Type)">
      <summary>Executes a late-bound call to a user-defined conversion expression. This helper method is not meant to be called directly from your code.</summary>
      <returns>The result returned from the user-defined conversion expression.</returns>
      <param name="Expression">The user-defined conversion expression.</param>
      <param name="TargetType">The type to convert to.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharAndCount(System.Char,System.Int32)">
      <summary>Converts a <see cref="T:System.Char" /> value to a string, given a byte count.</summary>
      <returns>The string representation of the specified value.</returns>
      <param name="Value">The Char value to convert.</param>
      <param name="Count">The byte count of the Char value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArray(System.Char[])">
      <summary>Converts a <see cref="T:System.Char" /> array to a string.</summary>
      <returns>The string representation of the specified array.</returns>
      <param name="Value">The Char array to convert.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArraySubset(System.Char[],System.Int32,System.Int32)">
      <summary>Converts a subset of a <see cref="T:System.Char" /> array to a string.</summary>
      <returns>The string representation of the specified array from the start position to the specified length.</returns>
      <param name="Value">The Char array to convert.</param>
      <param name="StartIndex">Zero-based index of the start position.</param>
      <param name="Length">Length of the subset in bytes.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.Object)">
      <summary>Converts an object to a <see cref="T:System.Boolean" /> value.</summary>
      <returns>A Boolean value. Returns False if the object is null; otherwise, True.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.String)">
      <summary>Converts a string to a <see cref="T:System.Boolean" /> value.</summary>
      <returns>A Boolean value. Returns False if the string is null; otherwise, True.</returns>
      <param name="Value">The string to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.Object)">
      <summary>Converts an object to a <see cref="T:System.Byte" /> value.</summary>
      <returns>The Byte value of the object.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.String)">
      <summary>Converts a string to a <see cref="T:System.Byte" /> value.</summary>
      <returns>The Byte value of the string.</returns>
      <param name="Value">The string to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.Object)">
      <summary>Converts an object to a <see cref="T:System.Char" /> value.</summary>
      <returns>The Char value of the object.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.String)">
      <summary>Converts a string to a <see cref="T:System.Char" /> value.</summary>
      <returns>The Char value of the string.</returns>
      <param name="Value">The string to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.Object)">
      <summary>Converts an object to a one-dimensional <see cref="T:System.Char" /> array.</summary>
      <returns>A one-dimensional Char array.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.String)">
      <summary>Converts a string to a one-dimensional <see cref="T:System.Char" /> array.</summary>
      <returns>A one-dimensional Char array.</returns>
      <param name="Value">The string to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.Object)">
      <summary>Converts an object to a <see cref="T:System.DateTime" /> value.</summary>
      <returns>The DateTime value of the object.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.String)">
      <summary>Converts a string to a <see cref="T:System.DateTime" /> value.</summary>
      <returns>The DateTime value of the string.</returns>
      <param name="Value">The string to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Boolean)">
      <summary>Converts a <see cref="T:System.Boolean" /> value to a <see cref="T:System.Decimal" /> value.</summary>
      <returns>The Decimal value of the Boolean value.</returns>
      <param name="Value">A Boolean value to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Object)">
      <summary>Converts an object to a <see cref="T:System.Decimal" /> value.</summary>
      <returns>The Decimal value of the object.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.String)">
      <summary>Converts a string to a <see cref="T:System.Decimal" /> value.</summary>
      <returns>The Decimal value of the string.</returns>
      <param name="Value">The string to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.Object)">
      <summary>Converts an object to a <see cref="T:System.Double" /> value.</summary>
      <returns>The Double value of the object.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.String)">
      <summary>Converts a string to a <see cref="T:System.Double" /> value.</summary>
      <returns>The Double value of the string.</returns>
      <param name="Value">The string to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToGenericParameter``1(System.Object)">
      <summary>Converts an object to a generic type <paramref name="T" />.</summary>
      <returns>A structure or object of generic type <paramref name="T" />.</returns>
      <param name="Value">The object to convert.</param>
      <typeparam name="T">The type to convert <paramref name="Value" /> to.</typeparam>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.Object)">
      <summary>Converts an object to an integer value.</summary>
      <returns>The int value of the object.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.String)">
      <summary>Converts a string to an integer value.</summary>
      <returns>The int value of the string.</returns>
      <param name="Value">The string to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.Object)">
      <summary>Converts an object to a Long value.</summary>
      <returns>The Long value of the object.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.String)">
      <summary>Converts a string to a Long value.</summary>
      <returns>The Long value of the string.</returns>
      <param name="Value">The string to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.Object)">
      <summary>Converts an object to an <see cref="T:System.SByte" /> value.</summary>
      <returns>The SByte value of the object.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.String)">
      <summary>Converts a string to an <see cref="T:System.SByte" /> value.</summary>
      <returns>The SByte value of the string.</returns>
      <param name="Value">The string to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.Object)">
      <summary>Converts an object to a Short value.</summary>
      <returns>The Short value of the object.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.String)">
      <summary>Converts a string to a Short value.</summary>
      <returns>The Short value of the string.</returns>
      <param name="Value">The string to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.Object)">
      <summary>Converts an object to a <see cref="T:System.Single" /> value.</summary>
      <returns>The Single value of the object.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.String)">
      <summary>Converts a <see cref="T:System.String" /> to a <see cref="T:System.Single" /> value.</summary>
      <returns>The Single value of the string.</returns>
      <param name="Value">The string to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Boolean)">
      <summary>Converts a <see cref="T:System.Boolean" /> value to a <see cref="T:System.String" />.</summary>
      <returns>The String representation of the Boolean value.</returns>
      <param name="Value">The Boolean value to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Byte)">
      <summary>Converts a <see cref="T:System.Byte" /> value to a <see cref="T:System.String" />.</summary>
      <returns>The String representation of the Byte value.</returns>
      <param name="Value">The Byte value to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Char)">
      <summary>Converts a <see cref="T:System.Char" /> value to a <see cref="T:System.String" />.</summary>
      <returns>The String representation of the Char value.</returns>
      <param name="Value">The Char value to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.DateTime)">
      <summary>Converts a <see cref="T:System.DateTime" /> value to a <see cref="T:System.String" /> value.</summary>
      <returns>The String representation of the DateTime value.</returns>
      <param name="Value">The DateTime value to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal)">
      <summary>Converts a <see cref="T:System.Decimal" /> value to a <see cref="T:System.String" /> value.</summary>
      <returns>The String representation of the Decimal value.</returns>
      <param name="Value">The Decimal value to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary>Converts a <see cref="T:System.Decimal" /> value to a <see cref="T:System.String" /> value, using the specified number format.</summary>
      <returns>The String representation of the Decimal value.</returns>
      <param name="Value">The decimal value to convert.</param>
      <param name="NumberFormat">The number format to use, according to <see cref="T:System.Globalization.NumberFormatInfo" />.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double)">
      <summary>Converts a <see cref="T:System.Double" /> value to a <see cref="T:System.String" /> value.</summary>
      <returns>The String representation of the Double value.</returns>
      <param name="Value">The Double value to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double,System.Globalization.NumberFormatInfo)">
      <summary>Converts a <see cref="T:System.Double" /> value to a <see cref="T:System.String" /> value, using the specified number format.</summary>
      <returns>The String representation of the Double value.</returns>
      <param name="Value">The Double value to convert.</param>
      <param name="NumberFormat">The number format to use, according to <see cref="T:System.Globalization.NumberFormatInfo" />.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int16)">
      <summary>Converts a Short value to a <see cref="T:System.String" /> value.</summary>
      <returns>The String representation of the Short value.</returns>
      <param name="Value">The Short value to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int32)">
      <summary>Converts an integer value to a <see cref="T:System.String" /> value.</summary>
      <returns>The String representation of the int value.</returns>
      <param name="Value">The int value to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int64)">
      <summary>Converts a Long value to a <see cref="T:System.String" /> value.</summary>
      <returns>The String representation of the Long value.</returns>
      <param name="Value">The Long value to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Object)">
      <summary>Converts an object to a <see cref="T:System.String" /> value.</summary>
      <returns>The String representation of the object.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single)">
      <summary>Converts a <see cref="T:System.Single" /> value (a single-precision floating point number) to a <see cref="T:System.String" /> value.</summary>
      <returns>The String representation of the Single value.</returns>
      <param name="Value">The Single value to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single,System.Globalization.NumberFormatInfo)">
      <summary>Converts a <see cref="T:System.Single" /> value to a <see cref="T:System.String" /> value, using the specified number format.</summary>
      <returns>The String representation of the Single value.</returns>
      <param name="Value">The Single value to convert.</param>
      <param name="NumberFormat">The number format to use, according to <see cref="T:System.Globalization.NumberFormatInfo" />.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt32)">
      <summary>Converts a uint value to a <see cref="T:System.String" /> value.</summary>
      <returns>The String representation of the Uint value.</returns>
      <param name="Value">The Uint value to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt64)">
      <summary>Converts a Ulong value to a <see cref="T:System.String" /> value.</summary>
      <returns>The String representation of the Ulong value.</returns>
      <param name="Value">The Ulong value to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.Object)">
      <summary>Converts an object to a Uint value.</summary>
      <returns>The Uint value of the object.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.String)">
      <summary>Converts a string to a Uint value.</summary>
      <returns>The Uint value of the string.</returns>
      <param name="Value">The string to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.Object)">
      <summary>Converts an object to a Ulong value.</summary>
      <returns>The Ulong value of the object.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.String)">
      <summary>Converts a string to a Ulong value.</summary>
      <returns>The Ulong value of the string.</returns>
      <param name="Value">The string to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.Object)">
      <summary>Converts an object to a Ushort value.</summary>
      <returns>The Ushort value of the object.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.String)">
      <summary>Converts a string to a Ushort value.</summary>
      <returns>The Ushort value of the string.</returns>
      <param name="Value">The string to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DateType">
      <summary>This class has been deprecated as of Visual Basic 2005. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromObject(System.Object)">
      <summary>Returns a Date value that corresponds to the specified object. </summary>
      <returns>The Date value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. Object to convert to a Date value.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String)">
      <summary>Returns a Date value that corresponds to the specified string.</summary>
      <returns>The Date value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Date value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String,System.Globalization.CultureInfo)">
      <summary>Returns a Date value that corresponds to the specified string and culture information. </summary>
      <returns>The Date value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Date value.</param>
      <param name="culture">Required. A <see cref="T:System.Globalization.CultureInfo" /> object that defines how date values are formatted and displayed, depending on the culture.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DecimalType">
      <summary>This class has been deprecated as of Visual Basic 2005. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromBoolean(System.Boolean)">
      <summary>Returns a Decimal value that corresponds to the specified Boolean value. </summary>
      <returns>The Decimal value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. Boolean value to convert to a Decimal value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object)">
      <summary>Returns a Decimal value that corresponds to the specified object. </summary>
      <returns>The Decimal value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. Object to convert to a Decimal value.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary>Returns a Decimal value that corresponds to the specified object and number format information. </summary>
      <returns>The Decimal value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. Object to convert to a Decimal value.</param>
      <param name="NumberFormat">A <see cref="T:System.Globalization.NumberFormatInfo" /> object that defines how numeric values are formatted and displayed, depending on the culture.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String)">
      <summary>Returns a Decimal value that corresponds to the specified string. </summary>
      <returns>The Decimal value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Decimal value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Returns a Decimal value that corresponds to the specified string and number format information. </summary>
      <returns>The Decimal value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Decimal value.</param>
      <param name="NumberFormat">A <see cref="T:System.Globalization.NumberFormatInfo" /> object that defines how numeric values are formatted and displayed, depending on the culture.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Returns a Decimal value that corresponds to the specified string and number format information. </summary>
      <returns>The Decimal value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Decimal value.</param>
      <param name="NumberFormat">A <see cref="T:System.Globalization.NumberFormatInfo" /> object that defines how numeric values are formatted and displayed, depending on the culture.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute">
      <summary>When applied to a class, the compiler implicitly calls a component-initializing method from the default synthetic constructor.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute" /> attribute.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DoubleType">
      <summary>This class has been deprecated as of Visual Basic 2005. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object)">
      <summary>Returns a Double value that corresponds to the specified object. </summary>
      <returns>The Double value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Object to convert to a Double value.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary>Returns a Double value that corresponds to the specified object. </summary>
      <returns>The Double value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Object to convert to a Double value.</param>
      <param name="NumberFormat">A <see cref="T:System.Globalization.NumberFormatInfo" /> object that defines how numeric values are formatted and displayed, depending on the culture.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String)">
      <summary>Returns a Double value that corresponds to the specified string. </summary>
      <returns>The Double value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Double value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Returns a Double value that corresponds to the specified string and number format information. </summary>
      <returns>The Double value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Double value.</param>
      <param name="NumberFormat">A <see cref="T:System.Globalization.NumberFormatInfo" /> object that defines how numeric values are formatted and displayed, depending on the culture.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String)">
      <summary>Returns a Double value that corresponds to the specified string. </summary>
      <returns>The Double value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Double value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Returns a Double value that corresponds to the specified string and number format information. </summary>
      <returns>The Double value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Double value.</param>
      <param name="NumberFormat">A <see cref="T:System.Globalization.NumberFormatInfo" /> object that defines how numeric values are formatted and displayed, depending on the culture.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ExceptionUtils">
      <summary>Provides exception handling support for the Visual Basic runtime. This class is not intended to be used from your code.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.FlowControl">
      <summary>Provides services to the Visual Basic compiler for compiling For...Next and For Each loops.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.CheckForSyncLockOnValueType(System.Object)">
      <summary>Checks for a synchronization lock on the specified type.</summary>
      <param name="obj">The data type for which to check for synchronization lock.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachInArr(System.Array)">
      <summary>Gets the enumerator for an array being iterated over in a For Each loop.</summary>
      <returns>The enumerator for <paramref name="ary" />.</returns>
      <param name="ary">An array being iterated over in a For Each loop.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachInObj(System.Object)">
      <summary>Gets the enumerator for an object being iterated over in a For Each loop.</summary>
      <returns>The enumerator for <paramref name="obj" />.</returns>
      <param name="obj">An object being iterated over in a For Each loop.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachNextObj(System.Object@,System.Collections.IEnumerator)">
      <summary>Sets a reference to the next object in a For Each loop.</summary>
      <returns>True if <paramref name="obj" /> refers to the next object; False if there are no more objects and <paramref name="obj" /> is Nothing.</returns>
      <param name="obj">The range variable of the For Each loop.</param>
      <param name="enumerator">The <see cref="T:System.Collections.IEnumerator" /> of the object being iterated over in the For Each loop.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForLoopInitObj(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@)">
      <summary>Initializes a For...Next loop.</summary>
      <returns>False if the loop has terminated; otherwise, True.</returns>
      <param name="Counter">The loop counter variable.</param>
      <param name="Start">The initial value of the loop counter.</param>
      <param name="Limit">The value of the To option.</param>
      <param name="StepValue">The value of the Step option.</param>
      <param name="LoopForResult">An object that contains verified values for loop values.</param>
      <param name="CounterResult">The counter value for the next loop iteration.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckDec(System.Decimal,System.Decimal,System.Decimal)">
      <summary>Checks for valid values for the loop counter, Step, and To values.</summary>
      <returns>True if <paramref name="StepValue" /> is greater than zero and <paramref name="count" /> is less than or equal to <paramref name="limit" />, or if <paramref name="StepValue" /> is less than or equal to zero and <paramref name="count" /> is greater than or equal to <paramref name="limit" />; otherwise, False.</returns>
      <param name="count">Required. A Decimal value that represents the initial value passed for the loop counter variable.</param>
      <param name="limit">Required. A Decimal value that represents the value passed by using the To keyword.</param>
      <param name="StepValue">Required. A Decimal value that represents the value passed by using the Step keyword.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckObj(System.Object,System.Object,System.Object@)">
      <summary>Increments a For...Next loop.</summary>
      <returns>False if the loop has terminated; otherwise, True.</returns>
      <param name="Counter">The loop counter variable.</param>
      <param name="LoopObj">An object that contains verified values for loop values.</param>
      <param name="CounterResult">The counter value for the next loop iteration.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckR4(System.Single,System.Single,System.Single)">
      <summary>Checks for valid values for the loop counter, Step, and To values.</summary>
      <returns>True if <paramref name="StepValue" /> is greater than zero and <paramref name="count" /> is less than or equal to <paramref name="limit" />, or if <paramref name="StepValue" /> is less than or equal to zero and <paramref name="count" /> is greater than or equal to <paramref name="limit" />; otherwise, False.</returns>
      <param name="count">Required. A Single value that represents the initial value passed for the loop counter variable.</param>
      <param name="limit">Required. A Single value that represents the value passed by using the To keyword.</param>
      <param name="StepValue">Required. A Single value that represents the value passed by using the Step keyword.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckR8(System.Double,System.Double,System.Double)">
      <summary>Checks for valid values for the loop counter, Step, and To values.</summary>
      <returns>True if <paramref name="StepValue" /> is greater than zero and <paramref name="count" /> is less than or equal to <paramref name="limit" />, or if <paramref name="StepValue" /> is less than or equal to zero and <paramref name="count" /> is greater than or equal to <paramref name="limit" />; otherwise, False.</returns>
      <param name="count">Required. A Double value that represents the initial value passed for the loop counter variable.</param>
      <param name="limit">Required. A Double value that represents the value passed by using the To keyword.</param>
      <param name="StepValue">Required. A Double value that represents the value passed by using the Step keyword.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.HostServices">
      <summary>Returns a reference to and information about the current Visual Basic host window. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.HostServices.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.HostServices" /> class. </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.CompilerServices.HostServices.VBHost">
      <summary>Gets the current Visual Basic host object.</summary>
      <returns>A <see cref="P:Microsoft.VisualBasic.CompilerServices.HostServices.VBHost" /> object that returns a reference to and information about the current Visual Basic host window. </returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization">
      <summary>The Visual Basic compiler uses this class during static local initialization; it is not meant to be called directly from your code. An exception of this type is thrown if a static local variable fails to initialize.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization" /> class.</summary>
      <param name="message">A string representing the message to be sent.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization" /> class.</summary>
      <param name="message">A string representing the message to be sent.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IntegerType">
      <summary>This class has been deprecated as of Visual Basic 2005. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromObject(System.Object)">
      <summary>Returns an Integer value that corresponds to the specified object. </summary>
      <returns>The Integer value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. Object to convert to an Integer value.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromString(System.String)">
      <summary>Returns an Integer value that corresponds to the specified string. </summary>
      <returns>The Integer value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to an Integer value.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.InternalErrorException">
      <summary>The exception thrown for internal Visual Basic compiler errors. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.InternalErrorException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.InternalErrorException" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.InternalErrorException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.InternalErrorException" /> class, specifying an error message. </summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.InternalErrorException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.InternalErrorException" /> class, specifying an error message and an inner exception.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="innerException">The exception that is the cause of the current internal exception.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.InternalXmlHelper">
      <summary>Provides properties and methods that support Visual Basic XML literals. This class is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary>Gets or sets the value of an XML attribute. This property is not intended to be used from your code.</summary>
      <returns>The value of the XML attribute identified by the <paramref name="name" /> parameter from the first element in the supplied collection of XML elements. If the collection is empty, returns Nothing.</returns>
      <param name="source">A collection of XML elements to get an attribute value from or set an attribute value for.</param>
      <param name="name">The name of the XML attribute to get a value from or set a value for.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(System.Xml.Linq.XElement,System.Xml.Linq.XName)">
      <summary>Gets or sets the value of an XML attribute. This property is not intended to be used from your code.</summary>
      <returns>The value of the XML attribute identified by the <paramref name="name" /> parameter in the supplied XML element.</returns>
      <param name="source">An XML element to get an attribute value from or set an attribute value for.</param>
      <param name="name">The name of the XML attribute to get a value from or set a value for.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateAttribute(System.Xml.Linq.XName,System.Object)">
      <summary>Creates an XML attribute that has the supplied name and value. This method is not intended to be used from your code.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XAttribute" /> object that has the supplied name and value.</returns>
      <param name="name">The name of the XML attribute to create.</param>
      <param name="value">The value to assign to the created XML attribute. If <paramref name="value" /> is Nothing, this method returns Nothing.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateNamespaceAttribute(System.Xml.Linq.XName,System.Xml.Linq.XNamespace)">
      <summary>Creates an XML attribute that has the supplied name and namespace value. This method is not intended to be used from your code.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XAttribute" /> object that has the supplied name and namespace value.</returns>
      <param name="name">The name of the XML attribute to create.</param>
      <param name="ns">The namespace value to assign to the created XML attribute.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Collections.IEnumerable)">
      <summary>Removes XML namespace attributes from an XML element. This method is not intended to be used from your code.</summary>
      <returns>The supplied XML element with the specified XML namespace attributes removed.</returns>
      <param name="inScopePrefixes">The list of XML namespace prefixes for XML elements in the current scope.</param>
      <param name="inScopeNs">The list of XML namespaces for XML elements in the current scope.</param>
      <param name="attributes">The list of namespace attributes to remove from the XML element.</param>
      <param name="obj">The XML element to remove XML namespace attributes from.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Object)">
      <summary>Removes XML namespace attributes from an XML element. This method is not intended to be used from your code.</summary>
      <returns>The supplied XML element with the specified XML namespace attributes removed.</returns>
      <param name="inScopePrefixes">The list of XML namespace prefixes for XML elements in the current scope.</param>
      <param name="inScopeNs">The list of XML namespaces for XML elements in the current scope.</param>
      <param name="attributes">The list of namespace attributes to remove from the XML element.</param>
      <param name="obj">The XML element to remove XML namespace attributes from.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Xml.Linq.XElement)">
      <summary>Removes XML namespace attributes from an XML element. This method is not intended to be used from your code.</summary>
      <returns>The supplied XML element with the specified XML namespace attributes removed.</returns>
      <param name="inScopePrefixes">The list of XML namespace prefixes for XML elements in the current scope.</param>
      <param name="inScopeNs">The list of XML namespaces for XML elements in the current scope.</param>
      <param name="attributes">The list of namespace attributes to remove from the XML element.</param>
      <param name="e">The XML element to remove XML namespace attributes from.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.Value(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary>Gets or sets the value of an XML element. This property is not intended to be used from your code.</summary>
      <returns>The value of the first XML element in the supplied collection. If the collection is empty, returns Nothing.</returns>
      <param name="source">A collection of XML elements to get a value from or set a value for.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IVbHost">
      <summary>Represents a host window for Visual Basic. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IVbHost.GetParentWindow">
      <summary>Gets the host Window for the current Visual Basic environment.</summary>
      <returns>The host window for the current Visual Basic environment.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IVbHost.GetWindowTitle">
      <summary>Gets the title of the host window for the current Visual Basic environment.</summary>
      <returns>The title of the host window for the current Visual Basic environment.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LateBinding">
      <summary>This class has been deprecated since Visual Basic 2005. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary>Performs a late-bound call to an object method.</summary>
      <param name="o">The object to call a method on.</param>
      <param name="objType">The type of the object.</param>
      <param name="name">The method name of <paramref name="o" /> to call.</param>
      <param name="args">An array of parameter values to pass to the method.</param>
      <param name="paramnames">An array that contains the names of the parameters to which the values in the <paramref name="args" /> array are passed. </param>
      <param name="CopyBack">An array of Boolean values, where True indicates that the associated parameter is passed ByRef.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary>Returns a late-bound value from an object.</summary>
      <returns>If <paramref name="o" /> is an array, the value from <paramref name="o" /> at the location specified by <paramref name="args" />. If <paramref name="o" /> is an object, the return value of <paramref name="o" /> invoked by using the named parameters in <paramref name="paramnames" /> and their associated values in <paramref name="args" />.</returns>
      <param name="o">The object to return the value from.</param>
      <param name="objType">The type of the object.</param>
      <param name="name">The member name of <paramref name="o" /> to retrieve a value from.</param>
      <param name="args">An array of one or more index values that specify the location in <paramref name="o" /> if <paramref name="o" /> is a one-dimensional or multi-dimensional array, or argument values to pass to the object <paramref name="o" />.</param>
      <param name="paramnames">An array that contains the names of the parameters to which the values in the <paramref name="args" /> array are passed. </param>
      <param name="CopyBack">An array of Boolean values, where True indicates that the associated parameter is passed ByRef.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary>Returns a late-bound value from an object, using the specified index or parameters.</summary>
      <returns>If <paramref name="o" /> is an array, the value from <paramref name="o" /> at the location specified by <paramref name="args" />. If <paramref name="o" /> is an object, the return value of <paramref name="o" /> invoked by using the named parameters in <paramref name="paramnames" /> and their associated values in <paramref name="args" />.</returns>
      <param name="o">The object to return the value from.</param>
      <param name="args">An array of one or more index values that specify the location in <paramref name="o" /> if <paramref name="o" /> is a one-dimensional or multi-dimensional array, or argument values to pass to the object <paramref name="o" />.</param>
      <param name="paramnames">An array that contains the names of the parameters to which the values in the <paramref name="args" /> array are passed. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary>Sets a late-bound value of an object, using the specified parameters.</summary>
      <param name="o">The object to set the value for.</param>
      <param name="args">An array of one or more index values that specify the location in <paramref name="o" /> if <paramref name="o" /> is a one-dimensional or multi-dimensional array, or argument values to pass to the object <paramref name="o" />.</param>
      <param name="paramnames">An array that contains the names of the parameters to which the values in the <paramref name="args" /> array are passed. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>Sets a late-bound value of an object, using the specified parameters.</summary>
      <param name="o">The object to set the value for.</param>
      <param name="args">An array of one or more parameter values to pass to the object <paramref name="o" />.</param>
      <param name="paramnames">An array that contains the names of the parameters to which the values in the <paramref name="args" /> array are passed. </param>
      <param name="OptimisticSet">True to suppress the exception thrown when the set member is not found.</param>
      <param name="RValueBase">True to identify <paramref name="o" /> as the result of a late-bound expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[])">
      <summary>Sets a late-bound value of a member of an object, using the specified parameters.</summary>
      <param name="o">The object to set the member value for.</param>
      <param name="objType">The type of the object.</param>
      <param name="name">The member name to set.</param>
      <param name="args">An array of one or parameter values to pass to the member of <paramref name="o" />.</param>
      <param name="paramnames">An array that contains the names of the parameters to which the values in the <paramref name="args" /> array are passed. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>Sets a late-bound value of a member of an object, using the specified parameters.</summary>
      <param name="o">The object to set the member value for.</param>
      <param name="objType">The type of the object.</param>
      <param name="name">The member name to set.</param>
      <param name="args">An array of one or more parameter values to pass to the member of <paramref name="o" />.</param>
      <param name="paramnames">An array that contains the names of the parameters to which the values in the <paramref name="args" /> array are passed. </param>
      <param name="OptimisticSet">True to suppress the exception thrown when the set member is not found.</param>
      <param name="RValueBase">True to identify <paramref name="o" /> as the result of a late-bound expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LikeOperator">
      <summary>This class provides helpers that the Visual Basic compiler uses to do the work for the Like Operator (Visual Basic). It is not meant to be called directly from your code.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary>Performs binary or text string comparison given two objects. This helper method is not meant to be called directly from your code.</summary>
      <returns>A Boolean value indicating whether the strings match. Returns True if the strings match; otherwise False.</returns>
      <param name="Source">The string to compare.</param>
      <param name="Pattern">The string against which <paramref name="Source" /> is being compared.</param>
      <param name="CompareOption">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> enumeration specifying whether or not to use text comparison. If <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" />, this method uses text comparison; if <see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" />, this method uses binary comparison.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Performs binary or text string comparison given two strings. This helper method is not meant to be called directly from your code.</summary>
      <returns>A Boolean value indicating whether the strings match. Returns True if the strings match; otherwise False.</returns>
      <param name="Source">The string to compare.</param>
      <param name="Pattern">The string against which <paramref name="Source" /> is being compared.</param>
      <param name="CompareOption">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> enumeration specifying whether or not to use text comparison. If <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" />, this method uses text comparison; if <see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" />, this method uses binary comparison.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LongType">
      <summary>This class has been deprecated as of Visual Basic 2005. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromObject(System.Object)">
      <summary>Returns a Long value that corresponds to the specified object. </summary>
      <returns>The Long value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. Object to convert to a Long value.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromString(System.String)">
      <summary>Returns a Long value that corresponds to the specified string. </summary>
      <returns>The Long value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Long value.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.NewLateBinding">
      <summary>This class provides helpers that the Visual Basic compiler uses for late binding calls; it is not meant to be called directly from your code.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackCall(System.Object,System.String,System.Object[],System.String[],System.Boolean)">
      <summary>Executes a late-bound method or function call. This helper method is not meant to be called directly from your code.</summary>
      <returns>An instance of the call object.</returns>
      <param name="Instance">An instance of the call object exposing the property or method.</param>
      <param name="MemberName">The name of the property or method on the call object.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
      <param name="IgnoreReturn">A Boolean value indicating whether or not the return value can be ignored.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackGet(System.Object,System.String,System.Object[],System.String[])">
      <summary>Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.</summary>
      <returns>An instance of the call object.</returns>
      <param name="Instance">An instance of the call object exposing the property or method.</param>
      <param name="MemberName">The name of the property or method on the call object.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSet(System.Object,System.Object[],System.String[])">
      <summary>Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.</summary>
      <param name="Instance">An instance of the call object exposing the property or method.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.</summary>
      <param name="Instance">An instance of the call object exposing the property or method.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
      <param name="OptimisticSet">A Boolean value used to determine whether the set operation will work. Set to True when you believe that an intermediate value has been set in the property or field; otherwise False.</param>
      <param name="RValueBase">A Boolean value that specifies when the base reference of the late reference is an RValue. Set to True when the base reference of the late reference is an RValue; this allows you to generate a run-time exception for late assignments to fields of RValues of value types. Otherwise, set to False.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault1(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>Executes a late-bound get of the default property or field, or call to the default method or function. This helper method is not meant to be called directly from your code.</summary>
      <returns>An instance of the call object.</returns>
      <param name="Instance">An instance of the call object exposing the property or method. If <paramref name="Instance" /> is of type <see cref="T:System.Dynamic.IDynamicMetaObjectProvider" />, then bind using the Dynamic Language Runtime; otherwise perform standard late-binding.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
      <param name="ReportErrors">A Boolean value used to specify whether to throw exceptions when an error is encountered. Set to True to throw exceptions. Set to False to return Nothing when an error is encountered.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault2(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>Executes a late-bound get of the default property or field, or call to the default method or function. This helper method is not meant to be called directly from your code.</summary>
      <returns>An instance of the call object.</returns>
      <param name="Instance">An instance of the call object exposing the property or method.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
      <param name="ReportErrors">A Boolean value used to specify whether to throw exceptions when an error is encountered. Set to True to throw exceptions. Set to False to return Nothing when an error is encountered.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSet(System.Object,System.String,System.Object[])">
      <summary>Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.</summary>
      <param name="Instance">An instance of the call object exposing the property or method.</param>
      <param name="MemberName">The name of the property or method on the call object.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSetComplex(System.Object,System.String,System.Object[],System.Boolean,System.Boolean)">
      <summary>Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.</summary>
      <param name="Instance">An instance of the call object exposing the property or method.</param>
      <param name="MemberName">The name of the property or method on the call object.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="OptimisticSet">A Boolean value used to determine whether the set operation will work. Set to True when you believe that an intermediate value has been set in the property or field; otherwise False.</param>
      <param name="RValueBase">A Boolean value that specifies when the base reference of the late reference is an RValue. Set to True when the base reference of the late reference is an RValue; this allows you to generate a run-time exception for late assignments to fields of RValues of value types. Otherwise, set to False.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[],System.Boolean)">
      <summary>Executes a late-bound method or function call. This helper method is not meant to be called directly from your code.</summary>
      <returns>An instance of the call object.</returns>
      <param name="Instance">An instance of the call object exposing the property or method.</param>
      <param name="Type">The type of the call object.</param>
      <param name="MemberName">The name of the property or method on the call object.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
      <param name="TypeArguments">An array of argument types; used only for generic calls to pass argument types.</param>
      <param name="CopyBack">An array of Boolean values that the late binder uses to communicate back to the call site which arguments match ByRef parameters. Each True value indicates that the arguments matched and should be copied out after the call to LateCall is complete.</param>
      <param name="IgnoreReturn">A Boolean value indicating whether or not the return value can be ignored.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCallInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>Executes a late-bound call to the default method or function. This helper method is not meant to be called directly from your code.</summary>
      <returns>An instance of the call object.</returns>
      <param name="Instance">An instance of the call object exposing the property or method. </param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
      <param name="ReportErrors">A Boolean value used to specify whether to throw exceptions when an error is encountered. Set to True to throw exceptions. Set to False to return Nothing when an error is encountered.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCanEvaluate(System.Object,System.Type,System.String,System.Object[],System.Boolean,System.Boolean)">
      <summary>Indicates whether a call requires late-bound evaluation. This helper method is not meant to be called directly from your code.</summary>
      <returns>A Boolean value that indicates whether the expression requires late-bound evaluation.</returns>
      <param name="instance">An instance of the call object exposing the property or method.</param>
      <param name="type">The type of the call object.</param>
      <param name="memberName">The name of the property or method on the call object.</param>
      <param name="arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="allowFunctionEvaluation">A Boolean value that specifies whether to allow function evaluation.</param>
      <param name="allowPropertyEvaluation">A Boolean value that specifies whether to allow property evaluation.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[])">
      <summary>Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.</summary>
      <returns>An instance of the call object.</returns>
      <param name="Instance">An instance of the call object exposing the property or method.</param>
      <param name="Type">The type of the call object.</param>
      <param name="MemberName">The name of the property or method on the call object.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
      <param name="TypeArguments">An array of argument types; used only for generic calls to pass argument types.</param>
      <param name="CopyBack">An array of Boolean values that the late binder uses to communicate back to the call site which arguments match ByRef parameters. Each True value indicates that the arguments matched and should be copied out after the call to LateCall is complete.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGetInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>Executes a late-bound get of the default property or field. This helper method is not meant to be called directly from your code.</summary>
      <returns>An instance of the call object.</returns>
      <param name="Instance">An instance of the call object exposing the property or method. </param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
      <param name="ReportErrors">A Boolean value used to specify whether to throw exceptions when an error is encountered. Set to True to throw exceptions. Set to False to return Nothing when an error is encountered.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary>Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.</summary>
      <returns>An instance of the call object.</returns>
      <param name="Instance">An instance of the call object exposing the property or method.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary>Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.</summary>
      <param name="Instance">An instance of the call object exposing the property or method.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.</summary>
      <param name="Instance">An instance of the call object exposing the property or method.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
      <param name="OptimisticSet">A Boolean value used to determine whether the set operation will work. Set to True when you believe that an intermediate value has been set in the property or field; otherwise False.</param>
      <param name="RValueBase">A Boolean value that specifies when the base reference of the late reference is an RValue. Set to True when the base reference of the late reference is an RValue; this allows you to generate a run-time exception for late assignments to fields of RValues of value types. Otherwise, set to False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[])">
      <summary>Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.</summary>
      <param name="Instance">An instance of the call object exposing the property or method.</param>
      <param name="Type">The type of the call object.</param>
      <param name="MemberName">The name of the property or method on the call object.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
      <param name="TypeArguments">An array of argument types; used only for generic calls to pass argument types.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean,Microsoft.VisualBasic.CallType)">
      <summary>Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.</summary>
      <param name="Instance">An instance of the call object exposing the property or method.</param>
      <param name="Type">The type of the call object.</param>
      <param name="MemberName">The name of the property or method on the call object.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
      <param name="TypeArguments">An array of argument types; used only for generic calls to pass argument types.</param>
      <param name="OptimisticSet">A Boolean value used to determine whether the set operation will work. Set to True when you believe that an intermediate value has been set in the property or field; otherwise False.</param>
      <param name="RValueBase">A Boolean value that specifies when the base reference of the late reference is an RValue. Set to True when the base reference of the late reference is an RValue; this allows you to generate a run-time exception for late assignments to fields of RValues of value types. Otherwise, set to False.</param>
      <param name="CallType">An enumeration member of type <see cref="T:Microsoft.VisualBasic.CallType" /> representing the type of procedure being called. The value of CallType can be Method, Get, or Set. Only Set is used.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean)">
      <summary>Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.</summary>
      <param name="Instance">An instance of the call object exposing the property or method.</param>
      <param name="Type">The type of the call object.</param>
      <param name="MemberName">The name of the property or method on the call object.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
      <param name="TypeArguments">An array of argument types; used only for generic calls to pass argument types.</param>
      <param name="OptimisticSet">A Boolean value used to determine whether the set operation will work. Set to True when you believe that an intermediate value has been set in the property or field; otherwise False.</param>
      <param name="RValueBase">A Boolean value that specifies when the base reference of the late reference is an RValue. Set to True when the base reference of the late reference is an RValue; this allows you to generate a run-time exception for late assignments to fields of RValues of value types. Otherwise, set to False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl">
      <summary>The Visual Basic compiler uses this class for object flow control; it is not meant to be called directly from your code.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.CheckForSyncLockOnValueType(System.Object)">
      <summary>Checks for a synchronization lock on the specified type.</summary>
      <param name="Expression">The data type for which to check for synchronization lock.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl">
      <summary>Provides services to the Visual Basic compiler for compiling For...Next loops.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForLoopInitObj(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@)">
      <summary>Initializes a For...Next loop.</summary>
      <returns>False if the loop has terminated; otherwise, True.</returns>
      <param name="Counter">The loop counter variable.</param>
      <param name="Start">The initial value of the loop counter.</param>
      <param name="Limit">The value of the To option.</param>
      <param name="StepValue">The value of the Step option.</param>
      <param name="LoopForResult">An object that contains verified values for loop values.</param>
      <param name="CounterResult">The counter value for the next loop iteration.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckDec(System.Decimal,System.Decimal,System.Decimal)">
      <summary>Checks for valid values for the loop counter, Step, and To values.</summary>
      <returns>True if <paramref name="StepValue" /> is greater than zero and <paramref name="count" /> is less than or equal to <paramref name="limit" /> or <paramref name="StepValue" /> is less than or equal to zero and <paramref name="count" /> is greater than or equal to <paramref name="limit" />; otherwise, False.</returns>
      <param name="count">Required. A Decimal value that represents the initial value passed for the loop counter variable.</param>
      <param name="limit">Required. A Decimal value that represents the value passed by using the To keyword.</param>
      <param name="StepValue">Required. A Decimal value that represents the value passed by using the Step keyword.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckObj(System.Object,System.Object,System.Object@)">
      <summary>Increments a For...Next loop.</summary>
      <returns>False if the loop has terminated; otherwise, True.</returns>
      <param name="Counter">The loop counter variable.</param>
      <param name="LoopObj">An object that contains verified values for loop values.</param>
      <param name="CounterResult">The counter value for the next loop iteration.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR4(System.Single,System.Single,System.Single)">
      <summary>Checks for valid values for the loop counter, Step, and To values.</summary>
      <returns>True if <paramref name="StepValue" /> is greater than zero and <paramref name="count" /> is less than or equal to <paramref name="limit" />, or if <paramref name="StepValue" /> is less than or equal to zero and <paramref name="count" /> is greater than or equal to <paramref name="limit" />; otherwise, False.</returns>
      <param name="count">Required. A Single value that represents the initial value passed for the loop counter variable.</param>
      <param name="limit">Required. A Single value that represents the value passed by using the To keyword.</param>
      <param name="StepValue">Required. A Single value that represents the value passed by using the Step keyword.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR8(System.Double,System.Double,System.Double)">
      <summary>Checks for valid values for the loop counter, Step, and To values.</summary>
      <returns>True if <paramref name="StepValue" /> is greater than zero and <paramref name="count" /> is less than or equal to <paramref name="limit" />, or if <paramref name="StepValue" /> is less than or equal to zero and <paramref name="count" /> is greater than or equal to <paramref name="limit" />; otherwise, False.</returns>
      <param name="count">Required. A Double value that represents the initial value passed for the loop counter variable.</param>
      <param name="limit">Required. A Double value that represents the value passed by using the To keyword.</param>
      <param name="StepValue">Required. A Double value that represents the value passed by using the Step keyword.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectType">
      <summary>This class has been deprecated as of Visual Basic 2005. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)">
      <summary>Performs an addition (+) operation.</summary>
      <returns>The sum of <paramref name="o1" /> and <paramref name="o2" />.</returns>
      <param name="o1">Required. Any numeric expression.</param>
      <param name="o2">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)">
      <summary>Performs a bitwise And operation.</summary>
      <returns>1 if both <paramref name="obj1" /> and <paramref name="obj2" /> evaluate to 1; otherwise, 0.</returns>
      <param name="obj1">Required. Any Boolean or numeric expression.</param>
      <param name="obj2">Required. Any Boolean or numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)">
      <summary>Performs a bitwise Or operation.</summary>
      <returns>0 if both <paramref name="obj1" /> and <paramref name="obj2" /> evaluate to 0; otherwise, 1.</returns>
      <param name="obj1">Required. Any Boolean or numeric expression.</param>
      <param name="obj2">Required. Any Boolean or numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)">
      <summary>Performs an Xor operation.</summary>
      <returns>A numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see Xor Operator (Visual Basic).</returns>
      <param name="obj1">Required. Any Boolean or numeric expression.</param>
      <param name="obj2">Required. Any Boolean or numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)">
      <summary>Performs a division (/) operation.</summary>
      <returns>The full quotient of <paramref name="o1" /> divided by <paramref name="o2" />, including any remainder.</returns>
      <param name="o1">Required. Any numeric expression.</param>
      <param name="o2">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)">
      <summary>Returns a boxed primitive value. This method is used to prevent copying structures multiple times.</summary>
      <returns>The primitive value of <paramref name="o" /> typed as object.</returns>
      <param name="o">Required. Any expression.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)">
      <summary>Performs an integer division (\) operation.</summary>
      <returns>The integer quotient of <paramref name="o1" /> divided by <paramref name="o2" />, which discards any remainder and retains only the integer portion.</returns>
      <param name="o1">Required. Any numeric expression.</param>
      <param name="o2">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary>Performs a Like comparison.</summary>
      <returns>True if the string representation of the value in <paramref name="vLeft" /> satisfies the pattern that is contained in <paramref name="vRight" />; otherwise, False. True if both <paramref name="vLeft" /> and <paramref name="vRight" /> are Nothing.</returns>
      <param name="vLeft">Required. Any expression.</param>
      <param name="vRight">Required. Any string expression conforming to the pattern-matching conventions described in Like Operator (Visual Basic).</param>
      <param name="CompareOption">Required. A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)">
      <summary>Performs a modulus (Mod) operation.</summary>
      <returns>The remainder after <paramref name="o1" /> is divided by <paramref name="o2" />. </returns>
      <param name="o1">Required. Any numeric expression.</param>
      <param name="o2">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)">
      <summary>Performs a multiplication (*) operation.</summary>
      <returns>The product of <paramref name="o1" /> and <paramref name="o2" />.</returns>
      <param name="o1">Required. Any numeric expression.</param>
      <param name="o2">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)">
      <summary>Performs a unary minus (–) operation.</summary>
      <returns>The negative value of <paramref name="obj" />.</returns>
      <param name="obj">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)">
      <summary>Performs a Not operation.</summary>
      <returns>For Boolean operations, False if <paramref name="obj" /> is True; otherwise, True. For bitwise operations, 1 if <paramref name="obj" /> is 0; otherwise, 0.</returns>
      <param name="obj">Required. Any Boolean or numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)">
      <summary>Performs binary or text string comparison when given two objects.</summary>
      <returns>Value Condition -1 <paramref name="o1" /> is less than <paramref name="o2" />. 0<paramref name="o1" /> is equal to <paramref name="o2" />. 1 <paramref name="o1" /> is greater than <paramref name="o2" />. </returns>
      <param name="o1">Required. Any expression.</param>
      <param name="o2">Required. Any expression.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive string comparison; otherwise, False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)">
      <summary>Performs a unary plus (+) operation.</summary>
      <returns>The value of <paramref name="obj" />. (The sign of the <paramref name="obj" /> is unchanged.)</returns>
      <param name="obj">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)">
      <summary>Performs an exponent (^) operation.</summary>
      <returns>The result of <paramref name="obj1" /> raised to the power of <paramref name="obj2" />.</returns>
      <param name="obj1">Required. Any numeric expression.</param>
      <param name="obj2">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)">
      <summary>Performs an arithmetic left shift (&lt;&lt;) operation.</summary>
      <returns>An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of <paramref name="o1" />.</returns>
      <param name="o1">Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (SByte, Byte, Short, UShort, Integer, UInteger, Long, or ULong).</param>
      <param name="amount">Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be Integer or widen to Integer.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)">
      <summary>Performs an arithmetic right shift (&gt;&gt;) operation.</summary>
      <returns>An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of <paramref name="o1" />.</returns>
      <param name="o1">Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (SByte, Byte, Short, UShort, Integer, UInteger, Long, or ULong).</param>
      <param name="amount">Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be Integer or widen to Integer.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)">
      <summary>Performs a string concatenation (&amp;) operation.</summary>
      <returns>A string representing the concatenation of <paramref name="vLeft" /> and <paramref name="vRight" />.</returns>
      <param name="vLeft">Required. Any expression.</param>
      <param name="vRight">Required. Any expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)">
      <summary>Performs a subtraction (–) operation.</summary>
      <returns>The difference between <paramref name="o1" /> and <paramref name="o2" />.</returns>
      <param name="o1">Required. Any numeric expression. </param>
      <param name="o2">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)">
      <summary>Performs an Xor comparison.</summary>
      <returns>A Boolean or numeric value. For a Boolean comparison, the return value is the logical exclusion (exclusive logical disjunction) of two Boolean values. For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see Xor Operator (Visual Basic).</returns>
      <param name="obj1">Required. Any Boolean or numeric expression.</param>
      <param name="obj2">Required. Any Boolean or numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Operators">
      <summary>Provides late-bound math operators, such as <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> and <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, which the Visual Basic compiler uses internally. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)">
      <summary>Represents the Visual Basic addition (+) operator.</summary>
      <returns>The sum of <paramref name="Left" /> and <paramref name="Right" />.</returns>
      <param name="Left">Required. Any numeric expression.</param>
      <param name="Right">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)">
      <summary>Represents the Visual Basic And operator.</summary>
      <returns>For Boolean operations, True if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to True; otherwise, False. For bitwise operations, 1 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 1; otherwise, 0.</returns>
      <param name="Left">Required. Any Boolean or numeric expression.</param>
      <param name="Right">Required. Any Boolean or numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)">
      <summary>Represents Visual Basic comparison operators.</summary>
      <returns>Value Condition -1 <paramref name="Left" /> is less than <paramref name="Right" />.0 <paramref name="Left" /> and <paramref name="Right" /> are equal.1 <paramref name="Left" /> is greater than <paramref name="Right" />.</returns>
      <param name="Left">Required. Any expression.</param>
      <param name="Right">Required. Any expression.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive string comparison; otherwise, False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary>Represents the Visual Basic equal (=) operator.</summary>
      <returns>True if <paramref name="Left" /> and <paramref name="Right" /> are equal; otherwise, False.</returns>
      <param name="Left">Required. Any expression.</param>
      <param name="Right">Required. Any expression.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive string comparison; otherwise, False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary>Represents the Visual Basic greater-than (&gt;) operator.</summary>
      <returns>True if <paramref name="Left" /> is greater than <paramref name="Right" />; otherwise, False.</returns>
      <param name="Left">Required. Any expression.</param>
      <param name="Right">Required. Any expression.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive string comparison; otherwise, False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary>Represents the Visual Basic greater-than or equal-to (&gt;=) operator.</summary>
      <returns>True if <paramref name="Left" /> is greater than or equal to <paramref name="Right" />; otherwise, False.</returns>
      <param name="Left">Required. Any expression.</param>
      <param name="Right">Required. Any expression.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive string comparison; otherwise, False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary>Represents the Visual Basic less-than (&lt;) operator.</summary>
      <returns>True if <paramref name="Left" /> is less than <paramref name="Right" />; otherwise, False.</returns>
      <param name="Left">Required. Any expression.</param>
      <param name="Right">Required. Any expression.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive string comparison; otherwise, False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary>Represents the Visual Basic less-than or equal-to (&lt;=) operator.</summary>
      <returns>True if <paramref name="Left" /> is less than or equal to <paramref name="Right" />; otherwise, False.</returns>
      <param name="Left">Required. Any expression.</param>
      <param name="Right">Required. Any expression.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive string comparison; otherwise, False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary>Represents the Visual Basic not-equal (&lt;&gt;) operator.</summary>
      <returns>True if <paramref name="Left" /> is not equal to <paramref name="Right" />; otherwise, False.</returns>
      <param name="Left">Required. Any expression.</param>
      <param name="Right">Required. Any expression.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive string comparison; otherwise, False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
      <summary>Performs binary or text string comparison when given two strings.</summary>
      <returns>Value Condition -1 <paramref name="Left" /> is less than <paramref name="Right" />. 0<paramref name="Left" /> is equal to <paramref name="Right" />. 1 <paramref name="Left" /> is greater than <paramref name="Right" />. </returns>
      <param name="Left">Required. Any String expression.</param>
      <param name="Right">Required. Any String expression.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive string comparison; otherwise, False.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)">
      <summary>Represents the Visual Basic concatenation (&amp;) operator.</summary>
      <returns>A string representing the concatenation of <paramref name="Left" /> and <paramref name="Right" />.</returns>
      <param name="Left">Required. Any expression.</param>
      <param name="Right">Required. Any expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary>Represents the overloaded Visual Basic equals (=) operator.</summary>
      <returns>The result of the overloaded equals operator. False if operator overloading is not supported.</returns>
      <param name="Left">Required. Any expression.</param>
      <param name="Right">Required. Any expression.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive string comparison; otherwise, False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary>Represents the overloaded Visual Basic greater-than (&gt;) operator.</summary>
      <returns>The result of the overloaded greater-than operator. False if operator overloading is not supported.</returns>
      <param name="Left">Required. Any expression.</param>
      <param name="Right">Required. Any expression.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive string comparison; otherwise, False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary>Represents the overloaded Visual Basic greater-than or equal-to (&gt;=) operator.</summary>
      <returns>The result of the overloaded greater-than or equal-to operator. False if operator overloading is not supported.</returns>
      <param name="Left">Required. Any expression.</param>
      <param name="Right">Required. Any expression.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive string comparison; otherwise, False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary>Represents the overloaded Visual Basic less-than (&lt;) operator.</summary>
      <returns>The result of the overloaded less-than operator. False if operator overloading is not supported.</returns>
      <param name="Left">Required. Any expression.</param>
      <param name="Right">Required. Any expression.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive string comparison; otherwise, False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary>Represents the overloaded Visual Basic less-than or equal-to (&lt;=) operator.</summary>
      <returns>The result of the overloaded less-than or equal-to operator. False if operator overloading is not supported.</returns>
      <param name="Left">Required. Any expression.</param>
      <param name="Right">Required. Any expression.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive string comparison; otherwise, False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary>Represents the overloaded Visual Basic not-equal (&lt;&gt;) operator.</summary>
      <returns>The result of the overloaded not-equal operator. False if operator overloading is not supported.</returns>
      <param name="Left">Required. Any expression.</param>
      <param name="Right">Required. Any expression.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive string comparison; otherwise, False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)">
      <summary>Represents the Visual Basic division (/) operator.</summary>
      <returns>The full quotient of <paramref name="Left" /> divided by <paramref name="Right" />, including any remainder.</returns>
      <param name="Left">Required. Any numeric expression.</param>
      <param name="Right">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)">
      <summary>Represents the Visual Basic exponent (^) operator.</summary>
      <returns>The result of <paramref name="Left" /> raised to the power of <paramref name="Right" />.</returns>
      <param name="Left">Required. Any numeric expression.</param>
      <param name="Right">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])">
      <summary>Executes a late-bound evaluation of a user-defined operator. This helper method is not meant to be called directly from your code.</summary>
      <returns>The result returned from the user-defined operator.</returns>
      <param name="vbOp">The user-defined operator.</param>
      <param name="Arguments">Argument values to pass to the user-defined operator.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)">
      <summary>Represents the Visual Basic integer division (\) operator.</summary>
      <returns>The integer quotient of <paramref name="Left" /> divided by <paramref name="Right" />, which discards any remainder and retains only the integer portion.</returns>
      <param name="Left">Required. Any numeric expression.</param>
      <param name="Right">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)">
      <summary>Represents the Visual Basic arithmetic left shift (&lt;&lt;) operator.</summary>
      <returns>An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of <paramref name="Operand" />.</returns>
      <param name="Operand">Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (SByte, Byte, Short, UShort, Integer, UInteger, Long, or ULong).</param>
      <param name="Amount">Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be Integer or widen to Integer.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary>Represents the Visual Basic Like operator.</summary>
      <returns>True if the string representation of the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, False. True if both <paramref name="Source" /> and <paramref name="Pattern" /> are Nothing.</returns>
      <param name="Source">Required. Any expression.</param>
      <param name="Pattern">Required. Any string expression conforming to the pattern-matching conventions described in Like Operator (Visual Basic).</param>
      <param name="CompareOption">Required. A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Represents the Visual Basic Like operator.</summary>
      <returns>True if the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, False. True if both <paramref name="Source" /> and <paramref name="Pattern" /> are empty.</returns>
      <param name="Source">Required. Any String expression. </param>
      <param name="Pattern">Required. Any String expression conforming to the pattern-matching conventions described in Like Operator (Visual Basic).</param>
      <param name="CompareOption">Required. A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)">
      <summary>Represents the Visual Basic Mod operator.</summary>
      <returns>The remainder after <paramref name="Left" /> is divided by <paramref name="Right" />. </returns>
      <param name="Left">Required. Any numeric expression.</param>
      <param name="Right">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)">
      <summary>Represents the Visual Basic multiply (*) operator.</summary>
      <returns>The product of <paramref name="Left" /> and <paramref name="Right" />.</returns>
      <param name="Left">Required. Any numeric expression.</param>
      <param name="Right">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)">
      <summary>Represents the Visual Basic unary minus (–) operator.</summary>
      <returns>The negative value of <paramref name="Operand" />.</returns>
      <param name="Operand">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)">
      <summary>Represents the Visual Basic Not operator.</summary>
      <returns>For Boolean operations, False if <paramref name="Operand" /> is True; otherwise, True. For bitwise operations, 1 if <paramref name="Operand" /> is 0; otherwise, 0.</returns>
      <param name="Operand">Required. Any Boolean or numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)">
      <summary>Represents the Visual Basic Or operator.</summary>
      <returns>For Boolean operations, False if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to False; otherwise, True. For bitwise operations, 0 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 0; otherwise, 1.</returns>
      <param name="Left">Required. Any Boolean or numeric expression.</param>
      <param name="Right">Required. Any Boolean or numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)">
      <summary>Represents the Visual Basic unary plus (+) operator.</summary>
      <returns>The value of <paramref name="Operand" />. (The sign of the <paramref name="Operand" /> is unchanged.)</returns>
      <param name="Operand">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)">
      <summary>Represents the Visual Basic arithmetic right shift (&gt;&gt;) operator.</summary>
      <returns>An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of <paramref name="Operand" />.</returns>
      <param name="Operand">Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (SByte, Byte, Short, UShort, Integer, UInteger, Long, or ULong).</param>
      <param name="Amount">Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be Integer or widen to Integer.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)">
      <summary>Represents the Visual Basic subtraction (–) operator.</summary>
      <returns>The difference between <paramref name="Left" /> and <paramref name="Right" />.</returns>
      <param name="Left">Required. Any numeric expression. </param>
      <param name="Right">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)">
      <summary>Represents the Visual Basic Xor operator.</summary>
      <returns>A Boolean or numeric value. For a Boolean comparison, the return value is the logical exclusion (exclusive logical disjunction) of two Boolean values. For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see Xor Operator (Visual Basic).</returns>
      <param name="Left">Required. Any Boolean or numeric expression.</param>
      <param name="Right">Required. Any Boolean or numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute">
      <summary>Specifies that the current Option Compare setting should be passed as the default value for an argument. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute">
      <summary>The Visual Basic compiler emits this helper class to indicate (for Visual Basic debugging) which comparison option, binary or text, is being used</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute" /> class. This is a helper method.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ProjectData">
      <summary>Provides helpers for the Visual Basic Err object. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.ClearProjectError">
      <summary>Performs the work for the Clear method of the Err object. A helper method.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.CreateProjectError(System.Int32)">
      <summary>Performs the work for the Raise method of the Err object. A helper method.</summary>
      <returns>An <see cref="T:System.Exception" /> object.</returns>
      <param name="hr">An integer value that identifies the nature of the error. Visual Basic errors are in the range 0–65535; the range 0–512 is reserved for system errors; the range 513–65535 is available for user-defined errors.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.EndApp">
      <summary>Closes all files for the calling assembly and stops the process.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception)">
      <summary>The Visual Basic compiler uses this helper method to capture exceptions in the Err object.</summary>
      <param name="ex">The <see cref="T:System.Exception" /> object to be caught.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception,System.Int32)">
      <summary>The Visual Basic compiler uses this helper method to capture exceptions in the Err object.</summary>
      <param name="ex">The <see cref="T:System.Exception" /> object to be caught.</param>
      <param name="lErl">The line number of the exception.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ShortType">
      <summary>This class has been deprecated as of Visual Basic 2005. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromObject(System.Object)">
      <summary>Returns a Short value that corresponds to the specified object. </summary>
      <returns>The Short value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. Object to convert to a Short value.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromString(System.String)">
      <summary>Returns a Short value that corresponds to the specified string. </summary>
      <returns>The Short value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Short value.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.SingleType">
      <summary>This class has been deprecated as of Visual Basic 2005. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object)">
      <summary>Returns a Single value that corresponds to the specified object. </summary>
      <returns>The Single value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Object to convert to a Single value.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary>Returns a Single value that corresponds to the specified object. </summary>
      <returns>The Single value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Object to convert to a Single value.</param>
      <param name="NumberFormat">A <see cref="T:System.Globalization.NumberFormatInfo" /> object that defines how numeric values are formatted and displayed, depending on the culture.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String)">
      <summary>Returns a Single value that corresponds to the specified string. </summary>
      <returns>The Single value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Single value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Returns a Single value that corresponds to the specified string and number format information. </summary>
      <returns>The Single value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Single value.</param>
      <param name="NumberFormat">A <see cref="T:System.Globalization.NumberFormatInfo" /> object that defines how numeric values are formatted and displayed, depending on the culture.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute">
      <summary>This class provides attributes that are applied to the standard module construct when it is emitted to Intermediate Language (IL). It is not intended to be called directly from your code.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag">
      <summary>The Visual Basic compiler uses this class internally when initializing static local members; it is not meant to be called directly from your code.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag" /> class.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.State">
      <summary>Returns the state of the static local member's initialization flag (initialized or not).</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StringType">
      <summary>This class has been deprecated as of Visual Basic 2005. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)">
      <summary>Returns a String value that corresponds to the specified Boolean. </summary>
      <returns>The String value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Boolean to convert to a String value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)">
      <summary>Returns a String value that corresponds to the specified Byte. </summary>
      <returns>The String value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Byte to convert to a String value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)">
      <summary>Returns a String value that corresponds to the specified Char. </summary>
      <returns>The String value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Char to convert to a String value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)">
      <summary>Returns a String value that corresponds to the specified date. </summary>
      <returns>The String value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Date to convert to a String value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)">
      <summary>Returns a String value that corresponds to the specified Decimal. </summary>
      <returns>The String value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Decimal to convert to a String value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary>Returns a String value that corresponds to a specified Decimal and number format information. </summary>
      <returns>The String value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Decimal to convert to a String value.</param>
      <param name="NumberFormat">A <see cref="T:System.Globalization.NumberFormatInfo" /> object that defines how numeric values are formatted and displayed, depending on the culture.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)">
      <summary>Returns a String value that corresponds to a specified Double. </summary>
      <returns>The String value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Double to convert to a String value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)">
      <summary>Returns a String value that corresponds to a specified Double and number format information. </summary>
      <returns>The String value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Double to convert to a String value.</param>
      <param name="NumberFormat">A <see cref="T:System.Globalization.NumberFormatInfo" /> object that defines how numeric values are formatted and displayed, depending on the culture.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)">
      <summary>Returns a String value that corresponds to a specified Integer. </summary>
      <returns>The String value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Integer to convert to a String value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)">
      <summary>Returns a String value that corresponds to a specified Int64 (64-bit integer).</summary>
      <returns>The String value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Int64 to convert to a String value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)">
      <summary>Returns a String value that corresponds to the specified object. </summary>
      <returns>The String value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Object to convert to a String value.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)">
      <summary>Returns a String value that corresponds to a specified Int16 (16-bit integer).</summary>
      <returns>The String value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Int616 to convert to a String value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)">
      <summary>Returns a String value that corresponds to a specified Single. </summary>
      <returns>The String value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Single to convert to a String value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)">
      <summary>Returns a String value that corresponds to a specified Single and number format information. </summary>
      <returns>The String value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Sinble to convert to a String value.</param>
      <param name="NumberFormat">A <see cref="T:System.Globalization.NumberFormatInfo" /> object that defines how numeric values are formatted and displayed, depending on the culture.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)">
      <summary>Overwrites the <paramref name="sDest" /> parameter with the contents of the <paramref name="sInsert" /> parameter.</summary>
      <param name="sDest">Required. String variable to modify.</param>
      <param name="StartPosition">Required. Location in the <paramref name="sDest" /> parameter to begin overwriting from. The index is 1-based.</param>
      <param name="MaxInsertLength">Required. Maximum number of characters from the <paramref name="sInsert" /> parameter to use, starting from the first character.</param>
      <param name="sInsert">Required. String value to overwrite the <paramref name="sDest" /> parameter with.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
      <summary>Compares two strings.</summary>
      <returns>Value Condition zero The two strings are equal. less than zero <paramref name="sLeft" /> is less than <paramref name="sRight" />. greater than zero <paramref name="sLeft" /> is greater than <paramref name="sRight" />. </returns>
      <param name="sLeft">Required. String to compare with <paramref name="sRight" />.</param>
      <param name="sRight">Required. String to compare with <paramref name="sLeft" />.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive comparison; otherwise False.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Compares the parameters <paramref name="Source" /> and <paramref name="Pattern" /> and returns the same results as the Like operator.</summary>
      <returns>A Boolean value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is True. If the string does not satisfy the pattern, result is False. If both string and pattern are empty strings, the result is True.</returns>
      <param name="Source">Required. Any String expression.</param>
      <param name="Pattern">Any String expression conforming to the pattern-matching conventions described in Like Operator (Visual Basic).</param>
      <param name="CompareOption">Specifies how to compare strings to patterns, according to the <see cref="T:Microsoft.VisualBasic.CompareMethod" />. Can be vbBinaryCompare for binary comparison or vbTextCompare for comparison based on a case-insensitive text sort order determined by your system's LocaleID value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)">
      <summary>Compares the parameters <paramref name="Source" /> and <paramref name="Pattern" /> and returns the same results as the Like operator, using binary comparison.</summary>
      <returns>A Boolean value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is True. If the string does not satisfy the pattern, result is False. If both string and pattern are empty strings, the result is True.</returns>
      <param name="Source">Required. Any String expression.</param>
      <param name="Pattern">Required. Any String expression conforming to the pattern-matching conventions described in Like Operator (Visual Basic).</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)">
      <summary>Compares the parameters <paramref name="Source" /> and <paramref name="Pattern" /> and returns the same results as the Like operator, using text comparison.</summary>
      <returns>A Boolean value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is True. If the string does not satisfy the pattern, result is False. If both string and pattern are empty strings, the result is True.</returns>
      <param name="Source">Required. Any String expression.</param>
      <param name="Pattern">Required. Any String expression conforming to the pattern-matching conventions described in Like Operator (Visual Basic).</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Utils">
      <summary>Contains utilities that the Visual Basic compiler uses.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.CopyArray(System.Array,System.Array)">
      <summary>Used by the Visual Basic compiler as a helper for Redim.</summary>
      <returns>The copied array.</returns>
      <param name="arySrc">The array to be copied.</param>
      <param name="aryDest">The destination array.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.GetResourceString(System.String,System.String[])">
      <summary>Retrieves and formats a localized resource string or error message.</summary>
      <returns>A formatted resource string or error message.</returns>
      <param name="ResourceKey">The identifier of the string or error message to retrieve.</param>
      <param name="Args">An array of parameters to replace placeholders in the string or error message.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.MethodToString(System.Reflection.MethodBase)">
      <summary>Returns a Visual Basic method signature.</summary>
      <returns>The Visual Basic method signature for the supplied <see cref="T:System.Reflection.MethodBase" /> object.</returns>
      <param name="Method">A <see cref="T:System.Reflection.MethodBase" /> object to return a Visual Basic method signature for.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.SetCultureInfo(System.Globalization.CultureInfo)">
      <summary>Sets the culture of the current thread.</summary>
      <returns>The previous value of the <see cref="P:System.Threading.Thread.CurrentCulture" /> property for the current thread.</returns>
      <param name="Culture">A <see cref="T:System.Globalization.CultureInfo" /> object to set as the culture of the current thread.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlThread" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.ThrowException(System.Int32)">
      <summary>Throws a localized Visual Basic exception.</summary>
      <param name="hr">The Visual Basic error identifier.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Versioned">
      <summary>The <see cref="T:Microsoft.VisualBasic.CompilerServices.Versioned" /> module contains procedures used to interact with objects, applications, and systems.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary>Executes a method on an object, or sets or returns a property on an object.</summary>
      <returns>Executes a method on an object, or sets or returns a property on an object.</returns>
      <param name="Instance">Required. Object. A pointer to the object exposing the property or method.</param>
      <param name="MethodName">Required. String. A string expression containing the name of the property or method on the object.</param>
      <param name="UseCallType">Required. An enumeration member of type <see cref="T:Microsoft.VisualBasic.CallType" /> representing the type of procedure being called. The value of CallType can be Method, Get, or Set.</param>
      <param name="Arguments">Optional. ParamArray. A parameter array containing the arguments to be passed to the property or method being called.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.IsNumeric(System.Object)">
      <summary>Returns a Boolean value indicating whether an expression can be evaluated as a number.</summary>
      <returns>Returns a Boolean value indicating whether an expression can be evaluated as a number.</returns>
      <param name="Expression">Required. Object expression.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.SystemTypeName(System.String)">
      <summary>Returns a string value containing the system data type name of a variable.</summary>
      <returns>Returns a string value containing the system data type name of a variable.</returns>
      <param name="VbName">Required. A string variable containing a Visual Basic type name.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.TypeName(System.Object)">
      <summary>Returns a string value containing data type information about a variable.</summary>
      <returns>Returns a string value containing data type information about a variable.</returns>
      <param name="Expression">Required. Object variable. If Option Strict is Off, you can pass a variable of any data type except a structure.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.VbTypeName(System.String)">
      <summary>Returns a string value containing the Visual Basic data type name of a variable.</summary>
      <returns>Returns a string value containing the Visual Basic data type name of a variable.</returns>
      <param name="SystemName">Required. String variable containing a type name used by the common language runtime.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Audio">
      <summary>Provides methods for playing sounds.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Devices.Audio" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Play(System.Byte[],Microsoft.VisualBasic.AudioPlayMode)">
      <summary>Plays a .wav sound file.</summary>
      <param name="data">Byte array that represents the sound file.</param>
      <param name="playMode">
        <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> mode for playing the sound. By default, AudioPlayMode.Background.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> is Nothing.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="playMode" /> is not one of the <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> enumeration values.</exception>
      <exception cref="T:System.Security.SecurityException">A partial-trust situation exists in which the user lacks necessary permissions.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlThread" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Play(System.IO.Stream,Microsoft.VisualBasic.AudioPlayMode)">
      <summary>Plays a .wav sound file.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> that represents the sound file.</param>
      <param name="playMode">
        <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> mode for playing the sound. By default, AudioPlayMode.Background.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is Nothing.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="playMode" /> is not one of the <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> enumeration values.</exception>
      <exception cref="T:System.Security.SecurityException">A partial-trust situation exists in which the user lacks necessary permissions.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlThread" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Play(System.String)">
      <summary>Plays a .wav sound file.</summary>
      <param name="location">A String containing the name of the sound file </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="location" /> is an empty string.</exception>
      <exception cref="T:System.IO.IOException">The user does not have sufficient permissions to access the file named by <paramref name="location" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The file path is malformed in <paramref name="location" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path name in <paramref name="location" /> is too long.</exception>
      <exception cref="T:System.Security.SecurityException">A partial-trust situation exists in which the user lacks necessary permissions.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlThread" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Play(System.String,Microsoft.VisualBasic.AudioPlayMode)">
      <summary>Plays a .wav sound file.</summary>
      <param name="location">A String containing the name of the sound file </param>
      <param name="playMode">
        <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> mode for playing the sound. By default, AudioPlayMode.Background.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="location" /> is an empty string.</exception>
      <exception cref="T:System.IO.IOException">The user does not have sufficient permissions to access the file named by <paramref name="location" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The file path is malformed in <paramref name="location" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path name in <paramref name="location" /> is too long.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="playMode" /> is not one of the <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> enumeration values.</exception>
      <exception cref="T:System.Security.SecurityException">A partial-trust situation exists in which the user lacks necessary permissions.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlThread" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.PlaySystemSound(System.Media.SystemSound)">
      <summary>Plays a system sound.</summary>
      <param name="systemSound">
        <see cref="T:System.Media.SystemSound" /> object representing the system sound to play.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="systemSound" /> is Nothing.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Stop">
      <summary>Stops a sound playing in the background.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Clock">
      <summary>Provides properties for accessing the current local time and Universal Coordinated Time (equivalent to Greenwich Mean Time) from the system clock.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Clock.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Devices.Clock" /> class. </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.GmtTime">
      <summary>Gets a Date object that contains the current local date and time on the computer, expressed as a UTC (GMT) time.</summary>
      <returns>A Date object that contains the current date and time expressed as UTC (GMT) time.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.LocalTime">
      <summary>Gets a Date object that contains the current local date and time on this computer.</summary>
      <returns>A Date object that contains the current local date and time.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.TickCount">
      <summary>Gets the millisecond count from the computer's system timer.</summary>
      <returns>An Integer containing the millisecond count from the computer's system timer.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Computer">
      <summary>Provides properties for manipulating computer components such as audio, the clock, the keyboard, the file system, and so on.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Computer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Devices.Computer" /> class. </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Audio">
      <summary>Gets an object that provides properties for methods for playing sounds.</summary>
      <returns>The My.Computer.Audio object for the computer.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Clipboard">
      <summary>Gets an object that provides methods for manipulating the Clipboard.</summary>
      <returns>The My.Computer.Clipboard object for the computer.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Keyboard">
      <summary>Gets an object that provides properties for accessing the current state of the keyboard, such as what keys are currently pressed, and provides a method to send keystrokes to the active window.</summary>
      <returns>The My.Computer.Keyboard object for the computer.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Mouse">
      <summary>Gets an object that provides properties for getting information about the format and configuration of the mouse installed on the local computer.</summary>
      <returns>The My.Computer.Mouse object for the computer.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Ports">
      <summary>Gets an object that provides a property and a method for accessing the computer's serial ports.</summary>
      <returns>The My.Computer.Ports object.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Screen">
      <summary>Gets the <see cref="T:System.Windows.Forms.Screen" /> object that represents the computer's primary display screen.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Screen" /> object that represents the computer's primary screen.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.ComputerInfo">
      <summary>Provides properties for getting information about the computer's memory, loaded assemblies, name, and operating system.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.ComputerInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" /> class. </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory">
      <summary>Gets the total amount of free physical memory for the computer.</summary>
      <returns>A ULong containing the number of bytes of free physical memory for the computer.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">The application cannot obtain the memory status.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory">
      <summary>Gets the total amount of the computer's free virtual address space.</summary>
      <returns>A ULong containing the number of bytes of the computer's free virtual address space.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">The application cannot obtain the memory status.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture">
      <summary>Gets the current UI culture installed with the operating system.</summary>
      <returns>A <see cref="T:System.Globalization.CultureInfo" /> object represents the UI culture installed on the computer.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName">
      <summary>Gets the full operating system name. </summary>
      <returns>A String containing the operating-system name.</returns>
      <exception cref="T:System.Security.SecurityException">The calling code does not have full trust.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform">
      <summary>Gets the platform identifier for the operating system of the computer.</summary>
      <returns>A String containing the platform identifier for the operating system of the computer, chosen from the member names of the <see cref="T:System.PlatformID" /> enumeration.</returns>
      <exception cref="T:System.ExecutionEngineException">The application cannot obtain the operating-system platform information.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion">
      <summary>Gets the version of the computer's operating system.</summary>
      <returns>A String containing the current version number of the operating system.</returns>
      <exception cref="T:System.ExecutionEngineException">The application cannot obtain the operating-system version information.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory">
      <summary>Gets the total amount of physical memory for the computer.</summary>
      <returns>A ULong containing the number of bytes of physical memory for the computer.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">The application cannot obtain the memory status.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory">
      <summary>Gets the total amount of virtual address space available for the computer.</summary>
      <returns>A ULong containing the number of bytes of virtual address space available for the computer.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">The application cannot obtain the memory status.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Keyboard">
      <summary>Provides properties for accessing the current state of the keyboard, such as what keys are currently pressed, and provides a method to send keystrokes to the active window.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Keyboard.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Devices.Keyboard" /> class. </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown">
      <summary>Gets a Boolean indicating if the ALT key is down.</summary>
      <returns>A Boolean value: True if the ALT key is down; otherwise False.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.CapsLock">
      <summary>Gets a Boolean indicating if CAPS LOCK is turned on. </summary>
      <returns>A Boolean value: True if CAPS LOCK is turned on; otherwise False.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown">
      <summary>Gets a Boolean indicating if a CTRL key is down.</summary>
      <returns>A Boolean value. True if a CTRL key is down; otherwise False.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.NumLock">
      <summary>Gets a Boolean indicating if the NUM LOCK key is on. </summary>
      <returns>A Boolean value. True if NUM LOCK is on; otherwise False.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.ScrollLock">
      <summary>Gets a Boolean indicating whether the SCROLL LOCK key is on. </summary>
      <returns>A Boolean value. True if SCROLL LOCK is on; otherwise False.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)">
      <summary>Sends one or more keystrokes to the active window, as if typed on the keyboard.</summary>
      <param name="keys">A String that defines the keys to send.</param>
      <exception cref="T:System.Security.SecurityException">A partial-trust situation exists in which the user lacks necessary permissions.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)">
      <summary>Sends one or more keystrokes to the active window, as if typed on the keyboard.</summary>
      <param name="keys">A String that defines the keys to send.</param>
      <param name="wait">Optional. A Boolean that specifies whether or not to wait for keystrokes to get processed before the application continues. True by default.</param>
      <exception cref="T:System.Security.SecurityException">A partial-trust situation exists in which the user lacks necessary permissions.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown">
      <summary>Gets a Boolean indicating if a SHIFT key is down.</summary>
      <returns>A Boolean value. True if a SHIFT key is down; otherwise False.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Mouse">
      <summary>Provides properties for getting information about the format and configuration of the mouse installed on the local computer.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Mouse.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Devices.Mouse" /> class. </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped">
      <summary>Gets a Boolean that indicates if the functionality of the left and right mouse buttons has been swapped.</summary>
      <returns>A Boolean with a value True if the functionality of the left and right mouse buttons has been swapped; otherwise, False.</returns>
      <exception cref="T:System.InvalidOperationException">The computer has no mouse installed.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Mouse.WheelExists">
      <summary>Gets a Boolean that indicates if the mouse has a scroll wheel.</summary>
      <returns>A Boolean with value True if the mouse has a scroll wheel; otherwise False.</returns>
      <exception cref="T:System.InvalidOperationException">The computer has no mouse installed.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines">
      <summary>Gets a number that indicates how much to scroll when the mouse wheel is rotated one notch.</summary>
      <returns>An Integer that indicates how much to scroll when the mouse wheel is rotated one notch. A positive value indicates scrolling by that number of lines, while a negative value indicates scrolling by one screen at a time.</returns>
      <exception cref="T:System.InvalidOperationException">The computer has no mouse installed.</exception>
      <exception cref="T:System.InvalidOperationException">The mouse has no scroll wheel.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Network">
      <summary>Provides a property, event, and methods for interacting with the network to which the computer is connected.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Devices.Network" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)">
      <summary>Downloads the specified remote file and saves it in the specified location.</summary>
      <param name="address">Path of the file to download, including file name and host address. </param>
      <param name="destinationFileName">File name and path of the downloaded file. </param>
      <exception cref="T:System.ArgumentException">The drive name is not valid</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
      <exception cref="T:System.Security.SecurityException">The target web site requires user credentials.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)">
      <summary>Downloads the specified remote file and saves it in the specified location.</summary>
      <param name="address">Path of the file to download, including file name and host address. </param>
      <param name="destinationFileName">File name and path of the downloaded file. </param>
      <param name="userName">User name to authenticate. Default is an empty string, "". </param>
      <param name="password">Password to authenticate. Default is an empty string, "". </param>
      <exception cref="T:System.ArgumentException">The drive name is not valid</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)">
      <summary>Downloads the specified remote file and saves it in the specified location.</summary>
      <param name="address">Path of the file to download, including file name and host address. </param>
      <param name="destinationFileName">File name and path of the downloaded file. </param>
      <param name="userName">User name to authenticate. Default is an empty string, "". </param>
      <param name="password">Password to authenticate. Default is an empty string, "". </param>
      <param name="showUI">True to display the progress of the operation; otherwise False. Default is False. </param>
      <param name="connectionTimeout">
        <see cref="T:System.Int32" />. Timeout interval, in milliseconds. Default is 100 seconds. </param>
      <param name="overwrite">True to overwrite existing files; otherwise False. Default is False. </param>
      <exception cref="T:System.ArgumentException">The drive name is not valid</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="overwrite" /> is set to False and the destination file already exists.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Downloads the specified remote file and saves it in the specified location.</summary>
      <param name="address">Path of the file to download, including file name and host address. </param>
      <param name="destinationFileName">File name and path of the downloaded file. </param>
      <param name="userName">User name to authenticate. Default is an empty string, "". </param>
      <param name="password">Password to authenticate. Default is an empty string, "". </param>
      <param name="showUI">True to display the progress of the operation; otherwise False. Default is False. </param>
      <param name="connectionTimeout">Timeout interval, in milliseconds. Default is 100 seconds. </param>
      <param name="overwrite">True to overwrite existing files; otherwise False. Default is False. </param>
      <param name="onUserCancel">Specifies behavior when the user clicks Cancel or No on the dialog box shown as a result of <paramref name="ShowUI" /> set to True. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />. </param>
      <exception cref="T:System.ArgumentException">The drive name is not valid</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="overwrite" /> is set to False and the destination file already exists.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)">
      <summary>Downloads the specified remote file and saves it in the specified location.</summary>
      <param name="address">Path of the file to download, including file name and host address. </param>
      <param name="destinationFileName">File name and path of the downloaded file. </param>
      <exception cref="T:System.ArgumentException">The drive name is not valid</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
      <exception cref="T:System.Security.SecurityException">The target web site requires user credentials.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)">
      <summary>Downloads the specified remote file and saves it in the specified location.</summary>
      <param name="address">String or <see cref="T:System.Uri" />. Path of the file to download, including file name and host address. </param>
      <param name="destinationFileName">String. File name and path of the downloaded file. </param>
      <param name="networkCredentials">
        <see cref="T:System.Net.ICredentials" />. Credentials to be supplied. </param>
      <param name="showUI">True to display the progress of the operation; otherwise False. Default is False. </param>
      <param name="connectionTimeout">Timeout interval, in milliseconds. Default is 100 seconds. </param>
      <param name="overwrite">True to overwrite existing files; otherwise False. Default is False. </param>
      <exception cref="T:System.ArgumentException">The drive name is not valid</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="overwrite" /> is set to False and the destination file already exists.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Downloads the specified remote file and saves it in the specified location.</summary>
      <param name="address">Path of the file to download, including file name and host address. </param>
      <param name="destinationFileName">File name and path of the downloaded file. </param>
      <param name="networkCredentials">Credentials to be supplied. </param>
      <param name="showUI">True to display the progress of the operation; otherwise False. Default is False. </param>
      <param name="connectionTimeout">Timeout interval, in milliseconds. Default is 100 seconds. </param>
      <param name="overwrite">True to overwrite existing files; otherwise False. Default is False. </param>
      <param name="onUserCancel">Specifies behavior when the user clicks Cancel or No on the dialog box shown as a result of <paramref name="showUI" /> set to True. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />. </param>
      <exception cref="T:System.ArgumentException">The drive name is not valid</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="overwrite" /> is set to False and the destination file already exists.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)">
      <summary>Downloads the specified remote file and saves it in the specified location.</summary>
      <param name="address">Path of the file to download, including file name and host address. </param>
      <param name="destinationFileName">File name and path of the downloaded file. </param>
      <param name="userName">User name to authenticate. Default is an empty string, "". </param>
      <param name="password">Password to authenticate. Default is an empty string, "". </param>
      <exception cref="T:System.ArgumentException">The drive name is not valid</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)">
      <summary>Downloads the specified remote file and saves it in the specified location.</summary>
      <param name="address">Path of the file to download, including file name and host address. </param>
      <param name="destinationFileName">File name and path of the downloaded file. </param>
      <param name="userName">User name to authenticate. Default is an empty string, "". </param>
      <param name="password">Password to authenticate. Default is an empty string, "". </param>
      <param name="showUI">True to display the progress of the operation; otherwise False. Default is False. </param>
      <param name="connectionTimeout">Timeout interval, in milliseconds. Default is 100 seconds. </param>
      <param name="overwrite">True to overwrite existing files; otherwise False. Default is False. </param>
      <exception cref="T:System.ArgumentException">The drive name is not valid</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="overwrite" /> is set to False and the destination file already exists.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Downloads the specified remote file and saves it in the specified location.</summary>
      <param name="address">Path of the file to download, including file name and host address. </param>
      <param name="destinationFileName">File name and path of the downloaded file. </param>
      <param name="userName">User name to authenticate. Default is an empty string, "". </param>
      <param name="password">Password to authenticate. Default is an empty string, "". </param>
      <param name="showUI">True to display the progress of the operation; otherwise False. Default is False. </param>
      <param name="connectionTimeout">Timeout interval, in milliseconds. Default is 100 seconds. </param>
      <param name="overwrite">True to overwrite existing files; otherwise False. Default is False. </param>
      <param name="onUserCancel">Specifies behavior when the user clicks Cancel or No on the dialog box shown as a result of <paramref name="ShowUI" /> set to True. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />. </param>
      <exception cref="T:System.ArgumentException">The drive name is not valid</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="overwrite" /> is set to False and the destination file already exists.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Network.IsAvailable">
      <summary>Indicates whether a computer is connected to a network.</summary>
      <returns>True if the computer is connected to a network; otherwise False.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Net.NetworkInformation.NetworkInformationPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Access="Read" />
      </PermissionSet>
    </member>
    <member name="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged">
      <summary>Occurs when the network availability changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String)">
      <summary>Pings the specified server.</summary>
      <returns>True if the operation was successful; otherwise False.</returns>
      <param name="hostNameOrAddress">The URL, computer name, or IP number of the server to ping.</param>
      <exception cref="T:System.InvalidOperationException">No network connection is available.</exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">URL was not valid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Net.NetworkInformation.NetworkInformationPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Access="Read" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)">
      <summary>Pings the specified server.</summary>
      <returns>True if the operation was successful; otherwise False.</returns>
      <param name="hostNameOrAddress">The URL, computer name, or IP number of the server to ping.</param>
      <param name="timeout">Time threshold in milliseconds for contacting the destination. Default is 500.</param>
      <exception cref="T:System.InvalidOperationException">No network connection is available.</exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">URL was not valid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Net.NetworkInformation.NetworkInformationPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Access="Read" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)">
      <summary>Pings the specified server.</summary>
      <returns>True if the operation was successful; otherwise False.</returns>
      <param name="address">The URI of the server to ping.</param>
      <exception cref="T:System.InvalidOperationException">No network connection is available.</exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">URL was not valid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Net.NetworkInformation.NetworkInformationPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Access="Read" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)">
      <summary>Pings the specified server.</summary>
      <returns>True if the operation was successful; otherwise False.</returns>
      <param name="address">The URI of the server to ping.</param>
      <param name="timeout">Time threshold in milliseconds for contacting the destination. Default is 500.</param>
      <exception cref="T:System.InvalidOperationException">No network connection is available.</exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">URL was not valid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Net.NetworkInformation.NetworkInformationPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Access="Read" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)">
      <summary>Sends the specified file to the specified host address.</summary>
      <param name="sourceFileName">Path and name of file to upload. </param>
      <param name="address">URL, IP address, or URI of destination server. </param>
      <exception cref="T:System.ArgumentException">The source file path is not valid.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> does not include a file name.</exception>
      <exception cref="T:System.Security.SecurityException">The target server requires user credentials.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)">
      <summary>Sends the specified file to the specified host address.</summary>
      <param name="sourceFileName">Path and name of file to upload. </param>
      <param name="address">URL, IP address, or URI of destination server. </param>
      <param name="userName">User name to authenticate. Default is an empty string: "".</param>
      <param name="password">Password to authenticate. Default is an empty string: "".</param>
      <exception cref="T:System.ArgumentException">The source file path is not valid.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> does not include a file name.</exception>
      <exception cref="T:System.Security.SecurityException">Authentication failed.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)">
      <summary>Sends the specified file to the specified host address.</summary>
      <param name="sourceFileName">Path and name of file to upload. </param>
      <param name="address">URL, IP address, or URI of destination server. </param>
      <param name="userName">User name to authenticate. Default is an empty string: "".</param>
      <param name="password">Password to authenticate. Default is an empty string: "".</param>
      <param name="showUI">True to display progress of the operation; otherwise False. Default is False. </param>
      <param name="connectionTimeout">Timeout interval in milliseconds. Default is 100 seconds. </param>
      <exception cref="T:System.ArgumentException">The source file path is not valid.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> does not include a file name.</exception>
      <exception cref="T:System.Security.SecurityException">Authentication failed.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Sends the specified file to the specified host address.</summary>
      <param name="sourceFileName">Path and name of file to upload. </param>
      <param name="address">URL, IP address, or URI of destination server. </param>
      <param name="userName">User name to authenticate. Default is an empty string: "".</param>
      <param name="password">Password to authenticate. Default is an empty string: "".</param>
      <param name="showUI">Whether to display progress of the operation. Default is False. </param>
      <param name="connectionTimeout">Timeout interval in milliseconds. Default is 100 seconds. </param>
      <param name="onUserCancel">Action to be taken when the user clicks Cancel. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">The source file path is not valid.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> does not include a file name.</exception>
      <exception cref="T:System.Security.SecurityException">Authentication failed.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)">
      <summary>Sends the specified file to the specified host address.</summary>
      <param name="sourceFileName">Path and name of file to upload. </param>
      <param name="address">URL, IP address, or URI of destination server. </param>
      <exception cref="T:System.ArgumentException">The source file path is not valid.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> does not include a file name.</exception>
      <exception cref="T:System.Security.SecurityException">The target server requires user credentials.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)">
      <summary>Sends the specified file to the specified host address.</summary>
      <param name="sourceFileName">Path and name of file to upload. </param>
      <param name="address">URL, IP address, or URI of destination server. </param>
      <param name="networkCredentials">Credentials for authentication. </param>
      <param name="showUI">True to display progress of the operation; otherwise False. Default is False. </param>
      <param name="connectionTimeout">Timeout interval in milliseconds. Default is 100 seconds. </param>
      <exception cref="T:System.ArgumentException">The source file path is not valid.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> does not include a file name.</exception>
      <exception cref="T:System.Security.SecurityException">Authentication failed.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Sends the specified file to the specified host address.</summary>
      <param name="sourceFileName">Path and name of file to upload. </param>
      <param name="address">URL, IP address, or URI of destination server. </param>
      <param name="networkCredentials">Credentials for authentication. </param>
      <param name="showUI">True to display progress of the operation; otherwise False. Default is False. </param>
      <param name="connectionTimeout">Timeout interval in milliseconds. Default is 100 seconds. </param>
      <param name="onUserCancel">Action to be taken when the user clicks Cancel. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">The source file path is not valid.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> does not include a file name.</exception>
      <exception cref="T:System.Security.SecurityException">Authentication failed.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)">
      <summary>Sends the specified file to the specified host address.</summary>
      <param name="sourceFileName">Path and name of file to upload. </param>
      <param name="address">URL, IP address, or URI of destination server. </param>
      <param name="userName">User name to authenticate. Default is an empty string: "".</param>
      <param name="password">Password to authenticate. Default is an empty string: "".</param>
      <exception cref="T:System.ArgumentException">The source file path is not valid.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> does not include a file name.</exception>
      <exception cref="T:System.Security.SecurityException">Authentication failed.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)">
      <summary>Sends the specified file to the specified host address.</summary>
      <param name="sourceFileName">Path and name of file to upload. </param>
      <param name="address">URL, IP address, or URI of destination server. </param>
      <param name="userName">User name to authenticate. Default is an empty string: "".</param>
      <param name="password">Password to authenticate. Default is an empty string: "".</param>
      <param name="showUI">True to display progress of the operation; otherwise False. Default is False. </param>
      <param name="connectionTimeout">Timeout interval in milliseconds. Default is 100 seconds. </param>
      <exception cref="T:System.ArgumentException">The source file path is not valid.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> does not include a file name.</exception>
      <exception cref="T:System.Security.SecurityException">Authentication failed.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Sends the specified file to the specified host address.</summary>
      <param name="sourceFileName">Path and name of file to upload. </param>
      <param name="address">URL, IP address, or URI of destination server. </param>
      <param name="userName">User name to authenticate. Default is an empty string: "".</param>
      <param name="password">Password to authenticate. Default is an empty string: "".</param>
      <param name="showUI">Whether to display progress of the operation. Default is False. </param>
      <param name="connectionTimeout">Timeout interval in milliseconds. Default is 100 seconds. </param>
      <param name="onUserCancel">Action to be taken when the user clicks Cancel. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">The source file path is not valid.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> does not include a file name.</exception>
      <exception cref="T:System.Security.SecurityException">Authentication failed.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs">
      <summary>Provides data for the My.Application.NetworkAvailabilityChanged and My.Computer.Network.NetworkAvailabilityChanged events. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" /> class.</summary>
      <param name="networkAvailable">A <see cref="T:System.Boolean" /> that indicates whether a network is available to the application.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable">
      <summary>Gets a value indicating whether a network is available to the application.</summary>
      <returns>A <see cref="T:System.Boolean" /> that indicates whether a network is available to the application.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler">
      <summary>Represents the method that will handle the My.Application.NetworkAvailabilityChanged or My.Computer.Network.NetworkAvailabilityChanged event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs" /> object that contains the event data.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Ports">
      <summary>Provides a property and a method for accessing the computer's serial ports.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Devices.Ports" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)">
      <summary>Creates and opens a <see cref="T:System.IO.Ports.SerialPort" /> object.</summary>
      <returns>An open <see cref="T:System.IO.Ports.SerialPort" /> object, configured with the supplied arguments.</returns>
      <param name="portName">String. Required. Name of the port to open.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="portName" /> is Nothing or an empty string.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)">
      <summary>Creates and opens a <see cref="T:System.IO.Ports.SerialPort" /> object.</summary>
      <returns>An open <see cref="T:System.IO.Ports.SerialPort" /> object, configured with the supplied arguments.</returns>
      <param name="portName">String. Required. Name of the port to open.</param>
      <param name="baudRate">Integer. Baud rate of the port.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="portName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="baudRate" /> is less than or equal to zero.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)">
      <summary>Creates and opens a <see cref="T:System.IO.Ports.SerialPort" /> object.</summary>
      <returns>An open <see cref="T:System.IO.Ports.SerialPort" /> object, configured with the supplied arguments.</returns>
      <param name="portName">String. Required. Name of the port to open.</param>
      <param name="baudRate">Integer. Baud rate of the port.</param>
      <param name="parity">
        <see cref="T:System.IO.Ports.Parity" />. Parity of the port.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="portName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="baudRate" /> is less than or equal to zero.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="parity" /> is not one of the <see cref="T:System.IO.Ports.Parity" /> enumeration values.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)">
      <summary>Creates and opens a <see cref="T:System.IO.Ports.SerialPort" /> object.</summary>
      <returns>An open <see cref="T:System.IO.Ports.SerialPort" /> object, configured with the supplied arguments.</returns>
      <param name="portName">String. Required. Name of the port to open.</param>
      <param name="baudRate">Integer. Baud rate of the port.</param>
      <param name="parity">
        <see cref="T:System.IO.Ports.Parity" />. Parity of the port.</param>
      <param name="dataBits">Integer. Data-bit setting of the port.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="portName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="baudRate" /> is less than or equal to zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dataBits" /> is less than or equal to zero.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="parity" /> is not one of the <see cref="T:System.IO.Ports.Parity" /> enumeration values.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)">
      <summary>Creates and opens a <see cref="T:System.IO.Ports.SerialPort" /> object.</summary>
      <returns>An open <see cref="T:System.IO.Ports.SerialPort" /> object, configured with the supplied arguments.</returns>
      <param name="portName">String. Required. Name of the port to open.</param>
      <param name="baudRate">Integer. Baud rate of the port.</param>
      <param name="parity">
        <see cref="T:System.IO.Ports.Parity" />. Parity of the port.</param>
      <param name="dataBits">Integer. Data-bit setting of the port.</param>
      <param name="stopBits">
        <see cref="T:System.IO.Ports.StopBits" />. Stop-bit setting of the port.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="portName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="baudRate" /> is less than or equal to zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dataBits" /> is less than or equal to zero.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="parity" /> is not one of the <see cref="T:System.IO.Ports.Parity" /> enumeration values.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="stopBits" /> is not one of the <see cref="T:System.IO.Ports.StopBits" /> enumeration values.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames">
      <summary>Gets a collection of the names of the serial ports on the computer.</summary>
      <returns>A collection of the names of the serial ports on the computer.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.ServerComputer">
      <summary>Provides properties for manipulating computer components such as audio, the clock, the keyboard, the file system, and so on.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.ServerComputer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Devices.ServerComputer" /> class. </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Clock">
      <summary>Gets an object that provides properties for accessing the current local time and Universal Coordinated Time (the equivalent to Greenwich Mean Time) from the system clock.</summary>
      <returns>The My.Computer.Clock object for the computer.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.FileSystem">
      <summary>Gets an object that provides properties and methods for working with drives, files, and directories.</summary>
      <returns>The My.Computer.FileSystem object for the computer.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Info">
      <summary>Gets an object that provides properties for getting information about the computer's memory, loaded assemblies, name, and operating system.</summary>
      <returns>The My.Computer.Info object for the computer.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Name">
      <summary>Gets the computer name.</summary>
      <returns>A String containing the name of the computer.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="COMPUTERNAME" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Network">
      <summary>Gets an object that provides a property and methods for interacting with the network to which the computer is connected.</summary>
      <returns>The My.Computer.Network object for the computer.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Net.NetworkInformation.NetworkInformationPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Access="Read" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry">
      <summary>Gets an object that provides properties and methods for manipulating the registry.</summary>
      <returns>The My.Computer.Registry object for the computer.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption">
      <summary>Specifies what should be done when a directory that is to be deleted contains files or directories.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty">
      <summary>Throw an <see cref="T:System.IO.IOException" /> if the directory is not empty. The Data property of the exception lists the file(s) that could not be deleted.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents">
      <summary>Delete the contents of the directory along with the directory. Default.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FieldType">
      <summary>Indicates whether text fields are delimited or fixed width.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.Delimited">
      <summary>Indicates that the fields are delimited.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.FixedWidth">
      <summary>Indicates that the fields are fixed width.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FileSystem">
      <summary>Provides properties and methods for working with drives, files, and directories.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)">
      <summary>Combines two paths and returns a properly formatted path.</summary>
      <returns>The combination of the specified paths.</returns>
      <param name="baseDirectory">String. First path to be combined. </param>
      <param name="relativePath">String. Second path to be combined. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="baseDirectory" /> or <paramref name="relativePath" /> are malformed paths.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)">
      <summary>Copies a directory to another directory.</summary>
      <param name="sourceDirectoryName">The directory to be copied.</param>
      <param name="destinationDirectoryName">The location to which the directory should be copied.</param>
      <exception cref="T:System.ArgumentException">The new name specified for the directory contains a colon (:) or slash (\ or /).</exception>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> or <paramref name="sourceDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The source directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source directory is a root directory</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing file.</exception>
      <exception cref="T:System.IO.IOException">The source path and target path are the same.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A folder name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">A destination file exists but cannot be accessed.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Copies a directory to another directory.</summary>
      <param name="sourceDirectoryName">The directory to be copied.</param>
      <param name="destinationDirectoryName">The location to which the directory should be copied.</param>
      <param name="showUI">Whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs.</param>
      <exception cref="T:System.ArgumentException">The new name specified for the directory contains a colon (:) or slash (\ or /).</exception>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> or <paramref name="sourceDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The source directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source directory is a root directory</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing file.</exception>
      <exception cref="T:System.IO.IOException">The source path and target path are the same.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A folder name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">A destination file exists but cannot be accessed.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> is set to UIOption.AllDialogs and the user cancels the operation, or one or more files in the directory cannot be copied.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Copies a directory to another directory.</summary>
      <param name="sourceDirectoryName">The directory to be copied.</param>
      <param name="destinationDirectoryName">The location to which the directory should be copied.</param>
      <param name="showUI">Whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs.</param>
      <param name="onUserCancel">Specifies what should be done if the user clicks Cancel during the operation. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">The new name specified for the directory contains a colon (:) or slash (\ or /).</exception>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> or <paramref name="sourceDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The source directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source directory is a root directory</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing file.</exception>
      <exception cref="T:System.IO.IOException">The source path and target path are the same.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A folder name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">A destination file exists but cannot be accessed.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> is set to UIOption.AllDialogs and the user cancels the operation, or one or more files in the directory cannot be copied.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary>Copies a directory to another directory.</summary>
      <param name="sourceDirectoryName">The directory to be copied.</param>
      <param name="destinationDirectoryName">The location to which the directory should be copied.</param>
      <param name="overwrite">True to overwrite existing files; otherwise False. Default is False.</param>
      <exception cref="T:System.ArgumentException">The new name specified for the directory contains a colon (:) or slash (\ or /).</exception>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> or <paramref name="sourceDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The source directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source directory is a root directory</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing file.</exception>
      <exception cref="T:System.IO.IOException">The source path and target path are the same.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A folder name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">A destination file exists but cannot be accessed.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)">
      <summary>Copies a file to a new location.</summary>
      <param name="sourceFileName">The file to be copied. </param>
      <param name="destinationFileName">The location to which the file should be copied. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentException">The system could not retrieve the absolute path.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName " />contains path information.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> or <paramref name="sourceFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing directory.</exception>
      <exception cref="T:System.IO.IOException">The user does not have sufficient permissions to access the file.</exception>
      <exception cref="T:System.IO.IOException">A file in the target directory with the same name is in use.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Copies a file to a new location.</summary>
      <param name="sourceFileName">The file to be copied. </param>
      <param name="destinationFileName">The location to which the file should be copied. </param>
      <param name="showUI">Whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs.</param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentException">The system could not retrieve the absolute path.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName " />contains path information.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> or <paramref name="sourceFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing directory.</exception>
      <exception cref="T:System.IO.IOException">The user does not have sufficient permissions to access the file.</exception>
      <exception cref="T:System.IO.IOException">A file in the target directory with the same name is in use.</exception>
      <exception cref="T:System.IO.IOException">The destination file exists and <paramref name="overwrite" /> is set to False.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Copies a file to a new location.</summary>
      <param name="sourceFileName">The file to be copied. </param>
      <param name="destinationFileName">The location to which the file should be copied. </param>
      <param name="showUI">Whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs.</param>
      <param name="onUserCancel">Specifies what should be done if the user clicks Cancel during the operation. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentException">The system could not retrieve the absolute path.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName " />contains path information.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> or <paramref name="sourceFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing directory.</exception>
      <exception cref="T:System.IO.IOException">The user does not have sufficient permissions to access the file.</exception>
      <exception cref="T:System.IO.IOException">A file in the target directory with the same name is in use.</exception>
      <exception cref="T:System.IO.IOException">The destination file exists and <paramref name="overwrite" /> is set to False.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="UICancelOption" /> is set to ThrowException, and the user has canceled the operation or an unspecified I/O error occurs.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)">
      <summary>Copies a file to a new location.</summary>
      <param name="sourceFileName">The file to be copied. </param>
      <param name="destinationFileName">The location to which the file should be copied. </param>
      <param name="overwrite">True if existing files should be overwritten; otherwise False. Default is False. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentException">The system could not retrieve the absolute path.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName " />contains path information.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> or <paramref name="sourceFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing directory.</exception>
      <exception cref="T:System.IO.IOException">The user does not have sufficient permissions to access the file.</exception>
      <exception cref="T:System.IO.IOException">A file in the target directory with the same name is in use.</exception>
      <exception cref="T:System.IO.IOException">The destination file exists and <paramref name="overwrite" /> is set to False.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)">
      <summary>Creates a directory.</summary>
      <param name="directory">Name and location of the directory. </param>
      <exception cref="T:System.ArgumentException">The directory name is malformed. For example, it contains illegal characters or is only white space.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.PathTooLongException">The directory name is too long.</exception>
      <exception cref="T:System.NotSupportedException">The directory name is only a colon (:).</exception>
      <exception cref="T:System.IO.IOException">The parent directory of the directory to be created is read-only</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have permission to create the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory">
      <summary>Gets or sets the current directory.</summary>
      <returns>The current directory for file I/O operations.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is not valid.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks necessary permissions.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary>Deletes a directory.</summary>
      <param name="directory">Directory to be deleted. </param>
      <param name="onDirectoryNotEmpty">Specifies what should be done when a directory that is to be deleted contains files or directories. Default is DeleteDirectoryOption.DeleteAllContents.</param>
      <exception cref="T:System.ArgumentException">The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist or is a file.</exception>
      <exception cref="T:System.IO.IOException">The directory is not empty, and <paramref name="onDirectoryNotEmpty" /> is set to ThrowIfDirectoryNonEmpty.</exception>
      <exception cref="T:System.IO.IOException">The user does not have permission to delete the directory or subdirectory.</exception>
      <exception cref="T:System.IO.IOException">A file in the directory or subdirectory is in use.</exception>
      <exception cref="T:System.NotSupportedException">The directory name contains a colon (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have required permissions.</exception>
      <exception cref="T:System.OperationCanceledException">The user cancels the operation or the directory cannot be deleted.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>Deletes a directory.</summary>
      <param name="directory">Directory to be deleted. </param>
      <param name="showUI">Specifies whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <param name="recycle">Specifies whether or not the deleted file should be sent to the Recycle Bin. Default is RecycleOption.DeletePermanently. </param>
      <exception cref="T:System.ArgumentException">The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist or is a file.</exception>
      <exception cref="T:System.IO.IOException">The directory is not empty, and <paramref name="onDirectoryNotEmpty" /> is set to ThrowIfDirectoryNonEmpty.</exception>
      <exception cref="T:System.IO.IOException">The user does not have permission to delete the directory or subdirectory.</exception>
      <exception cref="T:System.IO.IOException">A file in the directory or subdirectory is in use.</exception>
      <exception cref="T:System.NotSupportedException">The directory name contains a colon (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have required permissions.</exception>
      <exception cref="T:System.OperationCanceledException">The user cancels the operation or the directory cannot be deleted.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Deletes a directory.</summary>
      <param name="directory">Directory to be deleted. </param>
      <param name="showUI">Specifies whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <param name="recycle">Specifies whether or not the deleted file should be sent to the Recycle Bin. Default is RecycleOption.DeletePermanently. </param>
      <param name="onUserCancel">Specifies whether to throw an exception if the user clicks Cancel. </param>
      <exception cref="T:System.ArgumentException">The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist or is a file.</exception>
      <exception cref="T:System.IO.IOException">The directory is not empty, and <paramref name="onDirectoryNotEmpty" /> is set to ThrowIfDirectoryNonEmpty.</exception>
      <exception cref="T:System.IO.IOException">The user does not have permission to delete the directory or subdirectory.</exception>
      <exception cref="T:System.IO.IOException">A file in the directory or subdirectory is in use.</exception>
      <exception cref="T:System.NotSupportedException">The directory name contains a colon (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have required permissions.</exception>
      <exception cref="T:System.OperationCanceledException">The user cancels the operation or the directory cannot be deleted.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)">
      <summary>Deletes a file.</summary>
      <param name="file">Name and path of the file to be deleted. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.IO.IOException">The file is in use.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have permission to delete the file or the file is read-only.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>Deletes a file.</summary>
      <param name="file">Name and path of the file to be deleted. </param>
      <param name="showUI">Whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <param name="recycle">Whether or not the deleted file should be sent to the Recycle Bin. Default is RecycleOption.DeletePermanently. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.IO.IOException">The file is in use.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have permission to delete the file or the file is read-only.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Deletes a file.</summary>
      <param name="file">Name and path of the file to be deleted. </param>
      <param name="showUI">Whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <param name="recycle">Whether or not the deleted file should be sent to the Recycle Bin. Default is RecycleOption.DeletePermanently. </param>
      <param name="onUserCancel">Specifies whether or not an exception is thrown when the user cancels the operation. Default is UICancelOption.ThrowException. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.IO.IOException">The file is in use.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have permission to delete the file or the file is read-only.</exception>
      <exception cref="T:System.OperationCanceledException">The user cancelled the operation and <paramref name="onUserCancel" /> is set to <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)">
      <summary>Returns True if the specified directory exists.</summary>
      <returns>True if the directory exists; otherwise False.</returns>
      <param name="directory">Path of the directory. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.Drives">
      <summary>Returns a read-only collection of all available drive names.</summary>
      <returns>A read-only collection of all available drives as <see cref="T:System.IO.DriveInfo" /> objects.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        <IPermission version="1" class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)">
      <summary>Returns True if the specified file exists.</summary>
      <returns>Returns True if the file exists; otherwise this method returns False.</returns>
      <param name="file">Name and path of the file. </param>
      <exception cref="T:System.ArgumentException">The name of the file ends with a backslash (\).</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary>Returns a read-only collection of strings representing the names of files containing the specified text.</summary>
      <returns>Read-only collection of the names of files containing the specified text..</returns>
      <param name="directory">The directory to be searched.</param>
      <param name="containsText">The search text.</param>
      <param name="ignoreCase">True if the search should be case-sensitive; otherwise False. Default is True.</param>
      <param name="searchType">Whether to include subfolders. Default is SearchOption.SearchTopLevelOnly. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The specified directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The specified directory points to an existing file.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">The specified directory path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks necessary permissions.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Returns a read-only collection of strings representing the names of files containing the specified text.</summary>
      <returns>Read-only collection of the names of files containing the specified text..</returns>
      <param name="directory">The directory to be searched.</param>
      <param name="containsText">The search text.</param>
      <param name="ignoreCase">True if the search should be case-sensitive; otherwise False. Default is True.</param>
      <param name="searchType">Whether to include subfolders. Default is SearchOption.SearchTopLevelOnly. </param>
      <param name="fileWildcards">Pattern to be matched.</param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The specified directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The specified directory points to an existing file.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">The specified directory path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks necessary permissions.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)">
      <summary>Returns a collection of strings representing the path names of subdirectories within a directory.</summary>
      <returns>Read-only collection of the path names of subdirectories within the specified directory..</returns>
      <param name="directory">Name and path of directory. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The specified directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The specified directory points to an existing file.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks necessary permissions.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        <IPermission version="1" class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Returns a collection of strings representing the path names of subdirectories within a directory.</summary>
      <returns>Read-only collection of the path names of subdirectories within the specified directory.</returns>
      <param name="directory">Name and path of directory. </param>
      <param name="searchType">Whether to include subfolders. Default is SearchOption.SearchTopLevelOnly. </param>
      <param name="wildcards">Pattern to match names. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">One or more of the specified wildcard characters is Nothing, an empty string, or contains only spaces.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The specified directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The specified directory points to an existing file.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks necessary permissions.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)">
      <summary>Returns a <see cref="T:System.IO.DirectoryInfo" /> object for the specified path.</summary>
      <returns>
        <see cref="T:System.IO.DirectoryInfo" /> object for the specified path.</returns>
      <param name="directory">String. Path of directory. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">The directory path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)">
      <summary>Returns a <see cref="T:System.IO.DriveInfo" /> object for the specified drive.</summary>
      <returns>
        <see cref="T:System.IO.DriveInfo" /> object for the specified drive.</returns>
      <param name="drive">Drive to be examined. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="drive" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)">
      <summary>Returns a <see cref="T:System.IO.FileInfo" /> object for the specified file.</summary>
      <returns>
        <see cref="T:System.IO.FileInfo" /> object for the specified file</returns>
      <param name="file">Name and path of the file. </param>
      <exception cref="T:System.ArgumentException">The path name is malformed. For example, it contains invalid characters or is only white space. The file name has a trailing slash mark.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.NotSupportedException">The path contains a colon in the middle of the string.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path is too long.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks ACL (access control list) access to the file.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)">
      <summary>Returns a read-only collection of strings representing the names of files within a directory.</summary>
      <returns>Read-only collection of file names from the specified directory.</returns>
      <param name="directory">Directory to be searched. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory to search does not exist.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> points to an existing file.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks necessary permissions.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        <IPermission version="1" class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Returns a read-only collection of strings representing the names of files within a directory.</summary>
      <returns>Read-only collection of file names from the specified directory.</returns>
      <param name="directory">Directory to be searched. </param>
      <param name="searchType">Whether to include subfolders. Default is SearchOption.SearchTopLevelOnly. </param>
      <param name="wildcards">Pattern to be matched. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory to search does not exist.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> points to an existing file.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks necessary permissions.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)">
      <summary>Parses the file name out of the path provided.</summary>
      <returns>The file name from the specified path.</returns>
      <param name="path">Required. Path to be parsed. String.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)">
      <summary>Returns the parent path of the provided path.</summary>
      <returns>The parent path of the provided path.</returns>
      <param name="path">Path to be examined. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentException">Path does not have a parent path because it is a root path.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is Nothing.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName">
      <summary>Creates a uniquely named zero-byte temporary file on disk and returns the full path of that file.</summary>
      <returns>String containing the full path of the temporary file.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)">
      <summary>Moves a directory from one location to another.</summary>
      <param name="sourceDirectoryName">Path of the directory to be moved. </param>
      <param name="destinationDirectoryName">Path of the directory to which the source directory is being moved. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source is a root directory or The source path and the target path are the same.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Moves a directory from one location to another.</summary>
      <param name="sourceDirectoryName">Path of the directory to be moved. </param>
      <param name="destinationDirectoryName">Path of the directory to which the source directory is being moved. </param>
      <param name="showUI">Specifies whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source is a root directory or The source path and the target path are the same.</exception>
      <exception cref="T:System.IO.IOException">The target directory already exists and o<paramref name="verwrite" /> is set to False.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Moves a directory from one location to another.</summary>
      <param name="sourceDirectoryName">Path of the directory to be moved. </param>
      <param name="destinationDirectoryName">Path of the directory to which the source directory is being moved. </param>
      <param name="showUI">Specifies whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <param name="onUserCancel">Specifies whether or not an exception is thrown when the user cancels the operation. Default is UICancelOption.ThrowException. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source is a root directory or The source path and the target path are the same.</exception>
      <exception cref="T:System.IO.IOException">The target directory already exists and o<paramref name="verwrite" /> is set to False.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="onUserCancel" /> is set to ThrowException and a subdirectory of the file cannot be copied.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> is set to ThrowException, and the user cancels the operation, or the operation cannot be completed.</exception>
      <exception cref="T:System.Security.SecurityException">
        <paramref name="onUserCancel" /> is set to ThrowException, and the user lacks necessary permissions.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary>Moves a directory from one location to another.</summary>
      <param name="sourceDirectoryName">Path of the directory to be moved. </param>
      <param name="destinationDirectoryName">Path of the directory to which the source directory is being moved. </param>
      <param name="overwrite">True if existing directories should be overwritten; otherwise False. Default is False. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source is a root directory or The source path and the target path are the same.</exception>
      <exception cref="T:System.IO.IOException">The target directory already exists and o<paramref name="verwrite" /> is set to False.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)">
      <summary>Moves a file to a new location.</summary>
      <param name="sourceFileName">Path of the file to be moved. </param>
      <param name="destinationFileName">Path of the directory into which the file should be moved. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Moves a file to a new location.</summary>
      <param name="sourceFileName">Path of the file to be moved. </param>
      <param name="destinationFileName">Path of the directory into which the file should be moved. </param>
      <param name="showUI">Specifies whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The destination file exists and <paramref name="overwrite" /> is set to False.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Moves a file to a new location.</summary>
      <param name="sourceFileName">Path of the file to be moved. </param>
      <param name="destinationFileName">Path of the directory into which the file should be moved. </param>
      <param name="showUI">Specifies whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <param name="onUserCancel">Specifies whether or not an exception is thrown when the user cancels the operation. Default is UICancelOption.ThrowException. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The destination file exists and <paramref name="overwrite" /> is set to False.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> is set to ThrowException, and either the user has cancelled the operation or an unspecified I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)">
      <summary>Moves a file to a new location.</summary>
      <param name="sourceFileName">Path of the file to be moved. </param>
      <param name="destinationFileName">Path of the directory into which the file should be moved. </param>
      <param name="overwrite">True to overwrite existing files; otherwise False. Default is False. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The destination file exists and <paramref name="overwrite" /> is set to False.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)">
      <summary>The OpenTextFieldParser method allows you to create a <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object,  which provides a way to easily and efficiently parse structured text files, such as logs. The TextFieldParser object can be used to read both delimited and fixed-width files.</summary>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> to read the specified file.</returns>
      <param name="file">The file to be opened with the TextFieldParser.</param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />  property is assigned the text contained in the line.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])">
      <summary>The OpenTextFieldParser method allows you to create a <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object, which provides a way to easily and efficiently parse structured text files, such as logs. The TextFieldParser object can be used to read both delimited and fixed-width files.</summary>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> to read the specified file.</returns>
      <param name="file">The file to be opened with the TextFieldParser.</param>
      <param name="fieldWidths">Widths of the fields.</param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />  property is assigned the text contained in the line.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])">
      <summary>The OpenTextFieldParser method allows you to create a <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object, which provides a way to easily and efficiently parse structured text files, such as logs. The TextFieldParser object can be used to read both delimited and fixed-width files.</summary>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> to read the specified file.</returns>
      <param name="file">The file to be opened with the TextFieldParser.</param>
      <param name="delimiters">Delimiters for the fields.</param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />  property is assigned the text contained in the line.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)">
      <summary>Opens a <see cref="T:System.IO.StreamReader" /> object to read from a file.</summary>
      <returns>
        <see cref="T:System.IO.StreamReader" /> object to read from the file</returns>
      <param name="file">File to be read. </param>
      <exception cref="T:System.ArgumentException">The file name ends with a backslash (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException">The specified file cannot be found.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to read from the file.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary>Opens a <see cref="T:System.IO.StreamReader" /> object to read from a file.</summary>
      <returns>
        <see cref="T:System.IO.StreamReader" /> object to read from the file</returns>
      <param name="file">File to be read. </param>
      <param name="encoding">The encoding to use for the file contents. Default is ASCII. </param>
      <exception cref="T:System.ArgumentException">The file name ends with a backslash (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException">The specified file cannot be found.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to read from the file.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)">
      <summary>Opens a <see cref="T:System.IO.StreamWriter" /> object to write to the specified file.</summary>
      <returns>
        <see cref="T:System.IO.StreamWriter" /> object to write to the specified file.</returns>
      <param name="file">File to be written to. </param>
      <param name="append">True to append to the contents of the file; False to overwrite the contents of the file. Default is False. </param>
      <exception cref="T:System.ArgumentException">The file name ends with a trailing slash.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary>Opens a <see cref="T:System.IO.StreamWriter" /> to write to the specified file.</summary>
      <returns>
        <see cref="T:System.IO.StreamWriter" /> object to write to the specified file.</returns>
      <param name="file">File to be written to. </param>
      <param name="append">True to append to the contents in the file; False to overwrite the contents of the file. Default is False. </param>
      <param name="encoding">Encoding to be used in writing to the file. Default is ASCII. </param>
      <exception cref="T:System.ArgumentException">The file name ends with a trailing slash.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)">
      <summary>Returns the contents of a file as a byte array.</summary>
      <returns>Byte array containing the contents of the file.</returns>
      <param name="file">File to be read. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to write the string to buffer.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)">
      <summary>Returns the contents of a text file as a String.</summary>
      <returns>String containing the contents of the file.</returns>
      <param name="file">Name and path of the file to read. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to write the string to buffer.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)">
      <summary>Returns the contents of a text file as a String.</summary>
      <returns>String containing the contents of the file.</returns>
      <param name="file">Name and path of the file to read. </param>
      <param name="encoding">Character encoding to use in reading the file. Default is UTF-8.</param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to write the string to buffer.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)">
      <summary>Renames a directory.</summary>
      <param name="directory">Path and name of directory to be renamed. </param>
      <param name="newName">New name for directory. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> contains path information.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing.-or-<paramref name="newName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">There is an existing file or directory with the name specified in <paramref name="newName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds 248 characters.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)">
      <summary>Renames a file.</summary>
      <param name="file">File to be renamed. </param>
      <param name="newName">New name of file. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> contains path information or ends with a backslash (\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.-or-<paramref name="newName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">There is an existing file or directory with the name specified in <paramref name="newName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary>Writes data to a binary file.</summary>
      <param name="file">Path and name of the file to be written to. </param>
      <param name="data">Data to be written to the file. </param>
      <param name="append">True to append to the file contents; False to overwrite the file contents. Default is False. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to write the string to buffer.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)">
      <summary>Writes text to a file.</summary>
      <param name="file">File to be written to. </param>
      <param name="text">Text to be written to file. </param>
      <param name="append">True to append to the contents of the file; False to overwrite the contents of the file. Default is False. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to write the string to buffer.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary>Writes text to a file.</summary>
      <param name="file">File to be written to. </param>
      <param name="text">Text to be written to file. </param>
      <param name="append">True to append to the contents of the file; False to overwrite the contents of the file. Default is False. </param>
      <param name="encoding">What encoding to use when writing to file. Default is UTF-8.</param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to write the string to buffer.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.MalformedLineException">
      <summary>The exception that is thrown when the <see cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" /> method cannot parse a row using the specified format.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> class with a specified error message.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">A <see cref="T:System.String" /> describing the error.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> object that is the cause of the current exception. If the <see cref="P:System.Exception.InnerException" /> parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> class with a specified error message and a line number.</summary>
      <param name="message">The message for the exception.</param>
      <param name="lineNumber">The line number of the malformed line.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> class with a specified error message, a line number, and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The message for the exception.</param>
      <param name="lineNumber">The line number of the malformed line.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that is the cause of the current exception. If the <see cref="P:System.Exception.InnerException" /> parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure that contains contextual information about the source or destination.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, SerializationFormatter" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber">
      <summary>Gets the line number of the malformed line.</summary>
      <returns>The line number of the malformed line.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.ToString">
      <summary>Creates and returns a string representation of the current exception. </summary>
      <returns>A string representation of the current exception.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.RecycleOption">
      <summary>Specifies whether a file should be deleted permanently or placed in the Recycle Bin.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.DeletePermanently">
      <summary>Delete the file or directory permanently. Default.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.SendToRecycleBin">
      <summary>Send the file or directory to the Recycle Bin.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SearchOption">
      <summary>Specifies whether to search all or only top-level directories.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchTopLevelOnly">
      <summary>Search only the specified directory and exclude subdirectories.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchAllSubDirectories">
      <summary>Search the specified directory and all subdirectories within it. Default.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SpecialDirectories">
      <summary>Provides properties for accessing commonly referenced directories.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor">
      <summary>Returns an instance of the <see cref="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData">
      <summary>Gets a path name pointing to the Application Data directory for the all users.</summary>
      <returns>The path to the Application Data directory for the all users.</returns>
      <exception cref="T:System.Security.Permissions.EnvironmentPermission">Controls access to system and user environment variables. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData">
      <summary>Gets a path name pointing to the Application Data directory for the current user.</summary>
      <returns>The path to the Application Data directory for the current user.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop">
      <summary>Gets a path name pointing to the Desktop directory.</summary>
      <returns>The path to the Desktop directory.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments">
      <summary>Gets a path name pointing to the My Documents directory.</summary>
      <returns>The path to the My Documents directory.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic">
      <summary>Gets a path name pointing to the My Music directory.</summary>
      <returns>The path to the My Music directory.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures">
      <summary>Gets a path name pointing to the My Pictures directory.</summary>
      <returns>The path to the My Pictures directory.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles">
      <summary>Gets a path pointing to the Program Files directory.</summary>
      <returns>The path to the Program Files directory.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs">
      <summary>Gets a path name pointing to the Programs directory.</summary>
      <returns>The path to the Programs directory.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp">
      <summary>Gets a path name pointing to the Temp directory.</summary>
      <returns>The path to the Temp directory.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
      <summary>Provides methods and properties for parsing structured text files.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)">
      <summary>Initializes a new instance of the TextFieldParser class.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. The stream to be parsed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is Nothing.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> cannot be read from.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>Initializes a new instance of the TextFieldParser class.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. The stream to be parsed.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. The character encoding to use if encoding is not determined from file. Default is <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> or <paramref name="defaultEncoding" /> is Nothing.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> cannot be read from.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Initializes a new instance of the TextFieldParser class.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. The stream to be parsed.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. The character encoding to use if encoding is not determined from file. Default is <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <param name="detectEncoding">Boolean. Indicates whether to look for byte order marks at the beginning of the file. Default is True.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> or <paramref name="defaultEncoding" /> is Nothing.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> cannot be read from.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the TextFieldParser class.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. The stream to be parsed.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. The character encoding to use if encoding is not determined from file. Default is <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <param name="detectEncoding">Boolean. Indicates whether to look for byte order marks at the beginning of the file. Default is True.</param>
      <param name="leaveOpen">Boolean. Indicates whether to leave <paramref name="stream" /> open when the TextFieldParser object is closed. Default is False.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> or <paramref name="defaultEncoding" /> is Nothing.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> cannot be read from.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)">
      <summary>Initializes a new instance of the TextFieldParser class.</summary>
      <param name="reader">
        <see cref="T:System.IO.TextReader" />. The <see cref="T:System.IO.TextReader" /> stream to be parsed. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is Nothing.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)">
      <summary>Initializes a new instance of the TextFieldParser class.</summary>
      <param name="path">String. The complete path of the file to be parsed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is an empty string.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
      <summary>Initializes a new instance of the TextFieldParser class.</summary>
      <param name="path">String. The complete path of the file to be parsed.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. The character encoding to use if encoding is not determined from file. Default is <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is an empty string or <paramref name="defaultEncoding" /> is Nothing.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
      <summary>Initializes a new instance of the TextFieldParser class.</summary>
      <param name="path">String. The complete path of the file to be parsed.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. The character encoding to use if encoding is not determined from file. Default is <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <param name="detectEncoding">Boolean. Indicates whether to look for byte order marks at the beginning of the file. Default is True.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is an empty string or <paramref name="defaultEncoding" /> is Nothing.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Close">
      <summary>Closes the current TextFieldParser object.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
      <summary>Defines comment tokens. A comment token is a string that, when placed at the beginning of a line, indicates that the line is a comment and should be ignored by the parser.</summary>
      <returns>A string array that contains all of the comment tokens for the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</returns>
      <exception cref="T:System.ArgumentException">A comment token includes white space.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
      <summary>Defines the delimiters for a text file. </summary>
      <returns>A string array that contains all of the field delimiters for the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</returns>
      <exception cref="T:System.ArgumentException">A delimiter value is set to a newline character, an empty string, or Nothing.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose">
      <summary>Releases resources used by the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)">
      <summary>Releases resources used by the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</summary>
      <param name="disposing">Boolean. True releases both managed and unmanaged resources; False releases only unmanaged resources.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
      <summary>Returns True if there are no non-blank, non-comment lines between the current cursor position and the end of the file.</summary>
      <returns>True if there is no more data to read; otherwise, False.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
      <summary>Returns the line that caused the most recent <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> exception.</summary>
      <returns>The line that caused the most recent <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> exception.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
      <summary>Returns the number of the line that caused the most recent <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> exception.</summary>
      <returns>The number of the line that caused the most recent <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> exception.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
      <summary>Denotes the width of each column in the text file being parsed.</summary>
      <returns>An integer array that contains the width of each column in the text file that is being parsed.</returns>
      <exception cref="T:System.ArgumentException">A width value in any location other than the last entry of the array is less than or equal to zero.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize">
      <summary>Allows the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object to attempt to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
      <summary>Denotes whether fields are enclosed in quotation marks when a delimited file is being parsed.</summary>
      <returns>True if fields are enclosed in quotation marks; otherwise, False.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber">
      <summary>Returns the current line number, or returns -1 if no more characters are available in the stream.</summary>
      <returns>The current line number.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
      <summary>Reads the specified number of characters without advancing the cursor.</summary>
      <returns>A string that contains the specified number of characters read.</returns>
      <param name="numberOfChars">Int32. Number of characters to read. Required. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="numberOfChars" /> is less than 0.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
      <summary>Reads all fields on the current line, returns them as an array of strings, and advances the cursor to the next line containing data.</summary>
      <returns>An array of strings that contains field values for the current line.</returns>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">A field cannot be parsed by using the specified format.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
      <summary>Returns the current line as a string and advances the cursor to the next line.</summary>
      <returns>The current line from the file or stream.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
      <summary>Reads the remainder of the text file and returns it as a string.</summary>
      <returns>The remaining text from the file or stream.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
      <summary>Sets the delimiters for the reader to the specified values, and sets the field type to Delimited.</summary>
      <param name="delimiters">Array of type String. </param>
      <exception cref="T:System.ArgumentException">A delimiter is zero-length.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
      <summary>Sets the delimiters for the reader to the specified values.</summary>
      <param name="fieldWidths">Array of Integer. </param>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
      <summary>Indicates whether the file to be parsed is delimited or fixed-width.</summary>
      <returns>A <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" /> value that indicates whether the file to be parsed is delimited or fixed-width.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace">
      <summary>Indicates whether leading and trailing white space should be trimmed from field values.</summary>
      <returns>True if leading and trailing white space should be trimmed from field values; otherwise, False.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UICancelOption">
      <summary>Specifies whether an exception is thrown if the user clicks Cancel during an operation.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.DoNothing">
      <summary>Do nothing when the user clicks Cancel.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException">
      <summary>Throw an exception when the user clicks Cancel.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UIOption">
      <summary>Specifies which dialog boxes to show when copying, deleting, or moving files or directories.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.OnlyErrorDialogs">
      <summary>Only show error dialog boxes and hide progress dialog boxes. Default.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.AllDialogs">
      <summary>Show progress dialog box and any error dialog boxes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.AspLog">
      <summary>Provides a property and methods for writing event and exception information to the application's log listeners.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.AspLog.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.AspLog" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.AspLog.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.AspLog" /> class. </summary>
      <param name="name">
        <see cref="T:System.String" />. The name to give to the <see cref="P:Microsoft.VisualBasic.Logging.Log.TraceSource" /> property object.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists">
      <summary>Creates a new <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> and adds it to the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption">
      <summary>Determines what to do when the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> object attempts to write to a log and there is less free disk space available than specified by the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> property.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException">
      <summary>Throw an exception.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages">
      <summary>Discard log messages.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
      <summary>Provides a simple listener that directs logging output to file.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class with the default name.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class with the supplied name.</summary>
      <param name="name">String. The name of the instance object.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
      <summary>Determines whether to append the output to the current file or write it to a new file.</summary>
      <returns>Boolean, with True indicating that the output is appended to the current file, and False indicating that output is written to a new file. The default setting for this property is True.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
      <summary>Indicates whether or not the writing to the log file stream flushes the buffer.</summary>
      <returns>Boolean, with True indicating that the stream is flushed after every write; otherwise the log entries are buffered and written more efficiently. The default setting for this property is False.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
      <summary>Gets or sets the base name for the log files, which is used to create the full log-file name.</summary>
      <returns>String. The base name for the log files. The default is the application's product name.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close">
      <summary>Closes the underlying stream for the current log file and releases any resources associated with the current stream.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation">
      <summary>Gets or sets the log file directory when the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> property is set to <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />.</summary>
      <returns>String, which is the name of the log-file directory. The default setting for this property is the user's directory for application data.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter">
      <summary>Gets or sets the delimiter used to delimit fields within a log message.</summary>
      <returns>String, which is the delimiter used for fields within a log message. The default setting for this property is the TAB character.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
      <summary>Determines what to do when writing to the log file and there is less free disk space available than specified by the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> property.</summary>
      <returns>
        <see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />. Determines what to do when attempting to write to the log file and there is less free disk space available than specified by the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> property, or if the log file size is greater than what the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /> property allows. The default value is <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
      <summary>Closes the underlying stream and optionally releases the managed resources.</summary>
      <param name="disposing">True releases both managed and unmanaged resources; False releases only unmanaged resources. </param>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding">
      <summary>Gets or sets the encoding to use when creating a new log file.</summary>
      <returns>
        <see cref="T:System.Text.Encoding" />, which is the encoding to use when creating a new log file. The default value of this property is <see cref="T:System.Text.UTF8Encoding" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush">
      <summary>Flushes the underlying stream that writes to the current log file.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
      <summary>Gets the current full log-file name.</summary>
      <returns>String, which is the current full log-file name.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes">
      <summary>Gets the custom XML configuration attributes supported by the trace listener.</summary>
      <returns>String array containing the XML configuration attributes recognized by this listener.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName">
      <summary>Indicates whether or not the host name of the logging machine should be included in the output.</summary>
      <returns>Boolean. Use True if the host identifier should be included; otherwise use False. The default value is False.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
      <summary>Gets or sets location for the log files.</summary>
      <returns>
        <see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />, which is the location for the log file. The default value is <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
      <summary>Determines which date to include in the names of the log files.</summary>
      <returns>
        <see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />. This indicates which date to include in the log-file names. The default value is <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
      <summary>Gets or sets the maximum allowed size of the log file, in bytes.</summary>
      <returns>Long. This is the maximum allowed log-file size, in bytes. The default value is 5000000.</returns>
      <exception cref="T:System.ArgumentException">When this property is set to a value less than 1000.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
      <summary>Gets or sets the amount of free disk space, in bytes, necessary before messages can be written to the log file.</summary>
      <returns>Long. This is the amount of free disk space necessary. The default value is 10000000.</returns>
      <exception cref="T:System.ArgumentException">When this property is set to a value less than 0.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
      <summary>Writes trace information, a data object, and event information to the output file or stream.</summary>
      <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</param>
      <param name="source">A name of the trace source that invoked this method. </param>
      <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</param>
      <param name="id">A numeric identifier for the event.</param>
      <param name="data">The trace data to emit.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
      <summary>Writes trace information, an array of data objects, and event information to the output file or stream.</summary>
      <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</param>
      <param name="source">The name of the trace source that invoked this method. </param>
      <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</param>
      <param name="id">A numeric identifier for the event.</param>
      <param name="data">An array of objects to emit as data.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <summary>Writes trace information, a message and event information to the output file or stream.</summary>
      <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</param>
      <param name="source">A name of the trace source that invoked this method. </param>
      <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</param>
      <param name="id">A numeric identifier for the event.</param>
      <param name="message">A message to write.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <summary>Writes trace information, a formatted array of objects, and event information to the output file or stream.</summary>
      <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</param>
      <param name="source">A name of the trace source that invoked this method. </param>
      <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</param>
      <param name="id">A numeric identifier for the event.</param>
      <param name="format">A format string that contains zero or more format items, which correspond to objects in the <paramref name="args" /> array.</param>
      <param name="args">An Object array containing zero or more objects to format.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)">
      <summary>Writes a verbatim message to disk, without any additional context information.</summary>
      <param name="message">String. The custom message to write.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)">
      <summary>Writes a verbatim message to disk, followed by the current line terminator, without any additional context information.</summary>
      <param name="message">String. The custom message to write.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.Log">
      <summary>Provides a property and methods for writing event and exception information to the application's log listeners.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.Log" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.Log" /> class. </summary>
      <param name="name">
        <see cref="T:System.String" />. The name to give to the <see cref="P:Microsoft.VisualBasic.Logging.Log.TraceSource" /> property object.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter">
      <summary>Gets the file the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> object that underlies the Log object. </summary>
      <returns>Returns the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> object that underlies the Log object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.InitializeWithDefaultsSinceNoConfigExists">
      <summary>Creates a new <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> object and adds it to the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
      <summary>Gets to the <see cref="T:System.Diagnostics.TraceSource" /> object that underlies the Log object.</summary>
      <returns>Returns the <see cref="T:System.Diagnostics.TraceSource" /> object that underlies the Log object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
      <summary>Writes a message to the application's log listeners.</summary>
      <param name="message">Required. The message to log. If <paramref name="message" /> is Nothing, an empty string is used.</param>
      <exception cref="T:System.Security.SecurityException">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
      <summary>Writes a message to the application's log listeners.</summary>
      <param name="message">Required. The message to log. If <paramref name="message" /> is Nothing, an empty string is used.</param>
      <param name="severity">The type of message. By default, TraceEventType.Information.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The message type is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</exception>
      <exception cref="T:System.Security.SecurityException">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
      <summary>Writes a message to the application's log listeners.</summary>
      <param name="message">Required. The message to log. If <paramref name="message" /> is Nothing, an empty string is used.</param>
      <param name="severity">The type of message. By default, TraceEventType.Information.</param>
      <param name="id">Message identifier, typically used for correlation. By default, related to <paramref name="entryType" /> as described in the table.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The message type is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</exception>
      <exception cref="T:System.Security.SecurityException">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
      <summary>Writes exception information to the application's log listeners.</summary>
      <param name="ex">Required. Exception to log.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ex" /> is Nothing.</exception>
      <exception cref="T:System.Security.SecurityException">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
      <summary>Writes exception information to the application's log listeners.</summary>
      <param name="ex">Required. Exception to log.</param>
      <param name="severity">The type of message. By default, <see cref="F:System.Diagnostics.TraceEventType.Error" />.</param>
      <param name="additionalInfo">String to append to the message. By default, this is an empty string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ex" /> is Nothing.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The message type is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</exception>
      <exception cref="T:System.Security.SecurityException">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
      <summary>Writes exception information to the application's log listeners.</summary>
      <param name="ex">Required. Exception to log.</param>
      <param name="severity">The type of message. By default, <see cref="F:System.Diagnostics.TraceEventType.Error" />.</param>
      <param name="additionalInfo">String to append to the message. By default, this is an empty string.</param>
      <param name="id">Message identifier, typically used for correlation. By default, related to <paramref name="entryType" /> as described in the table in the Remarks section.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ex" /> is Nothing.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The message type is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</exception>
      <exception cref="T:System.Security.SecurityException">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption">
      <summary>Determines which date to include in the names of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class log files.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None">
      <summary>Do not include the date in the log file name.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily">
      <summary>Include the current date in the log file name.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly">
      <summary>Include the first day of the current week in the log file name.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.LogFileLocation">
      <summary>Determines which predefined path the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class uses to write its log files.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.TempDirectory">
      <summary>Use the path of the current system's temporary folder.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory">
      <summary>Use the path for a user's application data.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.CommonApplicationDirectory">
      <summary>Use the path for the application data that is shared among all users.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.ExecutableDirectory">
      <summary>Use the path for the executable file that started the application.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom">
      <summary>If the string specified by <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" /> is not empty, then use it as the path. Otherwise, use the path for a user's application data.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.ClipboardProxy">
      <summary>Provides methods for manipulating the Clipboard.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.Clear">
      <summary>Clears the Clipboard.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsAudio">
      <summary>Indicates whether the Clipboard contains audio data.</summary>
      <returns>True if audio data is stored on the Clipboard; otherwise False.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsData(System.String)">
      <summary>Indicates whether the Clipboard contains data in the specified custom format.</summary>
      <returns>True if data in the specified custom format is stored on the Clipboard; otherwise False.</returns>
      <param name="format">String. Name of the custom format to be checked. Required. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsFileDropList">
      <summary>Returns a Boolean indicating whether the Clipboard contains a file drop list.</summary>
      <returns>True if a file drop list is stored on the Clipboard; otherwise False.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsImage">
      <summary>Returns a Boolean indicating whether an image is stored on the Clipboard.</summary>
      <returns>True if an image is stored on the Clipboard; otherwise False.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText">
      <summary>Determines if there is text on the Clipboard.</summary>
      <returns>True if the Clipboard contains text; otherwise False.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText(System.Windows.Forms.TextDataFormat)">
      <summary>Determines if there is text on the Clipboard.</summary>
      <returns>True if the Clipboard contains text; otherwise False.</returns>
      <param name="format">
        <see cref="T:System.Windows.Forms.TextDataFormat" />. If specified, identifies what text format to be checked for. Required. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetAudioStream">
      <summary>Retrieves an audio stream from the Clipboard.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> object containing audio data or Nothing if the Clipboard does not contain any audio data.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetData(System.String)">
      <summary>Retrieves data in a custom format from the Clipboard.</summary>
      <returns>An Object representing the Clipboard data or Nothing if the Clipboard does not contain any data that is in the specified format or can be converted to that format.</returns>
      <param name="format">String. Name of the data format. Required. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetDataObject">
      <summary>Retrieves data from the Clipboard as an <see cref="T:System.Windows.Forms.IDataObject" />.</summary>
      <returns>An <see cref="T:System.Windows.Forms.IDataObject" /> object that represents the data currently on the Clipboard, or Nothing if there is no data on the Clipboard.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetFileDropList">
      <summary>Retrieves a collection of strings representing file names from the Clipboard.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.StringCollection" /> containing file names or Nothing if the Clipboard does not contain any data that is in the <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> format or can be converted to that format.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetImage">
      <summary>Retrieves an image from the Clipboard.</summary>
      <returns>An <see cref="T:System.Drawing.Image" /> representing the Clipboard image data or Nothing if the Clipboard does not contain any data that is in the <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> format or can be converted to that format.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText">
      <summary>Retrieves text from the Clipboard.</summary>
      <returns>The Clipboard text data or an empty string if the Clipboard does not contain data in the <see cref="F:System.Windows.Forms.DataFormats.Text" /> or <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> format, depending on the operating system.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText(System.Windows.Forms.TextDataFormat)">
      <summary>Retrieves text from the Clipboard.</summary>
      <returns>The Clipboard text data or an empty string if the Clipboard does not contain data in the specified format.</returns>
      <param name="format">
        <see cref="T:System.Windows.Forms.TextDataFormat" />. If specified, identifies what text format should be retrieved. Default is <see cref="F:System.Windows.Forms.TextDataFormat.CommaSeparatedValue" />. Required. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(System.Byte[])">
      <summary>Writes audio data to the Clipboard.</summary>
      <param name="audioBytes">Byte array. Audio data to be written to the Clipboard. Required. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(System.IO.Stream)">
      <summary>Writes audio data to the Clipboard.</summary>
      <param name="audioStream">
        <see cref="T:System.IO.Stream" /> Audio data to be written to the clipboard. Required. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetData(System.String,System.Object)">
      <summary>Writes data in a custom format to the Clipboard.</summary>
      <param name="format">String. Format of data. Required. </param>
      <param name="data">Object. Data object to be written to the Clipboard. Required. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetDataObject(System.Windows.Forms.DataObject)">
      <summary>Writes a <see cref="T:System.Windows.Forms.DataObject" /> to the Clipboard.</summary>
      <param name="data">
        <see cref="T:System.Windows.Forms.DataObject" />. Data object to be written to the Clipboard. Required. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetFileDropList(System.Collections.Specialized.StringCollection)">
      <summary>Writes a collection of strings representing file paths to the Clipboard.</summary>
      <param name="filePaths">
        <see cref="T:System.Collections.Specialized.StringCollection" />. List of file names. Required. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetImage(System.Drawing.Image)">
      <summary>Writes an image to the Clipboard.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" />. Image to be written. Required. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(System.String)">
      <summary>Writes text to the Clipboard.</summary>
      <param name="text">String. Text to be written. Required. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> is Nothing.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(System.String,System.Windows.Forms.TextDataFormat)">
      <summary>Writes text to the Clipboard.</summary>
      <param name="text">String. Text to be written. Required. </param>
      <param name="format">
        <see cref="T:System.Windows.Forms.TextDataFormat" />. Format to be used when writing text. Default is <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />. Required. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> is Nothing.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.FileSystemProxy">
      <summary>Provides properties and methods for working with drives, files, and directories.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath(System.String,System.String)">
      <summary>Combines two paths and returns a properly formatted path.</summary>
      <returns>The combination of the specified paths.</returns>
      <param name="baseDirectory">String. First path to be combined. </param>
      <param name="relativePath">String. Second path to be combined. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="baseDirectory" /> or <paramref name="relativePath" /> are malformed paths.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String)">
      <summary>Copies a directory to another directory.</summary>
      <param name="sourceDirectoryName">The directory to be copied.</param>
      <param name="destinationDirectoryName">The location to which the directory should be copied.</param>
      <exception cref="T:System.ArgumentException">The new name specified for the directory contains a colon (:) or slash (\ or /).</exception>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> or <paramref name="sourceDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The source directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source directory is a root directory</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing file.</exception>
      <exception cref="T:System.IO.IOException">The source path and target path are the same.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A folder name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">A destination file exists but cannot be accessed.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Copies a directory to another directory.</summary>
      <param name="sourceDirectoryName">The directory to be copied.</param>
      <param name="destinationDirectoryName">The location to which the directory should be copied.</param>
      <param name="showUI">Whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs.</param>
      <exception cref="T:System.ArgumentException">The new name specified for the directory contains a colon (:) or slash (\ or /).</exception>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> or <paramref name="sourceDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The source directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source directory is a root directory</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing file.</exception>
      <exception cref="T:System.IO.IOException">The source path and target path are the same.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A folder name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">A destination file exists but cannot be accessed.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> is set to UIOption.AllDialogs and the user cancels the operation, or one or more files in the directory cannot be copied.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Copies a directory to another directory.</summary>
      <param name="sourceDirectoryName">The directory to be copied.</param>
      <param name="destinationDirectoryName">The location to which the directory should be copied.</param>
      <param name="showUI">Whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs.</param>
      <param name="onUserCancel">Specifies what should be done if the user clicks Cancel during the operation. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">The new name specified for the directory contains a colon (:) or slash (\ or /).</exception>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> or <paramref name="sourceDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The source directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source directory is a root directory</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing file.</exception>
      <exception cref="T:System.IO.IOException">The source path and target path are the same.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A folder name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">A destination file exists but cannot be accessed.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> is set to UIOption.AllDialogs and the user cancels the operation, or one or more files in the directory cannot be copied.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary>Copies a directory to another directory.</summary>
      <param name="sourceDirectoryName">The directory to be copied.</param>
      <param name="destinationDirectoryName">The location to which the directory should be copied.</param>
      <param name="overwrite">True to overwrite existing files; otherwise False. Default is False.</param>
      <exception cref="T:System.ArgumentException">The new name specified for the directory contains a colon (:) or slash (\ or /).</exception>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> or <paramref name="sourceDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The source directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source directory is a root directory</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing file.</exception>
      <exception cref="T:System.IO.IOException">The source path and target path are the same.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A folder name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">A destination file exists but cannot be accessed.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String)">
      <summary>Copies a file to a new location.</summary>
      <param name="sourceFileName">The file to be copied. </param>
      <param name="destinationFileName">The location to which the file should be copied. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentException">The system could not retrieve the absolute path.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName " />contains path information.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> or <paramref name="sourceFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing directory.</exception>
      <exception cref="T:System.IO.IOException">The user does not have sufficient permissions to access the file.</exception>
      <exception cref="T:System.IO.IOException">A file in the target directory with the same name is in use.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Copies a file to a new location.</summary>
      <param name="sourceFileName">The file to be copied. </param>
      <param name="destinationFileName">The location to which the file should be copied. </param>
      <param name="showUI">Whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs.</param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentException">The system could not retrieve the absolute path.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName " />contains path information.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> or <paramref name="sourceFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing directory.</exception>
      <exception cref="T:System.IO.IOException">The user does not have sufficient permissions to access the file.</exception>
      <exception cref="T:System.IO.IOException">A file in the target directory with the same name is in use.</exception>
      <exception cref="T:System.IO.IOException">The destination file exists and <paramref name="overwrite" /> is set to False.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Copies a file to a new location.</summary>
      <param name="sourceFileName">The file to be copied. </param>
      <param name="destinationFileName">The location to which the file should be copied. </param>
      <param name="showUI">Whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs.</param>
      <param name="onUserCancel">Specifies what should be done if the user clicks Cancel during the operation. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentException">The system could not retrieve the absolute path.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName " />contains path information.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> or <paramref name="sourceFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing directory.</exception>
      <exception cref="T:System.IO.IOException">The user does not have sufficient permissions to access the file.</exception>
      <exception cref="T:System.IO.IOException">A file in the target directory with the same name is in use.</exception>
      <exception cref="T:System.IO.IOException">The destination file exists and <paramref name="overwrite" /> is set to False.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="UICancelOption" /> is set to ThrowException, and the user has canceled the operation or an unspecified I/O error occurs.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,System.Boolean)">
      <summary>Copies a file to a new location.</summary>
      <param name="sourceFileName">The file to be copied. </param>
      <param name="destinationFileName">The location to which the file should be copied. </param>
      <param name="overwrite">True if existing files should be overwritten; otherwise False. Default is False. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentException">The system could not retrieve the absolute path.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName " />contains path information.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> or <paramref name="sourceFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing directory.</exception>
      <exception cref="T:System.IO.IOException">The user does not have sufficient permissions to access the file.</exception>
      <exception cref="T:System.IO.IOException">A file in the target directory with the same name is in use.</exception>
      <exception cref="T:System.IO.IOException">The destination file exists and <paramref name="overwrite" /> is set to False.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory(System.String)">
      <summary>Creates a directory.</summary>
      <param name="directory">Name and location of the directory. </param>
      <exception cref="T:System.ArgumentException">The directory name is malformed. For example, it contains illegal characters or is only white space.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.PathTooLongException">The directory name is too long.</exception>
      <exception cref="T:System.NotSupportedException">The directory name is only a colon (:).</exception>
      <exception cref="T:System.IO.IOException">The parent directory of the directory to be created is read-only</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have permission to create the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory">
      <summary>Gets or sets the current directory.</summary>
      <returns>The current directory for file I/O operations.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is not valid.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks necessary permissions.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary>Deletes a directory.</summary>
      <param name="directory">Directory to be deleted. </param>
      <param name="onDirectoryNotEmpty">Specifies what should be done when a directory that is to be deleted contains files or directories. Default is DeleteDirectoryOption.DeleteAllContents.</param>
      <exception cref="T:System.ArgumentException">The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist or is a file.</exception>
      <exception cref="T:System.IO.IOException">The directory is not empty, and <paramref name="onDirectoryNotEmpty" /> is set to ThrowIfDirectoryNonEmpty.</exception>
      <exception cref="T:System.IO.IOException">The user does not have permission to delete the directory or subdirectory.</exception>
      <exception cref="T:System.IO.IOException">A file in the directory or subdirectory is in use.</exception>
      <exception cref="T:System.NotSupportedException">The directory name contains a colon (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have required permissions.</exception>
      <exception cref="T:System.OperationCanceledException">The user cancels the operation or the directory cannot be deleted.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>Deletes a directory.</summary>
      <param name="directory">Directory to be deleted. </param>
      <param name="showUI">Specifies whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <param name="recycle">Specifies whether or not the deleted file should be sent to the Recycle Bin. Default is RecycleOption.DeletePermanently. </param>
      <exception cref="T:System.ArgumentException">The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist or is a file.</exception>
      <exception cref="T:System.IO.IOException">The directory is not empty, and <paramref name="onDirectoryNotEmpty" /> is set to ThrowIfDirectoryNonEmpty.</exception>
      <exception cref="T:System.IO.IOException">The user does not have permission to delete the directory or subdirectory.</exception>
      <exception cref="T:System.IO.IOException">A file in the directory or subdirectory is in use.</exception>
      <exception cref="T:System.NotSupportedException">The directory name contains a colon (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have required permissions.</exception>
      <exception cref="T:System.OperationCanceledException">The user cancels the operation or the directory cannot be deleted.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Deletes a directory.</summary>
      <param name="directory">Directory to be deleted. </param>
      <param name="showUI">Specifies whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <param name="recycle">Specifies whether or not the deleted file should be sent to the Recycle Bin. Default is RecycleOption.DeletePermanently. </param>
      <param name="onUserCancel">Specifies whether to throw an exception if the user clicks Cancel. </param>
      <exception cref="T:System.ArgumentException">The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist or is a file.</exception>
      <exception cref="T:System.IO.IOException">The directory is not empty, and <paramref name="onDirectoryNotEmpty" /> is set to ThrowIfDirectoryNonEmpty.</exception>
      <exception cref="T:System.IO.IOException">The user does not have permission to delete the directory or subdirectory.</exception>
      <exception cref="T:System.IO.IOException">A file in the directory or subdirectory is in use.</exception>
      <exception cref="T:System.NotSupportedException">The directory name contains a colon (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have required permissions.</exception>
      <exception cref="T:System.OperationCanceledException">The user cancels the operation or the directory cannot be deleted.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String)">
      <summary>Deletes a file.</summary>
      <param name="file">Name and path of the file to be deleted. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.IO.IOException">The file is in use.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have permission to delete the file or the file is read-only.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>Deletes a file.</summary>
      <param name="file">Name and path of the file to be deleted. </param>
      <param name="showUI">Whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <param name="recycle">Whether or not the deleted file should be sent to the Recycle Bin. Default is RecycleOption.DeletePermanently. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.IO.IOException">The file is in use.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have permission to delete the file or the file is read-only.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Deletes a file.</summary>
      <param name="file">Name and path of the file to be deleted. </param>
      <param name="showUI">Whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <param name="recycle">Whether or not the deleted file should be sent to the Recycle Bin. Default is RecycleOption.DeletePermanently. </param>
      <param name="onUserCancel">Specifies whether or not an exception is thrown when the user cancels the operation. Default is UICancelOption.ThrowException. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.IO.IOException">The file is in use.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have permission to delete the file or the file is read-only.</exception>
      <exception cref="T:System.OperationCanceledException">The user cancelled the operation and <paramref name="onUserCancel" /> is set to <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists(System.String)">
      <summary>Returns True if the specified directory exists.</summary>
      <returns>True if the directory exists; otherwise False.</returns>
      <param name="directory">Path of the directory. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives">
      <summary>Returns a read-only collection of all available drive names.</summary>
      <returns>A read-only collection of all available drives as <see cref="T:System.IO.DriveInfo" /> objects.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists(System.String)">
      <summary>Returns True if the specified file exists.</summary>
      <returns>Returns True if the file exists; otherwise this method returns False.</returns>
      <param name="file">Name and path of the file. </param>
      <exception cref="T:System.ArgumentException">The name of the file ends with a backslash (\).</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary>Returns a read-only collection of strings representing the names of files containing the specified text.</summary>
      <returns>Read-only collection of the names of files containing the specified text..</returns>
      <param name="directory">The directory to be searched.</param>
      <param name="containsText">The search text.</param>
      <param name="ignoreCase">True if the search should be case-sensitive; otherwise False. Default is True.</param>
      <param name="searchType">Whether to include subfolders. Default is SearchOption.SearchTopLevelOnly. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The specified directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The specified directory points to an existing file.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">The specified directory path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks necessary permissions.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Returns a read-only collection of strings representing the names of files containing the specified text.</summary>
      <returns>Read-only collection of the names of files containing the specified text..</returns>
      <param name="directory">The directory to be searched.</param>
      <param name="containsText">The search text.</param>
      <param name="ignoreCase">True if the search should be case-sensitive; otherwise False. Default is True.</param>
      <param name="searchType">Whether to include subfolders. Default is SearchOption.SearchTopLevelOnly. </param>
      <param name="fileWildcards">Pattern to be matched.</param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The specified directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The specified directory points to an existing file.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">The specified directory path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks necessary permissions.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String)">
      <summary>Returns a collection of strings representing the path names of subdirectories within a directory.</summary>
      <returns>Read-only collection of the path names of subdirectories within the specified directory..</returns>
      <param name="directory">Name and path of directory. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The specified directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The specified directory points to an existing file.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks necessary permissions.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Returns a collection of strings representing the path names of subdirectories within a directory.</summary>
      <returns>Read-only collection of the path names of subdirectories within the specified directory.</returns>
      <param name="directory">Name and path of directory. </param>
      <param name="searchType">Whether to include subfolders. Default is SearchOption.SearchTopLevelOnly. </param>
      <param name="wildcards">Pattern to match names. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">One or more of the specified wildcard characters is Nothing, an empty string, or contains only spaces.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The specified directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The specified directory points to an existing file.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks necessary permissions.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo(System.String)">
      <summary>Returns a <see cref="T:System.IO.DirectoryInfo" /> object for the specified path.</summary>
      <returns>
        <see cref="T:System.IO.DirectoryInfo" /> object for the specified path.</returns>
      <param name="directory">String. Path of directory. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">The directory path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo(System.String)">
      <summary>Returns a <see cref="T:System.IO.DriveInfo" /> object for the specified drive.</summary>
      <returns>
        <see cref="T:System.IO.DriveInfo" /> object for the specified drive.</returns>
      <param name="drive">Drive to be examined. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="drive" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo(System.String)">
      <summary>Returns a <see cref="T:System.IO.FileInfo" /> object for the specified file.</summary>
      <returns>
        <see cref="T:System.IO.FileInfo" /> object for the specified file</returns>
      <param name="file">Name and path of the file. </param>
      <exception cref="T:System.ArgumentException">The path name is malformed. For example, it contains invalid characters or is only white space. The file name has a trailing slash mark.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.NotSupportedException">The path contains a colon in the middle of the string.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path is too long.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks ACL (access control list) access to the file.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String)">
      <summary>Returns a read-only collection of strings representing the names of files within a directory.</summary>
      <returns>Read-only collection of file names from the specified directory.</returns>
      <param name="directory">Directory to be searched. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory to search does not exist.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> points to an existing file.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks necessary permissions.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Returns a read-only collection of strings representing the names of files within a directory.</summary>
      <returns>Read-only collection of file names from the specified directory.</returns>
      <param name="directory">Directory to be searched. </param>
      <param name="searchType">Whether to include subfolders. Default is SearchOption.SearchTopLevelOnly. </param>
      <param name="wildcards">Pattern to be matched. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory to search does not exist.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> points to an existing file.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks necessary permissions.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName(System.String)">
      <summary>Parses the file name out of the path provided.</summary>
      <returns>The file name from the specified path.</returns>
      <param name="path">Required. Path to be parsed. String.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath(System.String)">
      <summary>Returns the parent path of the provided path.</summary>
      <returns>The parent path of the provided path.</returns>
      <param name="path">Path to be examined. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentException">Path does not have a parent path because it is a root path.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is Nothing.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName">
      <summary>Creates a uniquely named zero-byte temporary file on disk and returns the full path of that file.</summary>
      <returns>String containing the full path of the temporary file.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String)">
      <summary>Moves a directory from one location to another.</summary>
      <param name="sourceDirectoryName">Path of the directory to be moved. </param>
      <param name="destinationDirectoryName">Path of the directory to which the source directory is being moved. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source is a root directory or The source path and the target path are the same.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Moves a directory from one location to another.</summary>
      <param name="sourceDirectoryName">Path of the directory to be moved. </param>
      <param name="destinationDirectoryName">Path of the directory to which the source directory is being moved. </param>
      <param name="showUI">Specifies whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source is a root directory or The source path and the target path are the same.</exception>
      <exception cref="T:System.IO.IOException">The target directory already exists and o<paramref name="verwrite" /> is set to False.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Moves a directory from one location to another.</summary>
      <param name="sourceDirectoryName">Path of the directory to be moved. </param>
      <param name="destinationDirectoryName">Path of the directory to which the source directory is being moved. </param>
      <param name="showUI">Specifies whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <param name="onUserCancel">Specifies whether or not an exception is thrown when the user cancels the operation. Default is UICancelOption.ThrowException. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source is a root directory or The source path and the target path are the same.</exception>
      <exception cref="T:System.IO.IOException">The target directory already exists and o<paramref name="verwrite" /> is set to False.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="onUserCancel" /> is set to ThrowException and a subdirectory of the file cannot be copied.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> is set to ThrowException, and the user cancels the operation, or the operation cannot be completed.</exception>
      <exception cref="T:System.Security.SecurityException">
        <paramref name="onUserCancel" /> is set to ThrowException, and the user lacks necessary permissions.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary>Moves a directory from one location to another.</summary>
      <param name="sourceDirectoryName">Path of the directory to be moved. </param>
      <param name="destinationDirectoryName">Path of the directory to which the source directory is being moved. </param>
      <param name="overwrite">True if existing directories should be overwritten; otherwise False. Default is False. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source is a root directory or The source path and the target path are the same.</exception>
      <exception cref="T:System.IO.IOException">The target directory already exists and o<paramref name="verwrite" /> is set to False.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String)">
      <summary>Moves a file to a new location.</summary>
      <param name="sourceFileName">Path of the file to be moved. </param>
      <param name="destinationFileName">Path of the directory into which the file should be moved. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Moves a file to a new location.</summary>
      <param name="sourceFileName">Path of the file to be moved. </param>
      <param name="destinationFileName">Path of the directory into which the file should be moved. </param>
      <param name="showUI">Specifies whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The destination file exists and <paramref name="overwrite" /> is set to False.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Moves a file to a new location.</summary>
      <param name="sourceFileName">Path of the file to be moved. </param>
      <param name="destinationFileName">Path of the directory into which the file should be moved. </param>
      <param name="showUI">Specifies whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <param name="onUserCancel">Specifies whether or not an exception is thrown when the user cancels the operation. Default is UICancelOption.ThrowException. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The destination file exists and <paramref name="overwrite" /> is set to False.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> is set to ThrowException, and either the user has cancelled the operation or an unspecified I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,System.Boolean)">
      <summary>Moves a file to a new location.</summary>
      <param name="sourceFileName">Path of the file to be moved. </param>
      <param name="destinationFileName">Path of the directory into which the file should be moved. </param>
      <param name="overwrite">True to overwrite existing files; otherwise False. Default is False. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The destination file exists and <paramref name="overwrite" /> is set to False.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String)">
      <summary>The OpenTextFieldParser method allows you to create a <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object, which provides a way to easily and efficiently parse structured text files, such as logs. The TextFieldParser object can be used to read both delimited and fixed-width files.</summary>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> to read the specified file.</returns>
      <param name="file">The file to be opened with the TextFieldParser.</param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />  property is assigned the text contained in the line.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.Int32[])">
      <summary>The OpenTextFieldParser method allows you to create a <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object, which provides a way to easily and efficiently parse structured text files, such as logs. The TextFieldParser object can be used to read both delimited and fixed-width files.</summary>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> to read the specified file.</returns>
      <param name="file">The file to be opened with the TextFieldParser.</param>
      <param name="fieldWidths">Widths of the fields.</param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />  property is assigned the text contained in the line.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.String[])">
      <summary>The OpenTextFieldParser method allows you to create a <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object, which provides a way to easily and efficiently parse structured text files, such as logs. The TextFieldParser object can be used to read both delimited and fixed-width files.</summary>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> to read the specified file.</returns>
      <param name="file">The file to be opened with the TextFieldParser.</param>
      <param name="delimiters">Delimiters for the fields.</param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />  property is assigned the text contained in the line.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String)">
      <summary>Opens a <see cref="T:System.IO.StreamReader" /> object to read from a file.</summary>
      <returns>
        <see cref="T:System.IO.StreamReader" /> object to read from the file</returns>
      <param name="file">File to be read. </param>
      <exception cref="T:System.ArgumentException">The file name ends with a backslash (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException">The specified file cannot be found.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to read from the file.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary>Opens a <see cref="T:System.IO.StreamReader" /> object to read from a file.</summary>
      <returns>
        <see cref="T:System.IO.StreamReader" /> object to read from the file</returns>
      <param name="file">File to be read. </param>
      <param name="encoding">The encoding to use for the file contents. Default is ASCII. </param>
      <exception cref="T:System.ArgumentException">The file name ends with a backslash (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException">The specified file cannot be found.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to read from the file.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean)">
      <summary>Opens a <see cref="T:System.IO.StreamWriter" /> object to write to the specified file.</summary>
      <returns>
        <see cref="T:System.IO.StreamWriter" /> object to write to the specified file.</returns>
      <param name="file">File to be written to. </param>
      <param name="append">True to append to the contents of the file; False to overwrite the contents of the file. Default is False. </param>
      <exception cref="T:System.ArgumentException">The file name ends with a trailing slash.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary>Opens a <see cref="T:System.IO.StreamWriter" /> to write to the specified file.</summary>
      <returns>
        <see cref="T:System.IO.StreamWriter" /> object to write to the specified file.</returns>
      <param name="file">File to be written to. </param>
      <param name="append">True to append to the contents in the file; False to overwrite the contents of the file. Default is False. </param>
      <param name="encoding">Encoding to be used in writing to the file. Default is ASCII. </param>
      <exception cref="T:System.ArgumentException">The file name ends with a trailing slash.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes(System.String)">
      <summary>Returns the contents of a file as a byte array.</summary>
      <returns>Byte array containing the contents of the file.</returns>
      <param name="file">File to be read. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to write the string to buffer.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String)">
      <summary>Returns the contents of a text file as a String.</summary>
      <returns>String containing the contents of the file.</returns>
      <param name="file">Name and path of the file to read. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to write the string to buffer.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String,System.Text.Encoding)">
      <summary>Returns the contents of a text file as a String.</summary>
      <returns>String containing the contents of the file.</returns>
      <param name="file">Name and path of the file to read. </param>
      <param name="encoding">Character encoding to use in reading the file. Default is UTF-8.</param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to write the string to buffer.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory(System.String,System.String)">
      <summary>Renames a directory.</summary>
      <param name="directory">Path and name of directory to be renamed. </param>
      <param name="newName">New name for directory. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> contains path information.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing.-or-<paramref name="newName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">There is an existing file or directory with the name specified in <paramref name="newName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds 248 characters.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile(System.String,System.String)">
      <summary>Renames a file.</summary>
      <param name="file">File to be renamed. </param>
      <param name="newName">New name of file. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> contains path information or ends with a backslash (\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.-or-<paramref name="newName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">There is an existing file or directory with the name specified in <paramref name="newName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories">
      <summary>Gets an object that provides properties for accessing commonly referenced directories.</summary>
      <returns>This property returns the <see cref="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" /> object for the computer.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary>Writes data to a binary file.</summary>
      <param name="file">Path and name of the file to be written to. </param>
      <param name="data">Data to be written to the file. </param>
      <param name="append">True to append to the file contents; False to overwrite the file contents. Default is False. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to write the string to buffer.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)">
      <summary>Writes text to a file.</summary>
      <param name="file">File to be written to. </param>
      <param name="text">Text to be written to file. </param>
      <param name="append">True to append to the contents of the file; False to overwrite the contents of the file. Default is False. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to write the string to buffer.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary>Writes text to a file.</summary>
      <param name="file">File to be written to. </param>
      <param name="text">Text to be written to file. </param>
      <param name="append">True to append to the contents of the file; False to overwrite the contents of the file. Default is False. </param>
      <param name="encoding">What encoding to use when writing to file. Default is UTF-8.</param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to write the string to buffer.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.RegistryProxy">
      <summary>Provides properties and methods for manipulating the registry.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot">
      <summary>Returns a <see cref="T:Microsoft.Win32.RegistryKey" /> type which provides access to HKEY_CLASSES_ROOT.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig">
      <summary>Returns a <see cref="T:Microsoft.Win32.RegistryKey" /> type which provides access to HKEY_CURRENT_CONFIG.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser">
      <summary>Returns a <see cref="T:Microsoft.Win32.RegistryKey" /> type which provides access to HKEY_CURRENT_USER.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.DynData">
      <summary>Returns a <see cref="T:Microsoft.Win32.RegistryKey" /> type, which provides access to HKEY_DYNDATA.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue(System.String,System.String,System.Object)">
      <summary>Gets a value from a registry key.</summary>
      <returns>Gets a value from a registry key.</returns>
      <param name="keyName">String. Key from which the value is to be retrieved. Required. </param>
      <param name="valueName">String. Value to be retrieved. Required. </param>
      <param name="defaultValue">Object. Default value to be supplied if the value does not exist. Required. </param>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read from the registry key. </exception>
      <exception cref="T:System.IO.IOException">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value has been marked for deletion. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="keyName" /> does not begin with a valid registry root. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine">
      <summary>Returns a <see cref="T:Microsoft.Win32.RegistryKey" /> type, which provides access to HKEY_LOCAL_MACHINE.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData">
      <summary>Returns a <see cref="T:Microsoft.Win32.RegistryKey" /> type, which provides access to HKEY_PERFORMANCE_DATA.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object)">
      <summary>Writes a value to a registry key.</summary>
      <param name="keyName">String. Name of the key to be written to. Required. </param>
      <param name="valueName">String. Name of the value to be written. Required. </param>
      <param name="value">Object. Value to be written. Required. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is Nothing. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="keyName" /> does not begin with a valid registry root.-or-<paramref name="valueName" /> is longer than the maximum length allowed (255 characters). </exception>
      <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.Win32.RegistryKey" /> is read-only and thus cannot be written to; for example, it is a root-level node, or it has not been opened with write access.. </exception>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or modify registry keys. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
      <summary>Writes a value to a registry key.</summary>
      <param name="keyName">String. Name of the key to be written to. Required. </param>
      <param name="valueName">String. Name of the value to be written. Required. </param>
      <param name="value">Object. Value to be written. Required. </param>
      <param name="valueKind">
        <see cref="T:Microsoft.Win32.RegistryValueKind" />. Required. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is Nothing. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="keyName" /> does not begin with a valid registry root.-or-<paramref name="keyName" /> is longer than the maximum length allowed (255 characters).-or- The type of <paramref name="value" /> does not match the registry data type specified by <paramref name="valueKind" />, therefore the data cannot be converted properly. </exception>
      <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.Win32.RegistryKey" /> is read-only, and thus cannot be written to; for example, it is a root-level node, or it has not been opened with write access. </exception>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or modify registry keys. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.Users">
      <summary>Returns a <see cref="T:Microsoft.Win32.RegistryKey" /> type, which provides access to HKEY_USERS.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy">
      <summary>Provides properties for accessing commonly referenced directories.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.AllUsersApplicationData">
      <summary>Gets a path name pointing to the Application Data directory for the all users.</summary>
      <returns>The path to the Application Data directory for the all users.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.CurrentUserApplicationData">
      <summary>Gets a path name pointing to the Application Data directory for the current user.</summary>
      <returns>The path to the Application Data directory for the current user.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Desktop">
      <summary>Gets a path name pointing to the Desktop directory.</summary>
      <returns>The path to the Desktop directory.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyDocuments">
      <summary>Gets a path name pointing to the My Documents directory.</summary>
      <returns>The path to the My Documents directory.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyMusic">
      <summary>Gets a path name pointing to the My Music directory.</summary>
      <returns>The path to the My Music directory.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyPictures">
      <summary>Gets a path name pointing to the My Pictures directory.</summary>
      <returns>The path to the My Pictures directory.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.ProgramFiles">
      <summary>Gets a path pointing to the Program Files directory.</summary>
      <returns>The path to the Program Files directory.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Programs">
      <summary>Gets a path name pointing to the Programs directory.</summary>
      <returns>The path to the Programs directory.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Temp">
      <summary>Gets a path name pointing to the Temp directory.</summary>
      <returns>The path to the Temp directory.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.Internal.ContextValue`1">
      <summary>This class supports My in Visual Basic.</summary>
      <typeparam name="T">The type of the object to store.</typeparam>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.#ctor">
      <summary>This class supports My in Visual Basic.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.Value">
      <summary>This property supports My in Visual Basic.</summary>
      <returns>The value associated with this class.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\PresentationUI.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>PresentationUI</name>
  </assembly>
  <members>
    <member name="T:System.Windows.Documents.PresentationUIStyleResources">
      <summary>Supports component resource keys.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\PresentationFramework.Classic.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>PresentationFramework.Classic</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Windows.Themes.ClassicBorderDecorator">
      <summary>Creates the theme-specific look for <see cref="T:System.Windows.Controls.Decorator" /> types, for use with the Classic theme.</summary>
    </member>
    <member name="M:Microsoft.Windows.Themes.ClassicBorderDecorator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Windows.Themes.ClassicBorderDecorator" /> class.</summary>
    </member>
    <member name="P:Microsoft.Windows.Themes.ClassicBorderDecorator.Background">
      <summary>Gets or sets the brush used to fill the background of the element.  </summary>
      <returns>The brush used to fill the background of the element.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderDecorator.BackgroundProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ClassicBorderDecorator.Background" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.Background" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ClassicBorderDecorator.BorderBrush">
      <summary>Gets or sets the brush used to draw the outer border of the element.  </summary>
      <returns>The brush used to draw the outer border of the element.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderDecorator.BorderBrushProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ClassicBorderDecorator.BorderBrush" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.BorderBrush" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ClassicBorderDecorator.BorderStyle">
      <summary>Gets or sets the <see cref="T:Microsoft.Windows.Themes.ClassicBorderStyle" /> used to draw the border of the element.  </summary>
      <returns>The <see cref="T:Microsoft.Windows.Themes.ClassicBorderStyle" /> used to draw the border of the element.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderDecorator.BorderStyleProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ClassicBorderDecorator.BorderStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ClassicBorderDecorator.BorderStyle" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ClassicBorderDecorator.BorderThickness">
      <summary>Gets or sets the width of the border.  </summary>
      <returns>The width of the border.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderDecorator.BorderThicknessProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ClassicBorderDecorator.BorderThickness" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ClassicBorderDecorator.BorderThickness" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ClassicBorderDecorator.ClassicBorderBrush">
      <summary>Gets the brush used to draw the border.</summary>
      <returns>The brush used to draw the border.</returns>
    </member>
    <member name="T:Microsoft.Windows.Themes.ClassicBorderStyle">
      <summary>Specifics the type of <see cref="T:System.Windows.Controls.Border" /> to draw. </summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.None">
      <summary>No border.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.Raised">
      <summary>Used for <see cref="T:System.Windows.Controls.Button" /> elements in their normal state.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.RaisedPressed">
      <summary>Used for <see cref="T:System.Windows.Controls.Button" /> elements in their pressed state.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.RaisedFocused">
      <summary>Used for <see cref="T:System.Windows.Controls.Button" /> elements that have keyboard focus or are the default <see cref="T:System.Windows.Controls.Button" />.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.Sunken">
      <summary>Used for <see cref="T:System.Windows.Controls.ListBox" />, <see cref="T:System.Windows.Controls.TextBox" />, and <see cref="T:System.Windows.Controls.CheckBox" />.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.Etched">
      <summary>Used for <see cref="T:System.Windows.Controls.GroupBox" />.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.HorizontalLine">
      <summary>Used for horizontal <see cref="T:System.Windows.Controls.Separator" />.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.VerticalLine">
      <summary>Used for vertical <see cref="T:System.Windows.Controls.Separator" />.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.TabRight">
      <summary>Used for <see cref="T:System.Windows.Controls.TabItem" />. </summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.TabTop">
      <summary>Used for <see cref="T:System.Windows.Controls.TabItem" />.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.TabLeft">
      <summary>Used for <see cref="T:System.Windows.Controls.TabItem" />.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.TabBottom">
      <summary>Used for <see cref="T:System.Windows.Controls.TabItem" />.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.ThinRaised">
      <summary>Used for top level <see cref="T:System.Windows.Controls.MenuItem" /> when the mouse or other input device is hovering over them.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.ThinPressed">
      <summary>Used for top level <see cref="T:System.Windows.Controls.MenuItem" /> in their pressed state.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.AltRaised">
      <summary>Used for the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> on a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> in a normal state.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.AltPressed">
      <summary>Used for the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> on a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> in their pressed state.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.RadioButton">
      <summary>A <see cref="T:System.Windows.Controls.RadioButton" /> border.</summary>
    </member>
    <member name="T:Microsoft.Windows.Themes.SystemDropShadowChrome">
      <summary>Creates a theme specific look for drop shadow effects.</summary>
    </member>
    <member name="M:Microsoft.Windows.Themes.SystemDropShadowChrome.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Windows.Themes.SystemDropShadowChrome" /> class.</summary>
    </member>
    <member name="P:Microsoft.Windows.Themes.SystemDropShadowChrome.Color">
      <summary>Gets or sets the color used by the drop shadow.  </summary>
      <returns>The color.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.SystemDropShadowChrome.ColorProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.SystemDropShadowChrome.Color" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.SystemDropShadowChrome.Color" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.SystemDropShadowChrome.CornerRadius">
      <summary>Gets or sets the radii of a rectangle's corners.  </summary>
      <returns>The radii of a rectangle's corners.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.SystemDropShadowChrome.CornerRadiusProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.SystemDropShadowChrome.CornerRadius" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.SystemDropShadowChrome.CornerRadius" /> dependency property.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.Activities.Core.Presentation.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Activities.Core.Design</name>
  </assembly>
  <members>
    <member name="T:System.Activities.Core.Design.ActivityCategoryEditor"></member>
    <member name="M:System.Activities.Core.Design.ActivityCategoryEditor.#ctor"></member>
    <member name="M:System.Activities.Core.Design.ActivityCategoryEditor.ConsumesProperty(System.Activities.Design.PropertyEditing.PropertyEntry)"></member>
    <member name="P:System.Activities.Core.Design.ActivityCategoryEditor.EditorTemplate"></member>
    <member name="P:System.Activities.Core.Design.ActivityCategoryEditor.EditorTemplateName"></member>
    <member name="M:System.Activities.Core.Design.ActivityCategoryEditor.GetImage(System.Windows.Size)"></member>
    <member name="P:System.Activities.Core.Design.ActivityCategoryEditor.TargetCategory"></member>
    <member name="P:System.Activities.Core.Design.ActivityCategoryEditor.TargetCategoryImage"></member>
    <member name="P:System.Activities.Core.Design.ActivityCategoryEditor.TargetCategoryName"></member>
    <member name="T:System.Activities.Core.Design.ConnectionPointType"></member>
    <member name="F:System.Activities.Core.Design.ConnectionPointType.Default">
      <summary />
    </member>
    <member name="F:System.Activities.Core.Design.ConnectionPointType.Incoming">
      <summary />
    </member>
    <member name="F:System.Activities.Core.Design.ConnectionPointType.Outgoing">
      <summary />
    </member>
    <member name="T:System.Activities.Core.Design.DesignerMetadata"></member>
    <member name="M:System.Activities.Core.Design.DesignerMetadata.#ctor"></member>
    <member name="M:System.Activities.Core.Design.DesignerMetadata.Register"></member>
    <member name="T:System.Activities.Core.Design.FlowchartDesignerCommands"></member>
    <member name="F:System.Activities.Core.Design.FlowchartDesignerCommands.ConnectNodesCommand"></member>
    <member name="T:System.Activities.Core.Design.ForEach"></member>
    <member name="M:System.Activities.Core.Design.ForEach.#ctor"></member>
    <member name="M:System.Activities.Core.Design.ForEach.Create"></member>
    <member name="T:System.Activities.Core.Design.ForEach`1">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Activities.Core.Design.ForEach`1.#ctor"></member>
    <member name="M:System.Activities.Core.Design.ForEach`1.Create"></member>
    <member name="T:System.Activities.Core.Design.GenericTypeArgumentConverter"></member>
    <member name="M:System.Activities.Core.Design.GenericTypeArgumentConverter.#ctor"></member>
    <member name="M:System.Activities.Core.Design.GenericTypeArgumentConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)"></member>
    <member name="M:System.Activities.Core.Design.GenericTypeArgumentConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)"></member>
    <member name="T:System.Activities.Core.Design.LocationChangedEventArgs"></member>
    <member name="M:System.Activities.Core.Design.LocationChangedEventArgs.#ctor(System.Windows.Point)"></member>
    <member name="P:System.Activities.Core.Design.LocationChangedEventArgs.NewLocation"></member>
    <member name="T:System.Activities.Core.Design.ParallelForEach"></member>
    <member name="M:System.Activities.Core.Design.ParallelForEach.#ctor"></member>
    <member name="M:System.Activities.Core.Design.ParallelForEach.Create"></member>
    <member name="T:System.Activities.Core.Design.ParallelForEach`1">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Activities.Core.Design.ParallelForEach`1.#ctor"></member>
    <member name="M:System.Activities.Core.Design.ParallelForEach`1.Create"></member>
    <member name="T:System.Activities.Core.Design.Pick"></member>
    <member name="M:System.Activities.Core.Design.Pick.#ctor"></member>
    <member name="M:System.Activities.Core.Design.Pick.Create"></member>
    <member name="T:System.Activities.Core.Design.Themes.DesignerStylesDictionary">
      <summary>Contains a dictionary for designer styles.</summary>
    </member>
    <member name="M:System.Activities.Core.Design.Themes.DesignerStylesDictionary.InitializeComponent">
      <summary>Initializes the current instance.</summary>
    </member>
    <member name="P:System.Activities.Core.Design.Themes.DesignerStylesDictionary.SequenceStyle"></member>
    <member name="M:System.Activities.Core.Design.Themes.DesignerStylesDictionary.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)">
      <summary>Attaches events and names to compiled content. </summary>
      <param name="connectionId">The connection ID.</param>
      <param name="target">The target.</param>
    </member>
    <member name="T:System.ServiceModel.Activities.Design.ReceiveAndSendReply"></member>
    <member name="M:System.ServiceModel.Activities.Design.ReceiveAndSendReply.#ctor"></member>
    <member name="M:System.ServiceModel.Activities.Design.ReceiveAndSendReply.Create"></member>
    <member name="T:System.ServiceModel.Activities.Design.SendAndReceiveReply"></member>
    <member name="M:System.ServiceModel.Activities.Design.SendAndReceiveReply.#ctor"></member>
    <member name="M:System.ServiceModel.Activities.Design.SendAndReceiveReply.Create"></member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\PresentationFramework.Royale.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>PresentationFramework.Royale</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Windows.Themes.BulletChrome">
      <summary>Creates the theme-specific look for Windows Presentation Foundation (WPF) <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> elements. A <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> defines the appearance of <see cref="T:System.Windows.Controls.CheckBox" /> and <see cref="T:System.Windows.Controls.RadioButton" /> elements.</summary>
    </member>
    <member name="M:Microsoft.Windows.Themes.BulletChrome.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Windows.Themes.BulletChrome" /> class.</summary>
    </member>
    <member name="P:Microsoft.Windows.Themes.BulletChrome.Background">
      <summary>Gets or sets the brush used to fill the background of the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" />.  </summary>
      <returns>The brush used to fill the background of the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" />.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.BulletChrome.BackgroundProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.BulletChrome.Background" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.BulletChrome.Background" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.BulletChrome.BorderBrush">
      <summary>Gets or sets the brush used to draw the outer border of the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" />.  </summary>
      <returns>The brush used to draw the outer border of the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" />.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.BulletChrome.BorderBrushProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.BulletChrome.BorderBrush" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.BulletChrome.BorderBrush" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.BulletChrome.BorderThickness">
      <summary>Gets or sets the thickness used to draw the outer border of the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" />.  </summary>
      <returns>The thickness used to draw the border of the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" />.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.BulletChrome.BorderThicknessProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.BulletChrome.BorderThickness" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.BulletChrome.BorderThickness" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.BulletChrome.IsChecked">
      <summary>Gets or sets a value indicating whether the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> is checked.  </summary>
      <returns>true if the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> is checked; false if the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> is not checked; otherwise, null.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.BulletChrome.IsCheckedProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.BulletChrome.IsChecked" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.BulletChrome.IsChecked" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.BulletChrome.IsRound">
      <summary>Gets or sets a value indicating whether the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> has round corners.   </summary>
      <returns>true if the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> has round corners; otherwise false.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.BulletChrome.IsRoundProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.BulletChrome.IsRound" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.BulletChrome.IsRound" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.BulletChrome.RenderMouseOver">
      <summary>Gets or sets a value indicating whether the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> appears as if the mouse is over it.  </summary>
      <returns>true if the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> appears as if the mouse is over it; otherwise false.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.BulletChrome.RenderMouseOverProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.BulletChrome.RenderMouseOver" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.BulletChrome.RenderMouseOver" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.BulletChrome.RenderPressed">
      <summary>Gets or sets a value indicating whether the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> appears pressed.  </summary>
      <returns>true if the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> appears pressed; otherwise false.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.BulletChrome.RenderPressedProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.BulletChrome.RenderPressed" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.BulletChrome.RenderPressed" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ButtonChrome.Fill">
      <summary>Gets or sets the brush used to draw the color inside the <see cref="T:System.Windows.Controls.Button" />.  </summary>
      <returns>The brush.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ButtonChrome.FillProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.Fill" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.Fill" /> dependency property.</returns>
    </member>
    <member name="T:Microsoft.Windows.Themes.ProgressBarBrushConverter">
      <summary>Creates the <see cref="T:System.Windows.Media.Brush" /> used to draw the <see cref="T:System.Windows.Controls.ProgressBar" />.</summary>
    </member>
    <member name="M:Microsoft.Windows.Themes.ProgressBarBrushConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Windows.Themes.ProgressBarBrushConverter" /> class.</summary>
    </member>
    <member name="M:Microsoft.Windows.Themes.ProgressBarBrushConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Creates the <see cref="T:System.Windows.Media.DrawingBrush" /> for the <see cref="T:System.Windows.Controls.ProgressBar" />.</summary>
      <returns>A <see cref="T:System.Windows.Media.DrawingBrush" />.</returns>
      <param name="values">ForegroundBrush, IsIndeterminate, Indicator Width, Indicator Height, Track WidthThe <see cref="T:System.Windows.Media.Brush" /> used for the <see cref="P:System.Windows.Controls.Control.Foreground" /> of the <see cref="T:System.Windows.Controls.ProgressBar" />, the Boolean indicating whether the <see cref="P:System.Windows.Controls.ProgressBar.IsIndeterminate" /> is true, the <see cref="T:System.Double" /> defining the <see cref="P:System.Windows.FrameworkElement.Width" /> of the indicator, and the <see cref="T:System.Double" /> defining the <see cref="P:System.Windows.FrameworkElement.Height" /> of the indicator, and the <see cref="T:System.Double" /> defining the width of the <see cref="T:System.Windows.Controls.Primitives.Track" />. </param>
      <param name="targetType">This parameter is not used.</param>
      <param name="parameter">This parameter is not used.</param>
      <param name="culture">This parameter is not used.</param>
    </member>
    <member name="M:Microsoft.Windows.Themes.ProgressBarBrushConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented.</summary>
      <returns>null.</returns>
      <param name="value">This parameter is not used.</param>
      <param name="targetTypes">This parameter is not used.</param>
      <param name="parameter">This parameter is not used.</param>
      <param name="culture">This parameter is not used.</param>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.Activities.Core.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Activities.Core</name>
  </assembly>
  <members>
    <member name="T:System.Activities.Core.AddToCollection`1">
      <summary>Adds an item to a specified collection.</summary>
      <typeparam name="T">The type of elements in the specified collection.</typeparam>
    </member>
    <member name="M:System.Activities.Core.AddToCollection`1.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.AddToCollection`1" /> class.</summary>
    </member>
    <member name="P:System.Activities.Core.AddToCollection`1.Collection">
      <summary>The collection that receives the new item.</summary>
      <returns>The collection.</returns>
    </member>
    <member name="P:System.Activities.Core.AddToCollection`1.Item">
      <summary>The item to add to the specified collection.</summary>
      <returns>The item.</returns>
    </member>
    <member name="T:System.Activities.Core.Assign">
      <summary>Sets <see cref="T:System.Activities.Argument" /> values from within a workflow.</summary>
    </member>
    <member name="M:System.Activities.Core.Assign.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.Assign" /> class.</summary>
    </member>
    <member name="P:System.Activities.Core.Assign.To">
      <summary>Specifies the <see cref="T:System.Activities.Argument" /> that the activity assigns its <see cref="P:System.Activities.Core.Assign.Value" /> to.</summary>
      <returns>The specified <see cref="T:System.Activities.Argument" />.</returns>
    </member>
    <member name="P:System.Activities.Core.Assign.Value">
      <summary>Specifies the value that is assigned.</summary>
      <returns>The value to be assigned.</returns>
    </member>
    <member name="T:System.Activities.Core.Assign`1">
      <summary>The <see cref="T:System.Activities.Core.Assign" /> activity is used to set <see cref="T:System.Activities.Argument" /> values from within a workflow.</summary>
      <typeparam name="T">The type of the assigned value.</typeparam>
    </member>
    <member name="M:System.Activities.Core.Assign`1.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.Assign`1" /> class.</summary>
    </member>
    <member name="P:System.Activities.Core.Assign`1.To">
      <summary>Specifies the <see cref="T:System.Activities.Argument" /> that the activity assigns its <see cref="P:System.Activities.Core.Assign.Value" /> to.</summary>
      <returns>The specified <see cref="T:System.WorkflowModel.Argument" />.</returns>
    </member>
    <member name="P:System.Activities.Core.Assign`1.Value">
      <summary>Specifies the value that is assigned.</summary>
      <returns>The value to be assigned.</returns>
    </member>
    <member name="T:System.Activities.Core.CancellationScope">
      <summary>An activity that associates cancellation logic, in the form of a <see cref="T:System.Activities.WorkflowElement" />, with a main path of execution, also expressed as a <see cref="T:System.Activities.WorkflowElement" />.</summary>
    </member>
    <member name="M:System.Activities.Core.CancellationScope.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.CancellationScope" /> class.</summary>
    </member>
    <member name="P:System.Activities.Core.CancellationScope.Body">
      <summary>The <see cref="T:System.WorkflowModel.WorkflowElement" /> contained by the <see cref="T:System.Activities.Core.CancellationScope" />, which represents the main path of execution.</summary>
      <returns>Returns the <see cref="T:System.WorkflowModel.WorkflowElement" /> contained by the <see cref="T:System.Activities.Core.CancellationScope" />.</returns>
    </member>
    <member name="P:System.Activities.Core.CancellationScope.CancelHandler">
      <summary>The <see cref="T:System.WorkflowModel.WorkflowElement" /> that is executed in the event of cancellation.</summary>
      <returns>The cancel handler.</returns>
    </member>
    <member name="P:System.Activities.Core.CancellationScope.Variables">
      <summary>The collection of <see cref="T:System.WorkflowModel.Variable" /> objects associated with the <see cref="T:System.Activities.Core.CancellationScope" />.</summary>
      <returns>The collection of <see cref="T:System.WorkflowModel.Variable" /> objects associated with the <see cref="T:System.Activities.Core.CancellationScope" />.</returns>
    </member>
    <member name="T:System.Activities.Core.ClearCollection`1">
      <summary>Clears a specified collection of all items.</summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Activities.Core.ClearCollection`1.#ctor">
      <summary>Creates a new instance of the <see cref="M:System.Activities.Core.ClearCollection`1.#ctor" /> class.</summary>
    </member>
    <member name="P:System.Activities.Core.ClearCollection`1.Collection">
      <summary>The collection to be cleared of contents.</summary>
      <returns>The collection.</returns>
    </member>
    <member name="T:System.Activities.Core.Comment">
      <summary>Displays a comment in the workflow designer surface. This activity provides no functionality at runtime.</summary>
    </member>
    <member name="M:System.Activities.Core.Comment.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.Comment" /> class.</summary>
    </member>
    <member name="P:System.Activities.Core.Comment.Body">
      <summary>The child activities of the <see cref="T:System.Activities.Core.Comment" /> activity, if any.</summary>
      <returns>The child activities.</returns>
    </member>
    <member name="T:System.Activities.Core.DbConnectionContext">
      <summary>Stores database connection information for workflow operations.</summary>
    </member>
    <member name="M:System.Activities.Core.DbConnectionContext.#ctor(System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.DbConnectionContext" /> class with connection information from the specified configuration section name.</summary>
      <param name="configName">The name of the configuration section that contains connection information.</param>
    </member>
    <member name="M:System.Activities.Core.DbConnectionContext.#ctor(System.String,System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.DbConnectionContext" /> class with the specified provider name and connection string.</summary>
      <param name="providerName">The name of the database provider used for the connection.</param>
      <param name="connectionString">The connection string used to access the data store.</param>
    </member>
    <member name="P:System.Activities.Core.DbConnectionContext.ConfigName">
      <summary>The name of the configuration section that contains connection information.</summary>
      <returns>The configuration section name.</returns>
    </member>
    <member name="P:System.Activities.Core.DbConnectionContext.ConnectionString">
      <summary>The connection string used to access the data store.</summary>
      <returns>The connection string.</returns>
    </member>
    <member name="P:System.Activities.Core.DbConnectionContext.ProviderName">
      <summary>The name of the database provider used to access the persistence store.</summary>
      <returns>The database provider.</returns>
    </member>
    <member name="T:System.Activities.Core.DbQuery`1">
      <summary>Executes a query against a database and populates an <see cref="T:System.WorkflowModel.OutArgument" /> with a list of the query results.</summary>
      <typeparam name="TResult">The type of the values returned in the result set.</typeparam>
    </member>
    <member name="M:System.Activities.Core.DbQuery`1.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.DbQuery`1" /> class.</summary>
    </member>
    <member name="P:System.Activities.Core.DbQuery`1.CommandText">
      <summary>The text of the SQL command used to execute the query.</summary>
      <returns>The SQL command.</returns>
    </member>
    <member name="P:System.Activities.Core.DbQuery`1.CommandType">
      <summary>The <see cref="T:System.Data.CommandType" /> that specifies how the <see cref="P:System.Activities.Core.DbQuery`1.CommandText" /> parameter is interpreted.</summary>
      <returns>The command type.</returns>
    </member>
    <member name="P:System.Activities.Core.DbQuery`1.ConnectionContext">
      <summary>The <see cref="T:System.Activities.Core.DbConnectionContext" /> that defines connection parameters for the query.</summary>
      <returns>The connection context.</returns>
    </member>
    <member name="P:System.Activities.Core.DbQuery`1.ObjectInitializationAction">
      <summary>The <see cref="T:System.WorkflowModel.ActivityAction" /> callback invoked when the activity body is created. This callback is used to read the value from the database reader and assign the resulting value to the <see cref="P:System.Activities.Core.DbQuery`1.Results" /> property.</summary>
      <returns>The initialization callback.</returns>
    </member>
    <member name="P:System.Activities.Core.DbQuery`1.Parameters">
      <summary>The collection of stored procedure parameters used for the query, including the stored procedure return value.</summary>
      <returns>The stored procedure parameters.</returns>
    </member>
    <member name="P:System.Activities.Core.DbQuery`1.Results">
      <summary>The list that contains the data returned by the query.</summary>
      <returns>The returned list.</returns>
    </member>
    <member name="T:System.Activities.Core.DbUpdate">
      <summary>Executes an update query against a database.</summary>
    </member>
    <member name="M:System.Activities.Core.DbUpdate.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.DbUpdate" /> class.</summary>
    </member>
    <member name="P:System.Activities.Core.DbUpdate.CommandText">
      <summary>The text of the SQL command used to execute the query.</summary>
      <returns>The text of the SQL command used to execute the query.</returns>
    </member>
    <member name="P:System.Activities.Core.DbUpdate.ConnectionContext">
      <summary>The <see cref="T:System.Activities.Core.DbConnectionContext" /> that defines connection parameters for the query.</summary>
      <returns>The <see cref="T:System.Activities.Core.DbConnectionContext" /> that defines connection parameters for the query.</returns>
    </member>
    <member name="P:System.Activities.Core.DbUpdate.Parameters">
      <summary>The collection of stored procedure parameters used for the query, including the stored procedure return value.</summary>
      <returns>The collection of stored procedure parameters used for the query, including the stored procedure return value.</returns>
    </member>
    <member name="P:System.Activities.Core.DbUpdate.RowsAffected">
      <summary>The number of rows affected by the query. This value is read-only at runtime.</summary>
      <returns>The number of rows affected by the query.</returns>
    </member>
    <member name="T:System.Activities.Core.Delay">
      <summary>The <see cref="T:System.Activities.Core.Delay" /> activity creates a timer for a specified duration, using a <see cref="T:System.Activities.Statements.TimerExtension" />.</summary>
    </member>
    <member name="M:System.Activities.Core.Delay.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.Delay" /> activity.</summary>
    </member>
    <member name="P:System.Activities.Core.Delay.Duration">
      <summary>The duration of the timer that the <see cref="T:System.Activities.Core.Delay" /> activity creates.</summary>
      <returns>The timer duration.</returns>
    </member>
    <member name="M:System.Activities.Core.Delay.System#Activities#IActivityExtensionProvider#EnsureExtensions(System.ComponentModel.IExtensionHost)"></member>
    <member name="T:System.Activities.Core.DoWhile">
      <summary>A looping activity that executes contained activities at least once, until a condition is no longer true.</summary>
    </member>
    <member name="M:System.Activities.Core.DoWhile.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.DoWhile" /> class.</summary>
    </member>
    <member name="P:System.Activities.Core.DoWhile.Body">
      <summary>The child activity to be iterated.</summary>
      <returns>The child activity.</returns>
    </member>
    <member name="P:System.Activities.Core.DoWhile.Condition">
      <summary>The <see cref="T:System.WorkflowModel.ValueExpression" /> checked at the end of the loop to determine whether the loop is executed again.</summary>
      <returns>The condition for re-executing the loop.</returns>
    </member>
    <member name="P:System.Activities.Core.DoWhile.Variables">
      <summary>The collection of <see cref="T:System.WorkflowModel.Variable" /> objects associated with the <see cref="T:System.Activities.Core.DoWhile" /> activity.</summary>
      <returns>The collection of variables.</returns>
    </member>
    <member name="T:System.Activities.Core.ExistsInCollection`1">
      <summary>Indicates whether a given item is present in a given collection.</summary>
      <typeparam name="T">The type of elements in the specified collection.</typeparam>
    </member>
    <member name="M:System.Activities.Core.ExistsInCollection`1.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.ExistsInCollection`1" /> class.</summary>
    </member>
    <member name="P:System.Activities.Core.ExistsInCollection`1.Collection">
      <summary>The collection to be searched for the specified element.</summary>
      <returns>The collection.</returns>
    </member>
    <member name="P:System.Activities.Core.ExistsInCollection`1.Item">
      <summary>The item to search the specified collection for.</summary>
      <returns>The item.</returns>
    </member>
    <member name="T:System.Activities.Core.Flowchart">
      <summary>Models workflows using the familiar flowchart paradigm</summary>
    </member>
    <member name="M:System.Activities.Core.Flowchart.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.Flowchart" /> class.</summary>
    </member>
    <member name="M:System.Activities.Core.Flowchart.ComputeStartNodes"></member>
    <member name="P:System.Activities.Core.Flowchart.Nodes">
      <summary>The collection of <see cref="T:System.Activities.Core.FlowNode" /> objects contained by the flowchart.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.Collection`1" />.</returns>
    </member>
    <member name="P:System.Activities.Core.Flowchart.StartNode">
      <summary>The <see cref="T:System.Activities.Core.FlowNode" /> to be executed when the flowchart starts.</summary>
      <returns>The starting node.</returns>
    </member>
    <member name="P:System.Activities.Core.Flowchart.Variables">
      <summary>The collection of <see cref="T:System.WorkflowModel.Variable" /> objects associated with the <see cref="T:System.Activities.Core.Flowchart" />, which are available to share state across the child activities contained within the Flowchart.</summary>
      <returns>The collection of variables.</returns>
    </member>
    <member name="T:System.Activities.Core.FlowDecision">
      <summary>A specialized <see cref="T:System.Activities.Core.FlowNode" /> that provides the ability to model a conditional node with two outcomes.</summary>
    </member>
    <member name="M:System.Activities.Core.FlowDecision.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.FlowDecision" /> class.</summary>
    </member>
    <member name="P:System.Activities.Core.FlowDecision.Condition">
      <summary>Specifies the condition the <see cref="T:System.Activities.Core.FlowDecision" /> is testing. </summary>
      <returns>A value expression that represents the condition. </returns>
    </member>
    <member name="P:System.Activities.Core.FlowDecision.False">
      <summary>Gets or sets the <see cref="T:System.Activities.Statements.FlowNode" /> that is executed when the condition evaluates to false.</summary>
      <returns>The workflow element that is executed when the condition evaluates to false.</returns>
    </member>
    <member name="P:System.Activities.Core.FlowDecision.True">
      <summary>Gets or sets the <see cref="T:System.Activities.Statements.FlowNode" /> that is executed when the condition evaluates to true.</summary>
      <returns>The workflow element to execute when the condition evaluates to true.</returns>
    </member>
    <member name="T:System.Activities.Core.FlowNode">
      <summary>The abstract base class for all the different node types that can be contained within a <see cref="T:System.Activities.Core.Flowchart" /> activity.</summary>
    </member>
    <member name="T:System.Activities.Core.FlowStep">
      <summary>A <see cref="T:System.Activities.Statements.FlowNode" /> element that executes a specified <see cref="P:System.Activities.Core.FlowStep.Action" /> and has a <see cref="P:System.Activities.Core.FlowStep.Next" /> pointer. </summary>
    </member>
    <member name="M:System.Activities.Core.FlowStep.#ctor">
      <summary>Returns a new instance of the <see cref="T:System.Activities.Core.FlowStep" /> class.</summary>
    </member>
    <member name="P:System.Activities.Core.FlowStep.Action">
      <summary>The <see cref="T:System.WorkflowModel.WorkflowElement" /> that the <see cref="T:System.Activities.Core.FlowStep" /> executes.</summary>
      <returns>The activity to be executed as part of this step of the flowchart.</returns>
    </member>
    <member name="P:System.Activities.Core.FlowStep.Next">
      <summary>The next <see cref="T:System.Activities.Statements.FlowNode" /> in the flowchart to execute after executing the current <see cref="T:System.Activities.Statements.FlowStep" />.</summary>
      <returns>The specified element.</returns>
    </member>
    <member name="T:System.Activities.Core.FlowSwitch"></member>
    <member name="M:System.Activities.Core.FlowSwitch.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.FlowSwitch" /> class.</summary>
    </member>
    <member name="P:System.Activities.Core.FlowSwitch.Cases">
      <summary>A dictionary of cases to be processed by the <see cref="T:System.Activities.Core.FlowSwitch" /> element. </summary>
      <returns>The collection of cases.</returns>
    </member>
    <member name="P:System.Activities.Core.FlowSwitch.Default">
      <summary>The <see cref="T:System.Activities.Core.FlowNode" /> to be executed if no elements in the <see cref="P:System.Activities.Core.FlowSwitch.Cases" /> collection match the <see cref="P:System.Activities.Core.FlowSwitch.Expression" />.</summary>
      <returns>The default <see cref="T:System.Activities.Core.FlowNode" /> to execute.<see cref="" />.</returns>
    </member>
    <member name="P:System.Activities.Core.FlowSwitch.Expression">
      <summary>The expression to evaluate against the collection of <see cref="P:System.Activities.Core.FlowSwitch.Cases" />.</summary>
      <returns>The expression to evaluate.</returns>
    </member>
    <member name="T:System.Activities.Core.ForEach">
      <summary>Executes an activity action once for each value provided in the <see cref="P:System.Activities.Core.ForEach.Values" /> collection.</summary>
    </member>
    <member name="M:System.Activities.Core.ForEach.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.ForEach" /> class.</summary>
    </member>
    <member name="P:System.Activities.Core.ForEach.Body">
      <summary>Gets the activity action to be executed for each item in the <see cref="P:System.Activities.Core.ForEach.Values" /> collection.</summary>
      <returns>The activity action to be executed for each item in the <see cref="P:System.Activities.Core.ForEach`1.Values" /> collection.</returns>
    </member>
    <member name="P:System.Activities.Core.ForEach.Values">
      <summary>Gets or sets the activity’s collection of inputs for the execution of the <see cref="P:System.Activities.Core.ForEach`1.Body" /> activity action.</summary>
      <returns>The collection of values.</returns>
    </member>
    <member name="T:System.Activities.Core.ForEach`1">
      <summary>Executes an activity action once for each value provided in the <see cref="P:System.Activities.Core.ForEach`1.Values" /> collection.</summary>
      <typeparam name="T">The type of the values provided in the <see cref="P:System.Activities.Core.ForEach`1.Values" /> collection.</typeparam>
    </member>
    <member name="M:System.Activities.Core.ForEach`1.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.ForEach`1" /> class.</summary>
    </member>
    <member name="P:System.Activities.Core.ForEach`1.Body">
      <summary>Executes the <see cref="T:System.Activities.ActivityAction" /> for each item in the <see cref="P:System.Activities.Core.ForEach`1.Values" /> collection.</summary>
      <returns>The action to be executed.</returns>
    </member>
    <member name="P:System.Activities.Core.ForEach`1.Values">
      <summary>The activity’s collection of inputs for the execution of the <see cref="P:System.Activities.Core.ForEach`1.Body" /> activity action.</summary>
      <returns>The collection of values.</returns>
    </member>
    <member name="T:System.Activities.Core.If">
      <summary>Models an If-Then-Else condition.</summary>
    </member>
    <member name="M:System.Activities.Core.If.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.If" /> class.</summary>
    </member>
    <member name="P:System.Activities.Core.If.Condition">
      <summary>The condition that determines which child activity to execute.  The <see cref="P:System.Activities.Core.If.Then" /> activity will execute if the condition resolves to true.</summary>
      <returns>
The execution condition.
</returns>
    </member>
    <member name="P:System.Activities.Core.If.Else">
      <summary>The activity to be executed if the activity’s <see cref="P:System.Activities.Core.If.Condition" /> resolves to false.</summary>
      <returns>
The child activity.
</returns>
    </member>
    <member name="P:System.Activities.Core.If.Then">
      <summary>The activity to be executed if the activity’s <see cref="P:System.Activities.Core.If.Condition" /> resolves to true.</summary>
      <returns>
The child activity.
</returns>
    </member>
    <member name="T:System.Activities.Core.InitializationAction`2">
      <typeparam name="TSource"></typeparam>
      <typeparam name="TTarget"></typeparam>
    </member>
    <member name="M:System.Activities.Core.InitializationAction`2.#ctor"></member>
    <member name="P:System.Activities.Core.InitializationAction`2.Source"></member>
    <member name="P:System.Activities.Core.InitializationAction`2.Target"></member>
    <member name="T:System.Activities.Core.Interop">
      <summary>Manages the execution of an <see cref="T:System.Workflow.ComponentModel.Activity" /> within a workflow.</summary>
    </member>
    <member name="M:System.Activities.Core.Interop.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.Interop" /> class.</summary>
    </member>
    <member name="P:System.Activities.Core.Interop.Body">
      <summary>The type of the activity contained by the <see cref="T:System.Activities.Core.Interop" /> activity.</summary>
      <returns>This type must derive from <see cref="T:System.Workflow.ComponentModel.Activity" />.</returns>
    </member>
    <member name="M:System.Activities.Core.Interop.GetAttributes"></member>
    <member name="M:System.Activities.Core.Interop.GetClassName"></member>
    <member name="M:System.Activities.Core.Interop.GetComponentName"></member>
    <member name="M:System.Activities.Core.Interop.GetConverter"></member>
    <member name="M:System.Activities.Core.Interop.GetDefaultEvent"></member>
    <member name="M:System.Activities.Core.Interop.GetDefaultProperty"></member>
    <member name="M:System.Activities.Core.Interop.GetEditor(System.Type)"></member>
    <member name="M:System.Activities.Core.Interop.GetEvents"></member>
    <member name="M:System.Activities.Core.Interop.GetEvents(System.Attribute[])"></member>
    <member name="M:System.Activities.Core.Interop.GetProperties"></member>
    <member name="M:System.Activities.Core.Interop.GetProperties(System.Attribute[])"></member>
    <member name="M:System.Activities.Core.Interop.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)"></member>
    <member name="P:System.Activities.Core.Interop.MetaProperties">
      <summary>The collection of name-value pairs that corresponds to the metadata of the WinFX activity, such as an activity’s <see cref="T:System.Workflow.ComponentModel.Activity.Name" /> property, or a <see cref="T:System.Workflow.Activities.While" /> activity’s <see cref="M:System.Workflow.Activities.While.Condition" /> property.</summary>
      <returns>The collection of metadata.</returns>
    </member>
    <member name="P:System.Activities.Core.Interop.Properties">
      <summary>The collection of name-value pairs that corresponds to the input and output properties of the WinFX activity.</summary>
      <returns>The collection of properties.</returns>
    </member>
    <member name="T:System.Activities.Core.InvokeMethod">
      <summary>Calls a public method of a specified object or type.</summary>
    </member>
    <member name="M:System.Activities.Core.InvokeMethod.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.InvokeMethod" /> class.</summary>
    </member>
    <member name="P:System.Activities.Core.InvokeMethod.GenericTypeArguments">
      <summary>The generic type arguments of the contained method.</summary>
      <returns>The arguments.</returns>
    </member>
    <member name="P:System.Activities.Core.InvokeMethod.MethodName">
      <summary>The name of the method to be invoked when the activity executes.</summary>
      <returns>The method name.</returns>
    </member>
    <member name="P:System.Activities.Core.InvokeMethod.Parameters">
      <summary>The parameter collection of the method to be invoked.</summary>
      <returns>The parameter collection.</returns>
    </member>
    <member name="P:System.Activities.Core.InvokeMethod.Result">
      <summary>The return value of the method operation.</summary>
      <returns>The operation’s return value.</returns>
    </member>
    <member name="P:System.Activities.Core.InvokeMethod.RunAsynchronously">
      <summary> Gets or sets a value that indicates whether the activity’s method is invoked asynchronously.</summary>
      <returns>true if the method executes asynchronously.</returns>
    </member>
    <member name="P:System.Activities.Core.InvokeMethod.TargetObject">
      <summary>The object that contains the method to execute.</summary>
      <returns>The object.</returns>
    </member>
    <member name="P:System.Activities.Core.InvokeMethod.TargetType">
      <summary>The type of the <see cref="P:System.Activities.Core.InvokeMethod.TargetObject" />.</summary>
      <returns>The target object type.</returns>
    </member>
    <member name="T:System.Activities.Core.InvokeMethod`1">
      <summary>Calls a public method of a specified object or type.</summary>
      <typeparam name="TResult">The value returned by the activity.</typeparam>
    </member>
    <member name="M:System.Activities.Core.InvokeMethod`1.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.InvokeMethod`1" /> object.</summary>
    </member>
    <member name="P:System.Activities.Core.InvokeMethod`1.GenericTypeArguments">
      <summary>The generic type arguments of the contained method.</summary>
      <returns>The arguments.</returns>
    </member>
    <member name="P:System.Activities.Core.InvokeMethod`1.MethodName">
      <summary>The name of the method to be invoked when the activity executes.</summary>
      <returns>The arguments.</returns>
    </member>
    <member name="P:System.Activities.Core.InvokeMethod`1.Parameters">
      <summary>The parameter collection of the method to be invoked.</summary>
      <returns>The parameter collection.</returns>
    </member>
    <member name="P:System.Activities.Core.InvokeMethod`1.RunAsynchronously">
      <summary>Gets or sets a value that indicates whether the activity’s method is invoked asynchronously.</summary>
      <returns>true if the method executes asynchronously.</returns>
    </member>
    <member name="P:System.Activities.Core.InvokeMethod`1.TargetObject">
      <summary>The object that contains the method to execute.</summary>
      <returns>The object.</returns>
    </member>
    <member name="P:System.Activities.Core.InvokeMethod`1.TargetType">
      <summary>Gets or sets the type of the <see cref="P:System.Activities.Core.InvokeMethod`1.TargetObject" />.</summary>
      <returns>The target object type.</returns>
    </member>
    <member name="T:System.Activities.Core.Parallel">
      <summary>A workflow element that executes all child activities simultaneously and asynchronously.</summary>
    </member>
    <member name="M:System.Activities.Core.Parallel.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.Parallel" /> activity.</summary>
    </member>
    <member name="P:System.Activities.Core.Parallel.Branches">
      <summary>The child elements to be executed in parallel.</summary>
      <returns>The elements.</returns>
    </member>
    <member name="P:System.Activities.Core.Parallel.CompletionCondition">
      <summary>Evaluates after any branch completes. </summary>
      <returns>The completion expression.</returns>
    </member>
    <member name="P:System.Activities.Core.Parallel.Variables">
      <summary>The collection of contained variables.</summary>
      <returns>The contained variables.</returns>
    </member>
    <member name="T:System.Activities.Core.ParallelForEach">
      <summary>Enumerates the elements of a collection and executes an embedded statement for each element of the collection in parallel.</summary>
    </member>
    <member name="M:System.Activities.Core.ParallelForEach.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.ParallelForEach" /> class.</summary>
    </member>
    <member name="P:System.Activities.Core.ParallelForEach.Body">
      <summary>The <see cref="T:System.Activities.ActivityAction" /> that is executed once for every value contained in the <see cref="P:System.Activities.Core.ParallelForEach`1.Values" /> collection.</summary>
      <returns>The contained activity action.</returns>
    </member>
    <member name="P:System.Activities.Core.ParallelForEach.CompletionCondition">
      <summary>Evaluated after each iteration completes. </summary>
      <returns>The completion expression.</returns>
    </member>
    <member name="P:System.Activities.Core.ParallelForEach.Values">
      <summary>The collection of values used as parameters for each iteration of the activity contained in the <see cref="P:System.Activities.Core.ParallelForEach.Body" />.</summary>
      <returns>The collection of values.</returns>
    </member>
    <member name="T:System.Activities.Core.ParallelForEach`1">
      <summary>Enumerates the elements of a collection and executes an embedded statement for each element of the collection in parallel.</summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Activities.Core.ParallelForEach`1.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.ParallelForEach`1" /> class.</summary>
    </member>
    <member name="P:System.Activities.Core.ParallelForEach`1.Body">
      <summary>The <see cref="T:System.Activities.ActivityAction" /> that is executed once for every value contained in the <see cref="P:System.Activities.Core.ParallelForEach`1.Values" /> collection.</summary>
      <returns>The contained activity action.</returns>
    </member>
    <member name="P:System.Activities.Core.ParallelForEach`1.CompletionCondition">
      <summary>Evaluated after each iteration completes. If it evaluates to true, then the scheduled pending iterations are canceled. If this property is not set, all scheduled statements execute until completion.</summary>
      <returns>The completion expression.</returns>
    </member>
    <member name="P:System.Activities.Core.ParallelForEach`1.Values">
      <summary>The collection of values used as parameters for each iteration of the activity contained in the <see cref="P:System.Activities.Core.ParallelForEach`1.Body" />.</summary>
      <returns>The collection of values.</returns>
    </member>
    <member name="T:System.Activities.Core.Pick">
      <summary>Provides event-based, control flow modeling. </summary>
    </member>
    <member name="M:System.Activities.Core.Pick.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.Pick" /> class.</summary>
    </member>
    <member name="P:System.Activities.Core.Pick.Branches">
      <summary>The collection of <see cref="T:System.Activities.Core.PickBranch" /> objects that the <see cref="T:System.Activities.Core.Pick" /> activity potentially executes one of, based on incoming events.</summary>
      <returns>The branch collection.</returns>
    </member>
    <member name="T:System.Activities.Core.PickBranch">
      <summary>A potential path of execution within a <see cref="T:System.Activities.Core.Pick" /> activity.</summary>
    </member>
    <member name="M:System.Activities.Core.PickBranch.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.PickBranch" /> activity.</summary>
    </member>
    <member name="P:System.Activities.Core.PickBranch.Action">
      <summary>The <see cref="T:System.Activities.WorkflowElement" /> to execute if this branch is triggered for execution.</summary>
      <returns>A <see cref="T:System.Activities.WorkflowElement" />.</returns>
    </member>
    <member name="P:System.Activities.Core.PickBranch.DisplayName">
      <summary>The name of this branch to be displayed in the activity designer.</summary>
      <returns>The branch name.</returns>
    </member>
    <member name="P:System.Activities.Core.PickBranch.Trigger">
      <summary>The activity whose completion activates this pick branch.</summary>
      <returns>The triggering activity.</returns>
    </member>
    <member name="P:System.Activities.Core.PickBranch.Variables">
      <summary>The collection of user-defined variables associated with this activity.</summary>
      <returns>The variable collection.</returns>
    </member>
    <member name="T:System.Activities.Core.RemoveFromCollection`1">
      <summary>Removes an item from a specified collection.</summary>
      <typeparam name="T">The type of elements in the specified collection.</typeparam>
    </member>
    <member name="M:System.Activities.Core.RemoveFromCollection`1.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.RemoveFromCollection`1" /> class.</summary>
    </member>
    <member name="P:System.Activities.Core.RemoveFromCollection`1.Collection">
      <summary>The collection from which to remove the <see cref="P:System.Activities.Core.RemoveFromCollection`1.Item" />.</summary>
      <returns>The collection.</returns>
    </member>
    <member name="P:System.Activities.Core.RemoveFromCollection`1.Item">
      <summary>The item to remove from the specified <see cref="P:System.Activities.Core.RemoveFromCollection`1.Collection" />.</summary>
      <returns>The item to remove.</returns>
    </member>
    <member name="T:System.Activities.Core.Sequence">
      <summary>Executes a set of child activities according to a single, defined ordering.</summary>
    </member>
    <member name="M:System.Activities.Core.Sequence.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.Sequence" /> class.</summary>
    </member>
    <member name="P:System.Activities.Core.Sequence.Activities">
      <summary>The collection of contained activities to be executed in sequence.</summary>
      <returns>The activities.</returns>
    </member>
    <member name="M:System.Activities.Core.Sequence.Execute(System.Activities.ActivityExecutionContext)"></member>
    <member name="M:System.Activities.Core.Sequence.OnGetArguments(System.Collections.Generic.IList{System.Activities.RuntimeArgument})"></member>
    <member name="M:System.Activities.Core.Sequence.OnGetChildren(System.Collections.Generic.IList{System.Activities.WorkflowElement})"></member>
    <member name="M:System.Activities.Core.Sequence.OnGetConstraints(System.Collections.Generic.IList{System.Activities.Validation.Constraint})"></member>
    <member name="M:System.Activities.Core.Sequence.OnGetEnvironmentVariables(System.Collections.Generic.IList{System.Activities.Variable})"></member>
    <member name="M:System.Activities.Core.Sequence.OnGetPrivateVariables(System.Collections.Generic.IList{System.Activities.Variable})"></member>
    <member name="M:System.Activities.Core.Sequence.OnSequenceComplete(System.Activities.ActivityExecutionContext)"></member>
    <member name="P:System.Activities.Core.Sequence.Variables">
      <summary>The collection of contained variables.</summary>
      <returns>The collection of variables.</returns>
    </member>
    <member name="T:System.Activities.Core.Switch">
      <summary>Selects one choice from a number of activities to execute, based on the value of a given expression.</summary>
    </member>
    <member name="M:System.Activities.Core.Switch.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.Switch" /> class.</summary>
    </member>
    <member name="P:System.Activities.Core.Switch.Cases">
      <summary>The dictionary of potential execution paths.</summary>
      <returns>The execution paths.</returns>
    </member>
    <member name="P:System.Activities.Core.Switch.Default">
      <summary>The activity that is executed if no keys of entries in the <see cref="P:System.Activities.Core.Switch.Cases" /> collection match the <see cref="P:System.Activities.Core.Switch.Expression" /> property.</summary>
      <returns>The default activity to execute.</returns>
    </member>
    <member name="P:System.Activities.Core.Switch.Expression">
      <summary>The object to compare to the keys in the <see cref="P:System.Activities.Core.Switch.Cases" /> collection.</summary>
      <returns>The object to compare.</returns>
    </member>
    <member name="T:System.Activities.Core.Switch`1">
      <summary>Selects one choice from a number of activities to execute, based on the value of a given expression of the type specified in this object’s type specifier.</summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Activities.Core.Switch`1.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.Switch`1" /> class.</summary>
    </member>
    <member name="P:System.Activities.Core.Switch`1.Cases">
      <summary>The dictionary of potential execution paths.</summary>
      <returns>The execution paths.</returns>
    </member>
    <member name="P:System.Activities.Core.Switch`1.Default">
      <summary>The activity that is executed if no keys of entries in the <see cref="P:System.Activities.Core.Switch.Cases" /> collection match the <see cref="P:System.Activities.Core.Switch.Expression" /> property.</summary>
      <returns>The default activity to execute.</returns>
    </member>
    <member name="P:System.Activities.Core.Switch`1.Expression">
      <summary>Gets the object to compare to the keys in the <see cref="P:System.Activities.Core.Switch.Cases" /> collection.</summary>
      <returns>The object to compare to the keys in the <see cref="P:System.Activities.Core.Switch.Cases" /> collection.</returns>
    </member>
    <member name="T:System.Activities.Core.Throw">
      <summary>Throws an exception.</summary>
    </member>
    <member name="M:System.Activities.Core.Throw.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.Throw" /> class.</summary>
    </member>
    <member name="P:System.Activities.Core.Throw.Exception">
      <summary>The exception thrown by the activity.</summary>
      <returns>The exception.</returns>
    </member>
    <member name="T:System.Activities.Core.TimerExtension">
      <summary>Abstract base class for timer extensions.</summary>
    </member>
    <member name="M:System.Activities.Core.TimerExtension.#ctor">
      <summary>When implemented in a derived class, creates a new instance of the derived class.</summary>
    </member>
    <member name="M:System.Activities.Core.TimerExtension.CancelTimer(System.String)">
      <summary>Cancels the timer with the specified identifier.</summary>
      <param name="timerId">The identifier of the timer to cancel.</param>
    </member>
    <member name="M:System.Activities.Core.TimerExtension.CancelTimer(System.String,System.Activities.ActivityExecutionContext)">
      <summary>Cancels the timer with the specified identifier.</summary>
      <param name="timerId">The identifier of the timer to cancel.</param>
      <param name="context">The execution context that the activity is running under.</param>
    </member>
    <member name="M:System.Activities.Core.TimerExtension.SetTimer(System.TimeSpan,System.Activities.ActivityExecutionContext)">
      <summary>Creates a new timer with the specified duration.</summary>
      <returns>The identifier of the created timer.</returns>
      <param name="timeout">The time period before the timer expires.</param>
      <param name="context">The execution context of the activity to be executed.</param>
    </member>
    <member name="M:System.Activities.Core.TimerExtension.SetTimer(System.TimeSpan,System.String)">
      <summary>Creates a new timer with the specified duration.</summary>
      <returns>The identifier of the new timer.</returns>
      <param name="timeout">The duration of the timer.</param>
      <param name="timerId">The identifier of the new timer.</param>
    </member>
    <member name="T:System.Activities.Core.TransactionScopeActivity">
      <summary>An activity that demarcates a transaction boundary. </summary>
    </member>
    <member name="M:System.Activities.Core.TransactionScopeActivity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Core.TransactionScopeActivity" /> class.</summary>
    </member>
    <member name="P:System.Activities.Core.TransactionScopeActivity.AbortInstanceOnTransactionFailure">
      <summary>Gets or sets the value that indicates whether the workflow should be aborted if the transaction aborts.
</summary>
      <returns>true if the workflow should be aborted.</returns>
    </member>
    <member name="P:System.Activities.Core.TransactionScopeActivity.Body">
      <summary>Gets or sets the element that is scheduled when the <see cref="T:System.Activities.Core.TransactionScopeActivity" /> executes.</summary>
      <returns>The element that is scheduled when the <see cref="T:System.Activities.Core.TransactionScopeActivity" /> executes.</returns>
    </member>
    <member name="P:System.Activities.Core.TransactionScopeActivity.IsolationLevel">
      <summary>Gets or sets the <see cref="T:System.Transactions.IsolationLevel" /> for this <see cref="T:System.Activities.Core.TransactionScopeActivity" />.</summary>
      <returns>The <see cref="T:System.Transactions.IsolationLevel" /> for this <see cref="T:System.Activities.Core.TransactionScopeActivity" />.</returns>
    </member>
    <member name="M:System.Activities.Core.TransactionScopeActivity.ShouldSerializeIsolationLevel">
      <summary>Indicates whether the <see cref="P:System.Activities.Core.TransactionScopeActivity.IsolationLevel" /> for this <see cref="T:System.Activities.Core.TransactionScopeActivity" /> should be serialized.</summary>
      <returns>true if the <see cref="P:System.Activities.Core.TransactionScopeActivity.IsolationLevel" /> property value should be serialized; otherwise false.</returns>
    </member>
    <member name="M:System.Activities.Core.TransactionScopeActivity.ShouldSerializeTimeout">
      <summary>Indicates whether the <see cref="P:System.Activities.Core.TransactionScopeActivity.Timeout" /> for this <see cref="T:System.Activities.Core.TransactionScopeActivity" /> should be serialized.</summary>
      <returns>true if the <see cref="P:System.Activities.Core.TransactionScopeActivity.Timeout" /> property value should be serialized; otherwise false.
</returns>
    </member>
    <member name="P:System.Activities.Core.TransactionScopeActivity.Timeout">
      <summary>Gets or sets the <see cref="T:System.TimeSpan" /> that indicates the timeout period for the transaction used for this <see cref="T:System.Activities.Core.TransactionScopeActivity" />.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that indicates the timeout period for the transaction used for this <see cref="T:System.Activities.Core.TransactionScopeActivity" />.</returns>
    </member>
    <member name="T:System.Activities.Core.While">
      <summary>Executes a contained workflow element while a condition evaluates to true.</summary>
    </member>
    <member name="M:System.Activities.Core.While.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.While" /> activity.</summary>
    </member>
    <member name="P:System.Activities.Core.While.Body">
      <summary>The element to execute in the While loop.</summary>
      <returns>The element.</returns>
    </member>
    <member name="P:System.Activities.Core.While.Condition">
      <summary>The condition to be evaluated before each iteration of the While loop.</summary>
      <returns>The condition.</returns>
    </member>
    <member name="P:System.Activities.Core.While.Variables">
      <summary>The collection of <see cref="T:System.Activities.Variable" /> objects associated with the <see cref="T:System.Activities.Core.While" /> activity.</summary>
      <returns>The collection of variables.</returns>
    </member>
    <member name="T:System.Activities.Core.WriteLine">
      <summary>Writes a specified string to a specified <see cref="T:System.IO.TextWriter" /> object.</summary>
    </member>
    <member name="M:System.Activities.Core.WriteLine.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Core.WriteLine" /> class.</summary>
    </member>
    <member name="M:System.Activities.Core.WriteLine.System#Activities#IActivityExtensionProvider#EnsureExtensions(System.ComponentModel.IExtensionHost)"></member>
    <member name="P:System.Activities.Core.WriteLine.Text">
      <summary>The text to write.</summary>
      <returns>The text.</returns>
    </member>
    <member name="P:System.Activities.Core.WriteLine.TextWriter">
      <summary>The <see cref="T:System.IO.TextWriter" /> to write the <see cref="P:System.Activities.Core.WriteLine.Text" /> to.</summary>
      <returns>The text writer.</returns>
    </member>
    <member name="T:System.Activities.Expressions.Add`3">
      <summary>Computes the sum of two values.</summary>
      <typeparam name="TLeft">The type of the left operand.</typeparam>
      <typeparam name="TRight">The type of the right operand.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.Add`3.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Expressions.Add`3" /> class.</summary>
    </member>
    <member name="P:System.Activities.Expressions.Add`3.Left">
      <summary>Gets or sets the left operand.</summary>
      <returns>The left operand.</returns>
    </member>
    <member name="P:System.Activities.Expressions.Add`3.Right">
      <summary>Gets or sets the right operand.</summary>
      <returns>The right operand.</returns>
    </member>
    <member name="T:System.Activities.Expressions.AndAlso">
      <summary>Computes the logical AND of two values. Both values are converted into Boolean, and if both are true then this expression returns true. If one or both values evaluate to false, this expression returns false. <see cref="T:System.Activities.Expressions.AndAlso" /> is the “short circuit” version of the logical AND operator, returning false as soon as one of operands is evaluated to be false.</summary>
    </member>
    <member name="M:System.Activities.Expressions.AndAlso.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Expressions.AndAlso" /> class. </summary>
    </member>
    <member name="P:System.Activities.Expressions.AndAlso.Left">
      <summary>Gets or sets the left operand.</summary>
      <returns>The left operand.</returns>
    </member>
    <member name="P:System.Activities.Expressions.AndAlso.Right">
      <summary>Gets or sets the right operand.</summary>
      <returns>The right operand.</returns>
    </member>
    <member name="T:System.Activities.Expressions.ArrayItemValue`1">
      <summary>An item within an array.</summary>
      <typeparam name="TItem">The type of the items within the array. </typeparam>
    </member>
    <member name="M:System.Activities.Expressions.ArrayItemValue`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Expressions.ArrayItemValue`1" /> class.</summary>
    </member>
    <member name="P:System.Activities.Expressions.ArrayItemValue`1.Array">
      <summary>Gets or sets the array to which the item belongs to.</summary>
      <returns>The array to which the item belongs to.</returns>
    </member>
    <member name="P:System.Activities.Expressions.ArrayItemValue`1.Index">
      <summary>Gets or sets the array index number of the array item.</summary>
      <returns>The array item index.</returns>
    </member>
    <member name="T:System.Activities.Expressions.Equal`3">
      <summary>Performs an equality test between two values. If the two values are equal the expression returns true; otherwise, it returns false.</summary>
      <typeparam name="TLeft">The type of the left operand.</typeparam>
      <typeparam name="TRight">The type of the right operand. </typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.Equal`3.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Expressions.Equal`3" /> class.</summary>
    </member>
    <member name="P:System.Activities.Expressions.Equal`3.Left">
      <summary>Gets or sets the left operand.</summary>
      <returns>The left operand.</returns>
    </member>
    <member name="P:System.Activities.Expressions.Equal`3.Right">
      <summary>Gets or sets the right operand.</summary>
      <returns>The right operand.</returns>
    </member>
    <member name="T:System.Activities.Expressions.GreaterThanOrEqual`3">
      <summary>Performs a relational test between two values. If the left operand is greater than or equal to the right operand, the expression returns true; otherwise, it returns false.</summary>
      <typeparam name="TLeft">The type of the left operand. </typeparam>
      <typeparam name="TRight">The type of the right operand.</typeparam>
      <typeparam name="TResult">The type of the result. </typeparam>
    </member>
    <member name="M:System.Activities.Expressions.GreaterThanOrEqual`3.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Expressions.GreaterThanOrEqual`3" /> class.</summary>
    </member>
    <member name="P:System.Activities.Expressions.GreaterThanOrEqual`3.Left">
      <summary>Gets or sets the left operand.</summary>
      <returns>The left operand.</returns>
    </member>
    <member name="P:System.Activities.Expressions.GreaterThanOrEqual`3.Right">
      <summary>Gets or sets the right operand.</summary>
      <returns>The right operand.</returns>
    </member>
    <member name="T:System.Activities.Expressions.Multiply`3">
      <summary>Computes the product of two values.</summary>
      <typeparam name="TLeft">The type of the left operand.</typeparam>
      <typeparam name="TRight">The type of the right operand.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.Multiply`3.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Expressions.Multiply`3" /> class.</summary>
    </member>
    <member name="P:System.Activities.Expressions.Multiply`3.Left">
      <summary>Gets or sets the left operand.</summary>
      <returns>The left operand.</returns>
    </member>
    <member name="P:System.Activities.Expressions.Multiply`3.Right">
      <summary>Gets or sets the right operand.</summary>
      <returns>The right operand.</returns>
    </member>
    <member name="T:System.Activities.Expressions.Not`2">
      <summary>Computes the logical negation of a value expression.</summary>
      <typeparam name="TOperand">The type of the value expression.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.Not`2.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Expressions.Not`2" /> class.</summary>
    </member>
    <member name="P:System.Activities.Expressions.Not`2.Operand">
      <summary>Gets the value expression that is negated.</summary>
      <returns>The value expression that is negated.</returns>
    </member>
    <member name="T:System.Activities.Expressions.Or`3">
      <summary>Computes the bitwise logical OR of two values.</summary>
      <typeparam name="TLeft">The type of the left operand.</typeparam>
      <typeparam name="TRight">The type of the right operand.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.Or`3.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Expressions.Or`3" /> class.</summary>
    </member>
    <member name="P:System.Activities.Expressions.Or`3.Left">
      <summary>Gets or sets the left operand.</summary>
      <returns>The left operand.</returns>
    </member>
    <member name="P:System.Activities.Expressions.Or`3.Right">
      <summary>Gets or sets the right operand.</summary>
      <returns>The right operand.</returns>
    </member>
    <member name="T:System.Activities.Expressions.PropertyReference`2">
      <summary>A reference to a property.</summary>
      <typeparam name="TOperand">The type of the operand.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.PropertyReference`2.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Expressions.PropertyReference`2" /> class.</summary>
    </member>
    <member name="P:System.Activities.Expressions.PropertyReference`2.Operand">
      <summary>Gets or sets the property reference.</summary>
      <returns>The property reference.</returns>
    </member>
    <member name="P:System.Activities.Expressions.PropertyReference`2.PropertyName">
      <summary>Gets or sets the name of the property being referenced.</summary>
      <returns>The name of the property being referenced.</returns>
    </member>
    <member name="T:System.Activities.Expressions.PropertyValue`2">
      <summary>A property value.</summary>
      <typeparam name="TOperand">The type of the operand.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.PropertyValue`2.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Expressions.PropertyValue`2" /> class. </summary>
    </member>
    <member name="P:System.Activities.Expressions.PropertyValue`2.Operand">
      <summary>Gets or sets the property value.</summary>
      <returns>The property value.</returns>
    </member>
    <member name="P:System.Activities.Expressions.PropertyValue`2.PropertyName">
      <summary>Gets or sets the property name.</summary>
      <returns>The property name.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\ReachFramework.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>ReachFramework</name>
  </assembly>
  <members>
    <member name="T:System.Printing.Collation">
      <summary>Specifies whether a printer collates output when it prints multiple copies of a multi-page print job. </summary>
    </member>
    <member name="F:System.Printing.Collation.Unknown">
      <summary>The feature (whose options are represented by this enumeration) is set to an option not defined in the Print Schema.</summary>
    </member>
    <member name="F:System.Printing.Collation.Collated">
      <summary>Collated output.</summary>
    </member>
    <member name="F:System.Printing.Collation.Uncollated">
      <summary>Uncollated output.</summary>
    </member>
    <member name="T:System.Printing.ConflictStatus">
      <summary>Specifies whether any changes were made to a merged <see cref="T:System.Printing.PrintTicket" /> to ensure a viable <see cref="T:System.Printing.PrintTicket" />.</summary>
    </member>
    <member name="F:System.Printing.ConflictStatus.NoConflict">
      <summary>No conflicts were found between the initial merged print ticket and the supported printer functions.</summary>
    </member>
    <member name="F:System.Printing.ConflictStatus.ConflictResolved">
      <summary>One or more conflicts were found and all conflicts were resolved.</summary>
    </member>
    <member name="T:System.Printing.DeviceFontSubstitution">
      <summary>Specifies whether device font substitution is enabled on a printer.</summary>
    </member>
    <member name="F:System.Printing.DeviceFontSubstitution.Unknown">
      <summary>The feature (whose options are represented by this enumeration) is set to an option not defined in the Print Schema.</summary>
    </member>
    <member name="F:System.Printing.DeviceFontSubstitution.Off">
      <summary>Device font substitution is disabled.</summary>
    </member>
    <member name="F:System.Printing.DeviceFontSubstitution.On">
      <summary>Device font substitution is enabled.</summary>
    </member>
    <member name="T:System.Printing.Duplexing">
      <summary>Specifies whether a printer uses one-sided printing or some type of two-sided (duplex) printing.</summary>
    </member>
    <member name="F:System.Printing.Duplexing.Unknown">
      <summary>The feature (whose options are represented by this enumeration) is set to an option not defined in the Print Schema.</summary>
    </member>
    <member name="F:System.Printing.Duplexing.OneSided">
      <summary>Output prints on only one side of each sheet. </summary>
    </member>
    <member name="F:System.Printing.Duplexing.TwoSidedShortEdge">
      <summary>Output prints on both sides of each sheet, which flips along the edge parallel to <see cref="P:System.Printing.PrintDocumentImageableArea.MediaSizeWidth" />.</summary>
    </member>
    <member name="F:System.Printing.Duplexing.TwoSidedLongEdge">
      <summary>Output prints on both sides of each sheet, which flips along the edge parallel to the <see cref="P:System.Printing.PrintDocumentImageableArea.MediaSizeHeight" />.</summary>
    </member>
    <member name="T:System.Printing.InputBin">
      <summary>Specifies the input bin that is used as the source of blank paper or other print media.</summary>
    </member>
    <member name="F:System.Printing.InputBin.Unknown">
      <summary>The feature (whose options are represented by this enumeration) is set to an option not defined in the Print Schema.</summary>
    </member>
    <member name="F:System.Printing.InputBin.AutoSelect">
      <summary>The automatic selection of an input bin according to the page size and media output type.</summary>
    </member>
    <member name="F:System.Printing.InputBin.Cassette">
      <summary>A removable paper bin is used.</summary>
    </member>
    <member name="F:System.Printing.InputBin.Tractor">
      <summary>A tractor feed (also called a pin feed) of continuous-feed paper is used.</summary>
    </member>
    <member name="F:System.Printing.InputBin.AutoSheetFeeder">
      <summary>The automatic sheet feeder is used.</summary>
    </member>
    <member name="F:System.Printing.InputBin.Manual">
      <summary>The manual input bin is used.</summary>
    </member>
    <member name="T:System.Printing.OutputColor">
      <summary>Specifies how to print content that contains color or shades of gray.</summary>
    </member>
    <member name="F:System.Printing.OutputColor.Unknown">
      <summary>The feature (whose options are represented by this enumeration) is set to an option not defined in the Print Schema..</summary>
    </member>
    <member name="F:System.Printing.OutputColor.Color">
      <summary>Output that prints in color.</summary>
    </member>
    <member name="F:System.Printing.OutputColor.Grayscale">
      <summary>Output that prints in a grayscale. </summary>
    </member>
    <member name="F:System.Printing.OutputColor.Monochrome">
      <summary>Output that prints in a single color and with the same degree of intensity.</summary>
    </member>
    <member name="T:System.Printing.OutputQuality">
      <summary>Specifies the types of output quality for a print device.</summary>
    </member>
    <member name="F:System.Printing.OutputQuality.Unknown">
      <summary>The feature (whose options are represented by this enumeration) is set to an option not defined in the Print Schema.</summary>
    </member>
    <member name="F:System.Printing.OutputQuality.Automatic">
      <summary>Automatically selects a quality type that is based on the contents of a print job.</summary>
    </member>
    <member name="F:System.Printing.OutputQuality.Draft">
      <summary>Draft quality.</summary>
    </member>
    <member name="F:System.Printing.OutputQuality.Fax">
      <summary>Fax quality.</summary>
    </member>
    <member name="F:System.Printing.OutputQuality.High">
      <summary>Higher than normal quality.</summary>
    </member>
    <member name="F:System.Printing.OutputQuality.Normal">
      <summary>Normal quality.</summary>
    </member>
    <member name="F:System.Printing.OutputQuality.Photographic">
      <summary>Photographic quality.</summary>
    </member>
    <member name="F:System.Printing.OutputQuality.Text">
      <summary>Text quality.</summary>
    </member>
    <member name="T:System.Printing.PageBorderless">
      <summary>Specifies whether a print device prints to the edge of the media or provides an unprinted margin around the edge.</summary>
    </member>
    <member name="F:System.Printing.PageBorderless.Unknown">
      <summary>The feature (whose options are represented by this enumeration) is set to an option not defined in the Print Schema.</summary>
    </member>
    <member name="F:System.Printing.PageBorderless.Borderless">
      <summary>Borderless printing, that is, the device prints to the edge of the print media.</summary>
    </member>
    <member name="F:System.Printing.PageBorderless.None">
      <summary>Printing with a border, that is, the device provides an unprinted margin around the edge of the print media.</summary>
    </member>
    <member name="T:System.Printing.PageImageableArea">
      <summary>Represents the area of a page that can be printed. </summary>
    </member>
    <member name="P:System.Printing.PageImageableArea.ExtentHeight">
      <summary>Gets the height of the imageable area. </summary>
      <returns>A <see cref="T:System.Double" /> that represents the height of the imageable area in pixels (1/96 of an inch).</returns>
    </member>
    <member name="P:System.Printing.PageImageableArea.ExtentWidth">
      <summary>Gets the width of the imageable area. </summary>
      <returns>A <see cref="T:System.Double" /> that represents the width of the imageable area in pixels (1/96 of an inch). </returns>
    </member>
    <member name="P:System.Printing.PageImageableArea.OriginHeight">
      <summary>Gets the origin height, which is the distance from the upper-left corner of the imageable area (also called the "origin" of the imageable area) to the nearest point on the top edge of the page.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the distance from the top edge of the page to the top of the imageable area in pixels (1/96 of an inch).</returns>
    </member>
    <member name="P:System.Printing.PageImageableArea.OriginWidth">
      <summary>Gets the origin width, which is the distance from the left edge of the page to the upper-left corner of the imageable area (also called the "origin" of the imageable area).</summary>
      <returns>A <see cref="T:System.Double" /> that represents the distance from the left edge of the page to the left edge of the imageable area in pixels (1/96 of an inch).</returns>
    </member>
    <member name="M:System.Printing.PageImageableArea.ToString">
      <summary>Returns the <see cref="T:System.String" /> representation of <see cref="T:System.Printing.PageImageableArea" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the property values of the <see cref="T:System.Printing.PageImageableArea" />.</returns>
    </member>
    <member name="T:System.Printing.PageMediaSize">
      <summary>Describes the page size for paper or other media.</summary>
    </member>
    <member name="M:System.Printing.PageMediaSize.#ctor(System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PageMediaSize" /> class by using the width and height.</summary>
      <param name="width">The width, in pixels, which are 1/96 inch units.</param>
      <param name="height">The height, in pixels, which are 1/96 inch units.</param>
    </member>
    <member name="M:System.Printing.PageMediaSize.#ctor(System.Printing.PageMediaSizeName)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PageMediaSize" /> class by using the specified <see cref="T:System.Printing.PageMediaSizeName" />. </summary>
      <param name="mediaSizeName">The name of the page size for paper (or other media), for example, <see cref="F:System.Printing.PageMediaSizeName.NorthAmericaLetter" /> or <see cref="F:System.Printing.PageMediaSizeName.ISOA4" />. </param>
    </member>
    <member name="M:System.Printing.PageMediaSize.#ctor(System.Printing.PageMediaSizeName,System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PageMediaSize" /> class by using the specified <see cref="T:System.Printing.PageMediaSizeName" /> and the width and height.</summary>
      <param name="mediaSizeName">The name of the page size for paper (or other media), for example, <see cref="F:System.Printing.PageMediaSizeName.NorthAmericaLetter" /> or <see cref="F:System.Printing.PageMediaSizeName.ISOA4" />.</param>
      <param name="width">The width, in pixels, which are 1/96 inch units.</param>
      <param name="height">The height, in pixels, which are 1/96 inch units.</param>
    </member>
    <member name="P:System.Printing.PageMediaSize.Height">
      <summary>Gets the page height.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the page height, in pixels, which are 1/96 inch units.</returns>
    </member>
    <member name="P:System.Printing.PageMediaSize.PageMediaSizeName">
      <summary>Gets the name of the page size for paper or other media.</summary>
      <returns>A <see cref="T:System.Printing.PageMediaSizeName" /> value that names the page size.</returns>
    </member>
    <member name="M:System.Printing.PageMediaSize.ToString">
      <summary>Displays the page size for paper or other media.</summary>
      <returns>A <see cref="T:System.String" /> that represents the page size for paper or other media.</returns>
    </member>
    <member name="P:System.Printing.PageMediaSize.Width">
      <summary>Gets the page width.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the page width, in pixels, which are 1/96 inch units.</returns>
    </member>
    <member name="T:System.Printing.PageMediaSizeName">
      <summary>Specifies the page size or roll width of the paper or other print media.</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.Unknown">
      <summary>Unknown paper size</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOA0">
      <summary>A0</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOA1">
      <summary>A1</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOA10">
      <summary>A10</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOA2">
      <summary>A2</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOA3">
      <summary>A3</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOA3Rotated">
      <summary>A3 Rotated</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOA3Extra">
      <summary>A3 Extra</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOA4">
      <summary>A4</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOA4Rotated">
      <summary>A4 Rotated</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOA4Extra">
      <summary>A4 Extra</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOA5">
      <summary>A5</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOA5Rotated">
      <summary>A5 Rotated</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOA5Extra">
      <summary>A5 Extra</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOA6">
      <summary>A6</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOA6Rotated">
      <summary>A6 Rotated</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOA7">
      <summary>A7</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOA8">
      <summary>A8</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOA9">
      <summary>A9</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOB0">
      <summary>B0</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOB1">
      <summary>B1</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOB10">
      <summary>B10</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOB2">
      <summary>B2</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOB3">
      <summary>B3</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOB4">
      <summary>B4</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOB4Envelope">
      <summary>B4 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOB5Envelope">
      <summary>B5 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOB5Extra">
      <summary>B5 Extra</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOB7">
      <summary>B7</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOB8">
      <summary>B8</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOB9">
      <summary>B9</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOC0">
      <summary>C0</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOC1">
      <summary>C1</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOC10">
      <summary>C10</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOC2">
      <summary>C2</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOC3">
      <summary>C3</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOC3Envelope">
      <summary>C3 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOC4">
      <summary>C4</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOC4Envelope">
      <summary>C4 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOC5">
      <summary>C5</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOC5Envelope">
      <summary>C5 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOC6">
      <summary>C6</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOC6Envelope">
      <summary>C6 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOC6C5Envelope">
      <summary>C6C5 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOC7">
      <summary>C7</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOC8">
      <summary>C8</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOC9">
      <summary>C9</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISODLEnvelope">
      <summary>DL Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISODLEnvelopeRotated">
      <summary>DL Envelope Rotated</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOSRA3">
      <summary>SRA 3</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JapanQuadrupleHagakiPostcard">
      <summary>Quadruple Hagaki Postcard</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JISB0">
      <summary>Japanese Industrial Standard B0</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JISB1">
      <summary>Japanese Industrial Standard B1</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JISB10">
      <summary>Japanese Industrial Standard B10</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JISB2">
      <summary>Japanese Industrial Standard B2</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JISB3">
      <summary>Japanese Industrial Standard B3</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JISB4">
      <summary>Japanese Industrial Standard B4</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JISB4Rotated">
      <summary>Japanese Industrial Standard B4 Rotated</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JISB5">
      <summary>Japanese Industrial Standard B5</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JISB5Rotated">
      <summary>Japanese Industrial Standard B5 Rotated</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JISB6">
      <summary>Japanese Industrial Standard B6</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JISB6Rotated">
      <summary>Japanese Industrial Standard B6 Rotated</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JISB7">
      <summary>Japanese Industrial Standard B7</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JISB8">
      <summary>Japanese Industrial Standard B8</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JISB9">
      <summary>Japanese Industrial Standard B9</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JapanChou3Envelope">
      <summary>Chou 3 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JapanChou3EnvelopeRotated">
      <summary>Chou 3 Envelope Rotated</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JapanChou4Envelope">
      <summary>Chou 4 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JapanChou4EnvelopeRotated">
      <summary>Chou 4 Envelope Rotated</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JapanHagakiPostcard">
      <summary>Hagaki Postcard</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JapanHagakiPostcardRotated">
      <summary>Hagaki Postcard Rotated</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JapanKaku2Envelope">
      <summary>Kaku 2 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JapanKaku2EnvelopeRotated">
      <summary>Kaku 2 Envelope Rotated</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JapanKaku3Envelope">
      <summary>Kaku 3 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JapanKaku3EnvelopeRotated">
      <summary>Kaku 3 Envelope Rotated</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JapanYou4Envelope">
      <summary>You 4 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmerica10x11">
      <summary>10 x 11</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmerica10x14">
      <summary>10 x 14</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmerica11x17">
      <summary>11 x 17</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmerica9x11">
      <summary>9 x 11</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaArchitectureASheet">
      <summary>Architecture A Sheet</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaArchitectureBSheet">
      <summary>Architecture B Sheet</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaArchitectureCSheet">
      <summary>Architecture C Sheet</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaArchitectureDSheet">
      <summary>Architecture D Sheet</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaArchitectureESheet">
      <summary>Architecture E Sheet</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaCSheet">
      <summary>C Sheet</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaDSheet">
      <summary>D Sheet</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaESheet">
      <summary>E Sheet</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaExecutive">
      <summary>Executive</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaGermanLegalFanfold">
      <summary>German Legal Fanfold</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaGermanStandardFanfold">
      <summary>German Standard Fanfold</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaLegal">
      <summary>Legal</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaLegalExtra">
      <summary>Legal Extra</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaLetter">
      <summary>Letter </summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaLetterRotated">
      <summary>Letter Rotated</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaLetterExtra">
      <summary>Letter Extra</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaLetterPlus">
      <summary>Letter Plus</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaMonarchEnvelope">
      <summary>Monarch Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaNote">
      <summary>Note</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaNumber10Envelope">
      <summary>#10 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaNumber10EnvelopeRotated">
      <summary>#10 Envelope Rotated</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaNumber9Envelope">
      <summary>#9 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaNumber11Envelope">
      <summary>#11 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaNumber12Envelope">
      <summary>#12 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaNumber14Envelope">
      <summary>#14 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaPersonalEnvelope">
      <summary>Personal Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaQuarto">
      <summary>Quarto</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaStatement">
      <summary>Statement</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaSuperA">
      <summary>Super A</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaSuperB">
      <summary>Super B</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaTabloid">
      <summary>Tabloid</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmericaTabloidExtra">
      <summary>Tabloid Extra</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.OtherMetricA4Plus">
      <summary>A4 Plus</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.OtherMetricA3Plus">
      <summary>A3 Plus</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.OtherMetricFolio">
      <summary>Folio</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.OtherMetricInviteEnvelope">
      <summary>Invite Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.OtherMetricItalianEnvelope">
      <summary>Italian Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.PRC1Envelope">
      <summary>People's Republic of China #1 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.PRC1EnvelopeRotated">
      <summary>People's Republic of China #1 Envelope Rotated</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.PRC10Envelope">
      <summary>People's Republic of China #10 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.PRC10EnvelopeRotated">
      <summary>People's Republic of China #10 Envelope Rotated</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.PRC16K">
      <summary>People's Republic of China 16K</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.PRC16KRotated">
      <summary>People's Republic of China 16K Rotated</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.PRC2Envelope">
      <summary>People's Republic of China #2 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.PRC2EnvelopeRotated">
      <summary>People's Republic of China #2 Envelope Rotated</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.PRC32K">
      <summary>People's Republic of China 32K</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.PRC32KRotated">
      <summary>People's Republic of China 32K Rotated</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.PRC32KBig">
      <summary>People's Republic of China 32K Big</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.PRC3Envelope">
      <summary>People's Republic of China #3 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.PRC3EnvelopeRotated">
      <summary>People's Republic of China #3 Envelope Rotated</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.PRC4Envelope">
      <summary>People's Republic of China #4 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.PRC4EnvelopeRotated">
      <summary>People's Republic of China #4 Envelope Rotated</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.PRC5Envelope">
      <summary>People's Republic of China #5 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.PRC5EnvelopeRotated">
      <summary>People's Republic of China #5 Envelope Rotated</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.PRC6Envelope">
      <summary>People's Republic of China #6 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.PRC6EnvelopeRotated">
      <summary>People's Republic of China #6 Envelope Rotated</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.PRC7Envelope">
      <summary>People's Republic of China #7 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.PRC7EnvelopeRotated">
      <summary>People's Republic of China #7 Envelope Rotated</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.PRC8Envelope">
      <summary>People's Republic of China #8 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.PRC8EnvelopeRotated">
      <summary>People's Republic of China #8 Envelope Rotated</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.PRC9Envelope">
      <summary>People's Republic of China #9 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.PRC9EnvelopeRotated">
      <summary>People's Republic of China #9 Envelope Rotated</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.Roll04Inch">
      <summary>4-inch wide roll</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.Roll06Inch">
      <summary>6-inch wide roll</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.Roll08Inch">
      <summary>8-inch wide roll</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.Roll12Inch">
      <summary>12-inch wide roll</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.Roll15Inch">
      <summary>15-inch wide roll</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.Roll18Inch">
      <summary>18-inch wide roll</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.Roll22Inch">
      <summary>22-inch wide roll</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.Roll24Inch">
      <summary>24-inch wide roll</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.Roll30Inch">
      <summary>30-inch wide roll</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.Roll36Inch">
      <summary>36-inch wide roll</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.Roll54Inch">
      <summary>54-inch wide roll</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JapanDoubleHagakiPostcard">
      <summary>Double Hagaki Postcard</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JapanDoubleHagakiPostcardRotated">
      <summary>Double Hagaki Postcard Rotated</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JapanLPhoto">
      <summary>L Photo</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.Japan2LPhoto">
      <summary>2L Photo</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JapanYou1Envelope">
      <summary>You 1 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JapanYou2Envelope">
      <summary>You 2 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JapanYou3Envelope">
      <summary>You 3 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JapanYou4EnvelopeRotated">
      <summary>You 4 Envelope Rotated</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JapanYou6Envelope">
      <summary>You 6 Envelope</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.JapanYou6EnvelopeRotated">
      <summary>You 6 Envelope Rotated</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmerica4x6">
      <summary>4 x 6</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmerica4x8">
      <summary>4 x 8</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmerica5x7">
      <summary>5 x 7</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmerica8x10">
      <summary>8 x 10</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmerica10x12">
      <summary>10 x 12</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.NorthAmerica14x17">
      <summary>14 x 17</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.BusinessCard">
      <summary>Business card</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.CreditCard">
      <summary>Credit card</summary>
    </member>
    <member name="T:System.Printing.PageMediaType">
      <summary>Specifies types of printing paper or other media.</summary>
    </member>
    <member name="F:System.Printing.PageMediaType.Unknown">
      <summary>The feature (whose options are represented by this enumeration) is set to an option not defined in the Print Schema.</summary>
    </member>
    <member name="F:System.Printing.PageMediaType.AutoSelect">
      <summary>The print device selects the media.</summary>
    </member>
    <member name="F:System.Printing.PageMediaType.Archival">
      <summary>Archive-quality media.</summary>
    </member>
    <member name="F:System.Printing.PageMediaType.BackPrintFilm">
      <summary>Specialty back-printing film.</summary>
    </member>
    <member name="F:System.Printing.PageMediaType.Bond">
      <summary>Standard bond media.</summary>
    </member>
    <member name="F:System.Printing.PageMediaType.CardStock">
      <summary>Standard card stock.</summary>
    </member>
    <member name="F:System.Printing.PageMediaType.Continuous">
      <summary>Continuous-feed media.</summary>
    </member>
    <member name="F:System.Printing.PageMediaType.EnvelopePlain">
      <summary>Standard envelope.</summary>
    </member>
    <member name="F:System.Printing.PageMediaType.EnvelopeWindow">
      <summary>Window envelope.</summary>
    </member>
    <member name="F:System.Printing.PageMediaType.Fabric">
      <summary>Fabric media.</summary>
    </member>
    <member name="F:System.Printing.PageMediaType.HighResolution">
      <summary>Specialty high-resolution media.</summary>
    </member>
    <member name="F:System.Printing.PageMediaType.Label">
      <summary>Label media.</summary>
    </member>
    <member name="F:System.Printing.PageMediaType.MultiLayerForm">
      <summary>Attached multipart forms.</summary>
    </member>
    <member name="F:System.Printing.PageMediaType.MultiPartForm">
      <summary>Individual multipart forms.</summary>
    </member>
    <member name="F:System.Printing.PageMediaType.Photographic">
      <summary>Standard photographic media.</summary>
    </member>
    <member name="F:System.Printing.PageMediaType.PhotographicFilm">
      <summary>Film photographic media.</summary>
    </member>
    <member name="F:System.Printing.PageMediaType.PhotographicGlossy">
      <summary>Glossy photographic media.</summary>
    </member>
    <member name="F:System.Printing.PageMediaType.PhotographicHighGloss">
      <summary>High-gloss photographic media.</summary>
    </member>
    <member name="F:System.Printing.PageMediaType.PhotographicMatte">
      <summary>Matte photographic media.</summary>
    </member>
    <member name="F:System.Printing.PageMediaType.PhotographicSatin">
      <summary>Satin photographic media.</summary>
    </member>
    <member name="F:System.Printing.PageMediaType.PhotographicSemiGloss">
      <summary>Semi-gloss photographic media.</summary>
    </member>
    <member name="F:System.Printing.PageMediaType.Plain">
      <summary>Plain paper.</summary>
    </member>
    <member name="F:System.Printing.PageMediaType.Screen">
      <summary>Output to a display in continuous form.</summary>
    </member>
    <member name="F:System.Printing.PageMediaType.ScreenPaged">
      <summary>Output to a display in paged form.</summary>
    </member>
    <member name="F:System.Printing.PageMediaType.Stationery">
      <summary>Specialty stationary.</summary>
    </member>
    <member name="F:System.Printing.PageMediaType.TabStockFull">
      <summary>Tab stock, not precut (single tabs).</summary>
    </member>
    <member name="F:System.Printing.PageMediaType.TabStockPreCut">
      <summary>Tab stock, precut (multiple tabs).</summary>
    </member>
    <member name="F:System.Printing.PageMediaType.Transparency">
      <summary>Transparent sheet.</summary>
    </member>
    <member name="F:System.Printing.PageMediaType.TShirtTransfer">
      <summary>Media that is used to transfer an image to a T-shirt.</summary>
    </member>
    <member name="F:System.Printing.PageMediaType.None">
      <summary>Unknown or unlisted media.</summary>
    </member>
    <member name="T:System.Printing.PageOrder">
      <summary>Specifies whether a print device prints multi-page documents from front-to-back or back-to-front.</summary>
    </member>
    <member name="F:System.Printing.PageOrder.Unknown">
      <summary>The feature (whose options are represented by this enumeration) is set to an option not defined in the Print Schema.</summary>
    </member>
    <member name="F:System.Printing.PageOrder.Standard">
      <summary>Output prints in front-to-back order.</summary>
    </member>
    <member name="F:System.Printing.PageOrder.Reverse">
      <summary>Output prints in back-to-front order.</summary>
    </member>
    <member name="T:System.Printing.PageOrientation">
      <summary>Specifies how pages of content are oriented on print media.</summary>
    </member>
    <member name="F:System.Printing.PageOrientation.Unknown">
      <summary>The feature (whose options are represented by this enumeration) is set to an option not defined in the Print Schema.</summary>
    </member>
    <member name="F:System.Printing.PageOrientation.Landscape">
      <summary>Content of the imageable area is rotated on the page 90 degrees counterclockwise from standard (portrait) orientation.</summary>
    </member>
    <member name="F:System.Printing.PageOrientation.Portrait">
      <summary>Standard orientation. </summary>
    </member>
    <member name="F:System.Printing.PageOrientation.ReverseLandscape">
      <summary>Content of the imageable area is rotated on the page 90 degrees clockwise from standard (portrait) orientation.</summary>
    </member>
    <member name="F:System.Printing.PageOrientation.ReversePortrait">
      <summary>Content of the imageable area is upside down relative to standard (portrait) orientation.</summary>
    </member>
    <member name="T:System.Printing.PageQualitativeResolution">
      <summary>Specifies the page resolution as a qualitative, non-numerical, value. </summary>
    </member>
    <member name="F:System.Printing.PageQualitativeResolution.Unknown">
      <summary>The feature (whose options are represented by this enumeration) is set to an option not defined in the Print Schema.</summary>
    </member>
    <member name="F:System.Printing.PageQualitativeResolution.Default">
      <summary>The default qualitative resolution for the printer.</summary>
    </member>
    <member name="F:System.Printing.PageQualitativeResolution.Draft">
      <summary>Draft-level quality, which is 300 dpi for most printers. </summary>
    </member>
    <member name="F:System.Printing.PageQualitativeResolution.High">
      <summary>High quality, which is 1200 dpi or greater for most printers.</summary>
    </member>
    <member name="F:System.Printing.PageQualitativeResolution.Normal">
      <summary>Normal quality, which is 600 dpi for most printers.</summary>
    </member>
    <member name="F:System.Printing.PageQualitativeResolution.Other">
      <summary>Other quality. </summary>
    </member>
    <member name="T:System.Printing.PageResolution">
      <summary>Defines the page resolution of printed output as either a qualitative value or as dots per inch, or both.</summary>
    </member>
    <member name="M:System.Printing.PageResolution.#ctor(System.Int32,System.Int32)">
      <summary>Initiates a new instance of the <see cref="T:System.Printing.PageResolution" /> class that has the specified vertical and horizontal dots per inch. </summary>
      <param name="resolutionX">The horizontal resolution in dots per inch. </param>
      <param name="resolutionY">The vertical resolution in dots per inch.</param>
    </member>
    <member name="M:System.Printing.PageResolution.#ctor(System.Int32,System.Int32,System.Printing.PageQualitativeResolution)">
      <summary>Initiates a new instance of the <see cref="T:System.Printing.PageResolution" /> class that has the specified <see cref="T:System.Printing.PageQualitativeResolution" /> and the specified vertical and horizontal dots per inch.</summary>
      <param name="resolutionX">The horizontal resolution in dots per inch. </param>
      <param name="resolutionY">The vertical resolution in dots per inch.</param>
      <param name="qualitative">A value representing the resolution.</param>
    </member>
    <member name="M:System.Printing.PageResolution.#ctor(System.Printing.PageQualitativeResolution)">
      <summary>Initiates a new instance of the <see cref="T:System.Printing.PageResolution" /> class that has the specified <see cref="T:System.Printing.PageQualitativeResolution" />. </summary>
      <param name="qualitative">A value representing the resolution.</param>
    </member>
    <member name="P:System.Printing.PageResolution.QualitativeResolution">
      <summary>Gets the qualitative expression, if any, of the page resolution.</summary>
      <returns>A <see cref="T:System.Printing.PageQualitativeResolution" /> value that represents the level of page resolution.</returns>
    </member>
    <member name="M:System.Printing.PageResolution.ToString">
      <summary>Returns the page resolution as a <see cref="T:System.String" />. </summary>
      <returns>A <see cref="T:System.String" /> that contains the property values of the <see cref="T:System.Printing.PageResolution" /> object.</returns>
    </member>
    <member name="P:System.Printing.PageResolution.X">
      <summary>Gets the dots-per-inch measure of the horizontal page resolution.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents a horizontal page resolution.</returns>
    </member>
    <member name="P:System.Printing.PageResolution.Y">
      <summary>Gets the dots-per-inch measure of the vertical page resolution.</summary>
      <returns>A nullable <see cref="T:System.Int32" /> value that represents a vertical page resolution.</returns>
    </member>
    <member name="T:System.Printing.PageScalingFactorRange">
      <summary>Specifies a range of percentages by which a printer can enlarge or reduce the print image on a page. </summary>
    </member>
    <member name="P:System.Printing.PageScalingFactorRange.MaximumScale">
      <summary>Gets the maximum percentage of the range.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents a percentage.</returns>
    </member>
    <member name="P:System.Printing.PageScalingFactorRange.MinimumScale">
      <summary>Gets the minimum percentage of the range.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents a percentage.</returns>
    </member>
    <member name="M:System.Printing.PageScalingFactorRange.ToString">
      <summary>Returns the <see cref="T:System.String" /> representation of the range.</summary>
      <returns>A <see cref="T:System.String" /> representation of the scaling range.</returns>
    </member>
    <member name="T:System.Printing.PagesPerSheetDirection">
      <summary>Specifies the arrangement of pages when more than one page of content appears on a single side of print media.</summary>
    </member>
    <member name="F:System.Printing.PagesPerSheetDirection.Unknown">
      <summary>The feature (whose options are represented by this enumeration) is set to an option not defined in the Print Schema.</summary>
    </member>
    <member name="F:System.Printing.PagesPerSheetDirection.RightBottom">
      <summary>Pages appear in rows, from left to right and top to bottom relative to page orientation.</summary>
    </member>
    <member name="F:System.Printing.PagesPerSheetDirection.BottomRight">
      <summary>Pages appear in columns, from top to bottom and left to right relative to page orientation.</summary>
    </member>
    <member name="F:System.Printing.PagesPerSheetDirection.LeftBottom">
      <summary>Pages appear in rows, from right to left and top to bottom relative to page orientation.</summary>
    </member>
    <member name="F:System.Printing.PagesPerSheetDirection.BottomLeft">
      <summary>Pages appear in columns, from top to bottom and right to left relative to page orientation.</summary>
    </member>
    <member name="F:System.Printing.PagesPerSheetDirection.RightTop">
      <summary>Pages appear in rows, from left to right and bottom to top relative to page orientation.</summary>
    </member>
    <member name="F:System.Printing.PagesPerSheetDirection.TopRight">
      <summary>Pages appear in columns, from bottom to top and left to right relative to page orientation.</summary>
    </member>
    <member name="F:System.Printing.PagesPerSheetDirection.LeftTop">
      <summary>Pages appear in rows, from right to left and bottom to top relative to page orientation.</summary>
    </member>
    <member name="F:System.Printing.PagesPerSheetDirection.TopLeft">
      <summary>Pages appear in columns, from bottom to top and right to left relative to page orientation.</summary>
    </member>
    <member name="T:System.Printing.PhotoPrintingIntent">
      <summary>Specifies the quality of output when a photograph is printed. The printer driver translates the <see cref="T:System.Printing.PhotoPrintingIntent" /> into quantitative values for resolution and other quality factors.</summary>
    </member>
    <member name="F:System.Printing.PhotoPrintingIntent.Unknown">
      <summary>The feature (whose options are represented by this enumeration) is set to an option not defined in the Print Schema.</summary>
    </member>
    <member name="F:System.Printing.PhotoPrintingIntent.None">
      <summary>No photo-printing intent. The user sets specific quantitative properties.</summary>
    </member>
    <member name="F:System.Printing.PhotoPrintingIntent.PhotoBest">
      <summary>Best quality photo printing.</summary>
    </member>
    <member name="F:System.Printing.PhotoPrintingIntent.PhotoDraft">
      <summary>Draft quality photo printing.</summary>
    </member>
    <member name="F:System.Printing.PhotoPrintingIntent.PhotoStandard">
      <summary>Standard quality photo printing.</summary>
    </member>
    <member name="T:System.Printing.PrintCapabilities">
      <summary>Defines the capabilities of a printer.</summary>
    </member>
    <member name="M:System.Printing.PrintCapabilities.#ctor(System.IO.Stream)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintCapabilities" /> class by using an XML stream (that contains a PrintCapabilities document) that specifies printer capabilities and complies with the XML Print Schema.</summary>
      <param name="xmlStream">An XML <see cref="T:System.IO.Stream" /> that describes printer capabilities and conforms to the Print Schema.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlStream" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="xmlStream" /> is not valid XML.</exception>
    </member>
    <member name="P:System.Printing.PrintCapabilities.CollationCapability">
      <summary>Gets a collection of values that identify the collation capabilities of a printer.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Printing.Collation" /> values. </returns>
    </member>
    <member name="P:System.Printing.PrintCapabilities.DeviceFontSubstitutionCapability">
      <summary>Gets a collection of values that identify whether and how a printer can substitute device-based fonts for computer-based fonts.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Printing.DeviceFontSubstitution" /> values. </returns>
    </member>
    <member name="P:System.Printing.PrintCapabilities.DuplexingCapability">
      <summary>Gets a collection of values that identify whether and how a printer can perform two-sided printing.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Printing.Duplexing" /> values. </returns>
    </member>
    <member name="P:System.Printing.PrintCapabilities.InputBinCapability">
      <summary>Gets a collection of values that indicate what input bin (paper tray) is used.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Printing.InputBin" /> values. </returns>
    </member>
    <member name="P:System.Printing.PrintCapabilities.MaxCopyCount">
      <summary>Gets a value indicating the maximum number of copies that the device can print in a single print job.</summary>
      <returns>A nullable <see cref="T:System.Int32" /> value that specifies the maximum number of copies that a printer can print. Returns null if the device driver does not report a maximum.</returns>
    </member>
    <member name="P:System.Printing.PrintCapabilities.OrientedPageMediaHeight">
      <summary>Gets a value indicating the height of the imageable area on a page, where height means the vertical dimension relative to the page's orientation. </summary>
      <returns>A nullable <see cref="T:System.Double" /> value indicating the height, in pixels, which are 1/96 inch increments, of the area on a page that the printer is capable of printing.</returns>
    </member>
    <member name="P:System.Printing.PrintCapabilities.OrientedPageMediaWidth">
      <summary>Gets a value indicating the width of the imageable area on a page, where width means the horizontal dimension relative to the page's orientation. </summary>
      <returns>A nullable <see cref="T:System.Double" /> value indicating the width, in pixels, which are 1/96 inch increments, of the area on a page that the printer is capable of printing.</returns>
    </member>
    <member name="P:System.Printing.PrintCapabilities.OutputColorCapability">
      <summary>Gets a collection of values that specify the ways in which a printer can print content with color and shades of gray.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Printing.OutputColor" /> values. </returns>
    </member>
    <member name="P:System.Printing.PrintCapabilities.OutputQualityCapability">
      <summary>Gets a collection of values that indicate the types of output quality the printer supports. </summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Printing.OutputQuality" /> values. </returns>
    </member>
    <member name="P:System.Printing.PrintCapabilities.PageBorderlessCapability">
      <summary>Gets a collection of values that indicate whether the printer can print up to the edge of the media.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Printing.PageBorderless" /> values.</returns>
    </member>
    <member name="P:System.Printing.PrintCapabilities.PageImageableArea">
      <summary>Gets an object that represents the area of a page that the printer can use.</summary>
      <returns>A <see cref="T:System.Printing.PageImageableArea" /> object that specifies the distance, in pixels (units of 1/96 inch), of the upper-left corner of the imageable area. The vertical distance is measured from the top edge of the paper and the horizontal distance is measured from the left edge. The return value also specifies the width and height of the imageable area. If the printer driver does not report an imageable area, then this property is null. </returns>
    </member>
    <member name="P:System.Printing.PrintCapabilities.PageMediaSizeCapability">
      <summary>Gets a collection of <see cref="T:System.Printing.PageMediaSize" /> objects that identify the paper and media sizes that a printer supports.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Printing.PageMediaSize" /> objects.</returns>
    </member>
    <member name="P:System.Printing.PrintCapabilities.PageMediaTypeCapability">
      <summary>Gets a collection of values that identify what types of paper and other media a printer supports. </summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Printing.PageMediaType" /> values specifying the print media, such as card stock, label, plain, or photographic. </returns>
    </member>
    <member name="P:System.Printing.PrintCapabilities.PageOrderCapability">
      <summary>Gets a collection of values that indicate whether a printer is capable of printing multiple-page documents from front-to-back, back-to-front, or both ways.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Printing.PageOrder" /> values. </returns>
    </member>
    <member name="P:System.Printing.PrintCapabilities.PageOrientationCapability">
      <summary>Gets a collection of values that identify what types of page orientation a printer supports.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Printing.PageOrientation" /> values. </returns>
    </member>
    <member name="P:System.Printing.PrintCapabilities.PageResolutionCapability">
      <summary>Gets a collection of <see cref="T:System.Printing.PageResolution" /> objects that identify what levels of page resolution the printer supports.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Printing.PageResolution" /> objects. Each value represents a page resolution as a qualitative value, a dots-per-inch value, or both.</returns>
    </member>
    <member name="P:System.Printing.PrintCapabilities.PageScalingFactorRange">
      <summary>Gets the maximum and minimum percentages by which a printer can enlarge or reduce the print image on a page.</summary>
      <returns>A <see cref="T:System.Printing.PageScalingFactorRange" /> object with <see cref="P:System.Printing.PageScalingFactorRange.MaximumScale" /> and <see cref="P:System.Printing.PageScalingFactorRange.MinimumScale" /> properties holding <see cref="T:System.Int32" /> values that represent percentages. </returns>
    </member>
    <member name="P:System.Printing.PrintCapabilities.PagesPerSheetCapability">
      <summary>Gets a collection of integers, each identifying the number of pages that a user can choose to print on a single side of a sheet of paper. </summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Int32" /> values representing the options that a printer supports for printing more than one page per side. </returns>
    </member>
    <member name="P:System.Printing.PrintCapabilities.PagesPerSheetDirectionCapability">
      <summary>Gets a collection of values that identify what patterns a printer supports for presenting multiple pages on a single side of a sheet of paper.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Printing.PagesPerSheetDirection" /> values. </returns>
    </member>
    <member name="P:System.Printing.PrintCapabilities.PhotoPrintingIntentCapability">
      <summary>Gets a collection of values that identify the quality options the printer supports for printing photographs. </summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Printing.PhotoPrintingIntent" /> values. </returns>
    </member>
    <member name="P:System.Printing.PrintCapabilities.StaplingCapability">
      <summary>Gets a collection of values that identify the types of automatic stapling that a printer supports.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Printing.Stapling" /> values. </returns>
    </member>
    <member name="P:System.Printing.PrintCapabilities.TrueTypeFontModeCapability">
      <summary>Gets a collection of values that identify the methods that a printer supports for handling TrueType fonts.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Printing.TrueTypeFontMode" /> values. </returns>
    </member>
    <member name="T:System.Printing.PrintCommitAttributesException">
      <summary>The exception that is thrown when an error condition prevents some attributes from being committed by a <see cref="T:System.Printing.PrintSystemObject" /> to the actual computer, printer, or device that the object represents.</summary>
    </member>
    <member name="M:System.Printing.PrintCommitAttributesException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintCommitAttributesException" /> class.</summary>
    </member>
    <member name="M:System.Printing.PrintCommitAttributesException.#ctor(System.Int32,System.Collections.ObjectModel.Collection{System.String},System.Collections.ObjectModel.Collection{System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintCommitAttributesException" /> class by using the specified error code, and the success and failure collections.</summary>
      <param name="errorCode">An <see cref="T:System.Int32" /> that is interpreted as an HRESULT.</param>
      <param name="attributesSuccessList">A collection of strings that name the attributes that your program successfully committed.</param>
      <param name="attributesFailList">A collection of strings that name the attributes that your program was unable to commit.</param>
    </member>
    <member name="M:System.Printing.PrintCommitAttributesException.#ctor(System.Int32,System.String,System.Collections.ObjectModel.Collection{System.String},System.Collections.ObjectModel.Collection{System.String},System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintCommitAttributesException" /> class by using the specified error code, message, and object name, and the success and failure collections.</summary>
      <param name="errorCode">An <see cref="T:System.Int32" /> that is interpreted as an HRESULT.</param>
      <param name="message">A description of the error condition.</param>
      <param name="attributesSuccessList">A collection of strings that name the attributes that your program successfully committed.</param>
      <param name="attributesFailList">A collection of strings that name the attributes that your program was unable to commit.</param>
      <param name="objectName">The object that generated the exception.</param>
    </member>
    <member name="M:System.Printing.PrintCommitAttributesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintCommitAttributesException" /> class by using the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" />. </summary>
      <param name="info">Stores all the data that is used to serialize the object.</param>
      <param name="context">Describes the context of the serialized stream, including the source and the destination.</param>
    </member>
    <member name="M:System.Printing.PrintCommitAttributesException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintCommitAttributesException" /> class and provides it with the specified message.</summary>
      <param name="message">A description of the error condition.</param>
    </member>
    <member name="M:System.Printing.PrintCommitAttributesException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintCommitAttributesException" /> class by using the specified message and the inner <see cref="T:System.Exception" />.</summary>
      <param name="message">A description of the error condition.</param>
      <param name="innerException">The underlying condition that triggered the <see cref="T:System.Printing.PrintCommitAttributesException" />.</param>
    </member>
    <member name="P:System.Printing.PrintCommitAttributesException.CommittedAttributesCollection">
      <summary>Gets a <see cref="T:System.Collections.ObjectModel.Collection`1" /> of the names of the attributes that were successfully committed.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.Collection`1" /> of strings that identify the <see cref="T:System.Printing.PrintSystemObject" /> attributes that were successfully committed.</returns>
    </member>
    <member name="P:System.Printing.PrintCommitAttributesException.FailedAttributesCollection">
      <summary>Gets a <see cref="T:System.Collections.ObjectModel.Collection`1" /> of the names of the attributes that were not committed.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.Collection`1" /> of strings that identify the <see cref="T:System.Printing.PrintSystemObject" /> attributes that your program was unable to commit.</returns>
    </member>
    <member name="M:System.Printing.PrintCommitAttributesException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets information about the serialization of the object and the context of the serialized stream.</summary>
      <param name="info">Stores all the data that is used to serialize the object.</param>
      <param name="context">Describes the context of the serialized stream, including the source and the destination.</param>
    </member>
    <member name="P:System.Printing.PrintCommitAttributesException.PrintObjectName">
      <summary>Gets the name of the object that threw the exception.</summary>
      <returns>A <see cref="T:System.String" /> reference to the <see cref="P:System.Printing.PrintSystemObject.Name" /> property of the <see cref="T:System.Printing.PrintSystemObject" /> that threw the exception.</returns>
    </member>
    <member name="T:System.Printing.PrintingCanceledException">
      <summary>The exception that occurs when code attempts to access a canceled print job.</summary>
    </member>
    <member name="M:System.Printing.PrintingCanceledException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintingCanceledException" /> class. </summary>
    </member>
    <member name="M:System.Printing.PrintingCanceledException.#ctor(System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintingCanceledException" /> class that provides a specific error code and error condition.</summary>
      <param name="errorCode">An <see cref="T:System.Int32" /> interpreted as an HRESULT.</param>
      <param name="message">A <see cref="T:System.String" /> that describes the error condition.</param>
    </member>
    <member name="M:System.Printing.PrintingCanceledException.#ctor(System.Int32,System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintingCanceledException" /> class that provides a specific error code and error condition, including the underlying cause of the exception.</summary>
      <param name="errorCode">An <see cref="T:System.Int32" /> interpreted as an HRESULT.</param>
      <param name="message">A <see cref="T:System.String" /> that describes the error condition.</param>
      <param name="innerException">The underlying error condition that caused the <see cref="T:System.Printing.PrintingCanceledException" />.</param>
    </member>
    <member name="M:System.Printing.PrintingCanceledException.#ctor(System.Int32,System.String,System.String,System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintingCanceledException" /> class that provides a specific error code, error condition, print queue name, job name, and job ID.</summary>
      <param name="errorCode">An <see cref="T:System.Int32" /> interpreted as an HRESULT.</param>
      <param name="message">A <see cref="T:System.String" /> that describes the error condition.</param>
      <param name="printQueueName">The name of the print queue hosting the print job that caused the exception.</param>
      <param name="jobName">The name of the print job that caused the exception. </param>
      <param name="jobId">The ID number of the print job that caused the exception. </param>
    </member>
    <member name="M:System.Printing.PrintingCanceledException.#ctor(System.Int32,System.String,System.String,System.String,System.Int32,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintingCanceledException" /> class with a specific error code, error condition, print queue name, job name, job ID, and underlying cause of the exception.</summary>
      <param name="errorCode">An <see cref="T:System.Int32" /> interpreted as an HRESULT.</param>
      <param name="message">A <see cref="T:System.String" /> that describes the error condition.</param>
      <param name="printQueueName">The name of the print queue hosting the print job that caused the exception.</param>
      <param name="jobName">The name of the print job that caused the exception. </param>
      <param name="jobId">The ID number of the print job that caused the exception. </param>
      <param name="innerException">The underlying cause of the exception.</param>
    </member>
    <member name="M:System.Printing.PrintingCanceledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintingCanceledException" /> class that provides specific <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" />. This constructor is protected.</summary>
      <param name="info">The data that is required to serialize or deserialize an object.</param>
      <param name="context">The context, including source and destination, of the serialized stream.</param>
    </member>
    <member name="M:System.Printing.PrintingCanceledException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintingCanceledException" /> class that provides a specific error condition.</summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error condition.</param>
    </member>
    <member name="M:System.Printing.PrintingCanceledException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintingCanceledException" /> class that provides a specific error condition, including the underlying cause of the exception.</summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error condition.</param>
      <param name="innerException">The underlying error condition that caused the <see cref="T:System.Printing.PrintingCanceledException" />.</param>
    </member>
    <member name="T:System.Printing.PrintingNotSupportedException">
      <summary>The exception that is thrown when a printing operation is not supported.</summary>
    </member>
    <member name="M:System.Printing.PrintingNotSupportedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintingNotSupportedException" /> class with a system-supplied message that describes the error.</summary>
    </member>
    <member name="M:System.Printing.PrintingNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintingNotSupportedException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="M:System.Printing.PrintingNotSupportedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintingNotSupportedException" /> class with a specified message that describes the error.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
    </member>
    <member name="M:System.Printing.PrintingNotSupportedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintingNotSupportedException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="M:System.Printing.PrintingNotSupportedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintingNotSupportedException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="T:System.Printing.PrintJobException">
      <summary>The exception that occurs when the print job does not run correctly.</summary>
    </member>
    <member name="M:System.Printing.PrintJobException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintJobException" /> class.</summary>
    </member>
    <member name="M:System.Printing.PrintJobException.#ctor(System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintJobException" /> class that provides a specific error code and error condition.</summary>
      <param name="errorCode">An <see cref="T:System.Int32" /> interpreted as an HRESULT.</param>
      <param name="message">A <see cref="T:System.String" /> that describes the error condition.</param>
    </member>
    <member name="M:System.Printing.PrintJobException.#ctor(System.Int32,System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintJobException" /> class that provides a specific error code and error condition, including the underlying cause of the exception.</summary>
      <param name="errorCode">An <see cref="T:System.Int32" /> interpreted as an HRESULT.</param>
      <param name="message">A <see cref="T:System.String" /> that describes the error condition.</param>
      <param name="innerException">The underlying error that caused the <see cref="T:System.Printing.PrintJobException" />.</param>
    </member>
    <member name="M:System.Printing.PrintJobException.#ctor(System.Int32,System.String,System.String,System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintJobException" /> class that provides a specific error code, error condition, print queue name, job name, and job ID.</summary>
      <param name="errorCode">An <see cref="T:System.Int32" /> interpreted as an HRESULT.</param>
      <param name="message">A <see cref="T:System.String" /> that describes the error condition.</param>
      <param name="printQueueName">The name of the print queue hosting the print job that caused the exception.</param>
      <param name="jobName">The name of the print job that caused the exception. </param>
      <param name="jobId">The ID number of the print job that caused the exception. </param>
    </member>
    <member name="M:System.Printing.PrintJobException.#ctor(System.Int32,System.String,System.String,System.String,System.Int32,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintJobException" /> class that provides a specific message, error code, error condition, print queue name, job name, and job ID.</summary>
      <param name="errorCode">An <see cref="T:System.Int32" /> interpreted as an HRESULT.</param>
      <param name="message">A <see cref="T:System.String" /> that describes the error condition.</param>
      <param name="printQueueName">The name of the print queue hosting the print job that caused the exception.</param>
      <param name="jobName">The name of the print job that caused the exception. </param>
      <param name="jobId">The ID number of the print job that caused the exception. </param>
      <param name="innerException">The underlying cause of the exception.</param>
    </member>
    <member name="M:System.Printing.PrintJobException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintJobException" /> class that provides specific <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" />. This constructor is protected.</summary>
      <param name="info">The data that is required to serialize or deserialize an object.</param>
      <param name="context">The context, including source and destination, of the serialized stream.</param>
    </member>
    <member name="M:System.Printing.PrintJobException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintJobException" /> class that provides a specific error condition.</summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error condition.</param>
    </member>
    <member name="M:System.Printing.PrintJobException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintJobException" /> class that provides a specific error condition, including the cause of the exception.</summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error condition.</param>
      <param name="innerException">The underlying error that caused the <see cref="T:System.Printing.PrintJobException" />.</param>
    </member>
    <member name="M:System.Printing.PrintJobException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the data that is used to serialize the object and gets the context of the serialized stream.</summary>
      <param name="info">The data that is required to serialize or deserialize an object.</param>
      <param name="context">The context, including source and destination, of the serialized stream.</param>
    </member>
    <member name="P:System.Printing.PrintJobException.JobId">
      <summary>Gets the ID number of the print job that caused the exception.</summary>
      <returns>An <see cref="T:System.Int32" /> that identifies the print job.</returns>
    </member>
    <member name="P:System.Printing.PrintJobException.JobName">
      <summary>Gets the name of the print job that caused the exception.</summary>
      <returns>A <see cref="T:System.String" /> that names the print job.</returns>
    </member>
    <member name="P:System.Printing.PrintJobException.PrintQueueName">
      <summary>Gets the name of the <see cref="T:System.Printing.PrintQueue" /> that was hosting the print job when the exception was thrown.</summary>
      <returns>A <see cref="T:System.String" /> that specifies the name of the <see cref="T:System.Printing.PrintQueue" />.</returns>
    </member>
    <member name="T:System.Printing.PrintQueueException">
      <summary>The exception that is thrown when an error condition prevents the accessing or creation of a <see cref="T:System.Printing.PrintQueue" />.</summary>
    </member>
    <member name="M:System.Printing.PrintQueueException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintQueueException" /> class.</summary>
    </member>
    <member name="M:System.Printing.PrintQueueException.#ctor(System.Int32,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintQueueException" /> class that provides a specific error code, error condition, and printer name.</summary>
      <param name="errorCode">An <see cref="T:System.Int32" /> interpreted as an HRESULT.</param>
      <param name="message">A <see cref="T:System.String" /> that describes the error condition.</param>
      <param name="printerName">The name of the printer that was being accessed when the error occurred.</param>
    </member>
    <member name="M:System.Printing.PrintQueueException.#ctor(System.Int32,System.String,System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintQueueException" /> class that provides a specific printer name, error code, and error condition, including the underlying cause of the exception.</summary>
      <param name="errorCode">An <see cref="T:System.Int32" /> interpreted as an HRESULT.</param>
      <param name="message">A <see cref="T:System.String" /> that describes the error condition.</param>
      <param name="printerName">The name of the printer that was being accessed when the error occurred.</param>
      <param name="innerException">The underlying error condition that caused the <see cref="T:System.Printing.PrintQueueException" />.</param>
    </member>
    <member name="M:System.Printing.PrintQueueException.#ctor(System.Int32,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintQueueException" /> class that provides a specific error code, error condition, printer name, and printer message.</summary>
      <param name="errorCode">An <see cref="T:System.Int32" /> interpreted as an HRESULT.</param>
      <param name="message">A <see cref="T:System.String" /> that describes the error condition.</param>
      <param name="printerName">The name of the printer that was being accessed when the error occurred.</param>
      <param name="printerMessage">The exception message that was sent by the printer driver or unmanaged print system component that triggered the exception.</param>
    </member>
    <member name="M:System.Printing.PrintQueueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintQueueException" /> class that provides specific <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" />. This constructor is protected.</summary>
      <param name="info">The data that is required to serialize or deserialize an object.</param>
      <param name="context">The context, including source and destination, of the serialized stream.</param>
    </member>
    <member name="M:System.Printing.PrintQueueException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintQueueException" /> class that provides a specific error condition.</summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error condition.</param>
    </member>
    <member name="M:System.Printing.PrintQueueException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintQueueException" /> class that provides a specific error condition, including the underlying cause of the exception.</summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error condition.</param>
      <param name="innerException">The underlying error condition that caused the <see cref="T:System.Printing.PrintQueueException" />.</param>
    </member>
    <member name="M:System.Printing.PrintQueueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the data that is used to serialize the object and gets the context of the serialized stream.</summary>
      <param name="info">The data that is required to serialize or deserialize an object.</param>
      <param name="context">The context, including source and destination, of the serialized stream.</param>
    </member>
    <member name="P:System.Printing.PrintQueueException.PrinterName">
      <summary>Gets the name of the printer that was being accessed when the exception was thrown.</summary>
      <returns>A <see cref="T:System.String" /> that names the printer.</returns>
    </member>
    <member name="T:System.Printing.PrintServerException">
      <summary>The exception that occurs when an error condition prevents the accessing or creation of a <see cref="T:System.Printing.PrintServer" />.</summary>
    </member>
    <member name="M:System.Printing.PrintServerException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintServerException" /> class.</summary>
    </member>
    <member name="M:System.Printing.PrintServerException.#ctor(System.Int32,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintServerException" /> class that provides a specific error code, error condition, and print server name.</summary>
      <param name="errorCode">An <see cref="T:System.Int32" /> interpreted as an HRESULT.</param>
      <param name="message">A <see cref="T:System.String" /> that describes the error condition.</param>
      <param name="serverName">The name of the print server that was being accessed when the error condition occurred.</param>
    </member>
    <member name="M:System.Printing.PrintServerException.#ctor(System.Int32,System.String,System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintServerException" /> class that provides a specific print server name, error code, and error condition, including the underlying cause of the exception.</summary>
      <param name="errorCode">An <see cref="T:System.Int32" /> interpreted as an HRESULT.</param>
      <param name="message">A <see cref="T:System.String" /> that describes the error condition.</param>
      <param name="serverName">The name of the print server that was being accessed when the error condition occurred.</param>
      <param name="innerException">The underlying condition that caused the <see cref="T:System.Printing.PrintServerException" />.</param>
    </member>
    <member name="M:System.Printing.PrintServerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintServerException" /> class that provides specific <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" />. This constructor is protected.</summary>
      <param name="info">The data that is required to serialize or deserialize an object.</param>
      <param name="context">The context, including source and destination, of the serialized stream.</param>
    </member>
    <member name="M:System.Printing.PrintServerException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintServerException" /> class that provides a specific error condition.</summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error condition.</param>
    </member>
    <member name="M:System.Printing.PrintServerException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintServerException" /> class that provides a specific error condition, including the underlying cause of the exception. </summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error condition.</param>
      <param name="innerException">The underlying error condition that caused the <see cref="T:System.Printing.PrintServerException" />.</param>
    </member>
    <member name="M:System.Printing.PrintServerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the data that is used to serialize the object and gets the context of the serialized stream.</summary>
      <param name="info">The data that is used to serialize the object.</param>
      <param name="context">The context, including source and destination, of the serialized stream.</param>
    </member>
    <member name="P:System.Printing.PrintServerException.ServerName">
      <summary>Gets the name of the print server that was being accessed when the exception was thrown.</summary>
      <returns>A <see cref="T:System.String" /> that names the print server.</returns>
    </member>
    <member name="T:System.Printing.PrintSystemException">
      <summary>The exception that occurs when an error condition prevents accessing or creating a <see cref="T:System.Printing.PrintSystemObject" />. </summary>
    </member>
    <member name="M:System.Printing.PrintSystemException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintSystemException" /> class. </summary>
    </member>
    <member name="M:System.Printing.PrintSystemException.#ctor(System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintSystemException" /> class that provides a specific error code and error message. </summary>
      <param name="errorCode">An <see cref="T:System.Int32" /> interpreted as an HRESULT.</param>
      <param name="message">A string that describes the error condition.</param>
    </member>
    <member name="M:System.Printing.PrintSystemException.#ctor(System.Int32,System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintSystemException" /> class that provides a specific error code and error message, including the underlying cause of the exception. </summary>
      <param name="errorCode">An <see cref="T:System.Int32" /> interpreted as an HRESULT.</param>
      <param name="message">A string that describes the error condition.</param>
      <param name="innerException">The underlying error condition that caused the exception.</param>
    </member>
    <member name="M:System.Printing.PrintSystemException.#ctor(System.Int32,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintSystemException" /> class that provides a specific error code, error message, and printer message. </summary>
      <param name="errorCode">An <see cref="T:System.Int32" /> interpreted as an HRESULT.</param>
      <param name="message">A string that describes the error condition.</param>
      <param name="printerMessage">The exception message sent by the printer driver or unmanaged print system component that caused the exception.</param>
    </member>
    <member name="M:System.Printing.PrintSystemException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintSystemException" /> class that provides specific serialization information and streaming context.</summary>
      <param name="info">The data that is required to serialize or deserialize an object.</param>
      <param name="context">The context, including source and destination, of the serialized stream.</param>
    </member>
    <member name="M:System.Printing.PrintSystemException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintSystemException" /> class that provides a specific error message. </summary>
      <param name="message">A string that describes the error condition.</param>
    </member>
    <member name="M:System.Printing.PrintSystemException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintSystemException" /> class that provides a specific error message, including the underlying cause of the exception. </summary>
      <param name="message">A string that describes the error condition.</param>
      <param name="innerException">The underlying error condition that caused the exception.</param>
    </member>
    <member name="M:System.Printing.PrintSystemException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the data that is used to serialize the object and gets the context of the serialized stream. </summary>
      <param name="info">The data that is required to serialize or deserialize an object.</param>
      <param name="context">The context, including source and destination, of the serialized stream.</param>
    </member>
    <member name="T:System.Printing.PrintTicket">
      <summary>Defines the settings of a print job.</summary>
    </member>
    <member name="M:System.Printing.PrintTicket.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintTicket" /> class.</summary>
    </member>
    <member name="M:System.Printing.PrintTicket.#ctor(System.IO.Stream)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintTicket" /> class by using an XML stream (that contains a PrintTicket document) that complies with the XML Print Schema.</summary>
      <param name="xmlStream">An XML stream that describes a print job and conforms to the Print Schema.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlStream" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="xmlStream" /> is not valid XML.</exception>
    </member>
    <member name="M:System.Printing.PrintTicket.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Printing.PrintTicket" />, making deep copies of this object's values. </summary>
      <returns>A modifiable clone of the current object. </returns>
    </member>
    <member name="P:System.Printing.PrintTicket.Collation">
      <summary>Gets or sets a value indicating whether the printer collates its output.</summary>
      <returns>A <see cref="T:System.Printing.Collation" /> value indicating whether the printer collates its output.  </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Calling code has attempted to set the property to a value that is not in the <see cref="T:System.Printing.Collation" /> enumeration.</exception>
    </member>
    <member name="P:System.Printing.PrintTicket.CopyCount">
      <summary>Gets or sets the number of copies for the print job.</summary>
      <returns>A nullable <see cref="T:System.Int32" /> value that specifies how many copies to print. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Calling code has attempted to set the property to a value less than 1.</exception>
    </member>
    <member name="P:System.Printing.PrintTicket.DeviceFontSubstitution">
      <summary>Gets or sets a value indicating whether the printer substitutes device-based fonts for computer-based fonts on the print job.</summary>
      <returns>A <see cref="T:System.Printing.DeviceFontSubstitution" /> value indicating whether the device substitutes device-based fonts for computer-based fonts for the current print job. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Calling code has attempted to set the property to a value that is not in the <see cref="T:System.Printing.DeviceFontSubstitution" /> enumeration.</exception>
    </member>
    <member name="P:System.Printing.PrintTicket.Duplexing">
      <summary>Gets or sets a value indicating what kind of two-sided printing, if any, the printer uses for the print job.</summary>
      <returns>A <see cref="T:System.Printing.Duplexing" /> value indicating what sort of two-sided printing, if any, the printer uses for the print job. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Calling code has attempted to set the property to a value that is not in the <see cref="T:System.Printing.Duplexing" /> enumeration.</exception>
    </member>
    <member name="M:System.Printing.PrintTicket.GetXmlStream">
      <summary>Returns a <see cref="T:System.IO.MemoryStream" /> object that represents the property values of a <see cref="T:System.Printing.PrintTicket" /> as an XML stream that conforms to the Print Schema.</summary>
      <returns>A <see cref="T:System.IO.MemoryStream" /> object that describes the print ticket with XML that conforms to the Print Schema.</returns>
    </member>
    <member name="P:System.Printing.PrintTicket.InputBin">
      <summary>Gets or sets a value indicating what input bin (paper tray) to use.</summary>
      <returns>An <see cref="T:System.Printing.InputBin" /> value indicating what input tray is used and whether it is chosen manually or automatically. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Calling code has attempted to set the property to a value that is not in the <see cref="T:System.Printing.InputBin" /> enumeration.</exception>
    </member>
    <member name="P:System.Printing.PrintTicket.OutputColor">
      <summary>Gets or sets a value indicating how the printer handles content that has color or shades of gray.</summary>
      <returns>An <see cref="T:System.Printing.OutputColor" /> value indicating how the printer handles content that has color or shades of gray. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Calling code has attempted to set the property to a value that is not in the <see cref="T:System.Printing.OutputColor" /> enumeration.</exception>
    </member>
    <member name="P:System.Printing.PrintTicket.OutputQuality">
      <summary>Gets or sets a value indicating the quality of output for the print job.</summary>
      <returns>An <see cref="T:System.Printing.OutputQuality" /> value that specifies the needed level of quality. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Calling code has attempted to set the property to a value that is not in the <see cref="T:System.Printing.OutputQuality" /> enumeration.</exception>
    </member>
    <member name="P:System.Printing.PrintTicket.PageBorderless">
      <summary>Gets or sets a value indicating whether the device prints content to the edge of the media or leaves an unprinted margin around the edge.</summary>
      <returns>A <see cref="T:System.Printing.PageBorderless" /> value that specifies whether the printer uses borderless printing.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Calling code has attempted to set the property to a value that is not in the <see cref="T:System.Printing.PageBorderless" /> enumeration.</exception>
    </member>
    <member name="P:System.Printing.PrintTicket.PageMediaSize">
      <summary>Gets or sets the page size for the paper (or other media) that a printer uses for a print job.</summary>
      <returns>A <see cref="T:System.Printing.PageMediaSize" /> object that represents the page size by using a name, dimensions, or both.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Calling code has attempted to set the property with a <see cref="T:System.Printing.PageMediaSize" /> object that has at least one null property. - or -Calling code has attempted to set the property with a <see cref="T:System.Printing.PageMediaSize" /> object whose <see cref="P:System.Printing.PageMediaSize.PageMediaSizeName" /> property is set to a value that is not in the <see cref="T:System.Printing.PageMediaSizeName" /> enumeration.- or -Calling code has attempted to set the property with a <see cref="T:System.Printing.PageMediaSize" /> object whose <see cref="P:System.Printing.PageMediaSize.Width" /> or <see cref="P:System.Printing.PageMediaSize.Height" /> property is set to a value less than 1.</exception>
    </member>
    <member name="P:System.Printing.PrintTicket.PageMediaType">
      <summary>Gets or sets a value indicating what sort of paper or media the printer uses for the print job.</summary>
      <returns>A <see cref="T:System.Printing.PageMediaType" /> value specifying the print media, such as card stock, label, plain, or photographic. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Calling code has attempted to set the property to a value that is not in the <see cref="T:System.Printing.PageMediaType" /> enumeration.</exception>
    </member>
    <member name="P:System.Printing.PrintTicket.PageOrder">
      <summary>Gets or sets a value indicating whether the printer prints multiple pages back-to-front or front-to-back.</summary>
      <returns>A <see cref="T:System.Printing.PageOrder" /> value specifying last-page-first printing or first-page-first printing. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Calling code has attempted to set the property to a value that is not in the <see cref="T:System.Printing.PageOrder" /> enumeration.</exception>
    </member>
    <member name="P:System.Printing.PrintTicket.PageOrientation">
      <summary>Gets or sets a value indicating how the page content is oriented for printing. </summary>
      <returns>A <see cref="T:System.Printing.PageOrientation" /> value specifying how page content is oriented, for example, <see cref="F:System.Printing.PageOrientation.Landscape" /> or <see cref="F:System.Printing.PageOrientation.ReversePortrait" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Calling code has attempted to set the property to a value that is not in the <see cref="T:System.Printing.PageOrientation" /> enumeration.</exception>
    </member>
    <member name="P:System.Printing.PrintTicket.PageResolution">
      <summary>Gets or sets the level of page resolution that the printer uses for a print job.</summary>
      <returns>A <see cref="T:System.Printing.PageResolution" /> value that represents the resolution as a qualitative value, a dots-per-inch value, or both. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Calling code has attempted to set the property with a <see cref="T:System.Printing.PageResolution" /> object that has at least one null property. - or -Calling code has attempted to set the property with a <see cref="T:System.Printing.PageMediaSize" /> object whose <see cref="P:System.Printing.PageResolution.QualitativeResolution" /> property is set to a value that is not in the <see cref="T:System.Printing.PageQualitativeResolution" /> enumeration.- or -Calling code has attempted to set the property with a <see cref="T:System.Printing.PageResolution" /> object whose <see cref="P:System.Printing.PageResolution.X" /> or <see cref="P:System.Printing.PageResolution.Y" /> property is set to a value less than 1.</exception>
    </member>
    <member name="P:System.Printing.PrintTicket.PageScalingFactor">
      <summary>Gets or sets the percentage by which the printer enlarges or reduces the print image on a page.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents a percentage. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Calling code has attempted to set the property to a value that is less than 1.</exception>
    </member>
    <member name="P:System.Printing.PrintTicket.PagesPerSheet">
      <summary>Gets or sets the number of pages that print on each printed side of a sheet of paper.</summary>
      <returns>A nullable <see cref="T:System.Int32" /> value that represents the number of pages that print on each printed side of a sheet of paper.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Calling code has attempted to set the property to a value that is less than 1.</exception>
    </member>
    <member name="P:System.Printing.PrintTicket.PagesPerSheetDirection">
      <summary>Gets or sets a value indicating how a printer arranges multiple pages that print on each side of a sheet of paper. </summary>
      <returns>A <see cref="T:System.Printing.PagesPerSheetDirection" /> value indicating how a printer presents multiple pages per sheet. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Calling code has attempted to set the property to a value that is not in the <see cref="T:System.Printing.PagesPerSheetDirection" /> enumeration.</exception>
    </member>
    <member name="P:System.Printing.PrintTicket.PhotoPrintingIntent">
      <summary>Gets or sets a value indicating in qualitative terms the level of quality the printer uses to print a photograph. </summary>
      <returns>A <see cref="T:System.Printing.PhotoPrintingIntent" /> value indicating the level of photo quality.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Calling code has attempted to set the property to a value that is not in the <see cref="T:System.Printing.PhotoPrintingIntent" /> enumeration.</exception>
    </member>
    <member name="E:System.Printing.PrintTicket.PropertyChanged">
      <summary>Occurs when any property of the <see cref="T:System.Printing.PrintTicket" /> changes. </summary>
    </member>
    <member name="M:System.Printing.PrintTicket.SaveTo(System.IO.Stream)">
      <summary>Saves the <see cref="T:System.Printing.PrintTicket" /> settings to a <see cref="T:System.IO.Stream" /> object by using an XML format that conforms to the Print Schema.</summary>
      <param name="outStream">The <see cref="T:System.IO.Stream" /> that holds the saved <see cref="T:System.Printing.PrintTicket" />. </param>
    </member>
    <member name="P:System.Printing.PrintTicket.Stapling">
      <summary>Gets or sets a value indicating whether, and where, a printer staples multiple pages. </summary>
      <returns>A <see cref="T:System.Printing.Stapling" /> value specifying how a printer staples the output. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Calling code has attempted to set the property to a value that is not in the <see cref="T:System.Printing.Stapling" /> enumeration.</exception>
    </member>
    <member name="P:System.Printing.PrintTicket.TrueTypeFontMode">
      <summary>Gets or sets a value indicating how the printer handles text that uses TrueType fonts.</summary>
      <returns>A <see cref="T:System.Printing.TrueTypeFontMode" /> value specifying how a printer handles TrueType fonts. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Calling code has attempted to set the property to a value that is not in the <see cref="T:System.Printing.TrueTypeFontMode" /> enumeration.</exception>
    </member>
    <member name="T:System.Printing.PrintTicketScope">
      <summary>Specifies whether a <see cref="T:System.Printing.PrintTicket" /> applies to an entire print job, one document within the print job, or just a page within the print job. </summary>
    </member>
    <member name="F:System.Printing.PrintTicketScope.PageScope">
      <summary>A single page.</summary>
    </member>
    <member name="F:System.Printing.PrintTicketScope.DocumentScope">
      <summary>A single document.</summary>
    </member>
    <member name="F:System.Printing.PrintTicketScope.JobScope">
      <summary>An entire print job.</summary>
    </member>
    <member name="T:System.Printing.Stapling">
      <summary>Specifies whether, and where, a printer staples a multi-page document.</summary>
    </member>
    <member name="F:System.Printing.Stapling.Unknown">
      <summary>The feature (whose options are represented by this enumeration) is set to an option not defined in the Print Schema.</summary>
    </member>
    <member name="F:System.Printing.Stapling.SaddleStitch">
      <summary>Multiple staples along the fold line. Also called saddle-stitch stapling.</summary>
    </member>
    <member name="F:System.Printing.Stapling.StapleBottomLeft">
      <summary>A single staple in the lower-left corner.</summary>
    </member>
    <member name="F:System.Printing.Stapling.StapleBottomRight">
      <summary>A single staple in the lower-right corner.</summary>
    </member>
    <member name="F:System.Printing.Stapling.StapleDualLeft">
      <summary>Two staples along the left edge.</summary>
    </member>
    <member name="F:System.Printing.Stapling.StapleDualRight">
      <summary>Two staples along the right edge.</summary>
    </member>
    <member name="F:System.Printing.Stapling.StapleDualTop">
      <summary>Two staples along the upper edge.</summary>
    </member>
    <member name="F:System.Printing.Stapling.StapleDualBottom">
      <summary>Two staples along the lower edge.</summary>
    </member>
    <member name="F:System.Printing.Stapling.StapleTopLeft">
      <summary>A single staple in the upper-left corner.</summary>
    </member>
    <member name="F:System.Printing.Stapling.StapleTopRight">
      <summary>A single staple in the upper-right corner.</summary>
    </member>
    <member name="F:System.Printing.Stapling.None">
      <summary>The document is not stapled.</summary>
    </member>
    <member name="T:System.Printing.TrueTypeFontMode">
      <summary>Specifies how a printer handles text that is formatted with a TrueType font. </summary>
    </member>
    <member name="F:System.Printing.TrueTypeFontMode.Unknown">
      <summary>The feature (whose options are represented by this enumeration) is set to an option not defined in the Print Schema.</summary>
    </member>
    <member name="F:System.Printing.TrueTypeFontMode.Automatic">
      <summary>The printer driver decides the best method for handling TrueType fonts.</summary>
    </member>
    <member name="F:System.Printing.TrueTypeFontMode.DownloadAsOutlineFont">
      <summary>The printer driver downloads the TrueType font as an outline font.</summary>
    </member>
    <member name="F:System.Printing.TrueTypeFontMode.DownloadAsRasterFont">
      <summary>The printer driver creates a raster font for each size of the TrueType font that it needs and downloads them all.</summary>
    </member>
    <member name="F:System.Printing.TrueTypeFontMode.DownloadAsNativeTrueTypeFont">
      <summary>The printer driver downloads the TrueType font.</summary>
    </member>
    <member name="F:System.Printing.TrueTypeFontMode.RenderAsBitmap">
      <summary>The printer driver downloads each area of text as a graphic.</summary>
    </member>
    <member name="T:System.Printing.ValidationResult">
      <summary>Represents a merged <see cref="T:System.Printing.PrintTicket" /> that is guaranteed to be viable, with a report of any settings that were changed to make it viable. </summary>
    </member>
    <member name="P:System.Printing.ValidationResult.ConflictStatus">
      <summary>Gets a value indicating whether a conflict occurred between the functionality supported by the printer and the functionality requested in the initial merger of two source <see cref="T:System.Printing.PrintTicket" />s.</summary>
      <returns>One of the <see cref="T:System.Printing.ConflictStatus" /> values that indicates either that no conflict occurred or that at least one conflict occurred but was resolved. The default is <see cref="F:System.Printing.ConflictStatus.NoConflict" />. </returns>
    </member>
    <member name="M:System.Printing.ValidationResult.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Printing.ValidationResult" /> is equal to the current <see cref="T:System.Printing.ValidationResult" />.</summary>
      <returns>true if the <see cref="T:System.Printing.ValidationResult" /> objects are equal; otherwise, false. false is also returned if the object passed is not a <see cref="T:System.Printing.ValidationResult" />.</returns>
      <param name="o">The <see cref="T:System.Printing.ValidationResult" /> to compare.</param>
    </member>
    <member name="M:System.Printing.ValidationResult.GetHashCode">
      <summary>Gets the hash code associated with the <see cref="T:System.Printing.ValidationResult" /> and its <see cref="T:System.Printing.PrintTicket" /> and print stream.</summary>
      <returns>A hash code for the current <see cref="T:System.Printing.ValidationResult" />.</returns>
    </member>
    <member name="M:System.Printing.ValidationResult.op_Equality(System.Printing.ValidationResult,System.Printing.ValidationResult)">
      <summary>Determines if the specified <see cref="T:System.Printing.ValidationResult" /> objects are equal.</summary>
      <returns>true if the <see cref="T:System.Printing.ValidationResult" /> objects are equal; otherwise, false.</returns>
      <param name="a">The first <see cref="T:System.Printing.ValidationResult" /> to compare.</param>
      <param name="b">The second <see cref="T:System.Printing.ValidationResult" /> to compare.</param>
    </member>
    <member name="M:System.Printing.ValidationResult.op_Inequality(System.Printing.ValidationResult,System.Printing.ValidationResult)">
      <summary>Determines if the specified <see cref="T:System.Printing.ValidationResult" /> objects are not equal.</summary>
      <returns>true if the <see cref="T:System.Printing.ValidationResult" /> objects are not equal; otherwise, false.</returns>
      <param name="a">The first <see cref="T:System.Printing.ValidationResult" /> to compare.</param>
      <param name="b">The second <see cref="T:System.Printing.ValidationResult" /> to compare.</param>
    </member>
    <member name="P:System.Printing.ValidationResult.ValidatedPrintTicket">
      <summary>Gets a <see cref="T:System.Printing.PrintTicket" /> object that results from the merging of two <see cref="T:System.Printing.PrintTicket" /> objects, which might have been adjusted to ensure its viability.</summary>
      <returns>A valid and viable <see cref="T:System.Printing.PrintTicket" />. The default is null. </returns>
    </member>
    <member name="T:System.Printing.Interop.BaseDevModeType">
      <summary>Specifies the type of default DEVMODE structure to use as the base DEVMODE for conversions of managed <see cref="T:System.Printing.PrintTicket" /> objects to unmanaged DEVMODE structures. </summary>
    </member>
    <member name="F:System.Printing.Interop.BaseDevModeType.UserDefault">
      <summary>The user's default DEVMODE structure. </summary>
    </member>
    <member name="F:System.Printing.Interop.BaseDevModeType.PrinterDefault">
      <summary>The printer's default DEVMODE structure. </summary>
    </member>
    <member name="T:System.Printing.Interop.PrintTicketConverter">
      <summary>Converts managed <see cref="T:System.Printing.PrintTicket" /> objects to unmanaged Graphics Device Interface (GDI) DEVMODE structures, and vice versa. </summary>
    </member>
    <member name="M:System.Printing.Interop.PrintTicketConverter.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.Interop.PrintTicketConverter" /> class for the specified printer. </summary>
      <param name="deviceName">The name of the printer that is bound to the new <see cref="T:System.Printing.Interop.PrintTicketConverter" /> instance.</param>
      <param name="clientPrintSchemaVersion">The Print Schema version to use in the <see cref="T:System.Printing.PrintTicket" /> and DEVMODE conversion.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="deviceName" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="clientPrintSchemaVersion" /> is 0 or less.</exception>
      <exception cref="T:System.Printing.PrintQueueException">The converter was unable to bind to <paramref name="deviceName" />.</exception>
    </member>
    <member name="M:System.Printing.Interop.PrintTicketConverter.ConvertDevModeToPrintTicket(System.Byte[])">
      <summary>Converts the specified DEVMODE structure to a managed code <see cref="T:System.Printing.PrintTicket" />. </summary>
      <returns>The new managed <see cref="T:System.Printing.PrintTicket" />.</returns>
      <param name="devMode">A <see cref="T:System.Byte" /> array that contains the DEVMODE structure.</param>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Printing.Interop.PrintTicketConverter" /> is already disposed.</exception>
      <exception cref="T:System.ArgumentNullException">The value of <paramref name="devMode" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The content of <paramref name="devMode" /> is not well-formed.</exception>
      <exception cref="T:System.Printing.PrintQueueException">The conversion failed.</exception>
    </member>
    <member name="M:System.Printing.Interop.PrintTicketConverter.ConvertDevModeToPrintTicket(System.Byte[],System.Printing.PrintTicketScope)">
      <summary>Converts the specified DEVMODE structure to a managed code <see cref="T:System.Printing.PrintTicket" /> that has the specified scope.</summary>
      <returns>The new <see cref="T:System.Printing.PrintTicket" />.</returns>
      <param name="devMode">A <see cref="T:System.Byte" /> buffer containing the DEVMODE structure to convert.</param>
      <param name="scope">A <see cref="T:System.Printing.PrintTicketScope" /> value that specifies whether the new <see cref="T:System.Printing.PrintTicket" /> applies to a page, a document, or an entire print job.</param>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Printing.Interop.PrintTicketConverter" /> is already disposed.</exception>
      <exception cref="T:System.ArgumentNullException">The value of <paramref name="devMode" /> is null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">The content of <paramref name="devMode" /> is not well-formed.</exception>
      <exception cref="T:System.Printing.PrintQueueException">The conversion failed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="scope" /> is not a valid <see cref="T:System.Printing.PrintTicketScope" /> value.</exception>
    </member>
    <member name="M:System.Printing.Interop.PrintTicketConverter.ConvertPrintTicketToDevMode(System.Printing.PrintTicket,System.Printing.Interop.BaseDevModeType)">
      <summary>Converts the specified managed <see cref="T:System.Printing.PrintTicket" /> to an unmanaged DEVMODE structure that is based on the DEVMODE structure identified by the <see cref="T:System.Printing.Interop.BaseDevModeType" />.</summary>
      <returns>A <see cref="T:System.Byte" /> array that contains the new DEVMODE structure.</returns>
      <param name="printTicket">The <see cref="T:System.Printing.PrintTicket" /> to convert.</param>
      <param name="baseType">A value that identifies whether to use the user default or printer default DEVMODE as the base DEVMODE.</param>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Printing.Interop.PrintTicketConverter" /> is already disposed.</exception>
      <exception cref="T:System.ArgumentNullException">The value of <paramref name="printTicket" /> is null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">The content of <paramref name="printTicket" /> is not well-formed.</exception>
      <exception cref="T:System.Printing.PrintQueueException">The conversion failed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="baseType" /> is not a valid <see cref="T:System.Printing.Interop.BaseDevModeType" /> value.</exception>
    </member>
    <member name="M:System.Printing.Interop.PrintTicketConverter.ConvertPrintTicketToDevMode(System.Printing.PrintTicket,System.Printing.Interop.BaseDevModeType,System.Printing.PrintTicketScope)">
      <summary>Converts the specified managed code <see cref="T:System.Printing.PrintTicket" /> with the specified scope, into an unmanaged DEVMODE structure that is based on the DEVMODE structure identified by the <see cref="T:System.Printing.Interop.BaseDevModeType" />.</summary>
      <returns>A <see cref="T:System.Byte" /> buffer that represents the new DEVMODE structure.</returns>
      <param name="printTicket">The <see cref="T:System.Printing.PrintTicket" /> to convert.</param>
      <param name="baseType">A value that identifies whether to use the user default or printer default DEVMODE as the base DEVMODE.</param>
      <param name="scope">A <see cref="T:System.Printing.PrintTicketScope" /> value that specifies whether the conversion of the <see cref="T:System.Printing.PrintTicket" /> should be done at the scope of a page, a document, or an entire print job.</param>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Printing.Interop.PrintTicketConverter" /> is already disposed.</exception>
      <exception cref="T:System.ArgumentNullException">The value of <paramref name="printTicket" /> is null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">The content of <paramref name="printTicket" /> is not well-formed.</exception>
      <exception cref="T:System.Printing.PrintQueueException">The conversion failed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="baseType" /> is not a valid <see cref="T:System.Printing.Interop.BaseDevModeType" /> value.-or-The <paramref name="scope" /> is not a valid <see cref="T:System.Printing.PrintTicketScope" /> value.</exception>
    </member>
    <member name="M:System.Printing.Interop.PrintTicketConverter.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.Printing.Interop.PrintTicketConverter" />. </summary>
    </member>
    <member name="P:System.Printing.Interop.PrintTicketConverter.MaxPrintSchemaVersion">
      <summary>Gets the maximum Print Schema version that <see cref="T:System.Printing.Interop.PrintTicketConverter" /> can support. </summary>
      <returns>The maximum Print Schema version that <see cref="T:System.Printing.Interop.PrintTicketConverter" /> can support.</returns>
    </member>
    <member name="M:System.Printing.Interop.PrintTicketConverter.System#IDisposable#Dispose">
      <summary>Releases all resources used by the current instance of the <see cref="T:System.Printing.Interop.PrintTicketConverter" /> class.</summary>
    </member>
    <member name="T:System.Windows.Xps.XpsException">
      <summary>Serves as the base class for exceptions that are thrown by the XML Paper Specification (XPS) packaging and serialization APIs. </summary>
    </member>
    <member name="M:System.Windows.Xps.XpsException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.XpsException" /> class. </summary>
    </member>
    <member name="M:System.Windows.Xps.XpsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.XpsException" /> class that provides specific <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" />. This constructor is protected.</summary>
      <param name="info">The data that is required to serialize or deserialize an object.</param>
      <param name="context">The context, which includes source and destination, of the serialized stream.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.XpsException" /> class that provides a specific error condition.</summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error condition.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.XpsException" /> class that provides a specific error condition and includes the cause of the exception. </summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error condition.</param>
      <param name="innerException">The underlying error that caused the <see cref="T:System.Windows.Xps.XpsException" />.</param>
    </member>
    <member name="T:System.Windows.Xps.XpsPackagingException">
      <summary>The exception that is thrown when reading, writing to, registering, or accessing in some other way an <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />. </summary>
    </member>
    <member name="M:System.Windows.Xps.XpsPackagingException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.XpsPackagingException" /> class. </summary>
    </member>
    <member name="M:System.Windows.Xps.XpsPackagingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.XpsPackagingException" /> class that provides specific <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" />. This constructor is protected.</summary>
      <param name="info">The data that is required to serialize or deserialize an object.</param>
      <param name="context">The context, which includes source and destination, of the serialized stream.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsPackagingException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.XpsPackagingException" /> class that provides a specific error condition. </summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error condition.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsPackagingException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.XpsPackagingException" /> class that provides a specific error condition and includes the cause of the exception. </summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error condition.</param>
      <param name="innerException">The underlying error that caused the <see cref="T:System.Windows.Xps.XpsPackagingException" />.</param>
    </member>
    <member name="T:System.Windows.Xps.XpsSerializationException">
      <summary>The exception that is thrown for XML Paper Specification (XPS) document serialization errors. </summary>
    </member>
    <member name="M:System.Windows.Xps.XpsSerializationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.XpsSerializationException" /> class. </summary>
    </member>
    <member name="M:System.Windows.Xps.XpsSerializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.XpsSerializationException" /> class that provides specific <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" />. This constructor is protected.</summary>
      <param name="info">The data that is required to serialize or deserialize an object.</param>
      <param name="context">The context, which includes the source and destination, of the serialized stream.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsSerializationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.XpsSerializationException" /> class that provides a specific error condition. </summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error condition.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsSerializationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.XpsSerializationException" /> class that provides a specific error condition and includes the cause of the exception. </summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error condition.</param>
      <param name="innerException">The underlying error that caused the exception.</param>
    </member>
    <member name="T:System.Windows.Xps.Packaging.IDocumentStructureProvider">
      <summary>Defines a method for adding the DocumentStructure part of XML Paper Specification (XPS) to an XPS package.</summary>
    </member>
    <member name="M:System.Windows.Xps.Packaging.IDocumentStructureProvider.AddDocumentStructure">
      <summary>Adds theDocumentStructure part of XML Paper Specification (XPS) to an XPS package.</summary>
      <returns>An <see cref="T:System.Windows.Xps.Packaging.XpsStructure" /> that represents the DocumentStructure part of an XPS package.</returns>
    </member>
    <member name="T:System.Windows.Xps.Packaging.IStoryFragmentProvider">
      <summary>Defines a method for adding the <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragments" /> part of the markup to an XPS package.</summary>
    </member>
    <member name="M:System.Windows.Xps.Packaging.IStoryFragmentProvider.AddStoryFragment">
      <summary>Adds a <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragments" /> element to an XPS package.</summary>
      <returns>An <see cref="T:System.Windows.Xps.Packaging.XpsStructure" /> that represents a <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragments" /> element in an XPS package.</returns>
    </member>
    <member name="T:System.Windows.Xps.Packaging.IXpsFixedDocumentReader">
      <summary>Defines methods for reading the parts of a <see cref="T:System.Windows.Documents.FixedDocument" /> and also for limited types of writing to the document.</summary>
    </member>
    <member name="M:System.Windows.Xps.Packaging.IXpsFixedDocumentReader.AddSignatureDefinition(System.Windows.Xps.Packaging.XpsSignatureDefinition)">
      <summary>Adds the specified <see cref="T:System.Windows.Xps.Packaging.XpsSignatureDefinition" /> to the <see cref="T:System.Windows.Documents.FixedDocument" />.</summary>
      <param name="signatureDefinition">The definition that is added.</param>
    </member>
    <member name="M:System.Windows.Xps.Packaging.IXpsFixedDocumentReader.CommitSignatureDefinition">
      <summary>Flushes the package <see cref="T:System.IO.Stream" /> and also commits an <see cref="T:System.Windows.Xps.Packaging.XpsSignatureDefinition" /> to the package.</summary>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedDocumentReader.DocumentNumber">
      <summary>Gets the zero-based position of the document in the <see cref="T:System.Windows.Documents.FixedDocumentSequence" />.</summary>
      <returns>An <see cref="T:System.Int32" /> that represents the document location in the sequence.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedDocumentReader.DocumentStructure">
      <summary>Gets the DocumentStructure part, if one exists, of the <see cref="T:System.Windows.Documents.FixedDocument" />.</summary>
      <returns>An <see cref="T:System.Windows.Xps.Packaging.XpsStructure" /> that represents the DocumentStructure element, if one exists, and its child elements. </returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedDocumentReader.FixedPages">
      <summary>Gets a collection of <see cref="T:System.Windows.Documents.FixedPage" /> readers, one reader for each page in the <see cref="T:System.Windows.Documents.FixedDocument" />.</summary>
      <returns>A collection of fixed page readers, one reader for each page in the <see cref="T:System.Windows.Documents.FixedDocument" />.</returns>
    </member>
    <member name="M:System.Windows.Xps.Packaging.IXpsFixedDocumentReader.GetFixedPage(System.Uri)">
      <summary>Gets a reader for the <see cref="T:System.Windows.Documents.FixedPage" /> with the specified uniform resource identifier (URI). </summary>
      <returns>An <see cref="T:System.Windows.Xps.Packaging.IXpsFixedPageReader" /> for the page. </returns>
      <param name="pageSource">The URI of the page.</param>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedDocumentReader.PrintTicket">
      <summary>Gets the <see cref="T:System.Printing.PrintTicket" />, if one exists, that is associated with the <see cref="T:System.Windows.Documents.FixedDocument" />.</summary>
      <returns>A <see cref="T:System.Printing.PrintTicket" /> that contains the default printing options for the document; or null if no print ticket exists for the document. </returns>
    </member>
    <member name="M:System.Windows.Xps.Packaging.IXpsFixedDocumentReader.RemoveSignatureDefinition(System.Windows.Xps.Packaging.XpsSignatureDefinition)">
      <summary>Removes the specified <see cref="T:System.Windows.Xps.Packaging.XpsSignatureDefinition" /> from the <see cref="T:System.Windows.Documents.FixedDocument" />.</summary>
      <param name="signatureDefinition">The definition that is removed.</param>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedDocumentReader.SignatureDefinitions">
      <summary>Gets a collection of all the signature definitions that are associated with the <see cref="T:System.Windows.Documents.FixedDocument" />. </summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> of signature definitions, typically one for every person who signed or will sign the document.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedDocumentReader.Thumbnail">
      <summary>Gets the thumbnail image, if a thumbnail exists, that is associated with the <see cref="T:System.Windows.Documents.FixedDocument" />.</summary>
      <returns>An <see cref="T:System.Windows.Xps.Packaging.XpsThumbnail" /> that represents the image. </returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedDocumentReader.Uri">
      <summary>Gets the uniform resource identifier (URI) of the <see cref="T:System.Windows.Documents.FixedDocument" />.</summary>
      <returns>A <see cref="T:System.Uri" /> that represents the URI for the document. </returns>
    </member>
    <member name="T:System.Windows.Xps.Packaging.IXpsFixedDocumentSequenceReader">
      <summary>Defines methods for reading the parts of a <see cref="T:System.Windows.Documents.FixedDocumentSequence" />.</summary>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedDocumentSequenceReader.FixedDocuments">
      <summary>Gets a collection of <see cref="T:System.Windows.Documents.FixedDocument" /> readers for each document in a <see cref="T:System.Windows.Documents.FixedDocumentSequence" />.</summary>
      <returns>A collection of <see cref="T:System.Windows.Documents.FixedDocument" /> readers, one for each document in a <see cref="T:System.Windows.Documents.FixedDocumentSequence" />.</returns>
    </member>
    <member name="M:System.Windows.Xps.Packaging.IXpsFixedDocumentSequenceReader.GetFixedDocument(System.Uri)">
      <summary>Gets a reader for the <see cref="T:System.Windows.Documents.FixedDocument" /> with the specified uniform resource identifier (URI). </summary>
      <param name="documentSource">The URI of the fixed document.</param>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedDocumentSequenceReader.PrintTicket">
      <summary>Gets the <see cref="T:System.Printing.PrintTicket" />, if one exists, that is associated with the <see cref="T:System.Windows.Documents.FixedDocument" />. </summary>
      <returns>A <see cref="T:System.Printing.PrintTicket" /> that contains the default printing options for the sequence; or null, if no print ticket exists for the document. </returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedDocumentSequenceReader.Thumbnail">
      <summary>Gets the thumbnail image, if one exists, that is associated with the <see cref="T:System.Windows.Documents.FixedDocumentSequence" />.</summary>
      <returns>An <see cref="T:System.Windows.Xps.Packaging.XpsThumbnail" /> that represents the image. </returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedDocumentSequenceReader.Uri">
      <summary>Gets the uniform resource identifier (URI) of the <see cref="T:System.Windows.Documents.FixedDocumentSequence" />.</summary>
      <returns>A <see cref="T:System.Uri" /> that represents the URI for the sequence.</returns>
    </member>
    <member name="T:System.Windows.Xps.Packaging.IXpsFixedDocumentSequenceWriter">
      <summary>Defines methods and properties for writing a <see cref="T:System.Windows.Documents.FixedDocumentSequence" />.</summary>
    </member>
    <member name="M:System.Windows.Xps.Packaging.IXpsFixedDocumentSequenceWriter.AddFixedDocument">
      <summary>Adds a new <see cref="T:System.Windows.Documents.FixedDocument" /> to the <see cref="T:System.Windows.Documents.FixedDocumentSequence" />.</summary>
      <returns>A writer for outputting the new <see cref="T:System.Windows.Documents.FixedDocument" />.</returns>
    </member>
    <member name="M:System.Windows.Xps.Packaging.IXpsFixedDocumentSequenceWriter.AddThumbnail(System.Windows.Xps.Packaging.XpsImageType)">
      <summary>Adds an <see cref="T:System.Windows.Xps.Packaging.XpsThumbnail" /> image for the <see cref="T:System.Windows.Documents.FixedDocumentSequence" />.</summary>
      <returns>The new <see cref="T:System.Windows.Xps.Packaging.XpsThumbnail" /> for the <see cref="T:System.Windows.Documents.FixedDocumentSequence" />.</returns>
      <param name="imageType">The image type to write. See Remarks for examples.</param>
    </member>
    <member name="M:System.Windows.Xps.Packaging.IXpsFixedDocumentSequenceWriter.Commit">
      <summary>Flushes and closes the <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> writer.</summary>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedDocumentSequenceWriter.PrintTicket">
      <summary>Sets a <see cref="T:System.Printing.PrintTicket" /> for the <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> that is being written.</summary>
      <returns>A <see cref="T:System.Printing.PrintTicket" /> that represents a default printing configuration for the sequence.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedDocumentSequenceWriter.Uri">
      <summary>Gets the URI of the <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> that is being written.</summary>
      <returns>The URI of the <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> that is being written.</returns>
    </member>
    <member name="T:System.Windows.Xps.Packaging.IXpsFixedDocumentWriter">
      <summary>Defines methods and properties for writing a <see cref="T:System.Windows.Documents.FixedDocument" />.</summary>
    </member>
    <member name="M:System.Windows.Xps.Packaging.IXpsFixedDocumentWriter.AddFixedPage">
      <summary>Adds a new <see cref="T:System.Windows.Documents.FixedPage" /> to the <see cref="T:System.Windows.Documents.FixedDocument" />.</summary>
      <returns>A writer for outputting the new <see cref="T:System.Windows.Documents.FixedPage" />.</returns>
    </member>
    <member name="M:System.Windows.Xps.Packaging.IXpsFixedDocumentWriter.AddThumbnail(System.Windows.Xps.Packaging.XpsImageType)">
      <summary>Adds an <see cref="T:System.Windows.Xps.Packaging.XpsThumbnail" /> image for the <see cref="T:System.Windows.Documents.FixedDocument" />.</summary>
      <returns>The new <see cref="T:System.Windows.Xps.Packaging.XpsThumbnail" /> for the <see cref="T:System.Windows.Documents.FixedDocument" />.</returns>
      <param name="imageType">The image type of the thumbnail to add.</param>
    </member>
    <member name="M:System.Windows.Xps.Packaging.IXpsFixedDocumentWriter.Commit">
      <summary>Flushes and closes the <see cref="T:System.Windows.Documents.FixedDocument" /> writer.</summary>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedDocumentWriter.DocumentNumber">
      <summary>Gets the zero-based position of the <see cref="T:System.Windows.Documents.FixedDocument" /> in the <see cref="T:System.Windows.Documents.FixedDocumentSequence" />.</summary>
      <returns>The zero-based position of the <see cref="T:System.Windows.Documents.FixedDocument" /> in the <see cref="T:System.Windows.Documents.FixedDocumentSequence" />.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedDocumentWriter.PrintTicket">
      <summary>Sets default print options for the <see cref="T:System.Windows.Documents.FixedDocument" />.</summary>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedDocumentWriter.Uri">
      <summary>Gets the URI of the <see cref="T:System.Windows.Documents.FixedDocument" />.</summary>
      <returns>The URI of the <see cref="T:System.Windows.Documents.FixedDocument" />.</returns>
    </member>
    <member name="T:System.Windows.Xps.Packaging.IXpsFixedPageReader">
      <summary>Defines methods for reading the parts of a <see cref="T:System.Windows.Documents.FixedPage" />.</summary>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedPageReader.ColorContexts">
      <summary>Gets a collection of all the color contexts on the page. </summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> that includes every <see cref="T:System.Windows.Xps.Packaging.XpsColorContext" /> that is on the page.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedPageReader.Fonts">
      <summary>Gets a collection of all the fonts that are used on the page.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> that includes every <see cref="T:System.Windows.Xps.Packaging.XpsFont" /> that is on the page.</returns>
    </member>
    <member name="M:System.Windows.Xps.Packaging.IXpsFixedPageReader.GetColorContext(System.Uri)">
      <summary>Gets the color context for the resource that has the specified uniform resource identifier (URI).</summary>
      <returns>An <see cref="T:System.Windows.Xps.Packaging.XpsColorContext" /> for the resource.</returns>
      <param name="uri">The URI of the resource.</param>
    </member>
    <member name="M:System.Windows.Xps.Packaging.IXpsFixedPageReader.GetFont(System.Uri)">
      <summary>Gets the font that has the specified uniform resource identifier (URI).</summary>
      <returns>An <see cref="T:System.Windows.Xps.Packaging.XpsFont" />.</returns>
      <param name="uri">The URI of the font.</param>
    </member>
    <member name="M:System.Windows.Xps.Packaging.IXpsFixedPageReader.GetImage(System.Uri)">
      <summary>Gets the image that has the specified uniform resource identifier (URI).</summary>
      <returns>An <see cref="T:System.Windows.Xps.Packaging.XpsImage" />.</returns>
      <param name="uri">The URI of the image.</param>
    </member>
    <member name="M:System.Windows.Xps.Packaging.IXpsFixedPageReader.GetResource(System.Uri)">
      <summary>Gets the resource that has the specified uniform resource identifier (URI).</summary>
      <returns>An <see cref="T:System.Windows.Xps.Packaging.XpsResource" />.</returns>
      <param name="resourceUri">The URI of the resource.</param>
    </member>
    <member name="M:System.Windows.Xps.Packaging.IXpsFixedPageReader.GetResourceDictionary(System.Uri)">
      <summary>Gets the resource dictionary that has the specified uniform resource identifier (URI).</summary>
      <returns>An <see cref="T:System.Windows.Xps.Packaging.XpsResourceDictionary" />.</returns>
      <param name="uri">The URI of the resource dictionary.</param>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedPageReader.Images">
      <summary>Gets a collection of all the images on the page.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> that includes every <see cref="T:System.Windows.Xps.Packaging.XpsImage" /> that is on the page.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedPageReader.PageNumber">
      <summary>Gets the page number.</summary>
      <returns>An <see cref="T:System.Int32" /> that represents the page number.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedPageReader.PrintTicket">
      <summary>Gets the <see cref="T:System.Printing.PrintTicket" />, if a ticket exists, that is associated with the <see cref="T:System.Windows.Documents.FixedPage" />.</summary>
      <returns>A <see cref="T:System.Printing.PrintTicket" /> that contains the default printing options for the page; or null if no <see cref="T:System.Printing.PrintTicket" /> exists for the page.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedPageReader.ResourceDictionaries">
      <summary>Gets a collection of all the resource dictionaries for the page.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> of <see cref="T:System.Windows.Xps.Packaging.XpsResourceDictionary" /> objects.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedPageReader.StoryFragment">
      <summary>Gets the <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragments" /> part of the markup of an XPS package.</summary>
      <returns>An <see cref="T:System.Windows.Xps.Packaging.XpsStructure" /> that represents a <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragments" /> element in an XPS package.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedPageReader.Thumbnail">
      <summary>Gets the thumbnail image, if a thumbnail exists, that is associated with the <see cref="T:System.Windows.Documents.FixedPage" />.</summary>
      <returns>An <see cref="T:System.Windows.Xps.Packaging.XpsThumbnail" /> that represents the image.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedPageReader.Uri">
      <summary>Gets the uniform resource identifier (URI) of the <see cref="T:System.Windows.Documents.FixedPage" />.</summary>
      <returns>A <see cref="T:System.Uri" /> that represents the URI for the page.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedPageReader.XmlReader">
      <summary>Gets an <see cref="T:System.Xml.XmlReader" /> for the page.</summary>
      <returns>An <see cref="T:System.Xml.XmlReader" /> for the page.</returns>
    </member>
    <member name="T:System.Windows.Xps.Packaging.IXpsFixedPageWriter">
      <summary>Defines methods for writing <see cref="T:System.Windows.Documents.FixedPage" /> parts to an XPS document.</summary>
    </member>
    <member name="M:System.Windows.Xps.Packaging.IXpsFixedPageWriter.AddColorContext">
      <summary>Adds a new <see cref="T:System.Windows.Xps.Packaging.XpsColorContext" /> to the current page.</summary>
      <returns>The new color context resource that was added.</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="M:System.IDisposable.Dispose" /> has been called.</exception>
    </member>
    <member name="M:System.Windows.Xps.Packaging.IXpsFixedPageWriter.AddFont">
      <summary>Adds a new <see cref="T:System.Windows.Xps.Packaging.XpsFont" /> to the current page.</summary>
      <returns>The new font resource that was added.</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="M:System.IDisposable.Dispose" /> has been called.</exception>
    </member>
    <member name="M:System.Windows.Xps.Packaging.IXpsFixedPageWriter.AddFont(System.Boolean)">
      <summary>Adds a new obfuscated <see cref="T:System.Windows.Xps.Packaging.XpsFont" /> to the current page.</summary>
      <returns>The new font resource that was added.</returns>
      <param name="obfuscate">true to obfuscate the font; otherwise, false.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="M:System.IDisposable.Dispose" /> has been called.</exception>
    </member>
    <member name="M:System.Windows.Xps.Packaging.IXpsFixedPageWriter.AddFont(System.Boolean,System.Boolean)">
      <summary>Adds a new obfuscated or restricted <see cref="T:System.Windows.Xps.Packaging.XpsFont" /> to the current page.</summary>
      <returns>The new font resource that was added.</returns>
      <param name="obfuscate">true to obfuscate the font; otherwise, false.</param>
      <param name="addRestrictedRelationship">true to prevent modification of any text that uses the font; otherwise, false.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="M:System.IDisposable.Dispose" /> has been called.</exception>
    </member>
    <member name="M:System.Windows.Xps.Packaging.IXpsFixedPageWriter.AddImage(System.String)">
      <summary>Adds a new <see cref="T:System.Windows.Xps.Packaging.XpsImage" /> with a specified MIME type to the current page.</summary>
      <returns>The new image resource that was added to the page</returns>
      <param name="mimeType">The MIME type of the image to add.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="M:System.IDisposable.Dispose" /> has been called.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="mimeType" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mimeType" /> is an empty string.</exception>
    </member>
    <member name="M:System.Windows.Xps.Packaging.IXpsFixedPageWriter.AddImage(System.Windows.Xps.Packaging.XpsImageType)">
      <summary>Adds a new <see cref="T:System.Windows.Xps.Packaging.XpsImage" /> with a specified <see cref="T:System.Windows.Xps.Packaging.XpsImageType" /> to the current page.</summary>
      <returns>The new image resource that was added to the page</returns>
      <param name="imageType">The type of image to add to the page.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="M:System.IDisposable.Dispose" /> has been called.</exception>
    </member>
    <member name="M:System.Windows.Xps.Packaging.IXpsFixedPageWriter.AddResource(System.Type,System.Uri)">
      <summary>Adds a new <see cref="T:System.Windows.Xps.Packaging.XpsResource" /> to the current page.</summary>
      <returns>The new XML Paper Specification (XPS) resource that was added.</returns>
      <param name="resourceType">The type of resource to add.</param>
      <param name="resourceUri">The absolute path of the resource to add, or null.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceType" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="M:System.IDisposable.Dispose" /> has been called.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="resourceType" /> is an empty string.</exception>
    </member>
    <member name="M:System.Windows.Xps.Packaging.IXpsFixedPageWriter.AddResourceDictionary">
      <summary>Adds a <see cref="T:System.Windows.Xps.Packaging.XpsResourceDictionary" /> to the page.</summary>
      <returns>The <see cref="T:System.Windows.Xps.Packaging.XpsResourceDictionary" /> that was added to the page.</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="M:System.IDisposable.Dispose" /> has been called.</exception>
    </member>
    <member name="M:System.Windows.Xps.Packaging.IXpsFixedPageWriter.AddThumbnail(System.Windows.Xps.Packaging.XpsImageType)">
      <summary>Adds a thumbnail image of a specified <see cref="T:System.Windows.Xps.Packaging.XpsImageType" /> to the current page.</summary>
      <returns>The new thumbnail image resource that was added.</returns>
      <param name="imageType">The image type of the thumbnail image to add to the page.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Xps.Packaging.IXpsFixedPageWriter.AddThumbnail(System.Windows.Xps.Packaging.XpsImageType)" /> has already been called to add an image thumbnail for this page.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="M:System.IDisposable.Dispose" /> has been called.</exception>
    </member>
    <member name="M:System.Windows.Xps.Packaging.IXpsFixedPageWriter.Commit">
      <summary>Flushes and closes the fixed-page writer.</summary>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedPageWriter.LinkTargetStream">
      <summary>Gets a list of strings that identify the <see cref="T:System.Windows.Documents.LinkTarget" /> hyperlink points that are contained in the current page.</summary>
      <returns>A list of strings that identify the <see cref="T:System.Windows.Documents.LinkTarget" /> hyperlink points that are contained in the page.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedPageWriter.PageNumber">
      <summary>Gets the zero-based page number of this page.</summary>
      <returns>The zero-based page number of this page.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedPageWriter.PrintTicket">
      <summary>Sets the default printing options for the page.</summary>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedPageWriter.Uri">
      <summary>Gets the URI of the fixed page.</summary>
      <returns>The URI of the fixed page.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.IXpsFixedPageWriter.XmlWriter">
      <summary>Gets an <see cref="T:System.Xml.XmlWriter" /> for writing XML markup to the page. </summary>
      <returns>The <see cref="T:System.Xml.XmlWriter" /> for writing XML markup to the page.</returns>
    </member>
    <member name="T:System.Windows.Xps.Packaging.PackageInterleavingOrder">
      <summary>Provides values that specify the order in which the major parts of a package are streamed.</summary>
    </member>
    <member name="F:System.Windows.Xps.Packaging.PackageInterleavingOrder.None">
      <summary>The streaming order is specified by the packaging system.</summary>
    </member>
    <member name="F:System.Windows.Xps.Packaging.PackageInterleavingOrder.ResourceFirst">
      <summary>The streaming order is: resource, page, document, and document sequence. </summary>
    </member>
    <member name="F:System.Windows.Xps.Packaging.PackageInterleavingOrder.ResourceLast">
      <summary>The streaming order is: document sequence, document, page, and resource.</summary>
    </member>
    <member name="F:System.Windows.Xps.Packaging.PackageInterleavingOrder.ImagesLast">
      <summary>The streaming order is: resource (other than images), page, document, document sequence, and images.</summary>
    </member>
    <member name="T:System.Windows.Xps.Packaging.PackagingAction">
      <summary>Identifies the types of events that occur during the serialization of a package.</summary>
    </member>
    <member name="F:System.Windows.Xps.Packaging.PackagingAction.None">
      <summary>No action has been taken.</summary>
    </member>
    <member name="F:System.Windows.Xps.Packaging.PackagingAction.AddingDocumentSequence">
      <summary>A document sequence is being added.</summary>
    </member>
    <member name="F:System.Windows.Xps.Packaging.PackagingAction.DocumentSequenceCompleted">
      <summary>A document sequence has been added, but not necessarily committed.</summary>
    </member>
    <member name="F:System.Windows.Xps.Packaging.PackagingAction.AddingFixedDocument">
      <summary>A document is being added.</summary>
    </member>
    <member name="F:System.Windows.Xps.Packaging.PackagingAction.FixedDocumentCompleted">
      <summary>A document has been added, but not necessarily committed.</summary>
    </member>
    <member name="F:System.Windows.Xps.Packaging.PackagingAction.AddingFixedPage">
      <summary>A page is being added.</summary>
    </member>
    <member name="F:System.Windows.Xps.Packaging.PackagingAction.FixedPageCompleted">
      <summary>A page has been added, but not necessarily committed.</summary>
    </member>
    <member name="F:System.Windows.Xps.Packaging.PackagingAction.ResourceAdded">
      <summary>A resource has been added, but not necessarily committed.</summary>
    </member>
    <member name="F:System.Windows.Xps.Packaging.PackagingAction.FontAdded">
      <summary>A font has been added, but not necessarily committed.</summary>
    </member>
    <member name="F:System.Windows.Xps.Packaging.PackagingAction.ImageAdded">
      <summary>An image has been added, but not necessarily committed.</summary>
    </member>
    <member name="F:System.Windows.Xps.Packaging.PackagingAction.XpsDocumentCommitted">
      <summary>The document is committed.</summary>
    </member>
    <member name="T:System.Windows.Xps.Packaging.PackagingProgressEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Xps.Serialization.XpsPackagingPolicy.PackagingProgressEvent" /> event. </summary>
    </member>
    <member name="M:System.Windows.Xps.Packaging.PackagingProgressEventArgs.#ctor(System.Windows.Xps.Packaging.PackagingAction,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.Packaging.PackagingProgressEventArgs" /> class. </summary>
      <param name="action">The action that the packaging process is currently performing.</param>
      <param name="numberCompleted">The number of simultaneous times that the specified <paramref name="action" /> occurred. </param>
    </member>
    <member name="P:System.Windows.Xps.Packaging.PackagingProgressEventArgs.Action">
      <summary>Gets a value that indicates what action is currently occurring in the packaging process. </summary>
      <returns>A <see cref="T:System.Windows.Xps.Packaging.PackagingAction" /> that represents the part of the packaging process that is currently occurring.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.PackagingProgressEventArgs.NumberCompleted">
      <summary>Gets the number of simultaneous times that the action that is identified in <see cref="P:System.Windows.Xps.Packaging.PackagingProgressEventArgs.Action" /> has occurred. </summary>
      <returns>An <see cref="T:System.Int32" /> that represents the number of simultaneous times that the action that is identified in <see cref="P:System.Windows.Xps.Packaging.PackagingProgressEventArgs.Action" /> has occurred. </returns>
    </member>
    <member name="T:System.Windows.Xps.Packaging.PackagingProgressEventHandler">
      <summary>Represents the method that handles the <see cref="E:System.Windows.Xps.Serialization.XpsPackagingPolicy.PackagingProgressEvent" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Xps.Packaging.SpotLocation">
      <summary>Represents the location to display a digital signature on an <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />.</summary>
    </member>
    <member name="M:System.Windows.Xps.Packaging.SpotLocation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.Packaging.SpotLocation" /> class. </summary>
    </member>
    <member name="P:System.Windows.Xps.Packaging.SpotLocation.PageUri">
      <summary>Gets or sets the URI of the page on which to display the digital signature.</summary>
      <returns>The URI of the page on which to display the signature.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.SpotLocation.StartX">
      <summary>Gets or sets the X page coordinate for the digital signature.</summary>
      <returns>The X page coordinate for the digital signature.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.SpotLocation.StartY">
      <summary>Gets or sets the Y page coordinate for the digital signature.</summary>
      <returns>The Y page coordinate for the digital signature.</returns>
    </member>
    <member name="T:System.Windows.Xps.Packaging.XpsColorContext">
      <summary>Represents the color context for a bitmap image. </summary>
    </member>
    <member name="T:System.Windows.Xps.Packaging.XpsDigitalSignature">
      <summary>Represents a digital signature for an <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />. </summary>
    </member>
    <member name="M:System.Windows.Xps.Packaging.XpsDigitalSignature.#ctor(System.IO.Packaging.PackageDigitalSignature,System.Windows.Xps.Packaging.XpsDocument)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.Packaging.XpsDigitalSignature" /> class.</summary>
      <param name="packageSignature">The associated digital signature for the package.</param>
      <param name="package">The associated package.</param>
    </member>
    <member name="P:System.Windows.Xps.Packaging.XpsDigitalSignature.DocumentPropertiesRestricted">
      <summary>Gets a value that indicates whether changing the properties of the document invalidates the digital signature. </summary>
      <returns>true if changing the properties of the document invalidates the signature; otherwise, false. </returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.XpsDigitalSignature.Id">
      <summary>Gets the GUID of the signature.</summary>
      <returns>The globally unique identifier (GUID) of the signature.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.XpsDigitalSignature.IsCertificateAvailable">
      <summary>Gets a value that indicates whether the signer's X.509 certificate is contained in the document <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>true if the X.509 certificate of the signer is embedded in the document <see cref="T:System.IO.Packaging.Package" />; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.XpsDigitalSignature.SignatureOriginRestricted">
      <summary>Gets a value that indicates whether the digital signature is invalidated if someone else signs the package.</summary>
      <returns>true if the signature is invalidated if an additional digital signature is applied; otherwise, false. </returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.XpsDigitalSignature.SignatureType">
      <summary>Gets a URL string that identifies the signature type.</summary>
      <returns>A URL string that identifies the signature type. The default signature type is <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.XpsDigitalSignature.SignatureValue">
      <summary>Gets the encrypted hash value of the signature.</summary>
      <returns>A <see cref="T:System.Byte" /> array that contains the encrypted hash value of the signature.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.XpsDigitalSignature.SignedDocumentSequence">
      <summary>Gets the document sequence reader for the signed document sequence.</summary>
      <returns>An <see cref="T:System.Windows.Xps.Packaging.IXpsFixedDocumentSequenceReader" />; or null if not all valid XPS parts have been signed in the document.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.XpsDigitalSignature.SignerCertificate">
      <summary>Gets the X.509 certificate of the signer.</summary>
      <returns>The X.509 certificate of the signer; or null when there is no certificate embedded in the document package.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.XpsDigitalSignature.SigningTime">
      <summary>Gets the date and time when the signature was created.</summary>
      <returns>The date and time when the pages, document, or document sequence was signed.</returns>
    </member>
    <member name="M:System.Windows.Xps.Packaging.XpsDigitalSignature.Verify">
      <summary>Verifies the document digital signature against the X.509 certificate embedded in the XPS <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>One of the <see cref="T:System.IO.Packaging.VerifyResult" /> enumeration values that specify the result of the verification attempt.</returns>
    </member>
    <member name="M:System.Windows.Xps.Packaging.XpsDigitalSignature.Verify(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Verifies the document digital signature against a specified X.509 certificate.</summary>
      <returns>One of the <see cref="T:System.IO.Packaging.VerifyResult" /> enumeration values that specify the result of the verification attempt.</returns>
      <param name="certificate">The certificate of authenticity for the signer.</param>
    </member>
    <member name="M:System.Windows.Xps.Packaging.XpsDigitalSignature.VerifyCertificate">
      <summary>Verifies the X.509 certificate embedded in the package.</summary>
      <returns>A bitwise combination of the enumeration values that specify the result of the verification attempt.</returns>
    </member>
    <member name="M:System.Windows.Xps.Packaging.XpsDigitalSignature.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Verifies the specified X.509 certificate.</summary>
      <returns>A bitwise combination of the enumeration values that specify the result of the verification attempt.</returns>
      <param name="certificate">A certificate of authenticity.</param>
    </member>
    <member name="T:System.Windows.Xps.Packaging.XpsDigSigPartAlteringRestrictions">
      <summary>Specifies the parts of the XPS <see cref="T:System.IO.Packaging.Package" /> that are excluded from the range of a digital signature.</summary>
    </member>
    <member name="F:System.Windows.Xps.Packaging.XpsDigSigPartAlteringRestrictions.None">
      <summary>No parts are excluded.</summary>
    </member>
    <member name="F:System.Windows.Xps.Packaging.XpsDigSigPartAlteringRestrictions.CoreMetadata">
      <summary>The Core Properties part is excluded.</summary>
    </member>
    <member name="F:System.Windows.Xps.Packaging.XpsDigSigPartAlteringRestrictions.Annotations">
      <summary>The Annotations part is excluded.</summary>
    </member>
    <member name="F:System.Windows.Xps.Packaging.XpsDigSigPartAlteringRestrictions.SignatureOrigin">
      <summary>The Signature Origin part is excluded.</summary>
    </member>
    <member name="T:System.Windows.Xps.Packaging.XpsDocument">
      <summary>Provides a <see cref="T:System.IO.Packaging.Package" /> that holds the content of an XPS document.</summary>
    </member>
    <member name="M:System.Windows.Xps.Packaging.XpsDocument.#ctor(System.IO.Packaging.Package)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> class with access to a specified XML Paper Specification (XPS) <see cref="T:System.IO.Packaging.Package" /> and default interleaving, resource, and compression options. </summary>
      <param name="package">The target XPS package for the <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />.</param>
    </member>
    <member name="M:System.Windows.Xps.Packaging.XpsDocument.#ctor(System.IO.Packaging.Package,System.IO.Packaging.CompressionOption)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> class that is contained in a specified <see cref="T:System.IO.Packaging.Package" /> with specified default interleaving, resource, and compression options. </summary>
      <param name="package">The target package for the <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />.</param>
      <param name="compressionOption">The package compression option.</param>
    </member>
    <member name="M:System.Windows.Xps.Packaging.XpsDocument.#ctor(System.IO.Packaging.Package,System.IO.Packaging.CompressionOption,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> class that is contained in a specified <see cref="T:System.IO.Packaging.Package" /> with the specified default interleaving, resource, and compression options. </summary>
      <param name="package">The target package for the <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />.</param>
      <param name="compressionOption">The package compression option.</param>
      <param name="path">The uniform resource identifier (URI) for the document as a string.</param>
    </member>
    <member name="M:System.Windows.Xps.Packaging.XpsDocument.#ctor(System.String,System.IO.FileAccess)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> class that is contained in a specified <see cref="T:System.IO.Packaging.Package" /> file with default interleaving, resource, and compression options. </summary>
      <param name="path">The path and file name of the target <see cref="T:System.IO.Packaging.Package" /> for the <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />.</param>
      <param name="packageAccess">The file I/O mode in which to open the <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />.</param>
    </member>
    <member name="M:System.Windows.Xps.Packaging.XpsDocument.#ctor(System.String,System.IO.FileAccess,System.IO.Packaging.CompressionOption)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> class that is contained in a specified <see cref="T:System.IO.Packaging.Package" /> file with default interleaving, resource, and compression options. </summary>
      <param name="path">The path and file name of the target <see cref="T:System.IO.Packaging.Package" /> for the <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />.</param>
      <param name="packageAccess">The file I/O mode in which to open the <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />.</param>
      <param name="compressionOption">The package compression option.</param>
    </member>
    <member name="M:System.Windows.Xps.Packaging.XpsDocument.AddFixedDocumentSequence">
      <summary>Adds a root <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> to the package and returns a writer.</summary>
      <returns>The XML Paper Specification (XPS) fixed-document sequence writer for this <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />.</returns>
    </member>
    <member name="M:System.Windows.Xps.Packaging.XpsDocument.AddThumbnail(System.Windows.Xps.Packaging.XpsImageType)">
      <summary>Adds a thumbnail image to the package. </summary>
      <returns>The newly added <see cref="T:System.Windows.Xps.Packaging.XpsThumbnail" />. </returns>
      <param name="imageType">The format of the image.</param>
    </member>
    <member name="M:System.Windows.Xps.Packaging.XpsDocument.Close">
      <summary>Closes the XPS document <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="P:System.Windows.Xps.Packaging.XpsDocument.CoreDocumentProperties">
      <summary>Gets the core <see cref="T:System.IO.Packaging.PackageProperties" /> of the XPS document.</summary>
      <returns>The core properties of the <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="M:System.Windows.Xps.Packaging.XpsDocument.CreateXpsDocumentWriter(System.Windows.Xps.Packaging.XpsDocument)">
      <summary>Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> for writing an <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />.</summary>
      <returns>The <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> to use for writing the XML Paper Specification (XPS) document.</returns>
      <param name="xpsDocument">The XPS document to write. </param>
    </member>
    <member name="M:System.Windows.Xps.Packaging.XpsDocument.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> and optionally, releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="P:System.Windows.Xps.Packaging.XpsDocument.FixedDocumentSequenceReader">
      <summary>Gets an <see cref="T:System.Windows.Xps.Packaging.IXpsFixedDocumentSequenceReader" /> for reading the document.</summary>
      <returns>An <see cref="T:System.Windows.Xps.Packaging.IXpsFixedDocumentSequenceReader" /> for reading the document.</returns>
    </member>
    <member name="M:System.Windows.Xps.Packaging.XpsDocument.GetFixedDocumentSequence">
      <summary>Returns the fixed-document sequence at the root of the package.</summary>
      <returns>The <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> of the package. </returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.XpsDocument.IsReader">
      <summary>Gets a value that indicates whether the package is readable.</summary>
      <returns>true if the package is readable; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.XpsDocument.IsSignable">
      <summary>Gets a value that indicates whether the package can be digitally signed.</summary>
      <returns>true if the package can be signed; otherwise, false. </returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.XpsDocument.IsWriter">
      <summary>Gets a value that indicates whether the package is writable. </summary>
      <returns>true if the package is writable; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Xps.Packaging.XpsDocument.RemoveSignature(System.Windows.Xps.Packaging.XpsDigitalSignature)">
      <summary>Deletes a signature from the package.</summary>
      <param name="signature">The signature that is deleted.</param>
    </member>
    <member name="P:System.Windows.Xps.Packaging.XpsDocument.Signatures">
      <summary>Gets a collection of XML Paper Specification (XPS) signatures that are associated with the package. </summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Windows.Xps.Packaging.XpsDigitalSignature" /> objects that represent the signatures that are associated with the package.</returns>
    </member>
    <member name="M:System.Windows.Xps.Packaging.XpsDocument.SignDigitally(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Windows.Xps.Packaging.XpsDigSigPartAlteringRestrictions)">
      <summary>Signs a collection of package parts with a specified X.509 certificate.</summary>
      <returns>An <see cref="T:System.Windows.Xps.Packaging.XpsDigitalSignature" /> that contains information about the signature.</returns>
      <param name="certificate">The X.509 certificate to use in signing each part; or null to prompt the user to select an installed certificate.</param>
      <param name="embedCertificate">true to store the certificate in the package; otherwise, false.</param>
      <param name="restrictions">Flags that indicate what dependent parts must be excluded from the signing.</param>
    </member>
    <member name="M:System.Windows.Xps.Packaging.XpsDocument.SignDigitally(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Windows.Xps.Packaging.XpsDigSigPartAlteringRestrictions,System.Guid)">
      <summary>Signs a collection of package parts by using a specified X.509 certificate.</summary>
      <returns>An <see cref="T:System.Windows.Xps.Packaging.XpsDigitalSignature" /> that contains information about the signature.</returns>
      <param name="certificate">The X.509 certificate to use in signing each part; or null to prompt the user to select an installed certificate.</param>
      <param name="embedCertificate">true to store the certificate in the package; otherwise, false.</param>
      <param name="restrictions">Flags that indicate what dependent parts are excluded from the signing.</param>
      <param name="id">The ID to assign to the signature.</param>
    </member>
    <member name="M:System.Windows.Xps.Packaging.XpsDocument.SignDigitally(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Windows.Xps.Packaging.XpsDigSigPartAlteringRestrictions,System.Guid,System.Boolean)">
      <summary>Signs a collection of package parts with a specified X.509 certificate.</summary>
      <returns>An <see cref="T:System.Windows.Xps.Packaging.XpsDigitalSignature" /> that contains information about the signature.</returns>
      <param name="certificate">The X.509 certificate to use in signing each part; or null to prompt the user to select an installed certificate.</param>
      <param name="embedCertificate">true to store the certificate in the package; otherwise, false.</param>
      <param name="restrictions">Flags that indicate what dependent parts to exclude from the signing.</param>
      <param name="id">The ID to assign to the signature.</param>
      <param name="testIsSignable">true to verify that <see cref="P:System.Windows.Xps.Packaging.XpsDocument.IsSignable" /> is true before signing; otherwise, false.</param>
    </member>
    <member name="M:System.Windows.Xps.Packaging.XpsDocument.System#IDisposable#Dispose">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. Use the type-safe <see cref="M:System.Windows.Xps.Packaging.XpsDocument.Dispose(System.Boolean)" /> method instead. </summary>
    </member>
    <member name="P:System.Windows.Xps.Packaging.XpsDocument.Thumbnail">
      <summary>Gets or sets the XML Paper Specification (XPS) thumbnail image that is associated with the document. </summary>
      <returns>An <see cref="T:System.Windows.Xps.Packaging.XpsThumbnail" /> that represents the thumbnail image that is associated with the document. </returns>
    </member>
    <member name="T:System.Windows.Xps.Packaging.XpsFont">
      <summary>Represents a font in an <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />.</summary>
    </member>
    <member name="P:System.Windows.Xps.Packaging.XpsFont.IsObfuscated">
      <summary>Gets a value that indicates whether the font is obfuscated.</summary>
      <returns>true if the font is obfuscated; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.XpsFont.IsRestricted">
      <summary>Gets or sets a value that indicates whether text that uses this font can be modified.</summary>
      <returns>true if text that uses this font can be changed or edited; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Xps.Packaging.XpsFont.ObfuscateFontData(System.Byte[],System.Guid)">
      <summary>Obfuscates the font typeface data.</summary>
      <param name="fontData">The typeface data to obfuscate.</param>
      <param name="guid">The globally unique identifier (GUID) to use to obfuscate the <paramref name="fontdata" />.</param>
    </member>
    <member name="T:System.Windows.Xps.Packaging.XpsImage">
      <summary>Represents an image in an <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />.</summary>
    </member>
    <member name="T:System.Windows.Xps.Packaging.XpsImageType">
      <summary>Specifies graphical formats for images that can be included in an <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />.</summary>
    </member>
    <member name="F:System.Windows.Xps.Packaging.XpsImageType.PngImageType">
      <summary>PNG</summary>
    </member>
    <member name="F:System.Windows.Xps.Packaging.XpsImageType.JpegImageType">
      <summary>JPEG</summary>
    </member>
    <member name="F:System.Windows.Xps.Packaging.XpsImageType.TiffImageType">
      <summary>TIFF</summary>
    </member>
    <member name="F:System.Windows.Xps.Packaging.XpsImageType.WdpImageType">
      <summary>WDP</summary>
    </member>
    <member name="T:System.Windows.Xps.Packaging.XpsPartBase">
      <summary>Defines the abstract class that is the parent for all part classes that can be contained in an XPS package. </summary>
    </member>
    <member name="P:System.Windows.Xps.Packaging.XpsPartBase.Uri">
      <summary>Gets or sets the uniform resource identifier (URI) of the part.</summary>
      <returns>The <see cref="T:System.Uri" /> for the part.</returns>
    </member>
    <member name="T:System.Windows.Xps.Packaging.XpsResource">
      <summary>Defines the base class for resources that can be added to an <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />. </summary>
    </member>
    <member name="M:System.Windows.Xps.Packaging.XpsResource.Commit">
      <summary>Commits all changes and flushes the resource to the document package.</summary>
    </member>
    <member name="M:System.Windows.Xps.Packaging.XpsResource.GetStream">
      <summary>When overridden in a derived class, returns the I/O stream for reading or writing the resource.  </summary>
      <returns>The <see cref="T:System.IO.Stream" /> for reading or writing the resource.</returns>
    </member>
    <member name="M:System.Windows.Xps.Packaging.XpsResource.RelativeUri(System.Uri)">
      <summary>Returns the URI of the resource that is relative to a specified absolute URI.</summary>
      <returns>The <see cref="T:System.Uri" /> of the resource that is relative to the specified absolute <paramref name="inUri" />.</returns>
      <param name="inUri">A starting absolute URI.</param>
    </member>
    <member name="M:System.Windows.Xps.Packaging.XpsResource.System#IDisposable#Dispose">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
    </member>
    <member name="T:System.Windows.Xps.Packaging.XpsResourceDictionary">
      <summary>Represents a dictionary of <see cref="T:System.Windows.Xps.Packaging.XpsResource" /> elements that are usable across pages of the <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />. </summary>
    </member>
    <member name="T:System.Windows.Xps.Packaging.XpsResourceSharing">
      <summary>Specifies whether resources can be shared between pages and documents in an <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />. </summary>
    </member>
    <member name="F:System.Windows.Xps.Packaging.XpsResourceSharing.ShareResources">
      <summary>The resources can be shared. </summary>
    </member>
    <member name="F:System.Windows.Xps.Packaging.XpsResourceSharing.NoResourceSharing">
      <summary>The resources can not be shared. </summary>
    </member>
    <member name="T:System.Windows.Xps.Packaging.XpsSignatureDefinition">
      <summary>Represents an <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> digital signature.</summary>
    </member>
    <member name="M:System.Windows.Xps.Packaging.XpsSignatureDefinition.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.Packaging.XpsSignatureDefinition" /> class. </summary>
    </member>
    <member name="P:System.Windows.Xps.Packaging.XpsSignatureDefinition.Culture">
      <summary>Gets or sets the <see cref="T:System.Globalization.CultureInfo" /> of the signature.</summary>
      <returns>The cultural information of the signature.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.XpsSignatureDefinition.HasBeenModified">
      <summary>Gets or sets a value that indicates whether unwritten property changes exist for the <see cref="T:System.Windows.Xps.Packaging.XpsSignatureDefinition" /> class and must be written to the package's stream. </summary>
      <returns>true if uncommitted changes exist; otherwise, false. </returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.XpsSignatureDefinition.Intent">
      <summary>Gets or sets the string value of the signature intention agreement that the signer is signing against. </summary>
      <returns>A <see cref="T:System.String" /> that represents the intention agreement; for example, "I have read and agree." The default value is null.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.XpsSignatureDefinition.RequestedSigner">
      <summary>Gets or sets the identity of the person who is requested to sign (or has signed) the package. </summary>
      <returns>A <see cref="T:System.String" /> that represents the signer, for example, "Mary Jones, Marketing Dept." The default value is null.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.XpsSignatureDefinition.SignBy">
      <summary>Gets or sets the date and time by which the requested signer must sign the parts of the specified document. </summary>
      <returns>A (<see cref="T:System.Nullable" />) <see cref="T:System.DateTime" /> that represents the deadline by which the signer must sign the package. The default value is null.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.XpsSignatureDefinition.SigningLocale">
      <summary>Gets or sets the legal jurisdiction where the package is signed. </summary>
      <returns>A <see cref="T:System.String" /> that represents the jurisdiction, for example, "State of Utah, United States." The default value is null.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.XpsSignatureDefinition.SpotId">
      <summary>Gets or sets a unique identifier for this <see cref="T:System.Windows.Xps.Packaging.XpsSignatureDefinition" />. </summary>
      <returns>A (<see cref="T:System.Nullable" />) <see cref="T:System.Guid" /> that represents the ID of the signature definition. The default value is null.</returns>
    </member>
    <member name="P:System.Windows.Xps.Packaging.XpsSignatureDefinition.SpotLocation">
      <summary>Gets or sets the location that specifies where to display the visible digital signature in an XML Paper Specification (XPS) document.</summary>
      <returns>A <see cref="T:System.Windows.Xps.Packaging.SpotLocation" /> that represents the location in the package where a visible request for a signature appears. The default value is null.</returns>
    </member>
    <member name="T:System.Windows.Xps.Packaging.XpsStructure">
      <summary>Represents the <see cref="N:System.Windows.Documents.DocumentStructures" /> or <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragments" /> element of an <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />.</summary>
    </member>
    <member name="T:System.Windows.Xps.Packaging.XpsThumbnail">
      <summary>Represents a thumbnail image of a document sequence, single document, or single page.</summary>
    </member>
    <member name="T:System.Windows.Xps.Serialization.BasePackagingPolicy">
      <summary>Defines the base class for XPS package serialization policies. This class is abstract.</summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.BasePackagingPolicy.#ctor">
      <summary>When overridden in a derived class, initializes a new instance of the <see cref="T:System.Windows.Xps.Serialization.BasePackagingPolicy" /> class.</summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.BasePackagingPolicy.AcquireResourceStreamForXpsColorContext(System.String)">
      <summary>When overridden in a derived class, acquires a resource stream for an <see cref="T:System.Windows.Xps.Packaging.XpsColorContext" /> object. </summary>
      <returns>The <see cref="T:System.Windows.Xps.Serialization.XpsResourceStream" /> for the <see cref="T:System.Windows.Xps.Packaging.XpsColorContext" />.</returns>
      <param name="resourceId">The ID of the object.</param>
    </member>
    <member name="M:System.Windows.Xps.Serialization.BasePackagingPolicy.AcquireResourceStreamForXpsFont">
      <summary>When overridden in a derived class, acquires a resource stream for an <see cref="T:System.Windows.Xps.Packaging.XpsFont" /> object. </summary>
      <returns>An <see cref="T:System.Windows.Xps.Serialization.XpsResourceStream" /> for the <see cref="T:System.Windows.Xps.Packaging.XpsFont" />.</returns>
    </member>
    <member name="M:System.Windows.Xps.Serialization.BasePackagingPolicy.AcquireResourceStreamForXpsFont(System.String)">
      <summary>When overridden in a derived class, acquires an <see cref="T:System.Windows.Xps.Serialization.XpsResourceStream" /> for an <see cref="T:System.Windows.Xps.Packaging.XpsFont" /> with a specified resource ID.</summary>
      <returns>The XML Paper Specification (XPS) resource stream for the <see cref="T:System.Windows.Xps.Packaging.XpsFont" /> with the specified <paramref name="resourceID" />.</returns>
      <param name="resourceId">The resource ID of the <see cref="T:System.Windows.Xps.Packaging.XpsFont" /> resource stream to acquire.</param>
    </member>
    <member name="M:System.Windows.Xps.Serialization.BasePackagingPolicy.AcquireResourceStreamForXpsImage(System.String)">
      <summary>When overridden in a derived class, acquires a resource stream for an <see cref="T:System.Windows.Xps.Packaging.XpsImage" /> object. </summary>
      <returns>The <see cref="T:System.Windows.Xps.Serialization.XpsResourceStream" /> for the <see cref="T:System.Windows.Xps.Packaging.XpsImage" />.</returns>
      <param name="resourceId">The ID of the object.</param>
    </member>
    <member name="M:System.Windows.Xps.Serialization.BasePackagingPolicy.AcquireResourceStreamForXpsResourceDictionary(System.String)">
      <summary>When overridden in a derived class, acquires a resource stream for an <see cref="T:System.Windows.Xps.Packaging.XpsResourceDictionary" /> object. </summary>
      <returns>The <see cref="T:System.Windows.Xps.Serialization.XpsResourceStream" /> for the <see cref="T:System.Windows.Xps.Packaging.XpsResourceDictionary" />.</returns>
      <param name="resourceId">The ID of the object.</param>
    </member>
    <member name="M:System.Windows.Xps.Serialization.BasePackagingPolicy.AcquireStreamForLinkTargets">
      <summary>When overridden in a derived class, gets a list of strings, each expressing a <see cref="T:System.Windows.Documents.LinkTarget" /> element.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IList`1" /> of <see cref="T:System.String" /> objects that represent the linkable targets for a page. </returns>
    </member>
    <member name="M:System.Windows.Xps.Serialization.BasePackagingPolicy.AcquireXmlWriterForFixedDocument">
      <summary>When overridden in a derived class, returns an <see cref="T:System.Xml.XmlWriter" /> for a <see cref="T:System.Windows.Documents.FixedDocument" />.</summary>
      <returns>The <see cref="T:System.Xml.XmlWriter" /> for the <see cref="T:System.Windows.Documents.FixedDocument" />.</returns>
    </member>
    <member name="M:System.Windows.Xps.Serialization.BasePackagingPolicy.AcquireXmlWriterForFixedDocumentSequence">
      <summary>When overridden in a derived class, returns an <see cref="T:System.Xml.XmlWriter" /> for a <see cref="T:System.Windows.Documents.FixedDocumentSequence" />.</summary>
      <returns>The <see cref="T:System.Xml.XmlWriter" /> for a <see cref="T:System.Windows.Documents.FixedDocumentSequence" />.</returns>
    </member>
    <member name="M:System.Windows.Xps.Serialization.BasePackagingPolicy.AcquireXmlWriterForFixedPage">
      <summary>When overridden in a derived class, returns an <see cref="T:System.Xml.XmlWriter" /> for a <see cref="T:System.Windows.Documents.FixedPage" />.</summary>
      <returns>The <see cref="T:System.Xml.XmlWriter" /> for a <see cref="T:System.Windows.Documents.FixedPage" />.</returns>
    </member>
    <member name="M:System.Windows.Xps.Serialization.BasePackagingPolicy.AcquireXmlWriterForPage">
      <summary>When overridden in a derived class, returns an <see cref="T:System.Xml.XmlWriter" /> for the current page. </summary>
      <returns>The <see cref="T:System.Xml.XmlWriter" /> for the current page.</returns>
    </member>
    <member name="M:System.Windows.Xps.Serialization.BasePackagingPolicy.AcquireXmlWriterForResourceDictionary">
      <summary>When overridden in a derived class, returns an <see cref="T:System.Xml.XmlWriter" /> for an <see cref="T:System.Windows.Xps.Packaging.XpsResourceDictionary" />.</summary>
      <returns>The <see cref="T:System.Xml.XmlWriter" /> for an <see cref="T:System.Windows.Xps.Packaging.XpsResourceDictionary" />.</returns>
    </member>
    <member name="P:System.Windows.Xps.Serialization.BasePackagingPolicy.CurrentFixedDocumentUri">
      <summary>When overridden in a derived class, gets the uniform resource identifier (URI) of the fixed document that is processing.</summary>
      <returns>The <see cref="T:System.Uri" /> of the current document.</returns>
    </member>
    <member name="P:System.Windows.Xps.Serialization.BasePackagingPolicy.CurrentFixedPageUri">
      <summary>When overridden in a derived class, gets the uniform resource identifier (URI) of the fixed page that is processing.</summary>
      <returns>The <see cref="T:System.Uri" /> of the current page.</returns>
    </member>
    <member name="M:System.Windows.Xps.Serialization.BasePackagingPolicy.PersistPrintTicket(System.Printing.PrintTicket)">
      <summary>When overridden in a derived class, writes a print ticket to a package or to a part of the package.</summary>
      <param name="printTicket">An object that provides information about how a print job prints. </param>
    </member>
    <member name="M:System.Windows.Xps.Serialization.BasePackagingPolicy.PreCommitCurrentPage">
      <summary>When overridden in a derived class, performs any required maintenance tasks before the page is committed, for example, flushes streams.</summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.BasePackagingPolicy.RelateResourceToCurrentPage(System.Uri,System.String)">
      <summary>When overridden in a derived class, adds a relationship from the current page to some internal or external resource.</summary>
      <param name="targetUri">The uniform resource identifier (URI) of the resource.</param>
      <param name="relationshipName">A name for the relationship.</param>
    </member>
    <member name="M:System.Windows.Xps.Serialization.BasePackagingPolicy.RelateRestrictedFontToCurrentDocument(System.Uri)">
      <summary>When overridden in a derived class, adds a relationship from the current page to a font.</summary>
      <param name="targetUri">The uniform resource identifier (URI) of the font.</param>
    </member>
    <member name="M:System.Windows.Xps.Serialization.BasePackagingPolicy.ReleaseResourceStreamForXpsColorContext">
      <summary>When overridden in a derived class, releases the <see cref="T:System.Windows.Xps.Serialization.XpsResourceStream" /> for the current <see cref="T:System.Windows.Xps.Packaging.XpsColorContext" /> object. </summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.BasePackagingPolicy.ReleaseResourceStreamForXpsFont">
      <summary>When overridden in a derived class, releases the <see cref="T:System.Windows.Xps.Serialization.XpsResourceStream" /> for the current <see cref="T:System.Windows.Xps.Packaging.XpsResourceDictionary" /> object. </summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.BasePackagingPolicy.ReleaseResourceStreamForXpsFont(System.String)">
      <summary>When overridden in a derived class, releases the <see cref="T:System.Windows.Xps.Serialization.XpsResourceStream" /> for the current <see cref="T:System.Windows.Xps.Packaging.XpsResourceDictionary" /> object. </summary>
      <param name="resourceId">The ID of the resource that is released.</param>
    </member>
    <member name="M:System.Windows.Xps.Serialization.BasePackagingPolicy.ReleaseResourceStreamForXpsImage">
      <summary>When overridden in a derived class, releases the <see cref="T:System.Windows.Xps.Serialization.XpsResourceStream" /> for the current <see cref="T:System.Windows.Xps.Packaging.XpsImage" /> object. </summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.BasePackagingPolicy.ReleaseResourceStreamForXpsResourceDictionary">
      <summary>When overridden in a derived class, releases the <see cref="T:System.Windows.Xps.Serialization.XpsResourceStream" /> for the current <see cref="T:System.Windows.Xps.Packaging.XpsResourceDictionary" /> object. </summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.BasePackagingPolicy.ReleaseXmlWriterForFixedDocument">
      <summary>When overridden in a derived class, releases the <see cref="T:System.Xml.XmlWriter" /> for the current <see cref="T:System.Windows.Documents.FixedDocument" />.</summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.BasePackagingPolicy.ReleaseXmlWriterForFixedDocumentSequence">
      <summary>When overridden in a derived class, releases the <see cref="T:System.Xml.XmlWriter" /> for the current <see cref="T:System.Windows.Documents.FixedDocumentSequence" />.</summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.BasePackagingPolicy.ReleaseXmlWriterForFixedPage">
      <summary>When overridden in a derived class, releases the <see cref="T:System.Xml.XmlWriter" /> for the current <see cref="T:System.Windows.Documents.FixedPage" />.</summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.BasePackagingPolicy.System#IDisposable#Dispose">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
    </member>
    <member name="T:System.Windows.Xps.Serialization.ColorTypeConverter">
      <summary>Provides type converters for converting <see cref="T:System.Windows.Media.Color" /> objects to and from objects of other types.</summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.ColorTypeConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.Serialization.ColorTypeConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.ColorTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value that indicates whether this converter can convert an instance of a specified type to a <see cref="T:System.Windows.Media.Color" />.</summary>
      <returns>true if objects of the specified type can be converted; otherwise, false. </returns>
      <param name="context">An object that provides contextual information.</param>
      <param name="sourceType">The type of object that is a candidate for conversion.</param>
    </member>
    <member name="M:System.Windows.Xps.Serialization.ColorTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value that indicates whether this <see cref="T:System.Windows.Xps.Serialization.ColorTypeConverter" /> can convert a <see cref="T:System.Windows.Media.Color" /> to an instance of a specified type.</summary>
      <returns>true if conversion is possible; otherwise, false. </returns>
      <param name="context">An object that provides contextual information.</param>
      <param name="destinationType">The type of object that you want to convert a color to.</param>
    </member>
    <member name="M:System.Windows.Xps.Serialization.ColorTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts a specified object to a <see cref="T:System.Windows.Media.Color" />.</summary>
      <returns>The new <see cref="T:System.Windows.Media.Color" /> object. </returns>
      <param name="context">An object that provides contextual information.</param>
      <param name="culture">The language and culture that are used during the conversion.</param>
      <param name="value">The object that is converted.</param>
      <exception cref="T:System.NotImplementedException">This method is called from this class instead of from a derived class. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">The <paramref name="value" /> is not a type that can be converted.</exception>
    </member>
    <member name="M:System.Windows.Xps.Serialization.ColorTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts a <see cref="T:System.Windows.Media.Color" /> to an object of the specified type.</summary>
      <returns>The new <see cref="T:System.Object" /> of the designated type.</returns>
      <param name="context">An object that provides contextual information.</param>
      <param name="culture">The language and culture that are used during the conversion. </param>
      <param name="value">The object you want to convert.</param>
      <param name="destinationType">The type that <paramref name="value" /> is converted to.</param>
      <exception cref="T:System.NotSupportedException">The <paramref name="destinationType" /> is not a type that <paramref name="value" /> can be converted to.-or-The <paramref name="culture" /> is a neutral culture.</exception>
    </member>
    <member name="M:System.Windows.Xps.Serialization.ColorTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Gets a collection of property descriptions for the specified type.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the property descriptions that are exposed for the component; or null if no property descriptions are returned.</returns>
      <param name="context">An object that provides contextual information.</param>
      <param name="value">An object of the type for which you need property descriptions.</param>
      <param name="attributes">An array of attributes that filter the returned collection to exclude irrelevant properties.</param>
      <exception cref="T:System.NotImplementedException">This method is called from this class instead of from a derived class. </exception>
    </member>
    <member name="M:System.Windows.Xps.Serialization.ColorTypeConverter.SerializeColorContext(System.IServiceProvider,System.Windows.Media.ColorContext)">
      <summary>
            Serializes a <see cref="T:System.Windows.Media.ColorContext" /> to the XML Paper Specification (XPS) package and returns its uniform resource identifier (URI) as a string.</summary>
      <returns>A <see cref="T:System.String" /> that represents the URI of the color context.</returns>
      <param name="context">An object that provides contextual information.</param>
      <param name="colorContext">The object to be serialized.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="colorContext" /> is null. </exception>
    </member>
    <member name="T:System.Windows.Xps.Serialization.FontSubsetterCommitPolicies">
      <summary>Specifies the granularity at which font glyph subsets are saved in an XPS document.</summary>
    </member>
    <member name="F:System.Windows.Xps.Serialization.FontSubsetterCommitPolicies.None">
      <summary>No subsetting.  Store all glyphs for all fonts used in the document.</summary>
    </member>
    <member name="F:System.Windows.Xps.Serialization.FontSubsetterCommitPolicies.CommitPerPage">
      <summary>Store all glyphs that are used in the text by each page.</summary>
    </member>
    <member name="F:System.Windows.Xps.Serialization.FontSubsetterCommitPolicies.CommitPerDocument">
      <summary>Store all glyphs that are used in the text by each document.</summary>
    </member>
    <member name="F:System.Windows.Xps.Serialization.FontSubsetterCommitPolicies.CommitEntireSequence">
      <summary>Store all glyphs that are used in the text by each document sequence.</summary>
    </member>
    <member name="T:System.Windows.Xps.Serialization.FontTypeConverter">
      <summary>Provides type converters for converting <see cref="T:System.Windows.Media.GlyphRun" /> objects to and from objects of other types.</summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.FontTypeConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.Serialization.FontTypeConverter" /> class. </summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.FontTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value that indicates whether this converter can convert an instance of a specified type to a <see cref="T:System.Windows.Media.GlyphRun" />.</summary>
      <returns>true if objects of the specified type can be converted; otherwise, false. </returns>
      <param name="context">An object that provides contextual information.</param>
      <param name="sourceType">The type of object to convert.</param>
    </member>
    <member name="M:System.Windows.Xps.Serialization.FontTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value that indicates whether this <see cref="T:System.Windows.Xps.Serialization.FontTypeConverter" /> can convert a <see cref="T:System.Windows.Media.GlyphRun" /> to an instance of a specified type. </summary>
      <returns>true if conversion is possible; otherwise, false.  </returns>
      <param name="context">An object that provides contextual information.</param>
      <param name="destinationType">The type of object that you want to convert a glyph run to.</param>
    </member>
    <member name="M:System.Windows.Xps.Serialization.FontTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts a specified object to a <see cref="T:System.Windows.Media.GlyphRun" />.</summary>
      <returns>The new <see cref="T:System.Windows.Media.GlyphRun" /> object. </returns>
      <param name="context">An object that provides contextual information.</param>
      <param name="culture">The language and culture that are used during the conversion.</param>
      <param name="value">The object that is converted.</param>
      <exception cref="T:System.NotImplementedException">This method is called from this class instead of from a derived class. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">The <paramref name="value" /> is not a type that can be converted.</exception>
    </member>
    <member name="M:System.Windows.Xps.Serialization.FontTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts a <see cref="T:System.Windows.Media.GlyphRun" /> to an object of the specified type.</summary>
      <returns>The new <see cref="T:System.Object" /> of the designated type. As implemented in this class, this must be a <see cref="T:System.Uri" />. It expresses the uniform resource identifier (URI) of the font subset that is used by the <paramref name="value" /> parameter.</returns>
      <param name="context">An object that provides contextual information.</param>
      <param name="culture">The language and culture that are used during the conversion. </param>
      <param name="value">The object you want to convert.</param>
      <param name="destinationType">The type that you want <paramref name="value" /> converted to.</param>
      <exception cref="T:System.NotSupportedException">The <paramref name="destinationType" /> is not a type that <paramref name="value" /> can be converted to.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="context" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="value" /> is null.</exception>
      <exception cref="T:System.Windows.Xps.XpsSerializationException">An error occurs when serializing the glyph run.</exception>
    </member>
    <member name="M:System.Windows.Xps.Serialization.FontTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Gets a collection of property descriptions for the specified type.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the property descriptions that are exposed for the component; or null if no property descriptions are returned.</returns>
      <param name="context">An object that provides contextual information.</param>
      <param name="value">An object that you need property descriptions for.</param>
      <param name="attributes">An array of attributes that filter the returned collection in order to exclude irrelevant properties.</param>
      <exception cref="T:System.NotImplementedException">This method is called from this class instead of from a derived class. </exception>
    </member>
    <member name="T:System.Windows.Xps.Serialization.ImageSourceTypeConverter">
      <summary>Provides type converters for converting <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> objects to and from objects of other types.</summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.ImageSourceTypeConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.Serialization.ImageSourceTypeConverter" /> class. </summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.ImageSourceTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value that indicates whether this converter can convert an instance of a specified type to a <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.</summary>
      <returns>true if objects of the specified type can be converted; otherwise, false. </returns>
      <param name="context">An object that provides contextual information.</param>
      <param name="sourceType">The type of object to convert.</param>
    </member>
    <member name="M:System.Windows.Xps.Serialization.ImageSourceTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value that indicates whether this <see cref="T:System.Windows.Xps.Serialization.ImageSourceTypeConverter" /> can convert a <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> to an instance of a specified type. </summary>
      <returns>true if the conversion is possible; otherwise, false.  </returns>
      <param name="context">An object that provides contextual information.</param>
      <param name="destinationType">The type of object that you want to convert to a <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.</param>
    </member>
    <member name="M:System.Windows.Xps.Serialization.ImageSourceTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts a specified object to a <see cref="T:System.Windows.Media.Imaging.BitmapSource" />. </summary>
      <returns>The new <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> object. </returns>
      <param name="context">An object that provides contextual information.</param>
      <param name="culture">The language and culture that are used during the conversion.</param>
      <param name="value">The object that is converted.</param>
      <exception cref="T:System.NotImplementedException">This method is called from this class instead of from a derived class. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">The <paramref name="value" /> is not a type that can be converted.</exception>
    </member>
    <member name="M:System.Windows.Xps.Serialization.ImageSourceTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts a <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> to an object of the specified type.</summary>
      <returns>The new <see cref="T:System.Object" /> of the designated type. As implemented in this class, the object must be a <see cref="T:System.Uri" />. The object expresses the uniform resource identifier (URI) of the serialized image. </returns>
      <param name="context">An object that provides contextual information.</param>
      <param name="culture">The language and culture that are used during the conversion. </param>
      <param name="value">The object that you want to convert.</param>
      <param name="destinationType">The type that you want <paramref name="value" /> converted to.</param>
      <exception cref="T:System.NotSupportedException">The <paramref name="destinationType" /> is not a type that <paramref name="value" /> can be converted to.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="context" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="value" /> is null.</exception>
      <exception cref="T:System.Windows.Xps.XpsSerializationException">An error occurs when serializing the image.</exception>
    </member>
    <member name="M:System.Windows.Xps.Serialization.ImageSourceTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Gets a collection of property descriptions for the specified type.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the property descriptions that are exposed for the component; or null if no property descriptions are returned.</returns>
      <param name="context">An object that provides contextual information.</param>
      <param name="value">An object that you need property descriptions for.</param>
      <param name="attributes">An array of attributes that are used to filter the returned collection in order to exclude irrelevant properties.</param>
      <exception cref="T:System.NotImplementedException">This method is called from this class instead of from a derived class. </exception>
    </member>
    <member name="T:System.Windows.Xps.Serialization.PackageSerializationManager">
      <summary>Provides a base class to manage the serializers and type converters that insert Windows Presentation Foundation (WPF) root objects into an XML Paper Specification (XPS) package. </summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.PackageSerializationManager.#ctor">
      <summary>When overridden in a derived class, initializes a new instance of the <see cref="T:System.Windows.Xps.Serialization.PackageSerializationManager" /> class. </summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.PackageSerializationManager.SaveAsXaml(System.Object)">
      <summary>When overridden in a derived class, saves the specified serialized object to an XML Paper Specification (XPS) package.</summary>
      <param name="serializedObject">The object to save.</param>
    </member>
    <member name="M:System.Windows.Xps.Serialization.PackageSerializationManager.System#IDisposable#Dispose">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
    </member>
    <member name="T:System.Windows.Xps.Serialization.PrintTicketLevel">
      <summary>Specifies whether a <see cref="T:System.Printing.PrintTicket" /> applies to an entire sequence of documents, to just one document, or to just one page. </summary>
    </member>
    <member name="F:System.Windows.Xps.Serialization.PrintTicketLevel.None">
      <summary>An unknown or unspecified level.</summary>
    </member>
    <member name="F:System.Windows.Xps.Serialization.PrintTicketLevel.FixedDocumentSequencePrintTicket">
      <summary>A sequence of documents.</summary>
    </member>
    <member name="F:System.Windows.Xps.Serialization.PrintTicketLevel.FixedDocumentPrintTicket">
      <summary>A document.</summary>
    </member>
    <member name="F:System.Windows.Xps.Serialization.PrintTicketLevel.FixedPagePrintTicket">
      <summary>A page.</summary>
    </member>
    <member name="T:System.Windows.Xps.Serialization.SerializationState">
      <summary>Do not use. </summary>
    </member>
    <member name="F:System.Windows.Xps.Serialization.SerializationState.Normal">
      <summary>Do not use.</summary>
    </member>
    <member name="F:System.Windows.Xps.Serialization.SerializationState.Stop">
      <summary>Do not use.</summary>
    </member>
    <member name="T:System.Windows.Xps.Serialization.XpsPackagingPolicy">
      <summary>Defines the writer, resource, print ticket, and package relationship settings that are associated with a specified <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />.    </summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsPackagingPolicy.#ctor(System.Windows.Xps.Packaging.XpsDocument)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.Serialization.XpsPackagingPolicy" /> class for a specified <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />.</summary>
      <param name="xpsPackage">The <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> that is associated with this <see cref="T:System.Windows.Xps.Serialization.XpsPackagingPolicy" />.</param>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsPackagingPolicy.#ctor(System.Windows.Xps.Packaging.XpsDocument,System.Windows.Xps.Packaging.PackageInterleavingOrder)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.Serialization.XpsPackagingPolicy" /> class with a specified <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> and specified interleave order.</summary>
      <param name="xpsPackage">The XML Paper Specification (XPS) document that the packaging policy applies to.</param>
      <param name="interleavingType">The order in which to interleave document elements.</param>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsPackagingPolicy.AcquireResourceStreamForXpsColorContext(System.String)">
      <summary>Acquires the resource stream for a specified <see cref="T:System.Windows.Xps.Packaging.XpsColorContext" />.</summary>
      <returns>The resource stream for the <see cref="T:System.Windows.Xps.Packaging.XpsColorContext" /> that has the specified <paramref name="resourceId" />.</returns>
      <param name="resourceId">The resource identifier of the color context.</param>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsPackagingPolicy.AcquireResourceStreamForXpsFont">
      <summary>Acquires the <see cref="T:System.Windows.Xps.Serialization.XpsResourceStream" /> for the current <see cref="T:System.Windows.Xps.Packaging.XpsFont" />.</summary>
      <returns>The resource stream for the current <see cref="T:System.Windows.Xps.Packaging.XpsFont" />.</returns>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsPackagingPolicy.AcquireResourceStreamForXpsFont(System.String)">
      <summary>Acquires the <see cref="T:System.Windows.Xps.Serialization.XpsResourceStream" /> for a specified <see cref="T:System.Windows.Xps.Packaging.XpsFont" />.</summary>
      <returns>The resource stream for the XML Paper Specification (XPS) font that has the specified <paramref name="resourceId" />.</returns>
      <param name="resourceId">The identifier of the XML Paper Specification (XPS) font.</param>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsPackagingPolicy.AcquireResourceStreamForXpsImage(System.String)">
      <summary>Acquires the resource stream for a specified <see cref="T:System.Windows.Xps.Packaging.XpsImage" />.</summary>
      <returns>The resource stream for the <see cref="T:System.Windows.Xps.Packaging.XpsImage" /> that has the specified <paramref name="resourceId" />.</returns>
      <param name="resourceId">The resource identifier of the XML Paper Specification (XPS) image.</param>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsPackagingPolicy.AcquireResourceStreamForXpsResourceDictionary(System.String)">
      <summary>Acquires the resource stream for a specified <see cref="T:System.Windows.Xps.Packaging.XpsResourceDictionary" />.</summary>
      <returns>The XML Paper Specification (XPS) resource stream for the <see cref="T:System.Windows.Xps.Packaging.XpsResourceDictionary" /> that has the specified <paramref name="resourceId" />.</returns>
      <param name="resourceId">The identifier of the resource dictionary.</param>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsPackagingPolicy.AcquireStreamForLinkTargets">
      <summary>Returns a list of <see cref="P:System.Windows.Documents.PageContent.LinkTargets" /> for the current page content.</summary>
      <returns>The list of <see cref="P:System.Windows.Documents.PageContent.LinkTargets" /> for the current page content.</returns>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsPackagingPolicy.AcquireXmlWriterForFixedDocument">
      <summary>Acquires the <see cref="T:System.Xml.XmlWriter" /> for the current <see cref="T:System.Windows.Documents.FixedDocument" />.</summary>
      <returns>The XML writer for the current <see cref="T:System.Windows.Documents.FixedDocument" />.</returns>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsPackagingPolicy.AcquireXmlWriterForFixedDocumentSequence">
      <summary>Acquires the <see cref="T:System.Xml.XmlWriter" /> for the current <see cref="T:System.Windows.Documents.FixedDocumentSequence" />.</summary>
      <returns>The XML writer for the current <see cref="T:System.Windows.Documents.FixedDocumentSequence" />.</returns>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsPackagingPolicy.AcquireXmlWriterForFixedPage">
      <summary>Acquires the <see cref="T:System.Xml.XmlWriter" /> for the current <see cref="T:System.Windows.Documents.FixedPage" />.</summary>
      <returns>The XML writer for the current <see cref="T:System.Windows.Documents.FixedPage" />.</returns>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsPackagingPolicy.AcquireXmlWriterForPage">
      <summary>Acquires the <see cref="T:System.Xml.XmlWriter" /> for the current page.</summary>
      <returns>The XML writer for the current <see cref="T:System.Windows.Documents.FixedPage" />.</returns>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsPackagingPolicy.AcquireXmlWriterForResourceDictionary">
      <summary>Acquires the <see cref="T:System.Xml.XmlWriter" /> for the current <see cref="T:System.Windows.Xps.Packaging.XpsResourceDictionary" />.</summary>
      <returns>The XML writer for the current <see cref="T:System.Windows.Xps.Packaging.XpsResourceDictionary" />.</returns>
    </member>
    <member name="P:System.Windows.Xps.Serialization.XpsPackagingPolicy.CurrentFixedDocumentUri">
      <summary>Gets the uniform resource identifier (URI) of the current fixed document.</summary>
      <returns>The URI of the current fixed document.</returns>
    </member>
    <member name="P:System.Windows.Xps.Serialization.XpsPackagingPolicy.CurrentFixedPageUri">
      <summary>Gets the uniform resource identifier (URI) of the current fixed page.</summary>
      <returns>The URI of the current fixed page.</returns>
    </member>
    <member name="E:System.Windows.Xps.Serialization.XpsPackagingPolicy.PackagingProgressEvent">
      <summary>Occurs when a <see cref="T:System.Windows.Documents.FixedPage" />, <see cref="T:System.Windows.Documents.FixedDocument" />, or <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> is added to the <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />.</summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsPackagingPolicy.PersistPrintTicket(System.Printing.PrintTicket)">
      <summary>Stores a specified <see cref="T:System.Printing.PrintTicket" /> as part of the <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />.</summary>
      <param name="printTicket">The print ticket to store as part of the XML Paper Specification (XPS) document.</param>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsPackagingPolicy.PreCommitCurrentPage">
      <summary>Prepares to commit the current page to the output store.</summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsPackagingPolicy.RelateResourceToCurrentPage(System.Uri,System.String)">
      <summary>Adds a <see cref="T:System.IO.Packaging.PackageRelationship" /> with a specified name that associates a specified resource with the current page.</summary>
      <param name="targetUri">The uniform resource identifier (URI) of the resource to associate with the current page.</param>
      <param name="relationshipName">The identifying name of the <see cref="T:System.IO.Packaging.PackageRelationship" /> that associates the current page with the specified resource.</param>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsPackagingPolicy.RelateRestrictedFontToCurrentDocument(System.Uri)">
      <summary>Adds a <see cref="T:System.IO.Packaging.PackageRelationship" /> that associates a restricted font with the current document.</summary>
      <param name="targetUri">The uniform resource identifier (URI) of the restricted font to associate with the current document.</param>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsPackagingPolicy.ReleaseResourceStreamForXpsColorContext">
      <summary>Releases the <see cref="T:System.Windows.Xps.Serialization.XpsResourceStream" /> for the current <see cref="T:System.Windows.Xps.Packaging.XpsColorContext" />.</summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsPackagingPolicy.ReleaseResourceStreamForXpsFont">
      <summary>Releases the <see cref="T:System.Windows.Xps.Serialization.XpsResourceStream" /> for the current <see cref="T:System.Windows.Xps.Packaging.XpsFont" />.</summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsPackagingPolicy.ReleaseResourceStreamForXpsFont(System.String)">
      <summary>Releases the <see cref="T:System.Windows.Xps.Serialization.XpsResourceStream" /> for a specified <see cref="T:System.Windows.Xps.Packaging.XpsFont" />.</summary>
      <param name="resourceId">The identifier of the XML Paper Specification (XPS) font that you want to release.</param>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsPackagingPolicy.ReleaseResourceStreamForXpsImage">
      <summary>Releases the <see cref="T:System.Windows.Xps.Serialization.XpsResourceStream" /> for the current <see cref="T:System.Windows.Xps.Packaging.XpsImage" />.</summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsPackagingPolicy.ReleaseResourceStreamForXpsResourceDictionary">
      <summary>Releases the <see cref="T:System.Windows.Xps.Serialization.XpsResourceStream" /> for the current <see cref="T:System.Windows.Xps.Packaging.XpsResourceDictionary" />.</summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsPackagingPolicy.ReleaseXmlWriterForFixedDocument">
      <summary>Releases the <see cref="T:System.Xml.XmlWriter" /> for the current <see cref="T:System.Windows.Documents.FixedDocument" />.</summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsPackagingPolicy.ReleaseXmlWriterForFixedDocumentSequence">
      <summary>Releases the <see cref="T:System.Xml.XmlWriter" /> for the current <see cref="T:System.Windows.Documents.FixedDocumentSequence" />.</summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsPackagingPolicy.ReleaseXmlWriterForFixedPage">
      <summary>Releases the <see cref="T:System.Xml.XmlWriter" /> for the current <see cref="T:System.Windows.Documents.FixedPage" />.</summary>
    </member>
    <member name="T:System.Windows.Xps.Serialization.XpsResourceStream">
      <summary>Represents the stream and uniform resource identifier (URI)  of an XML Paper Specification (XPS) resource. </summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsResourceStream.#ctor(System.IO.Stream,System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.Serialization.XpsResourceStream" /> class by using the specified stream and uniform resource identifier (URI).</summary>
      <param name="stream">The stream that contains the resource.</param>
      <param name="uri">The URI of the resource.</param>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsResourceStream.Initialize">
      <summary>Initializes the <see cref="T:System.IO.Stream" /> in the <see cref="T:System.Windows.Xps.Serialization.XpsResourceStream" />.</summary>
    </member>
    <member name="P:System.Windows.Xps.Serialization.XpsResourceStream.Stream">
      <summary>Gets the <see cref="T:System.IO.Stream" /> of the resource.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> that contains the XML Paper Specification (XPS) resource. </returns>
    </member>
    <member name="P:System.Windows.Xps.Serialization.XpsResourceStream.Uri">
      <summary>Gets the <see cref="T:System.Uri" /> of the resource.</summary>
      <returns>A <see cref="T:System.Uri" /> that contains the XML Paper Specification (XPS) resource. </returns>
    </member>
    <member name="T:System.Windows.Xps.Serialization.XpsSerializationCompletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Xps.Serialization.XpsSerializationManagerAsync.XpsSerializationCompleted" /> event of an <see cref="T:System.Windows.Xps.Serialization.XpsSerializationManagerAsync" />. </summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsSerializationCompletedEventArgs.#ctor(System.Boolean,System.Object,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.Serialization.XpsSerializationCompletedEventArgs" /> class. </summary>
      <param name="canceled">true to indicate that the serialization was canceled before completion; otherwise, false.</param>
      <param name="state">A user-supplied object that provides additional data to the event handler. </param>
      <param name="exception">An exception, if any, that interrupted the serialization operation.</param>
    </member>
    <member name="T:System.Windows.Xps.Serialization.XpsSerializationCompletedEventHandler">
      <summary>Represents the method that handles the <see cref="E:System.Windows.Xps.Serialization.XpsSerializationManagerAsync.XpsSerializationCompleted" /> event of an <see cref="T:System.Windows.Xps.Serialization.XpsSerializationManagerAsync" />. </summary>
      <param name="sender">The source of the event. </param>
      <param name="e">The event data. </param>
    </member>
    <member name="T:System.Windows.Xps.Serialization.XpsSerializationManager">
      <summary>Manages synchronous XML Paper Specification (XPS) serializers and type converters. </summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsSerializationManager.#ctor(System.Windows.Xps.Serialization.BasePackagingPolicy,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.Serialization.XpsSerializationManager" /> class. </summary>
      <param name="packagingPolicy">An object that provides methods for acquiring serialization readers and writers for different parts of an XML Paper Specification (XPS) document.</param>
      <param name="batchMode">true to specify batch mode; otherwise, false. </param>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsSerializationManager.Commit">
      <summary>Commits all changes and writes all buffered data.</summary>
    </member>
    <member name="P:System.Windows.Xps.Serialization.XpsSerializationManager.IsBatchMode">
      <summary>Gets a value that indicates whether the serialization manager is in batch mode.</summary>
      <returns>true if the manager is in batch mode; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsSerializationManager.SaveAsXaml(System.Object)">
      <summary>Saves a specified XAML serialized object to the document package.</summary>
      <param name="serializedObject">The XAML serialized object to save.</param>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsSerializationManager.SetFontSubsettingCountPolicy(System.Int32)">
      <summary>Sets the number of pages or documents to process for font-subsetting.</summary>
      <param name="countPolicy">The number of pages or documents to process at a time for font subsetting.</param>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsSerializationManager.SetFontSubsettingPolicy(System.Windows.Xps.Serialization.FontSubsetterCommitPolicies)">
      <summary>Sets the granularity at which font-subsetting is performed.</summary>
      <param name="policy">One of the enumeration values that specifies the font-subsetting policy.</param>
    </member>
    <member name="E:System.Windows.Xps.Serialization.XpsSerializationManager.XpsSerializationPrintTicketRequired">
      <summary>Occurs when an XPS serializer requests a <see cref="T:System.Printing.PrintTicket" />.</summary>
    </member>
    <member name="E:System.Windows.Xps.Serialization.XpsSerializationManager.XpsSerializationProgressChanged">
      <summary>Occurs when a page or document finishes serialization.</summary>
    </member>
    <member name="T:System.Windows.Xps.Serialization.XpsSerializationManagerAsync">
      <summary>Manages asynchronous XML Paper Specification (XPS) serializers and type converters.</summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsSerializationManagerAsync.#ctor(System.Windows.Xps.Serialization.BasePackagingPolicy,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.Serialization.XpsSerializationManagerAsync" /> class. </summary>
      <param name="packagingPolicy">An object that provides methods for acquiring serialization readers and writers for different parts of an XML Paper Specification (XPS) document.</param>
      <param name="batchMode">true to specify batch mode; otherwise, false. </param>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsSerializationManagerAsync.CancelAsync">
      <summary>Cancels an asynchronous serialization operation.</summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsSerializationManagerAsync.Commit">
      <summary>Commits all changes and writes all buffered data as output.</summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsSerializationManagerAsync.SaveAsXaml(System.Object)">
      <summary>Saves a specified serialized object to an XML Paper Specification (XPS) package.</summary>
      <param name="serializedObject">The object that is saved.</param>
    </member>
    <member name="E:System.Windows.Xps.Serialization.XpsSerializationManagerAsync.XpsSerializationCompleted">
      <summary>Occurs when a serialization operation finishes.</summary>
    </member>
    <member name="T:System.Windows.Xps.Serialization.XpsSerializationPrintTicketRequiredEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Xps.Serialization.XpsSerializationManager.XpsSerializationPrintTicketRequired" /> event.  </summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsSerializationPrintTicketRequiredEventArgs.#ctor(System.Windows.Xps.Serialization.PrintTicketLevel,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.Serialization.XpsSerializationPrintTicketRequiredEventArgs" /> class. </summary>
      <param name="printTicketLevel">An object that specifies the scope of the <see cref="T:System.Printing.PrintTicket" />.</param>
      <param name="sequence">Either the total number of pages or the number of documents in the print job. Which applies depends on the scope of the <see cref="T:System.Printing.PrintTicket" />.</param>
    </member>
    <member name="P:System.Windows.Xps.Serialization.XpsSerializationPrintTicketRequiredEventArgs.PrintTicket">
      <summary>Gets or sets the <see cref="T:System.Printing.PrintTicket" /> that is used in the writing operation.</summary>
      <returns>A <see cref="T:System.Printing.PrintTicket" /> that defines how the printer handles a print job.</returns>
    </member>
    <member name="P:System.Windows.Xps.Serialization.XpsSerializationPrintTicketRequiredEventArgs.PrintTicketLevel">
      <summary>Gets a value that indicates the scope of the <see cref="T:System.Printing.PrintTicket" />.</summary>
      <returns>A <see cref="T:System.Windows.Xps.Serialization.PrintTicketLevel" /> value that indicates the scope of the <see cref="T:System.Printing.PrintTicket" />. </returns>
    </member>
    <member name="P:System.Windows.Xps.Serialization.XpsSerializationPrintTicketRequiredEventArgs.Sequence">
      <summary>Gets either the total number of pages or the number of documents in the print job. </summary>
      <returns>An <see cref="T:System.Int32" /> that represents the total number of pages or the number of documents.</returns>
    </member>
    <member name="T:System.Windows.Xps.Serialization.XpsSerializationPrintTicketRequiredEventHandler">
      <summary>Represents the method that handles the <see cref="E:System.Windows.Xps.Serialization.XpsSerializationManager.XpsSerializationPrintTicketRequired" /> event of an <see cref="T:System.Windows.Xps.Serialization.XpsSerializationManager" />. </summary>
      <param name="sender">The source of the event. </param>
      <param name="e">The event data. </param>
    </member>
    <member name="T:System.Windows.Xps.Serialization.XpsSerializationProgressChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Xps.Serialization.XpsSerializationManager.XpsSerializationProgressChanged" /> event.</summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsSerializationProgressChangedEventArgs.#ctor(System.Windows.Xps.Serialization.XpsWritingProgressChangeLevel,System.Int32,System.Int32,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.Serialization.XpsSerializationProgressChangedEventArgs" /> class.</summary>
      <param name="writingLevel">A value that specifies whether the change in progress is an additional page completed or an additional document completed.</param>
      <param name="pageNumber">A value that specifies the total number of pages or the number of documents that are serialized at the time of the event.</param>
      <param name="progressPercentage">A value that specifies the percentage of the total serialization job that is complete.</param>
      <param name="userToken">A user-supplied object that provides additional information for the event handler.</param>
    </member>
    <member name="P:System.Windows.Xps.Serialization.XpsSerializationProgressChangedEventArgs.PageNumber">
      <summary>Gets the number of pages or documents that have been serialized. </summary>
      <returns>The total pages or documents have been serialized at the point when the event occurred.</returns>
    </member>
    <member name="P:System.Windows.Xps.Serialization.XpsSerializationProgressChangedEventArgs.WritingLevel">
      <summary>Gets a value that indicates the scope of the progress indicator.</summary>
      <returns>The scope of the progress indicator.</returns>
    </member>
    <member name="T:System.Windows.Xps.Serialization.XpsSerializationProgressChangedEventHandler">
      <summary>Represents the method that handles the <see cref="E:System.Windows.Xps.Serialization.XpsSerializationManager.XpsSerializationProgressChanged" /> event of an <see cref="T:System.Windows.Xps.Serialization.XpsSerializationManager" />. </summary>
      <param name="sender">The source of the event. </param>
      <param name="e">The event data. </param>
    </member>
    <member name="T:System.Windows.Xps.Serialization.XpsSerializerFactory">
      <summary>Creates and provides information about XML Paper Specification (XPS) serializers.</summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsSerializerFactory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.Serialization.XpsSerializerFactory" /> class.</summary>
    </member>
    <member name="M:System.Windows.Xps.Serialization.XpsSerializerFactory.CreateSerializerWriter(System.IO.Stream)">
      <summary>Creates a <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> that outputs XPS content to a specified <see cref="T:System.IO.Stream" />.</summary>
      <returns>An output writer that serializes XPS content to the specified <paramref name="stream" />.</returns>
      <param name="stream">The output stream that the returned serializer is to write to.</param>
    </member>
    <member name="P:System.Windows.Xps.Serialization.XpsSerializerFactory.DefaultFileExtension">
      <summary>Gets the standard file name extension for XPS documents.</summary>
      <returns>The standard file name extension (including the leading period) for XPS documents.</returns>
    </member>
    <member name="P:System.Windows.Xps.Serialization.XpsSerializerFactory.DisplayName">
      <summary>Gets the public name for the serializers that the factory produces.</summary>
      <returns>The public name for serializers that the factory produces.</returns>
    </member>
    <member name="P:System.Windows.Xps.Serialization.XpsSerializerFactory.ManufacturerName">
      <summary>Gets the manufacturer's name for serializers that the factory produces.</summary>
      <returns>The manufacturer's name.</returns>
    </member>
    <member name="P:System.Windows.Xps.Serialization.XpsSerializerFactory.ManufacturerWebsite">
      <summary>Gets the manufacturer's Web address for serializers that the factory produces.</summary>
      <returns>The manufacturer's Web site.</returns>
    </member>
    <member name="T:System.Windows.Xps.Serialization.XpsWritingProgressChangeLevel">
      <summary>Specifies the scope of a writing progress indicator for XML Paper Specification (XPS) content. </summary>
    </member>
    <member name="F:System.Windows.Xps.Serialization.XpsWritingProgressChangeLevel.None">
      <summary>There is no interpretation for the progress value.</summary>
    </member>
    <member name="F:System.Windows.Xps.Serialization.XpsWritingProgressChangeLevel.FixedDocumentSequenceWritingProgress">
      <summary>An entire sequence of one or more documents.</summary>
    </member>
    <member name="F:System.Windows.Xps.Serialization.XpsWritingProgressChangeLevel.FixedDocumentWritingProgress">
      <summary>A single document.</summary>
    </member>
    <member name="F:System.Windows.Xps.Serialization.XpsWritingProgressChangeLevel.FixedPageWritingProgress">
      <summary>A single page.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.Activities.Presentation.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Activities.Design</name>
  </assembly>
  <members>
    <member name="T:System.Activities.Design.ActivityDesigner">
      <summary>Provides a base class for all activity designer components.</summary>
    </member>
    <member name="M:System.Activities.Design.ActivityDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.ActivityDesigner" /> class.</summary>
    </member>
    <member name="M:System.Activities.Design.ActivityDesigner.GetAutomationHelpText">
      <summary>Returns a string of automation property/value pairs related to the <see cref="T:System.Activities.Design.ActivityDesigner" />.</summary>
      <returns>Returns a <see cref="T:System.String" /> containing the automation property/value pairs related to the <see cref="T:System.Activities.Design.ActivityDesigner" />..</returns>
    </member>
    <member name="M:System.Activities.Design.ActivityDesigner.GetAutomationIdMemberName">
      <summary>Returns the string “DisplayName” in this overridden method implementation. </summary>
      <returns>Returns a <see cref="T:System.String" /> containing “DisplayName.”.</returns>
    </member>
    <member name="P:System.Activities.Design.ActivityDesigner.Icon">
      <summary>Gets or sets the icon associated with this <see cref="T:System.Activities.Design.ActivityDesigner" />. </summary>
      <returns>Returns a <see cref="T:System.Windows.Media.DrawingBrush" /> representing the icon associated with this <see cref="T:System.Activities.Design.ActivityDesigner" />..</returns>
    </member>
    <member name="F:System.Activities.Design.ActivityDesigner.IconProperty">
      <summary>Identifies the <see cref="F:System.Activities.Design.ActivityDesigner.IconProperty" /> dependency property. </summary>
    </member>
    <member name="M:System.Activities.Design.ActivityDesigner.OnDragEnter(System.Windows.DragEventArgs)">
      <summary>Raises the DragEnter event, calls the base class implementation of the OnDragEnter method, and handles <see cref="T:System.Activities.Design.Model.ModelItem" /> objects that are dragged onto the <see cref="T:System.Activities.Design.ActivityDesigner" /> surface.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Activities.Design.ActivityDesignerOptionsAttribute">
      <summary>Specifies drill-down and node viewing design options for UI elements, such as flowcharts, that are used to compose activities.</summary>
    </member>
    <member name="M:System.Activities.Design.ActivityDesignerOptionsAttribute.#ctor">
      <summary>Creates an instance of an <see cref="M:System.Activities.Design.ActivityDesignerOptionsAttribute.#ctor" /> class.</summary>
    </member>
    <member name="P:System.Activities.Design.ActivityDesignerOptionsAttribute.AllowDrillIn">
      <summary>Gets or sets a value that indicates whether drilling into UI elements that represent activities is allowed.</summary>
      <returns>true if drilling into the UI elements is allowed; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Activities.Design.ActivityDesignerOptionsAttribute.AlwaysCollapseChildren">
      <summary>Gets or sets a value that indicates whether the child nodes are always collapsed.</summary>
      <returns>true if the child nodes are always collapses; otherwise, false. The default value is false.</returns>
    </member>
    <member name="T:System.Activities.Design.BreakpointTypes">
      <summary>An enumeration that represents types of breakpoints.</summary>
    </member>
    <member name="F:System.Activities.Design.BreakpointTypes.None">
      <summary>No breakpoint is set.</summary>
    </member>
    <member name="F:System.Activities.Design.BreakpointTypes.Enabled">
      <summary>The breakpoint is enabled. </summary>
    </member>
    <member name="F:System.Activities.Design.BreakpointTypes.Bounded">
      <summary>Represents a bounded breakpoint, which implements the where and when of breaking at a desired point in a program. </summary>
    </member>
    <member name="F:System.Activities.Design.BreakpointTypes.Conditional">
      <summary>Represents a conditional breakpoint, which is an expression that is evaluated to determine whether the breakpoint will occur. </summary>
    </member>
    <member name="T:System.Activities.Design.CachedResourceDictionaryExtension"></member>
    <member name="M:System.Activities.Design.CachedResourceDictionaryExtension.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Activities.Design.CachedResourceDictionaryExtension" /> class.</summary>
    </member>
    <member name="M:System.Activities.Design.CachedResourceDictionaryExtension.ProvideValue(System.IServiceProvider)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
      <param name="serviceProvider"></param>
    </member>
    <member name="P:System.Activities.Design.CachedResourceDictionaryExtension.Source">
      <returns>Returns <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="T:System.Activities.Design.ClipboardData">
      <summary>Represents the data passed around with the clipboard.</summary>
    </member>
    <member name="M:System.Activities.Design.ClipboardData.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Activities.Design.ClipboardData" /> class.</summary>
    </member>
    <member name="P:System.Activities.Design.ClipboardData.Data">
      <summary>Gets or sets the data passed around on the clipboard.</summary>
      <returns>A <see cref="T:System.Collections.Generic.List`1" /> of type <see cref="T:System.Object" /> that contains the data passed around on the clipboard.</returns>
    </member>
    <member name="P:System.Activities.Design.ClipboardData.Metadata">
      <summary>Gets or sets the metadata passed around on the clipboard.</summary>
      <returns>A <see cref="T:System.Collections.Generic.List`1" /> of type <see cref="T:System.Object" /> that contains the metadata passed around on the clipboard.</returns>
    </member>
    <member name="P:System.Activities.Design.ClipboardData.Version">
      <summary>Gets or sets the version information passed around on the clipboard.</summary>
      <returns>The version information passed around on the clipboard.</returns>
    </member>
    <member name="T:System.Activities.Design.CommandInfo">
      <summary>Describes a command on the designer, such as copy or paste.</summary>
    </member>
    <member name="P:System.Activities.Design.CommandInfo.Command">
      <summary>A unique identifier that represents some behavior or action.</summary>
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:System.Activities.Design.CommandInfo.IsBindingEnabledInDesigner">
      <summary>Determines whether binding is enabled in the designer for the specified command.</summary>
      <returns>true if binding is enabled in the designer for the specified command; otherwise, false.</returns>
    </member>
    <member name="T:System.Activities.Design.CommandValues">
      <summary>A commanding interface that is used for integration of workflow designer actions (e.g., context menu) with custom provided implementation - i.e. property browser service, debugging service, etc.</summary>
    </member>
    <member name="F:System.Activities.Design.CommandValues.DeleteBreakpoint">
      <summary>The command to delete a breakpoint.</summary>
    </member>
    <member name="F:System.Activities.Design.CommandValues.DisableBreakpoint">
      <summary>The command to disable a breakpoint.</summary>
    </member>
    <member name="F:System.Activities.Design.CommandValues.EnableBreakpoint">
      <summary>The command to enable a breakpoint.</summary>
    </member>
    <member name="F:System.Activities.Design.CommandValues.InsertBreakpoint">
      <summary>The command to insert a breakpoint.</summary>
    </member>
    <member name="F:System.Activities.Design.CommandValues.ShowProperties">
      <summary>Opens the Visual Studio Proeprty Grid to show the properties.</summary>
    </member>
    <member name="T:System.Activities.Design.CutCopyPasteHelper">
      <summary>Provides functions to cut, copy, and paste items.</summary>
    </member>
    <member name="M:System.Activities.Design.CutCopyPasteHelper.AddChildContainer(System.Activities.Design.WorkflowViewElement,System.Activities.Design.ISourceContainer)">
      <summary>Adds the specified <see cref="T:System.Activities.Design.ISourceContainer" /> to the view element.</summary>
      <param name="viewElement">The view element where the new container is added to.</param>
      <param name="sourceContainer">The container to be added.</param>
    </member>
    <member name="M:System.Activities.Design.CutCopyPasteHelper.CanCopy(System.Activities.Design.EditingContext)">
      <summary>Verifies whether items can be copied from the specified editing context.</summary>
      <returns>true if the number of the selected objects is more than 0 and <paramref name="context" /> is not null; otherwise, false.</returns>
      <param name="context">The editing context to be verified.</param>
    </member>
    <member name="M:System.Activities.Design.CutCopyPasteHelper.CanCut(System.Activities.Design.EditingContext)">
      <summary>Verifies whether items can be cut from the specified editing context.</summary>
      <returns>true if the number of the selected objects is more than 0 and <paramref name="context" /> is not null; otherwise, false.</returns>
      <param name="context">The editing context to be verified.</param>
    </member>
    <member name="M:System.Activities.Design.CutCopyPasteHelper.CanPaste(System.Activities.Design.EditingContext)">
      <summary>Returns a Boolean that indicates whether the specified objects can be pasted. </summary>
      <returns>true if the number of the specified objects is more than 0 and not null; otherwise, false.</returns>
      <param name="context">The editing context for the paste operation.</param>
    </member>
    <member name="P:System.Activities.Design.CutCopyPasteHelper.ChildContainers">
      <summary>Gets all the child containers.</summary>
      <returns>Returns <see cref="T:System.Collections.Generic.HashSet`1" />.</returns>
    </member>
    <member name="F:System.Activities.Design.CutCopyPasteHelper.ChildContainersProperty">
      <summary>Identifies the <see cref="P:System.Activities.Design.CutCopyPasteHelper.ChildContainers" /> dependency property.</summary>
    </member>
    <member name="M:System.Activities.Design.CutCopyPasteHelper.DoCopy(System.Activities.Design.EditingContext)">
      <summary>Copies the currently selected items from the specified editing context to the clipboard.</summary>
      <param name="context">The editing context from which items are copied.</param>
    </member>
    <member name="M:System.Activities.Design.CutCopyPasteHelper.DoCopy(System.Collections.Generic.List{System.Activities.Design.Model.ModelItem},System.Activities.Design.EditingContext)">
      <summary>Copies the specified items from the specified editing context to the clipboard.</summary>
      <param name="modelItemsToCopy">Items to be copied.</param>
      <param name="context">The editing context from which items are copied.</param>
    </member>
    <member name="M:System.Activities.Design.CutCopyPasteHelper.DoCut(System.Activities.Design.EditingContext)">
      <summary>Deletes the currently selected items from an editing context.</summary>
      <param name="context">The editing context from which items are removed.</param>
    </member>
    <member name="M:System.Activities.Design.CutCopyPasteHelper.DoCut(System.Collections.Generic.List{System.Activities.Design.Model.ModelItem},System.Activities.Design.EditingContext)">
      <summary>Deletes the specified items from the specified editing context.</summary>
      <param name="modelItemsToCut">Items to be cut.</param>
      <param name="context">The editing context from which items are removed.</param>
    </member>
    <member name="M:System.Activities.Design.CutCopyPasteHelper.DoPaste(System.Activities.Design.EditingContext)">
      <summary>Pastes items in the clipboard in a default location in the specified editing context. </summary>
      <param name="context">The editing context to which items are pasted.</param>
    </member>
    <member name="M:System.Activities.Design.CutCopyPasteHelper.DoPaste(System.Activities.Design.EditingContext,System.Windows.Point,System.Activities.Design.WorkflowViewElement)">
      <summary>Pastes items in the clipboard in the specified location in the specified editing context. </summary>
      <param name="context">The editing context to which items are pasted.</param>
      <param name="pastePoint">The location of the paste operation.</param>
      <param name="pastePointReference">A reference to the paste point.</param>
    </member>
    <member name="M:System.Activities.Design.CutCopyPasteHelper.DoPaste(System.Activities.Design.Model.ModelItem,System.Windows.Point,System.Activities.Design.WorkflowViewElement)">
      <summary>Pastes specified items in the specified location.</summary>
      <param name="modelItem">Items to be pasted.</param>
      <param name="pastePoint">The location of the paste operation.</param>
      <param name="pastePointReference">A reference to the paste point.</param>
    </member>
    <member name="M:System.Activities.Design.CutCopyPasteHelper.GetChildContainers(System.Activities.Design.WorkflowViewElement)">
      <summary>Retrieves all the child containers of the specified view element.</summary>
      <returns>Returns <see cref="T:System.Collections.Generic.HashSet`1" />.</returns>
      <param name="workflowViewElement">The parent view element.</param>
    </member>
    <member name="M:System.Activities.Design.CutCopyPasteHelper.GetParentViewElement(System.Windows.DependencyObject)">
      <summary>Retrieves the first <see cref="T:System.Activities.Design.WorkflowViewElement" /> instance in the parent chain.</summary>
      <returns>Returns <see cref="T:System.Activities.Design.WorkflowViewElement" />.</returns>
      <param name="obj">The object whose parent is to be returned.</param>
    </member>
    <member name="M:System.Activities.Design.CutCopyPasteHelper.GetSelectableParentModelItems(System.Activities.Design.Model.ModelItem)">
      <summary>Retrieves all the <see cref="T:System.Activities.Design.Model.ModelItem" /> instances in the parent chain.</summary>
      <returns>Returns <see cref="T:System.Collections.Generic.HashSet`1" />.</returns>
      <param name="modelItem">The item whose parent is to be returned.</param>
    </member>
    <member name="M:System.Activities.Design.CutCopyPasteHelper.RegisterWithParentViewElement(System.Activities.Design.ISourceContainer)">
      <summary>Retrieves the first <see cref="T:System.Activities.Design.WorkflowViewElement" /> instance in the parent chain of the specified container, and adds it as a child container to the view element.</summary>
      <param name="container">The child container to be added.</param>
    </member>
    <member name="F:System.Activities.Design.CutCopyPasteHelper.WorkflowCallbackClipboardFormat">
      <summary>Gets a workflow callback clipboard format, which is unique across all processes.</summary>
    </member>
    <member name="F:System.Activities.Design.CutCopyPasteHelper.WorkflowClipboardFormat">
      <summary>Gets a workflow clipboard format, which is “WorkflowXamlFormat”.</summary>
    </member>
    <member name="T:System.Activities.Design.DefaultCommandExtensionCallback">
      <summary>Provides default key input gestures for most of the Workflow commands. </summary>
    </member>
    <member name="M:System.Activities.Design.DefaultCommandExtensionCallback.#ctor">
      <summary>Initiates a new instance of the <see cref="T:System.Activities.Design.DefaultCommandExtensionCallback" /> class.</summary>
    </member>
    <member name="M:System.Activities.Design.DefaultCommandExtensionCallback.ContainsGesture(System.Windows.Input.RoutedCommand,System.Windows.Input.KeyGesture)">
      <summary>Verifies whether a command contains the specified gesture.</summary>
      <returns>Returns <see cref="T:System.Boolean" />. true if <paramref name="cmd" /> contains <paramref name="gesture" />; otherwise, false.</returns>
      <param name="cmd">The command to be checked.</param>
      <param name="gesture">The gesture to be checked.</param>
    </member>
    <member name="M:System.Activities.Design.DefaultCommandExtensionCallback.OnWorkflowCommandLoaded(System.Activities.Design.CommandInfo)">
      <summary>Adds relevant gestures based on the specified workflow command to be loaded.</summary>
      <param name="commandInfo">The workflow command to be loaded.</param>
    </member>
    <member name="T:System.Activities.Design.DefaultTypeArgumentAttribute">
      <summary>Stores a default type for the generic parameters’ use in the Workflow Designer. </summary>
    </member>
    <member name="M:System.Activities.Design.DefaultTypeArgumentAttribute.#ctor(System.Type)">
      <summary>Creates an instance of the <see cref="T:System.Activities.Design.DefaultTypeArgumentAttribute" /> class with a specified default type.</summary>
      <param name="type">The default <see cref="T:System.Type" /> for generic parameters used.</param>
    </member>
    <member name="P:System.Activities.Design.DefaultTypeArgumentAttribute.Type">
      <summary>Gets the type stored by the <see cref="T:System.Activities.Design.DefaultTypeArgumentAttribute" />.</summary>
      <returns>The <see cref="T:System.Type" /> stored as a default for generic parameters.</returns>
    </member>
    <member name="T:System.Activities.Design.DeleteHelper">
      <summary>Represents a class that can be used to delete an <see cref="System.Activities.Design.EditingContext" /> object. </summary>
    </member>
    <member name="M:System.Activities.Design.DeleteHelper.CanDelete(System.Activities.Design.EditingContext)">
      <summary>Checks whether the deletion operation can be performed by verifying whether the specified <see cref="System.Activities.Design.EditingContext" /> object is null or empty. </summary>
      <returns>true if the deletion can be performed; otherwise, false.</returns>
      <param name="context">The <see cref="System.Activities.Design.EditingContext" /> object to be deleted.</param>
    </member>
    <member name="M:System.Activities.Design.DeleteHelper.Delete(System.Activities.Design.EditingContext)">
      <summary>Deletes the specified <see cref="System.Activities.Design.EditingContext" /> object.</summary>
      <param name="context">The <see cref="System.Activities.Design.EditingContext" /> object to be deleted.</param>
    </member>
    <member name="T:System.Activities.Design.DragDropHelper">
      <summary>Represents a helper class to assist dragging and dropping inside the workflow designer.</summary>
    </member>
    <member name="M:System.Activities.Design.DragDropHelper.AllowDrop(System.Windows.IDataObject,System.Activities.Design.EditingContext,System.Type[])">
      <summary>Gets or sets a value indicating whether the designer can accept data that the user drags onto it.</summary>
      <returns>true if drag-and-drop operations are allowed in the designer; otherwise, false.</returns>
      <param name="draggedDataObject">The data object that is being dragged.</param>
      <param name="context">The <see cref="T:System.Activities.Design.EditingContext" /> for the DragDropHelper.</param>
      <param name="allowedItemTypes">Contains the types that are allowed to be dragged.</param>
    </member>
    <member name="F:System.Activities.Design.DragDropHelper.CompletedEffectsFormat">
      <summary>Specifies the desired effects of the completion of a drag-and-drop operation.</summary>
    </member>
    <member name="M:System.Activities.Design.DragDropHelper.DoDragMove(System.Activities.Design.WorkflowViewElement,System.Windows.Point)">
      <summary>Allows a UI element to be dragged by a mouse with its left button down over an exposed area of the UI element’s client area.
</summary>
      <returns>A value from the <see cref="T:System.Windows.DragDropEffects" /> enumeration that represents the final effect that was performed during the drag-and-drop operation.</returns>
      <param name="draggedViewElement">The UI element on which the operation happens.</param>
      <param name="referencePoint">The location of the drag point.</param>
    </member>
    <member name="F:System.Activities.Design.DragDropHelper.DragAnchorPointFormat">
      <summary>Specifies the format for a drag operation anchor point.</summary>
    </member>
    <member name="F:System.Activities.Design.DragDropHelper.DragSourceProperty">
      <summary>Specifies the drag source.</summary>
    </member>
    <member name="M:System.Activities.Design.DragDropHelper.GetDragDropAnchorPoint(System.Windows.DragEventArgs)">
      <summary>Retrieves the anchor point for a drag-and-drop operation.</summary>
      <returns>Returns <see cref="T:System.Windows.Point" />.</returns>
      <param name="e">Contains the drag event data.</param>
    </member>
    <member name="M:System.Activities.Design.DragDropHelper.GetDragDropCompletedEffects(System.Windows.DataObject)">
      <summary>Retrieves the desired effects of the completion of a drag-and-drop operation.</summary>
      <returns>Returns <see cref="T:System.Windows.DragDropEffects" />.</returns>
      <param name="data">Contains the drag operation data.</param>
    </member>
    <member name="M:System.Activities.Design.DragDropHelper.GetDraggedModelItem(System.Windows.DragEventArgs)">
      <summary>Retrieves the object that is being dragged in a drag-and-drop operation.</summary>
      <returns>Returns <see cref="T:System.Activities.Design.Model.ModelItem" />.</returns>
      <param name="e">Contains the drag event data.</param>
    </member>
    <member name="M:System.Activities.Design.DragDropHelper.GetDroppedObject(System.Windows.DependencyObject,System.Windows.DragEventArgs,System.Activities.Design.EditingContext)">
      <summary>Retrieves the object that is being dropped in a drag-and-drop operation.</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
      <param name="dropTarget">The location for the drag.</param>
      <param name="e">Contains the drag event data.</param>
      <param name="context">The editing context.</param>
    </member>
    <member name="M:System.Activities.Design.DragDropHelper.GetSourceContainer(System.Activities.Design.WorkflowViewElement)">
      <summary>Retrieves the source container for the specified workflow view element.</summary>
      <returns>A <see cref="T:System.Windows.UIElement" /> that is the source container for the specified workflow view element.</returns>
      <param name="workflowViewElement">The element from which the source container is retrieved.</param>
    </member>
    <member name="M:System.Activities.Design.DragDropHelper.GetSourceContainer(System.Windows.DragEventArgs)">
      <summary>Retrieves the source container for the UI element being dragged.</summary>
      <returns>An <see cref="T:System.Activities.Presentation.ISourceContainer" /> for the UI element being dragged.</returns>
      <param name="e">Contains the drag event data.</param>
    </member>
    <member name="F:System.Activities.Design.DragDropHelper.ModelItemDataFormat">
      <summary>Specifies the format for model item data.</summary>
    </member>
    <member name="M:System.Activities.Design.DragDropHelper.SetDragDropCompletedEffects(System.Windows.DragEventArgs,System.Windows.DragDropEffects)">
      <summary>Sets the final effect that is to be performed during the drag-and-drop operation.
</summary>
      <param name="e">Contains the drag event data.</param>
      <param name="completedEffects">The desired effects of a drag-and-drop operation.</param>
    </member>
    <member name="M:System.Activities.Design.DragDropHelper.SetSourceContainer(System.Activities.Design.WorkflowViewElement,System.Windows.UIElement)">
      <summary>Sets the source container for the UI element being dragged.</summary>
      <param name="workflowViewElement">The source container.</param>
      <param name="dragSource">The UI element being dragged.</param>
    </member>
    <member name="F:System.Activities.Design.DragDropHelper.SourceContainerFormat">
      <summary>Specifies the format for a source container.</summary>
    </member>
    <member name="F:System.Activities.Design.DragDropHelper.WorkflowItemTypeNameFormat">
      <summary>Specifies the format for the type name of a workflow item.</summary>
    </member>
    <member name="T:System.Activities.Design.EditorOptionsAttribute">
      <summary>Provides access to the values and properties of editor options.</summary>
    </member>
    <member name="M:System.Activities.Design.EditorOptionsAttribute.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Activities.Design.EditorOptionsAttribute" /> class.</summary>
    </member>
    <member name="M:System.Activities.Design.EditorOptionsAttribute.GetOptionValue``1(System.Collections.IEnumerable,System.String,``0)">
      <summary>Gets the default value of an editor option from a collection of options.</summary>
      <returns>The type of editor option.</returns>
      <param name="attributes">The <see cref="T:System.Collections.IEnumerable" /> collection of attributes associated with the editor options.</param>
      <param name="optionName">The name of the option whose value is retrieved.</param>
      <param name="defaultValue">The default value for the option.</param>
      <typeparam name="T">The type of editor option whose value is retrieved.</typeparam>
    </member>
    <member name="P:System.Activities.Design.EditorOptionsAttribute.Name">
      <summary>Gets or sets the name of the editor options.</summary>
      <returns>The name of the editor options.</returns>
    </member>
    <member name="M:System.Activities.Design.EditorOptionsAttribute.TryGetOptionValue(System.Collections.IEnumerable,System.String,System.Object@)">
      <summary>Determines whether the value of the editor option can be retrieved.</summary>
      <returns>true if the value of the option can be retrieved; otherwise, false.</returns>
      <param name="attributes">The <see cref="T:System.Collections.IEnumerable" /> collection of attributes associated with the editor options.</param>
      <param name="optionName">The name of the option whose value is retrieved.</param>
      <param name="optionValue">The value of the editor option if found; otherwise, null.</param>
    </member>
    <member name="P:System.Activities.Design.EditorOptionsAttribute.TypeId">
      <summary>Gets an object used to uniquely identify the editor options attribute.</summary>
      <returns>The <see cref="T:System.Object" /> that uniquely identifies the editor options attribute.</returns>
    </member>
    <member name="P:System.Activities.Design.EditorOptionsAttribute.Value">
      <summary>Gets or sets the value of the editor options.</summary>
      <returns>The <see cref="T:System.Object" /> that identifies the editor options.</returns>
    </member>
    <member name="T:System.Activities.Design.ErrorItem">
      <summary>Represents an error in the Workflow Designer and provides access to the error information.</summary>
    </member>
    <member name="M:System.Activities.Design.ErrorItem.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Activities.Design.ErrorItem" /> class.</summary>
    </member>
    <member name="P:System.Activities.Design.ErrorItem.Details">
      <summary>Gets or sets the information details about an error.</summary>
      <returns>Information about the error.</returns>
    </member>
    <member name="P:System.Activities.Design.ErrorItem.ItemType">
      <summary>Gets the type of error item.</summary>
      <returns>The<see cref="T:System.Type" /> of error.</returns>
    </member>
    <member name="P:System.Activities.Design.ErrorItem.Message">
      <summary>Gets or sets the error message.</summary>
      <returns>The message associated with the error.</returns>
    </member>
    <member name="T:System.Activities.Design.ErrorReporting">
      <summary>Represents a class that can be used to generate error messages. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Activities.Design.ErrorReporting.ShowErrorMessage(System.String)">
      <summary>Generates the specified error message.</summary>
      <param name="message">The error message to be displayed.</param>
    </member>
    <member name="T:System.Activities.Design.Feature">
      <summary>Extends the design-time features for your custom controls.</summary>
    </member>
    <member name="M:System.Activities.Design.Feature.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Activities.Design.Feature" /> class.</summary>
    </member>
    <member name="M:System.Activities.Design.Feature.Initialize(System.Activities.Design.EditingContext,System.Type)">
      <summary>When implemented in a derived class, associates a type of feature to an editing context.</summary>
      <param name="context">The <see cref="T:System.Activities.Design.EditingContext" /> that contains contextual state information about the designer.</param>
      <param name="modelType">The type of a feature in the editing model.</param>
    </member>
    <member name="T:System.Activities.Design.FeatureAttribute">
      <summary>Stores an object type that represents a <see cref="T:System.Activities.Design.Feature" /> type.</summary>
    </member>
    <member name="M:System.Activities.Design.FeatureAttribute.#ctor(System.Type)">
      <summary>Creates an instance of the <see cref="T:System.Activities.Design.FeatureAttribute" /> class that stores a specified type of feature.</summary>
      <param name="type">The <see cref="T:System.Type" /> that is stored and that represents the editing feature.</param>
    </member>
    <member name="P:System.Activities.Design.FeatureAttribute.Type">
      <summary>Gets the stored type that represents the editing feature.</summary>
      <returns>The <see cref="T:System.Type" /> that is stored and that represents the editing feature.</returns>
    </member>
    <member name="T:System.Activities.Design.IActivityTemplateFactory">
      <summary>Defines the factory for creating instances of the <see cref="T:System.Activities.Activity" /> class.</summary>
    </member>
    <member name="M:System.Activities.Design.IActivityTemplateFactory.Create">
      <summary>Creates an instance of the <see cref="T:System.Activities.Activity" /> class.</summary>
      <returns>Creates an <see cref="T:System.Activities.Activity" /> object.</returns>
    </member>
    <member name="T:System.Activities.Design.IActivityToolboxService"></member>
    <member name="M:System.Activities.Design.IActivityToolboxService.AddCategory(System.String)"></member>
    <member name="M:System.Activities.Design.IActivityToolboxService.AddItem(System.String,System.String)"></member>
    <member name="M:System.Activities.Design.IActivityToolboxService.EnumCategories"></member>
    <member name="M:System.Activities.Design.IActivityToolboxService.EnumItems(System.String)"></member>
    <member name="M:System.Activities.Design.IActivityToolboxService.RemoveCategory(System.String)"></member>
    <member name="M:System.Activities.Design.IActivityToolboxService.RemoveItem(System.String,System.String)"></member>
    <member name="T:System.Activities.Design.ICommandService">
      <summary>Represents a command interface that is used for integration of workflow designer actions (for example, context menu), with custom-provided implementations, such as property browser service, debugging service, and so on.</summary>
    </member>
    <member name="M:System.Activities.Design.ICommandService.CanExecuteCommand(System.Int32)">
      <summary>Verifies whether the specified command can be executed.</summary>
      <returns>true if the specified command can be executed; otherwise, false.</returns>
      <param name="commandId">The command identifier to be checked.</param>
      <exception cref="T:System.NotSupportedException">The command is not supported.</exception>
    </member>
    <member name="M:System.Activities.Design.ICommandService.ExecuteCommand(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
      <summary>Executes the command with the specified command identifier and parameters.</summary>
      <param name="commandId">The command identifier to be checked.</param>
      <param name="parameters">The parameters of the command.</param>
      <exception cref="T:System.NotSupportedException">The command is not supported.</exception>
    </member>
    <member name="M:System.Activities.Design.ICommandService.IsCommandSupported(System.Int32)">
      <summary>Returns a Boolean value that indicates whether the specified command identifier is supported.</summary>
      <returns>true if the specified command ID is supported; otherwise, false.</returns>
      <param name="commandId">The command identifier to be checked.</param>
    </member>
    <member name="T:System.Activities.Design.IIntegratedHelpService">
      <summary>Defines the contract between  and the Workflow Designer for integrated help provided.</summary>
    </member>
    <member name="M:System.Activities.Design.IIntegratedHelpService.AddContextAttribute(System.String,System.String,System.ComponentModel.Design.HelpKeywordType)">
      <summary>Adds the context attribute.</summary>
      <param name="name">The name of the context attribute to add.</param>
      <param name="value">The value of the context attribute to add.</param>
      <param name="keywordType">The <see cref="E:System.ComponentModel.Design.HelpKeywordType" /> that contains identifiers that indicate the type of a Help keyword.</param>
    </member>
    <member name="M:System.Activities.Design.IIntegratedHelpService.RemoveContextAttribute(System.String,System.String)">
      <summary>Removes the context attribute.</summary>
      <param name="name">The name of the context attribute to remove.</param>
      <param name="value">The value of the context attribute to remove.</param>
    </member>
    <member name="M:System.Activities.Design.IIntegratedHelpService.ShowHelpFromKeyword(System.String)"></member>
    <member name="M:System.Activities.Design.IIntegratedHelpService.ShowHelpFromUrl(System.String)"></member>
    <member name="T:System.Activities.Design.ISourceContainer">
      <summary>Provides functions to copy, move, delete, and paste objects. </summary>
    </member>
    <member name="M:System.Activities.Design.ISourceContainer.CanPasteItems(System.Collections.Generic.List{System.Object})">
      <summary>Returns a Boolean that indicates whether the specified objects can be pasted. </summary>
      <returns>true if the number of the specified objects is more than 0 and not null; otherwise, false.</returns>
      <param name="itemsToPaste">The item to be pasted.</param>
    </member>
    <member name="P:System.Activities.Design.ISourceContainer.DroppingTypeResolvingOptions"></member>
    <member name="P:System.Activities.Design.ISourceContainer.IsDefaultContainer">
      <summary>Gets a Boolean value that indicates whether this is the default container.</summary>
      <returns>true if this is the default container; otherwise, false.</returns>
    </member>
    <member name="M:System.Activities.Design.ISourceContainer.OnItemMoved(System.Activities.Design.Model.ModelItem)">
      <summary>An event that allows you to move the specified <see cref="T: System.Activities.Design.Model.ModelItem" />. </summary>
      <param name="modelItem">The item moved.</param>
    </member>
    <member name="M:System.Activities.Design.ISourceContainer.OnItemsCopied(System.Collections.Generic.List{System.Activities.Design.Model.ModelItem})">
      <summary>An event that allows you to get the specified  <see cref="T: System.Activities.Design.Model.ModelItem)" /> instances and clones them.</summary>
      <returns>Returns <see cref="T:System.Object" />, which is a clone of <paramref name="itemsToCopy" />.</returns>
      <param name="itemsToCopy">The items cloned.</param>
    </member>
    <member name="M:System.Activities.Design.ISourceContainer.OnItemsCut(System.Collections.Generic.List{System.Activities.Design.Model.ModelItem})">
      <summary>An event that allows you to clone the specified  <see cref="T: System.Activities.Design.Model.ModelItem" /> instances and deletes them from the current container.</summary>
      <returns>Returns <see cref="T:System.Object" />, which is a clone of <paramref name="itemsToCut" />.</returns>
      <param name="itemsToCut">The items cut.</param>
    </member>
    <member name="M:System.Activities.Design.ISourceContainer.OnItemsDelete(System.Collections.Generic.List{System.Activities.Design.Model.ModelItem})">
      <summary>An event that allows you to get the specified  <see cref="T: System.Activities.Design.Model.ModelItem" /> instances and removes them.</summary>
      <param name="itemsToDelete">The items deleted.</param>
    </member>
    <member name="M:System.Activities.Design.ISourceContainer.OnItemsPasted(System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Object},System.Windows.Point,System.Activities.Design.WorkflowViewElement)">
      <summary>An event that allows you to paste the specified <see cref="T: System.Activities.Design.Model.ModelItem" /> instances to the specified location.</summary>
      <param name="itemsToPaste">The items   pasted.</param>
      <param name="metadata">Metadata associated with the items   pasted.</param>
      <param name="pastePoint">The location of the paste.</param>
      <param name="pastePointReference">A reference to the paste point.</param>
    </member>
    <member name="T:System.Activities.Design.ISourceContainerEvents">
      <summary>Provides base events for the <see cref="T:System.Activities.Design.ISourceContainer" /> class.</summary>
    </member>
    <member name="M:System.Activities.Design.ISourceContainerEvents.ContainerLoaded(System.Activities.Design.ISourceContainer)">
      <summary>Occurs when the specified container is loaded.</summary>
      <param name="container">The container to be loaded.</param>
    </member>
    <member name="M:System.Activities.Design.ISourceContainerEvents.ContainerUnloaded(System.Activities.Design.ISourceContainer)">
      <summary>Occurs when the specified container is unloaded.</summary>
      <param name="container">The container to be unloaded.</param>
    </member>
    <member name="M:System.Activities.Design.ISourceContainerEvents.DefaultContainerLoaded(System.Activities.Design.ISourceContainer)">
      <summary>Occurs when the default container is loaded.</summary>
      <param name="container">The default container to be loaded.</param>
    </member>
    <member name="M:System.Activities.Design.ISourceContainerEvents.DefaultContainerUnloaded(System.Activities.Design.ISourceContainer)">
      <summary>Occurs when the default container is unloaded.</summary>
      <param name="container">The default container to be unloaded.</param>
    </member>
    <member name="T:System.Activities.Design.IWorkflowCommandExtensionCallback">
      <summary>Provides additional functions when a  specified workflow command is loaded. </summary>
    </member>
    <member name="M:System.Activities.Design.IWorkflowCommandExtensionCallback.OnWorkflowCommandLoaded(System.Activities.Design.CommandInfo)">
      <summary>Provides additional functions based on the specified workflow command to be loaded.</summary>
      <param name="commandInfo">The workflow command to be loaded.</param>
    </member>
    <member name="T:System.Activities.Design.MutableKeyValuePair`2">
      <summary>Defines a key/value pair that can be modified. 
</summary>
      <typeparam name="TKey"></typeparam>
      <typeparam name="TValue"></typeparam>
    </member>
    <member name="M:System.Activities.Design.MutableKeyValuePair`2.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.MutableKeyValuePair`2" /> class.</summary>
    </member>
    <member name="M:System.Activities.Design.MutableKeyValuePair`2.#ctor(`0,`1)">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.MutableKeyValuePair`2" /> class with the specified key and value.</summary>
      <param name="key">The type of the key. 
</param>
      <param name="value">The type of the value. 

</param>
    </member>
    <member name="P:System.Activities.Design.MutableKeyValuePair`2.Key">
      <summary>Gets or sets the key in the key/value pair.</summary>
    </member>
    <member name="P:System.Activities.Design.MutableKeyValuePair`2.Value">
      <summary>Gets or sets the value in the key/value pair.</summary>
    </member>
    <member name="T:System.Activities.Design.ReadOnlyState">
      <summary>Indicates whether an object is read-only.</summary>
    </member>
    <member name="M:System.Activities.Design.ReadOnlyState.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.ReadOnlyState" /> class.</summary>
    </member>
    <member name="P:System.Activities.Design.ReadOnlyState.IsReadOnly">
      <summary>Gets a value that indicates whether the object is read-only.</summary>
      <returns>true if the object is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Activities.Design.ReadOnlyState.ItemType">
      <summary>Gets the type of the current object.</summary>
      <returns>Returns <see cref="T:System.Type" />.</returns>
    </member>
    <member name="T:System.Activities.Design.TypeResolvingOptionsAttribute">
      <summary>Specifies the options available for resolving types.</summary>
    </member>
    <member name="M:System.Activities.Design.TypeResolvingOptionsAttribute.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Activities.Design.TypeResolvingOptionsAttribute" /> class.</summary>
    </member>
    <member name="M:System.Activities.Design.TypeResolvingOptionsAttribute.#ctor(System.Activities.Design.View.TypeResolvingOptions)">
      <summary>Creates an instance of the <see cref="T:System.Activities.Design.TypeResolvingOptionsAttribute" /> class with specified type resolving options.</summary>
      <param name="options">The <see cref="T:System.Activities.Design.View.TypeResolvingOptions" /> that are supported.</param>
    </member>
    <member name="P:System.Activities.Design.TypeResolvingOptionsAttribute.TypeResolvingOptions">
      <summary>Gets or sets the options for resolving types.</summary>
      <returns>An instance of <see cref="T:System.Activities.Design.View.TypeResolvingOptions" /> that specifies the options available for resolving types.</returns>
    </member>
    <member name="T:System.Activities.Design.UndoEngine">
      <summary>Provides undo and redo operation implementations for designers.</summary>
    </member>
    <member name="M:System.Activities.Design.UndoEngine.#ctor(System.Activities.Design.EditingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.UndoEngine" /> class.</summary>
      <param name="context">The editing context.</param>
    </member>
    <member name="M:System.Activities.Design.UndoEngine.AddUndoUnit(System.Activities.Design.UndoUnit)">
      <summary>Adds the specified unit to the undo stack.  </summary>
      <param name="unit">The undo unit to add.  </param>
    </member>
    <member name="P:System.Activities.Design.UndoEngine.IsUndoRedoInProgress">
      <summary>Gets a <see cref="T:System.Boolean" /> value indicating whether an undo or redo operation is in process.</summary>
      <returns>true if an undo or redo operation is in process; otherwise, false.</returns>
    </member>
    <member name="M:System.Activities.Design.UndoEngine.Redo">
      <summary>Removes the last <see cref="T:System.Activities.Design.UndoUnit" /> instance from the redo stack, and performs a redo operation on the unit. The <see cref="T:System.Activities.Design.UndoUnit" /> instance is then put into the undo stack.</summary>
    </member>
    <member name="M:System.Activities.Design.UndoEngine.Undo">
      <summary>Removes the last <see cref="T:System.Activities.Design.UndoUnit" /> instance from the undo stack, and performs an undo operation on the unit. The <see cref="T:System.Activities.Design.UndoUnit" /> instance is then put into the redo stack.</summary>
    </member>
    <member name="E:System.Activities.Design.UndoEngine.UndoUnitAdded">
      <summary>Occurs when an undo unit is added to the undo stack.</summary>
    </member>
    <member name="E:System.Activities.Design.UndoEngine.UndoUnitDiscarded">
      <summary>Occurs when an undo unit is removed from the undo stack, without first performing an undo operation.</summary>
    </member>
    <member name="T:System.Activities.Design.UndoUnit">
      <summary>Represents a single unit of undoable work. Such a unit is added to an undo stack, and methods are provided to traverse the stack and perform an undo action on each unit.
</summary>
    </member>
    <member name="M:System.Activities.Design.UndoUnit.#ctor(System.Activities.Design.EditingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.UndoUnit" /> class.</summary>
      <param name="context">The editing context.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.Activities.Design.UndoUnit.ApplyGlobalState">
      <summary>Applies the saved designer as the root designer.</summary>
    </member>
    <member name="P:System.Activities.Design.UndoUnit.Description">
      <summary>Gets or sets the description of this undo unit.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Activities.Design.UndoUnit.Redo"></member>
    <member name="M:System.Activities.Design.UndoUnit.SaveGlobalState">
      <summary>Persists the current root designer.</summary>
    </member>
    <member name="M:System.Activities.Design.UndoUnit.Undo">
      <summary>Undoes the content contained in this undo unit. </summary>
    </member>
    <member name="T:System.Activities.Design.UndoUnitEventArgs">
      <summary>Represents the argument that is passed to the <see cref="E:System.Activities.Design.UndoEngine.UndoUnitAddedevent" /> event.</summary>
    </member>
    <member name="M:System.Activities.Design.UndoUnitEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.UndoUnitEventArgs" /> class.</summary>
    </member>
    <member name="P:System.Activities.Design.UndoUnitEventArgs.UndoUnit">
      <summary>Gets or sets the <see cref="T:System.Activities.Design.UndoUnit" /> to be passed to the <see cref="E:System.Activities.Design.UndoEngine.UndoUnitAddedevent" /> event.</summary>
      <returns>Returns <see cref="T:System.Activities.Design.UndoUnit" />.</returns>
    </member>
    <member name="T:System.Activities.Design.UpdatableGenericArgumentsFeature">
      <summary>Associates a design-time editing feature to a specific editing context.</summary>
    </member>
    <member name="M:System.Activities.Design.UpdatableGenericArgumentsFeature.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Activities.Design.UpdatableGenericArgumentsFeature" /> class.</summary>
    </member>
    <member name="M:System.Activities.Design.UpdatableGenericArgumentsFeature.Initialize(System.Activities.Design.EditingContext,System.Type)">
      <param name="context">The <see cref="T:System.Activities.Design.EditingContext" /> that contains contextual state information about the designer.</param>
      <param name="modelType">The type of the feature to associate with the editing context.</param>
    </member>
    <member name="T:System.Activities.Design.WindowHelperService">
      <summary>Provides functionalities to register and unregister delegates for event notifications, as well as set ownership for windows.</summary>
    </member>
    <member name="M:System.Activities.Design.WindowHelperService.#ctor(System.IntPtr)">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.WindowHelperService" /> class with the specific handle to a parent window.</summary>
      <param name="hwnd">A handle to a parent window.</param>
    </member>
    <member name="P:System.Activities.Design.WindowHelperService.ParentWindowHwnd">
      <summary>Gets or sets the handle of the parent window.</summary>
      <returns>Returns <see cref="T:System.IntPtr" />.</returns>
    </member>
    <member name="M:System.Activities.Design.WindowHelperService.RegisterWindowMessageHandler(System.Activities.Design.WindowMessage)">
      <summary>Registers the specified delegate for event notifications. </summary>
      <returns>true if the operation is successful; otherwise, false.</returns>
      <param name="callback">The delegate to be registered for event notifications.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="callback" /> is null.</exception>
    </member>
    <member name="M:System.Activities.Design.WindowHelperService.TrySetWindowOwner(System.Windows.DependencyObject,System.Windows.Window)">
      <summary>Assign the window to be the owner of the specified window. </summary>
      <returns>true if the operation is successful; otherwise, false.</returns>
      <param name="source">The owner of <paramref name="target" />.</param>
      <param name="target">The window that is to be owned by <paramref name="source" />.</param>
    </member>
    <member name="M:System.Activities.Design.WindowHelperService.UnregisterWindowMessageHandler(System.Activities.Design.WindowMessage)">
      <summary>Unregisters the specified delegate for event notifications. </summary>
      <returns>true if the operation is successful; otherwise, false.</returns>
      <param name="callback">The delegate to be removed from event notifications.</param>
    </member>
    <member name="T:System.Activities.Design.WindowMessage">
      <summary>Represents the method that will handle registering a window message.</summary>
    </member>
    <member name="T:System.Activities.Design.WorkflowCommandExtensionItem">
      <summary>Provides functions to update each workflow's designer command (that is, input gestures collection). You should provide an <see cref="T:System.Activities.Design.IWorkflowCommandExtensionCallback" /> implementation to receive notifications.</summary>
    </member>
    <member name="M:System.Activities.Design.WorkflowCommandExtensionItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.WorkflowCommandExtensionItem" /> class.</summary>
    </member>
    <member name="M:System.Activities.Design.WorkflowCommandExtensionItem.#ctor(System.Activities.Design.IWorkflowCommandExtensionCallback)">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.WorkflowCommandExtensionItem" /> class with the specified <see cref="T:System.Activities.Design.IWorkflowCommandExtensionCallback" /> implementation to receive notifications.</summary>
      <param name="callback">An <see cref="T:System.Activities.Design.IWorkflowCommandExtensionCallback" /> implementation to receive notifications.</param>
    </member>
    <member name="P:System.Activities.Design.WorkflowCommandExtensionItem.ItemType">
      <summary>Returns the type of this extension item.</summary>
      <returns>Returns <see cref="T:System.Type" />.</returns>
    </member>
    <member name="T:System.Activities.Design.WorkflowDesigner">
      <summary>Provides a designer canvas, which renders the visual representation of a workflow model as it is being designed.</summary>
    </member>
    <member name="M:System.Activities.Design.WorkflowDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.WorkflowDesigner" /> class.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowDesigner.Context">
      <summary>Gets or sets an <see cref="T:System.Activities.Design.EditingContext" /> object that is a collection of services shared between all elements contained in the designer and used to interact between the host and the designer. Services are published and requested through the <see cref="T:System.Activities.Design.EditingContext" />. </summary>
      <returns>An <see cref="T:System.Activities.Design.EditingContext" /> object.</returns>
    </member>
    <member name="P:System.Activities.Design.WorkflowDesigner.ContextMenu">
      <summary>Gets the context menu for this designer.</summary>
      <returns>Returns <see cref="T:System.Windows.Controls.ContextMenu" />.</returns>
    </member>
    <member name="P:System.Activities.Design.WorkflowDesigner.DebugManagerView">
      <summary>Provides a <see cref="T:System.Activities.Design.Debug.DebuggerService" /> that is used for run-time debugging. </summary>
      <returns>Returns an object that implements <see cref="T:System.Activities.Design.Debug.IDesignerDebugView" />.</returns>
    </member>
    <member name="M:System.Activities.Design.WorkflowDesigner.DeserializeString(System.String)">
      <summary>Converts a XAML string into a workflow.</summary>
      <returns>Returns a workflow as an <see cref="T:System.Object" />.</returns>
      <param name="text">The XAML string to convert.</param>
    </member>
    <member name="M:System.Activities.Design.WorkflowDesigner.Flush">
      <summary>Saves the current state of the workflow to the <see cref="P:System.WorkflowModel.Design.WorkflowDesigner.Text" /> property.</summary>
    </member>
    <member name="M:System.Activities.Design.WorkflowDesigner.IsInErrorState">
      <summary>Gets a Boolean value that indicates if the workflow designer is in error state.</summary>
      <returns>true if the workflow designer is in error state; otherwise, false..</returns>
    </member>
    <member name="M:System.Activities.Design.WorkflowDesigner.Load">
      <summary>Loads a workflow from the XAML contained in the <see cref="P:System.Activities.Design.WorkflowDesigner.Text" /> property.</summary>
    </member>
    <member name="M:System.Activities.Design.WorkflowDesigner.Load(System.Object)">
      <summary>Loads a workflow.</summary>
      <param name="instance">The root of the workflow to load.</param>
    </member>
    <member name="M:System.Activities.Design.WorkflowDesigner.Load(System.String)">
      <summary>Loads a workflow from the XAML contained in the specified file.</summary>
      <param name="fileName">The file name of the XAML file.</param>
    </member>
    <member name="E:System.Activities.Design.WorkflowDesigner.PendingTextChanged"></member>
    <member name="P:System.Activities.Design.WorkflowDesigner.PropertyInspectorFontAndColorData">
      <summary>Sets the font and color data for the property inspector in a serialized, dictionary format.</summary>
      <returns>Returns a<see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Activities.Design.WorkflowDesigner.PropertyInspectorView">
      <summary>Gets the property inspector, which is commonly known as the property grid. </summary>
      <returns>Returns <see cref="T:System.Windows.UIElement" />.</returns>
    </member>
    <member name="M:System.Activities.Design.WorkflowDesigner.Save(System.String)">
      <summary>Saves the workflow to a XAML file.</summary>
      <param name="fileName">The file name of the XAML file.</param>
    </member>
    <member name="P:System.Activities.Design.WorkflowDesigner.Text">
      <summary>Gets or sets the XAML string representation of the workflow.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="E:System.Activities.Design.WorkflowDesigner.TextChanged">
      <summary>Occurs when the <see cref="P:System.Activities.Design.WorkflowDesigner.Text" /> property value changes.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowDesigner.View">
      <summary>Returns a UI element that allows the user to view and edit the workflow visually. This UI element is commonly referred to as the workflow canvas.</summary>
      <returns>Returns a <see cref="T:System.Windows.UIElement" /> object.</returns>
    </member>
    <member name="T:System.Activities.Design.WorkflowDesignerColors">
      <summary>Enables colors and color gradients to be associated with aspects of the elements and shell bars used in the workflow designer user interface.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowDesignerColors.DesignerViewBackgroundColor">
      <summary>Gets the color for the designer background.</summary>
      <returns>The <see cref="T:System.Windows.Media.Color" /> for the designer background.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowDesignerColors.DesignerViewBackgroundColorKey">
      <summary>Specifies the color key to be used for the designer background. This field is constant.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowDesignerColors.DesignerViewShellBarCaptionActiveColor">
      <summary>Gets the color of the caption for the <see cref="T:System.Activities.Design.WorkflowViewElement" /> active designer shell bar.</summary>
      <returns>The <see cref="T:System.Windows.Media.Color" /> of the caption for the active designer shell bar.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowDesignerColors.DesignerViewShellBarCaptionActiveColorKey">
      <summary>Specifies the active color key for the caption of the designer shell bar. This field is constant.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowDesignerColors.DesignerViewShellBarCaptionColor">
      <summary>Gets the color of the caption for the <see cref="T:System.Activities.Design.WorkflowViewElement" /> designer shell bar.</summary>
      <returns>The <see cref="T:System.Windows.Media.Color" /> of the caption for the designer shell bar.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowDesignerColors.DesignerViewShellBarCaptionColorKey">
      <summary>Specifies the color key for the designer shell bar caption. This field is constant.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowDesignerColors.DesignerViewShellBarColorGradientBeginColor">
      <summary>Gets the beginning color for the color gradient of the <see cref="T:System.Activities.Design.WorkflowViewElement" /> designer shell bar.</summary>
      <returns>The beginning <see cref="T:System.Windows.Media.Color" /> for the color gradient for the designer shell bar.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowDesignerColors.DesignerViewShellBarColorGradientBeginKey">
      <summary>Specifies the beginning color key for the color gradient of the designer shell bar. This field is constant.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowDesignerColors.DesignerViewShellBarColorGradientEndColor">
      <summary>Gets the ending color for the color gradient of the <see cref="T:System.Activities.Design.WorkflowViewElement" /> designer shell bar.</summary>
      <returns>The ending <see cref="T:System.Windows.Media.Color" /> for the color gradient for the designer shell bar.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowDesignerColors.DesignerViewShellBarColorGradientEndKey">
      <summary>Specifies the ending color key for the color gradient of the designer shell bar. This field is constant.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowDesignerColors.DesignerViewShellBarControlBackgroundColor">
      <summary>Gets the background color of the <see cref="T:System.Activities.Design.WorkflowViewElement" /> designer shell bar control.</summary>
      <returns>The background <see cref="T:System.Windows.Media.Color" /> of the designer shell bar control.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowDesignerColors.DesignerViewShellBarControlBackgroundColorKey">
      <summary>Specifies the background color key for the control of the designer shell bar. This field is constant.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowDesignerColors.DesignerViewShellBarHoverColorGradientBeginColor">
      <summary>Gets the beginning color for the hover color gradient of the <see cref="T:System.Activities.Design.WorkflowViewElement" /> designer shell bar.</summary>
      <returns>The beginning hover <see cref="T:System.Windows.Media.Color" /> for the color gradient for the designer shell bar.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowDesignerColors.DesignerViewShellBarHoverColorGradientBeginKey">
      <summary>Specifies the beginning hover color key for the color gradient of the designer shell bar. This field is constant.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowDesignerColors.DesignerViewShellBarHoverColorGradientEndColor">
      <summary>Gets the ending color for the hover color gradient of the <see cref="T:System.Activities.Design.WorkflowViewElement" /> designer shell bar.</summary>
      <returns>The ending hover <see cref="T:System.Windows.Media.Color" /> for the color gradient for the designer shell bar.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowDesignerColors.DesignerViewShellBarHoverColorGradientEndKey">
      <summary>Specifies the ending hover color key for the color gradient of the designer shell bar. This field is constant.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowDesignerColors.DesignerViewShellBarSelectedColorGradientBeginColor">
      <summary>Gets the beginning color of the color gradient for the selected <see cref="T:System.Activities.Design.WorkflowViewElement" /> shell bar.</summary>
      <returns>The beginning <see cref="T:System.Windows.Media.Color" /> for the color gradient for the selected designer shell bar.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowDesignerColors.DesignerViewShellBarSelectedColorGradientBeginKey">
      <summary>Specifies the beginning color key for the color gradient of the selected designer shell bar. This field is constant.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowDesignerColors.DesignerViewShellBarSelectedColorGradientEndColor">
      <summary>Gets the ending color of the color gradient for the selected <see cref="T:System.Activities.Design.WorkflowViewElement" /> shell bar.</summary>
      <returns>The ending <see cref="T:System.Windows.Media.Color" /> for the color gradient for the selected designer shell bar.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowDesignerColors.DesignerViewShellBarSelectedColorGradientEndKey">
      <summary>Specifies the ending color key for color gradient of the selected designer shell bar. This field is constant.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowDesignerColors.DesignerViewStatusBarBackgroundColor">
      <summary>Gets the color for the designer status bar background, using the preset key.</summary>
      <returns>The <see cref="T:System.Windows.Media.Color" /> for the designer status bar background.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowDesignerColors.DesignerViewStatusBarBackgroundColorKey">
      <summary>Specifies the color key to be used for the designer status bar background. This field is constant.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowDesignerColors.FontFamily">
      <summary>Gets the font family for the <see cref="T:System.Activities.Design.WorkflowViewElement" />, using the preset key.</summary>
      <returns>The <see cref="T:System.Windows.Media.FontFamily" /> for the view element.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowDesignerColors.FontFamilyKey">
      <summary>Specifies the key to be used for the font family. This field is constant.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowDesignerColors.FontSize">
      <summary>Gets the font size for the <see cref="T:System.Activities.Design.WorkflowViewElement" />, using the preset key.</summary>
      <returns>The <see cref="T:System.Double" /> that indicates the font size.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowDesignerColors.FontSizeKey">
      <summary>Specifies the key to be used for the font size. This field is constant.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowDesignerColors.FontWeight">
      <summary>Gets the font weight to be used for the <see cref="T:System.Activities.Design.WorkflowViewElement" />, using the preset key.</summary>
      <returns>The <see cref="T:System.Windows.FontWeight" /> used for the view element.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowDesignerColors.FontWeightKey">
      <summary>Specifies the key to be used for the font weight. This field is constant.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowDesignerColors.WorkflowViewElementBackgroundColor">
      <summary>Gets the background color for the <see cref="T:System.Activities.Design.WorkflowViewElement" /> using the preset key.</summary>
      <returns>The background <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowDesignerColors.WorkflowViewElementBackgroundColorKey">
      <summary>Specifies the color key to be used for the <see cref="T:System.Activities.Design.WorkflowViewElement" /> background. This field is constant.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowDesignerColors.WorkflowViewElementBorderColor">
      <summary>Gets the color for the <see cref="T:System.Activities.Design.WorkflowViewElement" /> border, using the preset key.</summary>
      <returns>The <see cref="T:System.Windows.Media.Color" /> for the view element border.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowDesignerColors.WorkflowViewElementBorderColorKey">
      <summary>Specifies the color key to be used for the <see cref="T:System.Activities.Design.WorkflowViewElement" /> border. This field is constant.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowDesignerColors.WorkflowViewElementCaptionColor">
      <summary>Gets the color for the <see cref="T:System.Activities.Design.WorkflowViewElement" /> caption, using the preset key.</summary>
      <returns>The <see cref="T:System.Windows.Media.Color" /> for the view element caption.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowDesignerColors.WorkflowViewElementCaptionColorKey">
      <summary>Specifies the color key to be used for the <see cref="T:System.Activities.Design.WorkflowViewElement" /> caption. This field is constant.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowDesignerColors.WorkflowViewElementSelectedBackgroundColor">
      <summary>Gets the color for the <see cref="T:System.Activities.Design.WorkflowViewElement" /> selected background, using the preset key.</summary>
      <returns>The background <see cref="T:System.Windows.Media.Color" /> for the view element.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowDesignerColors.WorkflowViewElementSelectedBackgroundColorKey">
      <summary>Specifies the color key to be used for the selected background of the <see cref="T:System.Activities.Design.WorkflowViewElement" />. This field is constant.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowDesignerColors.WorkflowViewElementSelectedBorderColor">
      <summary>Gets the color for the <see cref="T:System.Activities.Design.WorkflowViewElement" /> selected border, using the preset key.</summary>
      <returns>The selected border <see cref="T:System.Windows.Media.Color" /> for the view element.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowDesignerColors.WorkflowViewElementSelectedBorderColorKey">
      <summary>Specifies the color key for the <see cref="T:System.Activities.Design.WorkflowViewElement" /> selected border. This field is constant.</summary>
    </member>
    <member name="T:System.Activities.Design.WorkflowElementDialog">
      <summary>Represents a dialog box for the workflow element.</summary>
    </member>
    <member name="M:System.Activities.Design.WorkflowElementDialog.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.WorkflowElementDialog" /> class.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowElementDialog.Context">
      <summary>Gets or sets the editing context associated with this dialog box.</summary>
      <returns>Returns <see cref="T:System.Activities.Design.EditingContext" />.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowElementDialog.ContextProperty">
      <summary>Identifies the <see cref="P:System.Activities.Design.WorkflowElementDialog.Context" /> dependency property.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowElementDialog.EnableMaximizeButton">
      <summary>Gets or sets a Boolean value that determines whether the maximize button is enabled.</summary>
      <returns>true if the maximize button is enabled; otherwise, false.</returns>
    </member>
    <member name="P:System.Activities.Design.WorkflowElementDialog.EnableMinimizeButton">
      <summary>Gets or sets a Boolean value that determines whether the minimize button is enabled.</summary>
      <returns>true if the minimize button is enabled; otherwise, false.</returns>
    </member>
    <member name="M:System.Activities.Design.WorkflowElementDialog.EnableOk(System.Boolean)">
      <summary>Enables or disables the OK button of the dialog based on the specified value.</summary>
      <param name="enabled">The OK button is enabled if this is true; otherwise, it is disabled.</param>
    </member>
    <member name="P:System.Activities.Design.WorkflowElementDialog.ModelItem">
      <summary>Gets or sets the <see cref="T:System.Activities.Design.Model.ModelItem" /> associated with this dialog box.</summary>
      <returns>Returns <see cref="T:System.Activities.Design.Model.ModelItem" />.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowElementDialog.ModelItemProperty">
      <summary>Identifies the <see cref="P:System.Activities.Design.WorkflowElementDialog.ModelItem" /> dependency property.</summary>
    </member>
    <member name="M:System.Activities.Design.WorkflowElementDialog.OnInitialized(System.EventArgs)">
      <summary>Raises the Initialized event.</summary>
      <param name="e">Contains event data.</param>
    </member>
    <member name="M:System.Activities.Design.WorkflowElementDialog.OnModelItemChanged(System.Object)">
      <summary>When overridden in a derived class, occurs when the <see cref="T:System.Activities.Design.Model.ModelItem" /> is changed.</summary>
      <param name="newItem">The new <see cref="T:System.Activities.Design.Model.ModelItem" />.</param>
    </member>
    <member name="M:System.Activities.Design.WorkflowElementDialog.OnWorkflowElementDialogClosed(System.Nullable{System.Boolean})">
      <summary>For derived classes, this method is used for freeing up memory and other clean up operations.</summary>
      <param name="dialogResult">A Boolean value that specifies whether the dialog box returned a result after closing.</param>
    </member>
    <member name="P:System.Activities.Design.WorkflowElementDialog.Owner">
      <summary>Gets or sets the owner of this dialog box.</summary>
      <returns>Returns <see cref="T:System.Windows.DependencyObject" />.</returns>
    </member>
    <member name="M:System.Activities.Design.WorkflowElementDialog.Show">
      <summary>Displays the dialog window.</summary>
    </member>
    <member name="M:System.Activities.Design.WorkflowElementDialog.ShowOkCancel">
      <summary>Gets a value that indicates whether the OK or Cancel button is shown.</summary>
      <returns>true if the OK or Cancel button is shown; otherwise, false.</returns>
    </member>
    <member name="P:System.Activities.Design.WorkflowElementDialog.Title">
      <summary>Gets or sets the title of this dialog box.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowElementDialog.TitleProperty">
      <summary>Identifies the <see cref="P:System.Activities.Design.WorkflowElementDialog.Title" /> dependency property.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowElementDialog.WindowResizeMode">
      <summary>Gets or sets the resize mode of the window.</summary>
      <returns>Returns a <see cref="T:System.Windows.ResizeMode" /> value..</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowElementDialog.WindowResizeModeProperty">
      <summary>Identifies the <see cref="P:System.Activities.Design.WorkflowElementDialog.WindowResizeMode" /> dependency property.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowElementDialog.WindowSizeToContent">
      <summary>Gets or sets a value that indicates whether a window will automatically size itself to fit the size of its content.</summary>
      <returns>Returns a <see cref="T:System.Windows.SizeToContent" /> value..</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowElementDialog.WindowSizeToContentProperty">
      <summary>Identifies the <see cref="P:System.Activities.Design.WorkflowElementDialog.WindowSizeToContent" /> dependency property.</summary>
    </member>
    <member name="T:System.Activities.Design.WorkflowElementDialogWindow">
      <summary>Represents the dialog window of a workflow element.</summary>
    </member>
    <member name="M:System.Activities.Design.WorkflowElementDialogWindow.#ctor(System.Activities.Design.WorkflowElementDialog,System.Boolean,System.Boolean,System.Boolean)"></member>
    <member name="M:System.Activities.Design.WorkflowElementDialogWindow.InitializeComponent">
      <summary>Initializes the dialog window.</summary>
    </member>
    <member name="M:System.Activities.Design.WorkflowElementDialogWindow.OnInitialized(System.EventArgs)"></member>
    <member name="M:System.Activities.Design.WorkflowElementDialogWindow.OnSourceInitialized(System.EventArgs)"></member>
    <member name="M:System.Activities.Design.WorkflowElementDialogWindow.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)">
      <summary>Attaches events and names to compiled content.</summary>
      <param name="connectionId">The connection ID.</param>
      <param name="target">The target.</param>
    </member>
    <member name="T:System.Activities.Design.WorkflowFileItem">
      <summary>Represents a file context item.</summary>
    </member>
    <member name="M:System.Activities.Design.WorkflowFileItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.WorkflowFileItem" /> class.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowFileItem.ItemType">
      <summary>Returns the item type for this file item.</summary>
      <returns>Returns <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.Activities.Design.WorkflowFileItem.LoadedFile">
      <summary>Returns the name of the file that is being loaded.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Activities.Design.WorkflowItemPresenter">
      <summary>Provides a visual editor to edit ModelItem objects, and provides an area for the user to drag and drop, and otherwise edit composed elements.</summary>
    </member>
    <member name="M:System.Activities.Design.WorkflowItemPresenter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.WorkflowItemPresenter" /> class.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowItemPresenter.AllowedItemType">
      <summary>Gets or sets the AllowedItemType.</summary>
      <returns>A Type that contains the allowed item.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowItemPresenter.AllowedItemTypeProperty">
      <summary>Identifies the <see cref="P:System.Activities.Design.WorkflowItemPresenter.AllowedItemType" /> dependency property.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowItemPresenter.DroppingTypeResolvingOptions">
      <summary>Gets and sets the <see cref="T:System.Activities.Design.View.TypeResolvingOptions" /> for the <see cref="T:System.Activities.Design.WorkflowItemPresenter" />.</summary>
      <returns>Returns a <see cref="T:System.Activities.Design.View.TypeResolvingOptions" />..</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowItemPresenter.DroppingTypeResolvingOptionsProperty">
      <summary>Identifies the <see cref="P:System.Activities.Design.WorkflowItemPresenter.DroppingTypeResolvingOptions" /> dependency property.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowItemPresenter.HintText">
      <summary>Gets or sets the string that contains the hint text for the <see cref="T:System.Activities.Design.WorkflowItemPresenter" /> control.</summary>
      <returns>The hint text for the <see cref="T:System.Activities.Design.WorkflowItemPresenter" /> control.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowItemPresenter.HintTextProperty">
      <summary>Identifies the <see cref="P:System.Activities.Design.WorkflowItemPresenter.HintText" /> dependency property.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowItemPresenter.IsDefaultContainer">
      <summary>Gets or sets a value that indicates whether this is the default container.</summary>
      <returns>true if this is the default container; otherwise, false.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowItemPresenter.IsDefaultContainerProperty">
      <summary>Identifies the <see cref="P:System.Activities.Design.WorkflowItemPresenter.IsDefaultContainer" /> dependency property.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowItemPresenter.Item">
      <summary>Gets or sets the current item of the <see cref="T:System.Activities.Design.WorkflowItemPresenter" /> control.</summary>
      <returns>The ModelItem associated with the <see cref="T:System.Activities.Design.WorkflowItemPresenter" /> control.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowItemPresenter.ItemProperty">
      <summary>Identifies the <see cref="P:System.Activities.Design.WorkflowItemPresenter.Items" /> dependency property.</summary>
    </member>
    <member name="M:System.Activities.Design.WorkflowItemPresenter.System#Activities#Design#ISourceContainer#CanPasteItems(System.Collections.Generic.List{System.Object})">
      <summary>Returns a Boolean that indicates whether the specified objects can be pasted. 

</summary>
      <returns>true if the number of the specified objects is more than 0 and not null; otherwise, false.</returns>
      <param name="itemsToPaste">Objects to be pasted.</param>
    </member>
    <member name="M:System.Activities.Design.WorkflowItemPresenter.System#Activities#Design#ISourceContainer#OnItemMoved(System.Activities.Design.Model.ModelItem)">
      <summary>Occurs when the specified model item is changed.</summary>
      <param name="modelItem">The model item that is changed.</param>
    </member>
    <member name="M:System.Activities.Design.WorkflowItemPresenter.System#Activities#Design#ISourceContainer#OnItemsCopied(System.Collections.Generic.List{System.Activities.Design.Model.ModelItem})">
      <summary>Occurs when the specified  <see cref="T:System.Activities.Design.Model.ModelItem" /> instances are cloned.</summary>
      <returns>A clone of <paramref name="itemsToCopy" />.</returns>
      <param name="itemsToCopy">The <see cref="T:System.Activities.Design.Model.ModelItem" /> instances to be copied.</param>
    </member>
    <member name="M:System.Activities.Design.WorkflowItemPresenter.System#Activities#Design#ISourceContainer#OnItemsCut(System.Collections.Generic.List{System.Activities.Design.Model.ModelItem})">
      <summary>Clones the specified <see cref="T:System.Activities.Design.Model.ModelItem" /> instances and deletes them from the current container. 

</summary>
      <returns>A clone of <paramref name="itemsToCut" />.</returns>
      <param name="itemsToCut">The items to be cut.</param>
    </member>
    <member name="M:System.Activities.Design.WorkflowItemPresenter.System#Activities#Design#ISourceContainer#OnItemsDelete(System.Collections.Generic.List{System.Activities.Design.Model.ModelItem})">
      <summary>Gets the specified <see cref="T:System.Activities.Design.Model.ModelItem" /> instances and removes them.</summary>
      <param name="itemsToDelete">The items to be deleted.</param>
    </member>
    <member name="M:System.Activities.Design.WorkflowItemPresenter.System#Activities#Design#ISourceContainer#OnItemsPasted(System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Object},System.Windows.Point,System.Activities.Design.WorkflowViewElement)">
      <summary>Occurs when the specified ModelItem instance is pasted to the specified location.</summary>
      <param name="itemsToPaste">The item to be pasted.
</param>
      <param name="metaData">Metadata associated with the item to be pasted.
</param>
      <param name="pastePoint">The location of the paste.</param>
      <param name="pastePointReference">A reference to the paste point.</param>
    </member>
    <member name="T:System.Activities.Design.WorkflowItemsPresenter">
      <summary>Represents a control that can be used to present a collection of objects on a design surface.</summary>
    </member>
    <member name="M:System.Activities.Design.WorkflowItemsPresenter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.WorkflowItemsPresenter" /> class.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowItemsPresenter.AllowedItemType">
      <summary>Gets and sets the AllowedItemType.</summary>
      <returns>A Type that contains the allowed item.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowItemsPresenter.AllowedItemTypeProperty">
      <summary>Identifies the <see cref="P:System.Activities.Design.WorkflowItemsPresenter.AllowedItemType" /> dependency property.</summary>
    </member>
    <member name="M:System.Activities.Design.WorkflowItemsPresenter.CanPasteItems(System.Collections.Generic.List{System.Object})">
      <summary>Returns a Boolean that indicates whether the specified objects can be pasted. 
</summary>
      <returns>true if the number of the specified objects is more than 0 and not null; otherwise, false.</returns>
      <param name="itemsToPaste">Objects to be pasted.</param>
    </member>
    <member name="P:System.Activities.Design.WorkflowItemsPresenter.DroppingTypeResolvingOptions">
      <summary>Gets and sets the <see cref="T:System.Activities.Design.View.TypeResolvingOptions" /> for the <see cref="T:System.Activities.Design.WorkflowItemPresenter" />.</summary>
      <returns>Returns a <see cref="T:System.Activities.Design.View.TypeResolvingOptions" />.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowItemsPresenter.DroppingTypeResolvingOptionsProperty">
      <summary>Identifies the <see cref="P:System.Activities.Design.WorkflowItemPresenter.DroppingTypeResolvingOptions" /> dependency property.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowItemsPresenter.FooterTemplate">
      <summary>Gets or sets the DataTemplate that defines how the footer section of the <see cref="T:System.Activities.Design.WorkflowItemsPresenter" /> control is displayed.</summary>
      <returns>A DataTemplate that defines how the footer section of the <see cref="T:System.Activities.Design.WorkflowItemsPresenter" /> control is displayed.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowItemsPresenter.FooterTemplateProperty">
      <summary>Identifies the <see cref="P:System.WorkflowModel.Design.WorkflowItemsPresenter.FooterTemplate" /> dependency property.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowItemsPresenter.HeaderTemplate">
      <summary>Gets or sets the DataTemplate that defines how the header section of the <see cref="T:System.Activities.Design.WorkflowItemsPresenter" /> control is displayed.</summary>
      <returns>A DataTemplate that defines how the header section of the <see cref="T:System.Activities.Design.WorkflowItemsPresenter" /> control is displayed.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowItemsPresenter.HeaderTemplateProperty">
      <summary>Identifies the <see cref="P:System.Activities.Design.WorkflowItemsPresenter.HeaderTemplate" /> dependency property.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowItemsPresenter.HintText">
      <summary>Gets or sets the string that contains the hint text for the <see cref="T:System.Activities.Design.WorkflowItemsPresenter" /> control.</summary>
      <returns>The hint text for the <see cref="T:System.Activities.Design.WorkflowItemsPresenter" /> control.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowItemsPresenter.HintTextProperty">
      <summary>Identifies the <see cref="P:System.Activities.Design.WorkflowItemsPresenter.HintText" /> dependency property.</summary>
    </member>
    <member name="F:System.Activities.Design.WorkflowItemsPresenter.IndexProperty">
      <summary>Identifies the <see cref="F:System.Activities.Design.WorkflowItemsPresenter.IndexProperty" /> dependency property.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowItemsPresenter.IsDefaultContainer">
      <summary>Returns a Boolean value that indicates if this is the default container.</summary>
      <returns>true if this is if this is the default container; otherwise, false..</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowItemsPresenter.IsDefaultContainerProperty">
      <summary>Identifies the <see cref="P:System.Activities.Design.WorkflowItemsPresenter.IsDefaultContainer" />dependency property.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowItemsPresenter.Items">
      <summary>Gets or sets the collection used to generate the content of the <see cref="T:System.Activities.Design.WorkflowItemsPresenter" />.</summary>
      <returns>A ModelItemCollection used to generate the content of the <see cref="T:System.Activities.Design.WorkflowItemsPresenter" />.</returns>
    </member>
    <member name="P:System.Activities.Design.WorkflowItemsPresenter.ItemsPanel">
      <summary>Gets or sets the template that defines the panel that controls the layout of items.</summary>
      <returns>An ItemsPanelTemplate that defines the panel to use for the layout of the items.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowItemsPresenter.ItemsPanelProperty">
      <summary>Identifies the <see cref="P:System.Activities.Design.WorkflowItemsPresenter.ItemsPanel" /> dependency property.</summary>
    </member>
    <member name="F:System.Activities.Design.WorkflowItemsPresenter.ItemsProperty">
      <summary>Identifies the <see cref="P:System.Activities.Design.WorkflowItemsPresenter.Items" /> dependency property.</summary>
    </member>
    <member name="M:System.Activities.Design.WorkflowItemsPresenter.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Activities.Design.WorkflowItemsPresenter" />-specific AutomationPeer implementation for the  infrastructure. Implement this method in your derived class to add class handling for this event.</summary>
      <returns>The type-specific AutomationPeer implementation.</returns>
    </member>
    <member name="M:System.Activities.Design.WorkflowItemsPresenter.OnDragEnter(System.Windows.DragEventArgs)">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
      <param name="e">Contains event data.</param>
    </member>
    <member name="M:System.Activities.Design.WorkflowItemsPresenter.OnDragOver(System.Windows.DragEventArgs)">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
      <param name="e">Contains event data.</param>
    </member>
    <member name="M:System.Activities.Design.WorkflowItemsPresenter.OnDrop(System.Windows.DragEventArgs)">
      <summary>Invoked when an object is dragged into the bounds of a <see cref="T:System.Activities.Design.WorkflowItemsPresenter" /> control. Implement this method in your derived class to add class handling for this event.</summary>
      <param name="e">The DragEventArgs instance that contains the event data.</param>
    </member>
    <member name="M:System.Activities.Design.WorkflowItemsPresenter.OnInitialized(System.EventArgs)">
      <summary>Invoked when a <see cref="T:System.Activities.Design.WorkflowItemsPresenter" /> object is initialized. Implement this method in your derived class to add class handling for this event.</summary>
      <param name="e">The EventArgs instance that contains the event data.</param>
    </member>
    <member name="M:System.Activities.Design.WorkflowItemsPresenter.OnItemMoved(System.Activities.Design.Model.ModelItem)">
      <summary>Informs the <see cref="T:System.Activities.Design.WorkflowItemsPresenter" /> that a <see cref="T:System.Activities.Design.Model.ModelItem" /> was moved.</summary>
      <param name="modelItem">The <see cref="T:System.Activities.Design.Model.ModelItem" /> that was moved.</param>
    </member>
    <member name="M:System.Activities.Design.WorkflowItemsPresenter.OnItemsCopied(System.Collections.Generic.List{System.Activities.Design.Model.ModelItem})">
      <summary>Occurs when the specified  <see cref="T:System.Activities.Design.Model.ModelItem" /> instances are cloned.</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
      <param name="itemsToCopy">The <see cref="T:System.Activities.Design.Model.ModelItem" /> instances to be copied.</param>
    </member>
    <member name="M:System.Activities.Design.WorkflowItemsPresenter.OnItemsCut(System.Collections.Generic.List{System.Activities.Design.Model.ModelItem})">
      <summary>Occurs when the specified  <see cref="T:System.Activities.Design.Model.ModelItem" /> instances are cut.</summary>
      <returns>A clone of <paramref name="itemsToCut" />.</returns>
      <param name="itemsToCut">The <see cref="T:System.Activities.Design.Model.ModelItem" /> instances to be cut.</param>
    </member>
    <member name="M:System.Activities.Design.WorkflowItemsPresenter.OnItemsDelete(System.Collections.Generic.List{System.Activities.Design.Model.ModelItem})">
      <summary>Occurs when the specified  <see cref="T:System.Activities.Design.Model.ModelItem" /> instances are deleted.</summary>
      <param name="itemsToDelete">The <see cref="T:System.Activities.Design.Model.ModelItem" /> instances to be deleted.</param>
    </member>
    <member name="M:System.Activities.Design.WorkflowItemsPresenter.OnItemsPasted(System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Object},System.Windows.Point,System.Activities.Design.WorkflowViewElement)">
      <summary>Pastes the specified <see cref="T:System.Activities.Design.Model.ModelItem" /> instances to the specified location. </summary>
      <param name="itemsToPaste">The items to be pasted.</param>
      <param name="metaData">Metadata associated with the items to be pasted.

</param>
      <param name="pastePoint">The location of the paste.

</param>
      <param name="pastePointReference">A reference to the paste point.
</param>
    </member>
    <member name="P:System.Activities.Design.WorkflowItemsPresenter.SpacerTemplate">
      <summary>Gets or sets the DataTemplate that defines how the spacer of the <see cref="T:System.Activities.Design.WorkflowItemsPresenter" /> control is displayed.</summary>
      <returns>A DataTemplate that defines how the spacer of the <see cref="T:System.Activities.Design.WorkflowItemsPresenter" /> control is displayed.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowItemsPresenter.SpacerTemplateProperty">
      <summary>Identifies the <see cref="P:System.Activities.Design.WorkflowItemsPresenter.SpacerTemplate" /> dependency property.</summary>
    </member>
    <member name="T:System.Activities.Design.WorkflowViewElement">
      <summary>Base class for any workflow UI element that visually represents an underlying model item.</summary>
    </member>
    <member name="M:System.Activities.Design.WorkflowViewElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.WorkflowViewElement" /> class.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowViewElement.ActiveSourceContainer">
      <summary>Gets the active source container associated with the workflow view element.</summary>
      <returns>The <see cref="T:System.Activities.Design.ISourceContainer" /> associated with this element.</returns>
    </member>
    <member name="P:System.Activities.Design.WorkflowViewElement.Collapsible">
      <summary>Gets or sets a value that indicates whether the element can be collapsed.</summary>
      <returns>true if the element can be collapsed; otherwise, false.</returns>
    </member>
    <member name="M:System.Activities.Design.WorkflowViewElement.ContainerLoaded(System.Activities.Design.ISourceContainer)">
      <summary>Adds the container to the list of containers associated with the workflow view element.</summary>
      <param name="container">The <see cref="T:System.Activities.Design.ISourceContainer" /> that is loaded.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="container" /> is null.</exception>
    </member>
    <member name="M:System.Activities.Design.WorkflowViewElement.ContainerUnloaded(System.Activities.Design.ISourceContainer)">
      <summary>Removes the container from the list of containers associated with the workflow view element.</summary>
      <param name="container">The <see cref="T:System.Activities.Design.ISourceContainer" /> that is unloaded.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="container" /> is null.</exception>
    </member>
    <member name="P:System.Activities.Design.WorkflowViewElement.Context">
      <summary>Gets or sets the editing context that is shared by all elements contained in a workflow designer.</summary>
      <returns>The <see cref="T:System.Activities.Design.EditingContext" /> object for the workflow designer that contains the workflow view element.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowViewElement.ContextProperty">
      <summary>Identifies the <see cref="P:System.Activities.Design.WorkflowViewElement.Context" /> dependency property. This is a read-only field.</summary>
    </member>
    <member name="M:System.Activities.Design.WorkflowViewElement.DefaultContainerLoaded(System.Activities.Design.ISourceContainer)">
      <summary>Sets the default source container to a specified source container.</summary>
      <param name="container">The <see cref="T:System.Activities.Design.ISourceContainer" /> to which the default container is set.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="container" /> is null.</exception>
    </member>
    <member name="M:System.Activities.Design.WorkflowViewElement.DefaultContainerUnloaded(System.Activities.Design.ISourceContainer)">
      <summary>Sets the default source container to null if it is equal to a specified source container.</summary>
      <param name="container">The <see cref="T:System.Activities.Design.ISourceContainer" /> with which the default container is compared.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="container" /> is null.</exception>
    </member>
    <member name="P:System.Activities.Design.WorkflowViewElement.DefaultSourceContainer">
      <summary>Gets the default source container associated with the workflow view element.</summary>
      <returns>The <see cref="T:System.Activities.Design.ISourceContainer" /> object associated with the element.</returns>
    </member>
    <member name="P:System.Activities.Design.WorkflowViewElement.Designer">
      <summary>Gets the designer associated with the workflow view element.</summary>
      <returns>The <see cref="T:System.Activities.Design.View.DesignerView" /> associated with the element.</returns>
    </member>
    <member name="P:System.Activities.Design.WorkflowViewElement.ExpandState">
      <summary>Gets or sets a value that indicates whether the state of the element can be expanded.</summary>
      <returns>true if the state of the element can be expanded; otherwise, false.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowViewElement.ExpandStateProperty">
      <summary>Identifies the <see cref="P:System.Activities.Design.WorkflowViewElement.ExpandState" /> dependency property. This is a read-only field.</summary>
    </member>
    <member name="M:System.Activities.Design.WorkflowViewElement.GetAutomationHelpText">
      <summary>When implemented in a derived class, retrieves the automation help text.</summary>
      <returns>The default implementation is to return an empty <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Activities.Design.WorkflowViewElement.GetAutomationIdMemberName">
      <summary>When implemented in a derived class, gets the name of a property of the model item associated with the element that is used as an automation ID. </summary>
      <returns>The name to use as an automation ID. The base class always returns null.</returns>
    </member>
    <member name="P:System.Activities.Design.WorkflowViewElement.IsReadOnly">
      <summary>Gets or sets a value that indicates whether the workflow view element is read only.</summary>
      <returns>true if the element is read only; otherwise, false.</returns>
    </member>
    <member name="P:System.Activities.Design.WorkflowViewElement.IsRootDesigner">
      <summary>Gets or sets a value that indicates whether this is the root designer for this element.</summary>
      <returns>true if this is the root designer; otherwise, false.</returns>
    </member>
    <member name="P:System.Activities.Design.WorkflowViewElement.ModelItem">
      <summary>Gets or sets the underlying <see cref="T:System.Activities.Design.Model.ModelItem" /> object associated with the workflow view element.</summary>
      <returns>A <see cref="T:System.Activities.Design.Model.ModelItem" /> object that is a wrapper around a model instance or an in-memory representation of the underlying workflow.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowViewElement.ModelItemProperty">
      <summary>Identifies the <see cref="P:System.Activities.Design.WorkflowViewElement.ModelItem" /> dependency property. This is a read-only field.</summary>
    </member>
    <member name="M:System.Activities.Design.WorkflowViewElement.OnContextMenuLoaded(System.Windows.Controls.ContextMenu)">
      <summary>Invoked when the context menu is loaded. Implement this method in a derived class to handle this event. </summary>
      <param name="menu">The <see cref="T:System.Windows.Controls.ContextMenu" /> that is loaded.</param>
    </member>
    <member name="M:System.Activities.Design.WorkflowViewElement.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Activities.Design.WorkflowViewElement" />-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation for the  infrastructure.</summary>
      <returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</returns>
    </member>
    <member name="M:System.Activities.Design.WorkflowViewElement.OnDragEnter(System.Windows.DragEventArgs)">
      <summary>Raises the <see cref="T:System.Windows.UIElement.OnDragEnter" /> event.</summary>
      <param name="e">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Activities.Design.WorkflowViewElement.OnDragOver(System.Windows.DragEventArgs)">
      <summary>Raises the <see cref="T:System.Windows.UIElement.OnDragOver" /> event.</summary>
      <param name="e">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Activities.Design.WorkflowViewElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>Invoked when an element receives keyboard focus. Implement this method in a derived class to handle this event.</summary>
      <param name="e">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Activities.Design.WorkflowViewElement.OnInitialized(System.EventArgs)">
      <summary>Sets bindings and raises the initialized event.</summary>
      <param name="e">The <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Activities.Design.WorkflowViewElement.OnModelItemChanged(System.Object)">
      <summary>Invoked when the underlying model item is changed. Implement this method in a derived class to handle this event.</summary>
      <param name="newItem">An <see cref="T:System.Object" /> that represents the changed state of the model item.</param>
    </member>
    <member name="M:System.Activities.Design.WorkflowViewElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when the mouse button is pressed.</summary>
      <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> instance that contains the event data. This event data reports details about the mouse button that was pressed and the state handled.</param>
    </member>
    <member name="M:System.Activities.Design.WorkflowViewElement.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Invoked when the mouse is moved.</summary>
      <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs" /> instance that contains the event data. </param>
    </member>
    <member name="M:System.Activities.Design.WorkflowViewElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when the mouse button is released. </summary>
      <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> instance that contains the event data. The event data reports that the mouse button was released.</param>
    </member>
    <member name="M:System.Activities.Design.WorkflowViewElement.OnPreviewDragEnter(System.Windows.DragEventArgs)">
      <summary>Invoked when an unhandled drag attached to the specified event reaches enters an element in its route that is derived from this class..</summary>
      <param name="e">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Activities.Design.WorkflowViewElement.OnPreviewDragLeave(System.Windows.DragEventArgs)">
      <summary>Invoked when an unhandled drag attached to the specified event reaches leaves an element in its route that is derived from this class.</summary>
      <param name="e">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Activities.Design.WorkflowViewElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when an unhandled mouse release attached to the specified event reaches an element in its route that is derived from this class.</summary>
      <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data. The event data reports that one or more mouse buttons were released.</param>
    </member>
    <member name="M:System.Activities.Design.WorkflowViewElement.OnReadOnlyChanged(System.Boolean)">
      <summary>Invoked when the read-only property is changed.</summary>
      <param name="isReadOnly">true when the read-only property is changed; otherwise, false.</param>
    </member>
    <member name="M:System.Activities.Design.WorkflowViewElement.OnShowExpandedChanged(System.Boolean)">
      <summary>Invoked when the show expanded property is changed.</summary>
      <param name="newValue">true when the show expanded property is changed; otherwise, false.</param>
    </member>
    <member name="P:System.Activities.Design.WorkflowViewElement.PinState">
      <summary>Gets or sets a value that indicates whether the state of the workflow view element requires a pin.</summary>
      <returns>true if the state requires a pin; otherwise, false.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowViewElement.PinStateProperty">
      <summary>Identifies the <see cref="P:System.Activities.Design.WorkflowViewElement.PinState" /> dependency property. This is a read-only field.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowViewElement.ShowExpanded">
      <summary>Gets a value that indicates whether the workflow view element can be shown in an expanded form.</summary>
      <returns>true if the element can be expanded; otherwise, false.</returns>
    </member>
    <member name="F:System.Activities.Design.WorkflowViewElement.ShowExpandedProperty">
      <summary>Identifies the <see cref="P:System.Activities.Design.WorkflowViewElement.ShowExpanded" /> dependency property. This is a read-only field.</summary>
    </member>
    <member name="P:System.Activities.Design.WorkflowViewElement.SourceContainers">
      <summary>Gets the source containers associated with the workflow view element.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IList`1" /> that contains the <see cref="T:System.Activities.Design.SourceContainers" /> associated with the element.</returns>
    </member>
    <member name="P:System.Activities.Design.WorkflowViewElement.ViewService">
      <returns>Gets the <see cref="T:System.Activities.Design.Services.ViewService" /> associated with the workflow view element. </returns>
    </member>
    <member name="P:System.Activities.Design.WorkflowViewElement.ViewStateService">
      <summary>Gets the <see cref="T:System.Activities.Design.View.ViewStateService" /> defined in the <see cref="T:System.Activities.Design.EditingContext" />. A shortcut to this property is by accessing <see cref="P:System.Activities.Design.EditingContext.Services" />.</summary>
      <returns>Returns <see cref="T:System.Activities.Design.View.ViewStateService" />.</returns>
    </member>
    <member name="T:System.Activities.Design.Debug.BreakpointInfo">
      <summary>Handles breakpoint location and type information that is used in conjunction with the debugging of an activity.</summary>
    </member>
    <member name="M:System.Activities.Design.Debug.BreakpointInfo.#ctor(System.Activities.Debugger.SourceLocation,System.Activities.Design.BreakpointTypes)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Design.Debug.BreakpointInfo" /> class that handles a breakpoint and <see cref="P:System.Activities.Design.Debug.BreakpointInfo.BreakpointType" /> objects, in conjunction with debugging an activity.</summary>
      <param name="sourceLocation">The location in the source code where a breakpoint is set.</param>
      <param name="breakpointType">The breakpoint type setting.</param>
    </member>
    <member name="P:System.Activities.Design.Debug.BreakpointInfo.BreakpointType">
      <summary>Gets or sets the enumerated list of breakpoint types.</summary>
      <returns>An enumeration of breakpoint types.</returns>
    </member>
    <member name="P:System.Activities.Design.Debug.BreakpointInfo.SourceLocation">
      <summary>Gets or sets the location of a breakpoint in the XAML form for the activity object instance.</summary>
      <returns>A row and column location in a XAML file.</returns>
    </member>
    <member name="T:System.Activities.Design.Debug.DebuggerService">
      <summary>Manages the placement of breakpoints for a debugging process.</summary>
    </member>
    <member name="M:System.Activities.Design.Debug.DebuggerService.#ctor(System.Activities.Design.EditingContext)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Design.Debug.DebuggerService" /> class with the specified editing context.</summary>
      <param name="context">The activity designer contextual state.</param>
    </member>
    <member name="P:System.Activities.Design.Debug.DebuggerService.CurrentContext">
      <summary>Sets the current scope of execution in the source file.</summary>
      <returns>A position in the source file that marks the start of execution.</returns>
    </member>
    <member name="P:System.Activities.Design.Debug.DebuggerService.CurrentLocation">
      <summary>Sets the current location of execution.</summary>
      <returns>A location in the source file.</returns>
    </member>
    <member name="M:System.Activities.Design.Debug.DebuggerService.DeleteBreakpoint(System.Activities.Debugger.SourceLocation)">
      <summary>Deletes a breakpoint from its location in the source file.</summary>
      <param name="sourceLocation">A location in the source file.</param>
    </member>
    <member name="M:System.Activities.Design.Debug.DebuggerService.GetBreakpointLocations">
      <summary>Returns a list of the latest breakpoint locations.</summary>
      <returns>A list of breakpoints of type <see cref="P:System.Activities.Design.Debug.BreakpointInfo.SourceLocation" /> culled from the source file.</returns>
    </member>
    <member name="M:System.Activities.Design.Debug.DebuggerService.GetExactLocation(System.Activities.Debugger.SourceLocation)">
      <summary>Returns an exact source file location based on the start and end line numbers of the activity in its serialized Xaml form.</summary>
      <returns>An exact location in the source file.</returns>
      <param name="approximateLocation">A source file location known to be inexact.</param>
    </member>
    <member name="P:System.Activities.Design.Debug.DebuggerService.HideSourceFileName"></member>
    <member name="M:System.Activities.Design.Debug.DebuggerService.InsertBreakpoint(System.Activities.Debugger.SourceLocation,System.Activities.Design.BreakpointTypes)">
      <summary>Inserts a new breakpoint of the specified type at the specified location.</summary>
      <param name="sourceLocation">The location in the source file that receives the new breakpoint.</param>
      <param name="breakpointType">The type of the breakpoint; for example, None, Enabled, Bounded, or Conditional.</param>
    </member>
    <member name="P:System.Activities.Design.Debug.DebuggerService.IsDebugging">
      <summary>Sets an indicator that signals that debugging is active.</summary>
      <returns>true while debugging is active; otherwise, false.</returns>
    </member>
    <member name="M:System.Activities.Design.Debug.DebuggerService.ResetBreakpoints">
      <summary>Resets breakpoints and prepares for breakpoint refresh.</summary>
    </member>
    <member name="P:System.Activities.Design.Debug.DebuggerService.SelectedLocation">
      <summary>Gets the currently selected location from the designer.</summary>
      <returns>The position in the source file that is currently selected.</returns>
    </member>
    <member name="M:System.Activities.Design.Debug.DebuggerService.UpdateBreakpoint(System.Activities.Debugger.SourceLocation,System.Activities.Design.BreakpointTypes)">
      <summary>Updates the appearance of a specified breakpoint to show the specified type.</summary>
      <param name="sourceLocation">The location of the breakpoint to update.</param>
      <param name="newBreakpointType">A new breakpoint type from the <see cref="T:System.Activities.Design.BreakpointTypes" /> enumeration.</param>
    </member>
    <member name="M:System.Activities.Design.Debug.DebuggerService.UpdateSourceLocations(System.Collections.Generic.Dictionary{System.Object,System.Activities.Debugger.SourceLocation})">
      <summary>Collects the new mapping of model item and breakpoints from SourceLocationMapping.</summary>
      <param name="newSourceLocationMapping">A list of model item and breakpoint pairs.</param>
    </member>
    <member name="T:System.Activities.Design.Debug.IDesignerDebugView">
      <summary>When implemented in a derived class, provides functionality for an activity designer debugger view.</summary>
    </member>
    <member name="P:System.Activities.Design.Debug.IDesignerDebugView.CurrentContext">
      <summary>When implemented in a derived class, sets the scope of execution within the source file.</summary>
      <returns>The starting point location for execution within the source file.</returns>
    </member>
    <member name="P:System.Activities.Design.Debug.IDesignerDebugView.CurrentLocation">
      <summary>When implemented in a derived class, sets the current location of execution in a file being processed by the debugger.</summary>
      <returns>
        <see cref="T:System.Activities.Debugger.SourceLocation" />.</returns>
    </member>
    <member name="M:System.Activities.Design.Debug.IDesignerDebugView.DeleteBreakpoint(System.Activities.Debugger.SourceLocation)">
      <summary>When implemented in a derived class, removes a breakpoint at the specified location in the source file.</summary>
      <param name="sourceLocation">A point within a source file, defined by an intersection of row and column positions in the file contents.</param>
    </member>
    <member name="M:System.Activities.Design.Debug.IDesignerDebugView.GetBreakpointLocations">
      <summary>When implemented in a derived class, returns a list of currently set  breakpoint location-and-type pairs.</summary>
      <returns>A list of location-and-type pairs.</returns>
    </member>
    <member name="M:System.Activities.Design.Debug.IDesignerDebugView.GetExactLocation(System.Activities.Debugger.SourceLocation)">
      <summary>When implemented in a derived class, returns an exact location in a source file based upon an approximate location.</summary>
      <returns>An exact location within the source file.</returns>
      <param name="approximateLocation">A position within a source file that is known to be inexact.</param>
    </member>
    <member name="P:System.Activities.Design.Debug.IDesignerDebugView.HideSourceFileName"></member>
    <member name="M:System.Activities.Design.Debug.IDesignerDebugView.InsertBreakpoint(System.Activities.Debugger.SourceLocation,System.Activities.Design.BreakpointTypes)">
      <summary>When implemented in a derived class, places a breakpoint at the specified location in a file.</summary>
      <param name="sourceLocation">A point within a source file, defined by an intersection of row and column positions in the file contents.</param>
      <param name="breakpointType">Member of an enumeration of breakpoint types which may include Bounded, Conditional, Enabled, and None.</param>
    </member>
    <member name="P:System.Activities.Design.Debug.IDesignerDebugView.IsDebugging">
      <summary>When implemented in a derived class, sets an indicator that signals whether debugging is enabled.</summary>
      <returns>true if debugging is enabled; otherwise, false.</returns>
    </member>
    <member name="M:System.Activities.Design.Debug.IDesignerDebugView.ResetBreakpoints">
      <summary>When implemented in a derived class, resets the position of the breakpoint in a file.</summary>
    </member>
    <member name="P:System.Activities.Design.Debug.IDesignerDebugView.SelectedLocation">
      <summary>When implemented in a derived class, gets the selected <see cref="P:System.Activities.Design.Debug.BreakpointInfo.SourceLocation" />.</summary>
      <returns>A point within a source file, defined by an intersection of row and column positions in the file contents.</returns>
    </member>
    <member name="M:System.Activities.Design.Debug.IDesignerDebugView.UpdateBreakpoint(System.Activities.Debugger.SourceLocation,System.Activities.Design.BreakpointTypes)">
      <summary>When implemented in a derived class, updates the type of the breakpoint at a specified location in a file.</summary>
      <param name="sourceLocation">A point within a source file, defined by an intersection of row and column positions in the file contents.</param>
      <param name="breakpointType">A specified type of breakpoint; for example, line, method, or exception breakpoints.</param>
    </member>
    <member name="T:System.Activities.Design.Hosting.IMultiTargetingSupportService"></member>
    <member name="M:System.Activities.Design.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(System.Reflection.AssemblyName)"></member>
    <member name="M:System.Activities.Design.Hosting.IMultiTargetingSupportService.GetRuntimeType(System.Type)"></member>
    <member name="M:System.Activities.Design.Hosting.IMultiTargetingSupportService.IsSupportedType(System.Type)"></member>
    <member name="T:System.Activities.Design.ModelTree.AttachedPropertiesService">
      <summary>Attaches properties to the current instance.</summary>
    </member>
    <member name="M:System.Activities.Design.ModelTree.AttachedPropertiesService.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Design.ModelTree.AttachedPropertiesService" /> class.</summary>
    </member>
    <member name="M:System.Activities.Design.ModelTree.AttachedPropertiesService.AddProperty(System.Activities.Design.ModelTree.AttachedProperty)">
      <summary>Adds the specified property to the properties of the current instance.</summary>
      <param name="property">The property to add. </param>
    </member>
    <member name="T:System.Activities.Design.ModelTree.AttachedProperty">
      <summary>Describes an attached property.</summary>
    </member>
    <member name="M:System.Activities.Design.ModelTree.AttachedProperty.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.ModelTree.AttachedProperty" /> class.</summary>
    </member>
    <member name="M:System.Activities.Design.ModelTree.AttachedProperty.GetValue(System.Activities.Design.Model.ModelItem)">
      <summary>Retrieves the value of the specified model item.</summary>
      <returns>Returns a <see cref="T:System.Object" /> that contains the value of the model item..</returns>
      <param name="modelItem">The model item.</param>
    </member>
    <member name="P:System.Activities.Design.ModelTree.AttachedProperty.IsBrowsable">
      <summary>Gets or sets a Boolean value indicating whether the <see cref="T:System.Activities.Design.ModelTree.AttachedProperty" /> is browsable. </summary>
      <returns>true if the <see cref="T:System.Activities.Design.ModelTree.AttachedProperty" /> is browsable; otherwise, false.</returns>
    </member>
    <member name="P:System.Activities.Design.ModelTree.AttachedProperty.IsReadOnly">
      <summary>Gets a value that determines whether the attached property is read-only.</summary>
      <returns>true if the property is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Activities.Design.ModelTree.AttachedProperty.Name">
      <summary>Gets or sets the name of the property.</summary>
      <returns>Returns a <see cref="T:System.String" /> that contains the name of the property..</returns>
    </member>
    <member name="M:System.Activities.Design.ModelTree.AttachedProperty.NotifyPropertyChanged(System.Activities.Design.Model.ModelItem)">
      <summary>Creates a notification that indicates that the specified model item has changed. </summary>
      <param name="modelItem">The item that has changed.</param>
    </member>
    <member name="P:System.Activities.Design.ModelTree.AttachedProperty.OwnerType">
      <summary>Gets or sets the owner type.</summary>
      <returns>Returns a <see cref="T:System.Type" /> that contains the owner type..</returns>
    </member>
    <member name="M:System.Activities.Design.ModelTree.AttachedProperty.ResetValue(System.Activities.Design.Model.ModelItem)">
      <summary>Resets the specified model item to the default value.</summary>
      <param name="modelItem">The model item to reset.</param>
    </member>
    <member name="M:System.Activities.Design.ModelTree.AttachedProperty.SetValue(System.Activities.Design.Model.ModelItem,System.Object)">
      <summary>Sets the specified model item to the specified value.</summary>
      <param name="modelItem">The model item to set.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="P:System.Activities.Design.ModelTree.AttachedProperty.Type">
      <summary>Gets the type. </summary>
      <returns>Returns a <see cref="T:System.Type" /> that contains the type..</returns>
    </member>
    <member name="T:System.Activities.Design.ModelTree.AttachedProperty`1">
      <summary>Contains a collection of attached properties. </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Activities.Design.ModelTree.AttachedProperty`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.ModelTree.AttachedProperty`1" /> class.</summary>
    </member>
    <member name="P:System.Activities.Design.ModelTree.AttachedProperty`1.Getter">
      <summary>Gets or sets the getter.</summary>
      <returns>Returns a <see cref="T:System.Func`2" /> that contains the getter..</returns>
    </member>
    <member name="M:System.Activities.Design.ModelTree.AttachedProperty`1.GetValue(System.Activities.Design.Model.ModelItem)">
      <summary>Retrieves the value of the specified model item.</summary>
      <returns>Returns a <see cref="T:System.Object" /> that contains the value..</returns>
      <param name="modelItem">The model item.</param>
    </member>
    <member name="P:System.Activities.Design.ModelTree.AttachedProperty`1.IsReadOnly">
      <summary>Gets a value that determines if the collection is read-only.</summary>
      <returns>Returns true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.Activities.Design.ModelTree.AttachedProperty`1.ResetValue(System.Activities.Design.Model.ModelItem)">
      <summary>Resets the specified model item to the default value.</summary>
      <param name="modelItem">The model item to reset.</param>
    </member>
    <member name="P:System.Activities.Design.ModelTree.AttachedProperty`1.Setter">
      <summary>Gets or sets the setter.</summary>
      <returns>Returns a <see cref="T:System.Action`2" /> that contains the setter..</returns>
    </member>
    <member name="M:System.Activities.Design.ModelTree.AttachedProperty`1.SetValue(System.Activities.Design.Model.ModelItem,System.Object)">
      <summary>Sets the specified model item to the specified value.</summary>
      <param name="modelItem">The model item to set.</param>
      <param name="Value">The value to set.</param>
    </member>
    <member name="P:System.Activities.Design.ModelTree.AttachedProperty`1.Type">
      <summary>Gets the type of the collection.</summary>
      <returns>Returns a <see cref="T:System.Type" /> that contains the type of the collection..</returns>
    </member>
    <member name="T:System.Activities.Design.ModelTree.Change">
      <summary>Abstract class that, when implemented, describes a change to the model tree. </summary>
    </member>
    <member name="M:System.Activities.Design.ModelTree.Change.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Design.ModelTree.Change" /> class. </summary>
    </member>
    <member name="M:System.Activities.Design.ModelTree.Change.Apply">
      <summary>When implemented in a derived class, applies the change to the current instance.</summary>
    </member>
    <member name="P:System.Activities.Design.ModelTree.Change.Description">
      <summary>When implemented in a derived class, gets a description of the change.</summary>
      <returns>Returns a <see cref="T:System.String" /> that contains a description of the change. .</returns>
    </member>
    <member name="M:System.Activities.Design.ModelTree.Change.GetInverse">
      <summary>When implemented in a derived class, retrieves the inverse of the change. </summary>
      <returns>Returns a <see cref="T:System.Activities.Design.ModelTree.Change" /> that contains the inverse of the current instance. .</returns>
    </member>
    <member name="T:System.Activities.Design.ModelTree.EditingScope">
      <summary>Describes the editing scope.</summary>
    </member>
    <member name="M:System.Activities.Design.ModelTree.EditingScope.CanComplete">
      <summary>Determines whether the current editing scope instance can complete.</summary>
      <returns>true if the editing scope can complete; otherwise, false.</returns>
    </member>
    <member name="P:System.Activities.Design.ModelTree.EditingScope.Changes">
      <summary>Gets a list of changes.</summary>
      <returns>Returns a <see cref="T:System.Collections.Generic.List`1" /> that contains the changes.</returns>
    </member>
    <member name="P:System.Activities.Design.ModelTree.EditingScope.HasEffectiveChanges">
      <summary>Gets  a Boolean that specifies whether changes have been applied to the editing scope. </summary>
      <returns>true if changes have been applied to the editing scope; otherwise, false..</returns>
    </member>
    <member name="M:System.Activities.Design.ModelTree.EditingScope.OnComplete">
      <summary>Raises the Complete event.</summary>
    </member>
    <member name="M:System.Activities.Design.ModelTree.EditingScope.OnRevert(System.Boolean)">
      <summary>Raises the Revert event.</summary>
      <param name="finalizing">Not used in this implementation.</param>
    </member>
    <member name="T:System.Activities.Design.ModelTree.EditingScopeEventArgs">
      <summary>Provides data for the <see cref="E:System.Activities.Design.ModelTree.ModelTreeManager.EditingScopeCompleted" /> event.</summary>
    </member>
    <member name="M:System.Activities.Design.ModelTree.EditingScopeEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.ModelTree.EditingScopeEventArgs" /> class. </summary>
    </member>
    <member name="P:System.Activities.Design.ModelTree.EditingScopeEventArgs.EditingScope">
      <summary>Gets or sets the associated <see cref="T:System.Activities.Design.ModelTree.EditingScope" />.</summary>
      <returns>Returns an <see cref="T:System.Activities.Design.ModelTree.EditingScope" />.</returns>
    </member>
    <member name="T:System.Activities.Design.ModelTree.ModelItemExtensions">
      <summary>Implements extensions to the base model item.</summary>
    </member>
    <member name="M:System.Activities.Design.ModelTree.ModelItemExtensions.FindParentModelItem(System.Activities.Design.Model.ModelItem,System.Type)">
      <summary>Determines the parent model item, based on the specified item and parent type.</summary>
      <returns>Returns a <see cref="T:System.Activities.Design.Model.ModelItem" /> that contains the parent type.</returns>
      <param name="item">The model item.</param>
      <param name="parentType">The parent type. This parameter cannot be null.</param>
    </member>
    <member name="M:System.Activities.Design.ModelTree.ModelItemExtensions.GetEditingContext(System.Activities.Design.Model.ModelItem)">
      <summary>Retrieves the editing context of the specified model item.</summary>
      <returns>Returns a <see cref="T:System.Activities.Design.EditingContext" /> that contains the editing context.</returns>
      <param name="modelItem">The model item.</param>
    </member>
    <member name="M:System.Activities.Design.ModelTree.ModelItemExtensions.GetModelItemFromPath(System.String,System.Activities.Design.Model.ModelItem)">
      <summary>Retrieves a model item from the specified path and root.</summary>
      <returns>Returns a <see cref="T:System.Activities.Design.Model.ModelItem" /> that contains the model item..</returns>
      <param name="path">The path.</param>
      <param name="root">The root.</param>
    </member>
    <member name="M:System.Activities.Design.ModelTree.ModelItemExtensions.GetModelPath(System.Activities.Design.Model.ModelItem)">
      <summary>Retrieves the path of the specified model item.</summary>
      <returns>Returns a <see cref="T:System.String" /> that contains the path.</returns>
      <param name="modelItem">The model item.</param>
    </member>
    <member name="M:System.Activities.Design.ModelTree.ModelItemExtensions.GetParentEnumerator(System.Activities.Design.Model.ModelItem)">
      <summary>Retrieves an enumerator that contains the parents of the specified model item.</summary>
      <returns>Returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the parent items.</returns>
      <param name="item">The item.</param>
    </member>
    <member name="M:System.Activities.Design.ModelTree.ModelItemExtensions.GetParentEnumerator(System.Activities.Design.Model.ModelItem,System.Func{System.Activities.Design.Model.ModelItem,System.Boolean})">
      <summary>Retrieves an enumerator that contains the parents of the specified model item.</summary>
      <returns>Returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the parents..</returns>
      <param name="item">The item.</param>
      <param name="continueEnumerationPredicate">Content to be provided.</param>
    </member>
    <member name="M:System.Activities.Design.ModelTree.ModelItemExtensions.GetUniqueName(System.Activities.Design.Model.ModelItemCollection,System.String,System.Func{System.Activities.Design.Model.ModelItem,System.String})">
      <summary>Retrieves the unique name of the item, using the specified collection, default prefix, and name getter.</summary>
      <returns>Returns a <see cref="T:System.String" /> containing the unique name..</returns>
      <param name="collection">The collection containing the item. </param>
      <param name="nameDefaultPrefix">The default name prefix of the item.</param>
      <param name="nameGetter">The name getter.</param>
    </member>
    <member name="M:System.Activities.Design.ModelTree.ModelItemExtensions.GetUniqueName(System.Activities.Design.Model.ModelItemDictionary,System.String,System.Func{System.Activities.Design.Model.ModelItem,System.String})">
      <summary>Gets the unique name of an item based on the specified dictionary, default prefix, and name getter.</summary>
      <returns>Returns a <see cref="T:System.String" /> containing the unique name of the item..</returns>
      <param name="collection">The collection containing the item.</param>
      <param name="nameDefaultPrefix">The default prefix.</param>
      <param name="nameGetter">The name getter.</param>
    </member>
    <member name="M:System.Activities.Design.ModelTree.ModelItemExtensions.IsAssignableFrom``1(System.Activities.Design.Model.ModelItem)">
      <summary>Determines whether an instance of a given Type can be assigned from an instance of the specified <see cref="P:System.Activities.Design.Model.ModelItem.ItemType" />.</summary>
      <returns>true if the type of <paramref name="T" /> and the current type represent the same type, or if the current type is in the inheritance hierarchy of <paramref name="T" />, or if the current type is an interface that <paramref name="T" /> implements, or if <paramref name="T" /> is a generic type parameter and the current type represents one of the constraints of <paramref name="T" />. false if none of these conditions are true, or if <paramref name="T" /> is a null reference (Nothing in Visual Basic).</returns>
      <param name="item">The <see cref="T:System.Activities.Design.Model.ModelItem" /> to compare with<paramref name="T" />.</param>
      <typeparam name="T">The type to compare with the <see cref="P:System.Activities.Design.Model.ModelItem.ItemType" />.</typeparam>
    </member>
    <member name="M:System.Activities.Design.ModelTree.ModelItemExtensions.SwitchKeys(System.Activities.Design.Model.ModelItemDictionary,System.Activities.Design.Model.ModelItem,System.Activities.Design.Model.ModelItem)">
      <summary>Replaces the specified old key with the specified new key in the specified dictionary.</summary>
      <returns>true if the attempt was successful; otherwise, false.</returns>
      <param name="dictionary">The dictionary. This parameter cannot be null.</param>
      <param name="oldKey">The key to replace. This parameter cannot be null.</param>
      <param name="newKey">The new key. This parameter cannot be null.</param>
    </member>
    <member name="M:System.Activities.Design.ModelTree.ModelItemExtensions.SwitchKeys(System.Activities.Design.Model.ModelItemDictionary,System.Object,System.Object,System.Activities.Design.Model.ModelItem@)">
      <summary>Replaces the specified old key with the specified new key in the specified dictionary, and if applicable returns the item of the new key.</summary>
      <returns>true if the attempt was successful; otherwise, false.</returns>
      <param name="dictionary">The dictionary. This parameter cannot be null.</param>
      <param name="oldKey">The key to replace. This parameter cannot be null.</param>
      <param name="newKey">The new key. This parameter cannot be null.</param>
      <param name="newKeyItem">When this method returns, contains the new key item.</param>
    </member>
    <member name="M:System.Activities.Design.ModelTree.ModelItemExtensions.TryGetPropertyValue(System.Activities.Design.Model.ModelItem,System.Activities.Design.Model.ModelItem@,System.String[])">
      <summary>Attempts to retrieve the value of the specified item at the specified path.</summary>
      <returns>true if the attempt was successful; otherwise, false.</returns>
      <param name="item">The item.</param>
      <param name="value">When this method returns, contains the value in a model item.</param>
      <param name="path">The path to the item.</param>
    </member>
    <member name="M:System.Activities.Design.ModelTree.ModelItemExtensions.TryGetPropertyValue(System.Activities.Design.Model.ModelItem,System.Activities.Design.Model.ModelItemCollection@,System.String[])">
      <summary>Attempts to retrieve the value of the specified item at the specified path.</summary>
      <returns>true if the attempt was successful; otherwise, false.</returns>
      <param name="item">The item.</param>
      <param name="value">When this method returns, contains the value in a collection.</param>
      <param name="path">The path to the item.</param>
    </member>
    <member name="M:System.Activities.Design.ModelTree.ModelItemExtensions.TryGetPropertyValue(System.Activities.Design.Model.ModelItem,System.Activities.Design.Model.ModelItemDictionary@,System.String[])">
      <summary>Attempts to retrieve the value of the specified item at the specified path.</summary>
      <returns>true if the attempt was successful; otherwise, false.</returns>
      <param name="item">The item.</param>
      <param name="value">When this method returns, contains the value in a dictionary.</param>
      <param name="path">The path to the item.</param>
    </member>
    <member name="M:System.Activities.Design.ModelTree.ModelItemExtensions.TrySetPropertyValue(System.Activities.Design.Model.ModelItem,System.Object,System.Activities.Design.Model.ModelItem@,System.String[])">
      <summary>Attempts to set the specified property value using the specified item, wrapped value, and path.</summary>
      <returns>true if the attempt to set the specified property value was successful; otherwise, false.</returns>
      <param name="item">The item.</param>
      <param name="value">The value.</param>
      <param name="wrappedValue">The wrapped value.</param>
      <param name="path">The path.</param>
    </member>
    <member name="T:System.Activities.Design.ModelTree.ModelToObjectValueConverter">
      <summary>Converts a ModelItem to the value of the inner object. </summary>
    </member>
    <member name="M:System.Activities.Design.ModelTree.ModelToObjectValueConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.ModelTree.ModelToObjectValueConverter" /> class. </summary>
    </member>
    <member name="M:System.Activities.Design.ModelTree.ModelToObjectValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts the specified object to its inner value.</summary>
      <returns>Returns a <see cref="T:System.Object" /> that contains the inner value.</returns>
      <param name="value">The ModelItem to convert.</param>
      <param name="targetType">Not used in this implementation.</param>
      <param name="parameter">Not used in this implementation.</param>
      <param name="culture">Not used in this implementation.</param>
    </member>
    <member name="M:System.Activities.Design.ModelTree.ModelToObjectValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Returns the specified value, unmodified.</summary>
      <returns>Returns a <see cref="T:System.Object" /> that contains the unmodified value.</returns>
      <param name="value">The object to do nothing to.</param>
      <param name="targetType">Not used in this implementation.</param>
      <param name="parameter">Not used in this implementation.</param>
      <param name="culture">Not used in this implementation.</param>
    </member>
    <member name="T:System.Activities.Design.ModelTree.ModelTreeManager">
      <summary>Manages the model tree.</summary>
    </member>
    <member name="M:System.Activities.Design.ModelTree.ModelTreeManager.#ctor(System.Activities.Design.EditingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.ModelTree.ModelTreeManager" /> class, using the specified context. </summary>
      <param name="context">The context. </param>
    </member>
    <member name="M:System.Activities.Design.ModelTree.ModelTreeManager.CreateModelItem(System.Activities.Design.Model.ModelItem,System.Object)">
      <summary>Creates a model item based on the specified parent and instance. </summary>
      <returns>Returns a <see cref="T:System.Activities.Design.Model.ModelItem" /> that contains the new model item.</returns>
      <param name="parent">The parent item. </param>
      <param name="instance">The instance.</param>
    </member>
    <member name="E:System.Activities.Design.ModelTree.ModelTreeManager.EditingScopeCompleted">
      <summary>Occurs when the editing scope is completed. </summary>
    </member>
    <member name="M:System.Activities.Design.ModelTree.ModelTreeManager.Load(System.Object)">
      <summary>Loads the specified root instance.</summary>
      <param name="rootInstance">The root instance to load.</param>
    </member>
    <member name="P:System.Activities.Design.ModelTree.ModelTreeManager.Root">
      <summary>Gets the root.</summary>
      <returns>Returns a <see cref="T:System.Activities.Design.Model.ModelItem" /> that contains the root.</returns>
    </member>
    <member name="T:System.Activities.Design.ModelTree.ObjectToModelValueConverter">
      <summary>Converts objects to model values.</summary>
    </member>
    <member name="M:System.Activities.Design.ModelTree.ObjectToModelValueConverter.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Design.ModelTree.ObjectToModelValueConverter" /> class. </summary>
    </member>
    <member name="M:System.Activities.Design.ModelTree.ObjectToModelValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts the specified ModelPropertyEntry to a ModelItem that contains the original entry.</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
      <param name="values">The ModelPropertyEntry to convert.</param>
      <param name="targetType">Not used in this implementation.</param>
      <param name="parameter">Not used in this implementation.</param>
      <param name="culture">Not used in this implementation.</param>
    </member>
    <member name="M:System.Activities.Design.ModelTree.ObjectToModelValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>Converts the specified ModelItem to a ModelPropertyEntry. </summary>
      <returns>Returns a <see cref="T:System.Object" /> that contains the converted ModelPropertyEntry..</returns>
      <param name="value">The ModelItem to convert.</param>
      <param name="targetTypes">Not used in this implementation.</param>
      <param name="parameter">Not used in this implementation.</param>
      <param name="culture">Not used in this implementation.</param>
    </member>
    <member name="T:System.Activities.Design.Toolbox.ToolboxCategory"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxCategory.#ctor"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxCategory.#ctor(System.String)"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxCategory.Add(System.Activities.Design.Toolbox.ToolboxItemWrapper)"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxCategory.CategoryName"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxCategory.Item(System.Int32)"></member>
    <member name="E:System.Activities.Design.Toolbox.ToolboxCategory.PropertyChanged"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxCategory.Remove(System.Activities.Design.Toolbox.ToolboxItemWrapper)"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxCategory.System#Collections#ICollection#CopyTo(System.Array,System.Int32)"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxCategory.System#Collections#ICollection#Count"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxCategory.System#Collections#ICollection#IsSynchronized"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxCategory.System#Collections#ICollection#SyncRoot"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxCategory.System#Collections#IEnumerable#GetEnumerator"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxCategory.System#Collections#IList#Add(System.Object)"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxCategory.System#Collections#IList#Clear"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxCategory.System#Collections#IList#Contains(System.Object)"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxCategory.System#Collections#IList#IndexOf(System.Object)"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxCategory.System#Collections#IList#Insert(System.Int32,System.Object)"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxCategory.System#Collections#IList#IsFixedSize"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxCategory.System#Collections#IList#IsReadOnly"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxCategory.System#Collections#IList#Item(System.Int32)"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxCategory.System#Collections#IList#Remove(System.Object)"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxCategory.System#Collections#IList#RemoveAt(System.Int32)"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxCategory.Tools"></member>
    <member name="T:System.Activities.Design.Toolbox.ToolboxCategoryItems"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxCategoryItems.#ctor"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxCategoryItems.Add(System.Activities.Design.Toolbox.ToolboxCategory)"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxCategoryItems.Clear"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxCategoryItems.Contains(System.Activities.Design.Toolbox.ToolboxCategory)"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxCategoryItems.CopyTo(System.Activities.Design.Toolbox.ToolboxCategory[],System.Int32)"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxCategoryItems.Count"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxCategoryItems.GetEnumerator"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxCategoryItems.IsReadOnly"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxCategoryItems.Item(System.Int32)"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxCategoryItems.Remove(System.Activities.Design.Toolbox.ToolboxCategory)"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxCategoryItems.System#Collections#ICollection#CopyTo(System.Array,System.Int32)"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxCategoryItems.System#Collections#ICollection#Count"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxCategoryItems.System#Collections#ICollection#IsSynchronized"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxCategoryItems.System#Collections#ICollection#SyncRoot"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxCategoryItems.System#Collections#IEnumerable#GetEnumerator"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxCategoryItems.System#Collections#IList#Add(System.Object)"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxCategoryItems.System#Collections#IList#Clear"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxCategoryItems.System#Collections#IList#Contains(System.Object)"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxCategoryItems.System#Collections#IList#IndexOf(System.Object)"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxCategoryItems.System#Collections#IList#Insert(System.Int32,System.Object)"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxCategoryItems.System#Collections#IList#IsFixedSize"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxCategoryItems.System#Collections#IList#IsReadOnly"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxCategoryItems.System#Collections#IList#Item(System.Int32)"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxCategoryItems.System#Collections#IList#Remove(System.Object)"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxCategoryItems.System#Collections#IList#RemoveAt(System.Int32)"></member>
    <member name="T:System.Activities.Design.Toolbox.ToolboxControl"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxControl.#ctor"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxControl.AssociatedDesigner"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxControl.Categories"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxControl.CategoryItemStyle"></member>
    <member name="F:System.Activities.Design.Toolbox.ToolboxControl.CategoryItemStyleProperty"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxControl.CategoryTemplate"></member>
    <member name="F:System.Activities.Design.Toolbox.ToolboxControl.CategoryTemplateProperty"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxControl.OnApplyTemplate"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxControl.SelectedTool"></member>
    <member name="F:System.Activities.Design.Toolbox.ToolboxControl.SelectedToolProperty"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxControl.ToolboxFile"></member>
    <member name="F:System.Activities.Design.Toolbox.ToolboxControl.ToolboxFileProperty"></member>
    <member name="E:System.Activities.Design.Toolbox.ToolboxControl.ToolCreated"></member>
    <member name="F:System.Activities.Design.Toolbox.ToolboxControl.ToolCreatedEvent"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxControl.ToolItemStyle"></member>
    <member name="F:System.Activities.Design.Toolbox.ToolboxControl.ToolItemStyleProperty"></member>
    <member name="E:System.Activities.Design.Toolbox.ToolboxControl.ToolSelected"></member>
    <member name="F:System.Activities.Design.Toolbox.ToolboxControl.ToolSelectedEvent"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxControl.ToolTemplate"></member>
    <member name="F:System.Activities.Design.Toolbox.ToolboxControl.ToolTemplateProperty"></member>
    <member name="T:System.Activities.Design.Toolbox.ToolboxItemWrapper"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxItemWrapper.#ctor"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxItemWrapper.#ctor(System.String,System.String,System.String,System.String)"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxItemWrapper.#ctor(System.Type)"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxItemWrapper.#ctor(System.Type,System.String)"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxItemWrapper.#ctor(System.Type,System.String,System.String)"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxItemWrapper.AssemblyName"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxItemWrapper.Bitmap"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxItemWrapper.BitmapName"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxItemWrapper.DisplayName"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxItemWrapper.IsValid"></member>
    <member name="E:System.Activities.Design.Toolbox.ToolboxItemWrapper.PropertyChanged"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxItemWrapper.ToolName"></member>
    <member name="M:System.Activities.Design.Toolbox.ToolboxItemWrapper.ToString"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolboxItemWrapper.Type"></member>
    <member name="T:System.Activities.Design.Toolbox.ToolCreatedEventArgs"></member>
    <member name="P:System.Activities.Design.Toolbox.ToolCreatedEventArgs.Components"></member>
    <member name="T:System.Activities.Design.Toolbox.ToolCreatedEventHandler"></member>
    <member name="T:System.Activities.Design.Validation.IValidationErrorService">
      <summary>Provides accessibility to a specified list of activity validation errors.</summary>
    </member>
    <member name="M:System.Activities.Design.Validation.IValidationErrorService.ShowValidationErrors(System.Collections.Generic.IList{System.Activities.Design.Validation.ValidationErrorInfo})">
      <summary>Makes the indicated list of activity validation errors accessible through a specific implementation.</summary>
      <param name="errors">A specified type of list that contains activity validation errors.</param>
    </member>
    <member name="T:System.Activities.Design.Validation.ValidationErrorInfo">
      <summary>Provides a container for all the properties attached to an instance of a validation error that occurred during the design time or run time of a workflow activity.</summary>
    </member>
    <member name="M:System.Activities.Design.Validation.ValidationErrorInfo.#ctor(System.Activities.Validation.ValidationError)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Design.Validation.ValidationErrorInfo" /> class with the specified validation error.</summary>
      <param name="validationError">An exception that occurs during the validation of a workflow activity.</param>
    </member>
    <member name="M:System.Activities.Design.Validation.ValidationErrorInfo.#ctor(System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Design.Validation.ValidationErrorInfo" /> class that contains information about a specific error.</summary>
      <param name="message">An alphanumeric message that provides additional information about the error.</param>
    </member>
    <member name="P:System.Activities.Design.Validation.ValidationErrorInfo.FileName">
      <summary>Gets the alphanumeric name of the file that generated the error.</summary>
      <returns>A text string name of a file.</returns>
    </member>
    <member name="P:System.Activities.Design.Validation.ValidationErrorInfo.Id">
      <summary>Gets a unique <see cref="T:System.String" /> identifier for this error.</summary>
      <returns>A text string that identifies the error.</returns>
    </member>
    <member name="P:System.Activities.Design.Validation.ValidationErrorInfo.IsWarning">
      <summary>Gets a Boolean that determines whether the constraint violation is a warning.</summary>
      <returns>true if the constraint violation is a warning; otherwise, false.</returns>
    </member>
    <member name="P:System.Activities.Design.Validation.ValidationErrorInfo.Message">
      <summary>Gets an alphanumeric message that provides additional information about the error.</summary>
      <returns>A text string comment that provides extra information.</returns>
    </member>
    <member name="P:System.Activities.Design.Validation.ValidationErrorInfo.PropertyName">
      <summary>Gets the alphanumeric name of the property that generated the error.</summary>
      <returns>A text string name of a property.</returns>
    </member>
    <member name="T:System.Activities.Design.Validation.ValidationService">
      <summary>Provides the functionality required to validate a workflow activity designer while it is being edited and to provide the results of the validation process.</summary>
    </member>
    <member name="M:System.Activities.Design.Validation.ValidationService.#ctor(System.Activities.Design.EditingContext)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Design.Validation.ValidationService" /> that uses permanent and transient state context information about an activity designer.</summary>
      <param name="context">An object that contains permanent and transient state context information about a designer instance. </param>
    </member>
    <member name="M:System.Activities.Design.Validation.ValidationService.NavigateToError(System.Activities.Design.Model.ModelItem)">
      <summary>Moves the keyboard focus to the work surface location of an error in an activity.</summary>
      <param name="modelItem">The name of the item that has generated an error.</param>
    </member>
    <member name="M:System.Activities.Design.Validation.ValidationService.NavigateToError(System.String)">
      <summary>Moves the keyboard focus to the work surface location of an error in an activity.</summary>
      <param name="id">An error identification number.</param>
    </member>
    <member name="M:System.Activities.Design.Validation.ValidationService.OnValidationCompleted">
      <summary>Triggers a new validation completed event.</summary>
    </member>
    <member name="P:System.Activities.Design.Validation.ValidationService.Settings">
      <summary>Gets the settings for the validation of the current workflow element tree, </summary>
      <returns>An object that contains the validation settings..</returns>
    </member>
    <member name="M:System.Activities.Design.Validation.ValidationService.ValidateWorkflow">
      <summary>Invokes validation of a workflow element tree.</summary>
    </member>
    <member name="T:System.Activities.Design.Validation.ValidationState">
      <summary>An enumeration of values that represent states of workflow element validation.</summary>
    </member>
    <member name="F:System.Activities.Design.Validation.ValidationState.Error">
      <summary>A value that indicates that an error occurred during the validation of a workflow element.</summary>
    </member>
    <member name="F:System.Activities.Design.Validation.ValidationState.Warning">
      <summary>A value that indicates that a warning occurred during the validation of a workflow element.</summary>
    </member>
    <member name="F:System.Activities.Design.Validation.ValidationState.ChildInvalid">
      <summary>A value that represents that validation found a child element to be invalid.</summary>
    </member>
    <member name="F:System.Activities.Design.Validation.ValidationState.Valid">
      <summary>A value that indicates that a workflow element is valid.</summary>
    </member>
    <member name="T:System.Activities.Design.View.ArgumentToExpressionConverter">
      <summary>Converts from arguments to Argument.Expression. </summary>
    </member>
    <member name="M:System.Activities.Design.View.ArgumentToExpressionConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.View.ArgumentToExpressionConverter" /> class. </summary>
    </member>
    <member name="M:System.Activities.Design.View.ArgumentToExpressionConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts the specified argument into an Argument.Expression.</summary>
      <returns>Returns <see cref="T:System.Object" />.Contains the converted Argument.Expression.</returns>
      <param name="value">Not the value to convert.</param>
      <param name="targetType">Not implemented.</param>
      <param name="parameter">Not implemented.</param>
      <param name="culture">Not implemented.</param>
    </member>
    <member name="M:System.Activities.Design.View.ArgumentToExpressionConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts the specified Argument.Expression into an argument. </summary>
      <returns>Returns <see cref="T:System.Object" />.Contains the converted argument.</returns>
      <param name="value">The Argument.Expression to convert. </param>
      <param name="targetType">Not implemented. </param>
      <param name="parameter">Not implemented. </param>
      <param name="culture">Not implemented. </param>
    </member>
    <member name="T:System.Activities.Design.View.ArgumentToExpressionModelItemConverter">
      <summary>Converts an argument to an expression model. </summary>
    </member>
    <member name="M:System.Activities.Design.View.ArgumentToExpressionModelItemConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.View.ArgumentToExpressionModelItemConverter" /> class.</summary>
    </member>
    <member name="M:System.Activities.Design.View.ArgumentToExpressionModelItemConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts the specified argument to an expression model item.</summary>
      <returns>Returns a <see cref="T:System.Object" /> that contains the expression model item.</returns>
      <param name="values">The argument to convert.</param>
      <param name="targetType">Not used in this implementation.</param>
      <param name="parameter">Not used in this implementation.</param>
      <param name="culture">Not used in this implementation.</param>
    </member>
    <member name="M:System.Activities.Design.View.ArgumentToExpressionModelItemConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <returns>Returns a <see cref="T:System.Object" /> that contains the argument.</returns>
      <param name="value">The model item to convert. </param>
      <param name="targetTypes">Not used in this implementation. </param>
      <param name="parameter">Not used in this implementation.</param>
      <param name="culture">Not used in this implementation. </param>
    </member>
    <member name="T:System.Activities.Design.View.AssemblyContextControlItem">
      <summary>Exposes a control item for an assembly context.</summary>
    </member>
    <member name="M:System.Activities.Design.View.AssemblyContextControlItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.View.AssemblyContextControlItem" /> class. </summary>
    </member>
    <member name="P:System.Activities.Design.View.AssemblyContextControlItem.ItemType">
      <summary>Gets an item type.</summary>
      <returns>Returns a <see cref="T:System.Type" /> that contains the item type.</returns>
    </member>
    <member name="P:System.Activities.Design.View.AssemblyContextControlItem.LocalAssemblyName">
      <summary>Gets or sets the local assembly name. </summary>
      <returns>Returns a <see cref="T:System.Reflection.AssemblyName" /> that contains the local assembly name.</returns>
    </member>
    <member name="P:System.Activities.Design.View.AssemblyContextControlItem.ReferencedAssemblies">
      <summary>Gets or sets the referenced assemblies.</summary>
      <returns>Returns a <see cref="T:System.Collections.Generic.IEnumerable`1" /> derived object that contains the referenced assemblies.</returns>
    </member>
    <member name="P:System.Activities.Design.View.AssemblyContextControlItem.ReferencedAssemblyNames">
      <summary>Gets or sets the referenced assembly names. </summary>
      <returns>Returns a <see cref="T:System.Collections.Generic.IList`1" /> that contains the referenced assembly names.</returns>
    </member>
    <member name="T:System.Activities.Design.View.CommandMenuMode">
      <summary>Describes the command menu mode. </summary>
    </member>
    <member name="F:System.Activities.Design.View.CommandMenuMode.FullCommandMenu">
      <summary>Full command menu.</summary>
    </member>
    <member name="F:System.Activities.Design.View.CommandMenuMode.NoCommandMenu">
      <summary>No command menu.</summary>
    </member>
    <member name="T:System.Activities.Design.View.DesignerView">
      <summary>The designer view. </summary>
    </member>
    <member name="P:System.Activities.Design.View.DesignerView.ActivitySchema">
      <summary>Gets the activity schema.</summary>
      <returns>Returns <see cref="T:System.Activities.Design.Model.ModelItem" />.Contains the activity schema.</returns>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.ActivitySchemaProperty">
      <summary>The DependencyProperty that represents the <see cref="P:System.Activities.Design.View.DesignerView.ActivitySchema" /> property. </summary>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.CollapseCommand">
      <summary>The RoutedCommand used to collapse the user interface for the current element.</summary>
    </member>
    <member name="P:System.Activities.Design.View.DesignerView.CommandMenuMode">
      <summary>Contains the command menu mode. </summary>
      <returns>Returns <see cref="T:System.Activities.Design.View.CommandMenuMode" />.</returns>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.CommandMenuModeProperty">
      <summary>The DependencyProperty that represents the <see cref="T:System.Activities.Design.View.CommandMenuMode" /> property. </summary>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.CommitCommand">
      <summary>A RoutedCommand used to update the source value in a <see cref="T:System.Windows.Data.BindingExpression" />.</summary>
    </member>
    <member name="P:System.Activities.Design.View.DesignerView.Context">
      <summary>Gets or sets a collection of services shared between all elements contained in the designer. </summary>
      <returns>Returns an <see cref="T:System.Activities.Design.EditingContext" /> object.Contains the context.</returns>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.CopyAsImageCommand">
      <summary>The <see cref="T:System.Windows.Input.RoutedCommand" /> used to copy the current workflow design surface as a screenshot and place it in the Clipboard. </summary>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.CreateArgumentCommand">
      <summary>The RoutedCommand used to create a new argument.</summary>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.CreateVariableCommand">
      <summary>The RoutedCommand used to create a new variable for the currently selected activity.</summary>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.CreateWorkflowElementCommand">
      <summary>The RoutedCommand used to create a new <see cref="T:System.Activities.Design.WorkflowViewElement" /> on the current workflow designer surface when dragging a workflow item from the Toolbox onto the designer surface.</summary>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.CustomMenuItemsSeparatorCommand">
      <summary>A string constant that contains the Guid for the custom menu items separator.</summary>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.CycleThroughDesignerCommand">
      <summary>The RoutedCommand used to cycle the various UI elements of the current workflow designer surface.</summary>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.DeleteBreakpointCommand">
      <summary>The RoutedCommand used to delete the breakpoint set on the current activity.</summary>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.DisableBreakpointCommand">
      <summary>The RoutedCommand used to disable the breakpoint set on the current activity.</summary>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.EnableBreakpointCommand">
      <summary>The RoutedCommand used to enable the breakpoint on the current activity.</summary>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.ExpandAllCommand">
      <summary>The RoutedCommand used to expand the list </summary>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.ExpandCommand">
      <summary>The RoutedCommand used to navigate to the selected child of a composite activity and expand it to fill the full screen of the workflow designer surface. The View full screen context menu command will initiate this action.</summary>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.ExpandInPlaceCommand">
      <summary>The RoutedCommand used to</summary>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.FitToScreenCommand">
      <summary>The RoutedCommand used to</summary>
    </member>
    <member name="P:System.Activities.Design.View.DesignerView.FocusedViewElement">
      <returns>Returns <see cref="T:System.Activities.Design.WorkflowViewElement" />.</returns>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.FocusedViewElementProperty"></member>
    <member name="M:System.Activities.Design.View.DesignerView.GetCommandMenuMode(System.Windows.DependencyObject)">
      <summary>Retrieves the command menu mode of the specified object. </summary>
      <returns>Returns <see cref="T:System.Activities.Design.View.CommandMenuMode" />.Contains the command menu mode.</returns>
      <param name="obj">The object. </param>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.GoToParentCommand">
      <summary>The RoutedCommand used to navigate to the parent activity of the selected child activity and expand it to fill the full screen of the workflow designer surface. The View parent context menu command will initiate this action.</summary>
    </member>
    <member name="M:System.Activities.Design.View.DesignerView.InitializeComponent">
      <summary>Initializes this form.</summary>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.InsertBreakpointCommand">
      <summary>The RoutedCommand used to set a breakpoint on the current activity.</summary>
    </member>
    <member name="P:System.Activities.Design.View.DesignerView.IsMultipleSelectionMode">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Activities.Design.View.DesignerView.IsReadOnly">
      <summary>Determines whether the <see cref="T:System.Activities.Design.View.DesignerView" /> is read-only.</summary>
      <returns>true if the <see cref="T:System.Activities.Design.View.DesignerView" /> is read-only; false otherwise..</returns>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.IsReadOnlyProperty">
      <summary>Represents the DependencyProperty for the <see cref="P:System.Activities.Design.View.DesignerView.IsReadOnly" /> property.</summary>
    </member>
    <member name="M:System.Activities.Design.View.DesignerView.MakeRootDesigner(System.Activities.Design.Model.ModelItem)">
      <summary>Makes the <see cref="T:System.Activities.Design.WorkflowViewElement" /> associated with the root <see cref="T:System.Activities.Design.Model.ModelItem" /> the <see cref="P:System.Activities.Design.View.DesignerView.RootDesigner" />.</summary>
      <param name="modelItem">The <see cref="T:System.Activities.Design.Model.ModelItem" />.</param>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.MoveFocusCommand">
      <summary>The RoutedCommand used to</summary>
    </member>
    <member name="M:System.Activities.Design.View.DesignerView.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>Raises the ContextMenuOpening event. </summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Activities.Design.View.DesignerView.OnInitialized(System.EventArgs)">
      <summary>Handles the <see cref="E:System.Windows.FrameworkElement.Initialized" /> event by calling the <see cref="T:System.Windows.Controls.UserControl" /> base class implementation, adding an event handler for the <see cref="E:System.Windows.UIElement.GotKeyboardFocus" /> routed event, and setting the foreground color for the designer view.</summary>
      <param name="e"></param>
    </member>
    <member name="M:System.Activities.Design.View.DesignerView.OnKeyDown(System.Windows.Input.KeyEventArgs)"></member>
    <member name="M:System.Activities.Design.View.DesignerView.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>Raises the PreviewMouseWheel event. </summary>
      <param name="e">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Activities.Design.View.DesignerView.OnReferenceUpdated(System.Reflection.AssemblyName,System.Boolean)">
      <param name="updatedReference"></param>
      <param name="isAdded"></param>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.ResetZoomCommand">
      <summary>The RoutedCommand used to</summary>
    </member>
    <member name="P:System.Activities.Design.View.DesignerView.RootDesigner">
      <summary>Gets or sets a <see cref="T:System.Windows.UIElement" /> that is the UI representation of the root of the current model tree.</summary>
      <returns>Returns a <see cref="T:System.Windows.UIElement" /> object.</returns>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.RootDesignerProperty">
      <summary>Represents the DependencyProperty for the <see cref="P:System.Activities.Design.View.DesignerView.RootDesigner" /> property. </summary>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.SaveAsImageCommand">
      <summary>The RoutedCommand used to save the current workflow design surface as an image.</summary>
    </member>
    <member name="M:System.Activities.Design.View.DesignerView.SetCommandMenuMode(System.Windows.DependencyObject,System.Activities.Design.View.CommandMenuMode)">
      <summary>Sets the command menu mode on the specified object. </summary>
      <param name="obj">The object. </param>
      <param name="value">The value to set. </param>
    </member>
    <member name="P:System.Activities.Design.View.DesignerView.ShouldExpandAll">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Activities.Design.View.DesignerView.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)">
      <summary>Attaches events and names to compiled content.</summary>
      <param name="connectionId">The connection ID. </param>
      <param name="target">The target.</param>
    </member>
    <member name="M:System.Activities.Design.View.DesignerView.System#Windows#Markup#IStyleConnector#Connect(System.Int32,System.Object)">
      <summary>Calls the StyleBamlReader to attach events on EventSetters and Templates in compiled content.</summary>
      <param name="connectionId">The connection ID.</param>
      <param name="target">The target.</param>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.ToggleArgumentDesignerCommand">
      <summary>The RoutedCommand used to show or hide the argument designer. Clicking on the Arguments button on the workflow designer surface will initiate this action. </summary>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.ToggleImportsDesignerCommand">
      <summary>The RoutedCommand used to</summary>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.ToggleMiniMapCommand">
      <summary>The RoutedCommand used to show or hide the MiniMap control on the workflow designer surface.</summary>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.ToggleSelectionCommand">
      <summary>The RoutedCommand used to</summary>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.ToggleVariableDesignerCommand">
      <summary>The RoutedCommand used to show or hide the variable designer. Clicking on the Variables button on the workflow designer surface will initiate this action.</summary>
    </member>
    <member name="P:System.Activities.Design.View.DesignerView.WorkflowShellBarItemVisibility">
      <returns>Returns <see cref="T:System.Activities.Design.View.ShellBarItemVisibility" />.</returns>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.ZoomInCommand">
      <summary>The RoutedCommand used to zoom in on the current workflow designer surface.</summary>
    </member>
    <member name="F:System.Activities.Design.View.DesignerView.ZoomOutCommand">
      <summary>The RoutedCommand used to zoom out of the current workflow designer surface.</summary>
    </member>
    <member name="T:System.Activities.Design.View.DynamicArgumentDesigner"></member>
    <member name="M:System.Activities.Design.View.DynamicArgumentDesigner.#ctor"></member>
    <member name="P:System.Activities.Design.View.DynamicArgumentDesigner.ArgumentPrefix"></member>
    <member name="P:System.Activities.Design.View.DynamicArgumentDesigner.Context"></member>
    <member name="F:System.Activities.Design.View.DynamicArgumentDesigner.ContextProperty"></member>
    <member name="F:System.Activities.Design.View.DynamicArgumentDesigner.CreateDynamicArgumentCommand"></member>
    <member name="F:System.Activities.Design.View.DynamicArgumentDesigner.DefaultArgumentPrefix"></member>
    <member name="P:System.Activities.Design.View.DynamicArgumentDesigner.DynamicArguments"></member>
    <member name="F:System.Activities.Design.View.DynamicArgumentDesigner.DynamicArgumentsProperty"></member>
    <member name="P:System.Activities.Design.View.DynamicArgumentDesigner.HideDirection"></member>
    <member name="P:System.Activities.Design.View.DynamicArgumentDesigner.HintText"></member>
    <member name="M:System.Activities.Design.View.DynamicArgumentDesigner.InitializeComponent"></member>
    <member name="P:System.Activities.Design.View.DynamicArgumentDesigner.IsDirectionReadOnly"></member>
    <member name="F:System.Activities.Design.View.DynamicArgumentDesigner.IsDirectionReadOnlyProperty"></member>
    <member name="P:System.Activities.Design.View.DynamicArgumentDesigner.IsReadOnly"></member>
    <member name="F:System.Activities.Design.View.DynamicArgumentDesigner.IsReadOnlyProperty"></member>
    <member name="F:System.Activities.Design.View.DynamicArgumentDesigner.MoveDownArgumentCommand"></member>
    <member name="F:System.Activities.Design.View.DynamicArgumentDesigner.MoveUpArgumentCommand"></member>
    <member name="P:System.Activities.Design.View.DynamicArgumentDesigner.OwnerActivity"></member>
    <member name="F:System.Activities.Design.View.DynamicArgumentDesigner.OwnerActivityProperty"></member>
    <member name="P:System.Activities.Design.View.DynamicArgumentDesigner.ParentDialog"></member>
    <member name="M:System.Activities.Design.View.DynamicArgumentDesigner.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)"></member>
    <member name="M:System.Activities.Design.View.DynamicArgumentDesigner.System#Windows#Markup#IStyleConnector#Connect(System.Int32,System.Object)"></member>
    <member name="T:System.Activities.Design.View.DynamicArgumentDesignerOptions"></member>
    <member name="M:System.Activities.Design.View.DynamicArgumentDesignerOptions.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Activities.Design.View.DynamicArgumentDesignerOptions" /> class.</summary>
    </member>
    <member name="P:System.Activities.Design.View.DynamicArgumentDesignerOptions.ArgumentPrefix">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Activities.Design.View.DynamicArgumentDesignerOptions.Title">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Activities.Design.View.DynamicArgumentDialog"></member>
    <member name="M:System.Activities.Design.View.DynamicArgumentDialog.ShowDialog(System.Activities.Design.Model.ModelItem,System.Activities.Design.Model.ModelItem,System.Activities.Design.EditingContext,System.Windows.DependencyObject,System.Activities.Design.View.DynamicArgumentDesignerOptions)"></member>
    <member name="T:System.Activities.Design.View.EditingState"></member>
    <member name="F:System.Activities.Design.View.EditingState.Editing">
      <summary />
    </member>
    <member name="F:System.Activities.Design.View.EditingState.Validating">
      <summary />
    </member>
    <member name="F:System.Activities.Design.View.EditingState.Idle">
      <summary />
    </member>
    <member name="T:System.Activities.Design.View.ErrorView">
      <summary>Contains the error view presented when there are exceptions or errors in the designer view, or when the designer is unable to load. </summary>
    </member>
    <member name="M:System.Activities.Design.View.ErrorView.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Design.View.ErrorView" /> class.</summary>
    </member>
    <member name="P:System.Activities.Design.View.ErrorView.Details">
      <summary>Gets or sets the error details.</summary>
      <returns>Returns <see cref="T:System.String" />.Contains the error details. </returns>
    </member>
    <member name="F:System.Activities.Design.View.ErrorView.DetailsProperty">
      <summary>Initializes the <see cref="P:System.Activities.Design.View.ErrorView.Details" /> dependency property. </summary>
    </member>
    <member name="M:System.Activities.Design.View.ErrorView.InitializeComponent">
      <summary>Initializes this form. </summary>
    </member>
    <member name="P:System.Activities.Design.View.ErrorView.Message">
      <summary>Gets or sets the error message. </summary>
      <returns>Returns <see cref="T:System.String" />.Contains the error message.</returns>
    </member>
    <member name="F:System.Activities.Design.View.ErrorView.MessageProperty">
      <summary>Initializes the <see cref="P:System.Activities.Design.View.ErrorView.Message" /> dependency property. </summary>
    </member>
    <member name="M:System.Activities.Design.View.ErrorView.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)">
      <summary>Attaches events and names to compiled content.</summary>
      <param name="connectionId">The connection ID.</param>
      <param name="target">The target.</param>
    </member>
    <member name="T:System.Activities.Design.View.ExpressionTextBox">
      <summary>Describes a control that enables the user to edit an expression in an activity designer.</summary>
    </member>
    <member name="M:System.Activities.Design.View.ExpressionTextBox.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Design.View.ExpressionTextBox" /> class.</summary>
    </member>
    <member name="M:System.Activities.Design.View.ExpressionTextBox.BeginEdit">
      <summary>Begins an edit.</summary>
    </member>
    <member name="F:System.Activities.Design.View.ExpressionTextBox.CompleteWordCommand"></member>
    <member name="P:System.Activities.Design.View.ExpressionTextBox.DefaultValue"></member>
    <member name="F:System.Activities.Design.View.ExpressionTextBox.DefaultValueProperty"></member>
    <member name="E:System.Activities.Design.View.ExpressionTextBox.EditorLostLogicalFocus">
      <summary>Occurs when the expression editor loses logical focus.</summary>
    </member>
    <member name="F:System.Activities.Design.View.ExpressionTextBox.EditorLostLogicalFocusEvent">
      <summary>Identifies the <see cref="E:System.Activities.Design.View.ExpressionTextBox.EditorLostLogicalFocus" /> routed event.</summary>
    </member>
    <member name="P:System.Activities.Design.View.ExpressionTextBox.ExplicitCommit">
      <summary>Gets or sets a value that determines if a commit is explicit.</summary>
      <returns>Returns true if the commit is explicit; otherwise, false.</returns>
    </member>
    <member name="F:System.Activities.Design.View.ExpressionTextBox.ExplicitCommitProperty">
      <summary>Registers the <see cref="P:System.Activities.Design.View.ExpressionTextBox.ExplicitCommit" /> dependency property. </summary>
    </member>
    <member name="P:System.Activities.Design.View.ExpressionTextBox.Expression">
      <summary>Gets or sets the expression. </summary>
      <returns>Returns a <see cref="T:System.Activities.Design.Model.ModelItem" /> that contains the expression.</returns>
    </member>
    <member name="P:System.Activities.Design.View.ExpressionTextBox.ExpressionEditorService">
      <summary>Gets the expression editor service.</summary>
      <returns>Returns a <see cref="T:System.Activities.Design.View.IExpressionEditorService" /> containing the expression editor service.</returns>
    </member>
    <member name="F:System.Activities.Design.View.ExpressionTextBox.ExpressionProperty">
      <summary>Registers the <see cref="P:System.Activities.Design.View.ExpressionTextBox.Expression" /> dependency property.</summary>
    </member>
    <member name="P:System.Activities.Design.View.ExpressionTextBox.ExpressionType">
      <summary>Gets or sets the expression type. </summary>
      <returns>Returns a <see cref="T:System.Type" /> that contains the expression type.</returns>
    </member>
    <member name="F:System.Activities.Design.View.ExpressionTextBox.ExpressionTypeProperty">
      <summary>Registers the <see cref="P:System.Activities.Design.View.ExpressionTextBox.ExpressionType" /> dependency property.</summary>
    </member>
    <member name="F:System.Activities.Design.View.ExpressionTextBox.GlobalIntellisenseCommand"></member>
    <member name="P:System.Activities.Design.View.ExpressionTextBox.HintText">
      <summary>Gets or sets the hint text. </summary>
      <returns>Returns a <see cref="T:System.String" /> that contains the hint text.</returns>
    </member>
    <member name="F:System.Activities.Design.View.ExpressionTextBox.HintTextProperty">
      <summary>Registers the <see cref="P:System.Activities.Design.View.ExpressionTextBox.HintText" /> dependency property.</summary>
    </member>
    <member name="P:System.Activities.Design.View.ExpressionTextBox.HorizontalScrollBarVisibility">
      <summary>Gets or sets the horizontal scroll bar visibility. </summary>
      <returns>Returns a <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> that contains the horizontal scroll bar visibility.</returns>
    </member>
    <member name="F:System.Activities.Design.View.ExpressionTextBox.HorizontalScrollBarVisibilityProperty">
      <summary>Registers the <see cref="P:System.Activities.Design.View.ExpressionTextBox.HorizontalScrollBarVisibility" /> dependency property.</summary>
    </member>
    <member name="M:System.Activities.Design.View.ExpressionTextBox.InitializeComponent">
      <summary>Initializes this form.</summary>
    </member>
    <member name="P:System.Activities.Design.View.ExpressionTextBox.IsSupportedExpression">
      <summary>Gets or sets a value that determines if the expression is supported.</summary>
      <returns>Returns true if the expression is supported; otherwise, false.</returns>
    </member>
    <member name="F:System.Activities.Design.View.ExpressionTextBox.IsSupportedExpressionProperty">
      <summary>Registers the <see cref="P:System.Activities.Design.View.ExpressionTextBox.IsSupportedExpression" /> dependency property. </summary>
    </member>
    <member name="P:System.Activities.Design.View.ExpressionTextBox.MaxLines">
      <summary>Gets or sets the maximum number of lines</summary>
      <returns>Returns <see cref="T:System.Int32" /> that contains the maximum number of lines.</returns>
    </member>
    <member name="F:System.Activities.Design.View.ExpressionTextBox.MaxLinesProperty">
      <summary>Registers the <see cref="P:System.Activities.Design.View.ExpressionTextBox.MaxLines" /> dependency property.</summary>
    </member>
    <member name="P:System.Activities.Design.View.ExpressionTextBox.MinLines">
      <summary>Gets or sets the nimimum number of lines. </summary>
      <returns>Returns a <see cref="T:System.Int32" /> that contains the minimum number of lines.</returns>
    </member>
    <member name="F:System.Activities.Design.View.ExpressionTextBox.MinLinesProperty">
      <summary>Registers the <see cref="P:System.Activities.Design.View.ExpressionTextBox.MinLines" /> dependency property.</summary>
    </member>
    <member name="P:System.Activities.Design.View.ExpressionTextBox.OwnerActivity">
      <summary>Gets or sets the owner activity. </summary>
      <returns>Returns a <see cref="T:System.Activities.Design.Model.ModelItem" /> that contains the owner activity.</returns>
    </member>
    <member name="F:System.Activities.Design.View.ExpressionTextBox.OwnerActivityProperty">
      <summary>Registers the <see cref="P:System.Activities.Design.View.ExpressionTextBox.OwnerActivity" /> dependency property.</summary>
    </member>
    <member name="F:System.Activities.Design.View.ExpressionTextBox.ParameterInfoCommand"></member>
    <member name="P:System.Activities.Design.View.ExpressionTextBox.PathToArgument">
      <summary>Gets or sets the path to the argument. </summary>
      <returns>Returns a <see cref="T:System.String" /> that contains the path to the argument.</returns>
    </member>
    <member name="F:System.Activities.Design.View.ExpressionTextBox.PathToArgumentProperty">
      <summary>Registers the <see cref="P:System.Activities.Design.View.ExpressionTextBox.PathToArgument" /> dependency property. </summary>
    </member>
    <member name="F:System.Activities.Design.View.ExpressionTextBox.QuickInfoCommand"></member>
    <member name="M:System.Activities.Design.View.ExpressionTextBox.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)">
      <summary>Attaches events and names to compiled content. </summary>
      <param name="connectionId">The connection ID. </param>
      <param name="target">The target.</param>
    </member>
    <member name="M:System.Activities.Design.View.ExpressionTextBox.System#Windows#Markup#IStyleConnector#Connect(System.Int32,System.Object)">
      <summary>Calls the StyleBamlReader to attach events on EventSetters and Templates in compiled content.</summary>
      <param name="connectionId">The connection ID.</param>
      <param name="target">The target.</param>
    </member>
    <member name="P:System.Activities.Design.View.ExpressionTextBox.UseLocationExpression">
      <summary>Gets or sets a value that determines whether this instance uses the location expression. </summary>
      <returns>true if this instance uses the location expression; otherwise, false.</returns>
    </member>
    <member name="F:System.Activities.Design.View.ExpressionTextBox.UseLocationExpressionProperty">
      <summary>Registers the <see cref="P:System.Activities.Design.View.ExpressionTextBox.UseLocationExpression" /> dependency property.</summary>
    </member>
    <member name="P:System.Activities.Design.View.ExpressionTextBox.VerticalScrollBarVisibility">
      <summary>Gets or sets the vertical scrollbar visibility. </summary>
      <returns>Returns a <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> that contains the scrollbar visibility.</returns>
    </member>
    <member name="F:System.Activities.Design.View.ExpressionTextBox.VerticalScrollBarVisibilityProperty">
      <summary>Registers the <see cref="P:System.Activities.Design.View.ExpressionTextBox. VerticalScrollBarVisibility" /> dependency property.</summary>
    </member>
    <member name="T:System.Activities.Design.View.ExtensionSurface">
      <summary>Describes the extension surface. </summary>
    </member>
    <member name="M:System.Activities.Design.View.ExtensionSurface.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.View.ExtensionSurface" />class.</summary>
    </member>
    <member name="M:System.Activities.Design.View.ExtensionSurface.AddExtensionElement(System.Activities.Design.View.ExtensionWindow)">
      <summary>Adds the specified window to the collection. </summary>
      <param name="window">The window to add. </param>
    </member>
    <member name="P:System.Activities.Design.View.ExtensionSurface.Alignment">
      <summary>Specifies the alignment. </summary>
      <returns>Returns <see cref="T:System.Activities.Design.View.ExtensionSurface.PositionAlignment" />. Contains the alignment. </returns>
    </member>
    <member name="F:System.Activities.Design.View.ExtensionSurface.AlignmentProperty">
      <summary>Registers the <see cref="P:System.Activities.Design.View.ExtensionSurface.Alignment" /> property.</summary>
    </member>
    <member name="P:System.Activities.Design.View.ExtensionSurface.AutoExpandCanvas">
      <summary>Gets or sets a value that determines whether the canvas auto-expands. </summary>
      <returns>true if the canvas auto-expands; otherwise, false.</returns>
    </member>
    <member name="F:System.Activities.Design.View.ExtensionSurface.AutoExpandCanvasProperty">
      <summary>Registers the <see cref="P:System.Activities.Design.View.ExtensionSurface.AutoExpandCanvas" /> dependency property.</summary>
    </member>
    <member name="P:System.Activities.Design.View.ExtensionSurface.Designer">
      <summary>Gets or sets the surface view designer. </summary>
      <returns>Returns <see cref="T:System.Activities.Design.View.DesignerView" />.Contains the surface view designer.</returns>
    </member>
    <member name="F:System.Activities.Design.View.ExtensionSurface.DesignerProperty">
      <summary>Registers the <see cref="P:System.Activities.Design.View.ExtensionSurface.Designer" /> property.</summary>
    </member>
    <member name="M:System.Activities.Design.View.ExtensionSurface.GetAlignment(System.Windows.DependencyObject)">
      <summary>Retrieves the alignment of the specified container. </summary>
      <returns>Returns <see cref="T:System.Activities.Design.View.ExtensionSurface.PositionAlignment" />.Contains the alignment</returns>
      <param name="container">The container to get the alignment of. </param>
    </member>
    <member name="M:System.Activities.Design.View.ExtensionSurface.GetMode(System.Windows.DependencyObject)">
      <summary>Gets the mode of the specified container. </summary>
      <returns>Returns <see cref="T:System.Activities.Design.View.ExtensionSurface.PlacementMode" />.Contains the mode.</returns>
      <param name="container">The container to get the mode of.</param>
    </member>
    <member name="M:System.Activities.Design.View.ExtensionSurface.GetPlacementTarget(System.Windows.DependencyObject)">
      <summary>Retrieves the placement target of the specified container. </summary>
      <returns>Returns <see cref="T:System.Windows.FrameworkElement" />.Contains the placement target. </returns>
      <param name="container">The container to get the placement target of. </param>
    </member>
    <member name="M:System.Activities.Design.View.ExtensionSurface.GetPosition(System.Windows.DependencyObject)">
      <summary>Retrieves the position of the specified object. </summary>
      <returns>Returns <see cref="T:System.Windows.Point" />.Contains the position.</returns>
      <param name="container">The container to retrieve the position of. </param>
    </member>
    <member name="P:System.Activities.Design.View.ExtensionSurface.Mode">
      <summary>Describes the mode. </summary>
      <returns>Returns <see cref="T:System.Activities.Design.View.ExtensionSurface.PlacementMode" />.Contains the mode. </returns>
    </member>
    <member name="F:System.Activities.Design.View.ExtensionSurface.ModeProperty">
      <summary>Registers the <see cref="P:System.Activities.Design.View.ExtensionSurface.Mode" /> property.</summary>
    </member>
    <member name="P:System.Activities.Design.View.ExtensionSurface.PlacementTarget">
      <summary>Gets or sets the placement target. </summary>
      <returns>Returns <see cref="T:System.Windows.FrameworkElement" />.Contains the placement target. </returns>
    </member>
    <member name="F:System.Activities.Design.View.ExtensionSurface.PlacementTargetProperty">
      <summary>Registers the <see cref="P:System.Activities.Design.View.ExtensionSurface.PlacementTarget" /> dependency property. </summary>
    </member>
    <member name="P:System.Activities.Design.View.ExtensionSurface.Position">
      <summary>Gets or sets the position. </summary>
      <returns>Returns <see cref="T:System.Windows.Point" />.Contains the position. </returns>
    </member>
    <member name="F:System.Activities.Design.View.ExtensionSurface.PositionProperty">
      <summary>Registers the <see cref="P:System.Activities.Design.View.ExtensionSurface.Position" /> property. </summary>
    </member>
    <member name="M:System.Activities.Design.View.ExtensionSurface.RemoveExtensionElement(System.Activities.Design.View.ExtensionWindow)">
      <summary>Removes the specified extension element. </summary>
      <param name="window">The extension element to remove. </param>
    </member>
    <member name="M:System.Activities.Design.View.ExtensionSurface.SelectWindow(System.Activities.Design.View.ExtensionWindow)">
      <summary>Selects the specified window. </summary>
      <param name="window">The window to select. </param>
    </member>
    <member name="M:System.Activities.Design.View.ExtensionSurface.SetAlignment(System.Windows.DependencyObject,System.Activities.Design.View.ExtensionSurface.PositionAlignment)">
      <summary>Set the alignment on the specified container. </summary>
      <param name="container">The container. </param>
      <param name="value">The alignment value to set on the container. </param>
    </member>
    <member name="M:System.Activities.Design.View.ExtensionSurface.SetMode(System.Windows.DependencyObject,System.Activities.Design.View.ExtensionSurface.PlacementMode)">
      <summary>Sets the mode on the specified container. </summary>
      <param name="container">The container. </param>
      <param name="value">The mode value to set on the container. </param>
    </member>
    <member name="M:System.Activities.Design.View.ExtensionSurface.SetPlacementTarget(System.Windows.DependencyObject,System.Windows.FrameworkElement)">
      <summary>Sets the placement target on the specified container. </summary>
      <param name="container">The container. </param>
      <param name="value">The placement target to set on the container. </param>
    </member>
    <member name="M:System.Activities.Design.View.ExtensionSurface.SetPosition(System.Windows.DependencyObject,System.Windows.Point)">
      <summary>Sets the position on the specified container. </summary>
      <param name="container">The container. </param>
      <param name="value">The position value to set. </param>
    </member>
    <member name="T:System.Activities.Design.View.ExtensionSurface.PlacementMode">
      <summary>Describes the placement mode for the extension surface.</summary>
    </member>
    <member name="F:System.Activities.Design.View.ExtensionSurface.PlacementMode.Relative">
      <summary>Relative mode.</summary>
    </member>
    <member name="F:System.Activities.Design.View.ExtensionSurface.PlacementMode.Absolute">
      <summary>Absolute mode.</summary>
    </member>
    <member name="T:System.Activities.Design.View.ExtensionSurface.PositionAlignment">
      <summary>Describes the position alignment for the extension surface. </summary>
    </member>
    <member name="F:System.Activities.Design.View.ExtensionSurface.PositionAlignment.LeftTop">
      <summary>Left top. </summary>
    </member>
    <member name="F:System.Activities.Design.View.ExtensionSurface.PositionAlignment.LeftBottom">
      <summary>Left bottom. </summary>
    </member>
    <member name="F:System.Activities.Design.View.ExtensionSurface.PositionAlignment.RightTop">
      <summary>Right top. </summary>
    </member>
    <member name="F:System.Activities.Design.View.ExtensionSurface.PositionAlignment.RightBottom">
      <summary>Right bottom.</summary>
    </member>
    <member name="F:System.Activities.Design.View.ExtensionSurface.PositionAlignment.Center">
      <summary>Center. </summary>
    </member>
    <member name="F:System.Activities.Design.View.ExtensionSurface.PositionAlignment.CenterHorizontal">
      <summary>Center horizontal.</summary>
    </member>
    <member name="F:System.Activities.Design.View.ExtensionSurface.PositionAlignment.CenterVertical">
      <summary>Center vertical. </summary>
    </member>
    <member name="T:System.Activities.Design.View.ExtensionWindow">
      <summary>This class provides an experience similar to PopupWindow, while editing data on designer surface. Its behavior is similar to an ordinary popup, with additional functionalities that allow resizing, moving, and easier styling.
</summary>
    </member>
    <member name="M:System.Activities.Design.View.ExtensionWindow.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.View.ExtensionWindow" /> class.</summary>
    </member>
    <member name="E:System.Activities.Design.View.ExtensionWindow.Close">
      <summary>Occurs when the window is closed.</summary>
    </member>
    <member name="F:System.Activities.Design.View.ExtensionWindow.CloseEvent">
      <summary>Identifies with the <see cref="E:System.Activities.Design.View.ExtensionWindow.Close" /> routed event.</summary>
    </member>
    <member name="E:System.Activities.Design.View.ExtensionWindow.Closing">
      <summary>Occurs when the window is closing.</summary>
    </member>
    <member name="F:System.Activities.Design.View.ExtensionWindow.ClosingEvent">
      <summary>Identifies with the <see cref="E:System.Activities.Design.View.ExtensionWindow.Closing" /> routed event.</summary>
    </member>
    <member name="P:System.Activities.Design.View.ExtensionWindow.ContentPresenter">
      <summary>Gets the content presenter for this extension window.</summary>
      <returns>Returns <see cref="T:System.Windows.Controls.ContentPresenter" />.</returns>
    </member>
    <member name="P:System.Activities.Design.View.ExtensionWindow.Data">
      <summary>Gets or sets the data associated with this extension window. </summary>
      <returns>Returns <see cref="T:System.Object" />, which is data associated with this extension window.</returns>
    </member>
    <member name="F:System.Activities.Design.View.ExtensionWindow.DataProperty">
      <summary>Identifies with the <see cref="P:System.Activities.Design.View.ExtensionWindow.Data" /> dependency property.</summary>
    </member>
    <member name="M:System.Activities.Design.View.ExtensionWindow.GetPlacementTargetOffset">
      <summary> Gets the placement target offset. </summary>
      <returns>Returns <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="P:System.Activities.Design.View.ExtensionWindow.Icon">
      <summary>Gets or sets the icon associated with this extension window. </summary>
      <returns>A <see cref="T:System.Windows.Media.DrawingBrush" /> instance that represents the icon associated with this extension window.</returns>
    </member>
    <member name="F:System.Activities.Design.View.ExtensionWindow.IconProperty">
      <summary>Identifies with the <see cref="P:System.Activities.Design.View.ExtensionWindow.Icon" /> dependency property.</summary>
    </member>
    <member name="P:System.Activities.Design.View.ExtensionWindow.IsResizable">
      <summary>Gets or sets a Boolean value that specifies whether the window is resizable.</summary>
      <returns>true if the window is resizable; otherwise, false.</returns>
    </member>
    <member name="F:System.Activities.Design.View.ExtensionWindow.IsResizableProperty">
      <summary>Identifies with the <see cref="P:System.Activities.Design.View.ExtensionWindow.IsResizable" /> dependency property.</summary>
    </member>
    <member name="P:System.Activities.Design.View.ExtensionWindow.MenuItems">
      <summary>Gets or sets a collection of menu items associated with this extension window.</summary>
      <returns>Returns <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />, which is a collection of menu items associated with this extension window.</returns>
    </member>
    <member name="F:System.Activities.Design.View.ExtensionWindow.MenuItemsProperty">
      <summary>Identifies with the <see cref="P:System.Activities.Design.View.ExtensionWindow.MenuItems" /> dependency property.</summary>
    </member>
    <member name="M:System.Activities.Design.View.ExtensionWindow.OnApplyTemplate">
      <summary>Called when the template’s tree is generated.</summary>
    </member>
    <member name="M:System.Activities.Design.View.ExtensionWindow.OnDataChanged(System.Object,System.Object)">
      <summary>Called when data has changed.</summary>
      <param name="oldData">The old data.</param>
      <param name="newData">The new data.</param>
    </member>
    <member name="M:System.Activities.Design.View.ExtensionWindow.OnInitialized(System.EventArgs)">
      <summary>Raises the Initialized event.</summary>
      <param name="e">Contains event data.</param>
    </member>
    <member name="M:System.Activities.Design.View.ExtensionWindow.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Called when the mouse pointer is over the window and a mouse button is pressed.</summary>
      <param name="e">Contains event data.</param>
    </member>
    <member name="M:System.Activities.Design.View.ExtensionWindow.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Called when a key is pressed while the window has focus.</summary>
      <param name="e">Contains event data.</param>
    </member>
    <member name="M:System.Activities.Design.View.ExtensionWindow.OnPositionChanged(System.Windows.Point)">
      <summary>Called when the value of the specified position has changed.</summary>
      <param name="position">The position that has changed.</param>
    </member>
    <member name="M:System.Activities.Design.View.ExtensionWindow.OnVisibilityChanged(System.Windows.Visibility,System.Windows.Visibility)">
      <summary>Raise the <see cref="E:System.Activities.Design.View.ExtensionWindow.VisibilityChanged" /> event.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:System.Activities.Design.View.ExtensionWindow.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>Invoked when the parent of this extension window in the visual tree is changed.</summary>
      <param name="oldParent">The previous parent.</param>
      <exception cref="T:System.NotSupportedException">ExtensionWindow is used outside ExtensionSurface.</exception>
    </member>
    <member name="M:System.Activities.Design.View.ExtensionWindow.SelectWindow">
      <summary>Selects this extension window in the extension surface.</summary>
    </member>
    <member name="P:System.Activities.Design.View.ExtensionWindow.ShowResizeGrip">
      <summary>Gets or sets a Boolean value that specifies whether the resize grip is shown.</summary>
      <returns>true if the resize grip is shown; otherwise, false.</returns>
    </member>
    <member name="F:System.Activities.Design.View.ExtensionWindow.ShowResizeGripProperty">
      <summary>Identifies with the <see cref="P:System.Activities.Design.View.ExtensionWindow.ShowResizeGrip" /> dependency property.</summary>
    </member>
    <member name="P:System.Activities.Design.View.ExtensionWindow.ShowWindowHeader">
      <summary>Gets or sets a Boolean value that specifies whether the window header is shown.</summary>
      <returns>true if the window header is shown; otherwise, false.</returns>
    </member>
    <member name="F:System.Activities.Design.View.ExtensionWindow.ShowWindowHeaderProperty">
      <summary>Identifies with the <see cref="P:System.Activities.Design.View.ExtensionWindow.ShowWindowHeader" /> dependency property.</summary>
    </member>
    <member name="P:System.Activities.Design.View.ExtensionWindow.Surface">
      <summary>Gets the extension surface for this extension window.</summary>
      <returns>Returns <see cref="T:System.Activities.Design.View.ExtensionSurface" />.</returns>
    </member>
    <member name="P:System.Activities.Design.View.ExtensionWindow.Title">
      <summary>Gets or sets the title of this extension window. </summary>
      <returns>A  <see cref="T:System.String" /> that contains the title of this extension window.</returns>
    </member>
    <member name="F:System.Activities.Design.View.ExtensionWindow.TitleProperty">
      <summary>Identifies with the <see cref="P:System.Activities.Design.View.ExtensionWindow.Title" /> dependency property.</summary>
    </member>
    <member name="M:System.Activities.Design.View.ExtensionWindow.TryFindElement(System.String,System.Object@)">
      <summary>Finds the element associated with the specified name defined within this template.</summary>
      <returns>true if the search is successful; otherwise, false.</returns>
      <param name="elementName">The string name.</param>
      <param name="element">The element where this template is applied.</param>
    </member>
    <member name="E:System.Activities.Design.View.ExtensionWindow.VisibilityChanged">
      <summary>Occurs when the window’s visibility is changed.</summary>
    </member>
    <member name="F:System.Activities.Design.View.ExtensionWindow.VisibilityChangedEvent">
      <summary>Identifies with the <see cref="E:System.Activities.Design.View.ExtensionWindow.VisibilityChanged" /> routed event.</summary>
    </member>
    <member name="T:System.Activities.Design.View.ExtensionWindowCloseEventHandler"></member>
    <member name="T:System.Activities.Design.View.ExtensionWindowClosingEventHandler"></member>
    <member name="T:System.Activities.Design.View.ExtensionWindowClosingRoutedEventArgs">
      <summary>Contains the arguments for the ExtensionWindowClosingRoutedEvent.</summary>
    </member>
    <member name="P:System.Activities.Design.View.ExtensionWindowClosingRoutedEventArgs.Cancel">
      <summary>Gets or sets a value that determines whether the extension window closing has been cancelled.</summary>
      <returns>true if the event has been cancelled; otherwise, false..</returns>
    </member>
    <member name="T:System.Activities.Design.View.ExtensionWindowHeader">
      <summary>Represents the visual representation of a window header, which is used with <see cref="T:System.Activities.Design.View.ExtensionWindow" /> to enable 
moving and closing. The actual moving logic is handled by the <see cref="T:System.Activities.Design.View.ExtensionSurface" /> class.</summary>
    </member>
    <member name="M:System.Activities.Design.View.ExtensionWindowHeader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.View.ExtensionWindowHeader" /> class.</summary>
    </member>
    <member name="P:System.Activities.Design.View.ExtensionWindowHeader.ButtonCloseIcon">
      <summary>Gets or sets the icon that represents the close button.</summary>
      <returns>Returns <see cref="T:System.Windows.Media.DrawingBrush" />.</returns>
    </member>
    <member name="F:System.Activities.Design.View.ExtensionWindowHeader.ButtonCloseIconProperty">
      <summary>Gets the icon for the close button.</summary>
    </member>
    <member name="P:System.Activities.Design.View.ExtensionWindowHeader.DropDownMenuIcon">
      <summary>Gets or sets the icon that represents the drop-down menu.</summary>
      <returns>Returns <see cref="T:System.Windows.Media.DrawingBrush" />.</returns>
    </member>
    <member name="F:System.Activities.Design.View.ExtensionWindowHeader.DropDownMenuIconProperty">
      <summary>Gets the icon for the drop-down menu.</summary>
    </member>
    <member name="P:System.Activities.Design.View.ExtensionWindowHeader.Icon">
      <summary>Gets or sets the icon for this header. </summary>
      <returns>Returns <see cref="T:System.Windows.Media.DrawingBrush" />.</returns>
    </member>
    <member name="F:System.Activities.Design.View.ExtensionWindowHeader.IconProperty">
      <summary>Gets the icon of this window header.</summary>
    </member>
    <member name="M:System.Activities.Design.View.ExtensionWindowHeader.OnApplyTemplate">
      <summary>Invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate" />.</summary>
    </member>
    <member name="M:System.Activities.Design.View.ExtensionWindowHeader.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Called before the <see cref="M:System.Windows.Controls.Control.MouseLeftButtonDown" /> event occurs.</summary>
      <param name="args">The data for the event. </param>
    </member>
    <member name="M:System.Activities.Design.View.ExtensionWindowHeader.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Called before the <see cref="M:System.Windows.Controls.Control.MouseLeftButtonUp" /> event occurs.</summary>
      <param name="args">The data for the event. </param>
    </member>
    <member name="M:System.Activities.Design.View.ExtensionWindowHeader.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Called before the <see cref="M:System.Windows.Controls.Control.MouseMove" /> event occurs.</summary>
      <param name="args">The data for the event. </param>
    </member>
    <member name="M:System.Activities.Design.View.ExtensionWindowHeader.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>Invoked when the parent element of this <see cref="T:System.Activities.Design.View.ExtensionWindowHeader" /> reports a change to its underlying visual parent.</summary>
      <param name="oldParent">The previous parent. </param>
      <exception cref="T:System.NotSupportedException">ExtensionWindowHeader cannot be used outside <see cref="T:System.Activities.Design.View.ExtensionWindow" />.</exception>
    </member>
    <member name="P:System.Activities.Design.View.ExtensionWindowHeader.Title">
      <summary>Gets or sets the title for this window header.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:System.Activities.Design.View.ExtensionWindowHeader.TitleProperty">
      <summary>Gets the title of this window header.</summary>
    </member>
    <member name="T:System.Activities.Design.View.FilterableData">
      <summary>Represents a piece of data that can be filtered on visibility. </summary>
    </member>
    <member name="M:System.Activities.Design.View.FilterableData.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.View.FilterableData" /> class.</summary>
    </member>
    <member name="P:System.Activities.Design.View.FilterableData.Data">
      <summary>Gets or sets the actual data encapsulated by this class.</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:System.Activities.Design.View.FilterableData.DataProperty">
      <summary>Identifies the <see cref="P:System.Activities.Design.View.FilterableData.Data" /> dependency property.</summary>
    </member>
    <member name="P:System.Activities.Design.View.FilterableData.IsSelected">
      <summary>Gets or sets a value that indicates whether the data is selected.</summary>
      <returns>true if the data is selected; otherwise, false.</returns>
    </member>
    <member name="F:System.Activities.Design.View.FilterableData.IsSelectedProperty">
      <summary>Identifies the <see cref="P:System.Activities.Design.View.FilterableData.IsSelected" /> dependency property.</summary>
    </member>
    <member name="M:System.Activities.Design.View.FilterableData.ToString">
      <summary>Converts this piece of data into a string.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Activities.Design.View.FilterableData.Visibility">
      <summary>Gets or sets a value that indicates whether the data is visible.</summary>
      <returns>Returns <see cref="T:System.Windows.Visibility" />.</returns>
    </member>
    <member name="F:System.Activities.Design.View.FilterableData.VisibilityProperty">
      <summary>Identifies the <see cref="P:System.Activities.Design.View.FilterableData.Visibility" /> dependency property.</summary>
    </member>
    <member name="T:System.Activities.Design.View.FilterableData`1">
      <summary>Represents a piece of data that can be filtered on visibility. </summary>
      <typeparam name="TData"></typeparam>
    </member>
    <member name="M:System.Activities.Design.View.FilterableData`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.View.FilterableData`1" /> class.</summary>
    </member>
    <member name="M:System.Activities.Design.View.FilterableData`1.ToString">
      <summary>Converts this piece of data into a string.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Activities.Design.View.FilterableData`1.TypedData">
      <summary>Gets or sets the actual data encapsulated by this class.</summary>
    </member>
    <member name="T:System.Activities.Design.View.FlagEditor"></member>
    <member name="M:System.Activities.Design.View.FlagEditor.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Activities.Design.View.FlagEditor" /> class.</summary>
    </member>
    <member name="P:System.Activities.Design.View.FlagEditor.FlagType">
      <returns>Returns <see cref="T:System.Type" />.</returns>
    </member>
    <member name="F:System.Activities.Design.View.FlagEditor.FlagTypeProperty"></member>
    <member name="M:System.Activities.Design.View.FlagEditor.InitializeComponent"></member>
    <member name="M:System.Activities.Design.View.FlagEditor.OnDropDownClosed(System.EventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:System.Activities.Design.View.FlagEditor.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:System.Activities.Design.View.FlagEditor.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:System.Activities.Design.View.FlagEditor.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)">
      <param name="connectionId"></param>
      <param name="target"></param>
    </member>
    <member name="T:System.Activities.Design.View.IExpressionEditorInstance">
      <summary>Represents an expression editor.</summary>
    </member>
    <member name="M:System.Activities.Design.View.IExpressionEditorInstance.CanCompleteWord">
      <summary>Gets a Boolean value that indicates if the expression editor can complete the string being typed by the user.</summary>
      <returns>Returns a <see cref="T:System.Boolean" /> set to true..</returns>
    </member>
    <member name="M:System.Activities.Design.View.IExpressionEditorInstance.CanCopy">
      <summary>Gets a Boolean value that indicates if the Expression Editor can be closed.</summary>
      <returns>true if the the Expression Editor can be closed; otherwise, false..</returns>
    </member>
    <member name="M:System.Activities.Design.View.IExpressionEditorInstance.CanCut">
      <summary>Gets a Boolean value that indicates if the expression can be cut.</summary>
      <returns>true if the the expression can be cut; otherwise, false..</returns>
    </member>
    <member name="M:System.Activities.Design.View.IExpressionEditorInstance.CanGlobalIntellisense">
      <summary>Gets a Boolean value that indicates if the expression editor can retrieve global intellisense on the expression.</summary>
      <returns>Returns a <see cref="T:System.Boolean" /> set to true.</returns>
    </member>
    <member name="M:System.Activities.Design.View.IExpressionEditorInstance.CanParameterInfo">
      <summary>Gets a Boolean value that indicates if the expression editor can retrieve parameter information on the expression.</summary>
      <returns>Returns a <see cref="T:System.Boolean" /> set to true.</returns>
    </member>
    <member name="M:System.Activities.Design.View.IExpressionEditorInstance.CanPaste">
      <summary>Gets a Boolean value that indicates if the expression can be pasted.</summary>
      <returns>true if the the expression can be pasted; otherwise, false.</returns>
    </member>
    <member name="M:System.Activities.Design.View.IExpressionEditorInstance.CanQuickInfo">
      <summary>Gets a Boolean value that indicates if the expression editor can retrieve type information to be shown in an IntelliSense quick info tool tip.</summary>
      <returns>Returns a <see cref="T:System.Boolean" /> set to true.</returns>
    </member>
    <member name="M:System.Activities.Design.View.IExpressionEditorInstance.CanRedo">
      <summary>Gets a Boolean value that indicates if the system can redo the operation.</summary>
      <returns>true if the system can redo the operation; otherwise, false.</returns>
    </member>
    <member name="M:System.Activities.Design.View.IExpressionEditorInstance.CanUndo">
      <summary>Gets a Boolean value that indicates if the system can undo the operation.</summary>
      <returns>true if the system can undo the operation; otherwise, false.</returns>
    </member>
    <member name="M:System.Activities.Design.View.IExpressionEditorInstance.ClearSelection">
      <summary>Clears the selection in the editor.</summary>
    </member>
    <member name="M:System.Activities.Design.View.IExpressionEditorInstance.Close">
      <summary>Closes and purges the editor items. This will close the specific expression editor.</summary>
    </member>
    <member name="E:System.Activities.Design.View.IExpressionEditorInstance.Closing">
      <summary>Occurs when the Expression Editor is closing.</summary>
    </member>
    <member name="M:System.Activities.Design.View.IExpressionEditorInstance.CompleteWord">
      <summary>Determines whether the expression editor can provide a list of completions for the partial word typed by the user. For example, member, argument, and method names can be shown to the user in an attempt to help them complete the word they are typing. </summary>
      <returns>true if this method succeeds; otherwise, false.</returns>
    </member>
    <member name="M:System.Activities.Design.View.IExpressionEditorInstance.Copy">
      <summary>Copies the active expression.</summary>
      <returns>true if the copy is successful; otherwise, false.</returns>
    </member>
    <member name="M:System.Activities.Design.View.IExpressionEditorInstance.Cut">
      <summary>Cuts the active expression.</summary>
      <returns>true if the cut is successful; otherwise, false.</returns>
    </member>
    <member name="M:System.Activities.Design.View.IExpressionEditorInstance.Focus">
      <summary>Sets focus on the editor.</summary>
    </member>
    <member name="M:System.Activities.Design.View.IExpressionEditorInstance.GetCommittedText">
      <summary>Gets the text used to generate an expression.</summary>
      <returns>Returns a <see cref="T:System.String" /> containing the text used to generate an expression.</returns>
    </member>
    <member name="M:System.Activities.Design.View.IExpressionEditorInstance.GlobalIntellisense">
      <summary>Determines whether</summary>
      <returns>true if this method succeeds; otherwise, false.</returns>
    </member>
    <member name="E:System.Activities.Design.View.IExpressionEditorInstance.GotAggregateFocus">
      <summary>Occurs when the expression editor has aggregate focus. </summary>
    </member>
    <member name="P:System.Activities.Design.View.IExpressionEditorInstance.HasAggregateFocus">
      <summary>Gets a value that indicates whether the editor has aggregate focus.</summary>
      <returns>true if the editor has aggregate focus; otherwise, false.</returns>
    </member>
    <member name="P:System.Activities.Design.View.IExpressionEditorInstance.HorizontalScrollBarVisibility">
      <summary>Gets or sets a value that indicates whether the horizontal scrollbar is visible.</summary>
      <returns>Returns <see cref="T:System.Windows.Controls.ScrollBarVisibility" />.</returns>
    </member>
    <member name="P:System.Activities.Design.View.IExpressionEditorInstance.HostControl">
      <summary>Gets a <see cref="T:System.Windows.Controls.Control" /> instance that can be used to display in the ExpressionTextBox.</summary>
      <returns>Returns <see cref="T:System.Windows.Controls.Control" />.</returns>
    </member>
    <member name="E:System.Activities.Design.View.IExpressionEditorInstance.LostAggregateFocus">
      <summary>Represents an event that is raised when the expression editor loses aggregate focus.</summary>
    </member>
    <member name="P:System.Activities.Design.View.IExpressionEditorInstance.MaxHeight">
      <summary>The maximum height of the ExpressionTextBox control.</summary>
      <returns>Returns a<see cref="T:System.Double" /> containing the maximum height of the ExpressionTextBox control.</returns>
    </member>
    <member name="P:System.Activities.Design.View.IExpressionEditorInstance.MaxLines">
      <summary>Gets or sets the maximum number of lines of text to be displayed by the ExpressionTextBox control. This property implicitly sets the height of the ExpressionTextBox control when growing to fit. </summary>
      <returns>Returns a <see cref="T:System.Int32" /> that containing the maximum number of lines of text to be displayed by the ExpressionTextBox control..</returns>
    </member>
    <member name="P:System.Activities.Design.View.IExpressionEditorInstance.MinHeight">
      <summary>The minimum height of the ExpressionTextBox control.</summary>
      <returns>Returns a<see cref="T:System.Double" /> containing the minimum height of the ExpressionTextBox control..</returns>
    </member>
    <member name="P:System.Activities.Design.View.IExpressionEditorInstance.MinLines">
      <summary>Gets or sets the minimum number of lines of text to be displayed by the ExpressionTextBox control. This property implicitly sets the height of the ExpressionTextBox control.</summary>
      <returns>Returns a<see cref="T:System.Int32" /> containing the minimum number of lines of text to be displayed by the ExpressionTextBox control..</returns>
    </member>
    <member name="M:System.Activities.Design.View.IExpressionEditorInstance.ParameterInfo">
      <summary>Determines whether </summary>
      <returns>true if this method succeeds; otherwise, false.</returns>
    </member>
    <member name="M:System.Activities.Design.View.IExpressionEditorInstance.Paste">
      <summary>Pastes the active expression.</summary>
      <returns>true if the paste is successful; otherwise, false.</returns>
    </member>
    <member name="M:System.Activities.Design.View.IExpressionEditorInstance.QuickInfo">
      <summary>Determines whether type information to be shown in an IntelliSense quick info tool tip.</summary>
      <returns>true if this method succeeds; otherwise, false.</returns>
    </member>
    <member name="M:System.Activities.Design.View.IExpressionEditorInstance.Redo">
      <summary>Reapplies the last operation that was undone in the editor, i.e., reverse the effects of the undo operation. </summary>
      <returns>true if the redo is successful; otherwise, false.</returns>
    </member>
    <member name="P:System.Activities.Design.View.IExpressionEditorInstance.Text">
      <summary>Gets or sets the value of the text.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="E:System.Activities.Design.View.IExpressionEditorInstance.TextChanged">
      <summary>Represents an event that is raised when the text in an expression editor is changed.</summary>
    </member>
    <member name="M:System.Activities.Design.View.IExpressionEditorInstance.Undo">
      <summary>Undoes the last operation in the editor.</summary>
      <returns>true if the undo is successful; otherwise, false.</returns>
    </member>
    <member name="P:System.Activities.Design.View.IExpressionEditorInstance.VerticalScrollBarVisibility">
      <summary>Gets or sets a value that indicates whether the vertical scrollbar is visible.</summary>
      <returns>Returns <see cref="T:System.Windows.Controls.ScrollBarVisibility" />.</returns>
    </member>
    <member name="T:System.Activities.Design.View.IExpressionEditorService">
      <summary>Creates or closes expression editors. </summary>
    </member>
    <member name="M:System.Activities.Design.View.IExpressionEditorService.CloseExpressionEditors">
      <summary>Closes all the active expression editors.</summary>
    </member>
    <member name="M:System.Activities.Design.View.IExpressionEditorService.CreateExpressionEditor(System.Activities.Design.View.AssemblyContextControlItem,System.Activities.Design.View.ImportedNamespaceContextItem,System.Collections.Generic.List{System.Activities.Design.Model.ModelItem},System.String)">
      <summary>Creates a new expression editor.</summary>
      <returns>Returns a<see cref="T:System.Activities.Design.View.IExpressionEditorInstance" />.</returns>
      <param name="assemblies">Used to set the context for the editor session.</param>
      <param name="importedNamespaces">The imported namespaces to be used by the expression editor.</param>
      <param name="variables">Local variables for the expression editor.</param>
      <param name="text">A string used to populate the expression editor.</param>
    </member>
    <member name="M:System.Activities.Design.View.IExpressionEditorService.UpdateContext(System.Activities.Design.View.AssemblyContextControlItem,System.Activities.Design.View.ImportedNamespaceContextItem)">
      <summary>Updates the context for the editing session.</summary>
      <param name="assemblies">Used to set the context for the editor session.</param>
      <param name="importedNamespaces">The imported namespaces used by the expression editor.</param>
    </member>
    <member name="T:System.Activities.Design.View.ImportedNamespaceContextItem"></member>
    <member name="M:System.Activities.Design.View.ImportedNamespaceContextItem.#ctor"></member>
    <member name="M:System.Activities.Design.View.ImportedNamespaceContextItem.EnsureInitialized(System.Activities.Design.EditingContext)"></member>
    <member name="P:System.Activities.Design.View.ImportedNamespaceContextItem.ImportedNamespaces">
      <returns>Returns <see cref="T:System.Collections.ObjectModel.Collection`1" />.</returns>
    </member>
    <member name="P:System.Activities.Design.View.ImportedNamespaceContextItem.ItemType">
      <returns>Returns <see cref="T:System.Type" />.</returns>
    </member>
    <member name="T:System.Activities.Design.View.ModelPropertyEntryToModelItemConverter">
      <summary>Used to convert UI property data into <see cref="T:System.Activities.Design.Model.ModelItem" /> and <see cref="T:System.Activities.Design.EditingContext" /> objects that describe the UI property.</summary>
    </member>
    <member name="M:System.Activities.Design.View.ModelPropertyEntryToModelItemConverter.#ctor">
      <summary>Creates a new <see cref="T:System.Activities.Design.View.ModelPropertyEntryToModelItemConverter" />.</summary>
    </member>
    <member name="M:System.Activities.Design.View.ModelPropertyEntryToModelItemConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a <see cref="T:System.Web.UI.PropertyEntry" /> derived object to a <see cref="T:System.Activities.Design.Model.ModelItem" /></summary>
      <returns>Returns an <see cref="T:System.Object" /> that contains the <see cref="T:System.Activities.Design.Model.ModelItem" />, <see cref="T:System.Activities.Design.EditingContext" />, and value of the UI property.</returns>
      <param name="value">The <see cref="T:System.Web.UI.PropertyEntry" /> derived object to convert.</param>
      <param name="targetType">Not used.</param>
      <param name="parameter">Not used.</param>
      <param name="culture">Not used.</param>
    </member>
    <member name="M:System.Activities.Design.View.ModelPropertyEntryToModelItemConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a <see cref="T:System.Web.UI.PropertyEntry" /> derived object to a <see cref="T:System.Activities.Design.Model.ModelItem" /></summary>
      <returns>Returns an <see cref="T:System.Object" /> that contains the <see cref="T:System.Activities.Design.Model.ModelItem" />, <see cref="T:System.Activities.Design.EditingContext" />, and value of the UI property.</returns>
      <param name="values">An array of <see cref="T:System.Web.UI.PropertyEntry" /> derived objects to convert.</param>
      <param name="targetType">Not used.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">Not used.</param>
    </member>
    <member name="M:System.Activities.Design.View.ModelPropertyEntryToModelItemConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Not supported in this release.</summary>
      <returns>Returns an <see cref="T:System.Object" />.</returns>
      <param name="value">Not used.</param>
      <param name="targetType">Not used.</param>
      <param name="parameter">Not used.</param>
      <param name="culture">Not used.</param>
    </member>
    <member name="M:System.Activities.Design.View.ModelPropertyEntryToModelItemConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>Not supported in this release.</summary>
      <returns>Returns an <see cref="T:System.Object" />.</returns>
      <param name="value">Not used.</param>
      <param name="targetTypes">Not used.</param>
      <param name="parameter">Not used.</param>
      <param name="culture">Not used.</param>
    </member>
    <member name="T:System.Activities.Design.View.ModelPropertyEntryToOwnerActivityConverter">
      <summary>Converts a ModelPropertyEntry to a ModelItem that owns the property.</summary>
    </member>
    <member name="M:System.Activities.Design.View.ModelPropertyEntryToOwnerActivityConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.View.ModelPropertyEntryToOwnerActivityConverter" /> class.</summary>
    </member>
    <member name="M:System.Activities.Design.View.ModelPropertyEntryToOwnerActivityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a ModelPropertyEntry to a ModelItem that owns the property.</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
      <param name="value">The value that is produced by the binding target.</param>
      <param name="targetType">The type to convert to.</param>
      <param name="parameter">The converter parameter to use. You can pass a Boolean value in. By default, this converter will always return the parent model item that is of type WorkflowElement.  If false is passed to this method, the converter will simply return the first parent model item, which may not be a model item that points to a WorkflowElement.</param>
      <param name="culture">The culture to use in the converter.</param>
    </member>
    <member name="M:System.Activities.Design.View.ModelPropertyEntryToOwnerActivityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Calling this method is not supported.</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
      <param name="value">The value that is produced by the binding target.</param>
      <param name="targetType">The type to convert to.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
    </member>
    <member name="T:System.Activities.Design.View.PrimarySelectionAdorner">
      <summary>Represents the primary adorner that decorates a UI element.</summary>
    </member>
    <member name="M:System.Activities.Design.View.PrimarySelectionAdorner.#ctor(System.Windows.UIElement)">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Design.View.PrimarySelectionAdorner" /> class, which is always rendered on top of the specified adorned element.</summary>
      <param name="adornedElement">The element being adorned by the newly constructed <see cref="T:System.Activities.Design.View.PrimarySelectionAdorner" /> instance.</param>
    </member>
    <member name="T:System.Activities.Design.View.PropertyKind">
      <summary>An enumeration that describes the type of argument being passed.</summary>
    </member>
    <member name="F:System.Activities.Design.View.PropertyKind.InArgument">
      <summary>The argument is an input-only parameter, meaning that it can only be used to pass a value to a method..</summary>
    </member>
    <member name="F:System.Activities.Design.View.PropertyKind.InOutArgument">
      <summary>The argument is an input/output parameter, meaning that it can be used for passing a value to a method, and get back a value from a method.</summary>
    </member>
    <member name="F:System.Activities.Design.View.PropertyKind.OutArgument">
      <summary>The argument is an output-only parameter, meaning that it can only be used to pass a value back from a method.</summary>
    </member>
    <member name="F:System.Activities.Design.View.PropertyKind.Property">
      <summary>The argument is a property.</summary>
    </member>
    <member name="T:System.Activities.Design.View.ShellBarItemVisibility"></member>
    <member name="F:System.Activities.Design.View.ShellBarItemVisibility.None">
      <summary />
    </member>
    <member name="F:System.Activities.Design.View.ShellBarItemVisibility.Variables">
      <summary />
    </member>
    <member name="F:System.Activities.Design.View.ShellBarItemVisibility.Arguments">
      <summary />
    </member>
    <member name="F:System.Activities.Design.View.ShellBarItemVisibility.Imports">
      <summary />
    </member>
    <member name="F:System.Activities.Design.View.ShellBarItemVisibility.Zoom">
      <summary />
    </member>
    <member name="F:System.Activities.Design.View.ShellBarItemVisibility.MiniMap">
      <summary />
    </member>
    <member name="F:System.Activities.Design.View.ShellBarItemVisibility.All">
      <summary />
    </member>
    <member name="T:System.Activities.Design.View.TypePresenter">
      <summary>Handles the display of a collection of types in a component that is part of a user interface.</summary>
    </member>
    <member name="M:System.Activities.Design.View.TypePresenter.#ctor">
      <summary>Creates a new instance of a <see cref="T:System.Activities.Design.View.TypePresenter" /> that initializes a collection of wrapper objects that each represent a primitive type.</summary>
    </member>
    <member name="P:System.Activities.Design.View.TypePresenter.AllowNull">
      <summary>Gets or sets a value that indicates whether or not a property can be null.</summary>
      <returns>true if the property can be null; otherwise, false.</returns>
    </member>
    <member name="F:System.Activities.Design.View.TypePresenter.AllowNullProperty">
      <summary>Dependency property identifier field that indicates whether properties associated with this type presenter can be null.</summary>
    </member>
    <member name="P:System.Activities.Design.View.TypePresenter.BrowseTypeDirectly">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:System.Activities.Design.View.TypePresenter.BrowseTypeDirectlyProperty"></member>
    <member name="P:System.Activities.Design.View.TypePresenter.CenterActivityTypeResolverDialog"></member>
    <member name="F:System.Activities.Design.View.TypePresenter.CenterActivityTypeResolverDialogProperty"></member>
    <member name="P:System.Activities.Design.View.TypePresenter.Context">
      <summary>Gets or sets the value of an editing context property.</summary>
      <returns>An editing context item.</returns>
    </member>
    <member name="F:System.Activities.Design.View.TypePresenter.ContextProperty">
      <summary>Dependency property identifier field that contains a property of the editing context, for instance a list of currently selected objects or a list of services running in the designer.</summary>
    </member>
    <member name="P:System.Activities.Design.View.TypePresenter.Filter">
      <returns>Returns <see cref="T:System.Func`2" />.</returns>
    </member>
    <member name="F:System.Activities.Design.View.TypePresenter.FilterProperty"></member>
    <member name="M:System.Activities.Design.View.TypePresenter.InitializeComponent">
      <summary>Initializes a combo box. The contents of this method are generated by the designer.</summary>
    </member>
    <member name="P:System.Activities.Design.View.TypePresenter.Items">
      <summary>Gets an enumeration of wrapper types that are in the current type presenter.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="P:System.Activities.Design.View.TypePresenter.Label">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:System.Activities.Design.View.TypePresenter.LabelProperty"></member>
    <member name="P:System.Activities.Design.View.TypePresenter.MostRecentlyUsedTypes"></member>
    <member name="F:System.Activities.Design.View.TypePresenter.MostRecentlyUsedTypesProperty"></member>
    <member name="P:System.Activities.Design.View.TypePresenter.NullTypeWrapper">
      <returns>Returns <see cref="T:System.Activities.Design.View.TypeWrapper" />.</returns>
    </member>
    <member name="E:System.Activities.Design.View.TypePresenter.PropertyChanged">
      <summary>Declaration of the event that gets raised when a property on the specified user interface control has been changed.</summary>
    </member>
    <member name="M:System.Activities.Design.View.TypePresenter.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)">
      <summary>Obsolete. Not implemented.</summary>
      <param name="connectionId"></param>
      <param name="target"></param>
    </member>
    <member name="P:System.Activities.Design.View.TypePresenter.Text">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:System.Activities.Design.View.TypePresenter.TextProperty"></member>
    <member name="P:System.Activities.Design.View.TypePresenter.Type">
      <summary>Gets or sets the type of the current <see cref="T:System.Activities.Design.View.TypePresenter" />.</summary>
      <returns>A type object.</returns>
    </member>
    <member name="E:System.Activities.Design.View.TypePresenter.TypeBrowserClosed"></member>
    <member name="F:System.Activities.Design.View.TypePresenter.TypeBrowserClosedEvent"></member>
    <member name="E:System.Activities.Design.View.TypePresenter.TypeBrowserOpened"></member>
    <member name="F:System.Activities.Design.View.TypePresenter.TypeBrowserOpenedEvent"></member>
    <member name="E:System.Activities.Design.View.TypePresenter.TypeChanged"></member>
    <member name="F:System.Activities.Design.View.TypePresenter.TypeChangedEvent"></member>
    <member name="P:System.Activities.Design.View.TypePresenter.TypeName">
      <summary>Gets the name for a type displayed in a component.</summary>
      <returns>A string that represents the display name of a type.</returns>
    </member>
    <member name="F:System.Activities.Design.View.TypePresenter.TypeProperty">
      <summary>Dependency property identifier field that indicates the current type represented by the <see cref="T:System.Activities.Design.View.TypePresenter" />.</summary>
    </member>
    <member name="T:System.Activities.Design.View.TypeResolvingOptions">
      <summary>Supports options resolving types.</summary>
    </member>
    <member name="M:System.Activities.Design.View.TypeResolvingOptions.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Activities.Design.View.TypeResolvingOptions" /> class.</summary>
    </member>
    <member name="P:System.Activities.Design.View.TypeResolvingOptions.BrowseTypeDirectly">
      <summary>Gets a value that indicates whether a type is found directly.</summary>
      <returns>true if the type is found directly; otherwise, false.</returns>
    </member>
    <member name="P:System.Activities.Design.View.TypeResolvingOptions.Filter">
      <summary>Resolves types by filtering.</summary>
      <returns>
A <see cref="T:System.Func`2" /> delegate for a method that returns true or false.</returns>
    </member>
    <member name="T:System.Activities.Design.View.TypeWrapper">
      <summary>Provides the functionality to wrap a specified object to make it function as an object of a different type. This is a sealed class.</summary>
    </member>
    <member name="P:System.Activities.Design.View.TypeWrapper.DisplayName">
      <summary>Gets the display name for the current wrapper type.</summary>
      <returns>A string that contains the display name.</returns>
    </member>
    <member name="M:System.Activities.Design.View.TypeWrapper.Equals(System.Object)">
      <summary>Determines whether a typewrapper of the specified type is equal to the type of the current typewrapper.</summary>
      <returns>true if a typewrapper of the specified type is equal to the type of the current typewrapper; otherwise, false.</returns>
      <param name="obj">An object representing a typewrapper.</param>
    </member>
    <member name="M:System.Activities.Design.View.TypeWrapper.GetHashCode">
      <summary>Returns a hash code for the current type.</summary>
      <returns>An integer representing a hash code.</returns>
    </member>
    <member name="P:System.Activities.Design.View.TypeWrapper.IsTypeDefinition">
      <summary>Gets an indication whether the display name defines a type.</summary>
      <returns>true if the display name defines a type; otherwise, false. </returns>
    </member>
    <member name="P:System.Activities.Design.View.TypeWrapper.Tag">
      <summary>Gets data about the wrapper type.</summary>
      <returns>An object that contains data about the control.</returns>
    </member>
    <member name="M:System.Activities.Design.View.TypeWrapper.ToString">
      <summary>Returns the contents of a tag that contains a label for the current wrapper type.</summary>
      <returns>A string version of the tag value.</returns>
    </member>
    <member name="P:System.Activities.Design.View.TypeWrapper.Type">
      <summary>Gets the type of the current wrapper.</summary>
      <returns>An object that represents the type of the current wrapper.</returns>
    </member>
    <member name="T:System.Activities.Design.View.ViewStateChangedEventArgs">
      <summary>Provides an object formatted to serve as an event argument containing the information about the changed view state.</summary>
    </member>
    <member name="M:System.Activities.Design.View.ViewStateChangedEventArgs.#ctor(System.Activities.Design.Model.ModelItem,System.String,System.Object,System.Object)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Design.View.ViewStateChangedEventArgs" /> class with a specified parent model item and its key/value pair with the old and the new values.</summary>
      <param name="modelItem">An item in the activity designer model that serves as a parent element in the XML view of the model.</param>
      <param name="key">The name of an attribute in the specified parent element. </param>
      <param name="newValue">The new value for the specified attribute key.</param>
      <param name="oldValue">The old value of the specified attribute key. </param>
    </member>
    <member name="P:System.Activities.Design.View.ViewStateChangedEventArgs.Key">
      <summary>Gets an attribute key name in a specified view element.</summary>
      <returns>A string that represents the name of a key in a view element.</returns>
    </member>
    <member name="P:System.Activities.Design.View.ViewStateChangedEventArgs.NewValue">
      <summary>Gets the new value for the key in the current attribute key/value pair.</summary>
      <returns>An object that contains a key value.</returns>
    </member>
    <member name="P:System.Activities.Design.View.ViewStateChangedEventArgs.OldValue">
      <summary>Gets the old value of the key in the current attribute key/value pair.</summary>
      <returns>An object that contains a key value.</returns>
    </member>
    <member name="P:System.Activities.Design.View.ViewStateChangedEventArgs.ParentModelItem">
      <summary>Gets an item in the activity designer model that serves as a parent item in the XAML view of the model.</summary>
      <returns>A parent element in an activity designer model.</returns>
    </member>
    <member name="T:System.Activities.Design.View.ViewStateChangedEventHandler">
      <summary>Declares a delegate type that handles changes to the view state.</summary>
    </member>
    <member name="T:System.Activities.Design.View.ViewStateService">
      <summary>When implemented in a derived class, generates a text property that stores and retrieves its value from an associated control’s view state.</summary>
    </member>
    <member name="M:System.Activities.Design.View.ViewStateService.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Design.View.ViewStateService" /> class.</summary>
    </member>
    <member name="M:System.Activities.Design.View.ViewStateService.RemoveViewState(System.Activities.Design.Model.ModelItem,System.String)">
      <summary>When implemented in a derived class, removes the view state represented by the specified key and associated with the specified model item.</summary>
      <returns>true if the view state was removed; otherwise, false.</returns>
      <param name="modelItem">The workflow activity <see cref="T:System.Activities.Design.Model.ModelItem" /> associated with the current view state.</param>
      <param name="key">The <see cref="T:System.String" /> that identifies the view state item that is stored.</param>
    </member>
    <member name="M:System.Activities.Design.View.ViewStateService.RetrieveAllViewState(System.Activities.Design.Model.ModelItem)">
      <summary>When implemented in a derived class, returns the complete view state of the control associated with the specified model item.</summary>
      <returns>A key/value pair list of view state items.</returns>
      <param name="modelItem">A workflow activity model item.</param>
    </member>
    <member name="M:System.Activities.Design.View.ViewStateService.RetrieveViewState(System.Activities.Design.Model.ModelItem,System.String)">
      <summary>When implemented in a derived class, returns the item that matches the specified key in the view state associated with the specified model item.</summary>
      <returns>An object version of the view state item to be retrieved; otherwise, null.</returns>
      <param name="modelItem">The workflow activity whose specified view state item is being retrieved.</param>
      <param name="key">The <see cref="T:System.String" /> that identifies the view state item that is retrieved.</param>
    </member>
    <member name="M:System.Activities.Design.View.ViewStateService.StoreViewState(System.Activities.Design.Model.ModelItem,System.String,System.Object)">
      <summary>When implemented in a derived class, stores the item represented by the specified key in the view state associated with the specified model item.</summary>
      <param name="modelItem">The workflow activity <see cref="T:System.Activities.Design.Model.ModelItem" /> associated with the current view state.</param>
      <param name="key">The <see cref="T:System.String" /> that identifies the view state item that is stored.</param>
      <param name="value">An <see cref="T:System.Object" /> to be stored.</param>
    </member>
    <member name="M:System.Activities.Design.View.ViewStateService.StoreViewStateWithUndo(System.Activities.Design.Model.ModelItem,System.String,System.Object)">
      <summary>When implemented in a derived class, records the current setting of the item represented by the specified key so that it is available for an undo operation. Then the item represented by the specified key is stored in the view state of the specified model item.</summary>
      <param name="modelItem">The workflow activity <see cref="T:System.Activities.Design.Model.ModelItem" /> associated with the current view state.</param>
      <param name="key">The <see cref="T:System.String" /> that identifies the view state item that is stored.</param>
      <param name="value">An <see cref="T:System.Object" /> to be stored.</param>
    </member>
    <member name="E:System.Activities.Design.View.ViewStateService.UndoableViewStateChanged">
      <summary>When implemented in a derived class, declares an event that signals that a change has been made to the control’s undoable view state.</summary>
    </member>
    <member name="E:System.Activities.Design.View.ViewStateService.ViewStateChanged">
      <summary>When implemented in a derived class, declares an event that signals that a change has been made to the control’s view state.</summary>
    </member>
    <member name="T:System.Activities.Design.View.VirtualizedContainerService"></member>
    <member name="M:System.Activities.Design.View.VirtualizedContainerService.#ctor(System.Activities.Design.EditingContext)">
      <param name="context"></param>
    </member>
    <member name="M:System.Activities.Design.View.VirtualizedContainerService.GetContainer(System.Activities.Design.Model.ModelItem,System.Activities.Design.ISourceContainer)">
      <returns>Returns <see cref="T:System.Windows.UIElement" />.</returns>
      <param name="modelItem"></param>
      <param name="sourceContainer"></param>
    </member>
    <member name="M:System.Activities.Design.View.VirtualizedContainerService.GetHintSize(System.Object)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
      <param name="instance"></param>
    </member>
    <member name="F:System.Activities.Design.View.VirtualizedContainerService.HintSizeName"></member>
    <member name="M:System.Activities.Design.View.VirtualizedContainerService.SetHintSize(System.Object,System.Object)">
      <param name="instance"></param>
      <param name="value"></param>
    </member>
    <member name="T:System.Activities.Design.View.WorkflowViewService">
      <summary>Handles the mapping of activity designer visual elements and their underlying model items.</summary>
    </member>
    <member name="M:System.Activities.Design.View.WorkflowViewService.#ctor(System.Activities.Design.EditingContext)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.Design.View.WorkflowViewService" /> class that uses the specified <see cref="T:System.Activities.Design.EditingContext" />.</summary>
      <param name="context">The editing tool that is used to manipulate objects on the design surface.</param>
    </member>
    <member name="M:System.Activities.Design.View.WorkflowViewService.CreateViewElement(System.Activities.Design.Model.ModelItem)">
      <summary>Creates a new <see cref="T:System.Activities.Design.WorkflowViewElement" /> that supports the type of the specified <see cref="T:System.Activities.Design.Model.ModelItem" />.</summary>
      <returns>A workflow view element that supports the same type as the model item argument.</returns>
      <param name="modelItem">One entity in the editing model of an activity designer.</param>
    </member>
    <member name="M:System.Activities.Design.View.WorkflowViewService.GetModel(System.Windows.DependencyObject)">
      <summary>Returns a <see cref="T:System.Activities.Design.Model.ModelItem" /> that maps to the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns>A model item that maps to a dependency object.</returns>
      <param name="view">A workflow view element that contains the model item.</param>
    </member>
    <member name="M:System.Activities.Design.View.WorkflowViewService.GetView(System.Activities.Design.Model.ModelItem)">
      <summary>Creates a new <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> that maps to the specified <see cref="T:System.Activities.Design.Model.ModelItem" />.</summary>
      <returns>A dependency object that maps to a model item.</returns>
      <param name="model">One entity in the editing model of an activity designer.</param>
    </member>
    <member name="M:System.Activities.Design.View.WorkflowViewService.GetViewElement(System.Activities.Design.Model.ModelItem)">
      <summary>Creates a new <see cref="T:System.Activities.Design.WorkflowViewElement" /> that maps to the specified <see cref="T:System.Activities.Design.Model.ModelItem" />.</summary>
      <returns>A new view element that maps to a specified model item.</returns>
      <param name="modelItem">One entity in the editing model of an activity designer.</param>
    </member>
    <member name="T:System.Activities.Design.View.WorkflowViewStateService"></member>
    <member name="M:System.Activities.Design.View.WorkflowViewStateService.#ctor(System.Activities.Design.EditingContext)">
      <param name="context"></param>
    </member>
    <member name="M:System.Activities.Design.View.WorkflowViewStateService.GetViewState(System.Object)">
      <returns>Returns <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
      <param name="instance"></param>
    </member>
    <member name="M:System.Activities.Design.View.WorkflowViewStateService.RemoveViewState(System.Activities.Design.Model.ModelItem,System.String)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
      <param name="modelItem"></param>
      <param name="key"></param>
    </member>
    <member name="M:System.Activities.Design.View.WorkflowViewStateService.RetrieveAllViewState(System.Activities.Design.Model.ModelItem)">
      <returns>Returns <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
      <param name="modelItem"></param>
    </member>
    <member name="M:System.Activities.Design.View.WorkflowViewStateService.RetrieveViewState(System.Activities.Design.Model.ModelItem,System.String)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
      <param name="modelItem"></param>
      <param name="key"></param>
    </member>
    <member name="M:System.Activities.Design.View.WorkflowViewStateService.SetViewState(System.Object,System.Collections.Generic.Dictionary{System.String,System.Object})">
      <param name="instance"></param>
      <param name="value"></param>
    </member>
    <member name="M:System.Activities.Design.View.WorkflowViewStateService.StoreViewState(System.Activities.Design.Model.ModelItem,System.String,System.Object)">
      <param name="modelItem"></param>
      <param name="key"></param>
      <param name="value"></param>
    </member>
    <member name="M:System.Activities.Design.View.WorkflowViewStateService.StoreViewStateWithUndo(System.Activities.Design.Model.ModelItem,System.String,System.Object)">
      <param name="modelItem"></param>
      <param name="key"></param>
      <param name="value"></param>
    </member>
    <member name="E:System.Activities.Design.View.WorkflowViewStateService.UndoableViewStateChanged"></member>
    <member name="E:System.Activities.Design.View.WorkflowViewStateService.ViewStateChanged"></member>
    <member name="F:System.Activities.Design.View.WorkflowViewStateService.ViewStateName"></member>
    <member name="T:System.WorkflowModel.Design.ModelTree.MorphHelper"></member>
    <member name="M:System.WorkflowModel.Design.ModelTree.MorphHelper.AddPropertyValueMorphHelper(System.Type,System.WorkflowModel.Design.ModelTree.PropertyValueMorphHelper)"></member>
    <member name="M:System.WorkflowModel.Design.ModelTree.MorphHelper.GetPropertyValueMorphHelper(System.Type)">
      <returns>Returns <see cref="T:System.WorkflowModel.Design.ModelTree.MorphHelper.PropertyValueMorphHelper" />.</returns>
      <param name="propertyType"></param>
    </member>
    <member name="M:System.WorkflowModel.Design.ModelTree.MorphHelper.MorphObject(System.Activities.Design.Model.ModelItem,System.Activities.Design.Model.ModelItem)">
      <param name="oldModelItem"></param>
      <param name="newModelitem"></param>
    </member>
    <member name="M:System.WorkflowModel.Design.ModelTree.MorphHelper.MorphProperties(System.Activities.Design.Model.ModelItem,System.Activities.Design.Model.ModelItem)">
      <param name="oldModelItem"></param>
      <param name="newModelitem"></param>
    </member>
    <member name="T:System.WorkflowModel.Design.ModelTree.PropertyValueMorphHelper"></member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.Activities.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Activities</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualBasic.Activities.VisualBasic">
      <summary>Provides an attached property store for <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasic.GetSettings(System.Object)">
      <summary>Retrieves the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> instance attached to the specified object.</summary>
      <returns>The <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> instance attached to the specified object.</returns>
      <param name="target">The object to inspect.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasic.SetSettings(System.Object,Microsoft.VisualBasic.Activities.VisualBasicSettings)">
      <summary>Attaches a <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> instance to the specified object.</summary>
      <param name="target">The object to which the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> instance is attached.</param>
      <param name="value">The <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> instance to attach.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Activities.VisualBasicDesignerHelper">
      <summary>Creates and compiles <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> and <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> expressions.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicDesignerHelper.CreatePrecompiledVisualBasicReference(System.Type,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Activities.LocationReferenceEnvironment,System.Type@,System.Activities.ExpressionParser.SourceExpressionException@,Microsoft.VisualBasic.Activities.VisualBasicSettings@)">
      <summary>Creates and returns a precompiled <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> expression.</summary>
      <returns>The precompiled <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> expression.</returns>
      <param name="targetType">The expected expression type.</param>
      <param name="expressionText">The expression in Visual Basic syntax.</param>
      <param name="namespaces">The imported namespaces.</param>
      <param name="referencedAssemblies">The referenced assemblies.</param>
      <param name="environment">The mechanism for resolving names to their associated <see cref="T:System.Activities.Argument" /> and <see cref="T:System.Activities.Variable" /> objects.</param>
      <param name="returnType">When this method returns, contains the result type of the expression. This parameter is passed uninitialized.</param>
      <param name="compileError">When this method returns, contains any compilation errors that occurred, or null if compilation was successful. This parameter is passed uninitialized.</param>
      <param name="vbSettings">When this method returns, contains the settings required to compile the expression. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicDesignerHelper.CreatePrecompiledVisualBasicValue(System.Type,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Activities.LocationReferenceEnvironment,System.Type@,System.Activities.ExpressionParser.SourceExpressionException@,Microsoft.VisualBasic.Activities.VisualBasicSettings@)">
      <summary>Creates and returns a precompiled <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> expression.</summary>
      <returns>The precompiled <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> expression.</returns>
      <param name="targetType">The expected expression type.</param>
      <param name="expressionText">The expression in Visual Basic syntax.</param>
      <param name="namespaces">The imported namespaces.</param>
      <param name="referencedAssemblies">The referenced assemblies.</param>
      <param name="environment">The mechanism for resolving names to their associated <see cref="T:System.Activities.Argument" /> and <see cref="T:System.Activities.Variable" /> objects.</param>
      <param name="returnType">When this method returns, contains the result type of the expression. This parameter is passed uninitialized.</param>
      <param name="compileError">When this method returns, contains any compilation errors that occurred, or null if compilation was successful. This parameter is passed uninitialized. This parameter is passed uninitialized.</param>
      <param name="vbSettings">When this method returns, contains the settings required to compile the expression.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicDesignerHelper.RecompileVisualBasicReference(System.Activities.ActivityWithResult,System.Type@,System.Activities.ExpressionParser.SourceExpressionException@,Microsoft.VisualBasic.Activities.VisualBasicSettings@)">
      <summary>Recompiles a previously compiled <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> expression.</summary>
      <returns>The recompiled <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> expression.</returns>
      <param name="visualBasicReference">The expression to recompile.</param>
      <param name="returnType">When this method returns, contains the result type of the expression. This parameter is passed uninitialized.</param>
      <param name="compileError">When this method returns, contains any compilation errors that occurred, or null if compilation was successful. This parameter is passed uninitialized.</param>
      <param name="vbSettings">When this method returns, contains the settings required to compile the expression. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicDesignerHelper.RecompileVisualBasicValue(System.Activities.ActivityWithResult,System.Type@,System.Activities.ExpressionParser.SourceExpressionException@,Microsoft.VisualBasic.Activities.VisualBasicSettings@)">
      <summary>Recompiles a previously compiled <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> expression.</summary>
      <returns>The recompiled <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> expression.</returns>
      <param name="visualBasicValue">The expression to recompile.</param>
      <param name="returnType">When this method returns, contains the result type of the expression. This parameter is passed uninitialized.</param>
      <param name="compileError">When this method returns, contains any compilation errors that occurred, or null if compilation was successful. This parameter is passed uninitialized. This parameter is passed uninitialized.</param>
      <param name="vbSettings">When this method returns, contains the settings required to compile the expression.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference">
      <summary>Represents an assembly reference and the namespace imported from that assembly.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicImportReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Activities.VisualBasicImportReference.Assembly">
      <summary>Gets or sets the full name of the assembly referenced by this <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />.</summary>
      <returns>The full name of the assembly referenced by this <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicImportReference.Equals(Microsoft.VisualBasic.Activities.VisualBasicImportReference)">
      <summary>Determines whether the specified <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" /> is equal to the current <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />.</summary>
      <returns>true if the specified <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" /> is equal to the current <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />; otherwise, false.</returns>
      <param name="other">The <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" /> to compare with the current <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicImportReference.GetHashCode">
      <summary>Returns the hash code for the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" /> instance.</summary>
      <returns>The hash code for the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" /> instance.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Activities.VisualBasicImportReference.Import">
      <summary>Gets or sets the imported namespace referenced by this <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />.</summary>
      <returns>The imported namespace referenced by this <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1">
      <summary>Contains an expression in Visual Basic syntax that evaluates to an l-value, which supports binding of the <see cref="F:System.Activities.ArgumentDirection.Out" /> arguments.</summary>
      <typeparam name="TResult">The type of the expression.</typeparam>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicReference`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicReference`1.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> class using the specific expression.</summary>
      <param name="expressionText">The expression string in Visual Basic syntax.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicReference`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines whether the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> can be converted into a <see cref="T:System.String" />.</summary>
      <returns>true if the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> can be converted into a string; otherwise false.</returns>
      <param name="context">The context information that is used for conversion.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicReference`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> to a <see cref="T:System.String" />.</summary>
      <returns>A string representation of the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" />.</returns>
      <param name="context">The context information that is used for conversion.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Activities.VisualBasicReference`1.ExpressionText">
      <summary>Gets or set the Visual Basic expression represented by this <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" />.</summary>
      <returns>The Visual Basic expression.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Activities.VisualBasicSettings">
      <summary>Contains settings that <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> and <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> instances use to compile the source text of the expressions they contain.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicSettings.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Activities.VisualBasicSettings.Default">
      <summary>Gets a <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> that contains the default set of assembly references and imported namespaces. This set is available to all <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> and <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> instances in a given <see cref="T:System.AppDomain" />.</summary>
      <returns>A <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> that contains the default set of assembly references and imported namespaces.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Activities.VisualBasicSettings.ImportReferences">
      <summary>Gets a collection of <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" /> objects, each of which represents an assembly reference and a namespace imported from that assembly.</summary>
      <returns>A collection of <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" /> objects, each of which represents an assembly reference and a namespace imported from that assembly.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1">
      <summary>Contains an expression in Visual Basic syntax that evaluates to an r-value, which supports binding of <see cref="F:System.Activities.ArgumentDirection.In" /> arguments.</summary>
      <typeparam name="TResult">The type of the expression.</typeparam>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicValue`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicValue`1.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> class using the specified expression.</summary>
      <param name="expressionText">The expression string in Visual Basic syntax.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicValue`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines whether the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> can be converted into a <see cref="T:System.String" />.</summary>
      <returns>true if the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> can be converted into a string; otherwise false.</returns>
      <param name="context">The context information that is used for conversion.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicValue`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> to a <see cref="T:System.String" />.</summary>
      <returns>A string representation of the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" />.</returns>
      <param name="context">The context information that is used for conversion.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Activities.VisualBasicValue`1.ExpressionText">
      <summary>Gets or set the Visual Basic expression represented by this <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" />.</summary>
      <returns>The Visual Basic expression.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter">
      <summary>Converts a <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> instance to the specified type.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an object of the specified type can be converted to a <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> instance.</summary>
      <returns>true if the specified type can be converted from; otherwise, false.</returns>
      <param name="context">Context information that is used for conversion.</param>
      <param name="sourceType">The type to convert from.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether a <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> instance can be converted into an instance of the specified type.</summary>
      <returns>true if a <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> instance can be converted to an instance of the specified type; otherwise, false.</returns>
      <param name="context">Context information that is used for conversion.</param>
      <param name="destinationType">The type to convert to.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to a <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> instance.</summary>
      <returns>An object that represents the converted value.</returns>
      <param name="context">Context information that is used for conversion.</param>
      <param name="culture">An optional <see cref="T:System.Globalization.CultureInfo" />. If not supplied, the current culture is assumed.</param>
      <param name="value">The object to convert.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts a <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> instance to the specified type.</summary>
      <returns>The converted value.</returns>
      <param name="context">Context information that is used for conversion.</param>
      <param name="culture">An optional <see cref="T:System.Globalization.CultureInfo" />. If not supplied, the current culture is assumed.</param>
      <param name="value">The <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> instance to convert.</param>
      <param name="destinationType">The type to convert to.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsValueSerializer">
      <summary>Serializes <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> instances to XAML.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsValueSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsValueSerializer" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines whether the specified <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> instance can be converted into a <see cref="T:System.String" />.</summary>
      <returns>true if the specified <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> instance can be converted into a <see cref="T:System.String" />; otherwise, false. </returns>
      <param name="value">The value to convert.</param>
      <param name="context">Context information that is used for conversion.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts the specified <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> instance into a <see cref="T:System.String" />.</summary>
      <returns>A string representation of the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> instance.</returns>
      <param name="value">The value to convert.</param>
      <param name="context">Context information that is used for conversion.</param>
    </member>
    <member name="T:System.Activities.Activity">
      <summary>An abstract base class used to create composite activities from pre-existing <see cref="T:System.Activities.Activity" /> objects.</summary>
    </member>
    <member name="M:System.Activities.Activity.#ctor">
      <summary>When implemented in a derived class, creates a new instance of the derived class.</summary>
    </member>
    <member name="P:System.Activities.Activity.CacheId">
      <summary>Gets the identifier of the cache that is unique within the scope of the workflow definition.</summary>
      <returns>The identifier of the cache that is unique within the scope of the workflow definition.</returns>
    </member>
    <member name="M:System.Activities.Activity.CacheMetadata(System.Activities.ActivityMetadata)">
      <summary>Creates and validates a description of the activity’s arguments, variables, child activities, and activity delegates.</summary>
      <param name="metadata">The activity’s metadata that encapsulates the activity’s arguments, variables, child activities, and activity delegates.</param>
    </member>
    <member name="P:System.Activities.Activity.Constraints">
      <summary>Gets a collection of <see cref="T:System.Activities.Validation.Constraint" /> activities that can be configured to provide validation for the <see cref="T:System.Activities.Activity" />.</summary>
      <returns>The collection of constraints.</returns>
    </member>
    <member name="P:System.Activities.Activity.DisplayName">
      <summary>Gets or sets an optional friendly name that is used for debugging, validation, exception handling, and tracking.</summary>
      <returns>A friendly name that is used for debugging, validation, exception handling, and tracking.</returns>
    </member>
    <member name="P:System.Activities.Activity.Id">
      <summary>Gets an identifier that is unique in the scope of the workflow definition.</summary>
      <returns>An identifier that is unique in the scope of the workflow definition.</returns>
    </member>
    <member name="P:System.Activities.Activity.Implementation">
      <summary>Gets or sets the delegate that returns an <see cref="T:System.Activities.Activity" /> that contains the execution logic.</summary>
      <returns>The delegate that contains the execution logic.</returns>
    </member>
    <member name="M:System.Activities.Activity.ShouldSerializeDisplayName">
      <summary>Indicates whether the <see cref="P:System.Activities.Activity.DisplayName" /> property should be serialized.</summary>
      <returns>true if the <see cref="P:System.Activities.Activity.DisplayName" /> property value should be serialized; otherwise false.</returns>
    </member>
    <member name="M:System.Activities.Activity.ToString">
      <summary>Returns a <see cref="T:System.String" /> that contains the <see cref="P:System.Activities.Activity.Id" /> and <see cref="P:System.Activities.Activity.DisplayName" /> of the <see cref="T:System.Activities.Activity" />.</summary>
      <returns>The ID and the display name of the activity.</returns>
    </member>
    <member name="T:System.Activities.Activity`1">
      <summary>An abstract base class used to create composite activities from pre-existing <see cref="T:System.Activities.Activity" /> objects, which specifies a result type using the activity’s type specifier.</summary>
      <typeparam name="TResult">The type of the return value of the activity.</typeparam>
    </member>
    <member name="M:System.Activities.Activity`1.#ctor">
      <summary>When implemented in a derived class, creates a new instance of the derived class.</summary>
    </member>
    <member name="M:System.Activities.Activity`1.FromValue(`0)">
      <summary>Returns a <see cref="T:System.Activities.Activity`1" /> expression that evaluates to the given value.</summary>
      <returns>A workflow expression that evaluates to the given value.</returns>
      <param name="constValue">The value used to create the <see cref="T:System.Activities.Activity`1" /> expression.</param>
    </member>
    <member name="M:System.Activities.Activity`1.FromVariable(System.Activities.Variable)">
      <summary>Returns a <see cref="T:System.Activities.Activity`1" /> expression that evaluates to the given <see cref="T:System.Activities.Variable" />.</summary>
      <returns>A workflow expression that evaluates to the given variable.</returns>
      <param name="variable">The value for the expression.</param>
    </member>
    <member name="M:System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})">
      <summary>Returns a <see cref="T:System.Activities.Activity`1" /> expression that evaluates to the given <see cref="T:System.Activities.Variable`1" />.</summary>
      <returns>A workflow expression that evaluates to the given variable.</returns>
      <param name="variable">The value for the expression.</param>
    </member>
    <member name="M:System.Activities.Activity`1.op_Implicit(System.Activities.Variable)~System.Activities.Activity{`0}">
      <summary>Returns a <see cref="T:System.Activities.Activity`1" /> expression that evaluates to the given <see cref="T:System.Activities.Variable" />.</summary>
      <returns>A workflow expression that evaluates to the given variable.</returns>
      <param name="variable">The value for the expression.</param>
    </member>
    <member name="M:System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})~System.Activities.Activity{`0}">
      <summary>Returns a <see cref="T:System.Activities.Activity`1" /> expression that evaluates to the given <see cref="T:System.Activities.Variable`1" />.</summary>
      <returns>A workflow expression that evaluates to the given variable.</returns>
      <param name="variable">The value for the expression.</param>
    </member>
    <member name="M:System.Activities.Activity`1.op_Implicit(`0)~System.Activities.Activity{`0}">
      <summary>Returns a <see cref="T:System.Activities.Activity`1" /> expression that evaluates to the given value.</summary>
      <returns>A workflow expression that evaluates to the given value.</returns>
      <param name="constValue">The value used to create the expression.</param>
    </member>
    <member name="P:System.Activities.Activity`1.Result">
      <summary>Gets or sets the result argument for the <see cref="T:System.Activities.Activity`1" />.</summary>
      <returns>The result argument for the <see cref="T:System.Activities.Activity`1" />.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction">
      <summary>Defines an activity delegate that has no in arguments and does not return a value.</summary>
    </member>
    <member name="M:System.Activities.ActivityAction.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityAction" /> class.</summary>
    </member>
    <member name="T:System.Activities.ActivityAction`1">
      <summary>Defines an activity delegate that has one in argument and does not return a value.</summary>
      <typeparam name="T">The type of the in argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`1.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityAction`1" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`1.Argument">
      <summary>Gets or sets the in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`10">
      <summary>Defines an activity delegate that has ten in arguments and does not return a value.</summary>
      <typeparam name="T1">The type of the first in argument of the activity delegate.</typeparam>
      <typeparam name="T2">The type of the second in argument of the activity delegate.</typeparam>
      <typeparam name="T3">The type of the third in argument of the activity delegate.</typeparam>
      <typeparam name="T4">The type of the fourth in argument of the activity delegate.</typeparam>
      <typeparam name="T5">The type of the fifth in argument of the activity delegate.</typeparam>
      <typeparam name="T6">The type of the sixth in argument of the activity delegate.</typeparam>
      <typeparam name="T7">The type of the seventh in argument of the activity delegate.</typeparam>
      <typeparam name="T8">The type of the eighth in argument of the activity delegate.</typeparam>
      <typeparam name="T9">The type of the ninth in argument of the activity delegate.</typeparam>
      <typeparam name="T10">The type of the tenth in argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`10.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityAction`10" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`10.Argument1">
      <summary>Gets or sets the first in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`10.Argument10">
      <summary>Gets or sets the tenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`10.Argument2">
      <summary>Gets or sets the second in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`10.Argument3">
      <summary>Gets or sets the third in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`10.Argument4">
      <summary>Gets or sets the fourth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`10.Argument5">
      <summary>Gets or sets the fifth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`10.Argument6">
      <summary>Gets or sets the sixth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`10.Argument7">
      <summary>Gets or sets the seventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`10.Argument8">
      <summary>Gets or sets the eighth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`10.Argument9">
      <summary>Gets or sets the ninth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`11">
      <summary>Defines an activity delegate that has eleven in arguments and does not return a value.</summary>
      <typeparam name="T1">The type of the first in argument of the activity delegate.</typeparam>
      <typeparam name="T2">The type of the second in argument of the activity delegate.</typeparam>
      <typeparam name="T3">The type of the third in argument of the activity delegate.</typeparam>
      <typeparam name="T4">The type of the fourth in argument of the activity delegate.</typeparam>
      <typeparam name="T5">The type of the fifth in argument of the activity delegate.</typeparam>
      <typeparam name="T6">The type of the sixth in argument of the activity delegate.</typeparam>
      <typeparam name="T7">The type of the seventh in argument of the activity delegate.</typeparam>
      <typeparam name="T8">The type of the eighth in argument of the activity delegate.</typeparam>
      <typeparam name="T9">The type of the ninth in argument of the activity delegate.</typeparam>
      <typeparam name="T10">The type of the tenth in argument of the activity delegate.</typeparam>
      <typeparam name="T11">The type of the eleventh in argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`11.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityAction`11" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument1">
      <summary>Gets or sets the first in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument10">
      <summary>Gets or sets the tenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument11">
      <summary>Gets or sets the eleventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument2">
      <summary>Gets or sets the second in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument3">
      <summary>Gets or sets the third in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument4">
      <summary>Gets or sets the fourth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument5">
      <summary>Gets or sets the fifth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument6">
      <summary>Gets or sets the sixth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument7">
      <summary>Gets or sets the seventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument8">
      <summary>Gets or sets the eighth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument9">
      <summary>Gets or sets the ninth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`12">
      <summary>Defines an activity delegate that has twelve in arguments and does not return a value.</summary>
      <typeparam name="T1">The type of the first in argument of the activity delegate.</typeparam>
      <typeparam name="T2">The type of the second in argument of the activity delegate.</typeparam>
      <typeparam name="T3">The type of the third in argument of the activity delegate.</typeparam>
      <typeparam name="T4">The type of the fourth in argument of the activity delegate.</typeparam>
      <typeparam name="T5">The type of the fifth in argument of the activity delegate.</typeparam>
      <typeparam name="T6">The type of the sixth in argument of the activity delegate.</typeparam>
      <typeparam name="T7">The type of the seventh in argument of the activity delegate.</typeparam>
      <typeparam name="T8">The type of the eighth in argument of the activity delegate.</typeparam>
      <typeparam name="T9">The type of the ninth in argument of the activity delegate.</typeparam>
      <typeparam name="T10">The type of the tenth in argument of the activity delegate.</typeparam>
      <typeparam name="T11">The type of the eleventh in argument of the activity delegate.</typeparam>
      <typeparam name="T12">The type of the twelfth in argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`12.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityAction`12" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument1">
      <summary>Gets or sets the first in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument10">
      <summary>Gets or sets the tenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument11">
      <summary>Gets or sets the eleventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument12">
      <summary>Gets or sets the twelfth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument2">
      <summary>Gets or sets the second in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument3">
      <summary>Gets or sets the third in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument4">
      <summary>Gets or sets the fourth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument5">
      <summary>Gets or sets the fifth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument6">
      <summary>Gets or sets the sixth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument7">
      <summary>Gets or sets the seventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument8">
      <summary>Gets or sets the eighth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument9">
      <summary>Gets or sets the ninth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`13">
      <summary>Defines an activity delegate that has thirteen in arguments and does not return a value.</summary>
      <typeparam name="T1">The type of the first in argument of the activity delegate.</typeparam>
      <typeparam name="T2">The type of the second in argument of the activity delegate.</typeparam>
      <typeparam name="T3">The type of the third in argument of the activity delegate.</typeparam>
      <typeparam name="T4">The type of the fourth in argument of the activity delegate.</typeparam>
      <typeparam name="T5">The type of the fifth in argument of the activity delegate.</typeparam>
      <typeparam name="T6">The type of the sixth in argument of the activity delegate.</typeparam>
      <typeparam name="T7">The type of the seventh in argument of the activity delegate.</typeparam>
      <typeparam name="T8">The type of the eighth in argument of the activity delegate.</typeparam>
      <typeparam name="T9">The type of the ninth in argument of the activity delegate.</typeparam>
      <typeparam name="T10">The type of the tenth in argument of the activity delegate.</typeparam>
      <typeparam name="T11">The type of the eleventh in argument of the activity delegate.</typeparam>
      <typeparam name="T12">The type of the twelfth in argument of the activity delegate.</typeparam>
      <typeparam name="T13">The type of the thirteenth in argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`13.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityAction`13" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument1">
      <summary>Gets or sets the first in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument10">
      <summary>Gets or sets the tenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument11">
      <summary>Gets or sets the eleventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument12">
      <summary>Gets or sets the twelfth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument13">
      <summary>Gets or sets the thirteenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument2">
      <summary>Gets or sets the second in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument3">
      <summary>Gets or sets the third in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument4">
      <summary>Gets or sets the fourth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument5">
      <summary>Gets or sets the fifth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument6">
      <summary>Gets or sets the sixth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument7">
      <summary>Gets or sets the seventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument8">
      <summary>Gets or sets the eighth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument9">
      <summary>Gets or sets the ninth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`14">
      <summary>Defines an activity delegate that has fourteen in arguments and does not return a value.</summary>
      <typeparam name="T1">The type of the first in argument of the activity delegate.</typeparam>
      <typeparam name="T2">The type of the second in argument of the activity delegate.</typeparam>
      <typeparam name="T3">The type of the third in argument of the activity delegate.</typeparam>
      <typeparam name="T4">The type of the fourth in argument of the activity delegate.</typeparam>
      <typeparam name="T5">The type of the fifth in argument of the activity delegate.</typeparam>
      <typeparam name="T6">The type of the sixth in argument of the activity delegate.</typeparam>
      <typeparam name="T7">The type of the seventh in argument of the activity delegate.</typeparam>
      <typeparam name="T8">The type of the eighth in argument of the activity delegate.</typeparam>
      <typeparam name="T9">The type of the ninth in argument of the activity delegate.</typeparam>
      <typeparam name="T10">The type of the tenth in argument of the activity delegate.</typeparam>
      <typeparam name="T11">The type of the eleventh in argument of the activity delegate.</typeparam>
      <typeparam name="T12">The type of the twelfth in argument of the activity delegate.</typeparam>
      <typeparam name="T13">The type of the thirteenth in argument of the activity delegate.</typeparam>
      <typeparam name="T14">The type of the fourteenth in argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`14.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityAction`14" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument1">
      <summary>Gets or sets the first in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument10">
      <summary>Gets or sets the tenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument11">
      <summary>Gets or sets the eleventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument12">
      <summary>Gets or sets the twelfth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument13">
      <summary>Gets or sets the thirteenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument14">
      <summary>Gets or sets the fourteenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument2">
      <summary>Gets or sets the second in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument3">
      <summary>Gets or sets the third in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument4">
      <summary>Gets or sets the fourth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument5">
      <summary>Gets or sets the fifth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument6">
      <summary>Gets or sets the sixth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument7">
      <summary>Gets or sets the seventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument8">
      <summary>Gets or sets the eighth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument9">
      <summary>Gets or sets the ninth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`15">
      <summary>Defines an activity delegate that has fifteen in arguments and does not return a value.</summary>
      <typeparam name="T1">The type of the first in argument of the activity delegate.</typeparam>
      <typeparam name="T2">The type of the second in argument of the activity delegate.</typeparam>
      <typeparam name="T3">The type of the third in argument of the activity delegate.</typeparam>
      <typeparam name="T4">The type of the fourth in argument of the activity delegate.</typeparam>
      <typeparam name="T5">The type of the fifth in argument of the activity delegate.</typeparam>
      <typeparam name="T6">The type of the sixth in argument of the activity delegate.</typeparam>
      <typeparam name="T7">The type of the seventh in argument of the activity delegate.</typeparam>
      <typeparam name="T8">The type of the eighth in argument of the activity delegate.</typeparam>
      <typeparam name="T9">The type of the ninth in argument of the activity delegate.</typeparam>
      <typeparam name="T10">The type of the tenth in argument of the activity delegate.</typeparam>
      <typeparam name="T11">The type of the eleventh in argument of the activity delegate.</typeparam>
      <typeparam name="T12">The type of the twelfth in argument of the activity delegate.</typeparam>
      <typeparam name="T13">The type of the thirteenth in argument of the activity delegate.</typeparam>
      <typeparam name="T14">The The type of the fourteenth in argument of the activity delegate.</typeparam>
      <typeparam name="T15">The type of the fifteenth in argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`15.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityAction`15" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument1">
      <summary>Gets or sets the first in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument10">
      <summary>Gets or sets the tenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument11">
      <summary>Gets or sets the eleventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument12">
      <summary>Gets or sets the twelfth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument13">
      <summary>Gets or sets the thirteenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument14">
      <summary>Gets or sets the fourteenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument15">
      <summary>Gets or sets the fifteenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument2">
      <summary>Gets or sets the second in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument3">
      <summary>Gets or sets the third in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument4">
      <summary>Gets or sets the fourth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument5">
      <summary>Gets or sets the fifth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument6">
      <summary>Gets or sets the sixth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument7">
      <summary>Gets or sets the seventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument8">
      <summary>Gets or sets the eighth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument9">
      <summary>Gets or sets the ninth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`16">
      <summary>Defines an activity delegate that has sixteen in arguments and does not return a value.</summary>
      <typeparam name="T1">The type of the first delegate parameter.</typeparam>
      <typeparam name="T2">The type of the second delegate parameter.</typeparam>
      <typeparam name="T3">The type of the third delegate parameter.</typeparam>
      <typeparam name="T4">The type of the fourth delegate parameter.</typeparam>
      <typeparam name="T5">The type of the fifth delegate parameter.</typeparam>
      <typeparam name="T6">The type of the sixth delegate parameter.</typeparam>
      <typeparam name="T7">The type of the seventh delegate parameter.</typeparam>
      <typeparam name="T8">The type of the eighth delegate parameter.</typeparam>
      <typeparam name="T9">The type of the ninth delegate parameter.</typeparam>
      <typeparam name="T10">The type of the tenth delegate parameter.</typeparam>
      <typeparam name="T11">The type of the eleventh delegate parameter.</typeparam>
      <typeparam name="T12">The type of the twelfth delegate parameter.</typeparam>
      <typeparam name="T13">The type of the thirteenth delegate parameter.</typeparam>
      <typeparam name="T14">The type of the fourteenth delegate parameter.</typeparam>
      <typeparam name="T15">The type of the fifteenth delegate parameter.</typeparam>
      <typeparam name="T16">The type of the sixteenth delegate parameter.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`16.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityAction`16" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument1">
      <summary>Gets or sets the first in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument10">
      <summary>Gets or sets the tenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument11">
      <summary>Gets or sets the eleventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument12">
      <summary>Gets or sets the twelfth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument13">
      <summary>Gets or sets the thirteenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument14">
      <summary>Gets or sets the fourteenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument15">
      <summary>Gets or sets the fifteenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument16">
      <summary>Gets or sets the sixteenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument2">
      <summary>Gets or sets the second in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument3">
      <summary>Gets or sets the third in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument4">
      <summary>Gets or sets the fourth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument5">
      <summary>Gets or sets the fifth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument6">
      <summary>Gets or sets the sixth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument7">
      <summary>Gets or sets the seventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument8">
      <summary>Gets or sets the eighth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument9">
      <summary>Gets or sets the ninth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`2">
      <summary>Defines an activity delegate that has two in arguments and does not return a value.</summary>
      <typeparam name="T1">The type of the first in argument of the activity delegate.</typeparam>
      <typeparam name="T2">The type of the second in argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`2.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityAction`2" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`2.Argument1">
      <summary>Gets or sets the first in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`2.Argument2">
      <summary>Gets or sets the second in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`3">
      <summary>Defines an activity delegate that has three in arguments and does not return a value.</summary>
      <typeparam name="T1">The type of the first in argument of the activity delegate.</typeparam>
      <typeparam name="T2">The type of the second in argument of the activity delegate.</typeparam>
      <typeparam name="T3">The type of the third in argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`3.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityAction`3" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`3.Argument1">
      <summary>Gets or sets the first in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`3.Argument2">
      <summary>Gets or sets the second in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`3.Argument3">
      <summary>Gets or sets the third in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`4">
      <summary>Defines an activity delegate that has four in arguments and does not return a value.</summary>
      <typeparam name="T1">The type of the first in argument of the activity delegate.</typeparam>
      <typeparam name="T2">The type of the second in argument of the activity delegate.</typeparam>
      <typeparam name="T3">The type of the third in argument of the activity delegate.</typeparam>
      <typeparam name="T4">The type of the fourth in argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`4.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityAction`4" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`4.Argument1">
      <summary>Gets or sets the first in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`4.Argument2">
      <summary>Gets or sets the second in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`4.Argument3">
      <summary>Gets or sets the third in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`4.Argument4">
      <summary>Gets or sets the fourth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`5">
      <summary>Defines an activity delegate that has five in arguments and does not return a value.</summary>
      <typeparam name="T1">The type of the first in argument of the activity delegate.</typeparam>
      <typeparam name="T2">The type of the second in argument of the activity delegate.</typeparam>
      <typeparam name="T3">The type of the third in argument of the activity delegate.</typeparam>
      <typeparam name="T4">The type of the fourth in argument of the activity delegate.</typeparam>
      <typeparam name="T5">The type of the fifth in argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`5.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityAction`5" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`5.Argument1">
      <summary>Gets or sets the first in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`5.Argument2">
      <summary>Gets or sets the second in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`5.Argument3">
      <summary>Gets or sets the third in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`5.Argument4">
      <summary>Gets or sets the fourth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`5.Argument5">
      <summary>Gets or sets the fifth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`6">
      <summary>Defines an activity delegate that has six in arguments and does not return a value.</summary>
      <typeparam name="T1">The type of the first in argument of the activity delegate.</typeparam>
      <typeparam name="T2">The type of the second in argument of the activity delegate.</typeparam>
      <typeparam name="T3">The type of the third in argument of the activity delegate.</typeparam>
      <typeparam name="T4">The type of the fourth in argument of the activity delegate.</typeparam>
      <typeparam name="T5">The type of the fifth in argument of the activity delegate.</typeparam>
      <typeparam name="T6">The type of the sixth in argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`6.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityAction`6" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`6.Argument1">
      <summary>Gets or sets the first in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`6.Argument2">
      <summary>Gets or sets the second in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`6.Argument3">
      <summary>Gets or sets the third in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`6.Argument4">
      <summary>Gets or sets the fourth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`6.Argument5">
      <summary>Gets or sets the fifth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`6.Argument6">
      <summary>Gets or sets the sixth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`7">
      <summary>Defines an activity delegate that has seven in arguments and does not return a value.</summary>
      <typeparam name="T1">The type of the first in argument of the activity delegate.</typeparam>
      <typeparam name="T2">The type of the second in argument of the activity delegate.</typeparam>
      <typeparam name="T3">The type of the third in argument of the activity delegate.</typeparam>
      <typeparam name="T4">The type of the fourth in argument of the activity delegate.</typeparam>
      <typeparam name="T5">The type of the fifth in argument of the activity delegate.</typeparam>
      <typeparam name="T6">The type of the sixth in argument of the activity delegate.</typeparam>
      <typeparam name="T7">The type of the seventh in argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`7.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityAction`7" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`7.Argument1">
      <summary>Gets or sets the first in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`7.Argument2">
      <summary>Gets or sets the second in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`7.Argument3">
      <summary>Gets or sets the third in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`7.Argument4">
      <summary>Gets or sets the fourth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`7.Argument5">
      <summary>Gets or sets the fifth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`7.Argument6">
      <summary>Gets or sets the sixth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`7.Argument7">
      <summary>Gets or sets the seventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`8">
      <summary>Defines an activity delegate that has eight in arguments and does not return a value.</summary>
      <typeparam name="T1">The type of the first in argument of the activity delegate.</typeparam>
      <typeparam name="T2">The type of the second in argument of the activity delegate.</typeparam>
      <typeparam name="T3">The type of the third in argument of the activity delegate.</typeparam>
      <typeparam name="T4">The type of the fourth in argument of the activity delegate.</typeparam>
      <typeparam name="T5">The type of the fifth in argument of the activity delegate.</typeparam>
      <typeparam name="T6">The type of the sixth in argument of the activity delegate.</typeparam>
      <typeparam name="T7">The type of the seventh in argument of the activity delegate.</typeparam>
      <typeparam name="T8">The type of the eighth in argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`8.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityAction`8" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`8.Argument1">
      <summary>Gets or sets the first in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`8.Argument2">
      <summary>Gets or sets the second in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`8.Argument3">
      <summary>Gets or sets the third in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`8.Argument4">
      <summary>Gets or sets the fourth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`8.Argument5">
      <summary>Gets or sets the fifth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`8.Argument6">
      <summary>Gets or sets the sixth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`8.Argument7">
      <summary>Gets or sets the seventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`8.Argument8">
      <summary>Gets or sets the eighth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`9">
      <summary>Defines an activity delegate that has nine in arguments and does not return a value.</summary>
      <typeparam name="T1">The type of the first in argument of the activity delegate.</typeparam>
      <typeparam name="T2">The type of the second in argument of the activity delegate.</typeparam>
      <typeparam name="T3">The type of the third in argument of the activity delegate.</typeparam>
      <typeparam name="T4">The type of the fourth in argument of the activity delegate.</typeparam>
      <typeparam name="T5">The type of the fifth in argument of the activity delegate.</typeparam>
      <typeparam name="T6">The type of the sixth in argument of the activity delegate.</typeparam>
      <typeparam name="T7">The type of the seventh in argument of the activity delegate.</typeparam>
      <typeparam name="T8">The type of the eighth in argument of the activity delegate.</typeparam>
      <typeparam name="T9">The type of the ninth in argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`9.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityAction`9" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`9.Argument1">
      <summary>Gets or sets the first in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`9.Argument2">
      <summary>Gets or sets the second in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`9.Argument3">
      <summary>Gets or sets the third in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`9.Argument4">
      <summary>Gets or sets the fourth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`9.Argument5">
      <summary>Gets or sets the fifth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`9.Argument6">
      <summary>Gets or sets the sixth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`9.Argument7">
      <summary>Gets or sets the seventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`9.Argument8">
      <summary>Gets or sets the eighth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`9.Argument9">
      <summary>Gets or sets the ninth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="T:System.Activities.ActivityBuilder">
      <summary>Provides property data for a workflow activity.</summary>
    </member>
    <member name="M:System.Activities.ActivityBuilder.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityBuilder" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityBuilder.Attributes">
      <summary>Gets the collection of attributes to use in the construction of an activity tree.</summary>
      <returns>A collection of a specified type.</returns>
    </member>
    <member name="P:System.Activities.ActivityBuilder.Constraints">
      <summary>Gets the collection of constraints that govern the construction of an activity tree.</summary>
      <returns>A collection of a specified type.</returns>
    </member>
    <member name="M:System.Activities.ActivityBuilder.GetPropertyReference(System.Object)">
      <summary>Returns a <see cref="T:System.Activities.ActivityPropertyReference" /> for a property retrieved from the specified object.</summary>
      <returns>A reference to a property.</returns>
      <param name="target">An object that contains a property.</param>
    </member>
    <member name="P:System.Activities.ActivityBuilder.Implementation">
      <summary>Gets or sets the activity tree that is represented by the current instance of <see cref="T:System.Activities.ActivityBuilder" />.</summary>
      <returns>An activity.</returns>
    </member>
    <member name="P:System.Activities.ActivityBuilder.Name">
      <summary>Gets or sets the name of the activity tree that is represented by the current instance of <see cref="T:System.Activities.ActivityBuilder" />.</summary>
      <returns>The name of the activity tree.</returns>
    </member>
    <member name="P:System.Activities.ActivityBuilder.Properties">
      <summary>Gets a collection of property values for the current <see cref="T:System.Activities.ActivityBuilder" /> instance.</summary>
      <returns>A collection of property values.</returns>
    </member>
    <member name="M:System.Activities.ActivityBuilder.SetPropertyReference(System.Object,System.Activities.ActivityPropertyReference)">
      <summary>Sets a value for the specified attachable property in the specified store.</summary>
      <param name="target">A property store.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Activities.ActivityBuilder.System#Activities#Debugger#IDebuggableWorkflowTree#GetWorkflowRoot">
      <summary>When implemented in the base class, returns the root of a workflow activity tree.</summary>
      <returns>An activity.</returns>
    </member>
    <member name="T:System.Activities.ActivityBuilder`1">
      <summary>Provides property data for a generic workflow activity.</summary>
      <typeparam name="TResult">The type of the activity being implemented.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityBuilder`1.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityBuilder`1" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityBuilder`1.Attributes">
      <summary>Gets the generic collection of attributes to use in the construction of an activity tree.</summary>
      <returns>A generic collection.</returns>
    </member>
    <member name="P:System.Activities.ActivityBuilder`1.Constraints">
      <summary>Gets the generic collection of constraints that govern the construction of an activity tree.</summary>
      <returns>A generic collection.</returns>
    </member>
    <member name="P:System.Activities.ActivityBuilder`1.Implementation">
      <summary>Gets or sets the generic activity tree that is represented by the current instance of <see cref="T:System.Activities.ActivityBuilder`1" />.</summary>
      <returns>An activity object.</returns>
    </member>
    <member name="P:System.Activities.ActivityBuilder`1.Name">
      <summary>Gets or sets the name of the generic activity tree that is represented by the current instance of <see cref="T:System.Activities.ActivityBuilder`1" />.</summary>
      <returns>The name of the activity tree.</returns>
    </member>
    <member name="P:System.Activities.ActivityBuilder`1.Properties">
      <summary>Gets a <see cref="T:System.Collections.ObjectModel.KeyedCollection" /> of the properties of the current instance of <see cref="T:System.Activities.ActivityBuilder`1" />.</summary>
      <returns>A key and value pair collection of activity workflow element properties.</returns>
    </member>
    <member name="M:System.Activities.ActivityBuilder`1.System#Activities#Debugger#IDebuggableWorkflowTree#GetWorkflowRoot">
      <summary>Returns the root of the current workflow tree.</summary>
      <returns>An activity.</returns>
    </member>
    <member name="T:System.Activities.ActivityContext">
      <summary>The base class for context classes that represent the execution environment of an activity.</summary>
    </member>
    <member name="P:System.Activities.ActivityContext.ActivityInstanceId">
      <summary>Gets the unique identifier of the currently executing activity instance.</summary>
      <returns>The unique identifier of the currently executing activity instance.</returns>
    </member>
    <member name="P:System.Activities.ActivityContext.DataContext">
      <summary>Gets the data context of the currently executing activity.</summary>
      <returns>The workflow data context of the currently executing activity.</returns>
    </member>
    <member name="M:System.Activities.ActivityContext.GetExtension``1">
      <summary>Returns an extension of the specified type.</summary>
      <returns>The extension of the specified type if present; otherwise, null.</returns>
      <typeparam name="T">The type of extension to retrieve.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityContext.GetLocation``1(System.Activities.LocationReference)">
      <summary>Returns the typed location for the specified referenced location for the current activity context.</summary>
      <returns>The typed location.</returns>
      <param name="locationReference">The referenced location.</param>
      <typeparam name="T">The type of the location to return.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityContext.GetValue(System.Activities.Argument)">
      <summary>Gets the value of the specified <see cref="T:System.Activities.Argument" />.</summary>
      <returns>The value of the argument.</returns>
      <param name="argument">The argument to inspect.</param>
    </member>
    <member name="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument{``0})">
      <summary>Gets the value of the specified <see cref="T:System.Activities.InArgument`1" />.</summary>
      <returns>The value of the argument.</returns>
      <param name="argument">The argument to inspect.</param>
      <typeparam name="T">The type of the argument.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument{``0})">
      <summary>Gets the value of the specified <see cref="T:System.Activities.InOutArgument`1" />.</summary>
      <returns>The value of the argument.</returns>
      <param name="argument">The argument to inspect.</param>
      <typeparam name="T">The type of the argument.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)">
      <summary>Gets the value at the specified <see cref="T:System.Activities.LocationReference" />.</summary>
      <returns>The value of the referenced location.</returns>
      <param name="locationReference">The referenced location to inspect.</param>
      <typeparam name="T">The type of the value.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument{``0})">
      <summary>Gets the value of the specified <see cref="T:System.Activities.OutArgument`1" />.</summary>
      <returns>The value of the argument.</returns>
      <param name="argument">The argument to inspect.</param>
      <typeparam name="T">The type of the argument.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)">
      <summary>Gets the value of the specified <see cref="T:System.Activities.RuntimeArgument" />.</summary>
      <returns>The value of the argument.</returns>
      <param name="runtimeArgument">The argument to inspect.</param>
    </member>
    <member name="M:System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)">
      <summary>Assigns a value to the specified <see cref="T:System.Activities.Argument" />.</summary>
      <param name="argument">The argument to receive the new value.</param>
      <param name="value">The new value of the argument.</param>
    </member>
    <member name="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument{``0},``0)">
      <summary>Assigns a value to the specified <see cref="T:System.Activities.InArgument`1" />.</summary>
      <param name="argument">The argument to receive the new value.</param>
      <param name="value">The new value of the argument.</param>
      <typeparam name="T">The type of the argument.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument{``0},``0)">
      <summary>Assigns a value to the specified <see cref="T:System.Activities.InOutArgument`1" />.</summary>
      <param name="argument">The argument to receive the new value.</param>
      <param name="value">The new value of the argument.</param>
      <typeparam name="T">The type of the argument.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)">
      <summary>Assigns a value to the specified <see cref="T:System.Activities.LocationReference" />.</summary>
      <param name="locationReference">The referenced location to receive the new value.</param>
      <param name="value">The new value of the referenced location.</param>
      <typeparam name="T">The type of the location.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument{``0},``0)">
      <summary>Assigns a value to the specified <see cref="T:System.Activities.OutArgument`1" />.</summary>
      <param name="argument">The argument to receive the new value.</param>
      <param name="value">The new value of the argument.</param>
      <typeparam name="T">The type of the argument.</typeparam>
    </member>
    <member name="P:System.Activities.ActivityContext.WorkflowInstanceId">
      <summary>Gets the unique indentifier of the currently executing workflow instance.</summary>
      <returns>The unique identifier of the currently executing workflow instance.</returns>
    </member>
    <member name="T:System.Activities.ActivityDelegate">
      <summary>Represents an activity-based callback.</summary>
    </member>
    <member name="M:System.Activities.ActivityDelegate.#ctor">
      <summary>Called by derived class constructors to initialize the object.</summary>
    </member>
    <member name="P:System.Activities.ActivityDelegate.DisplayName">
      <summary>Gets or sets an optional friendly name that is used for debugging, validation, exception handling, and tracking.</summary>
      <returns>A friendly name that is used for debugging, validation, exception handling, and tracking.</returns>
    </member>
    <member name="M:System.Activities.ActivityDelegate.GetResultArgument">
      <summary>When implemented in a derived class, returns the <see cref="T:System.Activities.DelegateOutArgument" /> of the <see cref="T:System.Activities.ActivityDelegate" />.</summary>
      <returns>An out argument for the <see cref="T:System.Activities.ActivityDelegate" />.</returns>
    </member>
    <member name="P:System.Activities.ActivityDelegate.Handler">
      <summary>Gets or sets the activity that is represented by this <see cref="T:System.Activities.ActivityDelegate" />.</summary>
      <returns>The activity that is represented by this <see cref="T:System.Activities.ActivityDelegate" />.</returns>
    </member>
    <member name="M:System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments(System.Collections.Generic.IList{System.Activities.RuntimeDelegateArgument})">
      <summary>Supplies a list of runtime arguments for the <see cref="T:System.Activities.ActivityDelegate" />.</summary>
      <param name="runtimeDelegateArguments">The list to be populated with runtime arguments.</param>
    </member>
    <member name="M:System.Activities.ActivityDelegate.ShouldSerializeDisplayName">
      <summary>Indicates whether the <see cref="P:System.Activities.ActivityDelegate.DisplayName" /> property value should be serialized to XAML.</summary>
      <returns>true, if the <see cref="P:System.Activities.ActivityDelegate.DisplayName" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.Activities.ActivityDelegate.ToString">
      <summary>Returns a <see cref="T:System.String" /> representation of the <see cref="T:System.Activities.ActivityDelegate" /> that contains the <see cref="P:System.Activities.ActivityDelegate.DisplayName" />.</summary>
      <returns>A representation of the <see cref="T:System.Activities.ActivityDelegate" /> that contains the <see cref="P:System.Activities.ActivityDelegate.DisplayName" />.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`1">
      <summary>Defines an activity delegate with no in arguments and one out argument of type Tresult.</summary>
      <typeparam name="TResult">The type of the out argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`1.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityFunc`1" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`1.Result">
      <summary>Gets or sets the out argument of the activity delegate.</summary>
      <returns>The argument.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`10">
      <summary>Defines an activity delegate with nine in arguments of type T and one out argument of type TResult.</summary>
      <typeparam name="T1">The type of the first in argument of the activity delegate.</typeparam>
      <typeparam name="T2">The type of the second in argument of the activity delegate.</typeparam>
      <typeparam name="T3">The type of the third in argument of the activity delegate.</typeparam>
      <typeparam name="T4">The type of the fourth in argument of the activity delegate.</typeparam>
      <typeparam name="T5">The type of the fifth in argument of the activity delegate.</typeparam>
      <typeparam name="T6">The type of the sixth in argument of the activity delegate.</typeparam>
      <typeparam name="T7">The type of the seventh in argument of the activity delegate.</typeparam>
      <typeparam name="T8">The type of the eighth in argument of the activity delegate.</typeparam>
      <typeparam name="T9">The type of the ninth in argument of the activity delegate.</typeparam>
      <typeparam name="TResult">The type of the out argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`10.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityFunc`10" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`10.Argument1">
      <summary>Gets or sets the first in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`10.Argument2">
      <summary>Gets or sets the second in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`10.Argument3">
      <summary>Gets or sets the third in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`10.Argument4">
      <summary>Gets or sets the fourth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`10.Argument5">
      <summary>Gets or sets the fifth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`10.Argument6">
      <summary>Gets or sets the sixth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`10.Argument7">
      <summary>Gets or sets the seventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`10.Argument8">
      <summary>Gets or sets the eighth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`10.Argument9">
      <summary>Gets or sets the ninth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`10.Result">
      <summary>Gets or sets the out argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`11">
      <summary>Defines an activity delegate with one in argument of type T and one out argument of type TResult.</summary>
      <typeparam name="T1">The type of the first in argument of the activity delegate.</typeparam>
      <typeparam name="T2">The type of the second in argument of the activity delegate.</typeparam>
      <typeparam name="T3">The type of the third in argument of the activity delegate.</typeparam>
      <typeparam name="T4">The type of the fourth in argument of the activity delegate.</typeparam>
      <typeparam name="T5">The type of the fifth in argument of the activity delegate.</typeparam>
      <typeparam name="T6">The type of the sixth in argument of the activity delegate.</typeparam>
      <typeparam name="T7">The type of the seventh in argument of the activity delegate.</typeparam>
      <typeparam name="T8">The type of the eighth in argument of the activity delegate.</typeparam>
      <typeparam name="T9">The type of the ninth in argument of the activity delegate.</typeparam>
      <typeparam name="T10">The type of the tenth in argument of the activity delegate.</typeparam>
      <typeparam name="TResult">The type of the out argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`11.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityFunc`11" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Argument1">
      <summary>Gets or sets the first in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Argument10">
      <summary>Gets or sets the tenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Argument2">
      <summary>Gets or sets the second in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Argument3">
      <summary>Gets or sets the third in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Argument4">
      <summary>Gets or sets the fourth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Argument5">
      <summary>Gets or sets the fifth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Argument6">
      <summary>Gets or sets the sixth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Argument7">
      <summary>Gets or sets the seventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Argument8">
      <summary>Gets or sets the eighth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Argument9">
      <summary>Gets or sets the ninth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Result">
      <summary>Gets or sets the out argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`12">
      <summary>Defines an activity delegate with one in argument of type T and one out argument of type TResult.</summary>
      <typeparam name="T1">The type of the first in argument of the activity delegate.</typeparam>
      <typeparam name="T2">The type of the second in argument of the activity delegate.</typeparam>
      <typeparam name="T3">The type of the third in argument of the activity delegate.</typeparam>
      <typeparam name="T4">The type of the fourth in argument of the activity delegate.</typeparam>
      <typeparam name="T5">The type of the fifth in argument of the activity delegate.</typeparam>
      <typeparam name="T6">The type of the sixth in argument of the activity delegate.</typeparam>
      <typeparam name="T7">The type of the seventh in argument of the activity delegate.</typeparam>
      <typeparam name="T8">The type of the eighth in argument of the activity delegate.</typeparam>
      <typeparam name="T9">The type of the ninth in argument of the activity delegate.</typeparam>
      <typeparam name="T10">The type of the tenth in argument of the activity delegate.</typeparam>
      <typeparam name="T11">The type of the eleventh in argument of the activity delegate.</typeparam>
      <typeparam name="TResult">The type of the out argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`12.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityFunc`12" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument1">
      <summary>Gets or sets the first in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument10">
      <summary>Gets or sets the tenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument11">
      <summary>Gets or sets the eleventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument2">
      <summary>Gets or sets the second in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument3">
      <summary>Gets or sets the third in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument4">
      <summary>Gets or sets the fourth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument5">
      <summary>Gets or sets the fifth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument6">
      <summary>Gets or sets the sixth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument7">
      <summary>Gets or sets the seventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument8">
      <summary>Gets or sets the eighth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument9">
      <summary>Gets or sets the ninth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Result">
      <summary>Gets or sets the out argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`13">
      <summary>Defines an activity delegate with one in argument of type T and one out argument of type TResult.</summary>
      <typeparam name="T1">The type of the first in argument of the activity delegate.</typeparam>
      <typeparam name="T2">The type of the second in argument of the activity delegate.</typeparam>
      <typeparam name="T3">The type of the third in argument of the activity delegate.</typeparam>
      <typeparam name="T4">The type of the fourth in argument of the activity delegate.</typeparam>
      <typeparam name="T5">The type of the fifth in argument of the activity delegate.</typeparam>
      <typeparam name="T6">The type of the sixth in argument of the activity delegate.</typeparam>
      <typeparam name="T7">The type of the seventh in argument of the activity delegate.</typeparam>
      <typeparam name="T8">The type of the eighth in argument of the activity delegate.</typeparam>
      <typeparam name="T9">The type of the ninth in argument of the activity delegate.</typeparam>
      <typeparam name="T10">The type of the tenth in argument of the activity delegate.</typeparam>
      <typeparam name="T11">The type of the eleventh in argument of the activity delegate.</typeparam>
      <typeparam name="T12">The type of the twelfth in argument of the activity delegate.</typeparam>
      <typeparam name="TResult">The type of the out argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`13.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityFunc`13" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument1">
      <summary>Gets or sets the first in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument10">
      <summary>Gets or sets the tenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument11">
      <summary>Gets or sets the eleventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument12">
      <summary>Gets or sets the twelfth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument2">
      <summary>Gets or sets the second in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument3">
      <summary>Gets or sets the third in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument4">
      <summary>Gets or sets the fourth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument5">
      <summary>Gets or sets the fifth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument6">
      <summary>Gets or sets the sixth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument7">
      <summary>Gets or sets the seventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument8">
      <summary>Gets or sets the eighth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument9">
      <summary>Gets or sets the ninth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Result">
      <summary>Gets or sets the out argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`14">
      <summary>Defines an activity delegate with one in argument of type T and one out argument of type TResult.</summary>
      <typeparam name="T1">The type of the first in argument of the activity delegate.</typeparam>
      <typeparam name="T2">The type of the second in argument of the activity delegate.</typeparam>
      <typeparam name="T3">The type of the third in argument of the activity delegate.</typeparam>
      <typeparam name="T4">The type of the fourth in argument of the activity delegate.</typeparam>
      <typeparam name="T5">The type of the fifth in argument of the activity delegate.</typeparam>
      <typeparam name="T6">The type of the sixth in argument of the activity delegate.</typeparam>
      <typeparam name="T7">The type of the seventh in argument of the activity delegate.</typeparam>
      <typeparam name="T8">The type of the eighth in argument of the activity delegate.</typeparam>
      <typeparam name="T9">The type of the ninth in argument of the activity delegate.</typeparam>
      <typeparam name="T10">The type of the tenth in argument of the activity delegate.</typeparam>
      <typeparam name="T11">The type of the eleventh in argument of the activity delegate.</typeparam>
      <typeparam name="T12">The type of the twelfth in argument of the activity delegate.</typeparam>
      <typeparam name="T13">The type of the thirteenth in argument of the activity delegate.</typeparam>
      <typeparam name="TResult">The type of the out argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`14.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityFunc`14" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument1">
      <summary>Gets or sets the first in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument10">
      <summary>Gets or sets the tenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument11">
      <summary>Gets or sets the eleventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument12">
      <summary>Gets or sets the twelfth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument13">
      <summary>Gets or sets the thirteenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument2">
      <summary>Gets or sets the second in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument3">
      <summary>Gets or sets the third in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument4">
      <summary>Gets or sets the fourth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument5">
      <summary>Gets or sets the fifth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument6">
      <summary>Gets or sets the sixth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument7">
      <summary>Gets or sets the seventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument8">
      <summary>Gets or sets the eighth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument9">
      <summary>Gets or sets the ninth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Result">
      <summary>Gets or sets the out argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`15">
      <summary>Defines an activity delegate with one in argument of type T and one out argument of type TResult.</summary>
      <typeparam name="T1">The type of the first in argument of the activity delegate.</typeparam>
      <typeparam name="T2">The type of the second in argument of the activity delegate.</typeparam>
      <typeparam name="T3">The type of the third in argument of the activity delegate.</typeparam>
      <typeparam name="T4">The type of the fourth in argument of the activity delegate.</typeparam>
      <typeparam name="T5">The type of the fifth in argument of the activity delegate.</typeparam>
      <typeparam name="T6">The type of the sixth in argument of the activity delegate.</typeparam>
      <typeparam name="T7">The type of the seventh in argument of the activity delegate.</typeparam>
      <typeparam name="T8">The type of the eighth in argument of the activity delegate.</typeparam>
      <typeparam name="T9">The type of the ninth in argument of the activity delegate.</typeparam>
      <typeparam name="T10">The type of the tenth in argument of the activity delegate.</typeparam>
      <typeparam name="T11">The type of the eleventh in argument of the activity delegate.</typeparam>
      <typeparam name="T12">The type of the twelfth in argument of the activity delegate.</typeparam>
      <typeparam name="T13">The type of the thirteenth in argument of the activity delegate.</typeparam>
      <typeparam name="T14">The type of the fourteenth in argument of the activity delegate.</typeparam>
      <typeparam name="TResult">The type of the out argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`15.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityFunc`15" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument1">
      <summary>Gets or sets the first in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument10">
      <summary>Gets or sets the tenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument11">
      <summary>Gets or sets the eleventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument12">
      <summary>Gets or sets the twelfth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument13">
      <summary>Gets or sets the thirteenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument14">
      <summary>Gets or sets the fourteenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument2">
      <summary>Gets or sets the second in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument3">
      <summary>Gets or sets the third in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument4">
      <summary>Gets or sets the fourth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument5">
      <summary>Gets or sets the fifth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument6">
      <summary>Gets or sets the sixth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument7">
      <summary>Gets or sets the seventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument8">
      <summary>Gets or sets the eighth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument9">
      <summary>Gets or sets the ninth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Result">
      <summary>Gets or sets the out argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`16">
      <summary>Defines an activity delegate with one in argument of type T and one out argument of type TResult.</summary>
      <typeparam name="T1">The type of the first in argument of the activity delegate.</typeparam>
      <typeparam name="T2">The type of the second in argument of the activity delegate.</typeparam>
      <typeparam name="T3">The type of the third in argument of the activity delegate.</typeparam>
      <typeparam name="T4">The type of the fourth in argument of the activity delegate.</typeparam>
      <typeparam name="T5">The type of the fifth in argument of the activity delegate.</typeparam>
      <typeparam name="T6">The type of the sixth in argument of the activity delegate.</typeparam>
      <typeparam name="T7">The type of the seventh in argument of the activity delegate.</typeparam>
      <typeparam name="T8">The type of the eighth in argument of the activity delegate.</typeparam>
      <typeparam name="T9">The type of the ninth in argument of the activity delegate.</typeparam>
      <typeparam name="T10">The type of the tenth in argument of the activity delegate.</typeparam>
      <typeparam name="T11">The type of the eleventh in argument of the activity delegate.</typeparam>
      <typeparam name="T12">The type of the twelfth in argument of the activity delegate.</typeparam>
      <typeparam name="T13">The type of the thirteenth in argument of the activity delegate.</typeparam>
      <typeparam name="T14">The type of the fourteenth in argument of the activity delegate.</typeparam>
      <typeparam name="T15">The type of the fifteenth in argument of the activity delegate.</typeparam>
      <typeparam name="TResult">The type of the out argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`16.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityFunc`16" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument1">
      <summary>Gets or sets the first in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument10">
      <summary>Gets or sets the tenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument11">
      <summary>Gets or sets the eleventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument12">
      <summary>Gets or sets the twelfth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument13">
      <summary>Gets or sets the thirteenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument14">
      <summary>Gets or sets the fourteenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument15">
      <summary>Gets or sets the fifteenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument2">
      <summary>Gets or sets the second in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument3">
      <summary>Gets or sets the third in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument4">
      <summary>Gets or sets the fourth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument5">
      <summary>Gets or sets the fifth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument6">
      <summary>Gets or sets the sixth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument7">
      <summary>Gets or sets the seventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument8">
      <summary>Gets or sets the eighth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument9">
      <summary>Gets or sets the ninth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Result">
      <summary>Gets or sets the out argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`17">
      <summary>Defines an activity delegate with one in argument of type T and one out argument of type TResult.</summary>
      <typeparam name="T1">The type of the first in argument of the activity delegate.</typeparam>
      <typeparam name="T2">The type of the second in argument of the activity delegate.</typeparam>
      <typeparam name="T3">The type of the third in argument of the activity delegate.</typeparam>
      <typeparam name="T4">The type of the fourth in argument of the activity delegate.</typeparam>
      <typeparam name="T5">The type of the fifth in argument of the activity delegate.</typeparam>
      <typeparam name="T6">The type of the sixth in argument of the activity delegate.</typeparam>
      <typeparam name="T7">The type of the seventh in argument of the activity delegate.</typeparam>
      <typeparam name="T8">The type of the eighth in argument of the activity delegate.</typeparam>
      <typeparam name="T9">The type of the ninth in argument of the activity delegate.</typeparam>
      <typeparam name="T10">The type of the tenth in argument of the activity delegate.</typeparam>
      <typeparam name="T11">The type of the eleventh in argument of the activity delegate.</typeparam>
      <typeparam name="T12">The type of the twelfth in argument of the activity delegate.</typeparam>
      <typeparam name="T13">The type of the thirteenth in argument of the activity delegate.</typeparam>
      <typeparam name="T14">The type of the fourteenth in argument of the activity delegate.</typeparam>
      <typeparam name="T15">The type of the fifteenth in argument of the activity delegate.</typeparam>
      <typeparam name="T16">The type of the sixteenth in argument of the activity delegate.</typeparam>
      <typeparam name="TResult">The type of the out argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`17.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityFunc`17" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument1">
      <summary>Gets or sets the first in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument10">
      <summary>Gets or sets the tenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument11">
      <summary>Gets or sets the eleventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument12">
      <summary>Gets or sets the twelfth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument13">
      <summary>Gets or sets the thirteenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument14">
      <summary>Gets or sets the fourteenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument15">
      <summary>Gets or sets the fifteenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument16">
      <summary>Gets or sets the sixteenth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument2">
      <summary>Gets or sets the second in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument3">
      <summary>Gets or sets the third in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument4">
      <summary>Gets or sets the fourth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument5">
      <summary>Gets or sets the fifth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument6">
      <summary>Gets or sets the sixth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument7">
      <summary>Gets or sets the seventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument8">
      <summary>Gets or sets the eighth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument9">
      <summary>Gets or sets the ninth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Result">
      <summary>Gets or sets the out argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`2">
      <summary>Defines an activity delegate with one in argument of type <paramref name="T" /> and one out argument of type <paramref name="TResult" />.</summary>
      <typeparam name="T">The type of the in argument of the activity delegate.</typeparam>
      <typeparam name="TResult">The type of the out argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`2.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityFunc`2" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`2.Argument">
      <summary>Gets or sets the in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`2.Result">
      <summary>Gets or sets the out argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`3">
      <summary>Defines an activity delegate with one in argument of type T and one out argument of type TResult.</summary>
      <typeparam name="T1">The type of the first in argument of the activity delegate.</typeparam>
      <typeparam name="T2">The type of the second in argument of the activity delegate.</typeparam>
      <typeparam name="TResult">The type of the out argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`3.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityFunc`3" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`3.Argument1">
      <summary>Gets or sets the first in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`3.Argument2">
      <summary>Gets or sets the second in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`3.Result">
      <summary>Gets or sets the out argument of the activity delegate.</summary>
      <returns>The result argument.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`4">
      <summary>Defines an activity delegate with three in arguments of type T and one out argument of type TResult.</summary>
      <typeparam name="T1">The type of the first in argument of the activity delegate.</typeparam>
      <typeparam name="T2">The type of the second in argument of the activity delegate.</typeparam>
      <typeparam name="T3">The type of the third in argument of the activity delegate.</typeparam>
      <typeparam name="TResult">The type of the out argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`4.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityFunc`4" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`4.Argument1">
      <summary>Gets or sets the first in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`4.Argument2">
      <summary>Gets or sets the second in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`4.Argument3">
      <summary>Gets or sets the third in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`4.Result">
      <summary>Gets or sets the out argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`5">
      <summary>Defines an activity delegate with four in arguments of type T and one out argument of type TResult.</summary>
      <typeparam name="T1">The type of the first in argument of the activity delegate.</typeparam>
      <typeparam name="T2">The type of the second in argument of the activity delegate.</typeparam>
      <typeparam name="T3">The type of the third in argument of the activity delegate.</typeparam>
      <typeparam name="T4">The type of the fourth in argument of the activity delegate.</typeparam>
      <typeparam name="TResult">The type of the out argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`5.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityFunc`5" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`5.Argument1">
      <summary>Gets or sets the first in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`5.Argument2">
      <summary>Gets or sets the second in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`5.Argument3">
      <summary>Gets or sets the third in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`5.Argument4">
      <summary>Gets or sets the fourth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`5.Result">
      <summary>Gets or sets the out argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`6">
      <summary>Defines an activity delegate with five in arguments of type T and one out argument of type TResult.</summary>
      <typeparam name="T1">The type of the first in argument of the activity delegate.</typeparam>
      <typeparam name="T2">The type of the second in argument of the activity delegate.</typeparam>
      <typeparam name="T3">The type of the third in argument of the activity delegate.</typeparam>
      <typeparam name="T4">The type of the fourth in argument of the activity delegate.</typeparam>
      <typeparam name="T5">The type of the fifth in argument of the activity delegate.</typeparam>
      <typeparam name="TResult">The type of the out argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`6.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityFunc`6" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`6.Argument1">
      <summary>Gets or sets the first in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`6.Argument2">
      <summary>Gets or sets the second in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`6.Argument3">
      <summary>Gets or sets the third in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`6.Argument4">
      <summary>Gets or sets the fourth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`6.Argument5">
      <summary>Gets or sets the fifth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`6.Result">
      <summary>Gets or sets the out argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`7">
      <summary>Defines an activity delegate with six in arguments of type T and one out argument of type TResult.</summary>
      <typeparam name="T1">The type of the first in argument of the activity delegate.</typeparam>
      <typeparam name="T2">The type of the second in argument of the activity delegate.</typeparam>
      <typeparam name="T3">The type of the third in argument of the activity delegate.</typeparam>
      <typeparam name="T4">The type of the fourth in argument of the activity delegate.</typeparam>
      <typeparam name="T5">The type of the fifth in argument of the activity delegate.</typeparam>
      <typeparam name="T6">The type of the sixth in argument of the activity delegate.</typeparam>
      <typeparam name="TResult">The type of the out argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`7.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityFunc`7" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`7.Argument1">
      <summary>Gets or sets the first in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`7.Argument2">
      <summary>Gets or sets the second in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`7.Argument3">
      <summary>Gets or sets the third in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`7.Argument4">
      <summary>Gets or sets the fourth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`7.Argument5">
      <summary>Gets or sets the fifth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`7.Argument6">
      <summary>Gets or sets the sixth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`7.Result">
      <summary>Gets or sets the out argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`8">
      <summary>Defines an activity delegate with seven in arguments of type T and one out argument of type TResult.</summary>
      <typeparam name="T1">The type of the first in argument of the activity delegate.</typeparam>
      <typeparam name="T2">The type of the second in argument of the activity delegate.</typeparam>
      <typeparam name="T3">The type of the third in argument of the activity delegate.</typeparam>
      <typeparam name="T4">The type of the fourth in argument of the activity delegate.</typeparam>
      <typeparam name="T5">The type of the fifth in argument of the activity delegate.</typeparam>
      <typeparam name="T6">The type of the sixth in argument of the activity delegate.</typeparam>
      <typeparam name="T7">The type of the seventh in argument of the activity delegate.</typeparam>
      <typeparam name="TResult">The type of the out argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`8.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityFunc`8" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`8.Argument1">
      <summary>Gets or sets the first in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`8.Argument2">
      <summary>Gets or sets the second in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`8.Argument3">
      <summary>Gets or sets the third in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`8.Argument4">
      <summary>Gets or sets the fourth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`8.Argument5">
      <summary>Gets or sets the fifth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`8.Argument6">
      <summary>Gets or sets the sixth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`8.Argument7">
      <summary>Gets or sets the seventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`8.Result">
      <summary>Gets or sets the out argument of the activity delegate.</summary>
      <returns>The argument.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`9">
      <summary>Defines an activity delegate with eight in arguments of type T and one out argument of type TResult.</summary>
      <typeparam name="T1">The type of the first in argument of the activity delegate.</typeparam>
      <typeparam name="T2">The type of the second in argument of the activity delegate.</typeparam>
      <typeparam name="T3">The type of the third in argument of the activity delegate.</typeparam>
      <typeparam name="T4">The type of the fourth in argument of the activity delegate.</typeparam>
      <typeparam name="T5">The type of the fifth in argument of the activity delegate.</typeparam>
      <typeparam name="T6">The type of the sixth in argument of the activity delegate.</typeparam>
      <typeparam name="T7">The type of the seventh in argument of the activity delegate.</typeparam>
      <typeparam name="T8">The type of the eighth in argument of the activity delegate.</typeparam>
      <typeparam name="TResult">The type of the out argument of the activity delegate.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`9.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ActivityFunc`9" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`9.Argument1">
      <summary>Gets or sets the first in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`9.Argument2">
      <summary>Gets or sets the second in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`9.Argument3">
      <summary>Gets or sets the third in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`9.Argument4">
      <summary>Gets or sets the fourth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`9.Argument5">
      <summary>Gets or sets the fifth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`9.Argument6">
      <summary>Gets or sets the sixth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`9.Argument7">
      <summary>Gets or sets the seventh in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`9.Argument8">
      <summary>Gets or sets the eighth in argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`9.Result">
      <summary>Gets or sets the out argument of the activity delegate.</summary>
      <returns>An argument to an activity delegate.</returns>
    </member>
    <member name="T:System.Activities.ActivityInstance">
      <summary>Represents the instance state of an activity at runtime.</summary>
    </member>
    <member name="P:System.Activities.ActivityInstance.Activity">
      <summary>Gets the activity represented by the current <see cref="T:System.Activities.ActivityInstance" />.</summary>
      <returns>The activity represented by this <see cref="T:System.Activities.ActivityInstance" />.</returns>
    </member>
    <member name="P:System.Activities.ActivityInstance.Id">
      <summary>Gets an identifier that uniquely identifies the <see cref="T:System.Activities.ActivityInstance" />.</summary>
      <returns>An identifier that uniquely identifies the <see cref="T:System.Activities.ActivityInstance" />.</returns>
    </member>
    <member name="P:System.Activities.ActivityInstance.IsCompleted">
      <summary>Gets a value that indicates whether the activity represented by the current <see cref="T:System.Activities.ActivityInstance" /> is completed.</summary>
      <returns>true if the activity is completed; otherwise false.</returns>
    </member>
    <member name="P:System.Activities.ActivityInstance.State">
      <summary>Gets the <see cref="T:System.Activities.ActivityInstanceState" /> of the current <see cref="T:System.Activities.ActivityInstance" />.</summary>
      <returns>The state of the activity instance.</returns>
    </member>
    <member name="T:System.Activities.ActivityInstanceState">
      <summary>Describes the state of an activity instance.</summary>
    </member>
    <member name="F:System.Activities.ActivityInstanceState.Executing">
      <summary>Specifies that the activity is in an executing state.</summary>
    </member>
    <member name="F:System.Activities.ActivityInstanceState.Closed">
      <summary>Specifies that the activity is in a closed state.</summary>
    </member>
    <member name="F:System.Activities.ActivityInstanceState.Canceled">
      <summary>Specifies that the activity is in a canceled state.</summary>
    </member>
    <member name="F:System.Activities.ActivityInstanceState.Faulted">
      <summary>Specifies that the activity is in a faulted state.</summary>
    </member>
    <member name="T:System.Activities.ActivityMetadata">
      <summary>Represents the set of arguments, child activities, variables, and delegates that a configured <see cref="T:System.Activities.Activity" /> introduces to the execution environment.</summary>
    </member>
    <member name="M:System.Activities.ActivityMetadata.AddArgument(System.Activities.RuntimeArgument)">
      <summary>Adds an argument to the collection of arguments of an activity.</summary>
      <param name="argument">The argument to add to the collection.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})">
      <summary>Adds the specified extension provider to the collection of default extension providers for the activity.</summary>
      <param name="extensionProvider">The function that returns the extension.</param>
      <typeparam name="T">The type of the extension provider.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity)">
      <summary>Adds the specified activity to the metadata’s list of imported child activities.</summary>
      <param name="importedChild">The activity to add.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)">
      <summary>Adds the specified delegate to the metadata’s list of imported delegates.</summary>
      <param name="importedDelegate">The delegate to add.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)">
      <summary>Adds the specified validation error to the metadata’s collection of validation errors.</summary>
      <param name="validationError">The validation error to add.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.AddValidationError(System.String)">
      <summary>Adds a validation error to the metadata’s collection of validation errors using the specified description.</summary>
      <param name="validationErrorMessage">A message that describes the validation error.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable)">
      <summary>Adds the specified variable to the metadata’s collection of variables.</summary>
      <param name="variable">The variable to add.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)">
      <summary>Binds the specified <see cref="T:System.Activities.Argument" /> to the specified <see cref="T:System.Activities.RuntimeArgument" />.</summary>
      <param name="binding">The <see cref="T:System.Activities.Argument" /> to bind.</param>
      <param name="argument">The <see cref="T:System.Activities.RuntimeArgument" /> to bind.</param>
    </member>
    <member name="P:System.Activities.ActivityMetadata.Environment">
      <summary>Gets the activity’s <see cref="T:System.Activities.LocationReferenceEnvironment" /> of arguments, variables, delegate arguments, or symbols introduced by a <see cref="T:System.Activities.Hosting.SymbolResolver" />.</summary>
      <returns>The activity’s location reference environment of arguments, variables, delegate arguments, or symbols introduced by a <see cref="T:System.Activities.Hosting.SymbolResolver" />.</returns>
    </member>
    <member name="M:System.Activities.ActivityMetadata.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to this metadata instance.</summary>
      <returns>true if the specified object is equal to this metadata instance; otherwise, false.</returns>
      <param name="obj">The object to compare.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.GetArgumentsWithReflection">
      <summary>Returns a collection of arguments obtained by using reflection.</summary>
      <returns>A collection of arguments.</returns>
    </member>
    <member name="M:System.Activities.ActivityMetadata.GetHashCode">
      <summary>Returns a unique identifier for this metadata instance.</summary>
      <returns>An integer that uniquely identifies this metadata instance.</returns>
    </member>
    <member name="M:System.Activities.ActivityMetadata.GetImportedChildrenWithReflection">
      <summary>Returns a collection of imported child activities using reflection.</summary>
      <returns>A collection of imported child activities.</returns>
    </member>
    <member name="M:System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection">
      <summary>Returns a collection of delegates using reflection.</summary>
      <returns>A collection of delegates.</returns>
    </member>
    <member name="M:System.Activities.ActivityMetadata.GetVariablesWithReflection">
      <summary>Returns a collection of variables using reflection.</summary>
      <returns>A collection of variables.</returns>
    </member>
    <member name="P:System.Activities.ActivityMetadata.HasViolations">
      <summary>Gets a value that indicates whether there are any validation errors in the metadata.</summary>
      <returns>true if validation errors are present; otherwise, false.</returns>
    </member>
    <member name="M:System.Activities.ActivityMetadata.op_Equality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)">
      <summary>Returns a value that indicates whether the two specified metadata instances are equal.</summary>
      <returns>true if the two items are equal; otherwise, false.</returns>
      <param name="left">The first item to compare.</param>
      <param name="right">The second item to compare.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.op_Inequality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)">
      <summary>Returns a value that indicates whether the two specified metadata instances are not equal.</summary>
      <returns>true if the two items are not equal; otherwise, false.</returns>
      <param name="left">The first item to compare.</param>
      <param name="right">The second item to compare.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.RequireExtension``1">
      <summary>Specifies that the activity requires an extension of the specified generic type at runtime.</summary>
      <typeparam name="T">The type of the extension.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityMetadata.RequireExtension(System.Type)">
      <summary>Specifies that the activity requires an extension of the specified type at runtime.</summary>
      <param name="extensionType">The type of the extension.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})">
      <summary>Adds the specified collection of arguments to the activity’s arguments.</summary>
      <param name="arguments">The arguments to add.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})">
      <summary>Adds the specified collection as imported child activities of the activity.</summary>
      <param name="importedChildren">The activities to add.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})">
      <summary>Adds the specified collection as imported delegates of the activity.</summary>
      <param name="importedDelegates">The delegates to add.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})">
      <summary>Adds the specified collection of validation errors to the metadata’s collection of validation errors.</summary>
      <param name="validationErrors">The validation errors to add.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})">
      <summary>Adds the specified collection of variables to the activity’s variables.</summary>
      <param name="variables">The variables to add.</param>
    </member>
    <member name="T:System.Activities.ActivityPropertyReference">
      <summary>Represents a property reference that is used in <see cref="T:System.Activities.ActivityBuilder" /> and that maps to a <see cref="T:System.Activities.XamlIntegration.PropertyReferenceExtension`1" /> in an x:Class activity when the x:Class activity is deserialized into an <see cref="T:System.Activities.ActivityBuilder" />.</summary>
    </member>
    <member name="M:System.Activities.ActivityPropertyReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.ActivityPropertyReference" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityPropertyReference.SourceProperty">
      <summary>Gets or sets the source property name that corresponds to the property name in the x:Class activity definition.</summary>
      <returns>The source property name that corresponds to the property name in the x:Class activity definition.</returns>
    </member>
    <member name="P:System.Activities.ActivityPropertyReference.TargetProperty">
      <summary>Gets or sets the name of the property being set on the target object.</summary>
      <returns>The name of the property being set on the target object.</returns>
    </member>
    <member name="T:System.Activities.ActivityWithResult">
      <summary>Retrieves the value or type of an activity out argument. This class is abstract and derives from <see cref="T:System.Activities.Activity" /> class.</summary>
    </member>
    <member name="P:System.Activities.ActivityWithResult.Result">
      <summary>When implemented in a derived class, gets or sets the value of an object of type <see cref="T:System.Activities.OutArgument" />.</summary>
      <returns>An out argument.</returns>
    </member>
    <member name="P:System.Activities.ActivityWithResult.ResultType">
      <summary>When implemented in a derived class, gets the type of an activity <see cref="T:System.Activities.OutArgument" />.</summary>
      <returns>A type object.</returns>
    </member>
    <member name="T:System.Activities.Argument">
      <summary>The abstract base class that represents a binding terminal that supports the flow of data into and out of an activity.</summary>
    </member>
    <member name="P:System.Activities.Argument.ArgumentType">
      <summary>Gets the data type for the data bound to this <see cref="T:System.Activities.Argument" />.</summary>
      <returns>The data type for the data bound to this <see cref="T:System.Activities.Argument" />.</returns>
    </member>
    <member name="M:System.Activities.Argument.Create(System.Type,System.Activities.ArgumentDirection)">
      <summary>Initializes and returns a new <see cref="T:System.Activities.Argument" />.</summary>
      <returns>The newly created argument.</returns>
      <param name="type">The data type of the <see cref="T:System.Activities.Argument" />.</param>
      <param name="direction">One of the enumeration values that specifies the direction of the flow of data through the <see cref="T:System.Activities.Argument" />.</param>
    </member>
    <member name="M:System.Activities.Argument.CreateReference(System.Activities.Argument,System.String)">
      <summary>Creates a new argument that references the specified target argument using the specified referenced argument name.</summary>
      <returns>A new argument that references the specified target argument.</returns>
      <param name="argumentToReference">The target argument to reference.</param>
      <param name="referencedArgumentName">The name of the referenced argument.</param>
    </member>
    <member name="P:System.Activities.Argument.Direction">
      <summary>Gets an <see cref="T:System.Activities.ArgumentDirection" /> that specifies whether the <see cref="T:System.Activities.Argument" /> represents the flow of data into an activity, out of an activity, or both into and out of an activity. </summary>
      <returns>One of the enumeration values that specifies the direction of the flow of data through the <see cref="T:System.Activities.Argument" />.</returns>
    </member>
    <member name="P:System.Activities.Argument.EvaluationOrder">
      <summary>Gets or sets a zero-based value that specifies the order in which the argument is evaluated.</summary>
      <returns>A zero-based value that specifies the order in which the argument is evaluated.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero and not equal to <see cref="F:System.Activities.Argument.UnspecifiedEvaluationOrder" />.</exception>
    </member>
    <member name="P:System.Activities.Argument.Expression">
      <summary>Gets or sets a <see cref="T:System.Activities.ActivityWithResult" /> that represents the value of the data bound to this <see cref="T:System.Activities.Argument" />.</summary>
      <returns>The value of the data bound to this <see cref="T:System.Activities.Argument" />.</returns>
    </member>
    <member name="M:System.Activities.Argument.Get(System.Activities.ActivityContext)">
      <summary>Gets the value of the argument using the specified activity context.</summary>
      <returns>The value of the argument.</returns>
      <param name="context">The current activity context.</param>
    </member>
    <member name="M:System.Activities.Argument.Get``1(System.Activities.ActivityContext)">
      <summary>Gets the value of the argument using the specified type and activity context.</summary>
      <returns>The value of the argument.</returns>
      <param name="context">The current activity context.</param>
      <typeparam name="T">The type of the argument.</typeparam>
    </member>
    <member name="M:System.Activities.Argument.GetLocation(System.Activities.ActivityContext)">
      <summary>Gets the <see cref="T:System.Activities.Location" /> for this <see cref="T:System.Activities.Argument" />.</summary>
      <returns>The location for this <see cref="T:System.Activities.Argument" />.</returns>
      <param name="context">The activity context of the executing activity.</param>
    </member>
    <member name="F:System.Activities.Argument.ResultValue">
      <summary>Represents the constant value of “Result”, which corresponds to the name of the <see cref="P:System.Activities.ActivityWithResult.Result" /> property of type <see cref="T:System.Activities.OutArgument" /> in the expression base class <see cref="T:System.Activities.ActivityWithResult" />.</summary>
    </member>
    <member name="M:System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)">
      <summary>Sets the value of the argument using the specified activity context.</summary>
      <param name="context">The current activity context.</param>
      <param name="value">The value for the argument.</param>
    </member>
    <member name="F:System.Activities.Argument.UnspecifiedEvaluationOrder">
      <summary>Represents the value of the <see cref="P:System.Activities.Argument.EvaluationOrder" /> property for an argument with an unspecified evaluation order. This value is read-only.</summary>
    </member>
    <member name="T:System.Activities.ArgumentDirection">
      <summary>Specifies the direction of data flow for an <see cref="T:System.Activities.Argument" />.</summary>
    </member>
    <member name="F:System.Activities.ArgumentDirection.In">
      <summary>An <see cref="T:System.Activities.Argument" /> that represents the flow of data into a workflow or activity.</summary>
    </member>
    <member name="F:System.Activities.ArgumentDirection.Out">
      <summary>An <see cref="T:System.Activities.Argument" /> that represents the flow of data out of a workflow or activity.</summary>
    </member>
    <member name="F:System.Activities.ArgumentDirection.InOut">
      <summary>An <see cref="T:System.Activities.Argument" /> that represents the flow of data into and out of a workflow or activity.</summary>
    </member>
    <member name="T:System.Activities.AsyncCodeActivity">
      <summary>Manages asynchronous code activity execution from start to completion. This is an abstract class.</summary>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.AsyncCodeActivity" /> class.</summary>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)">
      <summary>When implemented in a derived class and using the specified execution context, callback method, and user state, enqueues an asynchronous activity in a run-time workflow. </summary>
      <returns>The object that saves variable information for an instance of an asynchronous activity.</returns>
      <param name="context">Information that defines the execution environment for the <see cref="T:System.Activities.AsyncCodeActivity" />.</param>
      <param name="callback">The method to be called after the asynchronous activity and completion notification have occurred.</param>
      <param name="state">An object that saves variable information for an instance of an asynchronous activity.</param>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.ActivityMetadata)">
      <summary>Throws an invalid operation exception when the wrong cache metadata is  included in the assembly.</summary>
      <param name="metadata">
        <see cref="T:System.Activities.CodeActivityMetadata" /> object that contains data for a set of asynchronous activity arguments. </param>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)">
      <summary>Serves as a virtual method and converts information obtained by cache reflection into arguments for an asynchronous activity.</summary>
      <param name="metadata">
        <see cref="T:System.Activities.CodeActivityMetadata" /> object that contains data for a set of asynchronous activity arguments. </param>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity.Cancel(System.Activities.AsyncCodeActivityContext)">
      <summary>When implemented in a derived class and using the specified execution environment information, notifies the workflow runtime that the asynchronous activity operation has reached an early completion. Serves as a virtual method.</summary>
      <param name="context">Information that defines the execution environment for the <see cref="T:System.Activities.AsyncCodeActivity" />.</param>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)">
      <summary>When implemented in a derived class and using the specified execution environment information, notifies the workflow runtime that the associated asynchronous activity operation has completed.</summary>
      <param name="context">Information that defines the execution environment for the <see cref="T:System.Activities.AsyncCodeActivity" />.</param>
      <param name="result">The implemented <see cref="T:System.IAsyncResult" /> that returns the status of an asynchronous activity when execution ends.</param>
    </member>
    <member name="P:System.Activities.AsyncCodeActivity.Implementation">
      <summary>Gets null or throws an error when there is an attempt to set the value of this property.</summary>
      <returns>An activity function.</returns>
    </member>
    <member name="T:System.Activities.AsyncCodeActivity`1">
      <summary>Manages asynchronous code activity execution, for an activity of a specified type, from start to completion. This is an abstract and generic class.</summary>
      <typeparam name="TResult">The type of the asynchronous activity that is handled by this class.</typeparam>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity`1.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.AsyncCodeActivity" /> class.</summary>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity`1.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)">
      <summary>When implemented in a derived class and using the specified execution context, callback method, and user state, enqueues an asynchronous activity in a run-time workflow. </summary>
      <returns>An object.</returns>
      <param name="context">Information that defines the execution environment for the <see cref="T:System.Activities.AsyncCodeActivity" />.</param>
      <param name="callback">The method to be called after the asynchronous activity and completion notification have occurred.</param>
      <param name="state">An object that saves variable information for an instance of an asynchronous activity.</param>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)">
      <summary>Throws an invalid operation exception when the wrong cache metadata is  included in the assembly.</summary>
      <param name="metadata">
        <see cref="T:System.Activities.CodeActivityMetadata" /> object that contains data for a set of asynchronous activity arguments. </param>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity`1.CacheMetadata(System.Activities.CodeActivityMetadata)">
      <summary>Serves as a virtual method and converts information obtained by reflection on a cache into arguments for an asynchronous activity.</summary>
      <param name="metadata">
        <see cref="T:System.Activities.CodeActivityMetadata" /> object that contains data for a set of asynchronous activity arguments.</param>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity`1.Cancel(System.Activities.AsyncCodeActivityContext)">
      <summary>When implemented in a derived class and using the specified execution environment information, notifies the workflow runtime that the asynchronous activity operation has been canceled. This method serves as a virtual method.</summary>
      <param name="context">Information that defines the execution environment for the <see cref="T:System.Activities.AsyncCodeActivity" />.</param>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity`1.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)">
      <summary>When implemented in a derived class and using the specified execution environment information, notifies the workflow runtime that the associated asynchronous activity operation has completed.</summary>
      <returns>A generic type.</returns>
      <param name="context">Information that defines the execution environment for the <see cref="T:System.Activities.AsyncCodeActivity" />.</param>
      <param name="result">The implemented <see cref="T:System.IAsyncResult" /> that returns the status of an asynchronous activity when execution ends.</param>
    </member>
    <member name="P:System.Activities.AsyncCodeActivity`1.Implementation">
      <summary>Gets null or throws an error when there is an attempt to set the value of this property.</summary>
      <returns>An activity function.</returns>
    </member>
    <member name="T:System.Activities.AsyncCodeActivityContext">
      <summary>The execution context for an asynchronous activity.</summary>
    </member>
    <member name="P:System.Activities.AsyncCodeActivityContext.IsCancellationRequested">
      <summary>Gets a value that indicates whether the currently executing <see cref="T:System.Activities.AsyncCodeActivity" /> is to be canceled.</summary>
      <returns>true if the currently executing <see cref="T:System.Activities.AsyncCodeActivity" /> is to be canceled; otherwise, false.</returns>
    </member>
    <member name="M:System.Activities.AsyncCodeActivityContext.MarkCanceled">
      <summary>Marks the current activity instance as canceled.</summary>
    </member>
    <member name="P:System.Activities.AsyncCodeActivityContext.UserState">
      <summary>Gets or sets a user-defined object associated with the current asynchronous activity.</summary>
      <returns>The user-defined object.</returns>
    </member>
    <member name="T:System.Activities.Bookmark">
      <summary>Represents a point at which a workflow or activity can passively wait to be resumed.</summary>
    </member>
    <member name="M:System.Activities.Bookmark.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Bookmark" /> class using the specified name.</summary>
      <param name="name">A name that identifies the bookmark.</param>
    </member>
    <member name="M:System.Activities.Bookmark.Equals(System.Activities.Bookmark)">
      <summary>Determines whether the current <see cref="T:System.Activities.Bookmark" /> and the specified <see cref="T:System.Activities.Bookmark" /> refer to the same continuation point in a workflow.</summary>
      <returns>true if the <see cref="T:System.Activities.Bookmark" /> objects are equal; otherwise, false.</returns>
      <param name="other">The bookmark to compare.</param>
    </member>
    <member name="M:System.Activities.Bookmark.Equals(System.Object)">
      <summary>Determines whether the current <see cref="T:System.Activities.Bookmark" /> and the specified object refer to the same continuation point in a workflow.</summary>
      <returns>true if the <see cref="T:System.Activities.Bookmark" /> objects are equal; otherwise, false.</returns>
      <param name="obj">The object to compare.</param>
    </member>
    <member name="M:System.Activities.Bookmark.GetHashCode">
      <summary>Returns a unique identifier for this <see cref="T:System.Activities.Bookmark" /> instance.</summary>
      <returns>The unique identifier of this <see cref="T:System.Activities.Bookmark" /> instance.</returns>
    </member>
    <member name="P:System.Activities.Bookmark.Name">
      <summary>Gets the bookmark name.</summary>
      <returns>The bookmark name.</returns>
    </member>
    <member name="M:System.Activities.Bookmark.ToString">
      <summary>Returns the bookmark name for a named bookmark or the bookmark ID for an unnamed bookmark.</summary>
      <returns>The bookmark name or ID.</returns>
    </member>
    <member name="T:System.Activities.BookmarkCallback">
      <summary>Represents the method that is called when a <see cref="T:System.Activities.Bookmark" /> is resumed.</summary>
      <param name="context">The execution environment of the activity handling the <see cref="T:System.Activities.Bookmark" /> resumption.</param>
      <param name="bookmark">The <see cref="T:System.Activities.Bookmark" /> being resumed.</param>
      <param name="value">The data associated with the <see cref="T:System.Activities.Bookmark" /> resumption.</param>
    </member>
    <member name="T:System.Activities.BookmarkOptions">
      <summary>Specifies the options for a <see cref="T:System.Activities.Bookmark" />.</summary>
    </member>
    <member name="F:System.Activities.BookmarkOptions.None">
      <summary>Default <see cref="T:System.Activities.Bookmark" /> options,</summary>
    </member>
    <member name="F:System.Activities.BookmarkOptions.MultipleResume">
      <summary>A <see cref="T:System.Activities.Bookmark" /> that can be resumed multiple times.</summary>
    </member>
    <member name="F:System.Activities.BookmarkOptions.NonBlocking">
      <summary>A <see cref="T:System.Activities.Bookmark" /> that does not block the workflow.</summary>
    </member>
    <member name="T:System.Activities.BookmarkResumptionResult">
      <summary>Defines an enumeration whose members represent the outcome of bookmark scheduling requests.</summary>
    </member>
    <member name="F:System.Activities.BookmarkResumptionResult.Success">
      <summary>The bookmark resumption was successfully scheduled.</summary>
    </member>
    <member name="F:System.Activities.BookmarkResumptionResult.NotFound">
      <summary>The bookmark resumption was not scheduled because the bookmark could not be found.</summary>
    </member>
    <member name="F:System.Activities.BookmarkResumptionResult.NotReady">
      <summary>The bookmark resumption was not scheduled because the runtime has not yet created the bookmark. The host should wait until another idle point to try resumption again.</summary>
    </member>
    <member name="T:System.Activities.BookmarkScope">
      <summary>Scopes a set of <see cref="T:System.Activities.Bookmark" /> objects that are categorized as operating under the same protocol.</summary>
    </member>
    <member name="M:System.Activities.BookmarkScope.#ctor(System.Guid)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.BookmarkScope" /> class with the specified GUID scope identification number.</summary>
      <param name="id">A GUID scope identification number.</param>
    </member>
    <member name="P:System.Activities.BookmarkScope.Default">
      <summary>Gets the default <see cref="T:System.Activities.BookmarkScope" />.</summary>
      <returns>The default <see cref="T:System.Activities.BookmarkScope" />.</returns>
    </member>
    <member name="M:System.Activities.BookmarkScope.Equals(System.Activities.BookmarkScope)">
      <summary>Gets a value that indicates whether the current <see cref="T:System.Activities.BookmarkScope" /> and the specified <see cref="T:System.Activities.BookmarkScope" /> are the same.</summary>
      <returns>true if the bookmark scopes are the same; otherwise, false.</returns>
      <param name="other">A bookmark scope object.</param>
    </member>
    <member name="M:System.Activities.BookmarkScope.GetHashCode">
      <summary>Generates an identification number for the current <see cref="T:System.Activities.BookmarkScope" />.</summary>
      <returns>A hash code.</returns>
    </member>
    <member name="P:System.Activities.BookmarkScope.Id">
      <summary>Gets the GUID that identifies the current <see cref="T:System.Activities.BookmarkScope" />.</summary>
      <returns>A GUID.</returns>
    </member>
    <member name="M:System.Activities.BookmarkScope.Initialize(System.Activities.NativeActivityContext,System.Guid)">
      <summary>Initializes the current <see cref="T:System.Activities.BookmarkScope" /> using the specified GUID.</summary>
      <param name="context">The current activity execution environment.</param>
      <param name="id">The GUID to assign to the <see cref="T:System.Activities.BookmarkScope" />.</param>
    </member>
    <member name="P:System.Activities.BookmarkScope.IsInitialized">
      <summary>Gets a value that indicates whether the current <see cref="T:System.Activities.BookmarkScope" /> has been initialized.</summary>
      <returns>true if the <see cref="T:System.Activities.BookmarkScope" /> has been initialized; otherwise, false.</returns>
    </member>
    <member name="T:System.Activities.BookmarkScopeHandle">
      <summary>A T:System.Handle used to manage the lifetime of a <see cref="T:System.Activities.BookmarkScope" />.</summary>
    </member>
    <member name="M:System.Activities.BookmarkScopeHandle.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.BookmarkScopeHandle" /> class.</summary>
    </member>
    <member name="P:System.Activities.BookmarkScopeHandle.BookmarkScope">
      <summary>The <see cref="T:System.Activities.BookmarkScope" /> associated with this <see cref="T:System.Activities.BookmarkScopeHandle" />.</summary>
      <returns>A <see cref="T:System.Activities.BookmarkScope" />.</returns>
    </member>
    <member name="M:System.Activities.BookmarkScopeHandle.CreateBookmarkScope(System.Activities.NativeActivityContext)">
      <summary>Creates a new <see cref="P:System.Activities.BookmarkScopeHandle.BookmarkScope" /></summary>
      <param name="context">The activity context.</param>
    </member>
    <member name="M:System.Activities.BookmarkScopeHandle.CreateBookmarkScope(System.Activities.NativeActivityContext,System.Guid)">
      <summary>Creates a new <see cref="T:System.Activities.BookmarkScope" />.</summary>
      <param name="context">The activity context.</param>
      <param name="scopeId">A unique global identifier associated with the <see cref="T:System.Activities.BookmarkScope" />.</param>
    </member>
    <member name="P:System.Activities.BookmarkScopeHandle.Default">
      <summary>The default <see cref="T:System.Activities.BookmarkScopeHandle" />.</summary>
      <returns>A <see cref="T:System.Activities.BookmarkScopeHandle" />.</returns>
    </member>
    <member name="M:System.Activities.BookmarkScopeHandle.Initialize(System.Activities.NativeActivityContext,System.Guid)">
      <summary>Initializes the <see cref="P:System.Activities.BookmarkScopeHandle.BookmarkScope" />, usingthe specified activity context and GUID identifier.</summary>
      <param name="context">The activity context.</param>
      <param name="scope">A GUID identifier that is associated with <see cref="P:System.Activities.BookmarkScopeHandle.BookmarkScope" />.</param>
    </member>
    <member name="T:System.Activities.CodeActivity">
      <summary>An abstract class for creating a custom activity with imperative behavior defined with the <see cref="M:System.Activities.CodeActivity.Execute(System.Activities.CodeActivityContext)" /> method, which gives access to variable and argument resolution and extensions.</summary>
    </member>
    <member name="M:System.Activities.CodeActivity.#ctor">
      <summary>When implemented in a derived class, creates an instance of the derived class.</summary>
    </member>
    <member name="M:System.Activities.CodeActivity.CacheMetadata(System.Activities.ActivityMetadata)">
      <summary>Not implemented. Use <see cref="M:System.Activities.CodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)" /> instead.</summary>
      <param name="metadata">Not implemented.</param>
    </member>
    <member name="M:System.Activities.CodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)">
      <summary>Creates and validates a description of the activity’s arguments, variables, child activities, and activity delegates.</summary>
      <param name="metadata">The activity’s metadata that encapsulates the activity’s arguments, variables, child activities, and activity delegates.</param>
    </member>
    <member name="M:System.Activities.CodeActivity.Execute(System.Activities.CodeActivityContext)">
      <summary>When implemented in a derived class, performs the execution of the activity.</summary>
      <param name="context">The execution context under which the activity executes.</param>
    </member>
    <member name="P:System.Activities.CodeActivity.Implementation">
      <summary>Not supported.</summary>
      <returns>Always returns null.</returns>
    </member>
    <member name="T:System.Activities.CodeActivity`1">
      <summary>An abstract class for creating a custom activity with imperative behavior defined in the <see cref="M:System.Activities.CodeActivity.Execute(System.Activities.CodeActivityContext)" /> method, giving access to variable and argument resolution and extensions.</summary>
      <typeparam name="TResult">The result returned by the activity.</typeparam>
    </member>
    <member name="M:System.Activities.CodeActivity`1.#ctor">
      <summary>When implemented in a derived class, creates an instance of the derived class.</summary>
    </member>
    <member name="M:System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)">
      <summary>Not implemented. Use <see cref="M:System.Activities.CodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)" /> instead.</summary>
      <param name="metadata">Not implemented.</param>
    </member>
    <member name="M:System.Activities.CodeActivity`1.CacheMetadata(System.Activities.CodeActivityMetadata)">
      <summary>Creates and validates a description of the activity’s arguments, variables, child activities, and activity delegates.</summary>
      <param name="metadata">The activity’s metadata that encapsulates the activity’s arguments, variables, child activities, and activity delegates.</param>
    </member>
    <member name="M:System.Activities.CodeActivity`1.Execute(System.Activities.CodeActivityContext)">
      <summary>When implemented in a derived class, performs the execution of the activity.</summary>
      <returns>The result of the activity’s execution.</returns>
      <param name="context">The execution context under which the activity executes.</param>
    </member>
    <member name="P:System.Activities.CodeActivity`1.Implementation">
      <summary>Not supported.</summary>
      <returns>Always returns null.</returns>
    </member>
    <member name="T:System.Activities.CodeActivityContext">
      <summary>Extends <see cref="T:System.Activities.ActivityContext" /> and provides additional functionality for <see cref="T:System.Activities.CodeActivity" />.</summary>
    </member>
    <member name="M:System.Activities.CodeActivityContext.GetProperty``1">
      <summary>Gets the execution property of the specified type.</summary>
      <returns>The execution property.</returns>
      <typeparam name="THandle">The type of execution property.</typeparam>
    </member>
    <member name="M:System.Activities.CodeActivityContext.Track(System.Activities.Tracking.CustomTrackingRecord)">
      <summary>Sends the specified custom tracking record to any registered tracking providers.</summary>
      <param name="record">The data to be tracked.</param>
    </member>
    <member name="T:System.Activities.CodeActivityMetadata">
      <summary>Represents the set of arguments that a configured <see cref="T:System.Activities.CodeActivity" /> introduces to the execution environment.</summary>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.AddArgument(System.Activities.RuntimeArgument)">
      <summary>Adds an argument to the collection of arguments of an activity.</summary>
      <param name="argument">The argument to add to the collection.</param>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})">
      <summary>Adds the specified extension provider to the collection of default extension providers for the activity.</summary>
      <param name="extensionProvider">The function that returns the extension.</param>
      <typeparam name="T">The type of the extension provider.</typeparam>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)">
      <summary>Adds the specified validation error to the metadata’s collection of validation errors.</summary>
      <param name="validationError">The validation error to add.</param>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.AddValidationError(System.String)">
      <summary>Adds a validation error to the metadata’s collection of validation errors using the specified description.</summary>
      <param name="validationErrorMessage">A message that describes the validation error.</param>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)">
      <summary>Binds the specified <see cref="T:System.Activities.Argument" /> to the specified <see cref="T:System.Activities.RuntimeArgument" />.</summary>
      <param name="binding">The <see cref="T:System.Activities.Argument" /> to bind.</param>
      <param name="argument">The <see cref="T:System.Activities.RuntimeArgument" /> to bind.</param>
    </member>
    <member name="P:System.Activities.CodeActivityMetadata.Environment">
      <summary>Gets the activity’s <see cref="T:System.Activities.LocationReferenceEnvironment" /> of arguments or symbols introduced by a <see cref="T:System.Activities.Hosting.SymbolResolver" />.</summary>
      <returns>The activity’s location reference environment of arguments or symbols introduced by a <see cref="T:System.Activities.Hosting.SymbolResolver" />.</returns>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to this metadata instance.</summary>
      <returns>true if the specified object is equal to this metadata instance; otherwise, false.</returns>
      <param name="obj">The object to compare.</param>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.GetArgumentsWithReflection">
      <summary>Returns a collection of arguments obtained by using reflection.</summary>
      <returns>A collection of arguments.</returns>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.GetHashCode">
      <summary>Returns a unique identifier for this metadata instance.</summary>
      <returns>An integer that uniquely identifies this metadata instance.</returns>
    </member>
    <member name="P:System.Activities.CodeActivityMetadata.HasViolations">
      <summary>Gets a value that indicates whether there are any validation errors in the metadata.</summary>
      <returns>true if validation errors are present; otherwise, false.</returns>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.op_Equality(System.Activities.CodeActivityMetadata,System.Activities.CodeActivityMetadata)">
      <summary>Returns a value that indicates whether the two specified metadata instances are equal.</summary>
      <returns>true if the two items are equal; otherwise, false.</returns>
      <param name="left">The first item to compare.</param>
      <param name="right">The second item to compare.</param>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.op_Inequality(System.Activities.CodeActivityMetadata,System.Activities.CodeActivityMetadata)">
      <summary>Returns a value that indicates whether the two specified metadata instances are not equal.</summary>
      <returns>true if the two items are not equal; otherwise, false.</returns>
      <param name="left">The first item to compare.</param>
      <param name="right">The first item to compare.</param>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.RequireExtension``1">
      <summary>Specifies that the activity requires an extension of the specified generic type at runtime.</summary>
      <typeparam name="T">The type of the extension.</typeparam>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.RequireExtension(System.Type)">
      <summary>Specifies that the activity requires an extension of the specified type at runtime.</summary>
      <param name="extensionType">The type of the extension.</param>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})">
      <summary>Adds the specified collection of arguments to the activity’s arguments.</summary>
      <param name="arguments">The arguments to add.</param>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})">
      <summary>Adds the specified collection of validation errors to the metadata’s collection of validation errors.</summary>
      <param name="validationErrors">The validation errors to add.</param>
    </member>
    <member name="T:System.Activities.CompletionCallback">
      <summary>The method that is called when an activity completes.</summary>
      <param name="context">The execution environment of the activity.</param>
      <param name="completedInstance">The activity that completed.</param>
    </member>
    <member name="T:System.Activities.CompletionCallback`1">
      <summary>The method that is called when an activity completes.</summary>
      <param name="context">The execution environment of the activity.</param>
      <param name="completedInstance">The activity that completed.</param>
      <param name="result">The <see cref="P:System.Activities.WorkflowElement`1.Result" /> value of the activity that completed.</param>
      <typeparam name="TResult">The type of the result value.</typeparam>
    </member>
    <member name="T:System.Activities.DelegateArgument">
      <summary>The abstract base class that represents a binding terminal that supports the flow of data into and out of an <see cref="T:System.Activities.ActivityDelegate" />.</summary>
    </member>
    <member name="P:System.Activities.DelegateArgument.Direction">
      <summary>Gets an <see cref="T:System.Activities.ArgumentDirection" /> that specifies whether the <see cref="T:System.Activities.DelegateArgument" /> represents the flow of data into an <see cref="T:System.Activities.ActivityDelegate" />, out of an <see cref="T:System.Activities.ActivityDelegate" />, or both into and out of an <see cref="T:System.Activities.ActivityDelegate" />.</summary>
      <returns>One of the enumeration values that specifies the direction of the flow of data through the <see cref="T:System.Activities.DelegateArgument" />.</returns>
    </member>
    <member name="M:System.Activities.DelegateArgument.Get(System.Activities.ActivityContext)">
      <summary>Returns the value of the argument using the specified activity context.</summary>
      <returns>The value of the argument.</returns>
      <param name="context">The current activity context.</param>
    </member>
    <member name="M:System.Activities.DelegateArgument.GetLocation(System.Activities.ActivityContext)">
      <summary>Returns the <see cref="T:System.Activities.Location" /> of the value referenced by the <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <returns>The location of the value referenced by the <see cref="T:System.Activities.DelegateArgument" />.</returns>
      <param name="context">The current activity context.</param>
    </member>
    <member name="P:System.Activities.DelegateArgument.Name">
      <summary>Gets or sets the name of the <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <returns>The name of the <see cref="T:System.Activities.DelegateArgument" />.</returns>
    </member>
    <member name="P:System.Activities.DelegateArgument.NameCore">
      <summary>Gets the string value used by <see cref="P:System.Activities.DelegateArgument.Name" />.</summary>
      <returns>The name of the <see cref="T:System.Activities.DelegateArgument" />.</returns>
    </member>
    <member name="T:System.Activities.DelegateCompletionCallback">
      <summary>Represents the method that is called when an <see cref="T:System.Activities.ActivityDelegate" /> completes.</summary>
      <param name="context">The execution environment of the activity handling the callback.</param>
      <param name="completedInstance">The completed activity instance of the <see cref="T:System.Activities.ActivityDelegate" /> handler.</param>
      <param name="outArguments">The output arguments of the completed <see cref="T:System.Activities.ActivityDelegate" />.</param>
    </member>
    <member name="T:System.Activities.DelegateInArgument">
      <summary>The abstract base class that represents a binding terminal that supports the flow of data into an <see cref="T:System.Activities.ActivityDelegate" />.</summary>
    </member>
    <member name="T:System.Activities.DelegateInArgument`1">
      <summary>A binding terminal that represents the flow of data into an <see cref="T:System.Activities.ActivityDelegate" />.</summary>
      <typeparam name="T">The data type of the <see cref="T:System.Activities.DelegateInArgument`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.DelegateInArgument`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.DelegateInArgument`1" /> class.</summary>
    </member>
    <member name="M:System.Activities.DelegateInArgument`1.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.DelegateInArgument`1" /> class using the specified name.</summary>
      <param name="name">The name of the <see cref="T:System.Activities.DelegateInArgument`1" />.</param>
    </member>
    <member name="M:System.Activities.DelegateInArgument`1.Get(System.Activities.ActivityContext)">
      <summary>Gets the value of the <see cref="T:System.Activities.DelegateInArgument`1" />.</summary>
      <returns>The value of the <see cref="T:System.Activities.DelegateInArgument`1" />.</returns>
      <param name="context">The current activity context.</param>
    </member>
    <member name="M:System.Activities.DelegateInArgument`1.Set(System.Activities.ActivityContext,`0)">
      <summary>Sets the value of the <see cref="T:System.Activities.DelegateInArgument`1" />.</summary>
      <param name="context">The current activity context.</param>
      <param name="value">The new value.</param>
    </member>
    <member name="T:System.Activities.DelegateOutArgument">
      <summary>The abstract base class that represents a binding terminal that supports the flow of data out of an <see cref="T:System.Activities.ActivityDelegate" />.</summary>
    </member>
    <member name="T:System.Activities.DelegateOutArgument`1">
      <summary>A binding terminal that represents the flow of data out of an <see cref="T:System.Activities.ActivityDelegate" />.</summary>
      <typeparam name="T">The data type of the <see cref="T:System.Activities.DelegateOutArgument`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.DelegateOutArgument`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.DelegateOutArgument`1" /> class.</summary>
    </member>
    <member name="M:System.Activities.DelegateOutArgument`1.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.DelegateOutArgument`1" /> class with the specified name.</summary>
      <param name="name">The name of the <see cref="T:System.Activities.DelegateOutArgument`1" />.</param>
    </member>
    <member name="M:System.Activities.DelegateOutArgument`1.Get(System.Activities.ActivityContext)">
      <summary>Gets the value of the <see cref="T:System.Activities.DelegateOutArgument`1" />.</summary>
      <returns>The value of the <see cref="T:System.Activities.DelegateOutArgument`1" />.</returns>
      <param name="context">The current activity context.</param>
    </member>
    <member name="M:System.Activities.DelegateOutArgument`1.GetLocation(System.Activities.ActivityContext)">
      <summary>Returns the <see cref="T:System.Activities.Location`1" /> for this <see cref="T:System.Activities.DelegateOutArgument`1" />.</summary>
      <returns>The location for this <see cref="T:System.Activities.DelegateOutArgument`1" />.</returns>
      <param name="context">The activity context that contains the location for this <see cref="T:System.Activities.DelegateOutArgument`1" />.</param>
    </member>
    <member name="M:System.Activities.DelegateOutArgument`1.Set(System.Activities.ActivityContext,`0)">
      <summary>Sets the value of the <see cref="T:System.Activities.DelegateOutArgument`1" />.</summary>
      <param name="context">The current activity context.</param>
      <param name="value">The new value.</param>
    </member>
    <member name="T:System.Activities.DynamicActivity">
      <summary>Provides an object model that allows you to construct activities dynamically that interface with the WF designer and runtime using <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />.</summary>
    </member>
    <member name="M:System.Activities.DynamicActivity.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.DynamicActivity" /> class.</summary>
    </member>
    <member name="P:System.Activities.DynamicActivity.Attributes">
      <summary>Gets the collection of attributes of the dynamically generated activity.</summary>
      <returns>The collection of attributes.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivity.Constraints">
      <summary>Returns a collection of <see cref="T:System.Activities.Validation.Constraint" /> activities that are configured to provide validation for the <see cref="T:System.Activities.DynamicActivity" />.</summary>
      <returns>The constraint collection.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivity.Implementation">
      <summary>Gets or sets the execution logic of the activity.</summary>
      <returns>The execution logic.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivity.Name">
      <summary>The name to be displayed for the activity in the workflow designer.</summary>
      <returns>The activity name.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivity.Properties">
      <summary>Gets the collection of properties that map to the arguments of the dynamically generated activity.</summary>
      <returns>The collection of properties.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>Returns a collection of attributes of the dynamic activity.</summary>
      <returns>The attributes of the dynamic activity.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>Returns the class name of the dynamic activity.</summary>
      <returns>The class name.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>Returns the component name of the dynamic activity.</summary>
      <returns>The component name.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>Returns a type converter for the dynamic activity.</summary>
      <returns>A type converter for this dynamic activity instance.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>Returns the default event for the dynamic activity.</summary>
      <returns>The default event.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>Returns the default property for the dynamic activity.</summary>
      <returns>The default property.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>Returns an editor with the specified base type.</summary>
      <returns>An instance of the editor that can be cast to the specified editor type or null if no editor of the requested type can be found.</returns>
      <param name="editorBaseType">The base type of the editor you want to find.</param>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>Returns the collection of events of the dynamic activity.</summary>
      <returns>The collection of events.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>Returns the collection of events of the dynamic activity using a specified array of attributes as a filter.</summary>
      <returns>The collection of events that match the specified attributes.</returns>
      <param name="attributes">An array that you can use as a filter.</param>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>Returns the collection of properties of the dynamic activity.</summary>
      <returns>The collection of properties.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>Returns the collection of properties of the dynamic activity using a specified array of attributes as a filter.</summary>
      <returns>The collection of properties that match the specified attributes.</returns>
      <param name="attributes">An array that you can use as a filter.</param>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Returns this instance of the <see cref="T:System.Activities.DynamicActivity" /> class.</summary>
      <returns>This instance of <see cref="T:System.Activities.DynamicActivity" />.</returns>
      <param name="pd">The property whose owner is to be found.</param>
    </member>
    <member name="T:System.Activities.DynamicActivity`1">
      <summary>Provides an approach that is consistent with the document object model (DOM), which constructs activities dynamically that interface with the WF designer and workflow runtime using <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />.</summary>
      <typeparam name="TResult">The result returned by the activity.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.DynamicActivity`1" /> class.</summary>
    </member>
    <member name="P:System.Activities.DynamicActivity`1.Attributes">
      <summary>Gets the collection of attributes of the dynamically generated activity.</summary>
      <returns>The collection of attributes.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivity`1.Constraints">
      <summary>Returns a collection of <see cref="T:System.Activities.Validation.Constraint" /> activities that are configured to provide validation for the <see cref="T:System.Activities.DynamicActivity`1" />.</summary>
      <returns>The constraint collection.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivity`1.Implementation">
      <summary>Gets or sets the execution logic of the activity.</summary>
      <returns>The execution logic.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivity`1.Name">
      <summary>Gets the name to be displayed for the activity in the workflow designer.</summary>
      <returns>The activity name.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivity`1.Properties">
      <summary>Gets the collection of properties that map to the arguments of the dynamically generated activity.</summary>
      <returns>The collection of properties.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>Returns a collection of attributes of the dynamic activity.</summary>
      <returns>The attributes of the dynamic activity.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>Returns the class name of the dynamic activity.</summary>
      <returns>The class name.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>Returns the component name of the dynamic activity.</summary>
      <returns>The component name.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>Returns a type converter for the dynamic activity.</summary>
      <returns>A type converter for this dynamic activity instance.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>Returns the default event for the dynamic activity.</summary>
      <returns>The default event.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>Returns the default property for the dynamic activity.</summary>
      <returns>The default property.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>Returns an editor with the specified base type.</summary>
      <returns>An instance of the editor that can be cast to the specified editor type, or null if no editor of the requested type can be found.</returns>
      <param name="editorBaseType">The base type of the editor you want to find.</param>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>Returns the collection of events of the dynamic activity.</summary>
      <returns>The collection of events.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>Returns the collection of events of the dynamic activity using a specified array of attributes as a filter.</summary>
      <returns>The collection of events that match the specified attributes.</returns>
      <param name="attributes">An array that you can use as a filter.</param>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>Returns the collection of properties of the dynamic activity.</summary>
      <returns>The collection of properties.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>Returns the collection of properties of the dynamic activity using a specified array of attributes as a filter.</summary>
      <returns>The collection of properties that match the specified attributes.</returns>
      <param name="attributes">An array that you can use as a filter.</param>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Returns this instance of the <see cref="T:System.Activities.DynamicActivity`1" /> class.</summary>
      <returns>This instance of <see cref="T:System.Activities.DynamicActivity`1" />.</returns>
      <param name="pd">The property whose owner is to be found.</param>
    </member>
    <member name="T:System.Activities.DynamicActivityProperty">
      <summary>Represents a property of a  <see cref="T:System.Activities.DynamicActivity" /> that is created at runtime and executes in the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</summary>
    </member>
    <member name="M:System.Activities.DynamicActivityProperty.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.DynamicActivityProperty" /> class.</summary>
    </member>
    <member name="P:System.Activities.DynamicActivityProperty.Attributes">
      <summary>Returns the attributes of the <see cref="T:System.Activities.DynamicActivityProperty" /> object.</summary>
      <returns>A collection of attributes.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivityProperty.Name">
      <summary>Gets or sets the name of the <see cref="T:System.Activities.DynamicActivityProperty" /> object.</summary>
      <returns>The property name.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivityProperty.ToString">
      <summary>Returns a string message that contains the type and the name of the <see cref="T:System.Activities.DynamicActivityProperty" /> instance.</summary>
      <returns>A string message.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivityProperty.Type">
      <summary>Gets or sets the type of the <see cref="T:System.Activities.DynamicActivityProperty" /> object.</summary>
      <returns>An object of type <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivityProperty.Value">
      <summary>Gets or sets the value of the <see cref="T:System.Activities.DynamicActivityProperty" /> object.</summary>
      <returns>An object of type <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:System.Activities.ExclusiveHandle">
      <summary>Adds supplementary information to a bookmark that enables it to access a subset of its scope handles, excluding handles that are not required.</summary>
    </member>
    <member name="M:System.Activities.ExclusiveHandle.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.ExclusiveHandle" /> class.</summary>
    </member>
    <member name="M:System.Activities.ExclusiveHandle.OnInitialize(System.Activities.HandleInitializationContext)">
      <summary>Creates a list of default <see cref="T:System.Activities.BookmarkScopeHandle" /> objects from handle variables in the specified handle initialization context.</summary>
      <param name="context">The environment in which the handle is created.</param>
    </member>
    <member name="M:System.Activities.ExclusiveHandle.RegisterBookmarkScope(System.Activities.NativeActivityContext,System.Activities.BookmarkScopeHandle)">
      <summary>Adds the specified bookmark scope handle to the <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Activities.BookmarkScopeHandle" /> objects using the specified context.</summary>
      <param name="context">The environment in which the handle is created.</param>
      <param name="bookmarkScopeHandle">The token used to identify and access a group of bookmarks that operate under the same protocol in a workflow activity operation.</param>
    </member>
    <member name="P:System.Activities.ExclusiveHandle.RegisteredBookmarkScopes">
      <summary>Gets a new or existing <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Activities.BookmarkScopeHandle" /> objects.</summary>
      <returns>A read-only collection of bookmark scope handles.</returns>
    </member>
    <member name="M:System.Activities.ExclusiveHandle.Reinitialize(System.Activities.NativeActivityContext)">
      <summary>Sets the registered bookmark scope handles back to the defaults.</summary>
      <param name="context">The environment in which the handle is created.</param>
    </member>
    <member name="T:System.Activities.ExecutionProperties">
      <summary>Represents the collection of properties at a particular scope.</summary>
    </member>
    <member name="M:System.Activities.ExecutionProperties.Add(System.String,System.Object)">
      <summary>Registers a new property using the specified name.</summary>
      <param name="name">The name of the property.</param>
      <param name="property">The object that represents the property.</param>
    </member>
    <member name="M:System.Activities.ExecutionProperties.Add(System.String,System.Object,System.Boolean)">
      <summary>Registers a property using the specified name and child visibility.</summary>
      <param name="name">The name of the property.</param>
      <param name="property">The object that represents the property.</param>
      <param name="onlyVisibleToPublicChildren">A value that determines whether this property is visible to the children of the owning activity.</param>
    </member>
    <member name="M:System.Activities.ExecutionProperties.Find(System.String)">
      <summary>Returns the nearest property of the given name.</summary>
      <returns>The nearest property of the given name.</returns>
      <param name="name">The name of the property.</param>
    </member>
    <member name="M:System.Activities.ExecutionProperties.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection of properties.</summary>
      <returns>An enumerator that iterates through the collection of properties.</returns>
    </member>
    <member name="P:System.Activities.ExecutionProperties.IsEmpty">
      <summary>Gets a value that indicates whether there are properties registered at the current scope.</summary>
      <returns>true if there are properties registered; otherwise, false.</returns>
    </member>
    <member name="M:System.Activities.ExecutionProperties.Remove(System.String)">
      <summary>Unregisters the property with the specified name.</summary>
      <returns>true if the property was unregistered; otherwise, false.</returns>
      <param name="name">The name of the property to unregister.</param>
    </member>
    <member name="M:System.Activities.ExecutionProperties.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection of properties.</summary>
      <returns>An enumerator that iterates through the collection of properties.</returns>
    </member>
    <member name="T:System.Activities.FaultCallback">
      <summary>Represents the method that is called when a scheduled activity or one of its children enters the <see cref="F:System.Activities.ActivityInstanceState.Faulted" /> state.</summary>
      <param name="faultContext">The <see cref="T:System.Activities.ActivityFaultContext" /> provided for inspecting the workflow fault.</param>
      <param name="propagatedException">The exception that caused the fault.</param>
      <param name="propagatedFrom">The activity that threw the exception and generated the fault.</param>
    </member>
    <member name="T:System.Activities.Handle">
      <summary>Represents a type that has its lifetime controlled by the workflow runtime.</summary>
    </member>
    <member name="M:System.Activities.Handle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Handle" /> class.</summary>
    </member>
    <member name="P:System.Activities.Handle.ExecutionPropertyName">
      <summary>Gets the name to be used by this <see cref="T:System.Activities.Handle" /> when added to an activity’s execution properties.</summary>
      <returns>The name of derived type as provided by <see cref="P:System.Type.FullName" />.</returns>
    </member>
    <member name="M:System.Activities.Handle.OnInitialize(System.Activities.HandleInitializationContext)">
      <summary>Called by the workflow runtime when the environment that contains the <see cref="T:System.Activities.Handle" /> is initialized.</summary>
      <param name="context">The environment in which the handle is being created.</param>
    </member>
    <member name="M:System.Activities.Handle.OnUninitialize(System.Activities.HandleInitializationContext)">
      <summary>Called by the workflow runtime when the <see cref="T:System.Activities.Variable" /> for the <see cref="T:System.Activities.Handle" /> goes out of scope.</summary>
      <param name="context">The environment in which the handle was created.</param>
    </member>
    <member name="P:System.Activities.Handle.Owner">
      <summary>Gets the <see cref="T:System.Activities.ActivityInstance" /> that contains the <see cref="T:System.Activities.Variable" /> that contains the <see cref="T:System.Activities.Handle" />.</summary>
      <returns>The activity instance that contains the <see cref="T:System.Activities.Variable" /> that contains the <see cref="T:System.Activities.Handle" />.</returns>
    </member>
    <member name="M:System.Activities.Handle.ThrowIfUninitialized">
      <summary>Throws an <see cref="T:System.InvalidOperationException" /> if the <see cref="T:System.Activities.Handle" /> has not been initialized.</summary>
    </member>
    <member name="T:System.Activities.HandleInitializationContext">
      <summary>Represents the initialization environment of a <see cref="T:System.Activities.Handle" />.</summary>
    </member>
    <member name="M:System.Activities.HandleInitializationContext.CreateAndInitializeHandle``1">
      <summary>Creates and initializes a new instance of the handle type specified by the type parameter.</summary>
      <returns>A new initialized instance of the handle type specified by the type parameter.</returns>
      <typeparam name="THandle">The type of the <see cref="T:System.Activities.Handle" /> to create and initialize.</typeparam>
    </member>
    <member name="M:System.Activities.HandleInitializationContext.UninitializeHandle(System.Activities.Handle)">
      <summary>Uninitializes the specified <see cref="T:System.Activities.Handle" />.</summary>
      <param name="handle">The <see cref="T:System.Activities.Handle" /> to uninitialize.</param>
    </member>
    <member name="T:System.Activities.IExecutionProperty">
      <summary>Provides execution properties with a mechanism for configuring thread local storage before and after the work items of the associated activity.</summary>
    </member>
    <member name="M:System.Activities.IExecutionProperty.CleanupWorkflowThread">
      <summary>Provides an opportunity for the execution property to tear down thread local storage.</summary>
    </member>
    <member name="M:System.Activities.IExecutionProperty.SetupWorkflowThread">
      <summary>Provides an opportunity for the execution property to set up thread local storage.</summary>
    </member>
    <member name="T:System.Activities.InArgument">
      <summary>The abstract base class that represents a binding terminal that supports the flow of data into an activity.</summary>
    </member>
    <member name="M:System.Activities.InArgument.CreateReference(System.Activities.InArgument,System.String)">
      <summary>Creates a new <see cref="T:System.Activities.InArgument" /> that references the specified target <see cref="T:System.Activities.InArgument" /> using the specified referenced argument name.</summary>
      <returns>A new in argument that references the specified target <see cref="T:System.Activities.InArgument" />.</returns>
      <param name="argumentToReference">The target in argument to reference.</param>
      <param name="referencedArgumentName">The name of the referenced argument.</param>
    </member>
    <member name="M:System.Activities.InArgument.CreateReference(System.Activities.InOutArgument,System.String)">
      <summary>Creates a new <see cref="T:System.Activities.InArgument" /> that references the specified target <see cref="T:System.Activities.InOutArgument" /> using the specified referenced argument name.</summary>
      <returns>A new in argument that references the specified target <see cref="T:System.Activities.InOutArgument" />.</returns>
      <param name="argumentToReference">The target in/out argument to reference.</param>
      <param name="referencedArgumentName">The name of the referenced argument.</param>
    </member>
    <member name="T:System.Activities.InArgument`1">
      <summary>A binding terminal that represents the flow of data into an activity.</summary>
      <typeparam name="T">The data type of the <see cref="T:System.Activities.InArgument`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.InArgument`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.InArgument`1" /> class using default values.</summary>
    </member>
    <member name="M:System.Activities.InArgument`1.#ctor(System.Activities.Activity{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.InArgument`1" /> class using the specified <see cref="T:System.Activities.Activity`1" />.</summary>
      <param name="expression">The value of the argument.</param>
    </member>
    <member name="M:System.Activities.InArgument`1.#ctor(System.Activities.DelegateArgument)">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.InArgument`1" /> class using the specified <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <param name="delegateArgument">The value of the argument.</param>
    </member>
    <member name="M:System.Activities.InArgument`1.#ctor(System.Activities.Variable)">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.InArgument`1" /> class using the specified <see cref="T:System.Activities.Variable" />.</summary>
      <param name="variable">The data that is passed through this argument.</param>
    </member>
    <member name="M:System.Activities.InArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.InArgument`1" /> class using the specified expression.</summary>
      <param name="expression">The value of the argument.</param>
    </member>
    <member name="M:System.Activities.InArgument`1.#ctor(`0)">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.InArgument`1" /> class using the specified value.</summary>
      <param name="constValue">The value of the argument.</param>
    </member>
    <member name="P:System.Activities.InArgument`1.Expression">
      <summary>Gets a <see cref="T:System.Activities.Activity`1" /> that represents the value of this <see cref="T:System.Activities.InArgument`1" />.</summary>
      <returns>A workflow element that represents the value of the argument.</returns>
    </member>
    <member name="M:System.Activities.InArgument`1.FromDelegateArgument(System.Activities.DelegateArgument)">
      <summary>Initializes and returns a new <see cref="T:System.Activities.InArgument`1" /> using the specified <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <returns>The new argument.</returns>
      <param name="delegateArgument">The value of the argument.</param>
    </member>
    <member name="M:System.Activities.InArgument`1.FromExpression(System.Activities.Activity{`0})">
      <summary>Initializes and returns a new <see cref="T:System.Activities.InArgument`1" /> using the specified <see cref="T:System.Activities.Activity`1" />.</summary>
      <returns>The new argument.</returns>
      <param name="expression">The value of the argument.</param>
    </member>
    <member name="M:System.Activities.InArgument`1.FromValue(`0)">
      <summary>Initializes and returns a new <see cref="T:System.Activities.InArgument`1" /> using the specified value.</summary>
      <returns>The new argument.</returns>
      <param name="constValue">The value of the argument,</param>
    </member>
    <member name="M:System.Activities.InArgument`1.FromVariable(System.Activities.Variable)">
      <summary>Initializes and returns a new <see cref="T:System.Activities.InArgument`1" /> using the specified <see cref="T:System.Activities.Variable" />.</summary>
      <returns>The new argument.</returns>
      <param name="variable">The value of the argument.</param>
    </member>
    <member name="M:System.Activities.InArgument`1.Get(System.Activities.ActivityContext)">
      <summary>Gets the value of the <see cref="T:System.Activities.InArgument`1" /> using the specified activity context.</summary>
      <returns>The value of the argument.</returns>
      <param name="context">The current activity context.</param>
    </member>
    <member name="M:System.Activities.InArgument`1.op_Implicit(System.Activities.Activity{`0})~System.Activities.InArgument{`0}">
      <summary>Initializes and returns a new <see cref="T:System.Activities.InArgument`1" /> using the specified <see cref="T:System.Activities.Activity`1" />.</summary>
      <returns>The new argument.</returns>
      <param name="expression">The value of the argument.</param>
    </member>
    <member name="M:System.Activities.InArgument`1.op_Implicit(System.Activities.DelegateArgument)~System.Activities.InArgument{`0}">
      <summary>Initializes and returns a new <see cref="T:System.Activities.InArgument`1" /> using the specified <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <returns>The new argument.</returns>
      <param name="delegateArgument">The value of the argument.</param>
    </member>
    <member name="M:System.Activities.InArgument`1.op_Implicit(System.Activities.Variable)~System.Activities.InArgument{`0}">
      <summary>Initializes and returns a new <see cref="T:System.Activities.InArgument`1" /> using the specified <see cref="T:System.Activities.Variable" />.</summary>
      <returns>The new argument.</returns>
      <param name="variable">The value of the argument,</param>
    </member>
    <member name="M:System.Activities.InArgument`1.op_Implicit(`0)~System.Activities.InArgument{`0}">
      <summary>Initializes and returns a new <see cref="T:System.Activities.InArgument`1" /> using the specified value.</summary>
      <returns>The new argument.</returns>
      <param name="constValue">The value of the argument.</param>
    </member>
    <member name="M:System.Activities.InArgument`1.Set(System.Activities.ActivityContext,`0)">
      <summary>Sets the value of the <see cref="T:System.Activities.InArgument`1" /> using the specified value.</summary>
      <param name="context">The current activity context.</param>
      <param name="value">The new value.</param>
    </member>
    <member name="T:System.Activities.InOutArgument">
      <summary>The abstract base class that represents a binding terminal that supports the flow of data into and out of an activity.</summary>
    </member>
    <member name="M:System.Activities.InOutArgument.CreateReference(System.Activities.InOutArgument,System.String)">
      <summary>Creates a new <see cref="T:System.Activities.InOutArgument" /> that references the specified target <see cref="T:System.Activities.InOutArgument" /> using the specified referenced argument name.</summary>
      <returns>A new in/out argument that references the specified target <see cref="T:System.Activities.InOutArgument" />.</returns>
      <param name="argumentToReference">The target in/out argument to reference.</param>
      <param name="referencedArgumentName">The name of the referenced argument.</param>
    </member>
    <member name="T:System.Activities.InOutArgument`1">
      <summary>A binding terminal that represents the flow of data into and out of an activity.</summary>
      <typeparam name="T">The data type of the <see cref="T:System.Activities.InOutArgument`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.InOutArgument`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.InOutArgument`1" /> class using default values.</summary>
    </member>
    <member name="M:System.Activities.InOutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.InOutArgument`1" /> class using the specified <see cref="T:System.Activities.Activity`1" />.</summary>
      <param name="expression">The value of the argument.</param>
    </member>
    <member name="M:System.Activities.InOutArgument`1.#ctor(System.Activities.Variable)">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.InOutArgument`1" /> class using the specified <see cref="T:System.Activities.Variable" />.</summary>
      <param name="variable">The value of the argument.</param>
    </member>
    <member name="M:System.Activities.InOutArgument`1.#ctor(System.Activities.Variable{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.InOutArgument`1" /> class using the specified <see cref="T:System.Activities.Variable`1" />.</summary>
      <param name="variable">The value of the argument.</param>
    </member>
    <member name="M:System.Activities.InOutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.InOutArgument`1" /> class using the specified expression.</summary>
      <param name="expression">The value of the argument.</param>
    </member>
    <member name="P:System.Activities.InOutArgument`1.Expression">
      <summary>Gets an <see cref="T:System.Activities.Activity`1" /> that represents the value of this <see cref="T:System.Activities.InOutArgument`1" />.</summary>
      <returns>The value of the argument.</returns>
    </member>
    <member name="M:System.Activities.InOutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})">
      <summary>Initializes and returns a new <see cref="T:System.Activities.InOutArgument`1" /> constructed using the specified <see cref="T:System.Activities.Activity`1" />.</summary>
      <returns>The new argument.</returns>
      <param name="expression">The value of the argument.</param>
    </member>
    <member name="M:System.Activities.InOutArgument`1.FromVariable(System.Activities.Variable{`0})">
      <summary>Initializes and returns a new <see cref="T:System.Activities.InOutArgument`1" /> constructed by using the specified <see cref="T:System.Activities.Variable`1" />.</summary>
      <returns>The new argument.</returns>
      <param name="variable">The value of the argument.</param>
    </member>
    <member name="M:System.Activities.InOutArgument`1.Get(System.Activities.ActivityContext)">
      <summary>Gets the value of the <see cref="T:System.Activities.InOutArgument`1" /> using the specified <see cref="T:System.Activities.ActivityContext" />.</summary>
      <returns>The value of the argument.</returns>
      <param name="context">The activity context that contains the value of the argument.</param>
    </member>
    <member name="M:System.Activities.InOutArgument`1.GetLocation(System.Activities.ActivityContext)">
      <summary>Gets the location of the value for the <see cref="T:System.Activities.InOutArgument`1" />.</summary>
      <returns>A reference to the location where the value of the argument is stored.</returns>
      <param name="context">The activity context that contains the location of the argument value.</param>
    </member>
    <member name="M:System.Activities.InOutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{`0}})~System.Activities.InOutArgument{`0}">
      <summary>Initializes and returns a new <see cref="T:System.Activities.InOutArgument`1" /> constructed using the specified <see cref="T:System.Activities.Activity`1" />.</summary>
      <returns>The new argument.</returns>
      <param name="expression">The value of the argument.</param>
    </member>
    <member name="M:System.Activities.InOutArgument`1.op_Implicit(System.Activities.Variable{`0})~System.Activities.InOutArgument{`0}">
      <summary>Initializes and returns a new <see cref="T:System.Activities.InOutArgument`1" /> constructed using the specified <see cref="T:System.Activities.Variable`1" />.</summary>
      <returns>The new argument.</returns>
      <param name="variable">The value of the argument.</param>
    </member>
    <member name="M:System.Activities.InOutArgument`1.Set(System.Activities.ActivityContext,`0)">
      <summary>Sets the value of the argument using the specified value.</summary>
      <param name="context">The current activity context.</param>
      <param name="value">The new value.</param>
    </member>
    <member name="T:System.Activities.InvalidWorkflowException">
      <summary>Handles exceptions that occur when a workflow is not valid. </summary>
    </member>
    <member name="M:System.Activities.InvalidWorkflowException.#ctor">
      <summary>Create a new instance of the <see cref="T:System.Activities.InvalidWorkflowException" /> class with default values.</summary>
    </member>
    <member name="M:System.Activities.InvalidWorkflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Create a new instance of the <see cref="T:System.Activities.InvalidWorkflowException" /> class with the specified serialization information and streaming context.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains the serialized object data about the exception being thrown.</param>
      <param name="context">The source and destination of the serialized stream.</param>
    </member>
    <member name="M:System.Activities.InvalidWorkflowException.#ctor(System.String)">
      <summary>Create a new instance of the <see cref="T:System.Activities.InvalidWorkflowException" /> class with the specified invalid workflow exception description.</summary>
      <param name="message">A string description of the exception.</param>
    </member>
    <member name="M:System.Activities.InvalidWorkflowException.#ctor(System.String,System.Exception)">
      <summary>Create a new instance of the <see cref="T:System.Activities.InvalidWorkflowException" /> class with the specified invalid workflow exception description and inner exception.</summary>
      <param name="message">A description of the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="T:System.Activities.InvokeCompletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Activities.WorkflowInvoker.InvokeCompleted" /> event.</summary>
    </member>
    <member name="P:System.Activities.InvokeCompletedEventArgs.Outputs">
      <summary>Gets an <see cref="T:System.Collections.Generic.IDictionary`2" /> of the root activity’s output argument values from the completed workflow.</summary>
      <returns>A dictionary of the root activity’s output argument values from the completed workflow.</returns>
    </member>
    <member name="T:System.Activities.IPropertyRegistrationCallback">
      <summary>Allows a workflow execution property to provide custom registration and un-registration logic.</summary>
    </member>
    <member name="M:System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)">
      <summary>Called when a workflow execution property is added through <see cref="Overload:System.Activities.ExecutionProperties.Add" />. This provides a validation hook for the property.</summary>
      <param name="context">A <see cref="T:System.Activities.RegistrationContext" /> that references the collection of execution properties to which the property is being registered.</param>
    </member>
    <member name="M:System.Activities.IPropertyRegistrationCallback.Unregister(System.Activities.RegistrationContext)">
      <summary>Called when a workflow execution property goes out of scope.</summary>
      <param name="context">A <see cref="T:System.Activities.RegistrationContext" /> that references the collection of execution properties to which the property belongs.</param>
    </member>
    <member name="T:System.Activities.Location">
      <summary>Provides a reference to a value used by an <see cref="T:System.Activities.Argument" /> or <see cref="T:System.Activities.Variable" />.</summary>
    </member>
    <member name="M:System.Activities.Location.#ctor">
      <summary>Called by derived class constructors to initialize the object.</summary>
    </member>
    <member name="P:System.Activities.Location.LocationType">
      <summary>When overridden in a derived class, gets the type of the referenced object.</summary>
      <returns>The type of the referenced object.</returns>
    </member>
    <member name="P:System.Activities.Location.Value">
      <summary>Gets or sets the value of the referenced object.</summary>
      <returns>The value of the object.</returns>
    </member>
    <member name="P:System.Activities.Location.ValueCore">
      <summary>When overridden in a derived class, gets or sets the value of the object referenced by the location.</summary>
      <returns>The value of the object.</returns>
    </member>
    <member name="T:System.Activities.Location`1">
      <summary>Provides a typed reference to a value used by an <see cref="T:System.Activities.Argument" /> or <see cref="T:System.Activities.Variable" />.</summary>
      <typeparam name="T">The type of the value.</typeparam>
    </member>
    <member name="M:System.Activities.Location`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Location`1" /> class.</summary>
    </member>
    <member name="P:System.Activities.Location`1.LocationType">
      <summary>Gets the type of the value referenced by the location.</summary>
      <returns>The type of the value.</returns>
    </member>
    <member name="M:System.Activities.Location`1.ToString">
      <summary>Returns the string representation of the value of the referenced object.</summary>
      <returns>The value of the referenced object.</returns>
    </member>
    <member name="P:System.Activities.Location`1.Value">
      <summary>Gets or sets the value of the referenced object.</summary>
      <returns>The value of the referenced object.</returns>
    </member>
    <member name="P:System.Activities.Location`1.ValueCore">
      <summary>Gets or sets the value of the referenced object.</summary>
      <returns>The value of the referenced object.</returns>
    </member>
    <member name="T:System.Activities.LocationReference">
      <summary>Provides a mechanism by which a <see cref="T:System.Activities.Location" /> can be resolved at runtime. </summary>
    </member>
    <member name="M:System.Activities.LocationReference.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.LocationReference" /> class.</summary>
    </member>
    <member name="M:System.Activities.LocationReference.GetLocation(System.Activities.ActivityContext)">
      <summary>When implemented in a derived class, extracts the location for a <see cref="T:System.Activities.LocationReference" /> from an <see cref="T:System.Activities.ActivityContext" /> object.</summary>
      <returns>The location of a variable, argument, or delegate argument value.</returns>
      <param name="context">The information about the activity execution environment, including values for variables, arguments, and delegate arguments associated with that environment.</param>
    </member>
    <member name="P:System.Activities.LocationReference.Name">
      <summary>Gets or sets the name of the <see cref="T:System.Activities.LocationReference" />.</summary>
      <returns>The name of the <see cref="T:System.Activities.LocationReference" />.</returns>
    </member>
    <member name="P:System.Activities.LocationReference.NameCore">
      <summary>When implemented by a derived class, gets or sets the culturally localized version of the name of the <see cref="T:System.Activities.LocationReference" />.</summary>
      <returns>The localized version of the name of the <see cref="T:System.Activities.LocationReference" />.</returns>
    </member>
    <member name="P:System.Activities.LocationReference.Type">
      <summary>Gets or sets the type of the <see cref="T:System.Activities.LocationReference" />.</summary>
      <returns>The type of the <see cref="T:System.Activities.LocationReference" />.</returns>
    </member>
    <member name="P:System.Activities.LocationReference.TypeCore">
      <summary>When implemented in a derived class, gets or sets the culturally localized version of the type of the <see cref="T:System.Activities.LocationReference" />.</summary>
      <returns>The localized version of the type of the <see cref="T:System.Activities.LocationReference" />.</returns>
    </member>
    <member name="T:System.Activities.LocationReferenceEnvironment">
      <summary>Provides a representation of the environment of variables and arguments that is available to an activity at runtime.</summary>
    </member>
    <member name="M:System.Activities.LocationReferenceEnvironment.#ctor">
      <summary>Called by derived class constructors to initialize the object. </summary>
    </member>
    <member name="M:System.Activities.LocationReferenceEnvironment.GetLocationReferences">
      <summary>When overridden in a derived class, returns a collection of <see cref="T:System.Activities.LocationReference" /> objects in the current scope.</summary>
      <returns>A collection of location reference objects in the current scope.</returns>
    </member>
    <member name="M:System.Activities.LocationReferenceEnvironment.IsVisible(System.Activities.LocationReference)">
      <summary>When overridden in a derived class, determines whether the specified <see cref="T:System.Activities.LocationReference" /> is visible in the current scope.</summary>
      <returns>true if the <see cref="T:System.Activities.LocationReference" /> is visible in the current scope; otherwise, false.</returns>
      <param name="locationReference">The location to evaluate.</param>
    </member>
    <member name="P:System.Activities.LocationReferenceEnvironment.Parent">
      <summary>Gets or sets the containing <see cref="T:System.Activities.LocationReferenceEnvironment" />.</summary>
      <returns>The containing <see cref="T:System.Activities.LocationReferenceEnvironment" />.</returns>
    </member>
    <member name="P:System.Activities.LocationReferenceEnvironment.Root">
      <summary>Gets the activity that determines the scoping rules for this environment.</summary>
      <returns>The activity that determines the scoping rules for this environment.</returns>
    </member>
    <member name="M:System.Activities.LocationReferenceEnvironment.TryGetLocationReference(System.String,System.Activities.LocationReference@)">
      <summary>When overridden in a derived class, attempts to get the specified <see cref="T:System.Activities.LocationReference" />.</summary>
      <returns>true if a <see cref="T:System.Activities.LocationReference" /> with the specified name is present; otherwise, false.</returns>
      <param name="name">The name of the <see cref="T:System.Activities.LocationReference" /> to retrieve.</param>
      <param name="result">When this method returns true, <paramref name="result" /> contains the <see cref="T:System.Activities.LocationReference" /> with the specified name; otherwise, null. This parameter is passed uninitialized.</param>
    </member>
    <member name="T:System.Activities.NativeActivity">
      <summary>Abstract base class for custom activities that implement execution logic using the <see cref="M:System.Activities.NativeActivity.Execute(System.Activities.ActivityExecutionContext)" /> method, which has full access to the runtime’s features.</summary>
    </member>
    <member name="M:System.Activities.NativeActivity.#ctor">
      <summary>When implemented in a derived class, creates a new instance of the derived class.</summary>
    </member>
    <member name="M:System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)">
      <summary>When implemented in a derived class, takes actions in response to the activity being aborted.</summary>
      <param name="context">The execution context in which the activity executes.</param>
    </member>
    <member name="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)">
      <summary>Not implemented. Use the <see cref="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)" /> method instead.</summary>
      <param name="metadata">Not implemented.</param>
    </member>
    <member name="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)">
      <summary>Creates and validates a description of the activity’s arguments, variables, child activities, and activity delegates.</summary>
      <param name="metadata">The activity’s metadata that encapsulates the activity’s arguments, variables, child activities, and activity delegates.</param>
    </member>
    <member name="M:System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)">
      <summary>When implemented in a derived class, runs logic to cause graceful early completion of the activity.</summary>
      <param name="context">The execution context in which the activity executes.</param>
    </member>
    <member name="P:System.Activities.NativeActivity.CanInduceIdle">
      <summary>Gets or sets a value that indicates whether the activity can cause the workflow to become idle.</summary>
      <returns>true if the activity can cause the workflow to become idle. This value is false by default.</returns>
    </member>
    <member name="M:System.Activities.NativeActivity.Execute(System.Activities.NativeActivityContext)">
      <summary>When implemented in a derived class, runs the activity’s execution logic.</summary>
      <param name="context">The execution context in which the activity executes.</param>
    </member>
    <member name="P:System.Activities.NativeActivity.Implementation">
      <summary>The execution logic of the activity.</summary>
      <returns>The execution logic.</returns>
    </member>
    <member name="T:System.Activities.NativeActivity`1">
      <summary>Abstract base class for custom activities that implement execution logic using the <see cref="M:System.Activities.NativeActivity`1.Execute(System.Activities.ActivityExecutionContext)" /> method, that has full access to the runtime’s features.</summary>
      <typeparam name="TResult">The result returned by the activity.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivity`1.#ctor">
      <summary>When implemented in a derived class, creates a new instance of the derived class.</summary>
    </member>
    <member name="M:System.Activities.NativeActivity`1.Abort(System.Activities.NativeActivityAbortContext)">
      <summary>When implemented in a derived class, takes actions in response to the activity being aborted.</summary>
      <param name="context">The execution context in which the activity executes.</param>
    </member>
    <member name="M:System.Activities.NativeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)">
      <summary>Not implemented. Use <see cref="M:System.Activities.NativeActivity`1.CacheMetadata(System.Activities.NativeActivityMetadata)" /> instead.</summary>
      <param name="metadata">Not implemented.</param>
    </member>
    <member name="M:System.Activities.NativeActivity`1.CacheMetadata(System.Activities.NativeActivityMetadata)">
      <summary>Creates and validates a description of the activity’s arguments, variables, child activities, and activity delegates.</summary>
      <param name="metadata">The activity’s metadata that encapsulates the activity’s arguments, variables, child activities, and activity delegates.</param>
    </member>
    <member name="M:System.Activities.NativeActivity`1.Cancel(System.Activities.NativeActivityContext)">
      <summary>When implemented in a derived class, runs logic to cause graceful early completion of the activity.</summary>
      <param name="context">The execution context in which the activity executes.</param>
    </member>
    <member name="P:System.Activities.NativeActivity`1.CanInduceIdle">
      <summary>Gets or sets a value that indicates whether the activity can cause the workflow to become idle.</summary>
      <returns>true if the activity can cause the workflow to become idle, otherwise false. This value is false by default.</returns>
    </member>
    <member name="M:System.Activities.NativeActivity`1.Execute(System.Activities.NativeActivityContext)">
      <summary>When implemented in a derived class, runs the activity’s execution logic.</summary>
      <param name="context">The execution context in which the activity executes.</param>
    </member>
    <member name="P:System.Activities.NativeActivity`1.Implementation">
      <summary>The execution logic of the activity.</summary>
      <returns>The execution logic.</returns>
    </member>
    <member name="T:System.Activities.NativeActivityAbortContext">
      <summary>Represents the execution environment of an activity that is being aborted.</summary>
    </member>
    <member name="P:System.Activities.NativeActivityAbortContext.Reason">
      <summary>Gets an <see cref="T:System.Exception" /> that contains the reason for the activity being aborted.</summary>
      <returns>An exception that contains the reason for the activity being aborted.</returns>
    </member>
    <member name="T:System.Activities.NativeActivityContext">
      <summary>Provides the environmental execution context for a workflow custom activity. </summary>
    </member>
    <member name="M:System.Activities.NativeActivityContext.Abort">
      <summary>Aborts the current workflow instance during runtime.</summary>
    </member>
    <member name="M:System.Activities.NativeActivityContext.Abort(System.Exception)">
      <summary>Aborts the current workflow instance during runtime for the specified reason.</summary>
      <param name="reason">The error that caused the workflow to abort.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.AbortChildInstance(System.Activities.ActivityInstance)">
      <summary>Aborts the specified instance of a <see cref="T:System.Activities.NativeActivity" /> child activity.</summary>
      <param name="activity">A child of the currently executing <see cref="T:System.Activities.NativeActivity" />.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.AbortChildInstance(System.Activities.ActivityInstance,System.Exception)">
      <summary>Aborts the specified instance of a <see cref="T:System.Activities.NativeActivity" /> child activity for the specified reason.</summary>
      <param name="activity">A child of the currently executing <see cref="T:System.Activities.NativeActivity" />.</param>
      <param name="reason">The error that caused the child activity to abort.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.CancelChild(System.Activities.ActivityInstance)">
      <summary>Causes an early completion of the specified instance of a <see cref="T:System.Activities.NativeActivity" /> child activity.</summary>
      <param name="activityInstance">A child of the currently executing <see cref="T:System.Activities.NativeActivity" />.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.CancelChildren">
      <summary>Causes an early completion of all the child activities of an executing <see cref="T:System.Activities.NativeActivity" />.</summary>
    </member>
    <member name="M:System.Activities.NativeActivityContext.CreateBookmark">
      <summary>Creates a point at which a <see cref="T:System.Activities.NativeActivity" /> can passively wait to be resumed.</summary>
      <returns>A bookmark.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.CreateBookmark(System.Activities.BookmarkCallback)">
      <summary>Creates the point at which a <see cref="T:System.Activities.NativeActivity" /> can passively wait to be resumed and schedules the specified method to execute when notification of the resume operation completes.</summary>
      <returns>The callback method.</returns>
      <param name="callback">The method to be called when a notification signals resumption of the <see cref="T:System.Activities.NativeActivity" />.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.CreateBookmark(System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)">
      <summary>Creates the point at which a <see cref="T:System.Activities.NativeActivity" /> can passively wait to be resumed, with the specified method to execute when notification of the resume operation completes and with the specified option that governs how the bookmark is used during the execution of the current <see cref="T:System.Activities.NativeActivity" />.</summary>
      <returns>A bookmark that includes the callback method and the bookmark execution option.</returns>
      <param name="callback">The method to be called when a notification signals resumption of the <see cref="T:System.Activities.NativeActivity" />.</param>
      <param name="options">An enumerated setting that governs how the bookmark operates in relation to other threads during the execution of the current <see cref="T:System.Activities.NativeActivity" />.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.CreateBookmark(System.String)">
      <summary>Creates the point, with the specified name, at which a <see cref="T:System.Activities.NativeActivity" /> can passively wait to be resumed.</summary>
      <returns>A bookmark that includes the name of the bookmark.</returns>
      <param name="name">The name of the bookmark.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback)">
      <summary>Creates the point at which a <see cref="T:System.Activities.NativeActivity" /> can passively wait to be resumed, with the specified name and with the specified method to execute when notification of the resume operation completes.</summary>
      <returns>A bookmark that includes the name of the bookmark and the callback method.</returns>
      <param name="name">The name of the bookmark.</param>
      <param name="callback">The method to be called when a notification signals resumption of the <see cref="T:System.Activities.NativeActivity" />.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)">
      <summary>Creates the point at which a <see cref="T:System.Activities.NativeActivity" /> can passively wait to be resumed with the specified name, the specified method to execute when notification of the resume operation completes, and the specified option that governs how the bookmark is used during the execution of the current <see cref="T:System.Activities.NativeActivity" />.</summary>
      <returns>A bookmark that includes the name of the bookmark, the callback method, and the bookmark execution option.</returns>
      <param name="name">The name of the bookmark.</param>
      <param name="callback">The method to be called when a notification signals resumption of the <see cref="T:System.Activities.NativeActivity" />.</param>
      <param name="options">The bookmark options that govern how the bookmark is used during the execution of the current <see cref="T:System.Activities.NativeActivity" />.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope)">
      <summary>Creates the point at which a <see cref="T:System.Activities.NativeActivity" /> can passively wait to be resumed with the specified name, the specified method to execute when notification of the resume operation completes, and the specified scope of the bookmark.</summary>
      <returns>A bookmark that includes the name of the bookmark, the callback method, and the scope of the bookmark.</returns>
      <param name="name">The name of the bookmark.</param>
      <param name="callback">The method to be called when a notification signals resumption of the <see cref="T:System.Activities.NativeActivity" />.</param>
      <param name="scope">An identifier applied to a group of bookmarks that operate under the same protocol during a workflow runtime.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope,System.Activities.BookmarkOptions)">
      <summary>Creates the point at which a <see cref="T:System.Activities.NativeActivity" /> can passively wait to be resumed with the specified name, the specified method to execute when notification of the resume operation completes, the specified scope of the bookmark, and the specified option that governs how the bookmark is used during the execution of the current <see cref="T:System.Activities.NativeActivity" />.</summary>
      <returns>A bookmark that includes the name of the bookmark, the callback method, the scope of the bookmark, and the bookmark execution option.</returns>
      <param name="name">The name of the bookmark.</param>
      <param name="callback">The method to be called when a notification signals resumption of the <see cref="T:System.Activities.NativeActivity" />.</param>
      <param name="scope">An identifier applied to a group of bookmarks that operate under the same protocol during a workflow runtime.</param>
      <param name="options">The bookmark options that governs how the bookmark is used during the execution of the current <see cref="T:System.Activities.NativeActivity" />.</param>
    </member>
    <member name="P:System.Activities.NativeActivityContext.DefaultBookmarkScope">
      <summary>Gets the bookmark scope associated with the root of the workflow.</summary>
      <returns>A unique GUID identifier.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.GetChildren">
      <summary>Returns a collection of the child activities for the current <see cref="T:System.Activities.NativeActivity" />.</summary>
      <returns>A generic read-only collection of child <see cref="T:System.Activities.NativeActivity" /> objects.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.GetValue(System.Activities.Variable)">
      <summary>Returns the value of the specified variable in the current <see cref="T:System.Activities.NativeActivity" /> instance.</summary>
      <returns>The value of the specified variable.</returns>
      <param name="variable">The variable whose value is being retrieved during execution of the current <see cref="T:System.Activities.NativeActivity" /> instance.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.GetValue``1(System.Activities.Variable{``0})">
      <summary>Returns the value of the specified generic variable in the current <see cref="T:System.Activities.NativeActivity" /> instance.</summary>
      <returns>The value of the specified variable.</returns>
      <param name="variable">The generic variable whose value is being retrieved during execution of the current <see cref="T:System.Activities.NativeActivity" /> instance.</param>
      <typeparam name="T">The type of the variable whose value is being retrieved.</typeparam>
    </member>
    <member name="P:System.Activities.NativeActivityContext.IsCancellationRequested">
      <summary>Gets or sets a value that indicates whether the currently executing <see cref="T:System.Activities.NativeActivity" /> instance is to be canceled.</summary>
      <returns>true if the currently executing <see cref="T:System.Activities.NativeActivity" /> instance is to be canceled; otherwise, false.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.MarkCanceled">
      <summary>Designates the currently executing <see cref="T:System.Activities.NativeActivity" /> instance as canceled.</summary>
    </member>
    <member name="P:System.Activities.NativeActivityContext.Properties">
      <summary>Gets an object that handles properties for execution of the current <see cref="T:System.Activities.NativeActivityContext" />.</summary>
      <returns>An object that handles execution properties.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.RemoveAllBookmarks">
      <summary>Removes all the bookmarks associated with the currently executing <see cref="T:System.Activities.NativeActivity" /> instance.</summary>
    </member>
    <member name="M:System.Activities.NativeActivityContext.RemoveBookmark(System.Activities.Bookmark)">
      <summary>Removes the specified bookmark from the currently executing <see cref="T:System.Activities.NativeActivity" /> instance.</summary>
      <returns>true if the bookmark was removed; otherwise, false.</returns>
      <param name="bookmark">A point at which a <see cref="T:System.Activities.NativeActivity" /> instance can passively wait to be resumed.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.RemoveBookmark(System.String)">
      <summary>Removes the bookmark with the specified name.</summary>
      <returns>true if the bookmark was removed; otherwise, false.</returns>
      <param name="name">The name of the bookmark.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.RemoveBookmark(System.String,System.Activities.BookmarkScope)">
      <summary>Removes the bookmark with the specified name and the specified bookmark scope.</summary>
      <returns>true if the bookmark was removed; otherwise, false.</returns>
      <param name="name">The name of the bookmark.</param>
      <param name="scope">The unique GUID identifier for a group of <see cref="T:System.Activities.Bookmark" /> objects that are categorized as operating under the same protocol.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ResumeBookmark(System.Activities.Bookmark,System.Object)">
      <summary>Resumes <see cref="T:System.Activities.NativeActivity" /> execution at the specified bookmark.</summary>
      <returns>The outcome of the attempt to resume <see cref="T:System.Activities.NativeActivity" /> operation at the point of the bookmark.</returns>
      <param name="bookmark">A point at which a <see cref="T:System.Activities.NativeActivity" /> can passively wait to be resumed.</param>
      <param name="value">The information related to the resumption of a bookmark.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction(System.Activities.ActivityAction,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityAction" /> that has no parameters, and that bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityAction" />.</summary>
      <returns>A new instance of an activity action.</returns>
      <param name="activityAction">An action that executes when a specific event occurs in the parent activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityAction" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityAction" />.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``1(System.Activities.ActivityAction{``0},``0,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityAction`1" /> that has one parameter for an in argument and bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityAction`1" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityAction">An action that executes when a specific event occurs in the parent activity.</param>
      <param name="argument">Data sent into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityAction`1" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityAction`1" />.</param>
      <typeparam name="T">An argument that carries data into an activity.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityAction`10" /> that has ten parameters for in arguments and that bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityAction`10" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityAction">An action that executes when a specific event occurs in the parent activity.</param>
      <param name="argument1">An argument that carries data into an activity.</param>
      <param name="argument2">An argument that carries data into an activity.</param>
      <param name="argument3">An argument that carries data into an activity.</param>
      <param name="argument4">An argument that carries data into an activity.</param>
      <param name="argument5">An argument that carries data into an activity.</param>
      <param name="argument6">An argument that carries data into an activity.</param>
      <param name="argument7">An argument that carries data into an activity.</param>
      <param name="argument8">An argument that carries data into an activity.</param>
      <param name="argument9">An argument that carries data into an activity.</param>
      <param name="argument10">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityAction`10" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityAction`10" />.</param>
      <typeparam name="T1">The data that is carried into an activity.</typeparam>
      <typeparam name="T2">The data that is carried into an activity.</typeparam>
      <typeparam name="T3">The data that is carried into an activity.</typeparam>
      <typeparam name="T4">The data that is carried into an activity.</typeparam>
      <typeparam name="T5">The data that is carried into an activity.</typeparam>
      <typeparam name="T6">The data that is carried into an activity.</typeparam>
      <typeparam name="T7">The data that is carried into an activity.</typeparam>
      <typeparam name="T8">The data that is carried into an activity.</typeparam>
      <typeparam name="T9">The data that is carried into an activity.</typeparam>
      <typeparam name="T10">The data that is carried into an activity.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityAction`11" /> that has eleven parameters for in arguments, and that bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityAction`11" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityAction">An action that executes when a specific event occurs in the parent activity.</param>
      <param name="argument1">An argument that carries data into an activity.</param>
      <param name="argument2">An argument that carries data into an activity.</param>
      <param name="argument3">An argument that carries data into an activity.</param>
      <param name="argument4">An argument that carries data into an activity.</param>
      <param name="argument5">An argument that carries data into an activity.</param>
      <param name="argument6">An argument that carries data into an activity.</param>
      <param name="argument7">An argument that carries data into an activity.</param>
      <param name="argument8">An argument that carries data into an activity.</param>
      <param name="argument9">An argument that carries data into an activity.</param>
      <param name="argument10">An argument that carries data into an activity.</param>
      <param name="argument11">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityAction`11" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityAction`11" />.</param>
      <typeparam name="T1">The data that is carried into an activity.</typeparam>
      <typeparam name="T2">The data that is carried into an activity.</typeparam>
      <typeparam name="T3">The data that is carried into an activity.</typeparam>
      <typeparam name="T4">The data that is carried into an activity.</typeparam>
      <typeparam name="T5">The data that is carried into an activity.</typeparam>
      <typeparam name="T6">The data that is carried into an activity.</typeparam>
      <typeparam name="T7">The data that is carried into an activity.</typeparam>
      <typeparam name="T8">The data that is carried into an activity.</typeparam>
      <typeparam name="T9">The data that is carried into an activity.</typeparam>
      <typeparam name="T10">The data that is carried into an activity.</typeparam>
      <typeparam name="T11">The data that is carried into an activity.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityAction`12" /> that has twelve parameters for in arguments and that bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityAction`12" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityAction">An action that executes when a specific event occurs in the parent activity.</param>
      <param name="argument1">An argument that carries data into an activity.</param>
      <param name="argument2">An argument that carries data into an activity.</param>
      <param name="argument3">An argument that carries data into an activity.</param>
      <param name="argument4">An argument that carries data into an activity.</param>
      <param name="argument5">An argument that carries data into an activity.</param>
      <param name="argument6">An argument that carries data into an activity.</param>
      <param name="argument7">An argument that carries data into an activity.</param>
      <param name="argument8">An argument that carries data into an activity.</param>
      <param name="argument9">An argument that carries data into an activity.</param>
      <param name="argument10">An argument that carries data into an activity.</param>
      <param name="argument11">An argument that carries data into an activity.</param>
      <param name="argument12">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityAction`12" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityAction`12" />.</param>
      <typeparam name="T1">The data that is carried into an activity.</typeparam>
      <typeparam name="T2">The data that is carried into an activity.</typeparam>
      <typeparam name="T3">The data that is carried into an activity.</typeparam>
      <typeparam name="T4">The data that is carried into an activity.</typeparam>
      <typeparam name="T5">The data that is carried into an activity.</typeparam>
      <typeparam name="T6">The data that is carried into an activity.</typeparam>
      <typeparam name="T7">The data that is carried into an activity.</typeparam>
      <typeparam name="T8">The data that is carried into an activity.</typeparam>
      <typeparam name="T9">The data that is carried into an activity.</typeparam>
      <typeparam name="T10">The data that is carried into an activity.</typeparam>
      <typeparam name="T11">The data that is carried into an activity.</typeparam>
      <typeparam name="T12">The data that is carried into an activity.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityAction`13" /> that has thirteen parameters for in arguments and that bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityAction">An action that executes when a specific event occurs in the parent activity.</param>
      <param name="argument1">An argument that carries data into an activity.</param>
      <param name="argument2">An argument that carries data into an activity.</param>
      <param name="argument3">An argument that carries data into an activity.</param>
      <param name="argument4">An argument that carries data into an activity.</param>
      <param name="argument5">An argument that carries data into an activity.</param>
      <param name="argument6">An argument that carries data into an activity.</param>
      <param name="argument7">An argument that carries data into an activity.</param>
      <param name="argument8">An argument that carries data into an activity.</param>
      <param name="argument9">An argument that carries data into an activity.</param>
      <param name="argument10">An argument that carries data into an activity.</param>
      <param name="argument11">An argument that carries data into an activity.</param>
      <param name="argument12">An argument that carries data into an activity.</param>
      <param name="argument13">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityAction`13" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityAction`13" />.</param>
      <typeparam name="T1">The data that is carried into an activity.</typeparam>
      <typeparam name="T2">The data that is carried into an activity.</typeparam>
      <typeparam name="T3">The data that is carried into an activity.</typeparam>
      <typeparam name="T4">The data that is carried into an activity.</typeparam>
      <typeparam name="T5">The data that is carried into an activity.</typeparam>
      <typeparam name="T6">The data that is carried into an activity.</typeparam>
      <typeparam name="T7">The data that is carried into an activity.</typeparam>
      <typeparam name="T8">The data that is carried into an activity.</typeparam>
      <typeparam name="T9">The data that is carried into an activity.</typeparam>
      <typeparam name="T10">The data that is carried into an activity.</typeparam>
      <typeparam name="T11">The data that is carried into an activity.</typeparam>
      <typeparam name="T12">The data that is carried into an activity.</typeparam>
      <typeparam name="T13">The data that is carried into an activity.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityAction`14" /> that has fourteen parameters for in arguments and that bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityAction">An action that executes when a specific event occurs in the parent activity.</param>
      <param name="argument1">An argument that carries data into an activity.</param>
      <param name="argument2">An argument that carries data into an activity.</param>
      <param name="argument3">An argument that carries data into an activity.</param>
      <param name="argument4">An argument that carries data into an activity.</param>
      <param name="argument5">An argument that carries data into an activity.</param>
      <param name="argument6">An argument that carries data into an activity.</param>
      <param name="argument7">An argument that carries data into an activity.</param>
      <param name="argument8">An argument that carries data into an activity.</param>
      <param name="argument9">An argument that carries data into an activity.</param>
      <param name="argument10">An argument that carries data into an activity.</param>
      <param name="argument11">An argument that carries data into an activity.</param>
      <param name="argument12">An argument that carries data into an activity.</param>
      <param name="argument13">An argument that carries data into an activity.</param>
      <param name="argument14">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityAction`14" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityAction`14" />.</param>
      <typeparam name="T1">The data that is carried into an activity.</typeparam>
      <typeparam name="T2">The data that is carried into an activity.</typeparam>
      <typeparam name="T3">The data that is carried into an activity.</typeparam>
      <typeparam name="T4">The data that is carried into an activity.</typeparam>
      <typeparam name="T5">The data that is carried into an activity.</typeparam>
      <typeparam name="T6">The data that is carried into an activity.</typeparam>
      <typeparam name="T7">The data that is carried into an activity.</typeparam>
      <typeparam name="T8">The data that is carried into an activity.</typeparam>
      <typeparam name="T9">The data that is carried into an activity.</typeparam>
      <typeparam name="T10">The data that is carried into an activity.</typeparam>
      <typeparam name="T11">The data that is carried into an activity.</typeparam>
      <typeparam name="T12">The data that is carried into an activity.</typeparam>
      <typeparam name="T13">The data that is carried into an activity.</typeparam>
      <typeparam name="T14">The data that is carried into an activity.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityAction`15" /> that has fifteen parameters for in arguments and that bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityAction">An action that executes when a specific event occurs in the parent activity.</param>
      <param name="argument1">An argument that carries data into an activity.</param>
      <param name="argument2">An argument that carries data into an activity.</param>
      <param name="argument3">An argument that carries data into an activity.</param>
      <param name="argument4">An argument that carries data into an activity.</param>
      <param name="argument5">An argument that carries data into an activity.</param>
      <param name="argument6">An argument that carries data into an activity.</param>
      <param name="argument7">An argument that carries data into an activity.</param>
      <param name="argument8">An argument that carries data into an activity.</param>
      <param name="argument9">An argument that carries data into an activity.</param>
      <param name="argument10">An argument that carries data into an activity.</param>
      <param name="argument11">An argument that carries data into an activity.</param>
      <param name="argument12">An argument that carries data into an activity.</param>
      <param name="argument13">An argument that carries data into an activity.</param>
      <param name="argument14">An argument that carries data into an activity.</param>
      <param name="argument15">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityAction`15" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityAction`15" />.</param>
      <typeparam name="T1">The data that is carried into an activity.</typeparam>
      <typeparam name="T2">The data that is carried into an activity.</typeparam>
      <typeparam name="T3">The data that is carried into an activity.</typeparam>
      <typeparam name="T4">The data that is carried into an activity.</typeparam>
      <typeparam name="T5">The data that is carried into an activity.</typeparam>
      <typeparam name="T6">The data that is carried into an activity.</typeparam>
      <typeparam name="T7">The  data that is carried into an activity.</typeparam>
      <typeparam name="T8">The data that is carried into an activity.</typeparam>
      <typeparam name="T9">The data that is carried into an activity.</typeparam>
      <typeparam name="T10">The data that is carried into an activity.</typeparam>
      <typeparam name="T11">The data that is carried into an activity.</typeparam>
      <typeparam name="T12">The data that is carried into an activity.</typeparam>
      <typeparam name="T13">The data that is carried into an activity.</typeparam>
      <typeparam name="T14">The data that is carried into an activity.</typeparam>
      <typeparam name="T15">Generic parameter that represents data that is carried into an activity.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityAction`16" /> that has sixteen parameters for in arguments and that bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityAction">An action that executes when a specific event occurs in the parent activity.</param>
      <param name="argument1">An argument that carries data into an activity.</param>
      <param name="argument2">An argument that carries data into an activity.</param>
      <param name="argument3">An argument that carries data into an activity.</param>
      <param name="argument4">An argument that carries data into an activity.</param>
      <param name="argument5">An argument that carries data into an activity.</param>
      <param name="argument6">An argument that carries data into an activity.</param>
      <param name="argument7">An argument that carries data into an activity.</param>
      <param name="argument8">An argument that carries data into an activity.</param>
      <param name="argument9">An argument that carries data into an activity.</param>
      <param name="argument10">An argument that carries data into an activity.</param>
      <param name="argument11">An argument that carries data into an activity.</param>
      <param name="argument12">An argument that carries data into an activity.</param>
      <param name="argument13">An argument that carries data into an activity.</param>
      <param name="argument14">An argument that carries data into an activity.</param>
      <param name="argument15">An argument that carries data into an activity.</param>
      <param name="argument16">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityAction`16" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityAction`16" />.</param>
      <typeparam name="T1">The data that is carried into an activity.</typeparam>
      <typeparam name="T2">The data that is carried into an activity.</typeparam>
      <typeparam name="T3">The data that is carried into an activity.</typeparam>
      <typeparam name="T4">The data that is carried into an activity.</typeparam>
      <typeparam name="T5">The data that is carried into an activity.</typeparam>
      <typeparam name="T6">The data that is carried into an activity.</typeparam>
      <typeparam name="T7">The data that is carried into an activity.</typeparam>
      <typeparam name="T8">The data that is carried into an activity.</typeparam>
      <typeparam name="T9">The data that is carried into an activity.</typeparam>
      <typeparam name="T10">The data that is carried into an activity.</typeparam>
      <typeparam name="T11">The data that is carried into an activity.</typeparam>
      <typeparam name="T12">The data that is carried into an activity.</typeparam>
      <typeparam name="T13">The data that is carried into an activity.</typeparam>
      <typeparam name="T14">The data that is carried into an activity.</typeparam>
      <typeparam name="T15">The data that is carried into an activity.</typeparam>
      <typeparam name="T16">The data that is carried into an activity.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``2(System.Activities.ActivityAction{``0,``1},``0,``1,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityAction`2" /> that has two parameters for in arguments and that bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityAction`2" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityAction">An action that executes when a specific event occurs in the parent activity.</param>
      <param name="argument1">An argument that carries data into an activity.</param>
      <param name="argument2">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityAction`2" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityAction`2" />.</param>
      <typeparam name="T1">The data that is carried into an activity.</typeparam>
      <typeparam name="T2">The data that is carried into an activity.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``3(System.Activities.ActivityAction{``0,``1,``2},``0,``1,``2,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityAction`3" /> that has three parameters for in arguments and that bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityAction`3" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityAction">An action that executes when a specific event occurs in the parent activity.</param>
      <param name="argument1">An argument that carries data into an activity.</param>
      <param name="argument2">An argument that carries data into an activity.</param>
      <param name="argument3">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityAction`3" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityAction`3" />.</param>
      <typeparam name="T1">The data that is carried into an activity.</typeparam>
      <typeparam name="T2">The data that is carried into an activity.</typeparam>
      <typeparam name="T3">The data that is carried into an activity.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``4(System.Activities.ActivityAction{``0,``1,``2,``3},``0,``1,``2,``3,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityAction`4" /> that has four parameters for in arguments and that bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityAction`4" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityAction">An action that executes when a specific event occurs in the parent activity.</param>
      <param name="argument1">An argument that carries data into an activity.</param>
      <param name="argument2">An argument that carries data into an activity.</param>
      <param name="argument3">An argument that carries data into an activity.</param>
      <param name="argument4">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityAction`4" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityAction`4" />.</param>
      <typeparam name="T1">the data that is carried into an activity.</typeparam>
      <typeparam name="T2">The data that is carried into an activity.</typeparam>
      <typeparam name="T3">The data that is carried into an activity.</typeparam>
      <typeparam name="T4">The data that is carried into an activity.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``5(System.Activities.ActivityAction{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityAction`5" /> that has five parameters for in arguments and that bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityAction`5" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityAction">An action that executes when a specific event occurs in the parent activity.</param>
      <param name="argument1">An argument that carries data into an activity.</param>
      <param name="argument2">An argument that carries data into an activity.</param>
      <param name="argument3">An argument that carries data into an activity.</param>
      <param name="argument4">An argument that carries data into an activity.</param>
      <param name="argument5">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityAction`5" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityAction`5" />.</param>
      <typeparam name="T1">The data that is carried into an activity.</typeparam>
      <typeparam name="T2">The data that is carried into an activity.</typeparam>
      <typeparam name="T3">The data that is carried into an activity.</typeparam>
      <typeparam name="T4">The data that is carried into an activity.</typeparam>
      <typeparam name="T5">The data that is carried into an activity.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``6(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityAction`6" /> that has six parameters for in arguments and that bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityAction`6" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityAction">An action that executes when a specific event occurs in the parent activity.</param>
      <param name="argument1">An argument that carries data into an activity.</param>
      <param name="argument2">An argument that carries data into an activity.</param>
      <param name="argument3">An argument that carries data into an activity.</param>
      <param name="argument4">An argument that carries data into an activity.</param>
      <param name="argument5">An argument that carries data into an activity.</param>
      <param name="argument6">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityAction`6" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityAction`6" />.</param>
      <typeparam name="T1">The data that is carried into an activity.</typeparam>
      <typeparam name="T2">The data that is carried into an activity.</typeparam>
      <typeparam name="T3">The data that is carried into an activity.</typeparam>
      <typeparam name="T4">The data that is carried into an activity.</typeparam>
      <typeparam name="T5">The data that is carried into an activity.</typeparam>
      <typeparam name="T6">The data that is carried into an activity.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityAction`7" /> that has seven parameters for in arguments and that bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityAction`7" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityAction">An action that executes when a specific event occurs in the parent activity.</param>
      <param name="argument1">An argument that carries data into an activity.</param>
      <param name="argument2">An argument that carries data into an activity.</param>
      <param name="argument3">An argument that carries data into an activity.</param>
      <param name="argument4">An argument that carries data into an activity.</param>
      <param name="argument5">An argument that carries data into an activity.</param>
      <param name="argument6">An argument that carries data into an activity.</param>
      <param name="argument7">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityAction`7" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityAction`7" />.</param>
      <typeparam name="T1">The data that is carried into an activity.</typeparam>
      <typeparam name="T2">The data that is carried into an activity.</typeparam>
      <typeparam name="T3">The data that is carried into an activity.</typeparam>
      <typeparam name="T4">The data that is carried into an activity.</typeparam>
      <typeparam name="T5">The data that is carried into an activity.</typeparam>
      <typeparam name="T6">The data that is carried into an activity.</typeparam>
      <typeparam name="T7">The data that is carried into an activity.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityAction`8" /> that has eight parameters for in arguments and that bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityAction`8" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityAction">An action that executes when a specific event occurs in the parent activity.</param>
      <param name="argument1">An argument that carries data into an activity.</param>
      <param name="argument2">An argument that carries data into an activity.</param>
      <param name="argument3">An argument that carries data into an activity.</param>
      <param name="argument4">An argument that carries data into an activity.</param>
      <param name="argument5">An argument that carries data into an activity.</param>
      <param name="argument6">An argument that carries data into an activity.</param>
      <param name="argument7">An argument that carries data into an activity.</param>
      <param name="argument8">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityAction`8" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityAction`8" />.</param>
      <typeparam name="T1">The data that is carried into an activity.</typeparam>
      <typeparam name="T2">The data that is carried into an activity.</typeparam>
      <typeparam name="T3">The data that is carried into an activity.</typeparam>
      <typeparam name="T4">The data that is carried into an activity.</typeparam>
      <typeparam name="T5">The data that is carried into an activity.</typeparam>
      <typeparam name="T6">The data that is carried into an activity.</typeparam>
      <typeparam name="T7">The data that is carried into an activity.</typeparam>
      <typeparam name="T8">The data that is carried into an activity.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityAction`9" /> that has nine parameters for in arguments and that bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityAction`9" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityAction">An action that executes when a specific event occurs in the parent activity.</param>
      <param name="argument1">An argument that carries data into an activity.</param>
      <param name="argument2">An argument that carries data into an activity.</param>
      <param name="argument3">An argument that carries data into an activity.</param>
      <param name="argument4">An argument that carries data into an activity.</param>
      <param name="argument5">An argument that carries data into an activity.</param>
      <param name="argument6">An argument that carries data into an activity.</param>
      <param name="argument7">An argument that carries data into an activity.</param>
      <param name="argument8">An argument that carries data into an activity.</param>
      <param name="argument9">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityAction`9" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityAction`9" />.</param>
      <typeparam name="T1">The data that is carried into an activity.</typeparam>
      <typeparam name="T2">The data that is carried into an activity.</typeparam>
      <typeparam name="T3">The data that is carried into an activity.</typeparam>
      <typeparam name="T4">The data that is carried into an activity.</typeparam>
      <typeparam name="T5">The data that is carried into an activity.</typeparam>
      <typeparam name="T6">The data that is carried into an activity.</typeparam>
      <typeparam name="T7">The data that is carried into an activity.</typeparam>
      <typeparam name="T8">The data that is carried into an activity.</typeparam>
      <typeparam name="T9">The data that is carried into an activity.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity)">
      <summary>Schedules the specified <see cref="T:System.Activities.NativeActivity" /> child activity for execution.</summary>
      <returns>An activity instance.</returns>
      <param name="activity">A child activity that is triggered by an event that occurs in the execution of a parent <see cref="T:System.Activities.NativeActivity" />.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback)">
      <summary>Schedules the specified <see cref="T:System.Activities.NativeActivity" /> child activity for execution using the specified completion callback location where the parent process resumes upon completion of the activity.</summary>
      <returns>An activity instance.</returns>
      <param name="activity">A child activity that is triggered by an event that occurs in the execution of a parent <see cref="T:System.Activities.NativeActivity" />.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityAction" />.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Schedules the specified <see cref="T:System.Activities.NativeActivity" /> child activity for execution and bookmarks the specified callback locations where the parent process resumes upon completion of the child activity.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activity">A child activity that is triggered by an event that occurs in the execution of a parent <see cref="T:System.Activities.NativeActivity" />.</param>
      <param name="onCompleted">A bookmark that indicates where the <see cref="T:System.Activities.NativeActivity" /> execution resumes upon completion of the <see cref="T:System.Activities.ActivityAction" />.</param>
      <param name="onFaulted">A bookmark that indicates where the <see cref="T:System.Activities.NativeActivity" /> execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityAction" />.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.FaultCallback)">
      <summary>Schedules the specified <see cref="T:System.Activities.NativeActivity" /> child activity for execution using the specified fault callback location where the parent process resumes when the activity enters the faulted state.</summary>
      <returns>An activity instance.</returns>
      <param name="activity">A child activity that is triggered by an event that occurs in the execution of a parent <see cref="T:System.Activities.NativeActivity" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityAction" />.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleActivity``1(System.Activities.Activity{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)">
      <summary>Schedules the specified <see cref="T:System.Activities.NativeActivity" /> child activity for execution, with one parameter for an in argument, and bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityAction`1" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activity">A child activity that is triggered by an event that occurs in the execution of a parent <see cref="T:System.Activities.NativeActivity" />.</param>
      <param name="onCompleted">A bookmark that indicates where the <see cref="T:System.Activities.NativeActivity" /> execution resumes upon completion of the <see cref="T:System.Activities.ActivityAction`1" />.</param>
      <param name="onFaulted">A bookmark that indicates where the <see cref="T:System.Activities.NativeActivity" /> execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityAction" />.</param>
      <typeparam name="TResult">The type of the <see cref="T:System.Activities.NativeActivity" /> child activity out argument.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleDelegate(System.Activities.ActivityDelegate,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.DelegateCompletionCallback,System.Activities.FaultCallback)">
      <summary>Pushes the callback method for an activity into the work item pool. </summary>
      <returns>An instance of an activity.</returns>
      <param name="activityDelegate">The callback method to which an activity returns when the specified activity action completes.</param>
      <param name="inputParameters">A dictionary list of activity argument names and values.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityAction" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityAction" />.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``1(System.Activities.ActivityFunc{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityFunc`1" /> with one parameter that holds a return value and bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`1" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityFunc">A child activity that runs when a specific event occurs in the parent activity and returns a value.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`1" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityFunc`1" />.</param>
      <typeparam name="TResult">The type of the <see cref="T:System.Activities.NativeActivity" /> child activity out argument.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityFunc`10" /> that has ten parameters for a return value and in arguments and bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`10" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityFunc">A child activity that runs when a specific event occurs in the parent activity and returns a value.</param>
      <param name="argument1">An argument that carries data into an activity.</param>
      <param name="argument2">An argument that carries data into an activity.</param>
      <param name="argument3">An argument that carries data into an activity.</param>
      <param name="argument4">An argument that carries data into an activity.</param>
      <param name="argument5">An argument that carries data into an activity.</param>
      <param name="argument6">An argument that carries data into an activity.</param>
      <param name="argument7">An argument that carries data into an activity.</param>
      <param name="argument8">An argument that carries data into an activity.</param>
      <param name="argument9">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`10" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityFunc`10" />.</param>
      <typeparam name="T1">The data that is carried into an activity.</typeparam>
      <typeparam name="T2">The data that is carried into an activity.</typeparam>
      <typeparam name="T3">The data that is carried into an activity.</typeparam>
      <typeparam name="T4">The data that is carried into an activity.</typeparam>
      <typeparam name="T5">The data that is carried into an activity.</typeparam>
      <typeparam name="T6">The data that is carried into an activity.</typeparam>
      <typeparam name="T7">The data that is carried into an activity.</typeparam>
      <typeparam name="T8">The data that is carried into an activity.</typeparam>
      <typeparam name="T9">The data that is carried into an activity.</typeparam>
      <typeparam name="TResult">The type of the child activity out argument.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityFunc`11" /> that has eleven parameters for a return value and in arguments, and bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`11" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityFunc">A child activity that runs when a specific event occurs in the parent activity and returns a value.</param>
      <param name="argument1">An argument that carries data into an activity.</param>
      <param name="argument2">An argument that carries data into an activity.</param>
      <param name="argument3">An argument that carries data into an activity.</param>
      <param name="argument4">An argument that carries data into an activity.</param>
      <param name="argument5">An argument that carries data into an activity.</param>
      <param name="argument6">An argument that carries data into an activity.</param>
      <param name="argument7">An argument that carries data into an activity.</param>
      <param name="argument8">An argument that carries data into an activity.</param>
      <param name="argument9">An argument that carries data into an activity.</param>
      <param name="argument10">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`11" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityFunc`11" />.</param>
      <typeparam name="T1">The data that is carried into an activity.</typeparam>
      <typeparam name="T2">The data that is carried into an activity.</typeparam>
      <typeparam name="T3">The data that is carried into an activity.</typeparam>
      <typeparam name="T4">The data that is carried into an activity.</typeparam>
      <typeparam name="T5">The data that is carried into an activity.</typeparam>
      <typeparam name="T6">The data that is carried into an activity.</typeparam>
      <typeparam name="T7">The data that is carried into an activity.</typeparam>
      <typeparam name="T8">The data that is carried into an activity.</typeparam>
      <typeparam name="T9">The data that is carried into an activity.</typeparam>
      <typeparam name="T10">The data that is carried into an activity.</typeparam>
      <typeparam name="TResult">The type of the <see cref="T:System.Activities.NativeActivity" /> child activity out argument.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityFunc`12" /> that has twelve parameters for a return value and in arguments and that bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityFunc">A child activity that runs when a specific event occurs in the parent activity and returns a value.</param>
      <param name="argument1">An argument that carries data into an activity.</param>
      <param name="argument2">An argument that carries data into an activity.</param>
      <param name="argument3">An argument that carries data into an activity.</param>
      <param name="argument4">An argument that carries data into an activity.</param>
      <param name="argument5">An argument that carries data into an activity.</param>
      <param name="argument6">An argument that carries data into an activity.</param>
      <param name="argument7">An argument that carries data into an activity.</param>
      <param name="argument8">An argument that carries data into an activity.</param>
      <param name="argument9">An argument that carries data into an activity.</param>
      <param name="argument10">An argument that carries data into an activity.</param>
      <param name="argument11">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`12" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityFunc`12" />.</param>
      <typeparam name="T1">The data that is carried into an activity.</typeparam>
      <typeparam name="T2">The data that is carried into an activity.</typeparam>
      <typeparam name="T3">The data that is carried into an activity.</typeparam>
      <typeparam name="T4">The data that is carried into an activity.</typeparam>
      <typeparam name="T5">The data that is carried into an activity.</typeparam>
      <typeparam name="T6">The data that is carried into an activity.</typeparam>
      <typeparam name="T7">The data that is carried into an activity.</typeparam>
      <typeparam name="T8">The data that is carried into an activity.</typeparam>
      <typeparam name="T9">The data that is carried into an activity.</typeparam>
      <typeparam name="T10">The data that is carried into an activity.</typeparam>
      <typeparam name="T11">The data that is carried into an activity.</typeparam>
      <typeparam name="TResult">The type of the child activity out argument.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityFunc`13" /> that has thirteen parameters for a return value and in arguments and bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityFunc">A child activity that runs when a specific event occurs in the parent activity and returns a value.</param>
      <param name="argument1">An argument that carries data into an activity.</param>
      <param name="argument2">An argument that carries data into an activity.</param>
      <param name="argument3">An argument that carries data into an activity.</param>
      <param name="argument4">An argument that carries data into an activity.</param>
      <param name="argument5">An argument that carries data into an activity.</param>
      <param name="argument6">An argument that carries data into an activity.</param>
      <param name="argument7">An argument that carries data into an activity.</param>
      <param name="argument8">An argument that carries data into an activity.</param>
      <param name="argument9">An argument that carries data into an activity.</param>
      <param name="argument10">An argument that carries data into an activity.</param>
      <param name="argument11">An argument that carries data into an activity.</param>
      <param name="argument12">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`13" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityFunc`13" />.</param>
      <typeparam name="T1">The data that is carried into an activity.</typeparam>
      <typeparam name="T2">The data that is carried into an activity.</typeparam>
      <typeparam name="T3">The data that is carried into an activity.</typeparam>
      <typeparam name="T4">The data that is carried into an activity.</typeparam>
      <typeparam name="T5">The data that is carried into an activity.</typeparam>
      <typeparam name="T6">The data that is carried into an activity.</typeparam>
      <typeparam name="T7">The data that is carried into an activity.</typeparam>
      <typeparam name="T8">The data that is carried into an activity.</typeparam>
      <typeparam name="T9">The data that is carried into an activity.</typeparam>
      <typeparam name="T10">The data that is carried into an activity.</typeparam>
      <typeparam name="T11">The data that is carried into an activity.</typeparam>
      <typeparam name="T12">The data that is carried into an activity.</typeparam>
      <typeparam name="TResult">The type of the <see cref="T:System.Activities.NativeActivity" /> child activity out argument.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityFunc`14" /> that has fourteen parameters for a return value and in arguments and that bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityFunc">A child activity that runs when a specific event occurs in the parent activity and returns a value.</param>
      <param name="argument1">An argument that carries data into an activity.</param>
      <param name="argument2">An argument that carries data into an activity.</param>
      <param name="argument3">An argument that carries data into an activity.</param>
      <param name="argument4">An argument that carries data into an activity.</param>
      <param name="argument5">An argument that carries data into an activity.</param>
      <param name="argument6">An argument that carries data into an activity.</param>
      <param name="argument7">An argument that carries data into an activity.</param>
      <param name="argument8">An argument that carries data into an activity.</param>
      <param name="argument9">An argument that carries data into an activity.</param>
      <param name="argument10">An argument that carries data into an activity.</param>
      <param name="argument11">An argument that carries data into an activity.</param>
      <param name="argument12">An argument that carries data into an activity.</param>
      <param name="argument13">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`14" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityFunc`14" />.</param>
      <typeparam name="T1">The data that is carried into an activity.</typeparam>
      <typeparam name="T2">The data that is carried into an activity.</typeparam>
      <typeparam name="T3">The data that is carried into an activity.</typeparam>
      <typeparam name="T4">The data that is carried into an activity.</typeparam>
      <typeparam name="T5">The data that is carried into an activity.</typeparam>
      <typeparam name="T6">The data that is carried into an activity.</typeparam>
      <typeparam name="T7">The data that is carried into an activity.</typeparam>
      <typeparam name="T8">The data that is carried into an activity.</typeparam>
      <typeparam name="T9">The data that is carried into an activity.</typeparam>
      <typeparam name="T10">The data that is carried into an activity.</typeparam>
      <typeparam name="T11">The data that is carried into an activity.</typeparam>
      <typeparam name="T12">The data that is carried into an activity.</typeparam>
      <typeparam name="T13">The data that is carried into an activity.</typeparam>
      <typeparam name="TResult">The type of the <see cref="T:System.Activities.NativeActivity" /> child activity out argument.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityFunc`15" /> that has fifteen parameters for a return value and in arguments and that bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityFunc">A child activity that runs when a specific event occurs in the parent activity and returns a value.</param>
      <param name="argument1">An argument that carries data into an activity.</param>
      <param name="argument2">An argument that carries data into an activity.</param>
      <param name="argument3">An argument that carries data into an activity.</param>
      <param name="argument4">An argument that carries data into an activity.</param>
      <param name="argument5">An argument that carries data into an activity.</param>
      <param name="argument6">An argument that carries data into an activity.</param>
      <param name="argument7">An argument that carries data into an activity.</param>
      <param name="argument8">An argument that carries data into an activity.</param>
      <param name="argument9">An argument that carries data into an activity.</param>
      <param name="argument10">An argument that carries data into an activity.</param>
      <param name="argument11">An argument that carries data into an activity.</param>
      <param name="argument12">An argument that carries data into an activity.</param>
      <param name="argument13">An argument that carries data into an activity.</param>
      <param name="argument14">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`15" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityFunc`15" />.</param>
      <typeparam name="T1">The data that is carried into an activity.</typeparam>
      <typeparam name="T2">The data that is carried into an activity.</typeparam>
      <typeparam name="T3">The data that is carried into an activity.</typeparam>
      <typeparam name="T4">The data that is carried into an activity.</typeparam>
      <typeparam name="T5">The data that is carried into an activity.</typeparam>
      <typeparam name="T6">The data that is carried into an activity.</typeparam>
      <typeparam name="T7">The data that is carried into an activity.</typeparam>
      <typeparam name="T8">The data that is carried into an activity.</typeparam>
      <typeparam name="T9">The data that is carried into an activity.</typeparam>
      <typeparam name="T10">The data that is carried into an activity.</typeparam>
      <typeparam name="T11">The data that is carried into an activity.</typeparam>
      <typeparam name="T12">The data that is carried into an activity.</typeparam>
      <typeparam name="T13">The data that is carried into an activity.</typeparam>
      <typeparam name="T14">The data that is carried into an activity.</typeparam>
      <typeparam name="TResult">The type of the <see cref="T:System.Activities.NativeActivity" /> child activity out argument.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityFunc`16" /> that has sixteen parameters for a return value and in arguments and that bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityFunc">A child activity that runs when a specific event occurs in the parent activity and returns a value.</param>
      <param name="argument1">An argument that carries data into an activity.</param>
      <param name="argument2">An argument that carries data into an activity.</param>
      <param name="argument3">An argument that carries data into an activity.</param>
      <param name="argument4">An argument that carries data into an activity.</param>
      <param name="argument5">An argument that carries data into an activity.</param>
      <param name="argument6">An argument that carries data into an activity.</param>
      <param name="argument7">An argument that carries data into an activity.</param>
      <param name="argument8">An argument that carries data into an activity.</param>
      <param name="argument9">An argument that carries data into an activity.</param>
      <param name="argument10">An argument that carries data into an activity.</param>
      <param name="argument11">An argument that carries data into an activity.</param>
      <param name="argument12">An argument that carries data into an activity.</param>
      <param name="argument13">An argument that carries data into an activity.</param>
      <param name="argument14">An argument that carries data into an activity.</param>
      <param name="argument15">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`16" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityFunc`16" />.</param>
      <typeparam name="T1">The data that is carried into an activity.</typeparam>
      <typeparam name="T2">The data that is carried into an activity.</typeparam>
      <typeparam name="T3">The data that is carried into an activity.</typeparam>
      <typeparam name="T4">The data that is carried into an activity.</typeparam>
      <typeparam name="T5">The data that is carried into an activity.</typeparam>
      <typeparam name="T6">The data that is carried into an activity.</typeparam>
      <typeparam name="T7">The data that is carried into an activity.</typeparam>
      <typeparam name="T8">The data that is carried into an activity.</typeparam>
      <typeparam name="T9">The data that is carried into an activity.</typeparam>
      <typeparam name="T10">The data that is carried into an activity.</typeparam>
      <typeparam name="T11">The data that is carried into an activity.</typeparam>
      <typeparam name="T12">The data that is carried into an activity.</typeparam>
      <typeparam name="T13">The data that is carried into an activity.</typeparam>
      <typeparam name="T14">The data that is carried into an activity.</typeparam>
      <typeparam name="T15">The data that is carried into an activity.</typeparam>
      <typeparam name="TResult">The type of the <see cref="T:System.Activities.NativeActivity" /> child activity out argument.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityFunc`17" /> that has seventeen parameters for a return value and in arguments and that bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityFunc">A child activity that runs when a specific event occurs in the parent activity, and returns a value.</param>
      <param name="argument1">An argument that carries data into an activity.</param>
      <param name="argument2">An argument that carries data into an activity.</param>
      <param name="argument3">An argument that carries data into an activity.</param>
      <param name="argument4">An argument that carries data into an activity.</param>
      <param name="argument5">An argument that carries data into an activity.</param>
      <param name="argument6">An argument that carries data into an activity.</param>
      <param name="argument7">An argument that carries data into an activity.</param>
      <param name="argument8">An argument that carries data into an activity.</param>
      <param name="argument9">An argument that carries data into an activity.</param>
      <param name="argument10">An argument that carries data into an activity.</param>
      <param name="argument11">An argument that carries data into an activity.</param>
      <param name="argument12">An argument that carries data into an activity.</param>
      <param name="argument13">An argument that carries data into an activity.</param>
      <param name="argument14">An argument that carries data into an activity.</param>
      <param name="argument15">An argument that carries data into an activity.</param>
      <param name="argument16">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`17" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityFunc`17" />.</param>
      <typeparam name="T1">The data that is carried into an activity.</typeparam>
      <typeparam name="T2">The data that is carried into an activity.</typeparam>
      <typeparam name="T3">The data that is carried into an activity.</typeparam>
      <typeparam name="T4">The data that is carried into an activity.</typeparam>
      <typeparam name="T5">The data that is carried into an activity.</typeparam>
      <typeparam name="T6">The data that is carried into an activity.</typeparam>
      <typeparam name="T7">The data that is carried into an activity.</typeparam>
      <typeparam name="T8">The data that is carried into an activity.</typeparam>
      <typeparam name="T9">The data that is carried into an activity.</typeparam>
      <typeparam name="T10">The data that is carried into an activity.</typeparam>
      <typeparam name="T11">The data that is carried into an activity.</typeparam>
      <typeparam name="T12">The data that is carried into an activity.</typeparam>
      <typeparam name="T13">The data that is carried into an activity.</typeparam>
      <typeparam name="T14">The data that is carried into an activity.</typeparam>
      <typeparam name="T15">The data that is carried into an activity.</typeparam>
      <typeparam name="T16">The data that is carried into an activity.</typeparam>
      <typeparam name="TResult">The type of the <see cref="T:System.Activities.NativeActivity" /> child activity out argument.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``2(System.Activities.ActivityFunc{``0,``1},``0,System.Activities.CompletionCallback{``1},System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityFunc`2" /> that has two parameters for a return value and an in argument and that bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`2" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityFunc">A child activity that runs when a specific event occurs in the parent activity and returns a value.</param>
      <param name="argument">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`2" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityFunc`2" />.</param>
      <typeparam name="T">The data that is carried into an activity.</typeparam>
      <typeparam name="TResult">The type of the <see cref="T:System.Activities.NativeActivity" /> child activity out argument.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``3(System.Activities.ActivityFunc{``0,``1,``2},``0,``1,System.Activities.CompletionCallback{``2},System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityFunc`3" /> that has three parameters for a return value and in arguments and that bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`3" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityFunc">A child activity that runs when a specific event occurs in the parent activity and returns a value.</param>
      <param name="argument1">An argument that carries data into an activity.</param>
      <param name="argument2">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`3" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityFunc`3" />.</param>
      <typeparam name="T1">The data that is carried into an activity.</typeparam>
      <typeparam name="T2">The data that is carried into an activity.</typeparam>
      <typeparam name="TResult">The type of the <see cref="T:System.Activities.NativeActivity" /> child activity out argument.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``4(System.Activities.ActivityFunc{``0,``1,``2,``3},``0,``1,``2,System.Activities.CompletionCallback{``3},System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityFunc`4" /> that has four parameters for a return value and in arguments and that bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`4" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityFunc">A child activity that runs when a specific event occurs in the parent activity and returns a value.</param>
      <param name="argument1">An argument that carries data into an activity.</param>
      <param name="argument2">An argument that carries data into an activity.</param>
      <param name="argument3">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`4" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityFunc`4" />.</param>
      <typeparam name="T1">The data that is carried into an activity.</typeparam>
      <typeparam name="T2">The data that is carried into an activity.</typeparam>
      <typeparam name="T3">The data that is carried into an activity.</typeparam>
      <typeparam name="TResult">The type of the <see cref="T:System.Activities.NativeActivity" /> child activity out argument.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``5(System.Activities.ActivityFunc{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.Activities.CompletionCallback{``4},System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityFunc`5" /> that has five parameters for a return value and in arguments and that bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`5" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityFunc">A child activity that runs when a specific event occurs in the parent activity and returns a value.</param>
      <param name="argument1">An argument that carries data into an activity.</param>
      <param name="argument2">An argument that carries data into an activity.</param>
      <param name="argument3">An argument that carries data into an activity.</param>
      <param name="argument4">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`5" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityFunc`5" />.</param>
      <typeparam name="T1">The data that is carried into an activity.</typeparam>
      <typeparam name="T2">The data that is carried into an activity.</typeparam>
      <typeparam name="T3">The data that is carried into an activity.</typeparam>
      <typeparam name="T4">The data that is carried into an activity.</typeparam>
      <typeparam name="TResult">The type of the <see cref="T:System.Activities.NativeActivity" /> child activity out argument.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``6(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Activities.CompletionCallback{``5},System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityFunc`6" /> that has six parameters for a return value and in arguments and that bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`6" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityFunc">A child activity that runs when a specific event occurs in the parent activity and returns a value.</param>
      <param name="argument1">An argument that carries data into an activity.</param>
      <param name="argument2">An argument that carries data into an activity.</param>
      <param name="argument3">An argument that carries data into an activity.</param>
      <param name="argument4">An argument that carries data into an activity.</param>
      <param name="argument5">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`6" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityFunc`6" />.</param>
      <typeparam name="T1">The data that is carried into an activity.</typeparam>
      <typeparam name="T2">The data that is carried into an activity.</typeparam>
      <typeparam name="T3">The data that is carried into an activity.</typeparam>
      <typeparam name="T4">The data that is carried into an activity.</typeparam>
      <typeparam name="T5">The data that is carried into an activity.</typeparam>
      <typeparam name="TResult">The type of the <see cref="T:System.Activities.NativeActivity" /> child activity out argument.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityFunc`7" /> that has seven parameters for a return value and in arguments and that bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`7" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityFunc">A child activity that runs when a specific event occurs in the parent activity and returns a value.</param>
      <param name="argument1">An argument that carries data into an activity.</param>
      <param name="argument2">An argument that carries data into an activity.</param>
      <param name="argument3">An argument that carries data into an activity.</param>
      <param name="argument4">An argument that carries data into an activity.</param>
      <param name="argument5">An argument that carries data into an activity.</param>
      <param name="argument6">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`7" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityFunc`7" />.</param>
      <typeparam name="T1">The data that is carried into an activity.</typeparam>
      <typeparam name="T2">The data that is carried into an activity.</typeparam>
      <typeparam name="T3">The data that is carried into an activity.</typeparam>
      <typeparam name="T4">The data that is carried into an activity.</typeparam>
      <typeparam name="T5">The data that is carried into an activity.</typeparam>
      <typeparam name="T6">The data that is carried into an activity.</typeparam>
      <typeparam name="TResult">The type of the <see cref="T:System.Activities.NativeActivity" /> child activity out argument.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityFunc`8" /> that has eight parameters for a return value and in arguments and that bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`8" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityFunc">A child activity that runs when a specific event occurs in the parent activity and returns a value.</param>
      <param name="argument1">An argument that carries data into an activity.</param>
      <param name="argument2">An argument that carries data into an activity.</param>
      <param name="argument3">An argument that carries data into an activity.</param>
      <param name="argument4">An argument that carries data into an activity.</param>
      <param name="argument5">An argument that carries data into an activity.</param>
      <param name="argument6">An argument that carries data into an activity.</param>
      <param name="argument7">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`8" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityFunc`8" />.</param>
      <typeparam name="T1">The data that is carried into an activity.</typeparam>
      <typeparam name="T2">The data that is carried into an activity.</typeparam>
      <typeparam name="T3">The data that is carried into an activity.</typeparam>
      <typeparam name="T4">The data that is carried into an activity.</typeparam>
      <typeparam name="T5">The data that is carried into an activity.</typeparam>
      <typeparam name="T6">The data that is carried into an activity.</typeparam>
      <typeparam name="T7">The data that is carried into an activity.</typeparam>
      <typeparam name="TResult">The type of the <see cref="T:System.Activities.NativeActivity" /> child activity out argument.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)">
      <summary>Schedules for execution a specified <see cref="T:System.Activities.ActivityFunc`9" /> that has nine parameters for a return value and in arguments and that bookmarks the specified callback locations where the parent process resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`9" />.</summary>
      <returns>An instance of an activity.</returns>
      <param name="activityFunc">A child activity that runs when a specific event occurs in the parent activity and returns a value.</param>
      <param name="argument1">An argument that carries data into an activity.</param>
      <param name="argument2">An argument that carries data into an activity.</param>
      <param name="argument3">An argument that carries data into an activity.</param>
      <param name="argument4">An argument that carries data into an activity.</param>
      <param name="argument5">An argument that carries data into an activity.</param>
      <param name="argument6">An argument that carries data into an activity.</param>
      <param name="argument7">An argument that carries data into an activity.</param>
      <param name="argument8">An argument that carries data into an activity.</param>
      <param name="onCompleted">A bookmark that indicates where the parent activity execution resumes upon completion of the <see cref="T:System.Activities.ActivityFunc`9" />.</param>
      <param name="onFaulted">A bookmark that indicates where the parent activity execution resumes if an error causes the termination of the <see cref="T:System.Activities.ActivityFunc`9" />.</param>
      <typeparam name="T1">The data that is carried into an activity.</typeparam>
      <typeparam name="T2">The data that is carried into an activity.</typeparam>
      <typeparam name="T3">The data that is carried into an activity.</typeparam>
      <typeparam name="T4">The data that is carried into an activity.</typeparam>
      <typeparam name="T5">The data that is carried into an activity.</typeparam>
      <typeparam name="T6">The data that is carried into an activity.</typeparam>
      <typeparam name="T7">The data that is carried into an activity.</typeparam>
      <typeparam name="T8">The data that is carried into an activity.</typeparam>
      <typeparam name="TResult">The type of the <see cref="T:System.Activities.NativeActivity" /> child activity out argument.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.SetValue(System.Activities.Variable,System.Object)">
      <summary>Assigns the specified value object to the specified variable object.</summary>
      <param name="variable">A variable object without a specified type that can be assigned a value object.</param>
      <param name="value">An object without a specified type that can be assigned to a variable object.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.SetValue``1(System.Activities.Variable{``0},``0)">
      <summary>Assigns the specified generic value object to the specified generic variable object.</summary>
      <param name="variable">A variable object with a specified type that can be assigned a value object.</param>
      <param name="value">An object with a specified type that can be assigned to a variable object.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.Track(System.Activities.Tracking.CustomTrackingRecord)">
      <summary>Adds an activity tracking record to the current workflow instance.</summary>
      <param name="record">The data sent to tracking participants when tracked events occur.</param>
    </member>
    <member name="T:System.Activities.NativeActivityFaultContext">
      <summary>Represents the execution environment of a <see cref="T:System.Activities.NativeActivity" /> when it is handling an exception thrown by a child activity.</summary>
    </member>
    <member name="M:System.Activities.NativeActivityFaultContext.HandleFault">
      <summary>Records that the exception is being handled.</summary>
    </member>
    <member name="T:System.Activities.NativeActivityMetadata">
      <summary>Represents the set of arguments, child activities, variables, and delegates that a configured <see cref="T:System.Activities.NativeActivity" /> introduces to the execution environment.</summary>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddArgument(System.Activities.RuntimeArgument)">
      <summary>Adds an argument to the collection of arguments of an activity.</summary>
      <param name="argument">The argument to add to the collection.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddChild(System.Activities.Activity)">
      <summary>Adds the specified activity to the metadata’s list of child activities.</summary>
      <param name="child">The activity to add.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})">
      <summary>Adds the specified extension provider to the collection of default extension providers for the activity.</summary>
      <param name="extensionProvider">The function that returns the extension.</param>
      <typeparam name="T">The type of the extension provider.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddDelegate(System.Activities.ActivityDelegate)">
      <summary>Adds the specified delegate to the metadata’s list of delegates.</summary>
      <param name="activityDelegate">The delegate to add.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddImplementationChild(System.Activities.Activity)">
      <summary>Adds the specified activity to the metadata’s list of implementation activities.</summary>
      <param name="implementationChild">The activity to add.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddImplementationDelegate(System.Activities.ActivityDelegate)">
      <summary>Adds the specified delegate to the metadata’s list of implementation delegates.</summary>
      <param name="implementationDelegate">The delegate to add.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddImplementationVariable(System.Activities.Variable)">
      <summary>Adds the specified variable to the metadata’s collection of implementation variables.</summary>
      <param name="implementationVariable">The variable to add.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddImportedChild(System.Activities.Activity)">
      <summary>Adds the specified activity to the metadata’s list of imported child activities.</summary>
      <param name="importedChild">The activity to add.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)">
      <summary>Adds the specified delegate to the metadata’s list of imported delegates.</summary>
      <param name="importedDelegate">The delegate to add.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)">
      <summary>Adds the specified validation error to the metadata’s collection of validation errors.</summary>
      <param name="validationError">The validation error to add.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddValidationError(System.String)">
      <summary>Adds a validation error to the metadata’s collection of validation errors using the specified description.</summary>
      <param name="validationErrorMessage">A message that describes the validation error.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddVariable(System.Activities.Variable)">
      <summary>Adds the specified variable to the metadata’s collection of variables.</summary>
      <param name="variable">The variable to add.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)">
      <summary>Binds the specified <see cref="T:System.Activities.Argument" /> to the specified <see cref="T:System.Activities.RuntimeArgument" />.</summary>
      <param name="binding">The <see cref="T:System.Activities.Argument" /> to bind.</param>
      <param name="argument">The <see cref="T:System.Activities.RuntimeArgument" /> to bind.</param>
    </member>
    <member name="P:System.Activities.NativeActivityMetadata.Environment">
      <summary>Gets the activity’s <see cref="T:System.Activities.LocationReferenceEnvironment" /> of arguments, variables, delegate arguments, or symbols introduced by a <see cref="T:System.Activities.Hosting.SymbolResolver" />.</summary>
      <returns>The activity’s location reference environment of arguments, variables, delegate arguments, or symbols introduced by a <see cref="T:System.Activities.Hosting.SymbolResolver" />.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to this metadata instance.</summary>
      <returns>true if the specified object is equal to this metadata instance; otherwise, false.</returns>
      <param name="obj">The object to compare.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.GetArgumentsWithReflection">
      <summary>Returns a collection of arguments obtained by using reflection.</summary>
      <returns>A collection of arguments.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.GetChildrenWithReflection">
      <summary>Returns a collection of child activities using reflection.</summary>
      <returns>A collection of child activities.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.GetDelegatesWithReflection">
      <summary>Returns a collection of delegates using reflection.</summary>
      <returns>A collection of delegates.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.GetHashCode">
      <summary>Returns a unique identifier for this metadata instance.</summary>
      <returns>An integer that uniquely identifies this metadata instance.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.GetVariablesWithReflection">
      <summary>Returns a collection of variables using reflection.</summary>
      <returns>A collection of variables.</returns>
    </member>
    <member name="P:System.Activities.NativeActivityMetadata.HasViolations">
      <summary>Gets a value that indicates whether there are any validation errors in the metadata.</summary>
      <returns>true if validation errors are present; otherwise, false.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.op_Equality(System.Activities.NativeActivityMetadata,System.Activities.NativeActivityMetadata)">
      <summary>Returns a value that indicates whether the two specified metadata instances are equal.</summary>
      <returns>true if the two items are equal; otherwise, false.</returns>
      <param name="left">The first item to compare.</param>
      <param name="right">The second item to compare.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.op_Inequality(System.Activities.NativeActivityMetadata,System.Activities.NativeActivityMetadata)">
      <summary>Returns a value that indicates whether the two specified metadata instances are not equal.</summary>
      <returns>true if the two items are not equal; otherwise, false.</returns>
      <param name="left">The first item to compare.</param>
      <param name="right">The second item to compare.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.RequireExtension``1">
      <summary>Specifies that the activity requires an extension of the specified generic type at runtime.</summary>
      <typeparam name="T">The type of the extension.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.RequireExtension(System.Type)">
      <summary>Specifies that the activity requires an extension of the specified type at runtime.</summary>
      <param name="extensionType">The type of the extension.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})">
      <summary>Adds the specified collection of arguments to the activity’s arguments.</summary>
      <param name="arguments">The arguments to add.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.SetChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})">
      <summary>Adds the specified collection as child activities of the activity.</summary>
      <param name="children">The activities to add.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.SetDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})">
      <summary>Adds the specified collection as delegates of the activity.</summary>
      <param name="delegates">The delegates to add.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.SetImplementationChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})">
      <summary>Adds the specified collection as implementation child activities of the activity.</summary>
      <param name="implementationChildren">The activities to add.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.SetImplementationDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})">
      <summary>Adds the specified collection as implementation delegates of the activity.</summary>
      <param name="implementationDelegates">The delegates to add.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.SetImplementationVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})">
      <summary>Adds the specified collection as implementation variables of the activity.</summary>
      <param name="implementationVariables">The delegates to add.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})">
      <summary>Adds the specified collection as imported child activities of the activity.</summary>
      <param name="importedChildren">The activities to add.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})">
      <summary>Adds the specified collection as imported delegates of the activity.</summary>
      <param name="importedDelegates">The delegates to add.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})">
      <summary>Adds the specified collection of validation errors to the metadata’s collection of validation errors.</summary>
      <param name="validationErrors">The validation errors to add.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})">
      <summary>Adds the specified collection of variables to the activity’s variables.</summary>
      <param name="variables">The variables to add.</param>
    </member>
    <member name="T:System.Activities.NativeActivityTransactionContext">
      <summary>The execution context for a <see cref="T:System.Activities.NativeActivity" /> that needs to provide the runtime with a transaction.</summary>
    </member>
    <member name="M:System.Activities.NativeActivityTransactionContext.SetRuntimeTransaction(System.Transactions.Transaction)">
      <summary>Provides the runtime with the specified transaction.</summary>
      <param name="transaction">The transaction.</param>
    </member>
    <member name="T:System.Activities.NoPersistHandle">
      <summary>Manages the lifetime of a no-persist block.</summary>
    </member>
    <member name="M:System.Activities.NoPersistHandle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.NoPersistHandle" /> class.</summary>
    </member>
    <member name="M:System.Activities.NoPersistHandle.Enter(System.Activities.NativeActivityContext)">
      <summary>Marks the beginning of the no-persist block.</summary>
      <param name="context">The current execution environment.</param>
    </member>
    <member name="M:System.Activities.NoPersistHandle.Exit(System.Activities.NativeActivityContext)">
      <summary>Marks the end of the no-persist block.</summary>
      <param name="context">The current execution environment.</param>
    </member>
    <member name="T:System.Activities.OutArgument">
      <summary>The abstract base class that represents a binding terminal that supports the flow of data out of an activity.</summary>
    </member>
    <member name="M:System.Activities.OutArgument.CreateReference(System.Activities.InOutArgument,System.String)">
      <summary>Creates a new <see cref="T:System.Activities.OutArgument" /> that references the specified target <see cref="T:System.Activities.InOutArgument" /> using the specified referenced argument name.</summary>
      <returns>A new out argument that references the specified target <see cref="T:System.Activities.InOutArgument" />.</returns>
      <param name="argumentToReference">The target in/out argument to reference.</param>
      <param name="referencedArgumentName">The name of the referenced argument.</param>
    </member>
    <member name="M:System.Activities.OutArgument.CreateReference(System.Activities.OutArgument,System.String)">
      <summary>Creates a new <see cref="T:System.Activities.OutArgument" /> that references the specified target <see cref="T:System.Activities.OutArgument" /> using the specified referenced argument name.</summary>
      <returns>A new out argument that references the specified target <see cref="T:System.Activities.OutArgument" />.</returns>
      <param name="argumentToReference">The target out argument to reference.</param>
      <param name="referencedArgumentName">The name of the referenced argument.</param>
    </member>
    <member name="T:System.Activities.OutArgument`1">
      <summary>A binding terminal that represents the flow of data out of an activity.</summary>
      <typeparam name="T">The data type of the <see cref="T:System.Activities.OutArgument`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.OutArgument`1.#ctor">
      <summary>Initialize a new instance of the <see cref="T:System.Activities.OutArgument`1" /> class using default values.</summary>
    </member>
    <member name="M:System.Activities.OutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.OutArgument`1" /> class using the specified <see cref="T:System.Activities.Activity`1" />.</summary>
      <param name="expression">The value of the argument.</param>
    </member>
    <member name="M:System.Activities.OutArgument`1.#ctor(System.Activities.DelegateArgument)">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.OutArgument`1" /> class using the specified <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <param name="delegateArgument">The value of the argument.</param>
    </member>
    <member name="M:System.Activities.OutArgument`1.#ctor(System.Activities.Variable)">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.OutArgument`1" /> class using the specified <see cref="T:System.Activities.Variable" />.</summary>
      <param name="variable">The value of the argument.</param>
    </member>
    <member name="M:System.Activities.OutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.OutArgument`1" /> class using the specified expression.</summary>
      <param name="expression">The value of the argument.</param>
    </member>
    <member name="P:System.Activities.OutArgument`1.Expression">
      <summary>Gets a <see cref="T:System.Activities.Activity`1" /> that represents the value of this <see cref="T:System.Activities.OutArgument`1" />.</summary>
      <returns>A workflow element that represents the value of the argument.</returns>
    </member>
    <member name="M:System.Activities.OutArgument`1.FromDelegateArgument(System.Activities.DelegateArgument)">
      <summary>Initializes and returns a new <see cref="T:System.Activities.OutArgument`1" /> constructed using the specified <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <returns>The new argument.</returns>
      <param name="delegateArgument">The value of the argument.</param>
    </member>
    <member name="M:System.Activities.OutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})">
      <summary>Initializes and returns a new <see cref="T:System.Activities.OutArgument`1" /> constructed using the specified <see cref="T:System.Activities.Activity`1" />.</summary>
      <returns>The new argument.</returns>
      <param name="expression">The value of the argument,</param>
    </member>
    <member name="M:System.Activities.OutArgument`1.FromVariable(System.Activities.Variable)">
      <summary>Initializes and returns a new <see cref="T:System.Activities.OutArgument`1" /> constructed using the specified <see cref="T:System.Activities.Variable" />.</summary>
      <returns>The new argument.</returns>
      <param name="variable">The value of the argument.</param>
    </member>
    <member name="M:System.Activities.OutArgument`1.Get(System.Activities.ActivityContext)">
      <summary>Gets the value of the <see cref="T:System.Activities.OutArgument`1" /> using the specified activity context.</summary>
      <returns>The value of the argument.</returns>
      <param name="context">The current activity context.</param>
    </member>
    <member name="M:System.Activities.OutArgument`1.GetLocation(System.Activities.ActivityContext)">
      <summary>Gets the location of the value for the <see cref="T:System.Activities.OutArgument`1" />.</summary>
      <returns>A reference to the location where the value of the argument is stored.</returns>
      <param name="context">The activity context that contains the value of the variable.</param>
    </member>
    <member name="M:System.Activities.OutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{`0}})~System.Activities.OutArgument{`0}">
      <summary>Initializes and returns a new <see cref="T:System.Activities.OutArgument`1" /> constructed using the specified <see cref="T:System.Activities.Activity`1" />.</summary>
      <returns>The new argument.</returns>
      <param name="expression">The value of the argument,</param>
    </member>
    <member name="M:System.Activities.OutArgument`1.op_Implicit(System.Activities.DelegateArgument)~System.Activities.OutArgument{`0}">
      <summary>Initializes and returns a new <see cref="T:System.Activities.OutArgument`1" /> constructed using the specified <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <returns>The new argument.</returns>
      <param name="delegateArgument">The value of the argument.</param>
    </member>
    <member name="M:System.Activities.OutArgument`1.op_Implicit(System.Activities.Variable)~System.Activities.OutArgument{`0}">
      <summary>Initializes and returns a new <see cref="T:System.Activities.OutArgument`1" /> constructed using the specified <see cref="T:System.Activities.Variable" />.</summary>
      <returns>The new argument.</returns>
      <param name="variable">The value of the argument.</param>
    </member>
    <member name="M:System.Activities.OutArgument`1.Set(System.Activities.ActivityContext,`0)">
      <summary>Sets the value of the <see cref="T:System.Activities.OutArgument`1" /> using the specified activity context.</summary>
      <param name="context">The current activity context.</param>
      <param name="value">The new value.</param>
    </member>
    <member name="T:System.Activities.OverloadGroupAttribute">
      <summary>Provides a method for indicating which combinations of arguments are valid in an activity.</summary>
    </member>
    <member name="M:System.Activities.OverloadGroupAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.OverloadGroupAttribute" /> class.</summary>
    </member>
    <member name="M:System.Activities.OverloadGroupAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.OverloadGroupAttribute" /> class.</summary>
      <param name="groupName">The name of the group of arguments.</param>
    </member>
    <member name="P:System.Activities.OverloadGroupAttribute.GroupName">
      <summary>Gets the name of the <see cref="T:System.Activities.OverloadGroupAttribute" />.</summary>
      <returns>The name of the group of related arguments.</returns>
    </member>
    <member name="P:System.Activities.OverloadGroupAttribute.TypeId">
      <summary>Gets a unique identifier for this attribute.</summary>
      <returns>A unique identifier for this attribute.</returns>
    </member>
    <member name="T:System.Activities.PersistableIdleAction">
      <summary>Specifies the action that occurs when a workflow becomes idle when persistence is allowed.</summary>
    </member>
    <member name="F:System.Activities.PersistableIdleAction.None">
      <summary>Specifies that no action is taken.</summary>
    </member>
    <member name="F:System.Activities.PersistableIdleAction.Unload">
      <summary>Specifies that the <see cref="T:System.Activities.WorkflowApplication" /> should persist and unload the workflow.</summary>
    </member>
    <member name="F:System.Activities.PersistableIdleAction.Persist">
      <summary>Specifies that the <see cref="T:System.Activities.WorkflowApplication" /> should persist the workflow.</summary>
    </member>
    <member name="T:System.Activities.RegistrationContext">
      <summary>Provides access to the current collection of workflow execution properties.</summary>
    </member>
    <member name="M:System.Activities.RegistrationContext.FindProperty(System.String)">
      <summary>Returns a workflow execution property with the specified name.</summary>
      <returns>The workflow execution property.</returns>
      <param name="name">The name of the workflow execution property.</param>
    </member>
    <member name="T:System.Activities.RequiredArgumentAttribute">
      <summary>Application element on which it is valid to apply an argument.0</summary>
    </member>
    <member name="M:System.Activities.RequiredArgumentAttribute.#ctor">
      <summary>Creates a new  instance of the <see cref="T:System.Activities.RequiredArgumentAttribute" /> class.</summary>
    </member>
    <member name="P:System.Activities.RequiredArgumentAttribute.TypeId">
      <summary>When implemented in a derived class, gets a unique identifier for this <see cref="T:System.Attribute" />.</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:System.Activities.RuntimeArgument">
      <summary>Describes the characteristics of an argument of an activity to the runtime.</summary>
    </member>
    <member name="M:System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection)">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.RuntimeArgument" /> class using a name, data type, and argument direction.</summary>
      <param name="name">The name of the <see cref="T:System.Activities.RuntimeArgument" />.</param>
      <param name="argumentType">The type of the <see cref="T:System.Activities.RuntimeArgument" />.</param>
      <param name="direction">The direction of data flow through an argument.</param>
    </member>
    <member name="M:System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.RuntimeArgument" /> class using a name, data type, argument direction, and a value that indicates whether the <see cref="T:System.Activities.RuntimeArgument" /> is required to be bound to a value.</summary>
      <param name="name">The name of the <see cref="T:System.Activities.RuntimeArgument" />.</param>
      <param name="argumentType">The data type of the <see cref="T:System.Activities.RuntimeArgument" />.</param>
      <param name="direction">The direction of data flow through an argument.</param>
      <param name="isRequired">true to indicate that the <see cref="T:System.Activities.RuntimeArgument" /> is required to be bound to a value; otherwise false.</param>
    </member>
    <member name="M:System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Boolean,System.Collections.Generic.List{System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.RuntimeArgument" /> class with a name, data type, argument direction, whether the <see cref="T:System.Activities.RuntimeArgument" /> is required to be bound to a value, and a list of overload group names.</summary>
      <param name="name">The name of the <see cref="T:System.Activities.RuntimeArgument" />.</param>
      <param name="argumentType">The data type of the <see cref="T:System.Activities.RuntimeArgument" />.</param>
      <param name="direction">The direction of data flow through an argument.</param>
      <param name="isRequired">true to indicate that the <see cref="T:System.Activities.RuntimeArgument" /> is required to be bound to a value; otherwise false.</param>
      <param name="overloadGroupNames">The names of the overload groups that apply to this <see cref="T:System.Activities.RuntimeArgument" />.</param>
    </member>
    <member name="M:System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Collections.Generic.List{System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.RuntimeArgument" /> class using a name, data type, argument direction, and a list of overload group names.</summary>
      <param name="name">The name of the <see cref="T:System.Activities.RuntimeArgument" />.</param>
      <param name="argumentType">The data type of the <see cref="T:System.Activities.RuntimeArgument" />.</param>
      <param name="direction">The direction of data flow through an argument.</param>
      <param name="overloadGroupNames">The overload groups that apply to this <see cref="T:System.Activities.RuntimeArgument" />.</param>
    </member>
    <member name="P:System.Activities.RuntimeArgument.Direction">
      <summary>Gets the direction of the data flow through this <see cref="T:System.Activities.RuntimeArgument" />.</summary>
      <returns>The direction of data flow through an argument.</returns>
    </member>
    <member name="M:System.Activities.RuntimeArgument.Get(System.Activities.ActivityContext)">
      <summary>Gets the value of the <see cref="T:System.Activities.RuntimeArgument" /> using the specified activity context.</summary>
      <returns>The value of the <see cref="T:System.Activities.RuntimeArgument" />.</returns>
      <param name="context">The current activity context.</param>
    </member>
    <member name="M:System.Activities.RuntimeArgument.Get``1(System.Activities.ActivityContext)">
      <summary>Gets the strongly-typed value of the <see cref="T:System.Activities.RuntimeArgument" /> using the specified activity context.</summary>
      <returns>The value of the <see cref="T:System.Activities.RuntimeArgument" />.</returns>
      <param name="context">The current activity context.</param>
      <typeparam name="T">The return value type.</typeparam>
    </member>
    <member name="M:System.Activities.RuntimeArgument.GetLocation(System.Activities.ActivityContext)">
      <summary>Returns the <see cref="T:System.Activities.Location" /> for this <see cref="T:System.Activities.RuntimeArgument" />.</summary>
      <returns>The location of the <see cref="T:System.Activities.RuntimeArgument" />.</returns>
      <param name="context">The argument location.</param>
    </member>
    <member name="P:System.Activities.RuntimeArgument.IsRequired">
      <summary>Gets a value that indicates whether the <see cref="T:System.Activities.RuntimeArgument" /> is required to be bound to a value.</summary>
      <returns>true if the <see cref="T:System.Activities.RuntimeArgument" /> is required to be bound to a value; otherwise, false.</returns>
    </member>
    <member name="P:System.Activities.RuntimeArgument.OverloadGroupNames">
      <summary>Gets a list of the overload groups that this <see cref="T:System.Activities.RuntimeArgument" /> belongs to.</summary>
      <returns>A list of overload group names.</returns>
    </member>
    <member name="M:System.Activities.RuntimeArgument.Set(System.Activities.ActivityContext,System.Object)">
      <summary>Sets the value of the <see cref="T:System.Activities.RuntimeArgument" />.</summary>
      <param name="context">The current activity context.</param>
      <param name="value">The new value for the <see cref="T:System.Activities.RuntimeArgument" />.</param>
    </member>
    <member name="T:System.Activities.RuntimeDelegateArgument">
      <summary>Describes the characteristics of a <see cref="T:System.Activities.DelegateArgument" /> to the runtime.</summary>
    </member>
    <member name="M:System.Activities.RuntimeDelegateArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Activities.DelegateArgument)">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.RuntimeDelegateArgument" /> class using the specified name, data type, argument direction, and <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <param name="name">The name of the <see cref="T:System.Activities.RuntimeDelegateArgument" />.</param>
      <param name="type">The data type of the <see cref="T:System.Activities.RuntimeDelegateArgument" />.</param>
      <param name="direction">One of the enumeration values that specifies the direction of data flow through an argument.</param>
      <param name="boundArgument">The delegate argument that is represented by this <see cref="T:System.Activities.RuntimeDelegateArgument" />.</param>
    </member>
    <member name="P:System.Activities.RuntimeDelegateArgument.BoundArgument">
      <summary>Gets the <see cref="T:System.Activities.DelegateArgument" /> that is represented by this <see cref="T:System.Activities.RuntimeDelegateArgument" />.</summary>
      <returns>The bound argument represented by this <see cref="T:System.Activities.RuntimeDelegateArgument" />.</returns>
    </member>
    <member name="P:System.Activities.RuntimeDelegateArgument.Direction">
      <summary>Gets the direction of data flow through the <see cref="T:System.Activities.RuntimeDelegateArgument" />.</summary>
      <returns>One of the enumeration values that specifies the direction of data flow through an argument.</returns>
    </member>
    <member name="P:System.Activities.RuntimeDelegateArgument.Name">
      <summary>Gets the name of the <see cref="T:System.Activities.RuntimeDelegateArgument" />.</summary>
      <returns>The name of the <see cref="T:System.Activities.RuntimeDelegateArgument" />.</returns>
    </member>
    <member name="P:System.Activities.RuntimeDelegateArgument.Type">
      <summary>Gets the data type of the <see cref="T:System.Activities.RuntimeDelegateArgument" />.</summary>
      <returns>The data type of the <see cref="T:System.Activities.RuntimeDelegateArgument" />.</returns>
    </member>
    <member name="T:System.Activities.RuntimeTransactionHandle">
      <summary>Provides access to the run-time transaction in a workflow instance.</summary>
    </member>
    <member name="M:System.Activities.RuntimeTransactionHandle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.RuntimeTransactionHandle" /> class.</summary>
    </member>
    <member name="M:System.Activities.RuntimeTransactionHandle.#ctor(System.Transactions.Transaction)">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.RuntimeTransactionHandle" /> class using the specified root transaction.</summary>
      <param name="rootTransaction">The root transaction.</param>
    </member>
    <member name="P:System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure">
      <summary>Gets or sets whether the workflow instance should be aborted if the transaction fails.</summary>
      <returns>true if the workflow instance should be aborted if the transaction fails; otherwise, false.</returns>
    </member>
    <member name="M:System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext)">
      <summary>Completes the current run-time transaction.</summary>
      <param name="context">The current execution environment.</param>
    </member>
    <member name="M:System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext,System.Activities.BookmarkCallback)">
      <summary>Completes the current run-time transaction and schedules the bookmark callback when the transaction is complete.</summary>
      <param name="context">The current execution environment.</param>
      <param name="callback">The bookmark callback to be invoked when the transaction completes.</param>
    </member>
    <member name="M:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.AsyncCodeActivityContext)">
      <summary>Returns a reference to the current run-time transaction.</summary>
      <returns>The current transaction.</returns>
      <param name="context">The current execution environment.</param>
    </member>
    <member name="M:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.CodeActivityContext)">
      <summary>Returns a reference to the current run-time transaction.</summary>
      <returns>The current transaction.</returns>
      <param name="context">The current execution environment.</param>
    </member>
    <member name="M:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.NativeActivityContext)">
      <summary>Returns a reference to the current run-time transaction.</summary>
      <returns>The current run-time transaction.</returns>
      <param name="context">The current execution environment.</param>
    </member>
    <member name="M:System.Activities.RuntimeTransactionHandle.RequestTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)">
      <summary>Initiates the creation of a <see cref="T:System.Activities.NativeActivityTransactionContext" /> for use with a new transaction.</summary>
      <param name="context">The current execution environment.</param>
      <param name="callback">The method to be called when the <see cref="T:System.Activities.NativeActivityTransactionContext" /> is created.</param>
      <param name="state">An optional user-provided state that contains information about the request.</param>
    </member>
    <member name="M:System.Activities.RuntimeTransactionHandle.RequireTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)">
      <summary>Initiates the creation of a <see cref="T:System.Activities.NativeActivityTransactionContext" /> for use with an existing transaction.</summary>
      <param name="context">The current execution environment.</param>
      <param name="callback">The method to be called when the <see cref="T:System.Activities.NativeActivityTransactionContext" /> is created.</param>
      <param name="state">An optional user-provided state that contains information about the request.</param>
    </member>
    <member name="P:System.Activities.RuntimeTransactionHandle.SuppressTransaction">
      <summary>Gets or sets a value that indicates whether this run-time transaction is suppressed.</summary>
      <returns>true if the run-time transaction is suppressed; otherwise, false.</returns>
    </member>
    <member name="M:System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#CleanupWorkflowThread">
      <summary>For a description of this member, see <see cref="M:System.Activities.IExecutionProperty.CleanupWorkflowThread" />.</summary>
    </member>
    <member name="M:System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#SetupWorkflowThread">
      <summary>For a description of this member, see <see cref="M:System.Activities.IExecutionProperty.SetupWorkflowThread" />.</summary>
    </member>
    <member name="M:System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Register(System.Activities.RegistrationContext)">
      <summary>For a description of this member, see <see cref="M:System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)" />.</summary>
      <param name="context">For a description of this parameter, see <see cref="M:System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)" />.</param>
    </member>
    <member name="M:System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Unregister(System.Activities.RegistrationContext)">
      <summary>For a description of this member, see <see cref="M:System.Activities.IPropertyRegistrationCallback.UnRegister(System.Activities.RegistrationContext)" />.</summary>
      <param name="context">For a description of this parameter, see <see cref="M:System.Activities.IPropertyRegistrationCallback.UnRegister(System.Activities.RegistrationContext)" />.</param>
    </member>
    <member name="T:System.Activities.UnhandledExceptionAction">
      <summary>Specifies the action that occurs when an exception escapes the root of a workflow.</summary>
    </member>
    <member name="F:System.Activities.UnhandledExceptionAction.Abort">
      <summary>Specifies that the <see cref="T:System.Activities.WorkflowInstance" /> should abort the workflow.</summary>
    </member>
    <member name="F:System.Activities.UnhandledExceptionAction.Cancel">
      <summary>Specifies that the <see cref="T:System.Activities.WorkflowInstance" /> should schedule the cancellation of the root activity and resume execution. </summary>
    </member>
    <member name="F:System.Activities.UnhandledExceptionAction.Terminate">
      <summary>Specifies that the <see cref="T:System.Activities.WorkflowInstance" /> should schedule termination of the root activity and resume execution.</summary>
    </member>
    <member name="T:System.Activities.ValidationException">
      <summary>The exception that is thrown when a workflow or activity is in an invalid state.</summary>
    </member>
    <member name="M:System.Activities.ValidationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.ValidationException" /> class using default values.</summary>
    </member>
    <member name="M:System.Activities.ValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.ValidationException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. </param>
    </member>
    <member name="M:System.Activities.ValidationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.ValidationException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.Activities.ValidationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.ValidationException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
    </member>
    <member name="T:System.Activities.Variable">
      <summary>The abstract base class from which the workflow data member support class <see cref="T:System.Activities.Variable`1" /> derives.</summary>
    </member>
    <member name="M:System.Activities.Variable.Create(System.String,System.Type,System.Activities.VariableModifiers)">
      <summary>Initializes and returns new instance of the <see cref="T:System.Activities.Variable" /> class.</summary>
      <returns>The new variable.</returns>
      <param name="name">The name for the <see cref="T:System.Activities.Variable" />.</param>
      <param name="type">The type for the <see cref="T:System.Activities.Variable" />.</param>
      <param name="modifiers">The configuration options for the <see cref="T:System.Activities.Variable" />.</param>
    </member>
    <member name="P:System.Activities.Variable.Default">
      <summary>Gets or sets the <see cref="T:System.Activities.ActivityWithResult" /> that represents the default value for this <see cref="T:System.Activities.Variable" />.</summary>
      <returns>The default value for this <see cref="T:System.Activities.Variable" />.</returns>
    </member>
    <member name="M:System.Activities.Variable.Get(System.Activities.ActivityContext)">
      <summary>Gets the value of the <see cref="T:System.Activities.Variable" /> using the specified <see cref="T:System.Activities.ActivityContext" />.</summary>
      <returns>The value of the <see cref="T:System.Activities.Variable" />.</returns>
      <param name="context">The current execution context.</param>
    </member>
    <member name="M:System.Activities.Variable.GetLocation(System.Activities.ActivityContext)">
      <summary>Gets the <see cref="T:System.Activities.Location" /> for this <see cref="T:System.Activities.Variable" />.</summary>
      <returns>The location for this <see cref="T:System.Activities.Variable" />.</returns>
      <param name="context">The activity context of the executing activity.</param>
    </member>
    <member name="P:System.Activities.Variable.Modifiers">
      <summary>Gets or sets the <see cref="T:System.Activities.VariableModifiers" /> value for this <see cref="T:System.Activities.Variable" />.</summary>
      <returns>The variable modifier value for this <see cref="T:System.Activities.Variable" />.</returns>
    </member>
    <member name="P:System.Activities.Variable.Name">
      <summary>Gets or sets the name of the <see cref="T:System.Activities.Variable" />.</summary>
      <returns>The name of the <see cref="T:System.Activities.Variable" />.</returns>
    </member>
    <member name="P:System.Activities.Variable.NameCore">
      <summary>Gets the name of the <see cref="T:System.Activities.Variable" />.</summary>
      <returns>The name of the <see cref="T:System.Activities.Variable" />.</returns>
    </member>
    <member name="M:System.Activities.Variable.Set(System.Activities.ActivityContext,System.Object)">
      <summary>Sets the value of the <see cref="T:System.Activities.Variable" /> using the specified <see cref="T:System.Activities.ActivityContext" />.</summary>
      <param name="context">The current execution context.</param>
      <param name="value">The new value.</param>
    </member>
    <member name="T:System.Activities.Variable`1">
      <summary>Represents a variable in a workflow.</summary>
      <typeparam name="T">The <see cref="T:System.Type" /> of the <see cref="T:System.Activities.Variable`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.Variable`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Variable`1" /> class.</summary>
    </member>
    <member name="M:System.Activities.Variable`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Variable`1" /> class with the default expression.</summary>
      <param name="defaultExpression">The default expression.</param>
    </member>
    <member name="M:System.Activities.Variable`1.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Variable`1" /> class with the variable name.</summary>
      <param name="name">The variable name.</param>
    </member>
    <member name="M:System.Activities.Variable`1.#ctor(System.String,System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Variable`1" /> class with the variable name and default expression.</summary>
      <param name="name">The variable name.</param>
      <param name="defaultExpression">The default expression.</param>
    </member>
    <member name="M:System.Activities.Variable`1.#ctor(System.String,`0)">
      <summary>Initializes a new instance of the <see cref="T:System.Activities.Variable`1" /> class with the variable name and default value.</summary>
      <param name="name">The variable name.</param>
      <param name="defaultValue">The default value.</param>
    </member>
    <member name="P:System.Activities.Variable`1.Default">
      <summary>Gets or sets the <see cref="T:System.Activities.Activity`1" /> that represents the default value for this <see cref="T:System.Activities.Variable`1" />.</summary>
      <returns>The default value for this <see cref="T:System.Activities.Variable`1" />.</returns>
    </member>
    <member name="M:System.Activities.Variable`1.Get(System.Activities.ActivityContext)">
      <summary>Gets the value of the variable using the specified <see cref="T:System.Activities.ActivityContext" />.</summary>
      <returns>The value of the variable.</returns>
      <param name="context">The activity context of the executing activity.</param>
    </member>
    <member name="M:System.Activities.Variable`1.GetLocation(System.Activities.ActivityContext)">
      <summary>Returns the <see cref="T:System.Activities.Location`1" /> of the variable.</summary>
      <returns>The location of the variable.</returns>
      <param name="context">The activity context that contains the location of the variable.</param>
    </member>
    <member name="M:System.Activities.Variable`1.Set(System.Activities.ActivityContext,`0)">
      <summary>Sets the value of the variable.</summary>
      <param name="context">The activity context of the executing activity.</param>
      <param name="value">The value of the variable.</param>
    </member>
    <member name="T:System.Activities.VariableModifiers">
      <summary>Specifies the way the workflow runtime treats <see cref="T:System.Activities.Variable" /> objects.</summary>
    </member>
    <member name="F:System.Activities.VariableModifiers.None">
      <summary>No modifiers are specified for the <see cref="T:System.Activities.Variable" />.</summary>
    </member>
    <member name="F:System.Activities.VariableModifiers.ReadOnly">
      <summary>The value for the <see cref="T:System.Activities.Variable" /> cannot be changed.</summary>
    </member>
    <member name="F:System.Activities.VariableModifiers.Mapped">
      <summary>The <see cref="T:System.Activities.Variable" /> is mapped for persistence.</summary>
    </member>
    <member name="T:System.Activities.WorkflowApplication">
      <summary>Provides a host for a single instance of a workflow.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class with the specified workflow definition.</summary>
      <param name="workflowDefinition">The workflow definition.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class that uses the specified workflow definition and argument values.</summary>
      <param name="workflowDefinition">The workflow definition.</param>
      <param name="inputs">The values for arguments defined on the root activity of the workflow definition.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Abort">
      <summary>Notifies the workflow runtime that this workflow instance should abort.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Abort(System.String)">
      <summary>Notifies the workflow runtime that this workflow instance should abort for the specified reason.</summary>
      <param name="reason">The reason for the request to abort.</param>
    </member>
    <member name="P:System.Activities.WorkflowApplication.Aborted">
      <summary>Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the workflow instance is aborted.</summary>
      <returns>The action that is invoked when the workflow instance is aborted.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
      <summary>Specifies instance metadata values that are included with the first persistence of a new instance.</summary>
      <param name="writeOnlyValues">The metadata values to be included with the first persistence.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)">
      <summary>Cancels a workflow instance asynchronously using the specified <see cref="T:System.AsyncCallback" /> and user-provided state.</summary>
      <returns>A reference to the asynchronous cancel operation.</returns>
      <param name="callback">The method to be called when the cancel operation has completed.</param>
      <param name="state">An optional application-specific object that contains information about the asynchronous operation.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Cancels a workflow instance asynchronously using the specified time-out interval, <see cref="T:System.AsyncCallback" />, and user-provided state.</summary>
      <returns>A reference to the asynchronous cancel operation.</returns>
      <param name="timeout">The interval in which the cancel operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</param>
      <param name="callback">The method to be called when the cancel operation has completed.</param>
      <param name="state">An optional application-specific object that contains information about the asynchronous operation.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)">
      <summary>Loads a workflow asynchronously from an instance store using the specified instance identifier, callback method, and user-provided state.</summary>
      <returns>The status of an asynchronous operation.</returns>
      <param name="instanceId">A globally unique 128-bit identifier for the workflow instance.</param>
      <param name="callback">The method to be called when the begin load operation has completed.</param>
      <param name="state">An optional application-specific object that contains information about the asynchronous operation.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Loads a workflow asynchronously from an instance store using the specified instance identifier, timeout period, callback method, and user-provided state.</summary>
      <returns>The status of an asynchronous operation.</returns>
      <param name="instanceId">A globally unique 128-bit identifier for the workflow instance.</param>
      <param name="timeout">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</param>
      <param name="callback">The method to be called when the begin load operation has completed.</param>
      <param name="state">An optional application-specific object that contains information about the asynchronous operation.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)">
      <summary>Initiates an operation to load a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</summary>
      <returns>A reference to the asynchronous operation</returns>
      <param name="callback">The method to be called when the operation is complete.</param>
      <param name="state">An optional application-specific object containing information about the asynchronous operation.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Initiates an operation to load a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> using the specified time-out interval.</summary>
      <returns>A reference to the asynchronous operation</returns>
      <param name="timeout">The interval in which the load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</param>
      <param name="callback">The method to be called when the operation is complete.</param>
      <param name="state">An optional application-specific object containing information about the asynchronous operation.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)">
      <summary>Persists a workflow instance to an instance store asynchronously using the specified callback method and user-provided state.</summary>
      <returns>A reference to the asynchronous persist operation.</returns>
      <param name="callback">The method to be called when the persist operation has completed.</param>
      <param name="state">An optional application-specific object that contains information about the asynchronous operation.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Persists a workflow instance to an instance store asynchronously using the specified time-out interval, callback method, and user-provided state.</summary>
      <returns>A reference to the asynchronous persist operation.</returns>
      <param name="timeout">The interval in which the persist operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</param>
      <param name="callback">The method to be called when the persist operation has completed.</param>
      <param name="state">An optional application-specific object that contains information about the asynchronous operation.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)">
      <summary>Initiates an operation to resume a bookmark using the specified value, callback method, and state.</summary>
      <returns>A reference to the asynchronous bookmark resume operation.</returns>
      <param name="bookmark">The bookmark to resume.</param>
      <param name="value">An object passed as a parameter to the method that is invoked when the bookmark resumes.</param>
      <param name="callback">The method to be called when the resume operation has completed.</param>
      <param name="state">An optional application-specific object that contains information about the asynchronous operation.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Initiates an operation to resume a bookmark using the specified value, time-out interval, callback method, and state.</summary>
      <returns>A reference to the asynchronous bookmark resume operation.</returns>
      <param name="bookmark">The bookmark to resume.</param>
      <param name="value">An object passed as a parameter to the method that is invoked when the bookmark resumes.</param>
      <param name="timeout">The interval in which the resume operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</param>
      <param name="callback">The method to be called when the resume operation has completed.</param>
      <param name="state">An optional application-specific object that contains information about the asynchronous operation.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)">
      <summary>Initiates an asynchronous operation to resume the bookmark with the specified name, using the specified value, callback method, and state. The bookmark to be resumed is previously created by an activity within the workflow instance.</summary>
      <returns>The result of the bookmark resumption operation.</returns>
      <param name="bookmarkName">The name of the bookmark to be resumed.</param>
      <param name="value">An object passed as a parameter to the method that is invoked when the bookmark resumes.</param>
      <param name="callback">The method that is called when the asynchronous operation completes.</param>
      <param name="state">The state of execution of a workflow that was preserved by the calling thread before an asynchronous operation began.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Initiates an asynchronous operation to resume the bookmark with the specified name, using the specified value, time-out interval, callback method, and state. The bookmark to be resumed is previously created by an activity within the workflow instance.</summary>
      <returns>The result of the bookmark resumption operation.</returns>
      <param name="bookmarkName">The name of the bookmark to be resumed.</param>
      <param name="value">An object passed as a parameter to the method that is invoked when the bookmark resumes.</param>
      <param name="timeout">The time interval during which the bookmark must be resumed.</param>
      <param name="callback">The method that is called when the asynchronous operation completes.</param>
      <param name="state">The state of execution of a workflow that was saved by the calling thread before an asynchronous operation began.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)">
      <summary>Starts or resumes a workflow instance asynchronously using the specified callback method and user-provided state.</summary>
      <returns>A reference to the asynchronous run operation.</returns>
      <param name="callback">The method to be called when the resume operation has completed.</param>
      <param name="state">An optional application-specific object that contains information about the asynchronous operation.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Starts or resumes a workflow instance asynchronously using the specified time-out interval, callback method, and user-provided state.</summary>
      <returns>A reference to the asynchronous run operation.</returns>
      <param name="timeout">The interval in which the resume operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</param>
      <param name="callback">The method to be called when the resume operation has completed.</param>
      <param name="state">An optional application-specific object that contains information about the asynchronous operation.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)">
      <summary>Terminates a workflow instance asynchronously using the specified exception, callback method, and user-provided state.</summary>
      <returns>A reference to the current <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</returns>
      <param name="reason">The reason the workflow instance is terminated.</param>
      <param name="callback">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</param>
      <param name="state">An optional application-specific object that contains information about the asynchronous operation.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Terminates a workflow instance asynchronously using the specified exception, time-out interval, callback method, and user-provided state.</summary>
      <returns>A reference to the current <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</returns>
      <param name="reason">The reason for terminating the workflow instance.</param>
      <param name="timeout">The interval in which the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</param>
      <param name="callback">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</param>
      <param name="state">An optional application-specific object that contains information about the asynchronous operation.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)">
      <summary>Terminates a workflow instance asynchronously using the specified error message, callback method, and user-provided state.</summary>
      <returns>A reference to the current <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</returns>
      <param name="reason">The reason for terminating the workflow instance.</param>
      <param name="callback">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</param>
      <param name="state">An optional application-specific object that contains information about the asynchronous operation.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Terminates a workflow instance asynchronously using the specified error message, time-out interval, callback method, and user-provided state.</summary>
      <returns>A reference to the asynchronous <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</returns>
      <param name="reason">The reason for terminating the workflow instance.</param>
      <param name="timeout">The interval in which the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</param>
      <param name="callback">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</param>
      <param name="state">An optional application-specific object that contains information about the asynchronous operation.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)">
      <summary>Persists and disposes a workflow instance asynchronously using the specified callback method and user-provided state.</summary>
      <returns>A reference to the asynchronous <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation.</returns>
      <param name="callback">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation has completed.</param>
      <param name="state">An optional application-specific object that contains information about the asynchronous operation.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Persists and disposes a workflow instance asynchronously using the specified time-out interval, callback method, and user-provided state.</summary>
      <returns>A reference to the asynchronous <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation.</returns>
      <param name="timeout">The interval in which the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</param>
      <param name="callback">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation has completed.</param>
      <param name="state">An optional application-specific object that contains information about the asynchronous operation.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Cancel">
      <summary>Cancels the workflow instance.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)">
      <summary>Cancels the workflow instance using the specified time-out interval.</summary>
      <param name="timeout">The interval in which the cancel operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</param>
    </member>
    <member name="P:System.Activities.WorkflowApplication.Completed">
      <summary>Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the workflow instance completes.</summary>
      <returns>An action that is invoked when the workflow instance is complete.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)">
      <summary>Waits for the pending asynchronous cancel operation to complete.</summary>
      <param name="result">The asynchronous cancel operation.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)">
      <summary>Waits for the pending asynchronous load operation to complete.</summary>
      <param name="result">The asynchronous load operation.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)">
      <summary>Waits for the asynchronous load runnable instance operation to complete.</summary>
      <param name="result">A reference to the asynchronous load operation.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)">
      <summary>Waits for the pending asynchronous persist operation to complete.</summary>
      <param name="result">The asynchronous persist operation.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)">
      <summary>Waits for a bookmark resume operation to complete.</summary>
      <returns>One of the enumeration values that indicates the results of a bookmark resumption operation.</returns>
      <param name="result">A reference to the asynchronous bookmark resume operation.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)">
      <summary>Waits for the pending asynchronous run operation to complete.</summary>
      <param name="result">The asynchronous run operation.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)">
      <summary>Waits for the pending asynchronous terminate operation to complete.</summary>
      <param name="result">The asynchronous terminate operation.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)">
      <summary>Waits for the pending asynchronous unload operation to complete.</summary>
      <param name="result">The asynchronous unload operation.</param>
    </member>
    <member name="P:System.Activities.WorkflowApplication.Extensions">
      <summary>Gets the collection of extensions for the current workflow instance.</summary>
      <returns>A collection of objects.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.GetBookmarks">
      <summary>Returns the collection of bookmarks for the workflow instance.</summary>
      <returns>A read-only collection of bookmarks for the workflow instance.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)">
      <summary>Returns the collection of bookmarks for the workflow instance using the specified time-out interval.</summary>
      <returns>A read-only collection of bookmarks for the workflow instance.</returns>
      <param name="timeout">The interval in which this method must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</param>
    </member>
    <member name="P:System.Activities.WorkflowApplication.Id">
      <summary>Gets the 128-bit GUID identifier of the current workflow application instance.</summary>
      <returns>A 128-bit GUID identifier.</returns>
    </member>
    <member name="P:System.Activities.WorkflowApplication.Idle">
      <summary>Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the current workflow instance becomes idle.</summary>
      <returns>An action that executes when a workflow instance becomes idle.</returns>
    </member>
    <member name="P:System.Activities.WorkflowApplication.InstanceStore">
      <summary>Gets or sets an object that provides access to the persisted state of the current instance of the workflow application.</summary>
      <returns>An instance store.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Load(System.Guid)">
      <summary>Loads the specified workflow instance into memory from an instance store.</summary>
      <param name="instanceId">A globally unique 128-bit identifier for the workflow instance.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)">
      <summary>Loads the specified workflow instance into memory from an instance store using the specified time-out interval.</summary>
      <param name="instanceId">A globally unique 128-bit identifier for the workflow instance.</param>
      <param name="timeout">The interval in which the load operation must complete before the load operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.LoadRunnableInstance">
      <summary>Loads a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplication.LoadRunnableInstance(System.TimeSpan)">
      <summary>Loads a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> using the specified time-out interval.</summary>
      <param name="timeout">The interval in which the load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</param>
    </member>
    <member name="P:System.Activities.WorkflowApplication.OnUnhandledException">
      <summary>Gets or sets the <see cref="T:System.Func`2" /> that is invoked when the current workflow instance encounters an unhandled exception. </summary>
      <returns>The delegate that is invoked when a workflow instance encounters an unhandled exception.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Persist">
      <summary>Persists a workflow instance to an instance store.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Persist(System.TimeSpan)">
      <summary>Persists a workflow instance to an instance store using the specified time-out interval.</summary>
      <param name="timeout">The interval in which the persist operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</param>
    </member>
    <member name="P:System.Activities.WorkflowApplication.PersistableIdle">
      <summary>Gets or sets the <see cref="T:System.Activities.ActivityFunc" /> that is invoked when the current workflow instance is idle and can be persisted.</summary>
      <returns>The <see cref="T:System.Activities.ActivityFunc" /> that is invoked when the current workflow instance is idle and can be persisted.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)">
      <summary>Initiates an operation to resume the specified bookmark, using the specified value. The bookmark to be resumed is previously created by an activity within the workflow instance.</summary>
      <returns>The result of the bookmark resumption operation.</returns>
      <param name="bookmark">The bookmark to resume.</param>
      <param name="value">An object passed as a parameter to the method that is invoked when the bookmark resumes.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)">
      <summary>Initiates an operation to resume the specified bookmark, using the specified value and time-out interval. The bookmark to be resumed is previously created by an activity within the workflow instance.</summary>
      <returns>The result of the bookmark resumption operation.</returns>
      <param name="bookmark">The bookmark to resume.</param>
      <param name="value">An object passed as a parameter to the method that is invoked when the bookmark resumes.</param>
      <param name="timeout">The time interval during which the bookmark must be resumed.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)">
      <summary>Initiates an operation to resume the bookmark with the specified name, using the specified value. The bookmark to be resumed is previously created by an activity within the workflow instance.</summary>
      <returns>The result of the bookmark resumption operation.</returns>
      <param name="bookmarkName">The name of the bookmark to be resumed.</param>
      <param name="value">An object passed as a parameter to the method that is invoked when the bookmark resumes.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)">
      <summary>Initiates an operation to resume the bookmark with the specified name, using the specified value and time-out interval. The bookmark to be resumed is previously created by an activity within the workflow instance.</summary>
      <returns>The result of the bookmark resumption operation.</returns>
      <param name="bookmarkName">The name of the bookmark to be resumed.</param>
      <param name="value">An object passed as a parameter to the method that is invoked when the bookmark resumes.</param>
      <param name="timeout">The time interval during which the bookmark must be resumed.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Run">
      <summary>Begins or resumes the execution of a workflow instance.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)">
      <summary>Begins or resumes the execution of a workflow instance using the specified time-out interval.</summary>
      <param name="timeout">Call this method to initiate execution of a newly created workflow instance.The interval in which the run operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Terminate(System.Exception)">
      <summary>Terminates a workflow instance using the specified exception.</summary>
      <param name="reason">The reason for terminating the workflow instance.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)">
      <summary>Terminates a workflow instance using the specified exception and time-out interval.</summary>
      <param name="reason">The reason for terminating the workflow instance.</param>
      <param name="timeout">The interval in which the <see cref="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Terminate(System.String)">
      <summary>Terminates a workflow instance using the specified error message.</summary>
      <param name="reason">The reason for terminating the workflow instance.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)">
      <summary>Terminates a workflow instance using the specified error message and time-out interval.</summary>
      <param name="reason">The reason for terminating the workflow instance.</param>
      <param name="timeout">The interval in which the <see cref="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Unload">
      <summary>Persists and unloads a workflow instance.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)">
      <summary>Persists and unloads a workflow instance using the specified time-out interval.</summary>
      <param name="timeout">The interval in which the unload operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</param>
    </member>
    <member name="P:System.Activities.WorkflowApplication.Unloaded">
      <summary>Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the current workflow unloads.</summary>
      <returns>An action that is invoked when a workflow instance is unloaded.</returns>
    </member>
    <member name="T:System.Activities.WorkflowApplicationAbortedEventArgs">
      <summary>Provides data about an aborted workflow instance.</summary>
    </member>
    <member name="P:System.Activities.WorkflowApplicationAbortedEventArgs.Reason">
      <summary>Gets the exception that provides information about why the workflow instance was aborted</summary>
      <returns>The exception that provides information about why the workflow instance was aborted.</returns>
    </member>
    <member name="T:System.Activities.WorkflowApplicationAbortedException">
      <summary>Represents the exception that is thrown when an operation on a workflow instance is not valid because the instance has been aborted.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationAbortedException.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.WorkflowApplicationAbortedException" /> class.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationAbortedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.WorkflowApplicationAbortedException" /> class with the context and serialization information required to retrieve data about this exception from a serialized stream.</summary>
      <param name="info">All the information required to serialize or deserialize the abort exception object.</param>
      <param name="context">The source and destination of a given serialized stream and an additional caller-defined context.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationAbortedException.#ctor(System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.WorkflowApplicationAbortedException" /> class with a text string description of the exception.</summary>
      <param name="message">A description of the abort exception.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationAbortedException.#ctor(System.String,System.Exception)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.WorkflowApplicationAbortedException" /> class with a text string description of the exception and an additional exception that is the cause of the abort exception.</summary>
      <param name="message">A description of the abort exception.</param>
      <param name="innerException">An exception that has a causal relationship to the application aborted exception. The application aborted exception is thrown in response to the inner exception and can use information from the inner exception to handle the error more appropriately.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationAbortedException.#ctor(System.String,System.Guid)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.WorkflowApplicationAbortedException" /> class with a text string description of the abort exception and with a unique identifier for it.</summary>
      <param name="message">A description of the abort exception.</param>
      <param name="instanceId">A globally unique identifier.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationAbortedException.#ctor(System.String,System.Guid,System.Exception)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.WorkflowApplicationAbortedException" /> class with a text string description of the abort exception, a unique identifier for it, and an additional exception that is the cause of the abort exception.</summary>
      <param name="message">A description of the abort exception.</param>
      <param name="instanceId">A globally unique identifier.</param>
      <param name="innerException">An exception that has a causal relationship to the application aborted exception. The application aborted exception is thrown in response to the inner exception and can use information from the inner exception to handle the error more appropriately.</param>
    </member>
    <member name="T:System.Activities.WorkflowApplicationCompletedEventArgs">
      <summary>Provides information about a workflow instance that has completed its execution.</summary>
    </member>
    <member name="P:System.Activities.WorkflowApplicationCompletedEventArgs.CompletionState">
      <summary>Gets the completion state of the workflow instance, which indicates whether the workflow instance completed successfully, was canceled, or faulted.</summary>
      <returns>The completion state of the workflow instance, which indicates whether the workflow instance completed successfully, was canceled, or faulted.</returns>
    </member>
    <member name="P:System.Activities.WorkflowApplicationCompletedEventArgs.Outputs">
      <summary>Gets a dictionary that contains the values of <see cref="T:System.Activities.OutArgument" />s of the workflow instance’s root activity, keyed by argument name.</summary>
      <returns>A dictionary that contains the values of <see cref="T:System.Activities.OutArgument" />s of the workflow instance’s root activity, keyed by argument name.</returns>
    </member>
    <member name="P:System.Activities.WorkflowApplicationCompletedEventArgs.TerminationException">
      <summary>Gets the exception associated with the termination of the workflow instance.</summary>
      <returns>The exception associated with the termination of the workflow instance.</returns>
    </member>
    <member name="T:System.Activities.WorkflowApplicationCompletedException">
      <summary>Represents the exception that is thrown when an operation on a workflow instance is not valid because the instance has completed.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationCompletedException.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.WorkflowApplicationCompletedException" /> class.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationCompletedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.WorkflowApplicationCompletedException" /> class with the context and serialization information required to retrieve data about this exception from a serialized stream.</summary>
      <param name="info">All the information required to serialize or deserialize the application completed exception object.</param>
      <param name="context">The source and destination of a given serialized stream and an additional caller-defined context.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationCompletedException.#ctor(System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.WorkflowApplicationCompletedException" /> class with a text string description of the exception.</summary>
      <param name="message">A description of the application completed exception.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationCompletedException.#ctor(System.String,System.Exception)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.WorkflowApplicationCompletedException" /> class with a text string description of the exception and with an additional exception that is the cause of the application completed exception.</summary>
      <param name="message">A description of the application completed exception.</param>
      <param name="innerException">An exception that has a causal relationship to the application completed exception. The application completed exception is thrown in response to the inner exception and can use information from the inner exception to handle the error more appropriately.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationCompletedException.#ctor(System.String,System.Guid)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.WorkflowApplicationCompletedException" /> class with a text string description of the exception and with a unique identifier for the exception.</summary>
      <param name="message">A description of the application completed exception.</param>
      <param name="instanceId">A globally unique identifier.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationCompletedException.#ctor(System.String,System.Guid,System.Exception)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.WorkflowApplicationCompletedException" /> class with a text string description of the exception, a unique identifier for it, and an additional exception that is the cause of the application completed exception.</summary>
      <param name="message">A description of the application completed exception.</param>
      <param name="instanceId">A globally unique identifier.</param>
      <param name="innerException">An exception that has a causal relationship to the application completed exception. The application completed exception is thrown in response to the inner exception and can use information from the inner exception to handle the error more appropriately.</param>
    </member>
    <member name="T:System.Activities.WorkflowApplicationEventArgs">
      <summary>A base class for events associated with a <see cref="T:System.Activities.WorkflowApplication" /> object.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationEventArgs.GetInstanceExtensions``1">
      <summary>Gets the collection of extensions of the specified type.</summary>
      <returns>The collection of extensions.</returns>
      <typeparam name="T">The type of the extension.</typeparam>
    </member>
    <member name="P:System.Activities.WorkflowApplicationEventArgs.InstanceId">
      <summary>The unique identifier of the workflow instance.</summary>
      <returns>A unique identifier.</returns>
    </member>
    <member name="T:System.Activities.WorkflowApplicationException">
      <summary>Provides the base class for handling an error that occurs during the execution of a workflow application.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationException.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.WorkflowApplicationException" /> class.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.WorkflowApplicationException" /> class with the context and serialization information required to retrieve data about this exception from a serialized stream.</summary>
      <param name="info">The information required to serialize or deserialize the application exception object.</param>
      <param name="context">The source and destination of a given serialized stream, and an additional caller-defined context.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationException.#ctor(System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.WorkflowApplicationException" /> class with a text string description of the exception.</summary>
      <param name="message">A description of the application exception.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationException.#ctor(System.String,System.Exception)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.WorkflowApplicationException" /> class with a text string description of the exception and with an additional exception that is the cause of the application exception.</summary>
      <param name="message">A description of the application exception.</param>
      <param name="innerException">An exception that has a causal relationship to the application exception.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationException.#ctor(System.String,System.Guid)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.WorkflowApplicationException" /> class with a text string description of the exception and with a unique identifier for it.</summary>
      <param name="message">A description of the application exception.</param>
      <param name="instanceId">A globally unique identifier.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationException.#ctor(System.String,System.Guid,System.Exception)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.WorkflowApplicationException" /> class with a text string description of the exception, a unique identifier for it, and an additional exception that is the cause of the application exception.</summary>
      <param name="message">A description of the application exception.</param>
      <param name="instanceId">A globally unique identifier.</param>
      <param name="innerException">An exception that has a causal relationship to the application exception. </param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception.</summary>
      <param name="info">The information required to serialize or deserialize the abort exception object.</param>
      <param name="context">The source and destination of a given serialized stream, and an additional caller-defined context.</param>
    </member>
    <member name="P:System.Activities.WorkflowApplicationException.InstanceId">
      <summary>Gets the unique identifier for the current exception.</summary>
      <returns>A unique identifier.</returns>
    </member>
    <member name="T:System.Activities.WorkflowApplicationIdleEventArgs">
      <summary>Holds information about the workflow instance that has become idle.</summary>
    </member>
    <member name="P:System.Activities.WorkflowApplicationIdleEventArgs.Bookmarks">
      <summary>Gets the read-only collection of bookmarks for the workflow instance.</summary>
      <returns>A read-only collection of bookmarks.</returns>
    </member>
    <member name="T:System.Activities.WorkflowApplicationTerminatedException">
      <summary>An exception that is thrown when an operation on a workflow instance is not valid because the instance has been terminated.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationTerminatedException.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Activities.WorkflowApplicationTerminatedException" /> class.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationTerminatedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.WorkflowApplicationTerminatedException" /> class with the context and serialization information required to retrieve data about this exception from a serialized stream.</summary>
      <param name="info">All the information required to serialize or deserialize the application terminated exception object.</param>
      <param name="context">The source and destination of a given serialized stream and an additional caller-defined context.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationTerminatedException.#ctor(System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.WorkflowApplicationTerminatedException" /> class with a text string description of the exception.</summary>
      <param name="message">A description of the application terminated exception.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationTerminatedException.#ctor(System.String,System.Exception)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.WorkflowApplicationTerminatedException" /> class with a text string description of the exception and with an exception that is the cause of the application terminated exception.</summary>
      <param name="message">A description of the application terminated exception.</param>
      <param name="innerException">An exception that has a causal relationship to the application terminated exception. The application terminated exception is thrown in response to the inner exception and can use information from the inner exception to handle the error more appropriately.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationTerminatedException.#ctor(System.String,System.Guid)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.WorkflowApplicationTerminatedException" /> class with a text string description of the exception and with a unique identifier for it.</summary>
      <param name="message">A description of the application terminated exception.</param>
      <param name="instanceId">A globally unique identifier.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationTerminatedException.#ctor(System.String,System.Guid,System.Exception)">
      <summary>Creates a new instance of the <see cref="T:System.Activities.WorkflowApplicationTerminatedException" /> class with a text string description of the exception, a unique identifier for it, and an exception that is the cause of the current exception.</summary>
      <param name="message">A description of the application terminated exception.</param>
      <param name="instanceId">A globally unique identifier.</param>
      <param name="innerException">An exception that has a causal relationship to the application terminated exception. The application terminated exception is thrown in response to the inner exception and can use information from the inner exception to handle the error more appropriately.</param>
    </member>
    <member name="T:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs">
      <summary>Provides information about an unhandled exception that occurred in a workflow instance.</summary>
    </member>
    <member name="P:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSource">
      <summary>Gets the activity that is the source of the unhandled exception.</summary>
      <returns>An activity.</returns>
    </member>
    <member name="P:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSourceInstanceId">
      <summary>Gets the unique identifier of the activity instance that is the source of the unhandled exception.</summary>
      <returns>An identifier of the activity instance that is the source of the unhandled exception.</returns>
    </me