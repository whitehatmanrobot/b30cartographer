tionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

#####oemnadds.inf all

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DigiBoardCX     = "Digi C/X Adapter"
    DigiBoardXem    = "Digi PC/Xem Adapter"
    DigiBoard8r     = "Digi AccelePort 8 Adapter"
    IBM8r           = "IBM 8-Port Async, EIA-232 (ISA) Adapter"
    DigiBoard8i     = "Digi PC/8i Adapter"
    DigiBoard16i    = "Digi PC/16i Adapter"
    DigiBoard2Port  = "Digi PC/2e (8K) Adapter"
    DigiBoard4Port  = "Digi PC/4e (8K) Adapter"
    DigiBoard8Port  = "Digi PC/8e (8K) Adapter"
    DigiBoard4e     = "Digi PC/4e Adapter"
    DigiBoard8e     = "Digi PC/8e Adapter"
    DigiBoard16e    = "Digi PC/16e Adapter"
    DigiBoardEPC    = "Digi EPC Adapter"
    StarGateClusStar = "Digi/StarGate ClusStar Adapter"

[OptionsTextMCAENG]
    DigiBoardCX     = "Digi MC C/X Adapter"
    DigiBoardXem    = "Digi MC/Xem Adapter"
    DigiBoard8r     = "Digi MC AccelePort 8 Adapter"
    DigiBoard4i     = "Digi MC/4i Adapter"
    DigiBoard8i     = "Digi MC/8i Adapter"
    DigiBoard16i    = "Digi MC/16i Adapter"
    DigiBoard2Port  = "Digi MC/2e (8K) Adapter"
    DigiBoard4Port  = "Digi MC/4e (8K) Adapter"
    DigiBoard8Port  = "Digi MC/8e (8K) Adapter"
    DigiBoardEPC    = "Digi MC EPC Adapter"
    StarGateClusStar = "Digi/StarGate MC ClusStar Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
    ProCaption   = $(ManufacturerDisplayName)" "$(AdapterTitle)" Adapter Setup"
    ProCancel    = "Cance&l"
    ProCancelMsg = $(ManufacturerDisplayName)" Adapters and/or Drivers are not correctly installed. "+
                   "Are you sure you want to cancel copying files?"
    ProCancelCap = $(ProCaption)
    ProText1     = "Copying:"
    ProText2     = "To:"
    Error         = "Unable to determine proper source disk location; copy cannot be performed."
;
; Product Info
;
    FunctionTitle = $(ProCaption)
;
; Software
;
    ProductSoftwareDescription          = $(ManufacturerDisplayName)" FEP 5 Adapter Driver"
    ProductSoftwareDescriptionHdwDriver = $(ManufacturerDisplayName)" "$(AdapterTitle)" Miniport Driver"
    ProductSoftwareTitle    = $(ManufacturerDisplayName)" FEP 5 Driver"
    ProductSoftwareTitleHdwDriver = $(ManufacturerDisplayName)" "$(AdapterTitle)" Miniport Driver"

;
; Configuration Information
;
   ConfigurationTitle = $(ProCaption)
   IRQDisableLabel = "Disabled"

;
; Hardware
;
    ProductHardwareDescription      = $(ManufacturerDisplayName)" "$(AdapterTitle)" Adapter"
    ProductHardwareTitle        = $(ManufacturerDisplayName)" "$(AdapterTitle)" Adapter"

[DialogConstantsENG]
;
; Common button names, etc.
;
    Help        = "&Help"
    Exit        = "E&xit"
    OK          = "OK"
    HelpContext = ""
    Continue    = "C&ontinue"
    Cancel      = "C&ancel"

[UpdatingConfigurationENG]
    UpdatingConfiguration      = "Updating new configuration..."

[AbortMessageENG]
  AbortText  =  "Aborting "$(ManufacturerDisplayName)" Setup. Please reboot the system "+
                "to fix the problem."


#####oemnade1.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNK16     = "3Com Etherlink16/EtherLink16 TP Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "3Com Etherlink 16 Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com Etherlink16/Etherlink16 TP Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "3Com Etherlink16/Etherlink16 TP Adapter"
ProductSoftwareTitle    = "3Com Etherlink16/Etherlink16 TP Adapter Driver"
ProductHardwareTitle    = "3Com Etherlink16/Etherlink16 TP Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Caption = $(FunctionTitle)

Combo1Label = "&IRQ Level:"
Combo2Label = "I/O &Port Address:"
Label1 = "Transceiver Type"
Radio1 = "&External"
Radio2 = "O&n Board"
CheckBox1 = "&Zero Wait State"
Combo3Label = "&Memory Address:"
Combo4Label = "Memo&ry Size:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "ELNK_16"

Combo1Out  = $(IRQ_Level)
Combo1List = $(IRQ_List)
Combo2List = $(IOADDR_Hex_List)
Combo2Out  = $(IOADDR_Hex_Value)
Combo3List = $(MemAddrHexList)
Combo3Out  = $(MemAddrHexValue)
Combo4List = $(MemAddrLengthList)
Combo4Out  = $(MemAddrLength)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List, Combo4List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out, Combo4Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO, NO, NO}

HelpContext = $(!IDH_DB_OEMNADE1_INS)

#####oemnade2.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNKII     = "3Com Etherlink II Adapter (also II/16 and II/16 TP)"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "3Com Etherlink II Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com Etherlink II Adapter Driver"
;
; Hardware
;
ProductHardwareELNKIIDescription        = "3Com Etherlink II Adapter"
ProductSoftwareTitle    = "3Com Etherlink II Adapter Driver"
ProductHardwareELNKIITitle = "3Com Etherlink II Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[MemoryMappedChoicesENG]

Map_1 = 1, "ON"
Map_2 = 0, "OFF"


[FileDependentDlgENG]

DlgText = "Please select values for the following fields:"

Combo1Label = "&IRQ Level:"
Combo2Label = "I/O &Port Address:"
CheckBox1   = "&Memory Mapped"
Label1 = "Transceiver Type"

Radio1 = "&External"
Radio2 = "O&n Board"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "ELNK_II"
Caption = $(FunctionTitle)

Combo1List = $(IRQ_List)
Combo1Out  = $(IRQ_Level)
Combo2List = $(IOADDR_Hex_List)
Combo2Out  = $(IOADDR_Hex_Value)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADE2_INS)

#####oemnadin.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    EE16     = "Intel Ether Express 16 LAN Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Intel Ether Express 16 LAN Adapter Setup"
;
; Software
;
ProductSoftwareDescription      = "Intel Ether Express 16 LAN Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Intel Ether Express 16 LAN Adapter"
ProductSoftwareTitle    = "Intel Ether Express 16 LAN Adapter Driver"
ProductHardwareTitle    = "Intel Ether Express 16 LAN Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

IOReadyListShort = { "Late", "Never" }
IOReadyList      = { "Early", "Late", "Never" }
TransceiverList  = {"Thick Net (AUI/DIX)","Thin Net (BNC/COAX)","Twisted-Pair (TPE)"}

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------

[FileDependentDlgENG]
Combo1Label = "&IRQ Level:"
Combo2Label = "I/&O Port Address:"
Combo3Label = "I/O &Channel Ready:"
Combo4Label = "&Transceiver Type:"

EarlyWarning = "Use of the Early setting may cause system failure in some machines. "+
               "Are you sure you wish to continue?"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "EE_16"
Caption = $(FunctionTitle)

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOBaseAddrHexList)
Combo2Out  = $(IOBaseAddress)
Combo3List = $(IOReadyListDisplay)
Combo3Out  = $(IOReadyValue)
Combo4List = $(TransceiverList)
Combo4Out  = $(TransceiverValue)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List, Combo4List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out, Combo4Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADIN_INS)


#####oemnadep.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    IEEPRO = "Intel EtherExpress PRO Ethernet Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle = "Intel EtherExpress PRO Ethernet Adapter Setup"
;
; Software
;
ProductSoftwareDescription = "Intel EtherExpress PRO Ethernet Driver"
;
; Hardware
;
ProductHardwareDescription = "Intel EtherExpress PRO Ethernet Adapter"

;
; Dialog Message Information
;
IRQList = {"3", "5", "9", "10", "11"}
IOReadyList = { "Early", "Late", "Never", "Auto Detect" }
IOReadyListExt = { "Early", "Late", "Never", "Auto Detect" }
TransceiverList = {"Thick Net (AUI/DIX)","Thin Net (BNC/COAX)","Twisted-Pair (TPE)","Auto Connect"}

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------

[FileDependentDlgENG]

DlgType = "RadioCombination"
DlgTemplate = "EE_16"
Caption = $(FunctionTitle)

DlgText = "Please select values for the following fields:"

Combo1Label = "&Interrupt Number:"
Combo2Label = "I/O &Port Address:"
Combo3Label = "I/O &Channel Ready:"
Combo4Label = "&Transceiver Type:"

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOAddrList)
Combo2Out  = $(IOAddrValue)
Combo3List = $(IOReadyList)
Combo3Out  = $(IOReadyValue)
Combo4List = $(TransceiverList)
Combo4Out  = $(TransceiverValue)
ComboListItemsIn  = {Combo1List, Combo2List, Combo3List, Combo4List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out, Combo4Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADEP_INS)

#####oemnadn2.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NE2000              = "Novell NE2000 Compatible Adapter"
    NE2000SOCKETEA      = "Novell NE2000 Socket EA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitleNE2000   = "Novell NE2000 Compatible Network Card Setup"
FunctionTitleNE2000SOCKETEA   = "Novell NE2000 Socket EA Network Card Setup"


;
; Software
;
ProductSoftwareNE2000Description      = "Novell NE2000 Adapter Driver"
ProductSoftwareNE2000SOCKETEADescription      = "Novell NE2000 Socket EA Adapter Driver"
;
; Hardware
;
ProductHardwareNE2000Description        = "Novell NE2000 Adapter"
ProductHardwareNE2000SOCKETEADescription        = "Novell NE2000 Socket EA Adapter"
ProductSoftwareNE2000Title    = "Novell NE2000 Adapter Driver"
ProductSoftwareNE2000SOCKETEATitle    = "Novell NE2000 Socket EA Adapter Driver"
ProductHardwareNE2000Title      = "Novell NE2000 Adapter"
ProductHardwareNE2000SOCKETEATitle      = "Novell NE2000 Socket EA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------

[FileDependentDlgENG]
Label1 = "&IRQ Level:"
Label2 = "I/O &Port Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "NE2000"
Caption =  $(FunctionTitle$(Option))

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOBaseAddrHexList)
Combo2Out  = $(IOBaseAddress)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADN2_INS)

#####oemnadne.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NE3200     = "Novell NE3200 EISA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Novell 3200 EISA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Novell 3200 Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Novell NE3200 EISA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Novell 3200 Adapter Driver"
ProductHardwareTitle    = "Novell NE3200 EISA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for EISA
;

#####oemnads1.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SONICEISA     = "Sonic, EISA"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Sonic EISA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Sonic EISA Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Sonic, EISA"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Sonic EISA Adapter Driver"
ProductHardwareTitle    = "Sonic, EISA"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for EISA
;

#####oemnadnf.inf all
[LanguagesSupported]
    ENG
[OptionsTextENG]
    CPQTOK     = "<this option is no longer supported for install>"
    BONSAI     = "COMPAQ NetFlex-2 DualPort ENET Controller"
    RODAN      = "COMPAQ NetFlex-2 DualPort TR Controller"
    NETFLX     = "COMPAQ NetFlex/NetFlex-2 ENET-TR Controller"
    DURANGO    = "COMPAQ NetFlex-2 TR Controller"
    MAPLE      = "COMPAQ 32-Bit DualSpeed Token-Ring Controller"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cance&l"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "COMPAQ NetFlex Adapter Card Setup"
ProductSoftwareDescription        = "COMPAQ ENET-TR EISA Driver"
ProductHardwareBONSAIDescription  = "COMPAQ NetFlex-2 DualPort ENET Controller"
ProductHardwareRODANDescription   = "COMPAQ NetFlex-2 DualPort TR Controller"
ProductHardwareNETFLXDescription  = "COMPAQ NetFlex/NetFlex-2 ENET-TR Controller"
ProductHardwareDURANGODescription = "COMPAQ Token-Ring Controllers"
ProductHardwareCPQTOKDescription        = "COMPAQ 32-Bit DualSpeed Token-Ring Controller (ns)"
ProductHardwareMAPLEDescription        = "COMPAQ 32-Bit DualSpeed Token-Ring Controller"
CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ProductSoftwareTitle            = "COMPAQ ENET-TR Driver"
ProductHardwareBONSAITitle      = "COMPAQ NetFlex-2 DualPort ENET Controller"
ProductHardwareRODANTitle       = "COMPAQ NetFlex-2 DualPort TR Controller"
ProductHardwareNETFLXTitle      = "COMPAQ NetFlex/NetFlex-2 ENET-TR Controller"
ProductHardwareDURANGOTitle     = "COMPAQ NetFlex-2 TR Controller"
ProductHardwareCPQTOKTitle      = "COMPAQ 32-Bit Token-Ring Controller (ns)"
ProductHardwareMAPLETitle      = "COMPAQ 32-Bit Token-Ring Controller"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
Edit1Label = "&Network Address:"

;no translation needed after this

DlgType = "Edit"
DlgTemplate = "NETWORK_NUMBER"
Caption = $(FunctionTitle)

HelpContext = $(!IDH_DB_OEMNADNF_INS)

EditTextLim = 17
EditTextIn  = $(NetworkAddress)
EditFocus   = "ALL"
RCCtlFocusOn = 403


#####oemnadp3.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    P1390     = "Proteon p139X Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Proteon p139X Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Proteon Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Proteon p139X Adapter"

ProductSoftwareTitle    = "Proteon Adapter Driver"
ProductHardwareTitle    = "Proteon p139X Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Label1 = "&IRQ Level:"
Label2 = "I/O &Port Base Address:"
Label3 = "&DMA Channel:"
Group1 = "Cable &Type"
Group2 = "Card Sp&eed"

Radio1 = "&UTP"
Radio2 = "&STP"
Edit1Label = "&Network Address:"

;no translation needed after this

Radio3 = "&4"
Radio4 = "&16"

DlgType = "RadioCombination"
DlgTemplate = "PROTEON"
Caption = $(FunctionTitle)

CBOptionGreyed = {}
RadioOptionGreyed = {}

Combo1List = $(IRQ_List)
Combo1Out  = $(IRQLevel)

Combo2List = $(IOBaseAddressList)
Combo2Out  = $(IOBaseAddress)

Combo3List = $(DMA_List)
Combo3Out  = $(DMAChannel)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}


EditTextIn = $(NetworkAddress)
EditTextLim = 17
NotifyFields = {NO, NO, NO}
RCCtlFocusOn = 403

HelpContext = $(!IDH_DB_OEMNADP3_INS)

#####oemnadp9.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    P1990     = "Proteon p199X Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Proteon p199X Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Proteon Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Proteon p199X Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductHardwareTitle    = "Proteon p199X Adapter"
ProductSoftwareTitle    = "Proteon Adapter Driver"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Group1 = "Card Speed"
Radio1 = "&4"
Radio2 = "&16"
Edit1Label = "&Network Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "IBM_TOKEN"
Caption = $(FunctionTitle)
ComboListItemsIn = {}
ComboListItemsOut = {}
EditTextLim = 17
EditTextIn = $(NetworkAddress)
Edit1Label = "&Network Address:"

HelpContext = $(!IDH_DB_OEMNADP9_INS)

EditTextLim = 17
EditTextIn  = $(NetworkAddress)
EditFocus   = "ALL"
RCCtlFocusOn = 403

#####oemnadtk.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    IBMTOK     = "IBM Token Ring (ISA/PCMCIA) Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "IBM Token Ring Adapter Card Setup"
FunctionTitle1   = "IBM Token Ring PCMCIA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "IBM Token Ring (ISA/PCMCIA) Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "IBM Token Ring (ISA/PCMCIA) Adapter"

ProductSoftwareTitle    = "IBM Token Ring Adapter (ISA/PCMCIA) Driver"
ProductHardwareTitle    = "IBM Token Ring (ISA/PCMCIA) Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Group1 = "I/O Port Base Address"
Radio1 = "&Primary"
Radio2 = "&Secondary"
Edit1Label = "&Network Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "IBM_TOKEN"
Caption = $(FunctionTitle)
ComboListItemsIn = {}
ComboListItemsOut = {}
EditTextLim = 17
EditTextIn = $(NetworkAddress)

OptionsGreyed = {}

HelpContext = $(!IDH_DB_OEMNADTK_INS)
RCCtlFocusOn = 403

[SecondDlgENG]
Group1 = "Network Speed"
HelpContext = 1
Caption = $(FunctionTitle1)
Combo1Label = "Network &Speed:"
Combo2Label = "Card &IRQ Level:"
Combo3Label = "Memory &Base:"
Combo1List = $(SpeedList)
Combo1Out = $(Token1Speed)
Combo2List = $(IRQList)
Combo2Out = $(Token1IRQVal)
Combo3List = $(MMIOList)
Combo3Out = $(Token1MMIO)
DlgType = Combination
DlgTemplate = "WD"
ComboListItemsIn = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}
CBOptionsGreyed = {}
EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO, NO}
HelpContext = 1

#####oemnadub.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    UBPC     = "Ungermann-Bass Ethernet NIUpc Adapter"
    UBPCEOTP = "Ungermann-Bass Ethernet NIUpc/EOTP Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Ungermann-Bass Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Ungermann-Bass Adapter Driver"
;
; Hardware
;
ProductHardwareUBPCDescription          = "Ungermann-Bass Ethernet NIUpc Adapter"
ProductHardwareUBPCEOTPDescription      = "Ungermann-Bass Ethernet NIUpc/EOTP Adapter"
ProductHardwareUBPSDescription          = "Ungermann-Bass Ethernet NIUps Adapter"

ProductSoftwareTitle    = "Ungermann-Bass Driver"
ProductHardwareUBPCTitle        = "Ungermann-Bass Ethernet NIUpc Adapter"
ProductHardwareUBPCEOTPTitle    = "Ungermann-Bass Ethernet NIUpc/EOTP Adapter"
ProductHardwareUBPSTitle        = "Ungermann-Bass Ethernet NIUps Adapter"

IRQList  = ^(IRQChoices$(Option), 1)
IRQValues = ^(IRQChoices$(Option), 2)
IOBaseAddrList = ^(IOBaseAddrChoices, 1)
IOBaseAddrValues = ^(IOBaseAddrChoices, 2)
MemMappedWndAddrList = ^(MemMappedWndBaseAddrChoices$(Option), 1)
MemMappedWndAddrValues = ^(MemMappedWndBaseAddrChoices$(Option), 2)

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Label1 = "&Interrupt Number:"
Label2 = "I/O &Port Base Addr:"
Label3 = "&Memory Address:"

;no translation needed after this

DlgType = "Combination"
DlgTemplate = "UBNDIS"
Caption = $(FunctionTitle)

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOBaseAddrList)
Combo2Out  = $(IOBaseAddrValue)
Combo3List = $(MemMappedWndAddrList)
Combo3Out  = $(MemMappedWndAddrValue)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}

EditTextLim = ""
CBOptionsGreyed = {}

HelpContext = $(!IDH_DB_OEMNADUB_INS)

#####oemnadwd.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SMCISA = "SMC (WD) EtherCard"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "SMC (WD) ISA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "SMC (WD) Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "SMC (WD) ISA Adapter"

ProductSoftwareTitle    = "SMC (WD) Adapter Driver"
ProductHardwareTitle    = "SMC (WD) ISA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Combo1Label = "&IRQ Level:"
Combo2Label = "&Memory Base Address:"
Combo3Label = "I/&O Port Address:"

;no translation needed after this

DlgType = "MultiCombo"
DlgTemplate = "WD"
Caption = $(FunctionTitle)

Combo1List = $(IRQ_List)
Combo1Out  = $(IRQLevel)

Combo2List = $(WinBaseAddressHexList)
Combo2Out  = $(WinBaseAddress)

Combo3List = $(IOBaseAddressHexList)
Combo3Out  = $(IOBaseAddress)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}

EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO, NO}

HelpContext = $(!IDH_DB_OEMNADWD_INS)

#####oemnsvf1.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG
;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    FTPD     = "FTP Server"
;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "FTP Setup"
;
; Software
;
ProductSoftwareDescription      = "FTP Server"
;
; The user needs to install Microsoft TCP/IP before install FTP.
; If TCPIP does not exist in the registry, the inf file will popup this
; message and exit.
;
ProductSoftwareDisplayName      = "FTP Server"
ProductSoftwareTitle            = "FTP Server"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DefaultsENG]
AnonymousUsername = "guest"

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for FTP
;

#####oemnsvir.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    IPRIP = "RIP for Internet Protocol"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductIPRIPTitle       = "RIP for Internet Protocol"
ProductIPRIPDescription = "Routing Information Protocol. Enables a router to exchange routing information with other routers on an IP LAN."
ProductIPRIPDisplayName = "RIP for Internet Protocol"

[VerExistsENG]
    Ver   = " version "
    Text1 = " is already installed."

[InUseENG]
Error = "RIP for Internet Protocol is currently in use by other network protocols. Please remove all related services first."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"


#####oemnsvrr.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NWLNKRIP = "RIP for NwLink IPX/SPX compatible transport"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductNWLNKRIPTitle       = "RIP for NWLink IPX"
ProductNWLNKRIPDescription = "RIP for NWLink IPX"
ProductNWLNKRIPDisplayName = "RIP for NWLink IPX"

[VerExistsENG]
    Ver   = " version "
    Text1 = " is already installed. "

[InUseENG]
Error = "RIP for NWLink IPX is currently in use by other network protocols. Please remove all related services first."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[EnableNetbiosRoutingDlgENG]
DlgType = "MessageBox"
STF_MB_TITLE = "RIP for NWLink IPX Configuration"
STF_MB_TYPE  = 3
STF_MB_ICON  = 2
STF_MB_DEF   = 2

Enabled  = "NetBIOS Broadcast Propagation (broadcast of type 20 packets) is currently enabled. "$(!LF)+
           "If any Microsoft Windows clients use NwLink IPX to connect to this server, you must "+
           "enable this option to allow NwLink IPX to function correctly."$(!LF)+
           "Enable this option only if you understand the routing implications because it might "+
           "affect your network performance."$(!LF)$(!LF)+
           "Do you want to disable NetBIOS Broadcast Propagation?"

Disabled = "NetBIOS Broadcast Propagation (broadcast of type 20 packets) is currently disabled. "$(!LF)+
           "If any Microsoft Windows clients use NwLink IPX to connect to this server, you must "+
           "enable this option to allow NwLink IPX to function correctly."$(!LF)+
           "Enable this option only if you understand the routing implications because it might "+
           "affect your network performance."$(!LF)$(!LF)+
           "Do you want to enable NetBIOS Broadcast Propagation?"

[ConfigErrorTxtENG]
Error = "Could not open the NWLNKRIP\Parameters registry key."

#####oemnsvnb.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NETBIOS     = "NetBIOS Interface"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "NetBIOS Interface Setup"
;
; Software
;
ProductSoftwareDescription      = "Defines a software interface and naming convention for Microsoft networking."
ProductSoftwareDisplayName = "NetBIOS Interface"
ProductSoftwareTitle    = "NetBIOS Interface"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for NETBIOS
;
[InfoDlgCantConfigure]
InfoMsgTitle = "Information Message"
InfoMsgText = "The NETBIOS service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click OK."

#####oemnsvrp.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    RPCLOCATE   = "RPC Configuration"
    RPCBANYAN   = "RPC support for Banyan"

[LocatorNamesENG]
LocName1 = "Windows NT Locator"
LocName2 = "DCE Cell Directory Service"

[SecurityNamesENG]
SecName1 = "Windows NT Security Service"
SecName2 = "DCE Security Service"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Software
;
ProductSoftwareDescription      = "Remote Procedure Call service enables RPC-written programs to perform procedures on multiple computers. Includes the endpoint mapper and other RPC services."
ProductRPCTitle   = "RPC Configuration"
ProductRPCBanyanTitle   = "RPC support for Banyan"
ProductRPCBaynanSoftDescription      = "RPC support for Banyan"

RpcSrvDisplayNameRpcss   = "Remote Procedure Call (RPC) Service"
RpcSrvDisplayNameLocator = "Remote Procedure Call (RPC) Locator"
RpcSrvDisplayNameSSP     = "NT LM Security Support Provider"
RpcSuiteDisplayName      = "Remote Procedure Call Configuration"

[RPCLOCATEConstantsENG]
;
; Product Info
;
FunctionTitle   = "RPC Configuration"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[RPCBANYANConstantsENG]
;
; Product Info
;
FunctionTitle   = "RPC support for Banyan"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[RpcProviderDlgENG]
Caption = "RPC Configuration"

Edit1Label = "Network &Address:"

Combo1Label = "&Name Service Provider:"
Combo2Label = "&Security Service Provider:"
Help        = "&Help"
Continue    = "OK"
Cancel      = "Cancel"

;no translation needed after this

DlgType = Combination
DlgTemplate = "RPCPROVIDE"
EditTextIn = $(NetworkAddress)

EditFocus = "ALL"
EditTextLim = 50

Combo1List  = $(LocatorListboxNames)
Combo1Out   = $(LocatorChosenName)

Combo2List  = $(SecurityListboxNames)
Combo2Out   = $(SecurityChosenName)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

HelpContext = $(!IDH_DB_RPCLOCATE_INS)
ExitState   = "Active"
NotifyFields = { YES }

[NonFatalError1ENG]
NonFatal = "No network address was entered."

[NonFatalError2ENG]
NonFatal = "Network address ignored for Windows NT Locator."

[NonFatalError3ENG]
NonFatal = "The DCE Security Service is not installed on this computer."

#####oemnsvsv.inf all

;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SRV         = "Server"
;   XACTSRV     = "LAN Manager Translator"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Server"
;
; Software
;
ProductSRVDescription           = "Installs support for the SMB (Server Message Block) protocol, the core of Microsoft networking."
ProductXACTSRVDescription       = "Microsoft LAN Manager Translator Service"
ProductSRVDisplayName   = "Server"
ProductSRVTitle         = "Server"
ProductXACTDisplayName  = "XactSrv"
ProductSRVSRVDisplayName       = "Srv"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
GroupLabel = "Optimization:"

Radio1 = "&Minimize Memory Used"
Radio2 = "&Balance"
Radio3 = "M&aximize Throughput for File Sharing"
Radio4 = "Ma&ximize Throughput for Network Applications"

CheckBox1 = "Ma&ke Browser Broadcasts to LAN Manager 2.x Clients"

;no translation needed after this

DlgType = "RadioCombination"               ; DON'T NATIONALIZE
DlgTemplate = "LMSERVER"       ; DON'T NATIONALIZE
Caption = $(FunctionTitle)

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
ComboListItemsOut = {}

OptionsGreyed = {}

HelpContext = $(!IDH_DB_OEMNSVSV_INS)

#####oemnsvwk.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    WKSTA       = "Workstation"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

;
; Error Message
;
RemoveBrowserError = "The Browser may not be removed. Please remove the Workstation service first."
UpdateBrowserError = "You must update the Windows Workstation in order to update the Browser."

;
; Product Info
;
FunctionTitle   = "Workstation Services Setup"
;
; Software
;
ProductWKSTADescription         = "Installs the client for the SMB (Server Message Block) protocol, the core of Microsoft networking."
ProductNETLOGONDescription      = "Microsoft Network Authentication Service"
ProductALERTERDescription       = "Microsoft Alerter Service"
ProductBROWSERDescription       = "Distributed protocol required for running the Computer Browser service."
ProductMESSENGERDescription     = "Microsoft Messenger Service"
ProductRDRDescription           = "Microsoft Redirector Service"
ProductREPLDescription          = "Microsoft Directory Replicator Service"
ProductMUPDescription           = "Microsoft MUP Service"
ProviderRDRName                 = "NT Lan Manager"

ProductWKSTADisplayName = "Workstation"
ProductWKSTATitle       = "Workstation"
ProductNETLOGONDisplayName = "Net Logon"
ProductNETLOGONTitle    = "Net Logon"
ProductALERTERDisplayName = "Alerter"
ProductALERTERTitle     = "Alerter"
ProductBROWSERDisplayName = "Computer Browser"
ProductBROWSERTitle     = "Computer Browser"
ProductMESSENGERDisplayName = "Messenger"
ProductMESSENGERTitle   = "Messenger"
ProductRDRDisplayName   = "MRXSMB"
ProductRDRTitle         = "Redirector"
PruductRDRBSSDisplayName = "RDBSS"
ProductProviderName = "Microsoft Windows Network"
ProductREPLDisplayName  = "Directory Replicator"
ProductREPLTitle        = "Directory Replicator"
ProductMUPDisplayName   = "Mup"
ProductMUPTitle         = "Mup"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for workstation
;
#####oemnxpdl.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DLC     = "DLC Protocol"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "DLC Setup"
;
; Software
;
ProductSoftwareDescription      = "Data Link Control enables this computer to connect to an IBM mainframe and set up printers attached directly to network control."

ProductSoftwareDisplayName      = "DLC Protocol"
ProductSoftwareTitle    = "DLC Protocol"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for DLC
;

#####oemnxpnb.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NBF     = "NetBEUI Protocol"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "NetBEUI Protocol"
;
; Software
;
ProductSoftwareDescription      = "A nonroutable protocol designed for use in small LANs."
;
ProductSoftwareDisplayName = "NetBEUI Protocol"
ProductSoftwareTitle    = "NetBEUI Protocol"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
GroupLabel = "Optimization:"

Radio1 = "&Minimize Memory Used"
Radio2 = "&Balance"
Radio3 = "M&aximize Throughput && Connections"

;no translation needed after this

DlgType = "Radio"               ; DON'T NATIONALIZE
DlgTemplate = "NBF"             ; DON'T NATIONALIZE
Caption = $(FunctionTitle)

OptionsGreyed = {}

HelpContext = $(!IDH_DB_OEMNXPNB_INS)


#####oemnxpst.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    STREAMS = "Streams Environment"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductSTREAMSDescription       = "Enables transport drivers developed in STREAMS environments (popular on UNIX platforms) to port easily to Windows NT."
ProductSTREAMSDisplayName       = "Streams Environment"
ProductSTREAMSTitle     = "Streams Environment"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

StreamsAlreadyInstalled  = "Streams Environment is already installed in the system."
RefCountNotZeroMsg = "The Streams Environment is currently in use by other network protocols. Please removed all streams-based protocols first."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for STREAMS
;

;**************************************************************************
;
; BILLBOARD DIALOG SECTIONS
;
;**************************************************************************
[Billboard1ENG]
Status = "Installing STREAMS and related services..."

#####oemnxpnn.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    TCPIP     = "Old TCP/IP Protocol"
;   TELNET    = "Telnet"
;   NBT       = "RFC NetBIOS"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "TCP/IP Setup"
;
; Software
;
ProductTCPIPDescription         = "TCP/IP System Driver"
ProductNBTDescription           = "NBT System Driver"

ProductTCPIPDisplayName = "TCP/IP Protocol"
ProductTCPIPTitle       = "TCP/IP Protocol"

ProductTCPIPSYSDisplayName = "Tcpipsys"
ProductTCPIPSYSTitle    = "TCP/IP Network Transport Driver"

ProductNBTDisplayName   = "TCP/IP NetBIOS"
ProductNBTTitle         = "TCP/IP NetBIOS"

ProductNBTSYSDisplayName = "Nbtsys"
ProductNBTSYSTitle      = "RFC NetBIOS Driver"

ProductTELNETDisplayName = "Telnet"
ProductTELNETTitle      = "Telnet Networking Support Environment"

ProductTELNETSYSDisplayName = "Telnetsys"
ProductTELNETSYSTitle     = "Telnet Driver"

ProductLOOPDisplayName  = "Loop"
ProductLOOPTitle        = "Loop Support Environment"

ProductLMHOSTSDisplayName = "TCP/IP NetBIOS Helper"
ProductLMHOSTSTitle     = "TCP/IP NetBIOS Helper"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for TCPIP
;
;----------------------------------------------
; INFO DIALOG
;----------------------------------------------
[InfoDlg]
STF_MB_TITLE = "Information Message"

;no translation needed after this

DlgType = "MessageBox"
STF_MB_TEXT  = $(InfoMsgText)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

[InfoDlgCantConfigure]
InfoMsgText = "The TCP/IP service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click  OK.  You will then have the opportunity to configure the adapters."

;----------------------------------------------
; WARNING DIALOG
;----------------------------------------------
[WarningDlgENG]
STF_MB_TITLE = "TCP/IP Setup Warning"

;no translation needed after this

DlgType = "MessageBox"
STF_MB_TEXT  = $(Error)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

;**************************************************************************
;
; BILLBOARD DIALOG SECTIONS
;
;**************************************************************************
[Billboard1ENG]
Status = "Installing TCP/IP and related services..."

[LMHOSTDlgENG]

Caption = "Import LMHOSTS File"
Import = "&Import"

DlgText = "If you want to import an existing LMHOSTS file, enter the directory path where the file is located and choose Import. Otherwise, choose Continue."

;no translation needed after this

DlgType = "Edit"
DlgTemplate = "LMHOST"
EditTextIn = ""

HelpContext = $(!IDH_DB_LMHOST_INS)

[LMHOSTAskSourceStringsENG]
String1 = "Error processing path entered.  Please reenter the path."

String2 = "Setup requires a full path of the Windows NT distribution files.  "+
          "Please reenter the path."

String3 = "Setup failed to find a free drive to use to connect to the "+
          "server specified.  Please free up some drives and try again."

String4 = "Setup failed to connect to the server specified.  Please reenter "+
          "the path."

String5 = "You just typed in a new LMHOSTS file path. Are you sure that you want to use the default LMHOSTS file?"

#####utility.inf all
[AFDVars]
;
; AFD Software data
;
ProductAFDTitle         = "AFD Networking Support Environment"
;
; don't localize the next 3 lines
;
ProductAFDName          = "Afd"
ProductAFDImagePath     = "\SystemRoot\System32\drivers\afd.sys"
ProductAFDSvcType       = "kernelautostart"

;---------------------------------------------
;
;  Section used to build RegistryErrorList$(STF_LANGUAGE)
;
[RegistryErrorsENG]
UNABLE_ACCESS_SOFTWARE_REG,"Unable to access SOFTWARE subtree in Registry"
UNABLE_CREATE_MANUFACTURER_KEY,"Unable to create Manufacturer key in Registry"
UNABLE_OPEN_MICROSOFT_KEY,"Unable to open Microsoft subkey in Registry"
UNABLE_CREATE_PRODUCT_KEY,"Unable to create subkey in Registry for Windows NT"
UNABLE_CREATE_PRODUCT_VERSION,"Unable to create version subkey in Registry for Windows NT"
UNABLE_CREATE_NETRULES_KEY,"Unable to create a NetRules subkey in Registry"
UNABLE_OPEN_HARDWARE_SECTION,"Unable to open HARDWARE subkey in Registry"
UNABLE_OPEN_NETWORKCARD_SECTION,"Unable to open NetworkCards subkey in Registry"
UNABLE_OPEN_EVENTLOG_SUBKEY,"Unable to open Eventlog subkey in Registry"
UNABLE_CREATE_NETCARD_CONFIGURATION,"Unable to create entry for network adapter in Registry"
UNABLE_ACCESS_CONFIGURE_SERVICE,"Unable to access Services subkey in Registry"
UNABLE_CREATE_CONFIGURE_SERVICE,"Unable to create Services subkey in Registry"
UNABLE_CREATE_SERVICE_SUBKEY,"Unable to create Services subkey in Registry"
INVALID_DATA_PASSED,"Invalid data passed to Registry utility routine"
SERVICE_ALREADY_EXISTS,"Registry Service subkey already exists"
OPERATION_UNIMPLEMENTED,"Registry operation UNIMPLEMENTED"
CANNOT_FIND_COMPONENT_SERVICE,"Component service name not found or non-existent"
CANNOT_CONFIGURE_HARDWARE,"Cannot configure the hardware component"
CANNOT_CONFIGURE_SOFTWARE,"Cannot configure the software component"
UNABLE_WRITE_REGISTRY, "Cannot write to registry"
UNABLE_INSTALL, "Installation Error"
PROVIDER_ALREADY_EXISTED, "Provider already exists in Registry"
PROVIDER_ORDER_DOES_NOT_EXIST, "Provider order does not exist in Registry."
TCPIP_NONEXIST_ERROR, "Please install Microsoft TCP/IP before installing SNMP."
TCPIP_NONEXIST_ERROR_FTPD, "Please install Microsoft TCP/IP before installing FTP Server."
NO_BINDING_INFO, "Missing Binding Information. Please click BINDINGS button first."
CANNOT_OPEN_EVENTLOG_KEY, "Cannot open Eventlog subkey in Registry."
CANNOT_CREATE_SNMPPROXYKEY, "Cannot create SNMP Proxy subkey in Registry."
REF_COUNT_NOT_ZERO, "Please remove all related network adapter cards before removing the software driver."
UNABLE_REMOVE_CONFIGURE_SERVICE,"Unable to remove Services subkey for a software driver in Registry"
UNABLE_ACCESS_WINSOCK_MAP_INFO,"Unable to access WinSock mapping information in DLL"
VERIFY_WARNING,"The current netcard parameters are not verifiably correct and may result in usage problems or system failure.  Use them anyway?"
CANNOT_DETECT,"Setup is unable to obtain network adapter information from the associated network adapter DLL files.  Operation cannot continue."
UNABLE_COPY_FILE,"File copy operation failed."
ASK_SOURCE_FAIL,"Failed to obtain source file location."
SETUP_FAIL,"Setup operation failed."
SERVICE_MARKED_FOR_DELETE,"This network component has recently been removed. Please restart your computer before installing it again."
REBOOT_MACHINE_BEFORE_ADD_ADAPTER,"This network component has recently been removed. Please restart your computer before installing it again."
CANT_REMOVE_WKSTA_NTAS,"The Workstation cannot be removed on a Windows NT Domain Controller."
CANT_REMOVE_SERVER_NTAS,"The Server cannot be removed on a Windows NT Domain Controller."
NO_ERROR, ""
DLC_NONEXIST_ERROR, "Please install Microsoft DLC before installing Remoteboot."
NBF_NONEXIST_ERROR, "Please install the NetBEUI protocol before installing Remoteboot."
UNABLE_ADD_NAMESPACE_PROVIDER, "Unable to add software component as a Name Space Provider"
UNABLE_REMOVE_NAMESPACE_PROVIDER, "Unable to remove Name Space Provider"

[RegistryErrorUnknownENG]
Error_Bogus = "UNKNOWN REGISTRY FAILURE"

;
;---------------------------------------------
;
; Section used for version already exists dialog
;

[VerExistedENG]
ver = " ver "
Text = " already exists on the system. Please use [Update] to update the software."

[CardExistedENG]
Text = "A network card of this type is already installed in the system. Do you want to continue?"

;---------------------------------------------

;*************************************************************************
;  end of section  RemoveNetworkProvider
;*************************************************************************

[ProgressCopyENG]
    ProCaption   = "Windows NT Networking Setup"
    ProCancel    = "Cancel"
    ProCancelMsg = "Windows NT is not correctly installed.  Are you sure you want "+
                   "to cancel copying files?"
    ProCancelCap = "Setup Message"
    ProText1     = "Copying:"
    ProText2     = "To:"
    Error        = "Unable to determine proper source disk location; copy cannot be performed."

#####oemnxpi1.inf all
;------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
;       This lists the languages supported by this file.
;       If you add other languages to this list, you must
;       also add the appropriate text sections for the new
;       language
;------------------------------------------------------------------
[LanguagesSupported]
    ENG

;-------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
;
;       These are the text strings used to identify the options to
;       the user.  There should be a header and entry for every
;       language listed in the "LanguagesSupported" section.
;-------------------------------------------------------------------
[OptionsTextENG]
    NWLINK     = "Old NWLink IPX/SPX Compatible Transport"

;--------------------------------------------------------------------
;       Language Dependent Dialog Constants
;--------------------------------------------------------------------
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle            = "NWLink Setup"
ProductNWLINKDescription  = "NWLink Transport Driver"
ProductNWNBLINKDescription   = "NWLink NetBIOS Driver"
ProductNWLINKDisplayName = "NWLink"
ProductNWLINKTitle       = "NWLink Transport"
ProductNWLINKSYSDisplayName = "NWLinksys"
ProductNWLINKSYSTitle    = "NWLINK Transport Driver"
ProductNWNBLINKDisplayName  = "NWNBLink"
ProductNWNBLINKTitle        = "NWLink NetBIOS"
ProductNWNBLINKSYSDisplayName = "NWNBLinksys"
ProductNWNBLINKSYSTitle     = "NWLINK NetBIOS Driver"

CompetitorDisplayName = "Novell IPX/SPX II Transport"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[FileDependentDlgENG]
;
;--- No UI for NWLINK
;

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlg]
STF_MB_TITLE = "Information Message"

;
; don't need to localize the dialog type
;
DlgType      = "MessageBox"
STF_MB_TEXT  = $(InfoMsgText)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlgCantConfigure]
InfoMsgText = "The NWLINK service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click  OK.  You will then have the opportunity to configure the adapters."

;--------------------------------------------------------------------
;       Get the string to use while doing the install
;--------------------------------------------------------------------
[Billboard1ENG]
Status = "Installing NWLINK and related services..."

[FatalError1ENG]
Error = "Another IPX/SPX protocol driver is currently installed in this machine, "+
        "and the network interface cannot operate properly with both drivers installed. "+
        "If you still wish to install the NWLINK protocol driver, you must first "+
        "remove the "$(CompetitorDisplayName)" component and reboot your machine."

#####oemnadn1.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NE1000     = "Novell NE1000 Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Novell NE1000 Network Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Novell NE1000 Adapter Driver"
;
; Hardware
;
ProductHardwareNE1000Description        = "Novell NE1000 Adapter"
ProductSoftwareTitle    = "Novell NE1000 Adapter Driver"
ProductHardwareNE1000Title      = "Novell NE1000 Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------

[FileDependentDlgENG]
Label1 = "&IRQ Level:"
Label2 = "I/O &Port Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "NE2000"
Caption = $(FunctionTitle)

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOBaseAddrHexList)
Combo2Out  = $(IOBaseAddress)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADN2_INS)

#####oemnadlb.inf all
[LanguagesSupported]
    ENG

[OptionsTextENG]
    LOOP     = "MS Loopback Adapter"

[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "MS Loopback Adapter Card Setup"
ProductSoftwareDescription = "MS Loopback Adapter Driver"
ProductHardwareDescription = "MS Loopback Adapter"
ProductSoftwareTitle    = "MS Loopback Adapter Driver"
ProductHardwareTitle    = "MS Loopback Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[FileDependentDlgENG]
DlgType = "MultiCombo"
DlgTemplate = "SINGLE_COMBO"
Label1 = "&Frame Type:"
Caption = $(FunctionTitle)
Combo1List = $(MediaList)
Combo1Out  = $(MediaChoice)
ComboListItemsIn  = {Combo1List}
ComboListItemsOut = {Combo1Out}
HelpContext = $(!IDH_DB_OEMNADLB_INS)


#####oemnade3.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNK3ISA509     = "3Com Etherlink III ISA/PCMCIA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "3Com Etherlink III Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com Etherlink III Adapter Driver"
;
; Hardware
;
ProductHardwareELNK3ISA509Description        = "3Com Etherlink III Adapter"
ProductSoftwareTitle    = "3Com Etherlink III Adapter Driver"
ProductHardwareELNK3ISA509Title = "3Com Etherlink III Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

TransceiverList  = {"10 Base T", "Thick Net (AUI/DIX)","","Thin Net (BNC/COAX)"}
TransceiverDisplayList  = {"10 Base T", "Thick Net (AUI/DIX)","Thin Net (BNC/COAX)"}

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Label1 = "I/O &Port Address:"
Label2 = "&Interrupt Number:"
Label3 = "&Transceiver Type:"

;no translation needed after this

DlgType = "Combination"
DlgTemplate = "UBNDIS"
Caption = $(FunctionTitle)

Combo1List = $(IOADDR_Hex_List)
Combo1Out  = $(IOADDR_Hex_Value)
Combo2List = $(IRQList)
Combo2Out  = $(IRQValue)
Combo3List = $(TransceiverDisplayList)
Combo3Out  = $(TransceiverValue)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO, NO}

HelpContext = $(!IDH_DB_OEMNADE3_INS)

#####oemnadee.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNK3EISA     = "3Com Etherlink III EISA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;                             a
; Product Info
;
FunctionTitle   = "3Com Etherlink III EISA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com Etherlink III Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "3Com Etherlink III EISA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "3Com Etherlink III Adapter Driver"
ProductHardwareTitle    = "3Com Etherlink III EISA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for EISA
;

#####oemnaden.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNK3MCA     = "3Com Etherlink III MCA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "3Com Etherlink III MCA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com Etherlink III MCA Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "3Com Etherlink III MCA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "3Com Etherlink III MCA Adapter Driver"
ProductHardwareTitle    = "3Com Etherlink III MCA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;

#####oemnadnm.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NE2000MCA     = "NE/2 and compatible MC Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "NE/2 and compatible MC Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "NE/2 and compatible MC Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "NE/2 and compatible MC Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "NE/2 and compatible MC Adapter Driver"
ProductHardwareTitle    = "NE/2 and compatible MC Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Label1 = "&IRQ Level:"
Label2 = "I/O &Port Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "NE2000"
Caption = $(FunctionTitle)

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOBaseAddrHexList)
Combo2Out  = $(IOBaseAddress)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADN2_INS)


#####oemnadfd.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NPMCA     = "Network Peripherals FDDI, MCA"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Network Peripherals FDDI, MCA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Network Peripherals FDDI, MCA Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Network Peripherals FDDI, MCA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Network Peripherals FDDI, MCA Adapter Driver"
ProductHardwareTitle    = "Network Peripherals FDDI, MCA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;

#####oemnsvsn.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SNMP     = "SNMP Service"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "SNMP Setup"
;
; Software
;
ProductSoftwareDescription      = "Simple Network Management Protocol service that enables a Windows NT computer to be administered remotely with an SNMP management tool."
;
; The user needs to install Microsoft TCP/IP before install SNMP.
; If TCPIP does not exist in the registry, the inf file will popup this
; message and exit.
;
ProductSoftwareDisplayName      = "SNMP Service"
ProductSoftwareTitle    = "SNMP Service"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for SNMP
;

#####oemnsvcu.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    TCPIPCU = "TCP/IP Utilities"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProductTCPIPCUTitle = "TCP/IP Utilities"
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

GroupName    = "Accessories"
IconName     = "Telnet"

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
;


#####oemnsvsa.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SAP = "SAP Agent"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductSAPTitle       = "SAP Agent"
ProductSAPDescription = "Service Advertising Protocol advertises servers and addresses on a network."
ProductSAPDisplayName = "SAP Agent"

[InUsed]
Error = "SAP Agent is currently in use by other network protocols. Please remove all related services first."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
;


#####oemnsvwi.inf
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG
;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    WINS     = "Windows Internet Name Service"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Windows Internet Name Service Setup"
;
; Software
;
ProductSoftwareDescription      = "Dynamic name registration and resolution service that maps NetBIOS computer names to IP addresses."
ProductSoftwareDisplayName      = "Windows Internet Name Service"
ProductSoftwareTitle            = "Windows Internet Name Service"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

OldGroupName    = "Network Administration"
GroupName    = "Administrative Tools"
IconName     = "WINS Manager"

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for WINS
;

#####oemnsvdh.inf
[LanguagesSupported]
    ENG
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

[FileConstantsENG]
ProductDHCPDisplayName  = "Microsoft DHCP Server"
ProductDHCPTitle        = "Microsoft DHCP Server"
ProductDHCPDescription  = "Automatically assigns IP addresses to other computers running the DHCP (Dynamic Hose Configuration Protocol) Client Service."
OldGroupName    = "Network Administration"
GroupName    = "Administrative Tools"
IconName     = "DHCP Manager"

[OptionsTextENG]
        DHCP = "Microsoft DHCP Server"

[DHCPServerDialog]
DHCPTxt = "If any adapters are using DHCP to obtain an IP address, they are now "+
           "required to use a static IP address.  Press Close on the Network Control Panel "+
           "and the TCP/IP Property Sheet will be displayed allowing you to enter an address."
STF_MB_TITLE = $(DHCP)
DlgType = "MessageBox"
STF_MB_TEXT  = $(DHCPTxt)
STF_MB_TYPE  = 1
STF_MB_ICON  = 2
STF_MB_DEF   = 1

#####oemnsvdn.inf
[LanguagesSupported]
    ENG
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

[FileConstantsENG]
ProductDNSDisplayName  = "Microsoft DNS Server"
ProductDNSTitle        = "Microsoft DNS Server"
ProductDNSDescription  = "The Domain Name System maps DNS domain names to IP addresses."

OldGroupName = "Network Administration"
GroupName = "Administrative Tools"
IconName  = "DNS Manager"


[OptionsTextENG]
        DNS = "Microsoft DNS Server"

#####oemnsvsp.inf
[LanguagesSupported]
    ENG
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductSTCPIPDisplayName        = "Simple TCP/IP Services"
ProductSTCPIPTitle              = "Simple TCP/IP Services"
ProductSTCPIPDescription        = "Client programs for simple network protocols, including Character Generator, Daytime, Echo and Quote of the Day."

[OptionsTextENG]
    STCPIP = "Simple TCP/IP Services"

#####oemnsvtp.inf
[LanguagesSupported]
    ENG
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductLPDDisplayName = "TCP/IP Print Server"
ProductLPDTitle = "Microsoft TCP/IP Printing"
ProductLPDDescription = "Enables Windows NT to print to TCP/IP-connected printers or to printers that are physically attached to UNIX computers."

[OptionsTextENG]
        TCPPRINT = "Microsoft TCP/IP Printing"

#####oemnxptc.inf
[LanguagesSupported]
    ENG
[OptionsTextENG]
    TC     = "TCP/IP Protocol"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
NoNewComponents = "No New Components to Install."
FunctionTitle   = "TCP/IP Setup"
ProductNETBTDescription           = "NetBT System Driver"
ProductNETBTDisplayName   = "WINS Client(TCP/IP)"
ProductNETBTTitle         = "WINS Client(TCP/IP)"
ProductTELNETDisplayName = "Telnet"
ProductTELNETTitle      = "Telnet Networking Support Environment"
ProductTELNETSYSDisplayName = "Telnetsys"
ProductTELNETSYSTitle     = "Telnet Driver"
ProductLMHOSTSDisplayName = "TCP/IP NetBIOS Helper"
ProductLMHOSTSTitle     = "TCP/IP NetBIOS Helper"
ProductDHCPDisplayName = "DHCP Client"
ProductDHCPTitle     = "DHCP Client"
ProductTCDisplayName = "TCP/IP Service"
ProductTCTitle     = "TCP/IP Protocol"
ProductTCDescription         = "Transport Control Protocol/Internet Protocol. The default wide area network protocol that provides communication across diverse interconnected networks."
ProviderDisplayName     = "TCP/IP"
LDAPProviderDisplayName = "NTDS"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
RASRebindError = "Setup has discovered that you have Remote Access Services installed. Do you want to configure RAS to support the TCP/IP protocol?"

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
[InfoDlg]
STF_MB_TITLE = "Information Message"
DlgType = "MessageBox"
STF_MB_TEXT  = $(InfoMsgText)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

[DHCPDialog]
DHCPText = "If there is a DHCP server on your network, TCP/IP can be configured to dynamically provide"+
                 " an IP address.  If you are not sure, ask your system administrator.  Do you wish to use DHCP?"
STF_MB_TITLE = "TCP/IP Setup"
DlgType = "MessageBox"
STF_MB_TEXT  = $(DHCPText)
STF_MB_TYPE  = 3
STF_MB_ICON  = 5
STF_MB_DEF   = 2

[InfoDlgCantConfigure]
InfoMsgText = "The TCP/IP service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click  OK or CLOSE.  You will then have the opportunity to configure the adapters."
[WarningDlgENG]
STF_MB_TITLE = "TCP/IP Setup Warning"
DlgType = "MessageBox"
STF_MB_TEXT  = $(Error)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1
[Billboard1ENG]
Status = "Installing TCP/IP and related services..."

#####oemnxpip.inf all
;------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
;       This lists the languages supported by this file.
;       If you add other languages to this list, you must
;       also add the appropriate text sections for the new
;       language
;------------------------------------------------------------------
[LanguagesSupported]
    ENG

;-------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
;
;       These are the text strings used to identify the options to
;       the user.  There should be a header and entry for every
;       language listed in the "LanguagesSupported" section.
;-------------------------------------------------------------------
[OptionsTextENG]
    NWLNKIPX     = "NWLink IPX/SPX Compatible Transport"

;--------------------------------------------------------------------
;       Language Dependent Dialog Constants
;--------------------------------------------------------------------
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle            = "NWLink IPX/SPX Compatible Transport Setup"
ProductNWLNKIPXDescription  = "An implementation of the IPX and SPX protocols, which are used by the NetWare networks."
ProductNWLNKIPXDisplayName = "NWLink IPX/SPX Compatible Transport Protocol"
ProductNWLNKIPXTitle       = "NWLink IPX/SPX Compatible Transport"

ProductNWLNKNBDescription   = "Enables Novell NetBIOS packets to be sent between a NetWare server running Novell NetBIOS and a Windows NT computer, or between two Windows NT computers."
ProductNWLNKNBDisplayName  = "NWLink NetBIOS"
ProductNWLNKNBTitle        = "NWLink NetBIOS"
ProductNWLNKNBSYSDisplayName = "NWLinkNBsys"
ProductNWLNKNBSYSTitle     = "NWLINK NetBIOS Driver"

ProductNWLNKSPXDescription  = "NWLink SPX Protocol Driver"
ProductNWLNKSPXDisplayName = "NWLink SPX/SPXII Protocol"
ProductNWLNKSPXTitle       = "NWLink SPX Protocol"

CompetitorDisplayName = "NWLink IPX/SPX II Transport"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

RASRebindError = "Setup has discovered that you have Remote Access Services installed. Do you want to configure RAS to support the NWLINK protocol?"
InstallRip     = "Do you want to install the IPX Rip Router?"

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[FileDependentDlgENG]
;
;--- No UI for NWLNK
;

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlg]
STF_MB_TITLE = "Information Message"

;
; don't need to localize the dialog type
;
DlgType      = "MessageBox"
STF_MB_TEXT  = $(InfoMsgText)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlgCantConfigure]
InfoMsgText = "The IPX Protocol service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click  OK.  You will then have the opportunity to configure the adapters."

[InUseENG]
InfoMsgText = "The IPX Protocol service is being used by another service(s). "+
    "Please remove other related components before removing IPX Protocol."

;--------------------------------------------------------------------
;       Get the string to use while doing the install
;--------------------------------------------------------------------
[Billboard1ENG]
Status = "Installing IPX Protocol and related services..."

[FatalError1ENG]
Error = "Another IPX/SPX protocol driver is currently installed in this machine, "+
        "and the network interface cannot operate properly with both drivers installed. "+
        "If you still wish to install the NWLNK protocol driver, you must first "+
        "remove the "$(CompetitorDisplayName)" component and reboot your machine."

#####oemnsvnw.inf
[LanguagesSupported]
    ENG
;
; Language depended section
;
[WorkstationENG]
    NWType = "Client Service for NetWare"
    NWDescription = "Enables this computer to log on to NetWare servers and access their resources."
[GatewayENG]
    NWType = "Gateway Service for NetWare"
    NWDescription = "Enables other Windows NT computers to access NetWare servers without running NetWare Client software."
[OptionsWINNTTextENG]
    NWWKSTA       = "Client Service for NetWare"
[OptionsLANMANNTTextENG]
    NWWKSTA       = "Gateway (and Client) Services for NetWare"

[FileConstantsENG]
NotEnoughSpace = "Out of disk space. Please remove some files before install "$(NWType)"."
UpgradeBetaOnTopOfDaytona = "You cannot update the beta version of "$(NWType)" over Windows NT 3.51's "$(NWType)"."
InstallNWLINKFirst = "Please install the NWLINK IPX/SPX Compatible Transport before you install the "$(NWType)"."
InstallNTWKSTAFirst = "Please install the Windows NT Workstation service before you install the "$(NWType)"."
RemoveAndReboot    = "Please remove any existing "$(NWType)" component and reboot your machine before installing the latest version of "$(NWType)"."
UpgradeFirst = "Please install the Windows NT patch before installing the "$(NWType)"."
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = $(NWType)" Setup"
ProductNWWKSTADescription         = $(NWDescription)
ProductNWRDRDescription           = "NetWare Redirector Compatible Service"
ProviderRDRName                 = "NetWare Compatible Redirector"
ProductNWWKSTATitle       = $(NWType)
ProductNWWKSTADisplayName = $(NWType)
ProductNWRDRDisplayName   = "NetWare Rdr"
ProductNWRDRTitle         = "NetWare Redirector"
ProductProviderName = "NetWare Network"
ProductProviderDisplayName = "NetWare or Compatible Network"
ProductPrintProviderName = "NetWare or Compatible Network"
OldPrintProviderName = "Netware(R) Network"
OldPrintProviderName2 = "NetWare Network"
REM1 = "REM Install network redirector"

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
ShellCodeErrorText = "Shell Code Error"

[FileDependentDlgENG]
; nothing



#####oemnsvbh.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NETMON      = "Network Monitor Agent"
    NETMONTOOLS = "Network Monitor Tools and Agent"


;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
;
; Software
;
ProductNMAgentDisplayName  = "Network Monitor Agent"

;
; Software Tools
;
NETMONTOOLSSoftwareTitle  = "Network Monitor Tools and Agent"
NETMONSoftwareTitle       = "Network Monitor Agent"


[NETMONConstantsENG]
;
; Product Info
;
ProductSoftwareTitle       = $(NETMONSoftwareTitle)
ProductSoftwareDescription = "Informs monitoring programs, such as Performance Monitor and Network Monitor, of network transactions for this computer."
ProductSoftwareDisplayName = $(ProductSoftwareTitle)" Driver"

FunctionTitle   =  $(ProductSoftwareTitle)

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[NETMONTOOLSConstantsENG]
;
; Product Info
;
ProductSoftwareTitle       = $(NETMONTOOLSSoftwareTitle)
ProductSoftwareDescription = "A software package for monitoring and troubleshooting network transactions"
ProductSoftwareDisplayName = $(ProductSoftwareTitle)" Drivers"

FunctionTitle   = $(ProductSoftwareTitle)

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[IconInfoENG]
    OldNetAdminGroupName = "Network Administration"
    NetAdminGroupName = "Administrative Tools"
    NetMonitor = "Network Monitor"



#####oemnsvri.inf
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    REMOTEBOOT     = "Remoteboot Service"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Remoteboot Setup"
;
; Software
;
ProductSoftwareDescription      = "Starts MS-DOS and Microsoft Windows workstations over the network."
ProductSoftwareDisplayName      = "Remoteboot Service"
ProductSoftwareTitle    = "Remoteboot Service"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
;
; Program group information
;
OldRplGroup    = "Network Administration"
RplGroup    = "Administrative Tools"
RplMgr    = "Remoteboot Manager"


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Edit1Label = "&Remoteboot directory:"
CheckBox1 = "&Migrate Remoteboot directory from LAN Manager 2.2"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "QUERY_RPL_PATH"
Caption = $(FunctionTitle)
CBOptionsGreyed = {}
ComboListItemsIn = {}
ComboListItemsOut = {}

HelpContext = $(!IDH_DB_OEMNSVRI_INS)

EditTextLim = 256
EditTextIn  = $(RPLDIR)
EditFocus   = "ALL"
RCCtlFocusOn = 403

[NonFatalError1ENG]
Error = "The Remoteboot directory must be an absolute path."

[DoAskSourceDlgTextENG]
    DlgText = "Setup needs to copy Remoteboot Client files. These files are located "+
              "in the \CLIENTS\RPL directory of the Windows NT Server CD."$(!LF)$(!LF)+
              "If you want Setup to look in a different place, type the new location below. "+
              "When the location is correct, click Continue."

#####oemnadt2.inf all
[LanguagesSupported]
    ENG
[OptionsTextENG]
    IBMTOK2ISA     = "IBM Token-Ring Network 16/4 ISA Adapter II"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "IBM Token-Ring 16/4 Adapter II Card Setup"
ProductSoftwareDescription      = "IBM Token-Ring 16/4 ISA Adapter II Driver"
ProductHardwareIBMTOK2ISADescription        = "IBM Token-Ring 16/4 ISA Adapter II"
ProductSoftwareTitle    = "IBM Token-Ring 16/4 ISA Adapter II Driver"
ProductHardwareIBMTOK2ISATitle = "IBM Token-Ring 16/4 ISA Adapter II"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
Combo1Label = "I/O &Port Address:"
DlgType = "RadioCombination"
DlgTemplate = "IBMTOK2"
Caption = $(FunctionTitle)
Combo1List = $(IOADDR_Hex_List)
Combo1Out  = $(IOADDR_Hex_Value)
ComboListItemsIn  = {Combo1List}
ComboListItemsOut = {Combo1Out}
EditTextLim = 17
EditTextIn = $(NetworkAddress)
Edit1Label = "&NetworkAddress"
HelpContext = $(!IDH_DB_OEMNADT2_INS)

#####oemnadte.inf all
[LanguagesSupported]
    ENG
[OptionsTextENG]
    IBMTOK2E     = "IBM Token Ring EISA Adapter"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "IBM Token Ring EISA Adapter Card Setup"
ProductSoftwareDescription      = "IBM Token Ring EISA Adapter Driver"
ProductHardwareDescription      = "IBM Token Ring EISA Adapter"
CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ProductHardwareTitle    = "IBM Token Ring EISA Adapter"
ProductSoftwareTitle    = "IBM Token Ring EISA Adapter Driver"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
Edit1Label = "&Network Address:"
DlgType = "Edit"
DlgTemplate = "NETWORK_NUMBER"
Caption = $(FunctionTitle)
HelpContext = $(!IDH_DB_OEMNADTE_INS)
EditTextLim = 17
EditTextIn  = $(NetworkAddress)
EditFocus   = "ALL"
RCCtlFocusOn = 403



#####oemnsvrc.inf
[LanguagesSupported]
    ENG
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

#####oemnadpm.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    P189X     = "ProNET-4/16 p189X NIC"

[PacketChoices]
Packet1="4Kb",4210
Packet2="18Kb",17986

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

FunctionTitle   = "Proteon p189X Adapter Card Setup"
ProductSoftwareDescription      = "Proteon RapiDriver"
ProductHardwareDescription      = "Proteon p189X ProNET-4/16 NIC"
CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ProductHardwareTitle    = "Proteon p189X ProNET-4/16 NIC"
ProductSoftwareTitle    = "Proteon RapiDriver"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Group1 = "CardSpeed"
Radio1 = "&4"
Radio2 = "&16"
Edit1Label = "&Network Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "IBM_TOKEN"
Caption = $(FunctionTitle)
ComboListItemsIn = {}
ComboListItemsOut = {}
EditTextLim = 17
EditTextIn = $(NetworkAddress)

OptionsGreyed = {}

HelpContext = $(!IDH_DB_OEMNADP9_INS)
RCCtlFocusOn = 403

#####oemnadar.inf all
[OptListENG]
OptList_1 = tc$arcnet "Arcnet/TCNS (All Types)",     "tcarc", "ARCNET/TCNS Adapter", "ARCNET or Thomas-Conrad TCNS Adapter"
OptList_2 = tc$tcns,  "Thomas-Conrad TCNS",          "tcarc", "TCNS Adapter",        "Thomas-Conrad 100Mbps TCNS"

[FileConstantsENG]
   ProCaption              = "Windows NT Setup"
   ProCancel               = "Cancel"
   ProCancelMsg            = "Your ARCNET/TCNS Windows NT Networking "+
                             "Adapter is not correctly installed.  Are "+
                             "you sure you want to cancel copying files?"
   ProCancelCap            = "Network Setup Message"
   ProText1                = "Copying:"
   ProText2                = "To:"
   SoftwareTitle           = "ARCNET/TCNS Driver"
   SoftwareDescription     = "ARCNET/TCNS Adapter Driver"

[DialogConstantsENG]
   Help                    = "&Help"
   Exit                    = "Cancel"
   OK                      = "OK"
   HelpContext             = ""
   Continue                = "Continue"
   Cancel                  = "Cancel"
   FunctionTitle           = "ARCNET/TCNS Adapter Setup"
   InterruptLabel          = "&Interrupt Number:"
   BaseIoLabel             = "I/O &Port Base Addr:"
   MemoryLabel             = "&Memory Address:"
   TcnsCaption             = "Thomas-Conrad TCNS Adapter Setup"
   TcnsEISACaption         = "Thomas-Conrad TCNS (TC3147) Adapter Setup"
   SlotNumberLabel         = "&Slot Number:"

[LanguagesSupported]
   ENG



#####oemnaddt.inf all
[LanguagesSupported]
    ENG
[OptionsTextENG]
    DC21040  = "DEC PCI Ethernet DECchip 21040"
    DC21041  = "DEC PCI Ethernet DECchip 21041"
    DC21140  = "DEC PCI Fast Ethernet DECchip 21140"
    DC21142  = "DEC PCI Fast Ethernet DECchip 21142"
    DE434    = "DEC DE434 EtherWORKS Turbo PCI TP Adapter"
    DE435    = "DEC DE435 EtherWORKS Turbo PCI Adapter"
;    DE436    = "DEC DE436 EtherWORKS Turbo PCI Quad Adapter"
    MULTIA   = "DEC multia's Ethernet Controller"
    DE425    = "DEC DE425 EtherWORKS Turbo EISA Adapter"
    DE450    = "DEC DE450 EtherWORKS Turbo PCI Adapter"
    DE500    = "DEC DE500 Fast Ethernet PCI Adapter"

[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductSoftwareDescription = "DEC DC21x4 Driver"

FunctionDC21040Title = "DEC DECchip 21040 Based Adapter Setup"
ProductHardwareDC21040Description = "DEC PCI Ethernet DECchip 21040"
ProductHardwareDC21040Title = "DEC PCI Ethernet DECchip 21040"

FunctionDC21041Title = "DEC DECchip 21041 Based Adapter Setup"
ProductHardwareDC21041Description = "DEC PCI Ethernet DECchip 21041"
ProductHardwareDC21041Title = "DEC PCI Ethernet DECchip 21041"

FunctionDC21140Title = "DEC DECchip 21140 Based Adapter Setup"
ProductHardwareDC21140Description = "DEC PCI Fast Ethernet DECchip 21140"
ProductHardwareDC21140Title = "DEC PCI Fast Ethernet DECchip 21140"

FunctionDC21142Title = "DEC DECchip 21142 Based Adapter Setup"
ProductHardwareDC21142Title = "DEC PCI Ethernet DC21142"
ProductHardwareDC21142Description = "DEC PCI Fast Ethernet DECchip 21142"

FunctionDE434Title   = "DEC DE434 PCI Adapter Card Setup"
ProductHardwareDE434Description   = "DEC DE434 EtherWORKS Turbo PCI TP Adapter"
ProductHardwareDE434Title   = "DEC DE434 EtherWORKS Turbo PCI TP Adapter"

FunctionDE435Title   = "DEC DE435 PCI Adapter Card Setup"
ProductHardwareDE435Description   = "DEC DE435 EtherWORKS Turbo PCI Adapter"
ProductHardwareDE435Title   = "DEC DE435 EtherWORKS Turbo PCI Adapter"

FunctionMULTIATitle = "DEC multia's Ethernet Controller Setup"
ProductHardwareMULTIADescription = "DEC multia's Ethernet Controller"
ProductHardwareMULTIATitle = "DEC multia's Ethernet Controller"

FunctionDE425Title   = "DEC DE425 EISA Adapter Card Setup"
ProductHardwareDE425Description   = "DEC DE425 EtherWORKS Turbo EISA Adapter"
ProductHardwareDE425Title   = "DEC DE425 EtherWORKS Turbo EISA Adapter"

FunctionDE450Title   = "DEC DE450 PCI Adapter Card Setup"
ProductHardwareDE450Description   = "DEC DE450 EtherWORKS Turbo PCI Adapter"
ProductHardwareDE450Title   = "DEC DE450 EtherWORKS Turbo PCI Adapter"

FunctionDE500Title   = "DEC DE500 PCI Adapter Card Setup"
ProductHardwareDE500Description   = "DEC DE500 Fast Ethernet PCI Adapter"
ProductHardwareDE500Title   = "DEC DE500 Fast Ethernet PCI Adapter"

ConnectionList  = ^(ConnectionChoices$(Option), 1)
ConnectionValues = ^(ConnectionChoices$(Option), 2)
NoList  = ^(NoChoices, 1)
NoValues = ^(NoChoices, 2)
ShellCodeErrorTitle     = "Error: "$(Function$(Option)Title)
ShellCodeErrorText      = "Shell Code Error."
CANNOT_FIND_ANY_CARD    = "Network card is not present in the system"

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[FileDependentDlgENG]

DlgText = "Choose the proper cable type for the "+
          "network adapter. Select [Help] for a detailed "+
          "description of the available options of the list."

Combo1Label = "&Connection Type:"

;
; don't localize anything below this
;
DlgTemplate = "ADAP_PROTO_COMBO"
DlgType = "Combination"

Caption = $(Function$(Option)Title)
Combo1List = $(ConnectionList)
Combo1Out  = $(ConnectionValue)
ComboListItemsIn  = {Combo1List}
ComboListItemsOut = {Combo1Out}

EditTextLim = ""
CBOptionsGreyed = {}
MinHelpId = 10
MaxHelpId = 1130
HelpContext = $(Help$(Option)Id)

[ConnectionChoicesDC21040]
    Connect_0 = "AutoDetect", 0
    Connect_1 = "10BaseT (Twisted_Pair) ", 2
    Connect_2 = "10BaseT Full_Duplex ", 3
    Connect_3 = "10BaseT No_Link_Test", 4
    Connect_4 = "10Base2 (BNC)", 1
    Connect_5 = "10Base5 (AUI)", 5
[ConnectionChoicesDC21041]
    Connect_0 = "AutoSense", 0
    Connect_1 = "AutoSense No_Nway", 6
    Connect_2 = "10BaseT (Twisted_Pair) ", 2
    Connect_3 = "10BaseT Full_Duplex ", 3
    Connect_5 = "10BaseT No_Link_Test", 4
    Connect_6 = "10Base2 (BNC)", 1
    Connect_7 = "10Base5 (AUI)", 5
[ConnectionChoicesDC21140]
    Connect_0 = "AutoSense", 0
    Connect_1 = "AutoSense No_Nway", 6
    Connect_2 = "100BaseTx", 8
    Connect_3 = "100BaseTx Full_Duplex", 9
    Connect_4 = "100BaseT4", 10
    Connect_5 = "100BaseFx", 11
    Connect_6 = "100BaseFx Full_Duplex", 12
    Connect_7 = "10BaseT (Twisted Pair)", 2
    Connect_8 = "10BaseT Full_Duplex", 3
[ConnectionChoicesDC21142]
    Connect_0 = "AutoSense", 0
    Connect_1 = "100BaseTx", 8
    Connect_2 = "100BaseTx Full_Duplex", 9
    Connect_3 = "100BaseT4", 10
    Connect_4 = "100BaseFx", 11
    Connect_5 = "100BaseFx Full_Duplex", 12
    Connect_6 = "10BaseT (Twisted_Pair) ", 2
    Connect_7 = "10BaseT Full_Duplex", 3
    Connect_8 = "10BaseT No_Link_Test", 4
    Connect_9 = "10Base2 (BNC)", 1
    Connect_10= "10Base5 (AUI)", 5
[ConnectionChoicesMULTIA]
    Connect_0 = "AutoDetect", 0
    Connect_1 = "10BaseT (Twisted_Pair) ", 2
    Connect_2 = "10BaseT Full_Duplex ", 3
    Connect_3 = "10BaseT No_Link_Test", 4
    Connect_4 = "10Base2 (BNC)", 1
    Connect_5 = "10Base5 (AUI)", 5
[ConnectionChoicesDE434]
    Connect_0 = "10BaseT (Twisted_Pair) ", 2
    Connect_1 = "10BaseT Full_Duplex ", 3
    Connect_2 = "10BaseT No_Link_Test", 4
[ConnectionChoicesDE435]
    Connect_0 = "AutoDetect", 0
    Connect_1 = "10BaseT (Twisted_Pair) ", 2
    Connect_2 = "10BaseT Full_Duplex ", 3
    Connect_3 = "10BaseT No_Link_Test", 4
    Connect_4 = "10Base2 (BNC)", 1
    Connect_5 = "10Base5 (AUI)", 5
[ConnectionChoicesDE450]
    Connect_0 = "AutoSense", 0
    Connect_1 = "AutoSense No_Nway", 6
    Connect_2 = "10BaseT (Twisted_Pair) ", 2
    Connect_3 = "10BaseT Full_Duplex ", 3
    Connect_4 = "10BaseT No_Link_Test", 4
    Connect_5 = "10Base2 (BNC)", 1
    Connect_6 = "10Base5 (AUI)", 5
[ConnectionChoicesDE500]
    Connect_0 = "AutoSense", 0
    Connect_1 = "100BaseTx", 8
    Connect_2 = "100BaseTx Full_Duplex", 9
    Connect_3 = "10BaseT", 2
    Connect_4 = "10BaseT Full_Duplex", 3


#####oemnadzz.inf all
[LanguagesSupported]
    ENG

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


ShellCodeErrorTitle     = "Error: "
ShellCodeErrorText      = "Shell Code Error."

[ErrorMsgENG]
CannotFindOemsetup = "Setup cannot find "$(File1)", "$(File2)", "$(File3)", or "$(File4)". Please make sure your input path is correct."

#####oemnadap.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

[OptionsTextENG]
    AMDPCI     = "AMD PCNET Family Ethernet Adapter"

[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


GenericAdapterName = "AMD PCNET ISA/VESA Ethernet Adapter"
GenericPCIAdapterName = "AMD PCNET PCI Ethernet Adapter"
GenericDriverName  = "AMD PCNET Family Ethernet Adapter Driver"

ProductSoftwareDescription = $(GenericDriverName)
ProductHardwareDescription = $(GenericAdapterName)
ProductHardwarePCNTN3Description="AMD PCnet Family Driver"

ProductSoftwareTitle =       $(GenericDriverName)
ProductHardwarePCNTN3Title = $(GenericAdapterName)

;
; no localization until [DialogConstantsENG]
;

DialogDllName   = "amddlg.dll"

IRQList  = ^(IRQChoices, 1)
IRQValues = ^(IRQChoices, 2)

IOBaseAddrList = ^(IOBaseAddrChoices, 1)
IOBaseAddrValues = ^(IOBaseAddrChoices, 2)

DMAChannelList = ^(DMAChannelChoices,1)
DMAChannelValues = ^(DMAChannelChoices,2)

LEDList = ^(LEDChoices,1)
LEDValues = ^(LEDChoices,2)

FullDuplexList = ^(FullDuplexChoices,1)
FullDuplexValues = ^(FullDuplexChoices,2)

BusTimerList = ^(BusTimerChoices,1)
BusTimerValues = ^(BusTimerChoices,2)

[DialogConstantsENG]
FunctionTitle   = $(GenericDriverName)$(GenericInfVersion)
Help        = "&Help"
Exit        = "Cance&l"
OK          = "&OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "&Cancel"

[MemoryMappedChoicesENG]
Map_1 = 1, "ON"
Map_2 = 0, "OFF"

[FileDependentDlgENG]
FunctionTitle   = $(GenericAdapterName)$(GenericInfVersion)
DlgText = "Please select values for the following fields:"

Combo1Label = "&I/O Port:"
Combo2Label = "IRQ &Number:"
Combo3Label = "&DMA Number:"
Combo4Label = "&Full Duplex:"
Combo5Label = "&Bus Timer:"

BigButton   = "&More options >>"

CheckBox1 = "10Base-&T port"

Group1 = "&Bus to scan"

Radio1 = "&PNP"
Radio2 = "&VESA"
Radio3 = "&ISA"
Radio4 = "&ALL"

;
; no localization until IRQChoices
;

DlgType = "RadioCombination"
DlgTemplate = "PCNTN3"
Caption = $(FunctionTitle)

CBOptionsGreyed = {}
NotifyFields = {NO, NO}
HelpContext = 1

Combo1List = $(IOBaseAddrList)
Combo1Out  = $(IOBaseAddrValue)

Combo2List = $(IRQList)
Combo2Out  = $(IRQValue)

Combo3List = $(DMAChannelList)
Combo3Out  = $(DMAChannelValue)

Combo4List = $(FullDuplexList)
Combo4Out  = $(FullDuplexValue)

Combo5List = $(BusTimerList)
Combo5Out  = $(BusTimerValue)

ComboListItemsIn  = {Combo1List,Combo2List,Combo3List,Combo4List,Combo5List}
ComboListItemsOut = {Combo1Out,Combo2Out,Combo3Out,Combo4Out,Combo5Out}

EditTextIn = ""
EditTextLim = ""

[IRQChoices]
IRQ_1 = "3",3
IRQ_2 = "4",4
IRQ_3 = "5",5
IRQ_4 = "9",9
IRQ_5 = "10",10
IRQ_6 = "11",11
IRQ_7 = "12",12
IRQ_8 = "15",15
IRQ_9 = "Auto_Scan",0

[IOBaseAddrChoices]
IOBase_1  = "0x200",512
IOBase_2  = "0x220",544
IOBase_3  = "0x240",576
IOBase_4  = "0x260",608
IOBase_5  = "0x280",640
IOBase_6  = "0x2a0",672
IOBase_7  = "0x2c0",714
IOBase_8  = "0x2e0",746
IOBase_9  = "0x300",768
IOBase_10 = "0x320",800
IOBase_11 = "0x340",832
IOBase_12 = "0x360",864
IOBase_13 = "0x380",896
IOBase_14 = "0x3a0",928
IOBase_15 = "0x3c0",960
IOBase_16 = "0x3e0",992
IOBase_17 = "Auto_Scan",0

[DMAChannelChoices]
DMAChannel_1 = "3",3
DMAChannel_2 = "5",5
DMAChannel_3 = "6",6
DMAChannel_4 = "7",7
DMAChannel_5 = "Auto_Scan",0

[LEDChoices]
LED_1 = "Default",65536
LED_2 = "0x0",0
LED_3 = "0x2",2
LED_4 = "0x4",4
LED_5 = "0x8",8
LED_6 = "0x10",16
LED_7 = "0x20",32
LED_8 = "0x30",48
LED_9 = "0x34",52
LED_10 = "0x40",64
LED_11 = "0xc0",192
LED_12 = "0x4088",16520
LED_13 = "0xb0",176
LED_14 = "0x21",129

[FullDuplexChoices]
FULLDUPLEX_1 = "OFF",1
FULLDUPLEX_2 = "AUI",2
FULLDUPLEX_3 = "UTP",3
FULLDUPLEX_4 = "Default",0

[BusTimerChoices]
BUSTIMER_1 = "5",5
BUSTIMER_2 = "6",6
BUSTIMER_3 = "7",7
BUSTIMER_4 = "8",8
BUSTIMER_5 = "9",9
BUSTIMER_6 = "10",10
BUSTIMER_7 = "11",11
BUSTIMER_8 = "12",12
BUSTIMER_9 = "13",13
BUSTIMER_10 = "Default",0

[FileDependentDlgPCIENG]
FunctionTitle   = $(GenericPCIAdapterName)$(GenericInfVersion)
DlgText = "Please select values for the following fields:"

Combo1Label = "&Full Duplex:"
BigButton   = "&More options >>"
CheckBox1 = "10Base-&T port"

;
; no locationization until LEDChoices
;

DlgType = "RadioCombination"
DlgTemplate = "PCNTN3PCI"
Caption = $(FunctionTitle)

CBOptionsGreyed = {}
NotifyFields = {NO, NO}
HelpContext = 1

Combo1List = $(FullDuplexList)
Combo1Out  = $(FullDuplexValue)

Combo3List = $(LEDList)
Combo3Out  = $(LED0Value)

Combo4List = $(LEDList)
Combo4Out  = $(LED1Value)

Combo5List = $(LEDList)
Combo5Out  = $(LED2Value)

Combo6List = $(LEDList)
Combo6Out  = $(LED3Value)

ComboListItemsIn  = {Combo1List}
ComboListItemsOut = {Combo1Out}

EditTextIn = ""
EditTextLim = ""

[LEDChoices]
LED_1 = "Default",65536
LED_2 = "0x0",0
LED_3 = "0x2",2
LED_4 = "0x4",4
LED_5 = "0x8",8
LED_6 = "0x10",16
LED_7 = "0x20",32
LED_8 = "0x30",48
LED_9 = "0x34",52
LED_10 = "0x40",64
LED_11 = "0xc0",192
LED_12 = "0x4088",16520
LED_13 = "0xb0",176
LED_14 = "0x21",129

[FullDuplexChoices]
FULLDUPLEX_1 = "OFF",1
FULLDUPLEX_2 = "AUI",2
FULLDUPLEX_3 = "UTP",3
FULLDUPLEX_4 = "Default",0

[BusTimerChoices]
BUSTIMER_1 = "5",5
BUSTIMER_2 = "6",6
BUSTIMER_3 = "7",7
BUSTIMER_4 = "8",8
BUSTIMER_5 = "9",9
BUSTIMER_6 = "10",10
BUSTIMER_7 = "11",11
BUSTIMER_8 = "12",12
BUSTIMER_9 = "13",13
BUSTIMER_10 = "Default",0

#####oemnaddf.inf all

[LanguagesSupported]
        ENG
[OptionsTextENG]
        DEFPA     = "DEC FDDIcontroller/PCI"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "DEC FDDIcontroller/PCI Card Setup"
ProductSoftwareDescription      = "DEC FDDIcontroller/PCI Driver"
ProductHardwareDescription      = "DEC FDDIcontroller/PCI"
CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
ReceiveBuffList = ^(ReceiveBuffChoices,1)
ReceiveBuffValues = ^(ReceiveBuffChoices,2)
TransmitBuffList = ^(TransmitBuffChoices,1)
TransmitBuffValues = ^(TransmitBuffChoices,2)
BurstSizeList = ^(BurstSizeChoices,1)
BurstSizeValues = ^(BurstSizeChoices,2)
DialogDllName = "defpa.dll"
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = 1
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
DlgType = "RadioCombination"
DlgTemplate = "DEFPA"
Combo1 = "Receive Buffers:"
Combo2 = "Transmit Buffers:"
Combo3 = "Burst Size:"
Edit1 = "Requested TTRT(ms):"
Edit2 = "Bus Number:"
Edit3 = "Card Instance:"
Group = "Full Duplex Enable"
Combo1List = $(ReceiveBuffList)
Combo1Out = $(ReceiveBuffValue)
Combo2List = $(TransmitBuffList)
Combo2Out = $(TransmitBuffValue)
Combo3List = $(BurstSizeList)
Combo3Out = $(BurstSizeValue)
; Burst size is not included in dialog box, for now
ComboListItemsIn = {Combo1List,Combo2List}
ComboListItemsOut = {Combo1Out,Combo2Out}
EditTextLim = {3,3,1}
EditTextIn = {$(EditText1),$(EditText2),$(EditText3)}
EditTextOut = {$(EditText1),$(EditText2),$(EditText3)}
[ReceiveBuffChoices]
Receive_1 = "2",2
Receive_2 = "4",4
Receive_3 = "8",8
[TransmitBuffChoices]
Transmit_1 = "8",8
Transmit_2 = "16",16
Transmit_3 = "32",32
Transmit_4 = "64",64
Transmit_5 = "128",128
[BurstSizeChoices]
Burst_1 = "4",0
Burst_2 = "8",1
Burst_3 = "16",2

#####oemnadd3.inf all
[LanguagesSupported]
        ENG
[OptionsTextENG]
        DEC300     = "DEC FDDIcontroller/EISA"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
                           "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "DEC FDDIcontroller/EISA Card Setup"
ProductSoftwareDescription      = "DEC FDDIcontroller/EISA Driver"
ProductHardwareDescription      = "DEC FDDIcontroller/EISA"
CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ProductSoftwareTitle    = "DEC FDDIcontroller/EISA Driver"
ProductHardwareTitle    = "DEC FDDIcontroller/EISA Adapter"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
BurstSizeList = ^(BurstSizeChoices,1)
BurstSizeValues = ^(BurstSizeChoices,2)
ReceiveBuffList = ^(ReceiveBuffChoices,1)
ReceiveBuffValues = ^(ReceiveBuffChoices,2)
TransmitBuffList = ^(TransmitBuffChoices,1)
TransmitBuffValues = ^(TransmitBuffChoices,2)
DialogDllName = "defea.dll"
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = 1
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
DlgType = "RadioCombination"
DlgTemplate = "DEFEA"
Combo1 = "Burst Size:"
Combo2 = "Receive Buffers:"
Combo3 = "Transmit Buffers:"
Group = "Full Duplex Enable"
Edit1 = "Requested TTRT(ms):"
Combo1List = $(BurstSizeList)
Combo1Out = $(BurstSizeValue)
Combo2List = $(ReceiveBuffList)
Combo2Out = $(ReceiveBuffValue)
Combo3List = $(TransmitBuffList)
Combo3Out = $(TransmitBuffValue)
ComboListItemsIn = {Combo2List,Combo3List}
ComboListItemsOut = {Combo2Out,Combo3Out}
EditTextLim = {3}
[BurstSizeChoices]
Burst_1 = "4",0
Burst_2 = "8",1
Burst_3 = "16",2
[ReceiveBuffChoices]
Receive_1 = "2",2
Receive_2 = "4",4
Receive_3 = "8",8
[TransmitBuffChoices]
Transmit_1 = "8",8
Transmit_2 = "16",16
Transmit_3 = "32",32
Transmit_4 = "64",64
Transmit_5 = "128",128

#####oemnadni.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NE2000IBMCOMPAT = "IBM Ethernet PCMCIA and Compatible Adapter"
    NE4000PCMCIA    = "Novell NE4000 PCMCIA Adapter"
    MICRODYNEPCMCIA = "Microdyne NE4000 PCMCIA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
;
; Software
;
ProductSoftwareNE2000IBMCOMPATDescription = "IBM Ethernet PCMCIA and Compatible Adapter Driver"
ProductSoftwareNE2000IBMCOMPATTitle       = "IBM Ethernet PCMCIA and Compatible Adapter Driver"
ProductSoftwareNE4000PCMCIADescription = "Novell NE4000 PCMCIA Adapter Driver"
ProductSoftwareNE4000PCMCIATitle       = "Novell NE4000 PCMCIA Adapter Driver"
ProductSoftwareMICRODYNEPCMCIADescription      = "Microdyne NE4000 PCMCIA Adapter Driver"
ProductSoftwareMICRODYNEPCMCIATitle    = "Microdyne NE4000 PCMCIA Adapter Driver"

;
; Hardware
;

ProductHardwareNE2000IBMCOMPATDescription  = "IBM Ethernet PCMCIA and Compatible Adapter"
ProductHardwareNE2000IBMCOMPATTitle    = "IBM Ethernet PCMCIA and Compatible Adapter"
ProductHardwareNE4000PCMCIADescription = "Novell NE4000 PCMCIA Adapter"
ProductHardwareNE4000PCMCIATitle       = "Novell NE4000 PCMCIA Adapter"
ProductHardwareMICRODYNEPCMCIADescription = "Microdyne NE4000 PCMCIA Adapter"
ProductHardwareMICRODYNEPCMCIATitle       = "Microdyne NE4000 PCMCIA Adapter"

FunctionTitle   = $(ProductHardware$(Option)Title)" Card Setup"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Combo1Label = "&IRQ Level:"
Combo2Label = "&Memory Base Address:"
Combo3Label = "I/&O Port Address:"

;no translation needed after this

DlgType = "MultiCombo"
DlgTemplate = "WD"
Caption = $(FunctionTitle)

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)

Combo2List = $(PcCardAddressHexList)
Combo2Out  = $(PcCardBaseAddress)

Combo3List = $(IOBaseAddrHexList)
Combo3Out  = $(IOBaseAddress)


ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}


EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO, NO}

HelpContext = $(!IDH_DB_OEMNADWD_INS)

#####oemnxppp.inf all
[LanguagesSupported]
    ENG

[OptionsTextENG]
    RASPPTP             = "Point To Point Tunneling Protocol"

;***********************************************************************
;
;***********************************************************************
[FileConstantsENG]
    ProCaption          = "Windows NT Setup"
    ProCancel           = "Cancel"
    ProCancelMsg        = "Windows NT Networking is not correctly installed.  "+
                          "Are you sure you want to cancel copying files?"
    ProCancelCap        = "Network Setup Message"
    ProText1            = "Copying:"
    ProText2            = "To:"

    FunctionTitleRASPPTP                = "PPTP Card Setup"
    ProductSoftwareDescription          = "PPTP Miniport Driver"
    ProductHardwareRASPPTPDescription   = "PPTP Adapter"
    ProductSoftwareTitle                = "PPTP Miniport Driver"
    ProductHardwareRASPPTPTitle         = "PPTP Adapter"

    ProductRASPPTPDescription           = "This is a protocol for tunneling secure remote network communications across Point to Point (PPP) connections to the Internet. "+
                                          "It will allow remote and mobile users to dial into the Internet, using local points of presence and Internet service providers (ISPs) to gain access to corporate networks."
    ProductRASPPTPTitle                 = "Point To Point Tunneling Protocol"

    ShellCodeErrorTitle                 = "Error: "$(FunctionTitle)$(Option))
    ShellCodeErrorText                  = "Shell Code Error."

;RASPPTP_SPECIFIC_START
;***********************************************************************
; These constants are specific to the RASPPTP.sys driver for SMAN
;***********************************************************************
[SMANFileConstantsENG]
    PPTPFunctionTitleRASPPTP                = "PPTP Card Setup"
    PPTPProductSoftwareDescription          = "PPTP Protocol Driver"
    PPTPProductHardwareRASPPTPDescription   = "PPTP Adapter"
    PPTPProductSoftwareTitle                = "PPTP Protocol Driver"
    PPTPProductHardwareRASPPTPTitle         = "PPTP Adapter"

;RASPPTP_SPECIFIC_END

;***********************************************************************
;
;***********************************************************************
[DialogConstantsENG]
    Help                = "&Help"
    Exit                = "Cancel"
    OK                  = "OK"
    HelpContext         = ""
    Continue            = "Continue"
    Cancel              = "Cancel"

;***********************************************************************
;
;***********************************************************************
[FileDependentDlgENG]
    ;Label1              = "&IRQ Level:"
    ;Label2              = "&RAM Base Address:"
    DlgType             = "RadioCombination"
    DlgTemplate         = "NE2000"
    Caption             = $(FunctionTitle)$(Option)
    ;Combo1List          = $(IRQ_List)
    ;Combo1Out           = $(InterruptNumber)
    ;Combo2List          = $(RAM_Hex_List)
    ;Combo2Out           = $(RAM_Hex_Value)
    ;ComboListItemsIn    = {Combo1List, Combo2List}
    ;ComboListItemsOut   = {Combo1Out, Combo2Out}
    EditTextIn          = ""
    EditTextLim         = ""
    CBOptionsGreyed     = {}
    NotifyFields        = {NO, NO}
;    HelpContext         = $(!IDH_DB_OEMNADN2_INS)

;***********************************************************************
;
;***********************************************************************
[InvokeRasDlgENG]
    InvokeRasSetupMsg   = "Remote Access Services (RAS) will now be installed. "+
                          "Please configure the PPTP ports in RAS "+
                          "setup to enable you to use RAS over PPTP."
    InvokeRasConfigMsg  = "Remote Access Services (RAS) setup will now be invoked. "+
                          "Please configure the PPTP ports in RAS "+
                          "setup to enable you to use RAS over PPTP."
    InvokeRasConfigMsg2 = "Remote Access Services (RAS) setup will now be invoked. "+
                          "Please remove the PPTP ports in RAS configuration."

    InvokeRasError      = "PPTP setup encountered an error "+
                          "while invoking the RAS setup INF file (OEMNSVRA.INF). "+
                          "Please make sure that the file is present in the "+
                          "System32 directory and is the proper file."

[InvokeRasSetupDlgENG]
    DlgType      = "MessageBox"
    STF_MB_TEXT  = "Remote Access Services (RAS) is not installed. "+
                   "Do you want to install RAS "+
                   "and add the PPTP ports in RAS setup to enable "+
                   "you to use RAS over PPTP?"$(!LF)$(!LF)+
                   "NOTE: if you are going to install Routing and "+
                   "Remote Access Services beta, choose NO"

    STF_MB_TITLE = "PPTP setup"
    STF_MB_TYPE  = 3
    STF_MB_ICON  = 4
    STF_MB_DEF   = 2

[InvokeRasConfigDlgENG]
    DlgType      = "MessageBox"
    STF_MB_TEXT  = "Do you want to configure Remote Access Services (RAS) "+
                   "and add the PPTP ports in RAS setup to enable "+
                   "you to use RAS over PPTP?"

    STF_MB_TITLE = "PPTP setup"
    STF_MB_TYPE  = 3
    STF_MB_ICON  = 4
    STF_MB_DEF   = 2

;***********************************************************************
;
;***********************************************************************
[InvokeTCPIPDlgENG]
    InvokeTCPSetupMsg   = "TCP/IP is not installed. It will now be installed."
    InvokeTCPError      = "PPTP setup encountered an error "+
                          "while invoking the TCP/IP setup INF file (OEMNXPTC.INF). "+
                          "Please make sure that the file is present in the "+
                          "System32 directory and is the proper file."

;***********************************************************************
;
;***********************************************************************
[InvokeCancelDlgENG]
    InvokeCancelMsg = "PPTP setup is incomplete. "+
                       "Please rerun the Setup Program if you want "+
                       "to install PPTP."

;***********************************************************************
;
;***********************************************************************
[InvokeConfigureDlgENG]
    InvokeConfigureMsg = "Please reboot for the new changes to take effect."

#####oemnsvbr.inf all
[LanguagesSupported]
    ENG

[OptionsTextENG]
    RelayAgent = "DHCP Relay Agent"

[FileConstantsENG]
FunctionTitle                   = "Relay Agent Setup"
ProductSoftwareDescription      = "Enables the Windows NT Server to forward DHCP (Dynamic Host Configuration Protocol) broadcasts across a router to a remote DHCP server."
ProductSoftwareDisplayName      = "DHCP Relay Agent"
ProductSoftwareTitle            = "DHCP Relay Agent"
ErrorTCPIPNotInstalled          = "TCP/IP is not installed. Please install TCP/IP and retry this installation."
ShellCodeErrorTitle             = "Error: "$(FunctionTitle)
ShellCodeErrorText              = "Shell Code Error."
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"

[DefaultsENG]

[DialogConstantsENG]
Help            = "&Help"
Exit            = "Cancel"
OK              = "OK"
HelpContext     = ""
Continue        = "Continue"
Cancel          = "Cancel"

[FileDependentDlgENG]

#####oemnsvsm.inf all
[LanguagesSupported]
ENG
[OptionsTextENG]
SFM      = "Services for Macintosh"

[FileConstantsENG]

FunctionTitle                   =  "Services for Macintosh Setup"
ProductATALKDescription         =  "Enables a Macintosh computer to access shared disk space on your computer."
ProductAFPSVCDescription        =  "AppleTalk File Server"
ProductMACPRINTDescription      =  "AppleTalk Print Server"
ProductSFMDescription           =  "Enables a Windows NT Server to act as an AppleTalk router, allowing PC and Macintosh clients to share files and printers."


ProCaption      = $(FunctionTitle)
ProCancel       = "Cancel"
ProCancelMsg    = "Services for Macintosh is not correctly installed. "+
                  "Are you sure you want to cancel copying files ?"
ProCancelCap    = "Services for Macintosh Setup"
ProText1        = "Copying:"
ProText2        = "To:"
Error           = "User has cancelled copying files. Copied files will be removed."

MajorVersion    = "MajorVersion"
MinorVersion    = "MinorVersion"
Version         =  "Version "

AskLocationText = "Setup needs to copy Services for Macintosh files."$(!LF)$(!LF)+
                  "Setup will look for the files in the location specified below. If you want "+
                  "Setup to look in a different place, type the new location. When the location "+
                  "is correct, click Continue."

ProductSFMTitle                 = "Services for Macintosh"
ProductATALKDisplayName         = "AppleTalk Protocol"
ProductATALKTitle               = "AppleTalk Protocol"
ProductAFPSVCDisplayName        = "File Server for Macintosh"
ProductAFPSVCTitle              = "File Server for Macintosh"
ProductAFPSRVRDisplayName       = "SFM Kernel Driver"
ProductMACPRINTDisplayName      = "Print Server for Macintosh"
ProductMACPRINTTitle            = "Print Server for Macintosh"


!UAMVolumeName                  = "Microsoft UAM Volume"
!AtalkMonName                   = "AppleTalk Printing Devices"
!AtalkMonEventLogName           = "AppleTalk Print Monitor"

!AppleShareFolder                       = "AppleShare Folder"
!UamReadMeDestFile                      = "ReadMe.UAM"

GroupName    = "Administrative Tools"
IconName     = "File Manager"


[DialogConstantsENG]

Help        = "&Help"
Exit        = "E&xit Setup"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[UAMVarsENG]
UAMDirName     =       "Microsoft UAM Volume"
UAMPath        =       $(UAMDrive)"\"$(UAMDirName)

[TCCommentsENG]

!XCEL1COMMENT   = "Comment=MS Excel 3.0 Chart"
!XCEL2COMMENT   = "Comment=MS Excel 3.0 Spreadsheet"
!XCEL3COMMENT   = "Comment=MS Excel 3.0 Macrosheet"
!XCEL4COMMENT   = "Comment=MS Excel 3.0 Workspace"
!XCEL5COMMENT   = "Comment=MS Excel 3.0 Add-in MacroFile"
!XCEL6COMMENT   = "Comment=MS Excel 3.0 Template File"
!XCEL7COMMENT   = "Comment=MS Excel 3.0"
!XCEL8COMMENT   = "Comment=MS Excel 4.0 Chart"
!XCEL9COMMENT   = "Comment=MS Excel 4.0 Spreadsheet"
!XCEL10COMMENT  = "Comment=MS Excel 4.0 Macrosheet"
!XCEL11COMMENT  = "Comment=MS Excel 4.0 WorkSpace"
!XCEL12COMMENT  = "Comment=MS Excel 4.0 Add-in MacroFile"
!XCEL13COMMENT  = "Comment=MS Excel 4.0 Template File"
!MSWD1COMMENT   = "Comment=MS Word 5.1 Document"
!MSWD2COMMENT   = "Comment=MS Word 5.1 Document"
!MSWD3COMMENT   = "Comment=MS Word 6.0 Document"
!MSWD4COMMENT   = "Comment=MS Word 6.0 Template"
!MSPJ1COMMENT   = "Comment=MS Project 4.0"
!MSPJ2COMMENT   = "Comment=MS Project 4.0 Exchange File"
!MSPJ3COMMENT   = "Comment=MS Project 4.0 Calendar"
!MSPJ4COMMENT   = "Comment=MS Project 4.0 View"
!MSPJ5COMMENT   = "Comment=MS Project 4.0 WorkSpace"
!MSPJ6COMMENT   = "Comment=MS Project 4.0 Template"
!ALD31COMMENT   = "Comment=Pagemaker 3.0  Publication"
!ALD32COMMENT   = "Comment=Pagemaker 3.0 Template"
!ALD33COMMENT   = "Comment=Pagemaker 3.0 Tiff Graphics"
!ALD41COMMENT   = "Comment=Pagemaker 4.0 Publication"
!ALD42COMMENT   = "Comment=Pagemaker 4.0 Template"
!ALD43COMMENT   = "Comment=Pagemaker 4.0 Tiff Graphics"
!MORECOMMENT    = "Comment=Symantec More File"
!FOX+COMMENT    = "Comment=FoxBase Plus"
!ARTZCOMMENT    = "Comment=Adobe Illustrator"
!SIT!COMMENT    = "Comment=Aladdin Stuffit"
!PPT2COMMENT    = "Comment=MS PowerPoint 2.0"
!PPT3COMMENT    = "Comment=MS PowerPoint 3.0"
!L123COMMENT    = "Comment=Lotus 1-2-3"
!LMANCOMMENT    = "Comment=LMAN Executables"
!TTXTCOMMENT    = "Comment=Teach Text Document"
!FOXX1COMMENT   = "Comment=FoxPro 2.0 Table"
!FOXX2COMMENT   = "Comment=FoxPro 2.0 Memo"
!FOXX3COMMENT   = "Comment=FoxPro 2.0 Index"
!FOXX4COMMENT   = "Comment=FoxPro 2.0 Compound Index"
!FOXX5COMMENT   = "Comment=FoxPro 2.0 Program"
!FOXX6COMMENT   = "Comment=FoxPro 2.0 Report"
!FOXX7COMMENT   = "Comment=FoxPro 2.0 Report Memo"
!FOXX8COMMENT   = "Comment=FoxPro 2.0 Label"
!FOXX9COMMENT   = "Comment=FoxPro 2.0 Label Memo"
!FOXX10COMMENT   = "Comment=FoxPro 2.0 Screen"
!FOXX11COMMENT   = "Comment=FoxPro 2.0 Screen Memo"
!FOXX12COMMENT   = "Comment=FoxPro 2.0 Menu"
!FOXX13COMMENT   = "Comment=FoxPro 2.0 Menu Memo"
!FOXX14COMMENT   = "Comment=FoxPro 2.0 Gen. Query Program"
!FOXX15COMMENT   = "Comment=FoxPro 2.0 Project"
!FOXX16COMMENT   = "Comment=FoxPro 2.0 Project Memo"

;------------------------------------------------------------------
; Express /Custom Mode Install Dialog - Used In Initial Setup Only
;------------------------------------------------------------------

[SetupSpaceDlgENG]
STF_MB_TEXT = +
"Setup could not find enough space on your Windows NT Server system partition. "+
"Setup requires at least 2 MB for installing Services for Macintosh. "+
"You can retry installation after freeing up disk space on your system partition."


;no translation needed after this

DlgType         = "MessageBox"
STF_MB_TYPE     = 5
STF_MB_ICON     = 3
STF_MB_DEF      = 3
STF_MB_TITLE    = $(FunctionTitle)

;no translation needed after this

[ExitWarningDlgENG]
STF_MB_TITLE    = "Services for Macintosh Setup"
STF_MB_TEXT     = "Services for Macintosh is not correctly installed. Are you "+
                  "sure you want to exit Setup?"

;no translation needed after this

DlgType         = "MessageBox"
STF_MB_TYPE     = 3
STF_MB_ICON     = 5
STF_MB_DEF      = 2

;------------------------------------------------------------------
; Error Strings
;------------------------------------------------------------------

;------------------------------------------------------------------
; Miscellaneous Errors
;------------------------------------------------------------------

[MiscErrorString1ENG]
ErrorString = +
" of Services for Macintosh is already installed on your system. "+
"Use [Update] to update to newer versions."


[MiscErrorString2ENG]
ErrorString = +
"Sufficient memory is not available on your system to run  "+
"Services for Macintosh. Services for Macintosh requires "+
"a minimum of 8 MB to function."


[MiscErrorString3ENG]
ErrorString = +
"Setup encountered the following error during installation. Try installing "+
"Services for Macintosh after rebooting your system. "$(LF)

[ShellingErrorENG]
ErrorString  = +
"An internal error occurred. Contact Technical Support."

[NTFSFormatHappeningENG]
ErrorString = +
"Setup could not find any NTFS partitions in your system. You could be "+
"reformatting or converting your existing NTFS partition. The Microsoft UAM "+
"volume cannot be installed at this time. Setup will proceed with installation. "+
"Use the command SETUP /i OEMNSVSM.INF /c UAMINSTALL to install the UAM volume "+
"after Windows NT Server installation."


[UamFileNotCopiedENG]
ErrorString  = +
"Setup cannot copy Microsoft user authentication files to the Microsoft UAM "+
"volume. Macintosh workstations will be unable to download these files. There "+
"may not be enough disk space on your NTFS partition or the UAM files might be "+
"missing from your Windows NT Server distribution disks. Refer to your Administrator's guide "+
"on how to create this volume after installation."

[UamFileNotCopied1ENG]
ErrorString  = +
"Setup cannot copy Microsoft user authentication files to the Microsoft UAM "+
"volume. Macintosh workstations will be unable to download these files. There "+
"may not be enough disk space on your NTFS partition or the UAM files might be "+
"missing from your Windows NT Server distribution disks. Refer to your Administrator's guide "+
"on how to create this volume after installation."

[UamSecurityNotSetENG]
ErrorString = +
"Setup cannot set the default security settings for the UAM volume. "+
"Security for the UAM volume can also be set from the User Manager "+
"after installation."

[CannotStartAtalkENG]
ErrorSuffix = +
"Setup was unable to start the AppleTalk Protocol. You will be unable to choose "+
"a desired zone at this time."

[CannotStartAfdENG]
ErrorSuffix = +
"Setup was unable to start the AFD Driver. You will be unable to choose "+
"a desired zone at this time."

;------------------------------------------------------------------
; Status Strings
;------------------------------------------------------------------


[StatusInstallSfmENG]
Status = "Installing Services for Macintosh..."

[StatusRemoveSfmENG]
Status = "Removing Services for Macintosh files..."

[StatusStartingAppleTalkENG]
Status = "Starting AppleTalk Protocol..."



;------------------------------------------------------------------
; AppleTalk Transport Error Strings
;------------------------------------------------------------------

[AtalkString1ENG]
ErrorString  = +
"Setup cannot add Windows sockets support for the AppleTalk protocol. "+
"Windows sockets applications will be unable to use the AppleTalk Protocol. "+
"Remove Services for Macintosh after installation and re-install. If the problem "+
"persists, contact Microsoft support."

[AtalkString2ENG]
ErrorString  = +
"Setup cannot remove Windows Sockets support for the AppleTalk protocol."


[AtalkString3ENG]
ErrorString  = +
"Services for Macintosh has just been installed. Services will be "+
"available to Macintosh workstations in the default network. If you would like "+
"the services to appear in a different zone or to configure routing, close "+
"the Control Panel, reboot, start AppleTalk and use the Control Panel "+
"to configure Services for Macintosh."

[AtalkString5ENG]
ErrorString = +
"Setup cannot remove the monitor for the Print Server for Macintosh."

[AFPString1ENG]
ErrorString = +
"Setup cannot find an NTFS partition on your system. "+
"Services for Macintosh requires an NTFS partition for "+
"Macintosh workstations to share files. You can create "+
"the NTFS partition after installing Services for Macintosh. "+
"To format a partition to NTFS, use the command, format [drive] /fs:NTFS. "+
"Setup will proceed with installation."


[AFPString2ENG]
ErrorString = +
"Setup cannot add the Macintosh File Server to the File Manager. "+
"You will be unable to work with Macintosh accessible volumes from "+
"File Manager."


[AFPString3ENG]
ErrorString  = +
"Setup cannot add the Macintosh File Server to the Server Manager. "+
"You will be unable to work with Services for Macintosh servers from "+
"Server Manager."

[AFPString11ENG]
ErrorString  = +
"Setup can not find the volumes key in the MacFile section in registry. "+
"The UAM volume cannot be built."

[AFPString12ENG]
ErrorString  = +
"Setup can not find any NTFS volumes in your system. The UAM volume can not be installed."


[MacPrintString2ENG]
ErrorString = +
"Setup cannot create the eventlog entries for the Print Server for Macintosh. "+
"You will be unable to use the event viewer to see the log for Print Server "+
"for Macintosh."

[MacPrintString3ENG]
ErrorString = +
"Setup cannot add the print processor for the Print Server for Macintosh. "+
"Macintosh workstations will be unable to print postscript jobs to a "+
"non-postscript printer on the Windows NT Server network."

[MacPrintString4ENG]
ErrorString = +
"Setup cannot add the print monitor for the Print Server for Macintosh. "+
"Macintosh workstations will be unable to use print services on this "+
"Windows NT Server."

[MacPrintString5ENG]
ErrorString = +
"Setup cannot remove the print processor for the Print Server for Macintosh."

[MacPrintString6ENG]
ErrorString = +
"Setup can not find the directory to install the Macintosh print processor. "+
"The Macintosh print processor will not be installed."

[MacPrintString7ENG]
ErrorString = +
"Setup cannot remove the monitor for the Print Server for Macintosh."


[MacPrintString10ENG]
ErrorString = +
"Setup cannot create the eventlog entries for the Print Server for Macintosh monitor. "+
"You will be unable to use the event viewer to see the log for Print Server "+
"for Macintosh."


[NoAdaptersFoundENG]

ErrorString = +
"Setup cannot find any network adapter for Services for Macintosh. You will "+
"be unable to use Services for Macintosh. Try adding a network adapter or "+
"enable the bindings for AppleTalk Protocol."

[RemoveDefaultPortENG]
ErrorString  = +
"Setup has detected that the default network adapter used by Services "+
"for Macintosh has been removed. Setup will change the default network, if "+
"one is available. This may cause Macintosh workstations to no longer "+
"see Services for Macintosh on their current zone."

#####oemnxpsm.inf all

[LanguagesSupported]
   ENG
[OptionsTextENG]
   ATALK           = "AppleTalk Protocol"

[FileConstantsENG]
ProductSFMADMTitle              = "Macintosh Administrator Tools"
ProductSFMADMDescription        = "Macintosh Administrator Tools"
ProductATALKTitle               = "AppleTalk Protocol"
ProductSFMADMName               = "SFMADM"
FunctionTitle               = "AppleTalk Protocol Setup"
ProductATALKDescription     = "Enables a Macintosh computer to access shared disk space on your computer."


ProCaption      = $(FunctionTitle)
ProCancel       = "Cancel"
ProCancelMsg    = "AppleTalk Protocol is not correctly installed. "+
                  "Are you sure you want to cancel copying files ?"
ProCancelCap    = "AppleTalk Protocol Setup"
ProText1        = "Copying:"
ProText2        = "To:"
Error           = "User has cancelled copying files. Copied files will be removed."

MajorVersion    = "MajorVersion"
MinorVersion    = "MinorVersion"
Version         =  "Version "
OF              = " of "

!AtalkMonName                   = "AppleTalk Printing Devices"
!AtalkMonEventLogName   = "AppleTalk Print Monitor"

AskLocationText = "Setup needs to copy AppleTalk Protocol files."$(!LF)$(!LF)+
                  "Setup will look for the files in the location specified below. If you want "+
                  "Setup to look in a different place, type the new location. When the location "+
                  "is correct, click Continue."

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[ExitWarningDlgENG]
STF_MB_TITLE    = "AppleTalk Protocol Setup"
STF_MB_TEXT     = "AppleTalk Protocol is not correctly installed. Are you "+
                  "sure you want to exit Setup?"

;no translation needed after this

DlgType         = "MessageBox"
STF_MB_TYPE     = 3
STF_MB_ICON     = 5
STF_MB_DEF      = 2

;------------------------------------------------------------------
; Error Strings
;------------------------------------------------------------------

;------------------------------------------------------------------
; Miscellaneous Errors
;------------------------------------------------------------------

[MiscErrorString1ENG]
ErrorString = +
" is already installed on your system. "+
"Use [Update] to update to newer versions."

[SfmAlreadyInstalledENG]
ErrorString = +
" of Services for Macintosh is already installed on your system. "+
"You have to remove Services for Macintosh before installing the "+
"AppleTalk Protocol."

[MiscErrorString3ENG]
ErrorString = +
"Setup encountered the following error during installation. Try installing "+
"after rebooting your system. "$(LF)

[ShellingErrorENG]
ErrorString  = +
"An internal error occurred. Contact Technical Support."

[CannotStartAtalkENG]
ErrorSuffix = +
"Setup was unable to start the AppleTalk Protocol. You will be unable to choose "+
"a desired zone at this time."

[CannotStartAfdENG]
ErrorSuffix = +
"Setup was unable to start the AFD Driver. You will be unable to choose "+
"a desired zone at this time."

[StatusStartingAppleTalkENG]
Status = "Starting AppleTalk Protocol..."

;------------------------------------------------------------------
; AppleTalk Transport Error Strings
;------------------------------------------------------------------

[AtalkString1ENG]
ErrorString  = +
"Setup cannot add Windows sockets support for the AppleTalk protocol. "+
"Windows sockets applications will be unable to use the AppleTalk Protocol. "+
"Remove Services for Macintosh after installation and re-install. If the problem "+
"persists, contact Microsoft support."

[AtalkString2ENG]
ErrorString  = +
"Setup cannot remove Windows Sockets support for the AppleTalk protocol."


[AtalkString3ENG]
ErrorString  = +
"AppleTalk has just been installed. "+
"If you would like to configure AppleTalk, close "+
"the Control Panel, reboot, start AppleTalk and use the Control Panel "+
"to configure."

[AtalkString4ENG]
ErrorString = +
"Setup cannot add the print monitor for the Print Server for Macintosh. "+
"Macintosh workstations will be unable to use print services on this "+
"Windows NT workstation."

[AtalkString5ENG]
ErrorString = +
"Setup cannot remove the monitor for the Print Server for Macintosh."

[AtalkString6ENG]
"Setup cannot create the eventlog entries for the Print Server for Macintosh monitor. "+
"You will be unable to use the event viewer to see the log for Print Server "+
"for Macintosh."

[AtalkString7ENG]
ErrorString = +
"Services for Macintosh is installed on your system and it requires "+
"AppleTalk Protocol for proper operation."+
"You have to remove Services for Macintosh if you desire to remove "+
"AppleTalk Protocol."

[AFPString2ENG]
ErrorString = +
"Setup cannot add the Macintosh File Server to the File Manager. "+
"You will be unable to work with Macintosh accessible volumes from "+
"File Manager."


[AFPString3ENG]
ErrorString  = +
"Setup cannot add the Macintosh File Server to the Server Manager. "+
"You will be unable to work with Services for Macintosh servers from "+
"Server Manager."

[NoAdaptersFoundENG]

ErrorString = +
"Setup cannot find any network adapter for the AppleTalk Protocol. You will "+
"be unable to use AppleTalk Protocol. Try adding a network adapter or "+
"enable the bindings for AppleTalk Protocol."

[RemoveDefaultPortENG]
ErrorString  = +
"Setup has detected that the default network adapter used by AppleTalk "+
"Protocol has been removed. Setup will change the default network, if "+
"one is available."

[CantConfigureADMENG]
ErrorString = +
"You cannot configure this software component."

[RemovingSFMENG]
Message = "You have Services for Macintosh (SFM) installed on your "+
          "Windows NT Workstation. "+
          "SFM is only supported on the Windows NT Server. "+
          "Your SFM installation will be removed since this is not a "+
          "supported configuration. "+
          "Please install the Windows NT Server if you want to run SFM."


#####netbond.inf all
[MessageTextENG]
ProCaption   = "Windows NT Networking Installation"
ProCancel    = "Cancel"
MPreInstall1 = "Setup is installing the "
MPreInstall2 = "..."
MPostInstall = " has been installed."
ProCancelMsg = "Windows NT is not correctly installed.  Are you sure you want "+
                   "to cancel copying files?"
ProCancelCap = "Setup Message"
MPreUpgrade1 = "Setup is upgrading the "
MPostUpgrade = " has been upgraded."

MPreRemove1 = "Setup is removing the "
MPreRemove2 = "..."
MPostRemove = " has been removed."

[FatalErrorENG]
; do not translate the string on the left of the '='
Error = "Setup was unable to process the INF file "$(FailedInfFile)" which is required "+
        "for network installation."

[ErrorMsgENG]
CannotFindNtFiles = "The Windows NT files were not found in "$(Path1)", "$(Path2)", or "$(Path3)". Please make sure your input path is correct."

[FatalDlgENG]
STF_MB_TITLE = "Setup Message"
; no translation starting now
DlgType = "MessageBox"
STF_MB_TEXT  = $(Error)
STF_MB_TYPE  = 1
STF_MB_ICON  = 3
STF_MB_DEF   = 1
; end of no translation zone

[UpgradeWarnings]
; do not translate the string on the left of the '='
Warning = "You have the following product installed on your computer:  "$(ServiceTitle)".  Windows NT cannot upgrade this component.  Please contact your system administrator  or look through your product documentation to make sure that this product is compatible with this version of Windows NT."

[UpgradeNetCardWarnings]
; do not translate the string on the left of the '='
Warning = "The following non-Microsoft networking component is installed on this computer:  "$(ServiceTitle)".  Although your network connection may function properly after the upgrade is completed,  the component should be removed and replaced with a newer version."

[WarningDlg]
STF_MB_TITLE = "Network Setup Information"

; no translation starting now
DlgType = "MessageBox"
STF_MB_TEXT  = $(Warning)
STF_MB_TYPE  = 1
STF_MB_ICON  = 2
STF_MB_DEF   = 1
; end of no translation zone

[UpgradeDialogENG]
    ProCaption   = "Windows NT Networking Upgrade"
    ProCancel    = "Cancel"
    ProCancelMsg = "Windows NT is not correctly upgraded.  Are you sure you want "+
                   "to cancel copying files?"
    ProCancelCap = "Network Upgrade Message"
    ProText1     = "Copying:"
    ProText2     = "To:"

#####oemnsvin.inf all
[LanguagesSupported]
    ENG


;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsWINNTTextENG]
    INETSRV      = "Microsoft Peer Web Services"

[OptionsLANMANNTTextENG]
    INETSRV      = "Microsoft Internet Information Server 2.0"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionLANMANNTTitle    = "Microsoft Internet Information Server 2.0"
FunctionWINNTTitle = "Microsoft Peer Web Services"
;
; Software
;
ProductSoftwareWINNTDescription      = "Microsoft Peer Web Services"
ProductSoftwareLANMANNTDescription   = "Microsoft Internet Information Server 2.0"
;
; Hardware
;
OptionList     = ^(Options, 1)
OptionTextList = ^(OptionsTextENG, 1)

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

Warning1 = "Please use Internet Manager to configure the software."
Warning2Winnt = "Microsoft Peer Web Services may be deleted by another process. Please restart your Network Control Panel applet."
Warning2LanmanNt = "Microsoft Internet Information Server may be deleted by another process. Please restart your Network Control Panel applet."
Warning3Winnt = "Microsoft Peer Web Services may be installed by another process. Please restart your Network Control Panel applet."
Warning3LanmanNt = "Microsoft Internet Information Server may be installed by another process. Please restart your Network Control Panel applet."
Warning4Winnt = "Microsoft Peer Web Services cannot be installed without proper network protocol setup. Please make sure your network protocol is installed."
Warning4LanmanNt = "Microsoft Internet Information Server cannot be installed without proper network protocol setup. Please make sure your network protocl is installed."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for sonic
;

#####oemnadsn.inf all
[LanguagesSupported]
    ENG

[OptionsTextENG]
    SNIMAC      = "SNI RM400/RM200 Driver for onboard Ethernet Adapter"

[FileConstantsENG]
    ProCaption   = "Windows NT Setup"
    ProCancel    = "Cancel"
    ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
                   "Are you sure you want to cancel copying files?"
    ProCancelCap = "Network Setup Message"
    ProText1     = "Copying:"
    ProText2     = "To:"
    FunctionTitle                   = "SNI RM400/RM200 onboard Ethernet Adapter Card Setup"
    ProductSoftwareDescription      = "SNI RM400/RM200 onboard Ethernet Adapter Driver"
    OptionList     = ^(Options, 1)
    OptionTextList = ^(OptionsTextENG, 1)
    ProductHardwareDescription      = *($(OptionTextList), ~($(OptionList), $(Option)))
    ProductSoftwareTitle            = "SNI RM400/RM200 onboard Ethernet Adapter Driver"
    ProductHardwareSNIMACx00Title      = "SNI RM400/RM200 onboard Ethernet Adapter"
    ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
    ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
    Help        = "&Help"
    Exit        = "Cancel"
    OK          = "OK"
    HelpContext = ""
    Continue    = "C&ontinue"
    Cancel      = "C&ancel"

[FileDependentDlgENG]

[Warning1ENG]
    Error = "No configuration is required for this adapter card."



#####oemnadma.inf all
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; Text strings to identify adapter options.
;-----------------------------------------------------------------------

[OptionsTextENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPISA   = "Madge Smart 16/4 AT Ringnode"
    MSMDGMPATP   = "Madge Smart 16/4 AT Plus Ringnode"
    MSMDGMPISAC  = "Madge Smart 16/4 ISA Client Ringnode"
    MSMDGMPISACP = "Madge Smart 16/4 ISA Client Plus Ringnode"
    MSMDGMPPC    = "Madge Smart 16/4 PC Ringnode"
    MSMDGMPSM16  = "Madge Smart 16 Ringnode"
    MSMDGMPPNP   = "Madge Smart 16/4 ISA Client PnP Ringnode"
    MSMDGMPMCA   = "Madge Smart 16/4 MC Ringnode"
    MSMDGMPMC32  = "Madge Smart 16/4 MC32 Ringnode"
    MSMDGMPEISA  = "Madge Smart 16/4 EISA Ringnode"
    MSMDGMPPCI   = "Madge Smart 16/4 PCI Ringnode"
    MSMDGMPPCIBM = "Madge Smart 16/4 PCI Ringnode (BM)"
    MSMDGMPPCMCIA = "Madge Smart 16/4 PCMCIA Ringnode"

[OptionsTextISAENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPISA   = "Madge Smart 16/4 AT Ringnode"
    MSMDGMPATP   = "Madge Smart 16/4 AT Plus Ringnode"
    MSMDGMPISAC  = "Madge Smart 16/4 ISA Client Ringnode"
    MSMDGMPISACP = "Madge Smart 16/4 ISA Client Plus Ringnode"
    MSMDGMPPC    = "Madge Smart 16/4 PC Ringnode"
    MSMDGMPSM16  = "Madge Smart 16 Ringnode"
    MSMDGMPPNP   = "Madge Smart 16/4 ISA Client PnP Ringnode"

[OptionsTextMCAENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPMCA   = "Madge Smart 16/4 MC Ringnode"
    MSMDGMPMC32  = "Madge Smart 16/4 MC32 Ringnode"

[OptionsTextEISAENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPEISA  = "Madge Smart 16/4 EISA Ringnode"
    MSMDGMPISA   = "Madge Smart 16/4 AT Ringnode"
    MSMDGMPATP   = "Madge Smart 16/4 AT Plus Ringnode"
    MSMDGMPISAC  = "Madge Smart 16/4 ISA Client Ringnode"
    MSMDGMPISACP = "Madge Smart 16/4 ISA Client Plus Ringnode"
    MSMDGMPPC    = "Madge Smart 16/4 PC Ringnode"
    MSMDGMPSM16  = "Madge Smart 16 Ringnode"
    MSMDGMPPNP   = "Madge Smart 16/4 ISA Client PnP Ringnode"

[OptionsTextPCIENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPPCI   = "Madge Smart 16/4 PCI Ringnode"
    MSMDGMPPCIBM = "Madge Smart 16/4 PCI Ringnode (BM)"

[OptionsTextPCMCIAENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPPCMCIA = "Madge Smart 16/4 PCMCIA Ringnode"


; ----------------------------------------------------------------------
; Miscellaneous declarations for initialsing lists.
; ----------------------------------------------------------------------

[IoLocationChoices]
    "0x0300",768
    "0x0a20",2592
    "0x1a20",6688
    "0x2a20",10784
    "0x3a20",14880
    "0x4a20",18976
    "0x4e20",20000
    "0x5a20",23072
    "0x5e20",24096
    "0x6a20",27168
    "0x6e20",28192
    "0x7a20",31264
    "0x7e20",32288
    "0x0140",320
    "0x0920",2336
    "0x0940",2368
    "0x0960",2400
    "0x0980",2432
    "0x0a40",2624
    "0x0a60",2656
    "0x0a80",2688
    "0x0aa0",2720
    "0x0b20",2848
    "0x0b40",2880
    "0x0b60",2912
    "0x0b80",2944
    "UNKNOWN",65535

[DmaChannelChoices]
    "PIO",0
    "DMA Channel 01",1
    "DMA Channel 02",2
    "DMA Channel 03",3
    "DMA Channel 04",4
    "DMA Channel 05",5
    "DMA Channel 06",6
    "DMA Channel 07",7
    "DMA Channel 08",8
    "DMA Channel 09",9
    "DMA Channel 10",10
    "DMA Channel 11",11
    "DMA Channel 12",12
    "DMA Channel 13",13
    "DMA Channel 14",14
    "DMA Channel 15",15
    "DMA",500
    "MMIO",501
    "UNKNOWN",65535

[IrqNumberChoices]
    "01",1
    "02",2
    "03",3
    "04",4
    "05",5
    "06",6
    "07",7
    "08",8
    "09",9
    "10",10
    "11",11
    "12",12
    "13",13
    "14",14
    "15",15
    "UNKNOWN",65535

[SlotNumberChoices]
    "00",0
    "01",1
    "02",2
    "03",3
    "04",4
    "05",5
    "06",6
    "07",7
    "08",8
    "09",9
    "10",10
    "11",11
    "12",12
    "13",13
    "14",14
    "15",15
    "16",16
    "17",17
    "18",18
    "19",19
    "20",20
    "21",21
    "22",22
    "23",23
    "24",24
    "25",25
    "26",26
    "27",27
    "28",28
    "29",29
    "30",30
    "31",31
    "UNKNOWN",65535

[RxTxSlotsChoices]
    "Rx=02 Tx=02",0
    "Rx=03 Tx=03",1
    "Rx=04 Tx=04",2
    "Rx=06 Tx=06",3
    "Rx=08 Tx=08",4
    "Rx=10 Tx=10",5

[StatsChoices]
    "Disabled",0
    "Enabled",1

[MpChoices]
    "One",0
    "Multiple",1
    "UNKNOWN",65535
; ----------------------------------------------------------------------
; Language dependent constants specific to the driver.
; ----------------------------------------------------------------------

[FileConstantsENG]

;
; Product Info
;

FunctionTitle   = "MdgMPort v"$(ProductVersion)": Madge Smart Ringnode Setup"

;
; Software.
;

ProductSoftwareTitle       = "MdgMPort"
ProductSoftwareDescription = "MdgMPort: Madge Smart Ringnode NDIS3 Miniport Driver"

;
; Hardware.
;

ProductHardwareMSMDGMPISATitle   = "Madge Smart 16/4 AT Ringnode"
ProductHardwareMSMDGMPATPTitle   = "Madge Smart 16/4 AT Plus Ringnode"
ProductHardwareMSMDGMPISACTitle  = "Madge Smart 16/4 ISA Client Ringnode"
ProductHardwareMSMDGMPISACPTitle = "Madge Smart 16/4 ISA Client Plus Ringnode"
ProductHardwareMSMDGMPPCTitle    = "Madge Smart 16/4 PC Ringnode"
ProductHardwareMSMDGMPEISATitle  = "Madge Smart 16/4 EISA Ringnode"
ProductHardwareMSMDGMPMCATitle   = "Madge Smart 16/4 MC Ringnode"
ProductHardwareMSMDGMPMC32Title  = "Madge Smart 16/4 MC32 Ringnode"
ProductHardwareMSMDGMPSM16Title  = "Madge Smart 16 Ringnode"
ProductHardwareMSMDGMPPNPTitle   = "Madge Smart 16/4 ISA Client PnP Ringnode"
ProductHardwareMSMDGMPPCITitle   = "Madge Smart 16/4 PCI Ringnode"
ProductHardwareMSMDGMPPCIBMTitle = "Madge Smart 16/4 PCI Ringnode (BM)"
ProductHardwareMSMDGMPPCMCIATitle  = "Madge Smart 16/4 PCMCIA Ringnode"

ProductHardwareMSMDGMPISADescription   = "Madge Smart 16/4 AT Ringnode"
ProductHardwareMSMDGMPATPDescription   = "Madge Smart 16/4 AT Plus Ringnode"
ProductHardwareMSMDGMPISACDescription  = "Madge Smart 16/4 ISA Client Ringnode"
ProductHardwareMSMDGMPISACPDescription = "Madge Smart 16/4 ISA Client Plus Ringnode"
ProductHardwareMSMDGMPPCDescription    = "Madge Smart 16/4 PC Ringnode"
ProductHardwareMSMDGMPEISADescription  = "Madge Smart 16/4 EISA Ringnode"
ProductHardwareMSMDGMPMCADescription   = "Madge Smart 16/4 MC Ringnode"
ProductHardwareMSMDGMPMC32Description  = "Madge Smart 16/4 MC32 Ringnode"
ProductHardwareMSMDGMPSM16Description  = "Madge Smart 16 Ringnode"
ProductHardwareMSMDGMPPNPDescription   = "Madge Smart 16/4 ISA Client PnP Ringnode"
ProductHardwareMSMDGMPPCIDescription   = "Madge Smart 16/4 PCI Ringnode"
ProductHardwareMSMDGMPPCIBMDescription = "Madge Smart 16/4 PCI Ringnode (BM)"
ProductHardwareMSMDGMPPCMCIADescription   = "Madge Smart 16/4 PCMCIA Ringnode"

;
; Ring speed selection.
;

SpeedUserListMSMDGMPISA    = {"Set at adapter", "Force 16 MBit/s"}
SpeedRawListMSMDGMPISA     = {0, 2}

SpeedUserListMSMDGMPATP    = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPATP     = {0, 1, 2}

SpeedUserListMSMDGMPISAC   = {"Set at adapter", "Force 16 MBit/s"}
SpeedRawListMSMDGMPISAC    = {0, 2}

SpeedUserListMSMDGMPISACP  = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPISACP   = {0, 1, 2}

SpeedUserListMSMDGMPPC     = {"Set at adapter", "Force 16 MBit/s"}
SpeedRawListMSMDGMPPC      = {0, 2}

SpeedUserListMSMDGMPEISA   = {"Set at adapter"}
SpeedRawListMSMDGMPEISA    = {0}

SpeedUserListMSMDGMPMCA    = {"Set at adapter"}
SpeedRawListMSMDGMPMCA     = {0}

SpeedUserListMSMDGMPMC32   = {"Set at adapter"}
SpeedRawListMSMDGMPMC32    = {0}

SpeedUserListMSMDGMPSM16   = {"Always 16 MBit/s"}
SpeedRawListMSMDGMPSM16    = {0}

SpeedUserListMSMDGMPPNP    = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPPNP     = {0, 1, 2}

SpeedUserListMSMDGMPPCI    = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPPCI     = {0, 1, 2}

SpeedUserListMSMDGMPPCIBM  = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPPCIBM   = {0, 1, 2}

SpeedUserListMSMDGMPPCMCIA = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPPCMCIA  = {0, 1, 2}

;
; Adapter types.
;

AdapterTypeFlagMSMDGMPISA    = 100
AdapterTypeFlagMSMDGMPATP    = 100
AdapterTypeFlagMSMDGMPISAC   = 100
AdapterTypeFlagMSMDGMPISACP  = 100
AdapterTypeFlagMSMDGMPPC     = 100
AdapterTypeFlagMSMDGMPEISA   = 500
AdapterTypeFlagMSMDGMPMCA    = 600
AdapterTypeFlagMSMDGMPMC32   = 600
AdapterTypeFlagMSMDGMPSM16   = 400
AdapterTypeFlagMSMDGMPPNP    = 300
AdapterTypeFlagMSMDGMPPCI    = 700
AdapterTypeFlagMSMDGMPPCIBM  = 700
AdapterTypeFlagMSMDGMPPCMCIA = 200

;
; Messages.
;

CANNOT_FIND_ANY_CARD = "Cannot find a Madge Smart Ringnode in the machine. "+
                       "If you are certain that a Madge Smart Ringode is "+
                       "present then try choosing the adapter type "+
                       "instead of automatic installation. Please note "+
                       "that EISA and MCA adapters will only be found if "+
                       "the EISA configuration utility or PS/2 reference "+
                       "diskette respectively have been used to configure "+
                       "the adapter. Also not that automated installation "+
                       "will not find PCI adapters."

TRIMMED_MFS = "WARNING: The maximum frame size at 16Mbps is 17839 bytes"+
	      "  and you have specified a value greater than that. This"+
	      "  value has been reduced to 17839 for you. If you are in"+
	      "  fact running at 4Mbps, the maximum frame size is 4472,"+
	      "  but do not worry -  the driver will automatically  set"+
	      "  the correct value, and write it to the Event Log."

ShellCodeErrorTitle = "Error: "$(FunctionTitle)
ShellCodeErrorText  = "Shell Code Error"

ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

; ---------------------------------------------------------------------
; Language dependant general dialog constants.
; ---------------------------------------------------------------------

[DialogConstantsENG]

;
; Common button names, etc.
;

Help        = "&Help"
Exit        = "&Cancel"
OK          = "&OK"
Continue    = "C&ontinue"
Cancel      = "C&ancel"
HelpContext = ""

OldValueTitleInstall   = "Current hardware settings"
OldValueTitleConfigure = "Currently configured settings"

ConsultHelp = "Consult help before changing the settings below"

; -----------------------------------------------------------------------
; Language depentant input dialog constants.
; -----------------------------------------------------------------------

[FileDependentDlgENG]

DlgType     = "RadioCombination"
DlgTemplate = $(Option)

Caption = $(FunctionTitle)

Combo1Label = "&IRQ Level:"
Combo2Label = "I/O &Location:"
Combo3Label = "&Transfer method:"
Combo4Label = "Rx/Tx &Buffers:"
Combo5Label = "Traffic &Statistics Gathering:"
Combo6Label = "Please choose a Madge adapter to install"
Combo7Label = "Number of processors in &PC:"
Combo8Label = "Slot &Number:"
Combo9Label = "&Ring Speed:"

PciCombo8Label = "PCI &Device ID:"

Combo1List = $(IrqList)
Combo1Out  = $(IrqNumber)

Combo2List = $(IoList)
Combo2Out  = $(IoLocation)

Combo3List = $(DmaList)
Combo3Out  = $(DmaChannel)

Combo4List = $(RxTxUserList)
Combo4Out  = $(RxTxSlots)

Combo5List = $(StatsUserList)
Combo5Out  = $(StatsFlag)

Combo6List = $(AdapterDescList)
Combo6Out  = $(AdapterType)

Combo7List = $(MpList)
Combo7Out  = $(MpFlag)

Combo8List = $(SlotList)
Combo8Out  = $(SlotNumber)

Combo9List = $(SpeedUserList)
Combo9Out  = $(SpeedFlag)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List, Combo4List, Combo5List, Combo6List, Combo7List, Combo8List, Combo9List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out, Combo4Out, Combo5Out, Combo6Out, Combo7Out, Combo8Out, Combo9Out}

Edit1Label  = "Max&FrameSize:"
Edit2Label  = "&LAA:"
EditTextIn  = {$(MaxFrameSize), $(LAA)}
EditTextLim = {5,17}
EditTextOut = {}

CBOptionsGreyed = {}
NotifyFields = {NO, NO, NO, NO, NO, NO, NO, NO}

HelpContext = $(MadgeHelpId$(Option))

AdapterTitle = #(OptionsText$(!STF_LANGUAGE),$(Option),1)

#####oemnadam.inf i386
[LanguagesSupported]
    ENG
[OptionsTextENG]
    AM1500T = "Advanced Micro Devices AM2100/AM1500T Adapter"
    AM1500T1 = "Novell/Anthem NE1500T Adapter"
    AM1500T2 = "Novell/Anthem NE2100 Adapter"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionAM1500TTitle   = "AMD AM2100/AM1500T Adapter Setup"
FunctionAM1500T1Title   = "Novell/Anthem NE1500T Adapter Setup"
FunctionAM1500T2Title   = "Novell/Anthem NE2100 Adapter Setup"
ProductSoftwareAM1500TDescription       = "AMD AM2100/AM1500T Driver"
ProductSoftwareAM1500T1Description      = "Novell/Anthem NE1500T Driver"
ProductSoftwareAM1500T2Description      = "Novell/Anthem NE2100 Driver"
ProductHardwareAM1500TDescription       = "AMD AM2100/AM1500T Adapter"
ProductHardwareAM1500T1Description      = "Novell/Anthem NE1500T Adapter"
ProductHardwareAM1500T2Description      = "Novell/Anthem NE2100 Adapter"
ProductSoftwareAM1500TTitle     = "AMD Driver"
ProductSoftwareAM1500T1Title    = "Novell/Anthem NE1500T Driver"
ProductSoftwareAM1500T2Title    = "Novell/Anthem NE2100 Driver"
ProductHardwareAM1500TTitle     = "AMD AM2100/AM1500T Adapter"
ProductHardwareAM1500T1Title    = "Novell/Anthem NE1500T Adapter"
ProductHardwareAM1500T2Title    = "Novell/Anthem NE2100 Adapter"
ShellCodeErrorTitle     = "Error: "$(Function$(Option)Title)
ShellCodeErrorText      = "Shell Code Error."
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
DlgType = "MultiCombo"
DlgTemplate = "WD"
Caption = $(Function$(Option)Title)
Combo1Label = "&IRQ Level:"
Combo2Label = "&DMA Channel:"
Combo3Label = "I/&O Port Address:"
Combo1List = $(IRQ_List)
Combo1Out  = $(IRQLevel)
Combo2List = $(DMAChannelList)
Combo2Out  = $(DMAChannel)
Combo3List = $(IOBaseAddressHexList)
Combo3Out  = $(IOBaseAddress)
ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}
EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO, NO}
HelpContext = $(!IDH_DB_OEMNADAM_INS)

=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\inf\beta\chs_net.txt ===
#####oemnadso.inf mips
[LanguagesSupported]
    ENG


;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SONIC      = "ARC Built-in Ethernet Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "ARC Built-in Ethernet Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "ARC Built-in Ethernet Adapter Driver"
;
; Hardware
;
OptionList     = ^(Options, 1)
OptionTextList = ^(OptionsTextENG, 1)

ProductHardwareDescription      = *($(OptionTextList), ~($(OptionList), $(Option)))

ProductSoftwareTitle    = "ARC Built-in Ethernet Adapter Driver"
ProductHardwareSONICTitle       = "ARC Built-in Ethernet Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for sonic
;

[Warning1ENG]
Error = "No configuration is required for this adapter card."

#####oemnadim.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    EE16MC     = "Intel Ether Express MCA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Intel Ether Express MCA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Intel Ether Express MCA Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Intel Ether Express MCA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Intel Ether Express MCA Adapter Driver"
ProductHardwareTitle    = "Intel Ether Express MCA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;

#####oemnadem.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNKMC     = "3Com 3C523 Etherlink/MC Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "3Com 3C523 Etherlink/MC Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com 3C523 Etherlink/MC Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "3Com 3C523 Etherlink/MC Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "3Com 3C523 Etherlink/MC Adapter Driver"
ProductHardwareTitle    = "3Com 3C523 Etherlink/MC Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;
#####oemnadtm.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    IBMTOKMC     = "IBM Token Ring 4/16 Adapter /A"
    IBMTOKA      = "IBM Token Ring Adapter /A"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "IBM Token Ring Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "IBM Token Ring Adapter Driver"
;
; Hardware
;
ProductHardwareIBMTOKADescription      = "IBM Token Ring Adapter /A"
ProductHardwareIBMTOKMCDescription     = "IBM Token Ring 4/16 Adapter /A"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "IBM Token Ring Adapter Driver"
ProductHardwareIBMTOKATitle     = "IBM Token Ring Adapter /A"
ProductHardwareIBMTOKMCTitle    = "IBM Token Ring 4/16 Adapter /A"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Edit1Label = "&Network Address:"

;no translation needed after this

DlgType = "Edit"
DlgTemplate = "NETWORK_NUMBER"
Caption = $(FunctionTitle)

HelpContext = $(!IDH_DB_OEMNADTM_INS)

EditTextLim = 17
EditTextIn  = $(NetworkAddress)
EditFocus   = "ALL"
RCCtlFocusOn = 403

#####oemnadum.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    UBPS     = "Ungermann-Bass Ethernet NIUps Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Ungermann-Bass Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Ungermann-Bass Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Ungermann-Bass Ethernet NIUps Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Ungermann-Bass Driver"
ProductHardwareTitle    = "Ungermann-Bass Ethernet NIUps Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;

#####oemnadwm.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    WD8003EA = "SMC (WD) 8003E /A"
    WD8003WA = "SMC (WD) 8003W /A"
    WD8013WPA = "SMC (WD) 8013WP /A"
    WD8013EPA = "SMC (WD) 8013EP /A"

;  Disable options
;    WD8003EA = "SMC (WD) 8003E /A"
;    WD8003SA = "SMC (WD) 8003S /A"
;    WD8003WA = "SMC (WD) 8003W /A"
;    WD8013WA = "SMC (WD) 8013W /A"
;    WD8115TRA = "SMC (WD) 8115 /A"
;    BISTOR003EA = "SMC (WD) BISTOR003EA /A"
;    BISTOR013EA = "SMC (WD) BISTOR013EA /A"
;    BISTOR013WA = "SMC (WD) BISTOR013WA /A"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
; Product Info
;
FunctionTitle   = "SMC (WD) "$(Option)" Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "SMC (WD) Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "SMC (WD) "$(Option)" Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "SMC (WD) Adapter Driver"
ProductHardwareTitle    = "SMC (WD) "$(Option)" Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;

#####oemnxpxn.inf all
;------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
;       This lists the languages supported by this file.
;       If you add other languages to this list, you must
;       also add the appropriate text sections for the new
;       language
;------------------------------------------------------------------
[LanguagesSupported]
    ENG

;-------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
;
;       These are the text strings used to identify the options to
;       the user.  There should be a header and entry for every
;       language listed in the "LanguagesSupported" section.
;-------------------------------------------------------------------
[OptionsTextENG]
    MCSXNS     = "MCS XNS Network Transport"

;--------------------------------------------------------------------
;       Language Dependent Dialog Constants
;--------------------------------------------------------------------
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "MCS XNS Setup"
ProductMCSXNSDescription     = "MCS XNS System Driver"
ProductUBNBDescription   = "MCS Ungermann-Bass NetBIOS System Driver"
ProductMCSXNSDisplayName = "MCS XNS Network Transport"
ProductMCSXNSTitle      = "MCS XNS Network Transport"
ProductMCSXNSSYSDisplayName = "McsXnssys"
ProductMCSXNSSYSTitle   = "MCS XNS Network Transport Driver"
ProductUBNBDisplayName = "MCS Ungermann-Bass NetBIOS Transport"
ProductUBNBTitle        = "MCS Ungermann-Bass NetBIOS Transport"
ProductUBNBSYSDisplayName = "Ubnbsys"
ProductUBNBSYSTitle      = "MCS Ungermann-Bass NetBIOS Transport Driver"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[FileDependentDlgENG]
;
;--- No UI for McsXns
;

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlg]
STF_MB_TITLE = "Information Message"
; no translation needed for dlgtype
DlgType = "MessageBox"
STF_MB_TEXT  = $(InfoMsgText)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlgCantConfigure]
InfoMsgText = "The MCS XNS service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click  OK.  You will then have the opportunity to configure the adapters."

;--------------------------------------------------------------------
;       Get the string to use while doing the install
;--------------------------------------------------------------------
[Billboard1ENG]
Status = "Installing MCS XNS/UB and related services..."


#####oemnadnp.inf all
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NPEISA     = "Network Peripherals FDDI, EISA"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Network Peripherals FDDI EISA Setup"
;
; Software
;
ProductSoftwareDescription      = "Network Peripherals FDDI EISA Driver"
;
; Hardware
;
ProductHardwareDescription      = "Network Peripherals FDDI EISA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Network Peripherals FDDI, EISA Driver"
ProductHardwareTitle    = "Network Peripherals FDDI Eisa Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for EISA
;

#####nbinfo.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NETBIOS     = "NETBIOS provider"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


ShellCodeErrorTitle     = "Error: NETBIOS Provider"
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]


#####ncpashel.inf all
;**************************************************************************
;  Language Support
;**************************************************************************
[LanguageID]
   ENG

[LanguageTextENG]
   "English (United States)"

;**************************************************************************
; PROGRESS GUAGE VARIABLES: to support file copy operations.
;**************************************************************************

[ProgressCopyENG]
    ProCaption   = "Windows NT Networking Setup"
    ProCancel    = "Cancel"
    ProCancelMsg = "Windows NT is not correctly installed.  Are you sure you want "+
                   "to cancel copying files?"
    ProCancelCap = "Setup Message"
    ProText1     = "Copying:"
    ProText2     = "To:"

    PlatformID_I386 = I386
    PlatformID_Mips = Mips
    PlatformID_PPC  = ppc

;----------------------------------------------
; FATAL ERROR DIALOG
;----------------------------------------------
[FatalDlgENG]
STF_MB_TITLE = "Setup Message"
; no translation needed after this
DlgType = "MessageBox"
STF_MB_TEXT  = $(Error)
STF_MB_TYPE  = 1
STF_MB_ICON  = 3
STF_MB_DEF   = 1

;----------------------------------------------
; FATAL ERRORS
;----------------------------------------------

[FatalError1ENG]
Error = "Initialization failed"

[FatalError2ENG]
Error = "No INF file name given (NTN_Infname)"

[FatalError3ENG]
Error = "Invocation of INF file "$(!NTN_Infname)" failed"

;
;  These values are based upon SHELL_CODE_OK, SHELL_CODE_NO_SUCH_INF, etc.
;
[ShellError1ENG]
Error = "INF file "$(!NTN_Infname)" does not exist"

[ShellError2ENG]
Error = "INF file "$(!NTN_Infname)" does not have a section named "$(!NTN_InfSection)

[ShellError3ENG]
Error = "INF file "$(!NTN_Infname)", section "$(!NTN_InfSection)" has syntax errors"


;-----------------------------------------------------------------------
;
; ROUTINE:      DoAskOemsetupSource
;
; DESCRIPTION:  This routine prompts the source of OEMSETUP.INF
;
; INPUTS:       $0:  Current Src
;
; OUTPUTS:      $R0: STATUS:   STATUS_SUCCESSFUL |
;                              STATUS_USERCANCEL |
;                              STATUS_FAILED
;
;               $R1: Diskette Src
;
;               $R2: Drive to Free or "" if none
;
;               $R3: Actual string returned from dialog
;
;------------------------------------------------------------------------

[DoAskUpgradeSrcDlgTextENG]
    DlgText        = "Please enter the full path for the upgrade/update "+
                     "OEMSETUP.INF file. Then choose Continue."

[IncorrectOemsetupDiskENG]
    ErrorText      = "Update aborted. The OEMSETUP.INF does not support upgrade for the specified component."


#####netdtect.inf all
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NCDETECT = "Netcard Auto-detection Driver and DLLs"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Netcard Auto-detection Driver Setup"
;
; Software
;
ProductSoftwareTitle = "Netcard Auto-detection Driver"
ProductVersion = "1.0"
ServiceDisplayName = "NetDetect"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI; sigh.
;

#####oemnadd1.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DEC100     = "DEC EtherWORKS LC Adapter"
    DEC101     = "DEC EtherWORKS Turbo/LC Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitleDEC100   = "DEC EtherWORKS LC Adapter Card Setup"
FunctionTitleDEC101   = "DEC EtherWORKS Turbo/LC Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "DEC Lance Adapter Driver"
;
; Hardware
;
ProductHardwareDEC100Description        = "DEC EtherWORKS LC Adapter"
ProductHardwareDEC101Description        = "DEC EtherWORKS Turbo/LC Adapter"
ProductSoftwareTitle    = "DEC Lance Adapter Driver"
ProductHardwareDEC100Title      = "DEC EtherWORKS LC Adapter"
ProductHardwareDEC101Title      = "DEC EtherWORKS Turbo/LC Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle$(Option))
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Label1 = "&IRQ Level:"
Label2 = "&Memory Base Address:"
Group1 = "I/O Port Base Address"

Radio1 = "&Primary"
Radio2 = "&Secondary"

; no translation need after this
DlgType = "RadioCombination"
DlgTemplate = "DEC_SETUP"
Caption = $(FunctionTitle$(Option))

CBOptionGreyed = {}
RadioOptionGreyed = {}

RadioIn = {$(IOBaseChoice)}

Combo1List = $(IRQ_List)
Combo1Out  = $(IRQLevel)

Combo2List = $(MemBaseAddrHexList)
Combo2Out  = $(MemBaseAddrHex)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADD1_INS)

#####oemnadd2.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DECETHERWORKSTURBO     = "DEC EtherWORKS Turbo Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

;
; Product Info
;
FunctionTitle   = "DEC EtherWORKS Turbo Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "DEC Lance Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "DEC EtherWORKS Turbo Adapter"
ProductSoftwareTitle    = "DEC Lance Adapter Driver"
ProductHardwareTitle    = "DEC EtherWORKS Turbo Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Label1 = "&IRQ Level:"
Label2 = "&Memory Base Address:"
Group1 = "I/O Port Base Address"

Radio1 = "&Primary"
Radio2 = "&Secondary"

; no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "DEC_SETUP"
Caption = $(FunctionTitle)

CBOptionGreyed = {}
RadioOptionGreyed = {}

RadioIn = {$(IOBaseChoice)}

Combo1List = $(IRQ_List)
Combo1Out  = $(IRQLevel)

Combo2List = $(MemBaseAddrHexList)
Combo2Out  = $(MemBaseAddrHex)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADD2_INS)

#####oemnadd4.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DEC422     = "DEC EtherWORKS Turbo EISA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "DEC EtherWORKS Turbo EISA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "DEC Lance Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "DEC EtherWORKS Turbo EISA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ProductSoftwareTitle    = "DEC Lance Adapter Driver"
ProductHardwareTitle    = "DEC EtherWORKS Turbo EISA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for EISA
;

#####oemnadde.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DECSTAT     = "DEC Turbo Channel Ethernet Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "DEC Turbo Channel Setup"
;
; Software
;
ProductSoftwareDescription      = "DEC Lance Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "DEC Turbo Channel Ethernet Adapter"

ProductSoftwareTitle    = "DEC Lance Adapter Driver"
ProductHardwareTitle    = "DEC Turbo Channel Ethernet Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[DecstationDlgENG]
Label1 = "&Slot Number:"

;no translation needed after this

DlgType = "MultiCombo"
DlgTemplate = "SINGLE_COMBO"
Caption = $(FunctionTitle)

Combo1List = $(SlotList)
Combo1Out  = $(SlotNum)

ComboListItemsIn  = {Combo1List}
ComboListItemsOut = {Combo1Out}

HelpContext = $(!IDH_DB_OEMNADDE_INS)

#####oemnaddi.inf all

[OptionsTextENG]
    DATAFIREU     = "Digi DataFire - ISA1U Adapter"
    DATAFIREST    = "Digi DataFire - ISA1S/T Adapter"
    DATAFIRE4ST   = "Digi DataFire - ISA4S/T Adapter"
    PCIMACISA     = "Digi PCIMAC - ISA Adapter"
    PCIMAC4       = "Digi PCIMAC/4 Adapter"

[OptionsTextMCAENG]
    PCIMACMC      = "Digi PCIMAC - MC Adapter"

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

;
; Product Info
;
FunctionTitle   = "Digi ISDN Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Digi ISDN Adapter Driver"
;
; Hardware
;
ProductHardwarePCIMACDescription        = "Digi ISDN Adapter"

[InvokeRasDlgENG]
InvokeRasSetupMsg = "Digi ISDN setup is complete. "+
                    "Remote Access Services (RAS) will now be installed. "+
                    "Please configure one or more ISDN ports in RAS setup "+
                    "to enable you to use RAS over ISDN."
InvokeRasConfigMsg = "Digi ISDN setup is complete. "+
                     "Remote Access Services (RAS) setup will now be invoked. "+
                     "Please configure one or more ISDN ports in RAS setup "+
                     "to enable you to use RAS over ISDN."
InvokeRasError =  "Digi ISDN setup encountered an error while invoking "+
                  "the RAS setup INF file (OEMNSVRA.INF). "+
                  "Please make sure that the file is present in the system32 "+
                  "directory and is the proper file."
InvokeUserInstallRasMsg = "Digi ISDN setup is complete. "+
                    "Remote Access Services (RAS) should be installed and "+
                    "one or more ISDN ports configured in RAS setup. "

#####oemnaddp.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DECPC     = "DEC EtherWORKS DEPCA"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "DEC EtherWORKS DEPCA Setup"
;
; Software
;
ProductSoftwareDescription      = "DEC Lance Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "DEC EtherWORKS DEPCA"
ProductSoftwareTitle    = "DEC Lance Adapter Driver"
ProductHardwareTitle    = "DEC EtherWORKS DEPCA"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

#####oemnadds.inf all

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DigiBoardCX     = "Digi C/X Adapter"
    DigiBoardXem    = "Digi PC/Xem Adapter"
    DigiBoard8r     = "Digi AccelePort 8 Adapter"
    IBM8r           = "IBM 8-Port Async, EIA-232 (ISA) Adapter"
    DigiBoard8i     = "Digi PC/8i Adapter"
    DigiBoard16i    = "Digi PC/16i Adapter"
    DigiBoard2Port  = "Digi PC/2e (8K) Adapter"
    DigiBoard4Port  = "Digi PC/4e (8K) Adapter"
    DigiBoard8Port  = "Digi PC/8e (8K) Adapter"
    DigiBoard4e     = "Digi PC/4e Adapter"
    DigiBoard8e     = "Digi PC/8e Adapter"
    DigiBoard16e    = "Digi PC/16e Adapter"
    DigiBoardEPC    = "Digi EPC Adapter"
    StarGateClusStar = "Digi/StarGate ClusStar Adapter"

[OptionsTextMCAENG]
    DigiBoardCX     = "Digi MC C/X Adapter"
    DigiBoardXem    = "Digi MC/Xem Adapter"
    DigiBoard8r     = "Digi MC AccelePort 8 Adapter"
    DigiBoard4i     = "Digi MC/4i Adapter"
    DigiBoard8i     = "Digi MC/8i Adapter"
    DigiBoard16i    = "Digi MC/16i Adapter"
    DigiBoard2Port  = "Digi MC/2e (8K) Adapter"
    DigiBoard4Port  = "Digi MC/4e (8K) Adapter"
    DigiBoard8Port  = "Digi MC/8e (8K) Adapter"
    DigiBoardEPC    = "Digi MC EPC Adapter"
    StarGateClusStar = "Digi/StarGate MC ClusStar Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
    ProCaption   = $(ManufacturerDisplayName)" "$(AdapterTitle)" Adapter Setup"
    ProCancel    = "Cance&l"
    ProCancelMsg = $(ManufacturerDisplayName)" Adapters and/or Drivers are not correctly installed. "+
                   "Are you sure you want to cancel copying files?"
    ProCancelCap = $(ProCaption)
    ProText1     = "Copying:"
    ProText2     = "To:"
    Error         = "Unable to determine proper source disk location; copy cannot be performed."
;
; Product Info
;
    FunctionTitle = $(ProCaption)
;
; Software
;
    ProductSoftwareDescription          = $(ManufacturerDisplayName)" FEP 5 Adapter Driver"
    ProductSoftwareDescriptionHdwDriver = $(ManufacturerDisplayName)" "$(AdapterTitle)" Miniport Driver"
    ProductSoftwareTitle    = $(ManufacturerDisplayName)" FEP 5 Driver"
    ProductSoftwareTitleHdwDriver = $(ManufacturerDisplayName)" "$(AdapterTitle)" Miniport Driver"

;
; Configuration Information
;
   ConfigurationTitle = $(ProCaption)
   IRQDisableLabel = "Disabled"

;
; Hardware
;
    ProductHardwareDescription      = $(ManufacturerDisplayName)" "$(AdapterTitle)" Adapter"
    ProductHardwareTitle        = $(ManufacturerDisplayName)" "$(AdapterTitle)" Adapter"

[DialogConstantsENG]
;
; Common button names, etc.
;
    Help        = "&Help"
    Exit        = "E&xit"
    OK          = "OK"
    HelpContext = ""
    Continue    = "C&ontinue"
    Cancel      = "C&ancel"

[UpdatingConfigurationENG]
    UpdatingConfiguration      = "Updating new configuration..."

[AbortMessageENG]
  AbortText  =  "Aborting "$(ManufacturerDisplayName)" Setup. Please reboot the system "+
                "to fix the problem."


#####oemnade1.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNK16     = "3Com Etherlink16/EtherLink16 TP Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "3Com Etherlink 16 Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com Etherlink16/Etherlink16 TP Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "3Com Etherlink16/Etherlink16 TP Adapter"
ProductSoftwareTitle    = "3Com Etherlink16/Etherlink16 TP Adapter Driver"
ProductHardwareTitle    = "3Com Etherlink16/Etherlink16 TP Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Caption = $(FunctionTitle)

Combo1Label = "&IRQ Level:"
Combo2Label = "I/O &Port Address:"
Label1 = "Transceiver Type"
Radio1 = "&External"
Radio2 = "O&n Board"
CheckBox1 = "&Zero Wait State"
Combo3Label = "&Memory Address:"
Combo4Label = "Memo&ry Size:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "ELNK_16"

Combo1Out  = $(IRQ_Level)
Combo1List = $(IRQ_List)
Combo2List = $(IOADDR_Hex_List)
Combo2Out  = $(IOADDR_Hex_Value)
Combo3List = $(MemAddrHexList)
Combo3Out  = $(MemAddrHexValue)
Combo4List = $(MemAddrLengthList)
Combo4Out  = $(MemAddrLength)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List, Combo4List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out, Combo4Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO, NO, NO}

HelpContext = $(!IDH_DB_OEMNADE1_INS)

#####oemnade2.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNKII     = "3Com Etherlink II Adapter (also II/16 and II/16 TP)"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "3Com Etherlink II Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com Etherlink II Adapter Driver"
;
; Hardware
;
ProductHardwareELNKIIDescription        = "3Com Etherlink II Adapter"
ProductSoftwareTitle    = "3Com Etherlink II Adapter Driver"
ProductHardwareELNKIITitle = "3Com Etherlink II Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[MemoryMappedChoicesENG]

Map_1 = 1, "ON"
Map_2 = 0, "OFF"


[FileDependentDlgENG]

DlgText = "Please select values for the following fields:"

Combo1Label = "&IRQ Level:"
Combo2Label = "I/O &Port Address:"
CheckBox1   = "&Memory Mapped"
Label1 = "Transceiver Type"

Radio1 = "&External"
Radio2 = "O&n Board"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "ELNK_II"
Caption = $(FunctionTitle)

Combo1List = $(IRQ_List)
Combo1Out  = $(IRQ_Level)
Combo2List = $(IOADDR_Hex_List)
Combo2Out  = $(IOADDR_Hex_Value)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADE2_INS)

#####oemnadin.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    EE16     = "Intel Ether Express 16 LAN Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Intel Ether Express 16 LAN Adapter Setup"
;
; Software
;
ProductSoftwareDescription      = "Intel Ether Express 16 LAN Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Intel Ether Express 16 LAN Adapter"
ProductSoftwareTitle    = "Intel Ether Express 16 LAN Adapter Driver"
ProductHardwareTitle    = "Intel Ether Express 16 LAN Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

IOReadyListShort = { "Late", "Never" }
IOReadyList      = { "Early", "Late", "Never" }
TransceiverList  = {"Thick Net (AUI/DIX)","Thin Net (BNC/COAX)","Twisted-Pair (TPE)"}

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------

[FileDependentDlgENG]
Combo1Label = "&IRQ Level:"
Combo2Label = "I/&O Port Address:"
Combo3Label = "I/O &Channel Ready:"
Combo4Label = "&Transceiver Type:"

EarlyWarning = "Use of the Early setting may cause system failure in some machines. "+
               "Are you sure you wish to continue?"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "EE_16"
Caption = $(FunctionTitle)

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOBaseAddrHexList)
Combo2Out  = $(IOBaseAddress)
Combo3List = $(IOReadyListDisplay)
Combo3Out  = $(IOReadyValue)
Combo4List = $(TransceiverList)
Combo4Out  = $(TransceiverValue)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List, Combo4List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out, Combo4Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADIN_INS)


#####oemnadep.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    IEEPRO = "Intel EtherExpress PRO Ethernet Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle = "Intel EtherExpress PRO Ethernet Adapter Setup"
;
; Software
;
ProductSoftwareDescription = "Intel EtherExpress PRO Ethernet Driver"
;
; Hardware
;
ProductHardwareDescription = "Intel EtherExpress PRO Ethernet Adapter"

;
; Dialog Message Information
;
IRQList = {"3", "5", "9", "10", "11"}
IOReadyList = { "Early", "Late", "Never", "Auto Detect" }
IOReadyListExt = { "Early", "Late", "Never", "Auto Detect" }
TransceiverList = {"Thick Net (AUI/DIX)","Thin Net (BNC/COAX)","Twisted-Pair (TPE)","Auto Connect"}

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------

[FileDependentDlgENG]

DlgType = "RadioCombination"
DlgTemplate = "EE_16"
Caption = $(FunctionTitle)

DlgText = "Please select values for the following fields:"

Combo1Label = "&Interrupt Number:"
Combo2Label = "I/O &Port Address:"
Combo3Label = "I/O &Channel Ready:"
Combo4Label = "&Transceiver Type:"

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOAddrList)
Combo2Out  = $(IOAddrValue)
Combo3List = $(IOReadyList)
Combo3Out  = $(IOReadyValue)
Combo4List = $(TransceiverList)
Combo4Out  = $(TransceiverValue)
ComboListItemsIn  = {Combo1List, Combo2List, Combo3List, Combo4List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out, Combo4Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADEP_INS)

#####oemnadn2.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NE2000              = "Novell NE2000 Compatible Adapter"
    NE2000SOCKETEA      = "Novell NE2000 Socket EA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitleNE2000   = "Novell NE2000 Compatible Network Card Setup"
FunctionTitleNE2000SOCKETEA   = "Novell NE2000 Socket EA Network Card Setup"


;
; Software
;
ProductSoftwareNE2000Description      = "Novell NE2000 Adapter Driver"
ProductSoftwareNE2000SOCKETEADescription      = "Novell NE2000 Socket EA Adapter Driver"
;
; Hardware
;
ProductHardwareNE2000Description        = "Novell NE2000 Adapter"
ProductHardwareNE2000SOCKETEADescription        = "Novell NE2000 Socket EA Adapter"
ProductSoftwareNE2000Title    = "Novell NE2000 Adapter Driver"
ProductSoftwareNE2000SOCKETEATitle    = "Novell NE2000 Socket EA Adapter Driver"
ProductHardwareNE2000Title      = "Novell NE2000 Adapter"
ProductHardwareNE2000SOCKETEATitle      = "Novell NE2000 Socket EA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------

[FileDependentDlgENG]
Label1 = "&IRQ Level:"
Label2 = "I/O &Port Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "NE2000"
Caption =  $(FunctionTitle$(Option))

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOBaseAddrHexList)
Combo2Out  = $(IOBaseAddress)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADN2_INS)

#####oemnadne.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NE3200     = "Novell NE3200 EISA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Novell 3200 EISA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Novell 3200 Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Novell NE3200 EISA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Novell 3200 Adapter Driver"
ProductHardwareTitle    = "Novell NE3200 EISA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for EISA
;

#####oemnads1.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SONICEISA     = "Sonic, EISA"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Sonic EISA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Sonic EISA Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Sonic, EISA"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Sonic EISA Adapter Driver"
ProductHardwareTitle    = "Sonic, EISA"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for EISA
;

#####oemnadnf.inf all
[LanguagesSupported]
    ENG
[OptionsTextENG]
    CPQTOK     = "<this option is no longer supported for install>"
    BONSAI     = "COMPAQ NetFlex-2 DualPort ENET Controller"
    RODAN      = "COMPAQ NetFlex-2 DualPort TR Controller"
    NETFLX     = "COMPAQ NetFlex/NetFlex-2 ENET-TR Controller"
    DURANGO    = "COMPAQ NetFlex-2 TR Controller"
    MAPLE      = "COMPAQ 32-Bit DualSpeed Token-Ring Controller"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cance&l"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "COMPAQ NetFlex Adapter Card Setup"
ProductSoftwareDescription        = "COMPAQ ENET-TR EISA Driver"
ProductHardwareBONSAIDescription  = "COMPAQ NetFlex-2 DualPort ENET Controller"
ProductHardwareRODANDescription   = "COMPAQ NetFlex-2 DualPort TR Controller"
ProductHardwareNETFLXDescription  = "COMPAQ NetFlex/NetFlex-2 ENET-TR Controller"
ProductHardwareDURANGODescription = "COMPAQ Token-Ring Controllers"
ProductHardwareCPQTOKDescription        = "COMPAQ 32-Bit DualSpeed Token-Ring Controller (ns)"
ProductHardwareMAPLEDescription        = "COMPAQ 32-Bit DualSpeed Token-Ring Controller"
CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ProductSoftwareTitle            = "COMPAQ ENET-TR Driver"
ProductHardwareBONSAITitle      = "COMPAQ NetFlex-2 DualPort ENET Controller"
ProductHardwareRODANTitle       = "COMPAQ NetFlex-2 DualPort TR Controller"
ProductHardwareNETFLXTitle      = "COMPAQ NetFlex/NetFlex-2 ENET-TR Controller"
ProductHardwareDURANGOTitle     = "COMPAQ NetFlex-2 TR Controller"
ProductHardwareCPQTOKTitle      = "COMPAQ 32-Bit Token-Ring Controller (ns)"
ProductHardwareMAPLETitle      = "COMPAQ 32-Bit Token-Ring Controller"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
Edit1Label = "&Network Address:"

;no translation needed after this

DlgType = "Edit"
DlgTemplate = "NETWORK_NUMBER"
Caption = $(FunctionTitle)

HelpContext = $(!IDH_DB_OEMNADNF_INS)

EditTextLim = 17
EditTextIn  = $(NetworkAddress)
EditFocus   = "ALL"
RCCtlFocusOn = 403


#####oemnadp3.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    P1390     = "Proteon p139X Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Proteon p139X Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Proteon Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Proteon p139X Adapter"

ProductSoftwareTitle    = "Proteon Adapter Driver"
ProductHardwareTitle    = "Proteon p139X Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Label1 = "&IRQ Level:"
Label2 = "I/O &Port Base Address:"
Label3 = "&DMA Channel:"
Group1 = "Cable &Type"
Group2 = "Card Sp&eed"

Radio1 = "&UTP"
Radio2 = "&STP"
Edit1Label = "&Network Address:"

;no translation needed after this

Radio3 = "&4"
Radio4 = "&16"

DlgType = "RadioCombination"
DlgTemplate = "PROTEON"
Caption = $(FunctionTitle)

CBOptionGreyed = {}
RadioOptionGreyed = {}

Combo1List = $(IRQ_List)
Combo1Out  = $(IRQLevel)

Combo2List = $(IOBaseAddressList)
Combo2Out  = $(IOBaseAddress)

Combo3List = $(DMA_List)
Combo3Out  = $(DMAChannel)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}


EditTextIn = $(NetworkAddress)
EditTextLim = 17
NotifyFields = {NO, NO, NO}
RCCtlFocusOn = 403

HelpContext = $(!IDH_DB_OEMNADP3_INS)

#####oemnadp9.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    P1990     = "Proteon p199X Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Proteon p199X Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Proteon Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Proteon p199X Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductHardwareTitle    = "Proteon p199X Adapter"
ProductSoftwareTitle    = "Proteon Adapter Driver"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Group1 = "Card Speed"
Radio1 = "&4"
Radio2 = "&16"
Edit1Label = "&Network Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "IBM_TOKEN"
Caption = $(FunctionTitle)
ComboListItemsIn = {}
ComboListItemsOut = {}
EditTextLim = 17
EditTextIn = $(NetworkAddress)
Edit1Label = "&Network Address:"

HelpContext = $(!IDH_DB_OEMNADP9_INS)

EditTextLim = 17
EditTextIn  = $(NetworkAddress)
EditFocus   = "ALL"
RCCtlFocusOn = 403

#####oemnadtk.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    IBMTOK     = "IBM Token Ring (ISA/PCMCIA) Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "IBM Token Ring Adapter Card Setup"
FunctionTitle1   = "IBM Token Ring PCMCIA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "IBM Token Ring (ISA/PCMCIA) Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "IBM Token Ring (ISA/PCMCIA) Adapter"

ProductSoftwareTitle    = "IBM Token Ring Adapter (ISA/PCMCIA) Driver"
ProductHardwareTitle    = "IBM Token Ring (ISA/PCMCIA) Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Group1 = "I/O Port Base Address"
Radio1 = "&Primary"
Radio2 = "&Secondary"
Edit1Label = "&Network Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "IBM_TOKEN"
Caption = $(FunctionTitle)
ComboListItemsIn = {}
ComboListItemsOut = {}
EditTextLim = 17
EditTextIn = $(NetworkAddress)

OptionsGreyed = {}

HelpContext = $(!IDH_DB_OEMNADTK_INS)
RCCtlFocusOn = 403

[SecondDlgENG]
Group1 = "Network Speed"
HelpContext = 1
Caption = $(FunctionTitle1)
Combo1Label = "Network &Speed:"
Combo2Label = "Card &IRQ Level:"
Combo3Label = "Memory &Base:"
Combo1List = $(SpeedList)
Combo1Out = $(Token1Speed)
Combo2List = $(IRQList)
Combo2Out = $(Token1IRQVal)
Combo3List = $(MMIOList)
Combo3Out = $(Token1MMIO)
DlgType = Combination
DlgTemplate = "WD"
ComboListItemsIn = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}
CBOptionsGreyed = {}
EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO, NO}
HelpContext = 1

#####oemnadub.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    UBPC     = "Ungermann-Bass Ethernet NIUpc Adapter"
    UBPCEOTP = "Ungermann-Bass Ethernet NIUpc/EOTP Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Ungermann-Bass Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Ungermann-Bass Adapter Driver"
;
; Hardware
;
ProductHardwareUBPCDescription          = "Ungermann-Bass Ethernet NIUpc Adapter"
ProductHardwareUBPCEOTPDescription      = "Ungermann-Bass Ethernet NIUpc/EOTP Adapter"
ProductHardwareUBPSDescription          = "Ungermann-Bass Ethernet NIUps Adapter"

ProductSoftwareTitle    = "Ungermann-Bass Driver"
ProductHardwareUBPCTitle        = "Ungermann-Bass Ethernet NIUpc Adapter"
ProductHardwareUBPCEOTPTitle    = "Ungermann-Bass Ethernet NIUpc/EOTP Adapter"
ProductHardwareUBPSTitle        = "Ungermann-Bass Ethernet NIUps Adapter"

IRQList  = ^(IRQChoices$(Option), 1)
IRQValues = ^(IRQChoices$(Option), 2)
IOBaseAddrList = ^(IOBaseAddrChoices, 1)
IOBaseAddrValues = ^(IOBaseAddrChoices, 2)
MemMappedWndAddrList = ^(MemMappedWndBaseAddrChoices$(Option), 1)
MemMappedWndAddrValues = ^(MemMappedWndBaseAddrChoices$(Option), 2)

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Label1 = "&Interrupt Number:"
Label2 = "I/O &Port Base Addr:"
Label3 = "&Memory Address:"

;no translation needed after this

DlgType = "Combination"
DlgTemplate = "UBNDIS"
Caption = $(FunctionTitle)

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOBaseAddrList)
Combo2Out  = $(IOBaseAddrValue)
Combo3List = $(MemMappedWndAddrList)
Combo3Out  = $(MemMappedWndAddrValue)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}

EditTextLim = ""
CBOptionsGreyed = {}

HelpContext = $(!IDH_DB_OEMNADUB_INS)

#####oemnadwd.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SMCISA = "SMC (WD) EtherCard"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "SMC (WD) ISA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "SMC (WD) Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "SMC (WD) ISA Adapter"

ProductSoftwareTitle    = "SMC (WD) Adapter Driver"
ProductHardwareTitle    = "SMC (WD) ISA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Combo1Label = "&IRQ Level:"
Combo2Label = "&Memory Base Address:"
Combo3Label = "I/&O Port Address:"

;no translation needed after this

DlgType = "MultiCombo"
DlgTemplate = "WD"
Caption = $(FunctionTitle)

Combo1List = $(IRQ_List)
Combo1Out  = $(IRQLevel)

Combo2List = $(WinBaseAddressHexList)
Combo2Out  = $(WinBaseAddress)

Combo3List = $(IOBaseAddressHexList)
Combo3Out  = $(IOBaseAddress)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}

EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO, NO}

HelpContext = $(!IDH_DB_OEMNADWD_INS)

#####oemnsvf1.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG
;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    FTPD     = "FTP Server"
;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "FTP Setup"
;
; Software
;
ProductSoftwareDescription      = "FTP Server"
;
; The user needs to install Microsoft TCP/IP before install FTP.
; If TCPIP does not exist in the registry, the inf file will popup this
; message and exit.
;
ProductSoftwareDisplayName      = "FTP Server"
ProductSoftwareTitle            = "FTP Server"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DefaultsENG]
AnonymousUsername = "guest"

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for FTP
;

#####oemnsvir.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    IPRIP = "RIP for Internet Protocol"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductIPRIPTitle       = "RIP for Internet Protocol"
ProductIPRIPDescription = "Routing Information Protocol. Enables a router to exchange routing information with other routers on an IP LAN."
ProductIPRIPDisplayName = "RIP for Internet Protocol"

[VerExistsENG]
    Ver   = " version "
    Text1 = " is already installed."

[InUseENG]
Error = "RIP for Internet Protocol is currently in use by other network protocols. Please remove all related services first."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"


#####oemnsvrr.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NWLNKRIP = "RIP for NwLink IPX/SPX compatible transport"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductNWLNKRIPTitle       = "RIP for NWLink IPX"
ProductNWLNKRIPDescription = "RIP for NWLink IPX"
ProductNWLNKRIPDisplayName = "RIP for NWLink IPX"

[VerExistsENG]
    Ver   = " version "
    Text1 = " is already installed. "

[InUseENG]
Error = "RIP for NWLink IPX is currently in use by other network protocols. Please remove all related services first."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[EnableNetbiosRoutingDlgENG]
DlgType = "MessageBox"
STF_MB_TITLE = "RIP for NWLink IPX Configuration"
STF_MB_TYPE  = 3
STF_MB_ICON  = 2
STF_MB_DEF   = 2

Enabled  = "NetBIOS Broadcast Propagation (broadcast of type 20 packets) is currently enabled. "$(!LF)+
           "If any Microsoft Windows clients use NwLink IPX to connect to this server, you must "+
           "enable this option to allow NwLink IPX to function correctly."$(!LF)+
           "Enable this option only if you understand the routing implications because it might "+
           "affect your network performance."$(!LF)$(!LF)+
           "Do you want to disable NetBIOS Broadcast Propagation?"

Disabled = "NetBIOS Broadcast Propagation (broadcast of type 20 packets) is currently disabled. "$(!LF)+
           "If any Microsoft Windows clients use NwLink IPX to connect to this server, you must "+
           "enable this option to allow NwLink IPX to function correctly."$(!LF)+
           "Enable this option only if you understand the routing implications because it might "+
           "affect your network performance."$(!LF)$(!LF)+
           "Do you want to enable NetBIOS Broadcast Propagation?"

[ConfigErrorTxtENG]
Error = "Could not open the NWLNKRIP\Parameters registry key."

#####oemnsvnb.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NETBIOS     = "NetBIOS Interface"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "NetBIOS Interface Setup"
;
; Software
;
ProductSoftwareDescription      = "Defines a software interface and naming convention for Microsoft networking."
ProductSoftwareDisplayName = "NetBIOS Interface"
ProductSoftwareTitle    = "NetBIOS Interface"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for NETBIOS
;
[InfoDlgCantConfigure]
InfoMsgTitle = "Information Message"
InfoMsgText = "The NETBIOS service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click OK."

#####oemnsvrp.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    RPCLOCATE   = "RPC Configuration"
    RPCBANYAN   = "RPC support for Banyan"

[LocatorNamesENG]
LocName1 = "Windows NT Locator"
LocName2 = "DCE Cell Directory Service"

[SecurityNamesENG]
SecName1 = "Windows NT Security Service"
SecName2 = "DCE Security Service"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Software
;
ProductSoftwareDescription      = "Remote Procedure Call service enables RPC-written programs to perform procedures on multiple computers. Includes the endpoint mapper and other RPC services."
ProductRPCTitle   = "RPC Configuration"
ProductRPCBanyanTitle   = "RPC support for Banyan"
ProductRPCBaynanSoftDescription      = "RPC support for Banyan"

RpcSrvDisplayNameRpcss   = "Remote Procedure Call (RPC) Service"
RpcSrvDisplayNameLocator = "Remote Procedure Call (RPC) Locator"
RpcSrvDisplayNameSSP     = "NT LM Security Support Provider"
RpcSuiteDisplayName      = "Remote Procedure Call Configuration"

[RPCLOCATEConstantsENG]
;
; Product Info
;
FunctionTitle   = "RPC Configuration"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[RPCBANYANConstantsENG]
;
; Product Info
;
FunctionTitle   = "RPC support for Banyan"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[RpcProviderDlgENG]
Caption = "RPC Configuration"

Edit1Label = "Network &Address:"

Combo1Label = "&Name Service Provider:"
Combo2Label = "&Security Service Provider:"
Help        = "&Help"
Continue    = "OK"
Cancel      = "Cancel"

;no translation needed after this

DlgType = Combination
DlgTemplate = "RPCPROVIDE"
EditTextIn = $(NetworkAddress)

EditFocus = "ALL"
EditTextLim = 50

Combo1List  = $(LocatorListboxNames)
Combo1Out   = $(LocatorChosenName)

Combo2List  = $(SecurityListboxNames)
Combo2Out   = $(SecurityChosenName)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

HelpContext = $(!IDH_DB_RPCLOCATE_INS)
ExitState   = "Active"
NotifyFields = { YES }

[NonFatalError1ENG]
NonFatal = "No network address was entered."

[NonFatalError2ENG]
NonFatal = "Network address ignored for Windows NT Locator."

[NonFatalError3ENG]
NonFatal = "The DCE Security Service is not installed on this computer."

#####oemnsvsv.inf all

;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SRV         = "Server"
;   XACTSRV     = "LAN Manager Translator"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Server"
;
; Software
;
ProductSRVDescription           = "Installs support for the SMB (Server Message Block) protocol, the core of Microsoft networking."
ProductXACTSRVDescription       = "Microsoft LAN Manager Translator Service"
ProductSRVDisplayName   = "Server"
ProductSRVTitle         = "Server"
ProductXACTDisplayName  = "XactSrv"
ProductSRVSRVDisplayName       = "Srv"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
GroupLabel = "Optimization:"

Radio1 = "&Minimize Memory Used"
Radio2 = "&Balance"
Radio3 = "M&aximize Throughput for File Sharing"
Radio4 = "Ma&ximize Throughput for Network Applications"

CheckBox1 = "Ma&ke Browser Broadcasts to LAN Manager 2.x Clients"

;no translation needed after this

DlgType = "RadioCombination"               ; DON'T NATIONALIZE
DlgTemplate = "LMSERVER"       ; DON'T NATIONALIZE
Caption = $(FunctionTitle)

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
ComboListItemsOut = {}

OptionsGreyed = {}

HelpContext = $(!IDH_DB_OEMNSVSV_INS)

#####oemnsvwk.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    WKSTA       = "Workstation"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

;
; Error Message
;
RemoveBrowserError = "The Browser may not be removed. Please remove the Workstation service first."
UpdateBrowserError = "You must update the Windows Workstation in order to update the Browser."

;
; Product Info
;
FunctionTitle   = "Workstation Services Setup"
;
; Software
;
ProductWKSTADescription         = "Installs the client for the SMB (Server Message Block) protocol, the core of Microsoft networking."
ProductNETLOGONDescription      = "Microsoft Network Authentication Service"
ProductALERTERDescription       = "Microsoft Alerter Service"
ProductBROWSERDescription       = "Distributed protocol required for running the Computer Browser service."
ProductMESSENGERDescription     = "Microsoft Messenger Service"
ProductRDRDescription           = "Microsoft Redirector Service"
ProductREPLDescription          = "Microsoft Directory Replicator Service"
ProductMUPDescription           = "Microsoft MUP Service"
ProviderRDRName                 = "NT Lan Manager"

ProductWKSTADisplayName = "Workstation"
ProductWKSTATitle       = "Workstation"
ProductNETLOGONDisplayName = "Net Logon"
ProductNETLOGONTitle    = "Net Logon"
ProductALERTERDisplayName = "Alerter"
ProductALERTERTitle     = "Alerter"
ProductBROWSERDisplayName = "Computer Browser"
ProductBROWSERTitle     = "Computer Browser"
ProductMESSENGERDisplayName = "Messenger"
ProductMESSENGERTitle   = "Messenger"
ProductRDRDisplayName   = "MRXSMB"
ProductRDRTitle         = "Redirector"
PruductRDRBSSDisplayName = "RDBSS"
ProductProviderName = "Microsoft Windows Network"
ProductREPLDisplayName  = "Directory Replicator"
ProductREPLTitle        = "Directory Replicator"
ProductMUPDisplayName   = "Mup"
ProductMUPTitle         = "Mup"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for workstation
;
#####oemnxpdl.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DLC     = "DLC Protocol"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "DLC Setup"
;
; Software
;
ProductSoftwareDescription      = "Data Link Control enables this computer to connect to an IBM mainframe and set up printers attached directly to network control."

ProductSoftwareDisplayName      = "DLC Protocol"
ProductSoftwareTitle    = "DLC Protocol"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for DLC
;

#####oemnxpnb.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NBF     = "NetBEUI Protocol"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "NetBEUI Protocol"
;
; Software
;
ProductSoftwareDescription      = "A nonroutable protocol designed for use in small LANs."
;
ProductSoftwareDisplayName = "NetBEUI Protocol"
ProductSoftwareTitle    = "NetBEUI Protocol"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
GroupLabel = "Optimization:"

Radio1 = "&Minimize Memory Used"
Radio2 = "&Balance"
Radio3 = "M&aximize Throughput && Connections"

;no translation needed after this

DlgType = "Radio"               ; DON'T NATIONALIZE
DlgTemplate = "NBF"             ; DON'T NATIONALIZE
Caption = $(FunctionTitle)

OptionsGreyed = {}

HelpContext = $(!IDH_DB_OEMNXPNB_INS)


#####oemnxpst.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    STREAMS = "Streams Environment"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductSTREAMSDescription       = "Enables transport drivers developed in STREAMS environments (popular on UNIX platforms) to port easily to Windows NT."
ProductSTREAMSDisplayName       = "Streams Environment"
ProductSTREAMSTitle     = "Streams Environment"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

StreamsAlreadyInstalled  = "Streams Environment is already installed in the system."
RefCountNotZeroMsg = "The Streams Environment is currently in use by other network protocols. Please removed all streams-based protocols first."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for STREAMS
;

;**************************************************************************
;
; BILLBOARD DIALOG SECTIONS
;
;**************************************************************************
[Billboard1ENG]
Status = "Installing STREAMS and related services..."

#####oemnxpnn.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    TCPIP     = "Old TCP/IP Protocol"
;   TELNET    = "Telnet"
;   NBT       = "RFC NetBIOS"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "TCP/IP Setup"
;
; Software
;
ProductTCPIPDescription         = "TCP/IP System Driver"
ProductNBTDescription           = "NBT System Driver"

ProductTCPIPDisplayName = "TCP/IP Protocol"
ProductTCPIPTitle       = "TCP/IP Protocol"

ProductTCPIPSYSDisplayName = "Tcpipsys"
ProductTCPIPSYSTitle    = "TCP/IP Network Transport Driver"

ProductNBTDisplayName   = "TCP/IP NetBIOS"
ProductNBTTitle         = "TCP/IP NetBIOS"

ProductNBTSYSDisplayName = "Nbtsys"
ProductNBTSYSTitle      = "RFC NetBIOS Driver"

ProductTELNETDisplayName = "Telnet"
ProductTELNETTitle      = "Telnet Networking Support Environment"

ProductTELNETSYSDisplayName = "Telnetsys"
ProductTELNETSYSTitle     = "Telnet Driver"

ProductLOOPDisplayName  = "Loop"
ProductLOOPTitle        = "Loop Support Environment"

ProductLMHOSTSDisplayName = "TCP/IP NetBIOS Helper"
ProductLMHOSTSTitle     = "TCP/IP NetBIOS Helper"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for TCPIP
;
;----------------------------------------------
; INFO DIALOG
;----------------------------------------------
[InfoDlg]
STF_MB_TITLE = "Information Message"

;no translation needed after this

DlgType = "MessageBox"
STF_MB_TEXT  = $(InfoMsgText)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

[InfoDlgCantConfigure]
InfoMsgText = "The TCP/IP service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click  OK.  You will then have the opportunity to configure the adapters."

;----------------------------------------------
; WARNING DIALOG
;----------------------------------------------
[WarningDlgENG]
STF_MB_TITLE = "TCP/IP Setup Warning"

;no translation needed after this

DlgType = "MessageBox"
STF_MB_TEXT  = $(Error)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

;**************************************************************************
;
; BILLBOARD DIALOG SECTIONS
;
;**************************************************************************
[Billboard1ENG]
Status = "Installing TCP/IP and related services..."

[LMHOSTDlgENG]

Caption = "Import LMHOSTS File"
Import = "&Import"

DlgText = "If you want to import an existing LMHOSTS file, enter the directory path where the file is located and choose Import. Otherwise, choose Continue."

;no translation needed after this

DlgType = "Edit"
DlgTemplate = "LMHOST"
EditTextIn = ""

HelpContext = $(!IDH_DB_LMHOST_INS)

[LMHOSTAskSourceStringsENG]
String1 = "Error processing path entered.  Please reenter the path."

String2 = "Setup requires a full path of the Windows NT distribution files.  "+
          "Please reenter the path."

String3 = "Setup failed to find a free drive to use to connect to the "+
          "server specified.  Please free up some drives and try again."

String4 = "Setup failed to connect to the server specified.  Please reenter "+
          "the path."

String5 = "You just typed in a new LMHOSTS file path. Are you sure that you want to use the default LMHOSTS file?"

#####utility.inf all
[AFDVars]
;
; AFD Software data
;
ProductAFDTitle         = "AFD Networking Support Environment"
;
; don't localize the next 3 lines
;
ProductAFDName          = "Afd"
ProductAFDImagePath     = "\SystemRoot\System32\drivers\afd.sys"
ProductAFDSvcType       = "kernelautostart"

;---------------------------------------------
;
;  Section used to build RegistryErrorList$(STF_LANGUAGE)
;
[RegistryErrorsENG]
UNABLE_ACCESS_SOFTWARE_REG,"Unable to access SOFTWARE subtree in Registry"
UNABLE_CREATE_MANUFACTURER_KEY,"Unable to create Manufacturer key in Registry"
UNABLE_OPEN_MICROSOFT_KEY,"Unable to open Microsoft subkey in Registry"
UNABLE_CREATE_PRODUCT_KEY,"Unable to create subkey in Registry for Windows NT"
UNABLE_CREATE_PRODUCT_VERSION,"Unable to create version subkey in Registry for Windows NT"
UNABLE_CREATE_NETRULES_KEY,"Unable to create a NetRules subkey in Registry"
UNABLE_OPEN_HARDWARE_SECTION,"Unable to open HARDWARE subkey in Registry"
UNABLE_OPEN_NETWORKCARD_SECTION,"Unable to open NetworkCards subkey in Registry"
UNABLE_OPEN_EVENTLOG_SUBKEY,"Unable to open Eventlog subkey in Registry"
UNABLE_CREATE_NETCARD_CONFIGURATION,"Unable to create entry for network adapter in Registry"
UNABLE_ACCESS_CONFIGURE_SERVICE,"Unable to access Services subkey in Registry"
UNABLE_CREATE_CONFIGURE_SERVICE,"Unable to create Services subkey in Registry"
UNABLE_CREATE_SERVICE_SUBKEY,"Unable to create Services subkey in Registry"
INVALID_DATA_PASSED,"Invalid data passed to Registry utility routine"
SERVICE_ALREADY_EXISTS,"Registry Service subkey already exists"
OPERATION_UNIMPLEMENTED,"Registry operation UNIMPLEMENTED"
CANNOT_FIND_COMPONENT_SERVICE,"Component service name not found or non-existent"
CANNOT_CONFIGURE_HARDWARE,"Cannot configure the hardware component"
CANNOT_CONFIGURE_SOFTWARE,"Cannot configure the software component"
UNABLE_WRITE_REGISTRY, "Cannot write to registry"
UNABLE_INSTALL, "Installation Error"
PROVIDER_ALREADY_EXISTED, "Provider already exists in Registry"
PROVIDER_ORDER_DOES_NOT_EXIST, "Provider order does not exist in Registry."
TCPIP_NONEXIST_ERROR, "Please install Microsoft TCP/IP before installing SNMP."
TCPIP_NONEXIST_ERROR_FTPD, "Please install Microsoft TCP/IP before installing FTP Server."
NO_BINDING_INFO, "Missing Binding Information. Please click BINDINGS button first."
CANNOT_OPEN_EVENTLOG_KEY, "Cannot open Eventlog subkey in Registry."
CANNOT_CREATE_SNMPPROXYKEY, "Cannot create SNMP Proxy subkey in Registry."
REF_COUNT_NOT_ZERO, "Please remove all related network adapter cards before removing the software driver."
UNABLE_REMOVE_CONFIGURE_SERVICE,"Unable to remove Services subkey for a software driver in Registry"
UNABLE_ACCESS_WINSOCK_MAP_INFO,"Unable to access WinSock mapping information in DLL"
VERIFY_WARNING,"The current netcard parameters are not verifiably correct and may result in usage problems or system failure.  Use them anyway?"
CANNOT_DETECT,"Setup is unable to obtain network adapter information from the associated network adapter DLL files.  Operation cannot continue."
UNABLE_COPY_FILE,"File copy operation failed."
ASK_SOURCE_FAIL,"Failed to obtain source file location."
SETUP_FAIL,"Setup operation failed."
SERVICE_MARKED_FOR_DELETE,"This network component has recently been removed. Please restart your computer before installing it again."
REBOOT_MACHINE_BEFORE_ADD_ADAPTER,"This network component has recently been removed. Please restart your computer before installing it again."
CANT_REMOVE_WKSTA_NTAS,"The Workstation cannot be removed on a Windows NT Domain Controller."
CANT_REMOVE_SERVER_NTAS,"The Server cannot be removed on a Windows NT Domain Controller."
NO_ERROR, ""
DLC_NONEXIST_ERROR, "Please install Microsoft DLC before installing Remoteboot."
NBF_NONEXIST_ERROR, "Please install the NetBEUI protocol before installing Remoteboot."
UNABLE_ADD_NAMESPACE_PROVIDER, "Unable to add software component as a Name Space Provider"
UNABLE_REMOVE_NAMESPACE_PROVIDER, "Unable to remove Name Space Provider"

[RegistryErrorUnknownENG]
Error_Bogus = "UNKNOWN REGISTRY FAILURE"

;
;---------------------------------------------
;
; Section used for version already exists dialog
;

[VerExistedENG]
ver = " ver "
Text = " already exists on the system. Please use [Update] to update the software."

[CardExistedENG]
Text = "A network card of this type is already installed in the system. Do you want to continue?"

;---------------------------------------------

;*************************************************************************
;  end of section  RemoveNetworkProvider
;*************************************************************************

[ProgressCopyENG]
    ProCaption   = "Windows NT Networking Setup"
    ProCancel    = "Cancel"
    ProCancelMsg = "Windows NT is not correctly installed.  Are you sure you want "+
                   "to cancel copying files?"
    ProCancelCap = "Setup Message"
    ProText1     = "Copying:"
    ProText2     = "To:"
    Error        = "Unable to determine proper source disk location; copy cannot be performed."

#####oemnxpi1.inf all
;------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
;       This lists the languages supported by this file.
;       If you add other languages to this list, you must
;       also add the appropriate text sections for the new
;       language
;------------------------------------------------------------------
[LanguagesSupported]
    ENG

;-------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
;
;       These are the text strings used to identify the options to
;       the user.  There should be a header and entry for every
;       language listed in the "LanguagesSupported" section.
;-------------------------------------------------------------------
[OptionsTextENG]
    NWLINK     = "Old NWLink IPX/SPX Compatible Transport"

;--------------------------------------------------------------------
;       Language Dependent Dialog Constants
;--------------------------------------------------------------------
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle            = "NWLink Setup"
ProductNWLINKDescription  = "NWLink Transport Driver"
ProductNWNBLINKDescription   = "NWLink NetBIOS Driver"
ProductNWLINKDisplayName = "NWLink"
ProductNWLINKTitle       = "NWLink Transport"
ProductNWLINKSYSDisplayName = "NWLinksys"
ProductNWLINKSYSTitle    = "NWLINK Transport Driver"
ProductNWNBLINKDisplayName  = "NWNBLink"
ProductNWNBLINKTitle        = "NWLink NetBIOS"
ProductNWNBLINKSYSDisplayName = "NWNBLinksys"
ProductNWNBLINKSYSTitle     = "NWLINK NetBIOS Driver"

CompetitorDisplayName = "Novell IPX/SPX II Transport"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[FileDependentDlgENG]
;
;--- No UI for NWLINK
;

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlg]
STF_MB_TITLE = "Information Message"

;
; don't need to localize the dialog type
;
DlgType      = "MessageBox"
STF_MB_TEXT  = $(InfoMsgText)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlgCantConfigure]
InfoMsgText = "The NWLINK service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click  OK.  You will then have the opportunity to configure the adapters."

;--------------------------------------------------------------------
;       Get the string to use while doing the install
;--------------------------------------------------------------------
[Billboard1ENG]
Status = "Installing NWLINK and related services..."

[FatalError1ENG]
Error = "Another IPX/SPX protocol driver is currently installed in this machine, "+
        "and the network interface cannot operate properly with both drivers installed. "+
        "If you still wish to install the NWLINK protocol driver, you must first "+
        "remove the "$(CompetitorDisplayName)" component and reboot your machine."

#####oemnadn1.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NE1000     = "Novell NE1000 Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Novell NE1000 Network Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Novell NE1000 Adapter Driver"
;
; Hardware
;
ProductHardwareNE1000Description        = "Novell NE1000 Adapter"
ProductSoftwareTitle    = "Novell NE1000 Adapter Driver"
ProductHardwareNE1000Title      = "Novell NE1000 Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------

[FileDependentDlgENG]
Label1 = "&IRQ Level:"
Label2 = "I/O &Port Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "NE2000"
Caption = $(FunctionTitle)

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOBaseAddrHexList)
Combo2Out  = $(IOBaseAddress)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADN2_INS)

#####oemnadlb.inf all
[LanguagesSupported]
    ENG

[OptionsTextENG]
    LOOP     = "MS Loopback Adapter"

[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "MS Loopback Adapter Card Setup"
ProductSoftwareDescription = "MS Loopback Adapter Driver"
ProductHardwareDescription = "MS Loopback Adapter"
ProductSoftwareTitle    = "MS Loopback Adapter Driver"
ProductHardwareTitle    = "MS Loopback Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[FileDependentDlgENG]
DlgType = "MultiCombo"
DlgTemplate = "SINGLE_COMBO"
Label1 = "&Frame Type:"
Caption = $(FunctionTitle)
Combo1List = $(MediaList)
Combo1Out  = $(MediaChoice)
ComboListItemsIn  = {Combo1List}
ComboListItemsOut = {Combo1Out}
HelpContext = $(!IDH_DB_OEMNADLB_INS)


#####oemnade3.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNK3ISA509     = "3Com Etherlink III ISA/PCMCIA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "3Com Etherlink III Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com Etherlink III Adapter Driver"
;
; Hardware
;
ProductHardwareELNK3ISA509Description        = "3Com Etherlink III Adapter"
ProductSoftwareTitle    = "3Com Etherlink III Adapter Driver"
ProductHardwareELNK3ISA509Title = "3Com Etherlink III Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

TransceiverList  = {"10 Base T", "Thick Net (AUI/DIX)","","Thin Net (BNC/COAX)"}
TransceiverDisplayList  = {"10 Base T", "Thick Net (AUI/DIX)","Thin Net (BNC/COAX)"}

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Label1 = "I/O &Port Address:"
Label2 = "&Interrupt Number:"
Label3 = "&Transceiver Type:"

;no translation needed after this

DlgType = "Combination"
DlgTemplate = "UBNDIS"
Caption = $(FunctionTitle)

Combo1List = $(IOADDR_Hex_List)
Combo1Out  = $(IOADDR_Hex_Value)
Combo2List = $(IRQList)
Combo2Out  = $(IRQValue)
Combo3List = $(TransceiverDisplayList)
Combo3Out  = $(TransceiverValue)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO, NO}

HelpContext = $(!IDH_DB_OEMNADE3_INS)

#####oemnadee.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNK3EISA     = "3Com Etherlink III EISA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;                             a
; Product Info
;
FunctionTitle   = "3Com Etherlink III EISA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com Etherlink III Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "3Com Etherlink III EISA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "3Com Etherlink III Adapter Driver"
ProductHardwareTitle    = "3Com Etherlink III EISA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for EISA
;

#####oemnaden.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNK3MCA     = "3Com Etherlink III MCA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "3Com Etherlink III MCA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com Etherlink III MCA Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "3Com Etherlink III MCA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "3Com Etherlink III MCA Adapter Driver"
ProductHardwareTitle    = "3Com Etherlink III MCA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;

#####oemnadnm.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NE2000MCA     = "NE/2 and compatible MC Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "NE/2 and compatible MC Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "NE/2 and compatible MC Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "NE/2 and compatible MC Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "NE/2 and compatible MC Adapter Driver"
ProductHardwareTitle    = "NE/2 and compatible MC Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Label1 = "&IRQ Level:"
Label2 = "I/O &Port Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "NE2000"
Caption = $(FunctionTitle)

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOBaseAddrHexList)
Combo2Out  = $(IOBaseAddress)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADN2_INS)


#####oemnadfd.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NPMCA     = "Network Peripherals FDDI, MCA"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Network Peripherals FDDI, MCA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Network Peripherals FDDI, MCA Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Network Peripherals FDDI, MCA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Network Peripherals FDDI, MCA Adapter Driver"
ProductHardwareTitle    = "Network Peripherals FDDI, MCA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;

#####oemnsvsn.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SNMP     = "SNMP Service"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "SNMP Setup"
;
; Software
;
ProductSoftwareDescription      = "Simple Network Management Protocol service that enables a Windows NT computer to be administered remotely with an SNMP management tool."
;
; The user needs to install Microsoft TCP/IP before install SNMP.
; If TCPIP does not exist in the registry, the inf file will popup this
; message and exit.
;
ProductSoftwareDisplayName      = "SNMP Service"
ProductSoftwareTitle    = "SNMP Service"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for SNMP
;

#####oemnsvcu.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    TCPIPCU = "TCP/IP Utilities"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProductTCPIPCUTitle = "TCP/IP Utilities"
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

GroupName    = "Accessories"
IconName     = "Telnet"

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
;


#####oemnsvsa.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SAP = "SAP Agent"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductSAPTitle       = "SAP Agent"
ProductSAPDescription = "Service Advertising Protocol advertises servers and addresses on a network."
ProductSAPDisplayName = "SAP Agent"

[InUsed]
Error = "SAP Agent is currently in use by other network protocols. Please remove all related services first."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
;


#####oemnsvwi.inf
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG
;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    WINS     = "Windows Internet Name Service"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Windows Internet Name Service Setup"
;
; Software
;
ProductSoftwareDescription      = "Dynamic name registration and resolution service that maps NetBIOS computer names to IP addresses."
ProductSoftwareDisplayName      = "Windows Internet Name Service"
ProductSoftwareTitle            = "Windows Internet Name Service"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

OldGroupName    = "Network Administration"
GroupName    = "Administrative Tools"
IconName     = "WINS Manager"

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for WINS
;

#####oemnsvdh.inf
[LanguagesSupported]
    ENG
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

[FileConstantsENG]
ProductDHCPDisplayName  = "Microsoft DHCP Server"
ProductDHCPTitle        = "Microsoft DHCP Server"
ProductDHCPDescription  = "Automatically assigns IP addresses to other computers running the DHCP (Dynamic Hose Configuration Protocol) Client Service."
OldGroupName    = "Network Administration"
GroupName    = "Administrative Tools"
IconName     = "DHCP Manager"

[OptionsTextENG]
        DHCP = "Microsoft DHCP Server"

[DHCPServerDialog]
DHCPTxt = "If any adapters are using DHCP to obtain an IP address, they are now "+
           "required to use a static IP address.  Press Close on the Network Control Panel "+
           "and the TCP/IP Property Sheet will be displayed allowing you to enter an address."
STF_MB_TITLE = $(DHCP)
DlgType = "MessageBox"
STF_MB_TEXT  = $(DHCPTxt)
STF_MB_TYPE  = 1
STF_MB_ICON  = 2
STF_MB_DEF   = 1

#####oemnsvdn.inf
[LanguagesSupported]
    ENG
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

[FileConstantsENG]
ProductDNSDisplayName  = "Microsoft DNS Server"
ProductDNSTitle        = "Microsoft DNS Server"
ProductDNSDescription  = "The Domain Name System maps DNS domain names to IP addresses."

OldGroupName = "Network Administration"
GroupName = "Administrative Tools"
IconName  = "DNS Manager"


[OptionsTextENG]
        DNS = "Microsoft DNS Server"

#####oemnsvsp.inf
[LanguagesSupported]
    ENG
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductSTCPIPDisplayName        = "Simple TCP/IP Services"
ProductSTCPIPTitle              = "Simple TCP/IP Services"
ProductSTCPIPDescription        = "Client programs for simple network protocols, including Character Generator, Daytime, Echo and Quote of the Day."

[OptionsTextENG]
    STCPIP = "Simple TCP/IP Services"

#####oemnsvtp.inf
[LanguagesSupported]
    ENG
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductLPDDisplayName = "TCP/IP Print Server"
ProductLPDTitle = "Microsoft TCP/IP Printing"
ProductLPDDescription = "Enables Windows NT to print to TCP/IP-connected printers or to printers that are physically attached to UNIX computers."

[OptionsTextENG]
        TCPPRINT = "Microsoft TCP/IP Printing"

#####oemnxptc.inf
[LanguagesSupported]
    ENG
[OptionsTextENG]
    TC     = "TCP/IP Protocol"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
NoNewComponents = "No New Components to Install."
FunctionTitle   = "TCP/IP Setup"
ProductNETBTDescription           = "NetBT System Driver"
ProductNETBTDisplayName   = "WINS Client(TCP/IP)"
ProductNETBTTitle         = "WINS Client(TCP/IP)"
ProductTELNETDisplayName = "Telnet"
ProductTELNETTitle      = "Telnet Networking Support Environment"
ProductTELNETSYSDisplayName = "Telnetsys"
ProductTELNETSYSTitle     = "Telnet Driver"
ProductLMHOSTSDisplayName = "TCP/IP NetBIOS Helper"
ProductLMHOSTSTitle     = "TCP/IP NetBIOS Helper"
ProductDHCPDisplayName = "DHCP Client"
ProductDHCPTitle     = "DHCP Client"
ProductTCDisplayName = "TCP/IP Service"
ProductTCTitle     = "TCP/IP Protocol"
ProductTCDescription         = "Transport Control Protocol/Internet Protocol. The default wide area network protocol that provides communication across diverse interconnected networks."
ProviderDisplayName     = "TCP/IP"
LDAPProviderDisplayName = "NTDS"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
RASRebindError = "Setup has discovered that you have Remote Access Services installed. Do you want to configure RAS to support the TCP/IP protocol?"

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
[InfoDlg]
STF_MB_TITLE = "Information Message"
DlgType = "MessageBox"
STF_MB_TEXT  = $(InfoMsgText)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

[DHCPDialog]
DHCPText = "If there is a DHCP server on your network, TCP/IP can be configured to dynamically provide"+
                 " an IP address.  If you are not sure, ask your system administrator.  Do you wish to use DHCP?"
STF_MB_TITLE = "TCP/IP Setup"
DlgType = "MessageBox"
STF_MB_TEXT  = $(DHCPText)
STF_MB_TYPE  = 3
STF_MB_ICON  = 5
STF_MB_DEF   = 2

[InfoDlgCantConfigure]
InfoMsgText = "The TCP/IP service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click  OK or CLOSE.  You will then have the opportunity to configure the adapters."
[WarningDlgENG]
STF_MB_TITLE = "TCP/IP Setup Warning"
DlgType = "MessageBox"
STF_MB_TEXT  = $(Error)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1
[Billboard1ENG]
Status = "Installing TCP/IP and related services..."

#####oemnxpip.inf all
;------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
;       This lists the languages supported by this file.
;       If you add other languages to this list, you must
;       also add the appropriate text sections for the new
;       language
;------------------------------------------------------------------
[LanguagesSupported]
    ENG

;-------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
;
;       These are the text strings used to identify the options to
;       the user.  There should be a header and entry for every
;       language listed in the "LanguagesSupported" section.
;-------------------------------------------------------------------
[OptionsTextENG]
    NWLNKIPX     = "NWLink IPX/SPX Compatible Transport"

;--------------------------------------------------------------------
;       Language Dependent Dialog Constants
;--------------------------------------------------------------------
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle            = "NWLink IPX/SPX Compatible Transport Setup"
ProductNWLNKIPXDescription  = "An implementation of the IPX and SPX protocols, which are used by the NetWare networks."
ProductNWLNKIPXDisplayName = "NWLink IPX/SPX Compatible Transport Protocol"
ProductNWLNKIPXTitle       = "NWLink IPX/SPX Compatible Transport"

ProductNWLNKNBDescription   = "Enables Novell NetBIOS packets to be sent between a NetWare server running Novell NetBIOS and a Windows NT computer, or between two Windows NT computers."
ProductNWLNKNBDisplayName  = "NWLink NetBIOS"
ProductNWLNKNBTitle        = "NWLink NetBIOS"
ProductNWLNKNBSYSDisplayName = "NWLinkNBsys"
ProductNWLNKNBSYSTitle     = "NWLINK NetBIOS Driver"

ProductNWLNKSPXDescription  = "NWLink SPX Protocol Driver"
ProductNWLNKSPXDisplayName = "NWLink SPX/SPXII Protocol"
ProductNWLNKSPXTitle       = "NWLink SPX Protocol"

CompetitorDisplayName = "NWLink IPX/SPX II Transport"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

RASRebindError = "Setup has discovered that you have Remote Access Services installed. Do you want to configure RAS to support the NWLINK protocol?"
InstallRip     = "Do you want to install the IPX Rip Router?"

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[FileDependentDlgENG]
;
;--- No UI for NWLNK
;

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlg]
STF_MB_TITLE = "Information Message"

;
; don't need to localize the dialog type
;
DlgType      = "MessageBox"
STF_MB_TEXT  = $(InfoMsgText)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlgCantConfigure]
InfoMsgText = "The IPX Protocol service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click  OK.  You will then have the opportunity to configure the adapters."

[InUseENG]
InfoMsgText = "The IPX Protocol service is being used by another service(s). "+
    "Please remove other related components before removing IPX Protocol."

;--------------------------------------------------------------------
;       Get the string to use while doing the install
;--------------------------------------------------------------------
[Billboard1ENG]
Status = "Installing IPX Protocol and related services..."

[FatalError1ENG]
Error = "Another IPX/SPX protocol driver is currently installed in this machine, "+
        "and the network interface cannot operate properly with both drivers installed. "+
        "If you still wish to install the NWLNK protocol driver, you must first "+
        "remove the "$(CompetitorDisplayName)" component and reboot your machine."

#####oemnsvnw.inf
[LanguagesSupported]
    ENG
;
; Language depended section
;
[WorkstationENG]
    NWType = "Client Service for NetWare"
    NWDescription = "Enables this computer to log on to NetWare servers and access their resources."
[GatewayENG]
    NWType = "Gateway Service for NetWare"
    NWDescription = "Enables other Windows NT computers to access NetWare servers without running NetWare Client software."
[OptionsWINNTTextENG]
    NWWKSTA       = "Client Service for NetWare"
[OptionsLANMANNTTextENG]
    NWWKSTA       = "Gateway (and Client) Services for NetWare"

[FileConstantsENG]
NotEnoughSpace = "Out of disk space. Please remove some files before install "$(NWType)"."
UpgradeBetaOnTopOfDaytona = "You cannot update the beta version of "$(NWType)" over Windows NT 3.51's "$(NWType)"."
InstallNWLINKFirst = "Please install the NWLINK IPX/SPX Compatible Transport before you install the "$(NWType)"."
InstallNTWKSTAFirst = "Please install the Windows NT Workstation service before you install the "$(NWType)"."
RemoveAndReboot    = "Please remove any existing "$(NWType)" component and reboot your machine before installing the latest version of "$(NWType)"."
UpgradeFirst = "Please install the Windows NT patch before installing the "$(NWType)"."
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = $(NWType)" Setup"
ProductNWWKSTADescription         = $(NWDescription)
ProductNWRDRDescription           = "NetWare Redirector Compatible Service"
ProviderRDRName                 = "NetWare Compatible Redirector"
ProductNWWKSTATitle       = $(NWType)
ProductNWWKSTADisplayName = $(NWType)
ProductNWRDRDisplayName   = "NetWare Rdr"
ProductNWRDRTitle         = "NetWare Redirector"
ProductProviderName = "NetWare Network"
ProductProviderDisplayName = "NetWare or Compatible Network"
ProductPrintProviderName = "NetWare or Compatible Network"
OldPrintProviderName = "Netware(R) Network"
OldPrintProviderName2 = "NetWare Network"
REM1 = "REM Install network redirector"

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
ShellCodeErrorText = "Shell Code Error"

[FileDependentDlgENG]
; nothing



#####oemnsvbh.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NETMON      = "Network Monitor Agent"
    NETMONTOOLS = "Network Monitor Tools and Agent"


;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
;
; Software
;
ProductNMAgentDisplayName  = "Network Monitor Agent"

;
; Software Tools
;
NETMONTOOLSSoftwareTitle  = "Network Monitor Tools and Agent"
NETMONSoftwareTitle       = "Network Monitor Agent"


[NETMONConstantsENG]
;
; Product Info
;
ProductSoftwareTitle       = $(NETMONSoftwareTitle)
ProductSoftwareDescription = "Informs monitoring programs, such as Performance Monitor and Network Monitor, of network transactions for this computer."
ProductSoftwareDisplayName = $(ProductSoftwareTitle)" Driver"

FunctionTitle   =  $(ProductSoftwareTitle)

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[NETMONTOOLSConstantsENG]
;
; Product Info
;
ProductSoftwareTitle       = $(NETMONTOOLSSoftwareTitle)
ProductSoftwareDescription = "A software package for monitoring and troubleshooting network transactions"
ProductSoftwareDisplayName = $(ProductSoftwareTitle)" Drivers"

FunctionTitle   = $(ProductSoftwareTitle)

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[IconInfoENG]
    OldNetAdminGroupName = "Network Administration"
    NetAdminGroupName = "Administrative Tools"
    NetMonitor = "Network Monitor"



#####oemnsvri.inf
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    REMOTEBOOT     = "Remoteboot Service"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Remoteboot Setup"
;
; Software
;
ProductSoftwareDescription      = "Starts MS-DOS and Microsoft Windows workstations over the network."
ProductSoftwareDisplayName      = "Remoteboot Service"
ProductSoftwareTitle    = "Remoteboot Service"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
;
; Program group information
;
OldRplGroup    = "Network Administration"
RplGroup    = "Administrative Tools"
RplMgr    = "Remoteboot Manager"


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Edit1Label = "&Remoteboot directory:"
CheckBox1 = "&Migrate Remoteboot directory from LAN Manager 2.2"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "QUERY_RPL_PATH"
Caption = $(FunctionTitle)
CBOptionsGreyed = {}
ComboListItemsIn = {}
ComboListItemsOut = {}

HelpContext = $(!IDH_DB_OEMNSVRI_INS)

EditTextLim = 256
EditTextIn  = $(RPLDIR)
EditFocus   = "ALL"
RCCtlFocusOn = 403

[NonFatalError1ENG]
Error = "The Remoteboot directory must be an absolute path."

[DoAskSourceDlgTextENG]
    DlgText = "Setup needs to copy Remoteboot Client files. These files are located "+
              "in the \CLIENTS\RPL directory of the Windows NT Server CD."$(!LF)$(!LF)+
              "If you want Setup to look in a different place, type the new location below. "+
              "When the location is correct, click Continue."

#####oemnadt2.inf all
[LanguagesSupported]
    ENG
[OptionsTextENG]
    IBMTOK2ISA     = "IBM Token-Ring Network 16/4 ISA Adapter II"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "IBM Token-Ring 16/4 Adapter II Card Setup"
ProductSoftwareDescription      = "IBM Token-Ring 16/4 ISA Adapter II Driver"
ProductHardwareIBMTOK2ISADescription        = "IBM Token-Ring 16/4 ISA Adapter II"
ProductSoftwareTitle    = "IBM Token-Ring 16/4 ISA Adapter II Driver"
ProductHardwareIBMTOK2ISATitle = "IBM Token-Ring 16/4 ISA Adapter II"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
Combo1Label = "I/O &Port Address:"
DlgType = "RadioCombination"
DlgTemplate = "IBMTOK2"
Caption = $(FunctionTitle)
Combo1List = $(IOADDR_Hex_List)
Combo1Out  = $(IOADDR_Hex_Value)
ComboListItemsIn  = {Combo1List}
ComboListItemsOut = {Combo1Out}
EditTextLim = 17
EditTextIn = $(NetworkAddress)
Edit1Label = "&NetworkAddress"
HelpContext = $(!IDH_DB_OEMNADT2_INS)

#####oemnadte.inf all
[LanguagesSupported]
    ENG
[OptionsTextENG]
    IBMTOK2E     = "IBM Token Ring EISA Adapter"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "IBM Token Ring EISA Adapter Card Setup"
ProductSoftwareDescription      = "IBM Token Ring EISA Adapter Driver"
ProductHardwareDescription      = "IBM Token Ring EISA Adapter"
CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ProductHardwareTitle    = "IBM Token Ring EISA Adapter"
ProductSoftwareTitle    = "IBM Token Ring EISA Adapter Driver"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
Edit1Label = "&Network Address:"
DlgType = "Edit"
DlgTemplate = "NETWORK_NUMBER"
Caption = $(FunctionTitle)
HelpContext = $(!IDH_DB_OEMNADTE_INS)
EditTextLim = 17
EditTextIn  = $(NetworkAddress)
EditFocus   = "ALL"
RCCtlFocusOn = 403



#####oemnsvrc.inf
[LanguagesSupported]
    ENG
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

#####oemnadpm.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    P189X     = "ProNET-4/16 p189X NIC"

[PacketChoices]
Packet1="4Kb",4210
Packet2="18Kb",17986

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

FunctionTitle   = "Proteon p189X Adapter Card Setup"
ProductSoftwareDescription      = "Proteon RapiDriver"
ProductHardwareDescription      = "Proteon p189X ProNET-4/16 NIC"
CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ProductHardwareTitle    = "Proteon p189X ProNET-4/16 NIC"
ProductSoftwareTitle    = "Proteon RapiDriver"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Group1 = "CardSpeed"
Radio1 = "&4"
Radio2 = "&16"
Edit1Label = "&Network Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "IBM_TOKEN"
Caption = $(FunctionTitle)
ComboListItemsIn = {}
ComboListItemsOut = {}
EditTextLim = 17
EditTextIn = $(NetworkAddress)

OptionsGreyed = {}

HelpContext = $(!IDH_DB_OEMNADP9_INS)
RCCtlFocusOn = 403

#####oemnadar.inf all
[OptListENG]
OptList_1 = tc$arcnet "Arcnet/TCNS (All Types)",     "tcarc", "ARCNET/TCNS Adapter", "ARCNET or Thomas-Conrad TCNS Adapter"
OptList_2 = tc$tcns,  "Thomas-Conrad TCNS",          "tcarc", "TCNS Adapter",        "Thomas-Conrad 100Mbps TCNS"

[FileConstantsENG]
   ProCaption              = "Windows NT Setup"
   ProCancel               = "Cancel"
   ProCancelMsg            = "Your ARCNET/TCNS Windows NT Networking "+
                             "Adapter is not correctly installed.  Are "+
                             "you sure you want to cancel copying files?"
   ProCancelCap            = "Network Setup Message"
   ProText1                = "Copying:"
   ProText2                = "To:"
   SoftwareTitle           = "ARCNET/TCNS Driver"
   SoftwareDescription     = "ARCNET/TCNS Adapter Driver"

[DialogConstantsENG]
   Help                    = "&Help"
   Exit                    = "Cancel"
   OK                      = "OK"
   HelpContext             = ""
   Continue                = "Continue"
   Cancel                  = "Cancel"
   FunctionTitle           = "ARCNET/TCNS Adapter Setup"
   InterruptLabel          = "&Interrupt Number:"
   BaseIoLabel             = "I/O &Port Base Addr:"
   MemoryLabel             = "&Memory Address:"
   TcnsCaption             = "Thomas-Conrad TCNS Adapter Setup"
   TcnsEISACaption         = "Thomas-Conrad TCNS (TC3147) Adapter Setup"
   SlotNumberLabel         = "&Slot Number:"

[LanguagesSupported]
   ENG



#####oemnaddt.inf all
[LanguagesSupported]
    ENG
[OptionsTextENG]
    DC21040  = "DEC PCI Ethernet DECchip 21040"
    DC21041  = "DEC PCI Ethernet DECchip 21041"
    DC21140  = "DEC PCI Fast Ethernet DECchip 21140"
    DC21142  = "DEC PCI Fast Ethernet DECchip 21142"
    DE434    = "DEC DE434 EtherWORKS Turbo PCI TP Adapter"
    DE435    = "DEC DE435 EtherWORKS Turbo PCI Adapter"
;    DE436    = "DEC DE436 EtherWORKS Turbo PCI Quad Adapter"
    MULTIA   = "DEC multia's Ethernet Controller"
    DE425    = "DEC DE425 EtherWORKS Turbo EISA Adapter"
    DE450    = "DEC DE450 EtherWORKS Turbo PCI Adapter"
    DE500    = "DEC DE500 Fast Ethernet PCI Adapter"

[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductSoftwareDescription = "DEC DC21x4 Driver"

FunctionDC21040Title = "DEC DECchip 21040 Based Adapter Setup"
ProductHardwareDC21040Description = "DEC PCI Ethernet DECchip 21040"
ProductHardwareDC21040Title = "DEC PCI Ethernet DECchip 21040"

FunctionDC21041Title = "DEC DECchip 21041 Based Adapter Setup"
ProductHardwareDC21041Description = "DEC PCI Ethernet DECchip 21041"
ProductHardwareDC21041Title = "DEC PCI Ethernet DECchip 21041"

FunctionDC21140Title = "DEC DECchip 21140 Based Adapter Setup"
ProductHardwareDC21140Description = "DEC PCI Fast Ethernet DECchip 21140"
ProductHardwareDC21140Title = "DEC PCI Fast Ethernet DECchip 21140"

FunctionDC21142Title = "DEC DECchip 21142 Based Adapter Setup"
ProductHardwareDC21142Title = "DEC PCI Ethernet DC21142"
ProductHardwareDC21142Description = "DEC PCI Fast Ethernet DECchip 21142"

FunctionDE434Title   = "DEC DE434 PCI Adapter Card Setup"
ProductHardwareDE434Description   = "DEC DE434 EtherWORKS Turbo PCI TP Adapter"
ProductHardwareDE434Title   = "DEC DE434 EtherWORKS Turbo PCI TP Adapter"

FunctionDE435Title   = "DEC DE435 PCI Adapter Card Setup"
ProductHardwareDE435Description   = "DEC DE435 EtherWORKS Turbo PCI Adapter"
ProductHardwareDE435Title   = "DEC DE435 EtherWORKS Turbo PCI Adapter"

FunctionMULTIATitle = "DEC multia's Ethernet Controller Setup"
ProductHardwareMULTIADescription = "DEC multia's Ethernet Controller"
ProductHardwareMULTIATitle = "DEC multia's Ethernet Controller"

FunctionDE425Title   = "DEC DE425 EISA Adapter Card Setup"
ProductHardwareDE425Description   = "DEC DE425 EtherWORKS Turbo EISA Adapter"
ProductHardwareDE425Title   = "DEC DE425 EtherWORKS Turbo EISA Adapter"

FunctionDE450Title   = "DEC DE450 PCI Adapter Card Setup"
ProductHardwareDE450Description   = "DEC DE450 EtherWORKS Turbo PCI Adapter"
ProductHardwareDE450Title   = "DEC DE450 EtherWORKS Turbo PCI Adapter"

FunctionDE500Title   = "DEC DE500 PCI Adapter Card Setup"
ProductHardwareDE500Description   = "DEC DE500 Fast Ethernet PCI Adapter"
ProductHardwareDE500Title   = "DEC DE500 Fast Ethernet PCI Adapter"

ConnectionList  = ^(ConnectionChoices$(Option), 1)
ConnectionValues = ^(ConnectionChoices$(Option), 2)
NoList  = ^(NoChoices, 1)
NoValues = ^(NoChoices, 2)
ShellCodeErrorTitle     = "Error: "$(Function$(Option)Title)
ShellCodeErrorText      = "Shell Code Error."
CANNOT_FIND_ANY_CARD    = "Network card is not present in the system"

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[FileDependentDlgENG]

DlgText = "Choose the proper cable type for the "+
          "network adapter. Select [Help] for a detailed "+
          "description of the available options of the list."

Combo1Label = "&Connection Type:"

;
; don't localize anything below this
;
DlgTemplate = "ADAP_PROTO_COMBO"
DlgType = "Combination"

Caption = $(Function$(Option)Title)
Combo1List = $(ConnectionList)
Combo1Out  = $(ConnectionValue)
ComboListItemsIn  = {Combo1List}
ComboListItemsOut = {Combo1Out}

EditTextLim = ""
CBOptionsGreyed = {}
MinHelpId = 10
MaxHelpId = 1130
HelpContext = $(Help$(Option)Id)

[ConnectionChoicesDC21040]
    Connect_0 = "AutoDetect", 0
    Connect_1 = "10BaseT (Twisted_Pair) ", 2
    Connect_2 = "10BaseT Full_Duplex ", 3
    Connect_3 = "10BaseT No_Link_Test", 4
    Connect_4 = "10Base2 (BNC)", 1
    Connect_5 = "10Base5 (AUI)", 5
[ConnectionChoicesDC21041]
    Connect_0 = "AutoSense", 0
    Connect_1 = "AutoSense No_Nway", 6
    Connect_2 = "10BaseT (Twisted_Pair) ", 2
    Connect_3 = "10BaseT Full_Duplex ", 3
    Connect_5 = "10BaseT No_Link_Test", 4
    Connect_6 = "10Base2 (BNC)", 1
    Connect_7 = "10Base5 (AUI)", 5
[ConnectionChoicesDC21140]
    Connect_0 = "AutoSense", 0
    Connect_1 = "AutoSense No_Nway", 6
    Connect_2 = "100BaseTx", 8
    Connect_3 = "100BaseTx Full_Duplex", 9
    Connect_4 = "100BaseT4", 10
    Connect_5 = "100BaseFx", 11
    Connect_6 = "100BaseFx Full_Duplex", 12
    Connect_7 = "10BaseT (Twisted Pair)", 2
    Connect_8 = "10BaseT Full_Duplex", 3
[ConnectionChoicesDC21142]
    Connect_0 = "AutoSense", 0
    Connect_1 = "100BaseTx", 8
    Connect_2 = "100BaseTx Full_Duplex", 9
    Connect_3 = "100BaseT4", 10
    Connect_4 = "100BaseFx", 11
    Connect_5 = "100BaseFx Full_Duplex", 12
    Connect_6 = "10BaseT (Twisted_Pair) ", 2
    Connect_7 = "10BaseT Full_Duplex", 3
    Connect_8 = "10BaseT No_Link_Test", 4
    Connect_9 = "10Base2 (BNC)", 1
    Connect_10= "10Base5 (AUI)", 5
[ConnectionChoicesMULTIA]
    Connect_0 = "AutoDetect", 0
    Connect_1 = "10BaseT (Twisted_Pair) ", 2
    Connect_2 = "10BaseT Full_Duplex ", 3
    Connect_3 = "10BaseT No_Link_Test", 4
    Connect_4 = "10Base2 (BNC)", 1
    Connect_5 = "10Base5 (AUI)", 5
[ConnectionChoicesDE434]
    Connect_0 = "10BaseT (Twisted_Pair) ", 2
    Connect_1 = "10BaseT Full_Duplex ", 3
    Connect_2 = "10BaseT No_Link_Test", 4
[ConnectionChoicesDE435]
    Connect_0 = "AutoDetect", 0
    Connect_1 = "10BaseT (Twisted_Pair) ", 2
    Connect_2 = "10BaseT Full_Duplex ", 3
    Connect_3 = "10BaseT No_Link_Test", 4
    Connect_4 = "10Base2 (BNC)", 1
    Connect_5 = "10Base5 (AUI)", 5
[ConnectionChoicesDE450]
    Connect_0 = "AutoSense", 0
    Connect_1 = "AutoSense No_Nway", 6
    Connect_2 = "10BaseT (Twisted_Pair) ", 2
    Connect_3 = "10BaseT Full_Duplex ", 3
    Connect_4 = "10BaseT No_Link_Test", 4
    Connect_5 = "10Base2 (BNC)", 1
    Connect_6 = "10Base5 (AUI)", 5
[ConnectionChoicesDE500]
    Connect_0 = "AutoSense", 0
    Connect_1 = "100BaseTx", 8
    Connect_2 = "100BaseTx Full_Duplex", 9
    Connect_3 = "10BaseT", 2
    Connect_4 = "10BaseT Full_Duplex", 3


#####oemnadzz.inf all
[LanguagesSupported]
    ENG

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


ShellCodeErrorTitle     = "Error: "
ShellCodeErrorText      = "Shell Code Error."

[ErrorMsgENG]
CannotFindOemsetup = "Setup cannot find "$(File1)", "$(File2)", "$(File3)", or "$(File4)". Please make sure your input path is correct."

#####oemnadap.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

[OptionsTextENG]
    AMDPCI     = "AMD PCNET Family Ethernet Adapter"

[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


GenericAdapterName = "AMD PCNET ISA/VESA Ethernet Adapter"
GenericPCIAdapterName = "AMD PCNET PCI Ethernet Adapter"
GenericDriverName  = "AMD PCNET Family Ethernet Adapter Driver"

ProductSoftwareDescription = $(GenericDriverName)
ProductHardwareDescription = $(GenericAdapterName)
ProductHardwarePCNTN3Description="AMD PCnet Family Driver"

ProductSoftwareTitle =       $(GenericDriverName)
ProductHardwarePCNTN3Title = $(GenericAdapterName)

;
; no localization until [DialogConstantsENG]
;

DialogDllName   = "amddlg.dll"

IRQList  = ^(IRQChoices, 1)
IRQValues = ^(IRQChoices, 2)

IOBaseAddrList = ^(IOBaseAddrChoices, 1)
IOBaseAddrValues = ^(IOBaseAddrChoices, 2)

DMAChannelList = ^(DMAChannelChoices,1)
DMAChannelValues = ^(DMAChannelChoices,2)

LEDList = ^(LEDChoices,1)
LEDValues = ^(LEDChoices,2)

FullDuplexList = ^(FullDuplexChoices,1)
FullDuplexValues = ^(FullDuplexChoices,2)

BusTimerList = ^(BusTimerChoices,1)
BusTimerValues = ^(BusTimerChoices,2)

[DialogConstantsENG]
FunctionTitle   = $(GenericDriverName)$(GenericInfVersion)
Help        = "&Help"
Exit        = "Cance&l"
OK          = "&OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "&Cancel"

[MemoryMappedChoicesENG]
Map_1 = 1, "ON"
Map_2 = 0, "OFF"

[FileDependentDlgENG]
FunctionTitle   = $(GenericAdapterName)$(GenericInfVersion)
DlgText = "Please select values for the following fields:"

Combo1Label = "&I/O Port:"
Combo2Label = "IRQ &Number:"
Combo3Label = "&DMA Number:"
Combo4Label = "&Full Duplex:"
Combo5Label = "&Bus Timer:"

BigButton   = "&More options >>"

CheckBox1 = "10Base-&T port"

Group1 = "&Bus to scan"

Radio1 = "&PNP"
Radio2 = "&VESA"
Radio3 = "&ISA"
Radio4 = "&ALL"

;
; no localization until IRQChoices
;

DlgType = "RadioCombination"
DlgTemplate = "PCNTN3"
Caption = $(FunctionTitle)

CBOptionsGreyed = {}
NotifyFields = {NO, NO}
HelpContext = 1

Combo1List = $(IOBaseAddrList)
Combo1Out  = $(IOBaseAddrValue)

Combo2List = $(IRQList)
Combo2Out  = $(IRQValue)

Combo3List = $(DMAChannelList)
Combo3Out  = $(DMAChannelValue)

Combo4List = $(FullDuplexList)
Combo4Out  = $(FullDuplexValue)

Combo5List = $(BusTimerList)
Combo5Out  = $(BusTimerValue)

ComboListItemsIn  = {Combo1List,Combo2List,Combo3List,Combo4List,Combo5List}
ComboListItemsOut = {Combo1Out,Combo2Out,Combo3Out,Combo4Out,Combo5Out}

EditTextIn = ""
EditTextLim = ""

[IRQChoices]
IRQ_1 = "3",3
IRQ_2 = "4",4
IRQ_3 = "5",5
IRQ_4 = "9",9
IRQ_5 = "10",10
IRQ_6 = "11",11
IRQ_7 = "12",12
IRQ_8 = "15",15
IRQ_9 = "Auto_Scan",0

[IOBaseAddrChoices]
IOBase_1  = "0x200",512
IOBase_2  = "0x220",544
IOBase_3  = "0x240",576
IOBase_4  = "0x260",608
IOBase_5  = "0x280",640
IOBase_6  = "0x2a0",672
IOBase_7  = "0x2c0",714
IOBase_8  = "0x2e0",746
IOBase_9  = "0x300",768
IOBase_10 = "0x320",800
IOBase_11 = "0x340",832
IOBase_12 = "0x360",864
IOBase_13 = "0x380",896
IOBase_14 = "0x3a0",928
IOBase_15 = "0x3c0",960
IOBase_16 = "0x3e0",992
IOBase_17 = "Auto_Scan",0

[DMAChannelChoices]
DMAChannel_1 = "3",3
DMAChannel_2 = "5",5
DMAChannel_3 = "6",6
DMAChannel_4 = "7",7
DMAChannel_5 = "Auto_Scan",0

[LEDChoices]
LED_1 = "Default",65536
LED_2 = "0x0",0
LED_3 = "0x2",2
LED_4 = "0x4",4
LED_5 = "0x8",8
LED_6 = "0x10",16
LED_7 = "0x20",32
LED_8 = "0x30",48
LED_9 = "0x34",52
LED_10 = "0x40",64
LED_11 = "0xc0",192
LED_12 = "0x4088",16520
LED_13 = "0xb0",176
LED_14 = "0x21",129

[FullDuplexChoices]
FULLDUPLEX_1 = "OFF",1
FULLDUPLEX_2 = "AUI",2
FULLDUPLEX_3 = "UTP",3
FULLDUPLEX_4 = "Default",0

[BusTimerChoices]
BUSTIMER_1 = "5",5
BUSTIMER_2 = "6",6
BUSTIMER_3 = "7",7
BUSTIMER_4 = "8",8
BUSTIMER_5 = "9",9
BUSTIMER_6 = "10",10
BUSTIMER_7 = "11",11
BUSTIMER_8 = "12",12
BUSTIMER_9 = "13",13
BUSTIMER_10 = "Default",0

[FileDependentDlgPCIENG]
FunctionTitle   = $(GenericPCIAdapterName)$(GenericInfVersion)
DlgText = "Please select values for the following fields:"

Combo1Label = "&Full Duplex:"
BigButton   = "&More options >>"
CheckBox1 = "10Base-&T port"

;
; no locationization until LEDChoices
;

DlgType = "RadioCombination"
DlgTemplate = "PCNTN3PCI"
Caption = $(FunctionTitle)

CBOptionsGreyed = {}
NotifyFields = {NO, NO}
HelpContext = 1

Combo1List = $(FullDuplexList)
Combo1Out  = $(FullDuplexValue)

Combo3List = $(LEDList)
Combo3Out  = $(LED0Value)

Combo4List = $(LEDList)
Combo4Out  = $(LED1Value)

Combo5List = $(LEDList)
Combo5Out  = $(LED2Value)

Combo6List = $(LEDList)
Combo6Out  = $(LED3Value)

ComboListItemsIn  = {Combo1List}
ComboListItemsOut = {Combo1Out}

EditTextIn = ""
EditTextLim = ""

[LEDChoices]
LED_1 = "Default",65536
LED_2 = "0x0",0
LED_3 = "0x2",2
LED_4 = "0x4",4
LED_5 = "0x8",8
LED_6 = "0x10",16
LED_7 = "0x20",32
LED_8 = "0x30",48
LED_9 = "0x34",52
LED_10 = "0x40",64
LED_11 = "0xc0",192
LED_12 = "0x4088",16520
LED_13 = "0xb0",176
LED_14 = "0x21",129

[FullDuplexChoices]
FULLDUPLEX_1 = "OFF",1
FULLDUPLEX_2 = "AUI",2
FULLDUPLEX_3 = "UTP",3
FULLDUPLEX_4 = "Default",0

[BusTimerChoices]
BUSTIMER_1 = "5",5
BUSTIMER_2 = "6",6
BUSTIMER_3 = "7",7
BUSTIMER_4 = "8",8
BUSTIMER_5 = "9",9
BUSTIMER_6 = "10",10
BUSTIMER_7 = "11",11
BUSTIMER_8 = "12",12
BUSTIMER_9 = "13",13
BUSTIMER_10 = "Default",0

#####oemnaddf.inf all

[LanguagesSupported]
        ENG
[OptionsTextENG]
        DEFPA     = "DEC FDDIcontroller/PCI"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "DEC FDDIcontroller/PCI Card Setup"
ProductSoftwareDescription      = "DEC FDDIcontroller/PCI Driver"
ProductHardwareDescription      = "DEC FDDIcontroller/PCI"
CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
ReceiveBuffList = ^(ReceiveBuffChoices,1)
ReceiveBuffValues = ^(ReceiveBuffChoices,2)
TransmitBuffList = ^(TransmitBuffChoices,1)
TransmitBuffValues = ^(TransmitBuffChoices,2)
BurstSizeList = ^(BurstSizeChoices,1)
BurstSizeValues = ^(BurstSizeChoices,2)
DialogDllName = "defpa.dll"
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = 1
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
DlgType = "RadioCombination"
DlgTemplate = "DEFPA"
Combo1 = "Receive Buffers:"
Combo2 = "Transmit Buffers:"
Combo3 = "Burst Size:"
Edit1 = "Requested TTRT(ms):"
Edit2 = "Bus Number:"
Edit3 = "Card Instance:"
Group = "Full Duplex Enable"
Combo1List = $(ReceiveBuffList)
Combo1Out = $(ReceiveBuffValue)
Combo2List = $(TransmitBuffList)
Combo2Out = $(TransmitBuffValue)
Combo3List = $(BurstSizeList)
Combo3Out = $(BurstSizeValue)
; Burst size is not included in dialog box, for now
ComboListItemsIn = {Combo1List,Combo2List}
ComboListItemsOut = {Combo1Out,Combo2Out}
EditTextLim = {3,3,1}
EditTextIn = {$(EditText1),$(EditText2),$(EditText3)}
EditTextOut = {$(EditText1),$(EditText2),$(EditText3)}
[ReceiveBuffChoices]
Receive_1 = "2",2
Receive_2 = "4",4
Receive_3 = "8",8
[TransmitBuffChoices]
Transmit_1 = "8",8
Transmit_2 = "16",16
Transmit_3 = "32",32
Transmit_4 = "64",64
Transmit_5 = "128",128
[BurstSizeChoices]
Burst_1 = "4",0
Burst_2 = "8",1
Burst_3 = "16",2

#####oemnadd3.inf all
[LanguagesSupported]
        ENG
[OptionsTextENG]
        DEC300     = "DEC FDDIcontroller/EISA"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
                           "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "DEC FDDIcontroller/EISA Card Setup"
ProductSoftwareDescription      = "DEC FDDIcontroller/EISA Driver"
ProductHardwareDescription      = "DEC FDDIcontroller/EISA"
CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ProductSoftwareTitle    = "DEC FDDIcontroller/EISA Driver"
ProductHardwareTitle    = "DEC FDDIcontroller/EISA Adapter"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
BurstSizeList = ^(BurstSizeChoices,1)
BurstSizeValues = ^(BurstSizeChoices,2)
ReceiveBuffList = ^(ReceiveBuffChoices,1)
ReceiveBuffValues = ^(ReceiveBuffChoices,2)
TransmitBuffList = ^(TransmitBuffChoices,1)
TransmitBuffValues = ^(TransmitBuffChoices,2)
DialogDllName = "defea.dll"
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = 1
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
DlgType = "RadioCombination"
DlgTemplate = "DEFEA"
Combo1 = "Burst Size:"
Combo2 = "Receive Buffers:"
Combo3 = "Transmit Buffers:"
Group = "Full Duplex Enable"
Edit1 = "Requested TTRT(ms):"
Combo1List = $(BurstSizeList)
Combo1Out = $(BurstSizeValue)
Combo2List = $(ReceiveBuffList)
Combo2Out = $(ReceiveBuffValue)
Combo3List = $(TransmitBuffList)
Combo3Out = $(TransmitBuffValue)
ComboListItemsIn = {Combo2List,Combo3List}
ComboListItemsOut = {Combo2Out,Combo3Out}
EditTextLim = {3}
[BurstSizeChoices]
Burst_1 = "4",0
Burst_2 = "8",1
Burst_3 = "16",2
[ReceiveBuffChoices]
Receive_1 = "2",2
Receive_2 = "4",4
Receive_3 = "8",8
[TransmitBuffChoices]
Transmit_1 = "8",8
Transmit_2 = "16",16
Transmit_3 = "32",32
Transmit_4 = "64",64
Transmit_5 = "128",128

#####oemnadni.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NE2000IBMCOMPAT = "IBM Ethernet PCMCIA and Compatible Adapter"
    NE4000PCMCIA    = "Novell NE4000 PCMCIA Adapter"
    MICRODYNEPCMCIA = "Microdyne NE4000 PCMCIA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
;
; Software
;
ProductSoftwareNE2000IBMCOMPATDescription = "IBM Ethernet PCMCIA and Compatible Adapter Driver"
ProductSoftwareNE2000IBMCOMPATTitle       = "IBM Ethernet PCMCIA and Compatible Adapter Driver"
ProductSoftwareNE4000PCMCIADescription = "Novell NE4000 PCMCIA Adapter Driver"
ProductSoftwareNE4000PCMCIATitle       = "Novell NE4000 PCMCIA Adapter Driver"
ProductSoftwareMICRODYNEPCMCIADescription      = "Microdyne NE4000 PCMCIA Adapter Driver"
ProductSoftwareMICRODYNEPCMCIATitle    = "Microdyne NE4000 PCMCIA Adapter Driver"

;
; Hardware
;

ProductHardwareNE2000IBMCOMPATDescription  = "IBM Ethernet PCMCIA and Compatible Adapter"
ProductHardwareNE2000IBMCOMPATTitle    = "IBM Ethernet PCMCIA and Compatible Adapter"
ProductHardwareNE4000PCMCIADescription = "Novell NE4000 PCMCIA Adapter"
ProductHardwareNE4000PCMCIATitle       = "Novell NE4000 PCMCIA Adapter"
ProductHardwareMICRODYNEPCMCIADescription = "Microdyne NE4000 PCMCIA Adapter"
ProductHardwareMICRODYNEPCMCIATitle       = "Microdyne NE4000 PCMCIA Adapter"

FunctionTitle   = $(ProductHardware$(Option)Title)" Card Setup"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Combo1Label = "&IRQ Level:"
Combo2Label = "&Memory Base Address:"
Combo3Label = "I/&O Port Address:"

;no translation needed after this

DlgType = "MultiCombo"
DlgTemplate = "WD"
Caption = $(FunctionTitle)

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)

Combo2List = $(PcCardAddressHexList)
Combo2Out  = $(PcCardBaseAddress)

Combo3List = $(IOBaseAddrHexList)
Combo3Out  = $(IOBaseAddress)


ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}


EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO, NO}

HelpContext = $(!IDH_DB_OEMNADWD_INS)

#####oemnxppp.inf all
[LanguagesSupported]
    ENG

[OptionsTextENG]
    RASPPTP             = "Point To Point Tunneling Protocol"

;***********************************************************************
;
;***********************************************************************
[FileConstantsENG]
    ProCaption          = "Windows NT Setup"
    ProCancel           = "Cancel"
    ProCancelMsg        = "Windows NT Networking is not correctly installed.  "+
                          "Are you sure you want to cancel copying files?"
    ProCancelCap        = "Network Setup Message"
    ProText1            = "Copying:"
    ProText2            = "To:"

    FunctionTitleRASPPTP                = "PPTP Card Setup"
    ProductSoftwareDescription          = "PPTP Miniport Driver"
    ProductHardwareRASPPTPDescription   = "PPTP Adapter"
    ProductSoftwareTitle                = "PPTP Miniport Driver"
    ProductHardwareRASPPTPTitle         = "PPTP Adapter"

    ProductRASPPTPDescription           = "This is a protocol for tunneling secure remote network communications across Point to Point (PPP) connections to the Internet. "+
                                          "It will allow remote and mobile users to dial into the Internet, using local points of presence and Internet service providers (ISPs) to gain access to corporate networks."
    ProductRASPPTPTitle                 = "Point To Point Tunneling Protocol"

    ShellCodeErrorTitle                 = "Error: "$(FunctionTitle)$(Option))
    ShellCodeErrorText                  = "Shell Code Error."

;RASPPTP_SPECIFIC_START
;***********************************************************************
; These constants are specific to the RASPPTP.sys driver for SMAN
;***********************************************************************
[SMANFileConstantsENG]
    PPTPFunctionTitleRASPPTP                = "PPTP Card Setup"
    PPTPProductSoftwareDescription          = "PPTP Protocol Driver"
    PPTPProductHardwareRASPPTPDescription   = "PPTP Adapter"
    PPTPProductSoftwareTitle                = "PPTP Protocol Driver"
    PPTPProductHardwareRASPPTPTitle         = "PPTP Adapter"

;RASPPTP_SPECIFIC_END

;***********************************************************************
;
;***********************************************************************
[DialogConstantsENG]
    Help                = "&Help"
    Exit                = "Cancel"
    OK                  = "OK"
    HelpContext         = ""
    Continue            = "Continue"
    Cancel              = "Cancel"

;***********************************************************************
;
;***********************************************************************
[FileDependentDlgENG]
    ;Label1              = "&IRQ Level:"
    ;Label2              = "&RAM Base Address:"
    DlgType             = "RadioCombination"
    DlgTemplate         = "NE2000"
    Caption             = $(FunctionTitle)$(Option)
    ;Combo1List          = $(IRQ_List)
    ;Combo1Out           = $(InterruptNumber)
    ;Combo2List          = $(RAM_Hex_List)
    ;Combo2Out           = $(RAM_Hex_Value)
    ;ComboListItemsIn    = {Combo1List, Combo2List}
    ;ComboListItemsOut   = {Combo1Out, Combo2Out}
    EditTextIn          = ""
    EditTextLim         = ""
    CBOptionsGreyed     = {}
    NotifyFields        = {NO, NO}
;    HelpContext         = $(!IDH_DB_OEMNADN2_INS)

;***********************************************************************
;
;***********************************************************************
[InvokeRasDlgENG]
    InvokeRasSetupMsg   = "Remote Access Services (RAS) will now be installed. "+
                          "Please configure the PPTP ports in RAS "+
                          "setup to enable you to use RAS over PPTP."
    InvokeRasConfigMsg  = "Remote Access Services (RAS) setup will now be invoked. "+
                          "Please configure the PPTP ports in RAS "+
                          "setup to enable you to use RAS over PPTP."
    InvokeRasConfigMsg2 = "Remote Access Services (RAS) setup will now be invoked. "+
                          "Please remove the PPTP ports in RAS configuration."

    InvokeRasError      = "PPTP setup encountered an error "+
                          "while invoking the RAS setup INF file (OEMNSVRA.INF). "+
                          "Please make sure that the file is present in the "+
                          "System32 directory and is the proper file."

[InvokeRasSetupDlgENG]
    DlgType      = "MessageBox"
    STF_MB_TEXT  = "Remote Access Services (RAS) is not installed. "+
                   "Do you want to install RAS "+
                   "and add the PPTP ports in RAS setup to enable "+
                   "you to use RAS over PPTP?"$(!LF)$(!LF)+
                   "NOTE: if you are going to install Routing and "+
                   "Remote Access Services beta, choose NO"

    STF_MB_TITLE = "PPTP setup"
    STF_MB_TYPE  = 3
    STF_MB_ICON  = 4
    STF_MB_DEF   = 2

[InvokeRasConfigDlgENG]
    DlgType      = "MessageBox"
    STF_MB_TEXT  = "Do you want to configure Remote Access Services (RAS) "+
                   "and add the PPTP ports in RAS setup to enable "+
                   "you to use RAS over PPTP?"

    STF_MB_TITLE = "PPTP setup"
    STF_MB_TYPE  = 3
    STF_MB_ICON  = 4
    STF_MB_DEF   = 2

;***********************************************************************
;
;***********************************************************************
[InvokeTCPIPDlgENG]
    InvokeTCPSetupMsg   = "TCP/IP is not installed. It will now be installed."
    InvokeTCPError      = "PPTP setup encountered an error "+
                          "while invoking the TCP/IP setup INF file (OEMNXPTC.INF). "+
                          "Please make sure that the file is present in the "+
                          "System32 directory and is the proper file."

;***********************************************************************
;
;***********************************************************************
[InvokeCancelDlgENG]
    InvokeCancelMsg = "PPTP setup is incomplete. "+
                       "Please rerun the Setup Program if you want "+
                       "to install PPTP."

;***********************************************************************
;
;***********************************************************************
[InvokeConfigureDlgENG]
    InvokeConfigureMsg = "Please reboot for the new changes to take effect."

#####oemnsvbr.inf all
[LanguagesSupported]
    ENG

[OptionsTextENG]
    RelayAgent = "DHCP Relay Agent"

[FileConstantsENG]
FunctionTitle                   = "Relay Agent Setup"
ProductSoftwareDescription      = "Enables the Windows NT Server to forward DHCP (Dynamic Host Configuration Protocol) broadcasts across a router to a remote DHCP server."
ProductSoftwareDisplayName      = "DHCP Relay Agent"
ProductSoftwareTitle            = "DHCP Relay Agent"
ErrorTCPIPNotInstalled          = "TCP/IP is not installed. Please install TCP/IP and retry this installation."
ShellCodeErrorTitle             = "Error: "$(FunctionTitle)
ShellCodeErrorText              = "Shell Code Error."
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"

[DefaultsENG]

[DialogConstantsENG]
Help            = "&Help"
Exit            = "Cancel"
OK              = "OK"
HelpContext     = ""
Continue        = "Continue"
Cancel          = "Cancel"

[FileDependentDlgENG]

#####oemnsvsm.inf all
[LanguagesSupported]
ENG
[OptionsTextENG]
SFM      = "Services for Macintosh"

[FileConstantsENG]

FunctionTitle                   =  "Services for Macintosh Setup"
ProductATALKDescription         =  "Enables a Macintosh computer to access shared disk space on your computer."
ProductAFPSVCDescription        =  "AppleTalk File Server"
ProductMACPRINTDescription      =  "AppleTalk Print Server"
ProductSFMDescription           =  "Enables a Windows NT Server to act as an AppleTalk router, allowing PC and Macintosh clients to share files and printers."


ProCaption      = $(FunctionTitle)
ProCancel       = "Cancel"
ProCancelMsg    = "Services for Macintosh is not correctly installed. "+
                  "Are you sure you want to cancel copying files ?"
ProCancelCap    = "Services for Macintosh Setup"
ProText1        = "Copying:"
ProText2        = "To:"
Error           = "User has cancelled copying files. Copied files will be removed."

MajorVersion    = "MajorVersion"
MinorVersion    = "MinorVersion"
Version         =  "Version "

AskLocationText = "Setup needs to copy Services for Macintosh files."$(!LF)$(!LF)+
                  "Setup will look for the files in the location specified below. If you want "+
                  "Setup to look in a different place, type the new location. When the location "+
                  "is correct, click Continue."

ProductSFMTitle                 = "Services for Macintosh"
ProductATALKDisplayName         = "AppleTalk Protocol"
ProductATALKTitle               = "AppleTalk Protocol"
ProductAFPSVCDisplayName        = "File Server for Macintosh"
ProductAFPSVCTitle              = "File Server for Macintosh"
ProductAFPSRVRDisplayName       = "SFM Kernel Driver"
ProductMACPRINTDisplayName      = "Print Server for Macintosh"
ProductMACPRINTTitle            = "Print Server for Macintosh"


!UAMVolumeName                  = "Microsoft UAM Volume"
!AtalkMonName                   = "AppleTalk Printing Devices"
!AtalkMonEventLogName           = "AppleTalk Print Monitor"

!AppleShareFolder                       = "AppleShare Folder"
!UamReadMeDestFile                      = "ReadMe.UAM"

GroupName    = "Administrative Tools"
IconName     = "File Manager"


[DialogConstantsENG]

Help        = "&Help"
Exit        = "E&xit Setup"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[UAMVarsENG]
UAMDirName     =       "Microsoft UAM Volume"
UAMPath        =       $(UAMDrive)"\"$(UAMDirName)

[TCCommentsENG]

!XCEL1COMMENT   = "Comment=MS Excel 3.0 Chart"
!XCEL2COMMENT   = "Comment=MS Excel 3.0 Spreadsheet"
!XCEL3COMMENT   = "Comment=MS Excel 3.0 Macrosheet"
!XCEL4COMMENT   = "Comment=MS Excel 3.0 Workspace"
!XCEL5COMMENT   = "Comment=MS Excel 3.0 Add-in MacroFile"
!XCEL6COMMENT   = "Comment=MS Excel 3.0 Template File"
!XCEL7COMMENT   = "Comment=MS Excel 3.0"
!XCEL8COMMENT   = "Comment=MS Excel 4.0 Chart"
!XCEL9COMMENT   = "Comment=MS Excel 4.0 Spreadsheet"
!XCEL10COMMENT  = "Comment=MS Excel 4.0 Macrosheet"
!XCEL11COMMENT  = "Comment=MS Excel 4.0 WorkSpace"
!XCEL12COMMENT  = "Comment=MS Excel 4.0 Add-in MacroFile"
!XCEL13COMMENT  = "Comment=MS Excel 4.0 Template File"
!MSWD1COMMENT   = "Comment=MS Word 5.1 Document"
!MSWD2COMMENT   = "Comment=MS Word 5.1 Document"
!MSWD3COMMENT   = "Comment=MS Word 6.0 Document"
!MSWD4COMMENT   = "Comment=MS Word 6.0 Template"
!MSPJ1COMMENT   = "Comment=MS Project 4.0"
!MSPJ2COMMENT   = "Comment=MS Project 4.0 Exchange File"
!MSPJ3COMMENT   = "Comment=MS Project 4.0 Calendar"
!MSPJ4COMMENT   = "Comment=MS Project 4.0 View"
!MSPJ5COMMENT   = "Comment=MS Project 4.0 WorkSpace"
!MSPJ6COMMENT   = "Comment=MS Project 4.0 Template"
!ALD31COMMENT   = "Comment=Pagemaker 3.0  Publication"
!ALD32COMMENT   = "Comment=Pagemaker 3.0 Template"
!ALD33COMMENT   = "Comment=Pagemaker 3.0 Tiff Graphics"
!ALD41COMMENT   = "Comment=Pagemaker 4.0 Publication"
!ALD42COMMENT   = "Comment=Pagemaker 4.0 Template"
!ALD43COMMENT   = "Comment=Pagemaker 4.0 Tiff Graphics"
!MORECOMMENT    = "Comment=Symantec More File"
!FOX+COMMENT    = "Comment=FoxBase Plus"
!ARTZCOMMENT    = "Comment=Adobe Illustrator"
!SIT!COMMENT    = "Comment=Aladdin Stuffit"
!PPT2COMMENT    = "Comment=MS PowerPoint 2.0"
!PPT3COMMENT    = "Comment=MS PowerPoint 3.0"
!L123COMMENT    = "Comment=Lotus 1-2-3"
!LMANCOMMENT    = "Comment=LMAN Executables"
!TTXTCOMMENT    = "Comment=Teach Text Document"
!FOXX1COMMENT   = "Comment=FoxPro 2.0 Table"
!FOXX2COMMENT   = "Comment=FoxPro 2.0 Memo"
!FOXX3COMMENT   = "Comment=FoxPro 2.0 Index"
!FOXX4COMMENT   = "Comment=FoxPro 2.0 Compound Index"
!FOXX5COMMENT   = "Comment=FoxPro 2.0 Program"
!FOXX6COMMENT   = "Comment=FoxPro 2.0 Report"
!FOXX7COMMENT   = "Comment=FoxPro 2.0 Report Memo"
!FOXX8COMMENT   = "Comment=FoxPro 2.0 Label"
!FOXX9COMMENT   = "Comment=FoxPro 2.0 Label Memo"
!FOXX10COMMENT   = "Comment=FoxPro 2.0 Screen"
!FOXX11COMMENT   = "Comment=FoxPro 2.0 Screen Memo"
!FOXX12COMMENT   = "Comment=FoxPro 2.0 Menu"
!FOXX13COMMENT   = "Comment=FoxPro 2.0 Menu Memo"
!FOXX14COMMENT   = "Comment=FoxPro 2.0 Gen. Query Program"
!FOXX15COMMENT   = "Comment=FoxPro 2.0 Project"
!FOXX16COMMENT   = "Comment=FoxPro 2.0 Project Memo"

;------------------------------------------------------------------
; Express /Custom Mode Install Dialog - Used In Initial Setup Only
;------------------------------------------------------------------

[SetupSpaceDlgENG]
STF_MB_TEXT = +
"Setup could not find enough space on your Windows NT Server system partition. "+
"Setup requires at least 2 MB for installing Services for Macintosh. "+
"You can retry installation after freeing up disk space on your system partition."


;no translation needed after this

DlgType         = "MessageBox"
STF_MB_TYPE     = 5
STF_MB_ICON     = 3
STF_MB_DEF      = 3
STF_MB_TITLE    = $(FunctionTitle)

;no translation needed after this

[ExitWarningDlgENG]
STF_MB_TITLE    = "Services for Macintosh Setup"
STF_MB_TEXT     = "Services for Macintosh is not correctly installed. Are you "+
                  "sure you want to exit Setup?"

;no translation needed after this

DlgType         = "MessageBox"
STF_MB_TYPE     = 3
STF_MB_ICON     = 5
STF_MB_DEF      = 2

;------------------------------------------------------------------
; Error Strings
;------------------------------------------------------------------

;------------------------------------------------------------------
; Miscellaneous Errors
;------------------------------------------------------------------

[MiscErrorString1ENG]
ErrorString = +
" of Services for Macintosh is already installed on your system. "+
"Use [Update] to update to newer versions."


[MiscErrorString2ENG]
ErrorString = +
"Sufficient memory is not available on your system to run  "+
"Services for Macintosh. Services for Macintosh requires "+
"a minimum of 8 MB to function."


[MiscErrorString3ENG]
ErrorString = +
"Setup encountered the following error during installation. Try installing "+
"Services for Macintosh after rebooting your system. "$(LF)

[ShellingErrorENG]
ErrorString  = +
"An internal error occurred. Contact Technical Support."

[NTFSFormatHappeningENG]
ErrorString = +
"Setup could not find any NTFS partitions in your system. You could be "+
"reformatting or converting your existing NTFS partition. The Microsoft UAM "+
"volume cannot be installed at this time. Setup will proceed with installation. "+
"Use the command SETUP /i OEMNSVSM.INF /c UAMINSTALL to install the UAM volume "+
"after Windows NT Server installation."


[UamFileNotCopiedENG]
ErrorString  = +
"Setup cannot copy Microsoft user authentication files to the Microsoft UAM "+
"volume. Macintosh workstations will be unable to download these files. There "+
"may not be enough disk space on your NTFS partition or the UAM files might be "+
"missing from your Windows NT Server distribution disks. Refer to your Administrator's guide "+
"on how to create this volume after installation."

[UamFileNotCopied1ENG]
ErrorString  = +
"Setup cannot copy Microsoft user authentication files to the Microsoft UAM "+
"volume. Macintosh workstations will be unable to download these files. There "+
"may not be enough disk space on your NTFS partition or the UAM files might be "+
"missing from your Windows NT Server distribution disks. Refer to your Administrator's guide "+
"on how to create this volume after installation."

[UamSecurityNotSetENG]
ErrorString = +
"Setup cannot set the default security settings for the UAM volume. "+
"Security for the UAM volume can also be set from the User Manager "+
"after installation."

[CannotStartAtalkENG]
ErrorSuffix = +
"Setup was unable to start the AppleTalk Protocol. You will be unable to choose "+
"a desired zone at this time."

[CannotStartAfdENG]
ErrorSuffix = +
"Setup was unable to start the AFD Driver. You will be unable to choose "+
"a desired zone at this time."

;------------------------------------------------------------------
; Status Strings
;------------------------------------------------------------------


[StatusInstallSfmENG]
Status = "Installing Services for Macintosh..."

[StatusRemoveSfmENG]
Status = "Removing Services for Macintosh files..."

[StatusStartingAppleTalkENG]
Status = "Starting AppleTalk Protocol..."



;------------------------------------------------------------------
; AppleTalk Transport Error Strings
;------------------------------------------------------------------

[AtalkString1ENG]
ErrorString  = +
"Setup cannot add Windows sockets support for the AppleTalk protocol. "+
"Windows sockets applications will be unable to use the AppleTalk Protocol. "+
"Remove Services for Macintosh after installation and re-install. If the problem "+
"persists, contact Microsoft support."

[AtalkString2ENG]
ErrorString  = +
"Setup cannot remove Windows Sockets support for the AppleTalk protocol."


[AtalkString3ENG]
ErrorString  = +
"Services for Macintosh has just been installed. Services will be "+
"available to Macintosh workstations in the default network. If you would like "+
"the services to appear in a different zone or to configure routing, close "+
"the Control Panel, reboot, start AppleTalk and use the Control Panel "+
"to configure Services for Macintosh."

[AtalkString5ENG]
ErrorString = +
"Setup cannot remove the monitor for the Print Server for Macintosh."

[AFPString1ENG]
ErrorString = +
"Setup cannot find an NTFS partition on your system. "+
"Services for Macintosh requires an NTFS partition for "+
"Macintosh workstations to share files. You can create "+
"the NTFS partition after installing Services for Macintosh. "+
"To format a partition to NTFS, use the command, format [drive] /fs:NTFS. "+
"Setup will proceed with installation."


[AFPString2ENG]
ErrorString = +
"Setup cannot add the Macintosh File Server to the File Manager. "+
"You will be unable to work with Macintosh accessible volumes from "+
"File Manager."


[AFPString3ENG]
ErrorString  = +
"Setup cannot add the Macintosh File Server to the Server Manager. "+
"You will be unable to work with Services for Macintosh servers from "+
"Server Manager."

[AFPString11ENG]
ErrorString  = +
"Setup can not find the volumes key in the MacFile section in registry. "+
"The UAM volume cannot be built."

[AFPString12ENG]
ErrorString  = +
"Setup can not find any NTFS volumes in your system. The UAM volume can not be installed."


[MacPrintString2ENG]
ErrorString = +
"Setup cannot create the eventlog entries for the Print Server for Macintosh. "+
"You will be unable to use the event viewer to see the log for Print Server "+
"for Macintosh."

[MacPrintString3ENG]
ErrorString = +
"Setup cannot add the print processor for the Print Server for Macintosh. "+
"Macintosh workstations will be unable to print postscript jobs to a "+
"non-postscript printer on the Windows NT Server network."

[MacPrintString4ENG]
ErrorString = +
"Setup cannot add the print monitor for the Print Server for Macintosh. "+
"Macintosh workstations will be unable to use print services on this "+
"Windows NT Server."

[MacPrintString5ENG]
ErrorString = +
"Setup cannot remove the print processor for the Print Server for Macintosh."

[MacPrintString6ENG]
ErrorString = +
"Setup can not find the directory to install the Macintosh print processor. "+
"The Macintosh print processor will not be installed."

[MacPrintString7ENG]
ErrorString = +
"Setup cannot remove the monitor for the Print Server for Macintosh."


[MacPrintString10ENG]
ErrorString = +
"Setup cannot create the eventlog entries for the Print Server for Macintosh monitor. "+
"You will be unable to use the event viewer to see the log for Print Server "+
"for Macintosh."


[NoAdaptersFoundENG]

ErrorString = +
"Setup cannot find any network adapter for Services for Macintosh. You will "+
"be unable to use Services for Macintosh. Try adding a network adapter or "+
"enable the bindings for AppleTalk Protocol."

[RemoveDefaultPortENG]
ErrorString  = +
"Setup has detected that the default network adapter used by Services "+
"for Macintosh has been removed. Setup will change the default network, if "+
"one is available. This may cause Macintosh workstations to no longer "+
"see Services for Macintosh on their current zone."

#####oemnxpsm.inf all

[LanguagesSupported]
   ENG
[OptionsTextENG]
   ATALK           = "AppleTalk Protocol"

[FileConstantsENG]
ProductSFMADMTitle              = "Macintosh Administrator Tools"
ProductSFMADMDescription        = "Macintosh Administrator Tools"
ProductATALKTitle               = "AppleTalk Protocol"
ProductSFMADMName               = "SFMADM"
FunctionTitle               = "AppleTalk Protocol Setup"
ProductATALKDescription     = "Enables a Macintosh computer to access shared disk space on your computer."


ProCaption      = $(FunctionTitle)
ProCancel       = "Cancel"
ProCancelMsg    = "AppleTalk Protocol is not correctly installed. "+
                  "Are you sure you want to cancel copying files ?"
ProCancelCap    = "AppleTalk Protocol Setup"
ProText1        = "Copying:"
ProText2        = "To:"
Error           = "User has cancelled copying files. Copied files will be removed."

MajorVersion    = "MajorVersion"
MinorVersion    = "MinorVersion"
Version         =  "Version "
OF              = " of "

!AtalkMonName                   = "AppleTalk Printing Devices"
!AtalkMonEventLogName   = "AppleTalk Print Monitor"

AskLocationText = "Setup needs to copy AppleTalk Protocol files."$(!LF)$(!LF)+
                  "Setup will look for the files in the location specified below. If you want "+
                  "Setup to look in a different place, type the new location. When the location "+
                  "is correct, click Continue."

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[ExitWarningDlgENG]
STF_MB_TITLE    = "AppleTalk Protocol Setup"
STF_MB_TEXT     = "AppleTalk Protocol is not correctly installed. Are you "+
                  "sure you want to exit Setup?"

;no translation needed after this

DlgType         = "MessageBox"
STF_MB_TYPE     = 3
STF_MB_ICON     = 5
STF_MB_DEF      = 2

;------------------------------------------------------------------
; Error Strings
;------------------------------------------------------------------

;------------------------------------------------------------------
; Miscellaneous Errors
;------------------------------------------------------------------

[MiscErrorString1ENG]
ErrorString = +
" is already installed on your system. "+
"Use [Update] to update to newer versions."

[SfmAlreadyInstalledENG]
ErrorString = +
" of Services for Macintosh is already installed on your system. "+
"You have to remove Services for Macintosh before installing the "+
"AppleTalk Protocol."

[MiscErrorString3ENG]
ErrorString = +
"Setup encountered the following error during installation. Try installing "+
"after rebooting your system. "$(LF)

[ShellingErrorENG]
ErrorString  = +
"An internal error occurred. Contact Technical Support."

[CannotStartAtalkENG]
ErrorSuffix = +
"Setup was unable to start the AppleTalk Protocol. You will be unable to choose "+
"a desired zone at this time."

[CannotStartAfdENG]
ErrorSuffix = +
"Setup was unable to start the AFD Driver. You will be unable to choose "+
"a desired zone at this time."

[StatusStartingAppleTalkENG]
Status = "Starting AppleTalk Protocol..."

;------------------------------------------------------------------
; AppleTalk Transport Error Strings
;------------------------------------------------------------------

[AtalkString1ENG]
ErrorString  = +
"Setup cannot add Windows sockets support for the AppleTalk protocol. "+
"Windows sockets applications will be unable to use the AppleTalk Protocol. "+
"Remove Services for Macintosh after installation and re-install. If the problem "+
"persists, contact Microsoft support."

[AtalkString2ENG]
ErrorString  = +
"Setup cannot remove Windows Sockets support for the AppleTalk protocol."


[AtalkString3ENG]
ErrorString  = +
"AppleTalk has just been installed. "+
"If you would like to configure AppleTalk, close "+
"the Control Panel, reboot, start AppleTalk and use the Control Panel "+
"to configure."

[AtalkString4ENG]
ErrorString = +
"Setup cannot add the print monitor for the Print Server for Macintosh. "+
"Macintosh workstations will be unable to use print services on this "+
"Windows NT workstation."

[AtalkString5ENG]
ErrorString = +
"Setup cannot remove the monitor for the Print Server for Macintosh."

[AtalkString6ENG]
"Setup cannot create the eventlog entries for the Print Server for Macintosh monitor. "+
"You will be unable to use the event viewer to see the log for Print Server "+
"for Macintosh."

[AtalkString7ENG]
ErrorString = +
"Services for Macintosh is installed on your system and it requires "+
"AppleTalk Protocol for proper operation."+
"You have to remove Services for Macintosh if you desire to remove "+
"AppleTalk Protocol."

[AFPString2ENG]
ErrorString = +
"Setup cannot add the Macintosh File Server to the File Manager. "+
"You will be unable to work with Macintosh accessible volumes from "+
"File Manager."


[AFPString3ENG]
ErrorString  = +
"Setup cannot add the Macintosh File Server to the Server Manager. "+
"You will be unable to work with Services for Macintosh servers from "+
"Server Manager."

[NoAdaptersFoundENG]

ErrorString = +
"Setup cannot find any network adapter for the AppleTalk Protocol. You will "+
"be unable to use AppleTalk Protocol. Try adding a network adapter or "+
"enable the bindings for AppleTalk Protocol."

[RemoveDefaultPortENG]
ErrorString  = +
"Setup has detected that the default network adapter used by AppleTalk "+
"Protocol has been removed. Setup will change the default network, if "+
"one is available."

[CantConfigureADMENG]
ErrorString = +
"You cannot configure this software component."

[RemovingSFMENG]
Message = "You have Services for Macintosh (SFM) installed on your "+
          "Windows NT Workstation. "+
          "SFM is only supported on the Windows NT Server. "+
          "Your SFM installation will be removed since this is not a "+
          "supported configuration. "+
          "Please install the Windows NT Server if you want to run SFM."


#####netbond.inf all
[MessageTextENG]
ProCaption   = "Windows NT Networking Installation"
ProCancel    = "Cancel"
MPreInstall1 = "Setup is installing the "
MPreInstall2 = "..."
MPostInstall = " has been installed."
ProCancelMsg = "Windows NT is not correctly installed.  Are you sure you want "+
                   "to cancel copying files?"
ProCancelCap = "Setup Message"
MPreUpgrade1 = "Setup is upgrading the "
MPostUpgrade = " has been upgraded."

MPreRemove1 = "Setup is removing the "
MPreRemove2 = "..."
MPostRemove = " has been removed."

[FatalErrorENG]
; do not translate the string on the left of the '='
Error = "Setup was unable to process the INF file "$(FailedInfFile)" which is required "+
        "for network installation."

[ErrorMsgENG]
CannotFindNtFiles = "The Windows NT files were not found in "$(Path1)", "$(Path2)", or "$(Path3)". Please make sure your input path is correct."

[FatalDlgENG]
STF_MB_TITLE = "Setup Message"
; no translation starting now
DlgType = "MessageBox"
STF_MB_TEXT  = $(Error)
STF_MB_TYPE  = 1
STF_MB_ICON  = 3
STF_MB_DEF   = 1
; end of no translation zone

[UpgradeWarnings]
; do not translate the string on the left of the '='
Warning = "You have the following product installed on your computer:  "$(ServiceTitle)".  Windows NT cannot upgrade this component.  Please contact your system administrator  or look through your product documentation to make sure that this product is compatible with this version of Windows NT."

[UpgradeNetCardWarnings]
; do not translate the string on the left of the '='
Warning = "The following non-Microsoft networking component is installed on this computer:  "$(ServiceTitle)".  Although your network connection may function properly after the upgrade is completed,  the component should be removed and replaced with a newer version."

[WarningDlg]
STF_MB_TITLE = "Network Setup Information"

; no translation starting now
DlgType = "MessageBox"
STF_MB_TEXT  = $(Warning)
STF_MB_TYPE  = 1
STF_MB_ICON  = 2
STF_MB_DEF   = 1
; end of no translation zone

[UpgradeDialogENG]
    ProCaption   = "Windows NT Networking Upgrade"
    ProCancel    = "Cancel"
    ProCancelMsg = "Windows NT is not correctly upgraded.  Are you sure you want "+
                   "to cancel copying files?"
    ProCancelCap = "Network Upgrade Message"
    ProText1     = "Copying:"
    ProText2     = "To:"

#####oemnsvin.inf all
[LanguagesSupported]
    ENG


;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsWINNTTextENG]
    INETSRV      = "Microsoft Peer Web Services"

[OptionsLANMANNTTextENG]
    INETSRV      = "Microsoft Internet Information Server 2.0"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionLANMANNTTitle    = "Microsoft Internet Information Server 2.0"
FunctionWINNTTitle = "Microsoft Peer Web Services"
;
; Software
;
ProductSoftwareWINNTDescription      = "Microsoft Peer Web Services"
ProductSoftwareLANMANNTDescription   = "Microsoft Internet Information Server 2.0"
;
; Hardware
;
OptionList     = ^(Options, 1)
OptionTextList = ^(OptionsTextENG, 1)

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

Warning1 = "Please use Internet Manager to configure the software."
Warning2Winnt = "Microsoft Peer Web Services may be deleted by another process. Please restart your Network Control Panel applet."
Warning2LanmanNt = "Microsoft Internet Information Server may be deleted by another process. Please restart your Network Control Panel applet."
Warning3Winnt = "Microsoft Peer Web Services may be installed by another process. Please restart your Network Control Panel applet."
Warning3LanmanNt = "Microsoft Internet Information Server may be installed by another process. Please restart your Network Control Panel applet."
Warning4Winnt = "Microsoft Peer Web Services cannot be installed without proper network protocol setup. Please make sure your network protocol is installed."
Warning4LanmanNt = "Microsoft Internet Information Server cannot be installed without proper network protocol setup. Please make sure your network protocl is installed."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for sonic
;

#####oemnadsn.inf all
[LanguagesSupported]
    ENG

[OptionsTextENG]
    SNIMAC      = "SNI RM400/RM200 Driver for onboard Ethernet Adapter"

[FileConstantsENG]
    ProCaption   = "Windows NT Setup"
    ProCancel    = "Cancel"
    ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
                   "Are you sure you want to cancel copying files?"
    ProCancelCap = "Network Setup Message"
    ProText1     = "Copying:"
    ProText2     = "To:"
    FunctionTitle                   = "SNI RM400/RM200 onboard Ethernet Adapter Card Setup"
    ProductSoftwareDescription      = "SNI RM400/RM200 onboard Ethernet Adapter Driver"
    OptionList     = ^(Options, 1)
    OptionTextList = ^(OptionsTextENG, 1)
    ProductHardwareDescription      = *($(OptionTextList), ~($(OptionList), $(Option)))
    ProductSoftwareTitle            = "SNI RM400/RM200 onboard Ethernet Adapter Driver"
    ProductHardwareSNIMACx00Title      = "SNI RM400/RM200 onboard Ethernet Adapter"
    ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
    ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
    Help        = "&Help"
    Exit        = "Cancel"
    OK          = "OK"
    HelpContext = ""
    Continue    = "C&ontinue"
    Cancel      = "C&ancel"

[FileDependentDlgENG]

[Warning1ENG]
    Error = "No configuration is required for this adapter card."



#####oemnadma.inf all
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; Text strings to identify adapter options.
;-----------------------------------------------------------------------

[OptionsTextENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPISA   = "Madge Smart 16/4 AT Ringnode"
    MSMDGMPATP   = "Madge Smart 16/4 AT Plus Ringnode"
    MSMDGMPISAC  = "Madge Smart 16/4 ISA Client Ringnode"
    MSMDGMPISACP = "Madge Smart 16/4 ISA Client Plus Ringnode"
    MSMDGMPPC    = "Madge Smart 16/4 PC Ringnode"
    MSMDGMPSM16  = "Madge Smart 16 Ringnode"
    MSMDGMPPNP   = "Madge Smart 16/4 ISA Client PnP Ringnode"
    MSMDGMPMCA   = "Madge Smart 16/4 MC Ringnode"
    MSMDGMPMC32  = "Madge Smart 16/4 MC32 Ringnode"
    MSMDGMPEISA  = "Madge Smart 16/4 EISA Ringnode"
    MSMDGMPPCI   = "Madge Smart 16/4 PCI Ringnode"
    MSMDGMPPCIBM = "Madge Smart 16/4 PCI Ringnode (BM)"
    MSMDGMPPCMCIA = "Madge Smart 16/4 PCMCIA Ringnode"

[OptionsTextISAENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPISA   = "Madge Smart 16/4 AT Ringnode"
    MSMDGMPATP   = "Madge Smart 16/4 AT Plus Ringnode"
    MSMDGMPISAC  = "Madge Smart 16/4 ISA Client Ringnode"
    MSMDGMPISACP = "Madge Smart 16/4 ISA Client Plus Ringnode"
    MSMDGMPPC    = "Madge Smart 16/4 PC Ringnode"
    MSMDGMPSM16  = "Madge Smart 16 Ringnode"
    MSMDGMPPNP   = "Madge Smart 16/4 ISA Client PnP Ringnode"

[OptionsTextMCAENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPMCA   = "Madge Smart 16/4 MC Ringnode"
    MSMDGMPMC32  = "Madge Smart 16/4 MC32 Ringnode"

[OptionsTextEISAENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPEISA  = "Madge Smart 16/4 EISA Ringnode"
    MSMDGMPISA   = "Madge Smart 16/4 AT Ringnode"
    MSMDGMPATP   = "Madge Smart 16/4 AT Plus Ringnode"
    MSMDGMPISAC  = "Madge Smart 16/4 ISA Client Ringnode"
    MSMDGMPISACP = "Madge Smart 16/4 ISA Client Plus Ringnode"
    MSMDGMPPC    = "Madge Smart 16/4 PC Ringnode"
    MSMDGMPSM16  = "Madge Smart 16 Ringnode"
    MSMDGMPPNP   = "Madge Smart 16/4 ISA Client PnP Ringnode"

[OptionsTextPCIENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPPCI   = "Madge Smart 16/4 PCI Ringnode"
    MSMDGMPPCIBM = "Madge Smart 16/4 PCI Ringnode (BM)"

[OptionsTextPCMCIAENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPPCMCIA = "Madge Smart 16/4 PCMCIA Ringnode"


; ----------------------------------------------------------------------
; Miscellaneous declarations for initialsing lists.
; ----------------------------------------------------------------------

[IoLocationChoices]
    "0x0300",768
    "0x0a20",2592
    "0x1a20",6688
    "0x2a20",10784
    "0x3a20",14880
    "0x4a20",18976
    "0x4e20",20000
    "0x5a20",23072
    "0x5e20",24096
    "0x6a20",27168
    "0x6e20",28192
    "0x7a20",31264
    "0x7e20",32288
    "0x0140",320
    "0x0920",2336
    "0x0940",2368
    "0x0960",2400
    "0x0980",2432
    "0x0a40",2624
    "0x0a60",2656
    "0x0a80",2688
    "0x0aa0",2720
    "0x0b20",2848
    "0x0b40",2880
    "0x0b60",2912
    "0x0b80",2944
    "UNKNOWN",65535

[DmaChannelChoices]
    "PIO",0
    "DMA Channel 01",1
    "DMA Channel 02",2
    "DMA Channel 03",3
    "DMA Channel 04",4
    "DMA Channel 05",5
    "DMA Channel 06",6
    "DMA Channel 07",7
    "DMA Channel 08",8
    "DMA Channel 09",9
    "DMA Channel 10",10
    "DMA Channel 11",11
    "DMA Channel 12",12
    "DMA Channel 13",13
    "DMA Channel 14",14
    "DMA Channel 15",15
    "DMA",500
    "MMIO",501
    "UNKNOWN",65535

[IrqNumberChoices]
    "01",1
    "02",2
    "03",3
    "04",4
    "05",5
    "06",6
    "07",7
    "08",8
    "09",9
    "10",10
    "11",11
    "12",12
    "13",13
    "14",14
    "15",15
    "UNKNOWN",65535

[SlotNumberChoices]
    "00",0
    "01",1
    "02",2
    "03",3
    "04",4
    "05",5
    "06",6
    "07",7
    "08",8
    "09",9
    "10",10
    "11",11
    "12",12
    "13",13
    "14",14
    "15",15
    "16",16
    "17",17
    "18",18
    "19",19
    "20",20
    "21",21
    "22",22
    "23",23
    "24",24
    "25",25
    "26",26
    "27",27
    "28",28
    "29",29
    "30",30
    "31",31
    "UNKNOWN",65535

[RxTxSlotsChoices]
    "Rx=02 Tx=02",0
    "Rx=03 Tx=03",1
    "Rx=04 Tx=04",2
    "Rx=06 Tx=06",3
    "Rx=08 Tx=08",4
    "Rx=10 Tx=10",5

[StatsChoices]
    "Disabled",0
    "Enabled",1

[MpChoices]
    "One",0
    "Multiple",1
    "UNKNOWN",65535
; ----------------------------------------------------------------------
; Language dependent constants specific to the driver.
; ----------------------------------------------------------------------

[FileConstantsENG]

;
; Product Info
;

FunctionTitle   = "MdgMPort v"$(ProductVersion)": Madge Smart Ringnode Setup"

;
; Software.
;

ProductSoftwareTitle       = "MdgMPort"
ProductSoftwareDescription = "MdgMPort: Madge Smart Ringnode NDIS3 Miniport Driver"

;
; Hardware.
;

ProductHardwareMSMDGMPISATitle   = "Madge Smart 16/4 AT Ringnode"
ProductHardwareMSMDGMPATPTitle   = "Madge Smart 16/4 AT Plus Ringnode"
ProductHardwareMSMDGMPISACTitle  = "Madge Smart 16/4 ISA Client Ringnode"
ProductHardwareMSMDGMPISACPTitle = "Madge Smart 16/4 ISA Client Plus Ringnode"
ProductHardwareMSMDGMPPCTitle    = "Madge Smart 16/4 PC Ringnode"
ProductHardwareMSMDGMPEISATitle  = "Madge Smart 16/4 EISA Ringnode"
ProductHardwareMSMDGMPMCATitle   = "Madge Smart 16/4 MC Ringnode"
ProductHardwareMSMDGMPMC32Title  = "Madge Smart 16/4 MC32 Ringnode"
ProductHardwareMSMDGMPSM16Title  = "Madge Smart 16 Ringnode"
ProductHardwareMSMDGMPPNPTitle   = "Madge Smart 16/4 ISA Client PnP Ringnode"
ProductHardwareMSMDGMPPCITitle   = "Madge Smart 16/4 PCI Ringnode"
ProductHardwareMSMDGMPPCIBMTitle = "Madge Smart 16/4 PCI Ringnode (BM)"
ProductHardwareMSMDGMPPCMCIATitle  = "Madge Smart 16/4 PCMCIA Ringnode"

ProductHardwareMSMDGMPISADescription   = "Madge Smart 16/4 AT Ringnode"
ProductHardwareMSMDGMPATPDescription   = "Madge Smart 16/4 AT Plus Ringnode"
ProductHardwareMSMDGMPISACDescription  = "Madge Smart 16/4 ISA Client Ringnode"
ProductHardwareMSMDGMPISACPDescription = "Madge Smart 16/4 ISA Client Plus Ringnode"
ProductHardwareMSMDGMPPCDescription    = "Madge Smart 16/4 PC Ringnode"
ProductHardwareMSMDGMPEISADescription  = "Madge Smart 16/4 EISA Ringnode"
ProductHardwareMSMDGMPMCADescription   = "Madge Smart 16/4 MC Ringnode"
ProductHardwareMSMDGMPMC32Description  = "Madge Smart 16/4 MC32 Ringnode"
ProductHardwareMSMDGMPSM16Description  = "Madge Smart 16 Ringnode"
ProductHardwareMSMDGMPPNPDescription   = "Madge Smart 16/4 ISA Client PnP Ringnode"
ProductHardwareMSMDGMPPCIDescription   = "Madge Smart 16/4 PCI Ringnode"
ProductHardwareMSMDGMPPCIBMDescription = "Madge Smart 16/4 PCI Ringnode (BM)"
ProductHardwareMSMDGMPPCMCIADescription   = "Madge Smart 16/4 PCMCIA Ringnode"

;
; Ring speed selection.
;

SpeedUserListMSMDGMPISA    = {"Set at adapter", "Force 16 MBit/s"}
SpeedRawListMSMDGMPISA     = {0, 2}

SpeedUserListMSMDGMPATP    = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPATP     = {0, 1, 2}

SpeedUserListMSMDGMPISAC   = {"Set at adapter", "Force 16 MBit/s"}
SpeedRawListMSMDGMPISAC    = {0, 2}

SpeedUserListMSMDGMPISACP  = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPISACP   = {0, 1, 2}

SpeedUserListMSMDGMPPC     = {"Set at adapter", "Force 16 MBit/s"}
SpeedRawListMSMDGMPPC      = {0, 2}

SpeedUserListMSMDGMPEISA   = {"Set at adapter"}
SpeedRawListMSMDGMPEISA    = {0}

SpeedUserListMSMDGMPMCA    = {"Set at adapter"}
SpeedRawListMSMDGMPMCA     = {0}

SpeedUserListMSMDGMPMC32   = {"Set at adapter"}
SpeedRawListMSMDGMPMC32    = {0}

SpeedUserListMSMDGMPSM16   = {"Always 16 MBit/s"}
SpeedRawListMSMDGMPSM16    = {0}

SpeedUserListMSMDGMPPNP    = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPPNP     = {0, 1, 2}

SpeedUserListMSMDGMPPCI    = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPPCI     = {0, 1, 2}

SpeedUserListMSMDGMPPCIBM  = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPPCIBM   = {0, 1, 2}

SpeedUserListMSMDGMPPCMCIA = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPPCMCIA  = {0, 1, 2}

;
; Adapter types.
;

AdapterTypeFlagMSMDGMPISA    = 100
AdapterTypeFlagMSMDGMPATP    = 100
AdapterTypeFlagMSMDGMPISAC   = 100
AdapterTypeFlagMSMDGMPISACP  = 100
AdapterTypeFlagMSMDGMPPC     = 100
AdapterTypeFlagMSMDGMPEISA   = 500
AdapterTypeFlagMSMDGMPMCA    = 600
AdapterTypeFlagMSMDGMPMC32   = 600
AdapterTypeFlagMSMDGMPSM16   = 400
AdapterTypeFlagMSMDGMPPNP    = 300
AdapterTypeFlagMSMDGMPPCI    = 700
AdapterTypeFlagMSMDGMPPCIBM  = 700
AdapterTypeFlagMSMDGMPPCMCIA = 200

;
; Messages.
;

CANNOT_FIND_ANY_CARD = "Cannot find a Madge Smart Ringnode in the machine. "+
                       "If you are certain that a Madge Smart Ringode is "+
                       "present then try choosing the adapter type "+
                       "instead of automatic installation. Please note "+
                       "that EISA and MCA adapters will only be found if "+
                       "the EISA configuration utility or PS/2 reference "+
                       "diskette respectively have been used to configure "+
                       "the adapter. Also not that automated installation "+
                       "will not find PCI adapters."

TRIMMED_MFS = "WARNING: The maximum frame size at 16Mbps is 17839 bytes"+
	      "  and you have specified a value greater than that. This"+
	      "  value has been reduced to 17839 for you. If you are in"+
	      "  fact running at 4Mbps, the maximum frame size is 4472,"+
	      "  but do not worry -  the driver will automatically  set"+
	      "  the correct value, and write it to the Event Log."

ShellCodeErrorTitle = "Error: "$(FunctionTitle)
ShellCodeErrorText  = "Shell Code Error"

ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

; ---------------------------------------------------------------------
; Language dependant general dialog constants.
; ---------------------------------------------------------------------

[DialogConstantsENG]

;
; Common button names, etc.
;

Help        = "&Help"
Exit        = "&Cancel"
OK          = "&OK"
Continue    = "C&ontinue"
Cancel      = "C&ancel"
HelpContext = ""

OldValueTitleInstall   = "Current hardware settings"
OldValueTitleConfigure = "Currently configured settings"

ConsultHelp = "Consult help before changing the settings below"

; -----------------------------------------------------------------------
; Language depentant input dialog constants.
; -----------------------------------------------------------------------

[FileDependentDlgENG]

DlgType     = "RadioCombination"
DlgTemplate = $(Option)

Caption = $(FunctionTitle)

Combo1Label = "&IRQ Level:"
Combo2Label = "I/O &Location:"
Combo3Label = "&Transfer method:"
Combo4Label = "Rx/Tx &Buffers:"
Combo5Label = "Traffic &Statistics Gathering:"
Combo6Label = "Please choose a Madge adapter to install"
Combo7Label = "Number of processors in &PC:"
Combo8Label = "Slot &Number:"
Combo9Label = "&Ring Speed:"

PciCombo8Label = "PCI &Device ID:"

Combo1List = $(IrqList)
Combo1Out  = $(IrqNumber)

Combo2List = $(IoList)
Combo2Out  = $(IoLocation)

Combo3List = $(DmaList)
Combo3Out  = $(DmaChannel)

Combo4List = $(RxTxUserList)
Combo4Out  = $(RxTxSlots)

Combo5List = $(StatsUserList)
Combo5Out  = $(StatsFlag)

Combo6List = $(AdapterDescList)
Combo6Out  = $(AdapterType)

Combo7List = $(MpList)
Combo7Out  = $(MpFlag)

Combo8List = $(SlotList)
Combo8Out  = $(SlotNumber)

Combo9List = $(SpeedUserList)
Combo9Out  = $(SpeedFlag)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List, Combo4List, Combo5List, Combo6List, Combo7List, Combo8List, Combo9List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out, Combo4Out, Combo5Out, Combo6Out, Combo7Out, Combo8Out, Combo9Out}

Edit1Label  = "Max&FrameSize:"
Edit2Label  = "&LAA:"
EditTextIn  = {$(MaxFrameSize), $(LAA)}
EditTextLim = {5,17}
EditTextOut = {}

CBOptionsGreyed = {}
NotifyFields = {NO, NO, NO, NO, NO, NO, NO, NO}

HelpContext = $(MadgeHelpId$(Option))

AdapterTitle = #(OptionsText$(!STF_LANGUAGE),$(Option),1)

#####oemnadam.inf i386
[LanguagesSupported]
    ENG
[OptionsTextENG]
    AM1500T = "Advanced Micro Devices AM2100/AM1500T Adapter"
    AM1500T1 = "Novell/Anthem NE1500T Adapter"
    AM1500T2 = "Novell/Anthem NE2100 Adapter"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionAM1500TTitle   = "AMD AM2100/AM1500T Adapter Setup"
FunctionAM1500T1Title   = "Novell/Anthem NE1500T Adapter Setup"
FunctionAM1500T2Title   = "Novell/Anthem NE2100 Adapter Setup"
ProductSoftwareAM1500TDescription       = "AMD AM2100/AM1500T Driver"
ProductSoftwareAM1500T1Description      = "Novell/Anthem NE1500T Driver"
ProductSoftwareAM1500T2Description      = "Novell/Anthem NE2100 Driver"
ProductHardwareAM1500TDescription       = "AMD AM2100/AM1500T Adapter"
ProductHardwareAM1500T1Description      = "Novell/Anthem NE1500T Adapter"
ProductHardwareAM1500T2Description      = "Novell/Anthem NE2100 Adapter"
ProductSoftwareAM1500TTitle     = "AMD Driver"
ProductSoftwareAM1500T1Title    = "Novell/Anthem NE1500T Driver"
ProductSoftwareAM1500T2Title    = "Novell/Anthem NE2100 Driver"
ProductHardwareAM1500TTitle     = "AMD AM2100/AM1500T Adapter"
ProductHardwareAM1500T1Title    = "Novell/Anthem NE1500T Adapter"
ProductHardwareAM1500T2Title    = "Novell/Anthem NE2100 Adapter"
ShellCodeErrorTitle     = "Error: "$(Function$(Option)Title)
ShellCodeErrorText      = "Shell Code Error."
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
DlgType = "MultiCombo"
DlgTemplate = "WD"
Caption = $(Function$(Option)Title)
Combo1Label = "&IRQ Level:"
Combo2Label = "&DMA Channel:"
Combo3Label = "I/&O Port Address:"
Combo1List = $(IRQ_List)
Combo1Out  = $(IRQLevel)
Combo2List = $(DMAChannelList)
Combo2Out  = $(DMAChannel)
Combo3List = $(IOBaseAddressHexList)
Combo3Out  = $(IOBaseAddress)
ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}
EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO, NO}
HelpContext = $(!IDH_DB_OEMNADAM_INS)

=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\inf\win4\inf\usa\communic.txt ===
/*:
@*:  This file is organized into two main blocks. The first block contains
@*:    code (non-string) sections which are specific to languages. Please put
@*:    the code sections in the correct language.
@*:  The second block is reserved for [Strings] which localizers will be
@*:    working with. It is further divided using "#if LANGUAGE ==" for language
@*:    specific strings. For strings which are common to all languages
@*:    place outside the #ifs.
@*:
@*:  This file is first precompiled with LANGUAGE_ID
@*:  set to the language (see inf\win4\inf\makefile.inc for details).
@*:  For example, for usa builds, the sections under #if LANGUAGE == 0x409
@*:  will appear.
@*:
@*: Important: To support locstudio, this file contains only ONE [Strings] section.
@*:
@*/

#if LANGUAGE_ID == 0x409
//USA specific sections
[HypertrmCopyFilesConfig]
AT&T Mail.ht,           att.ht,,    16
CompuServe.ht,          cis.ht,,    16
HyperTerminal BBS.ht,   hilgbbs.ht,,16
MCI Mail.ht,            mci.ht,,    16
Microsoft BBS.ht,       msbbs.ht,,  16

#elif LANGUAGE_ID == 0x804
//CHS specific sections
[HypertrmCopyFilesConfig]
;AT&T Mail.ht,           att.ht,,    16
;CompuServe.ht,          cis.ht,,    16
;HyperTerminal BBS.ht,   hilgbbs.ht,,16
;MCI Mail.ht,            mci.ht,,    16
;Microsoft BBS.ht,       msbbs.ht,,  16

#elif LANGUAGE_ID == 0x404
//CHT specific sections
[HypertrmCopyFilesConfig]
;AT&T Mail.ht,           att.ht,,    16
;CompuServe.ht,          cis.ht,,    16
;HyperTerminal BBS.ht,   hilgbbs.ht,,16
;MCI Mail.ht,            mci.ht,,    16
;Microsoft BBS.ht,       msbbs.ht,,  16

#elif LANGUAGE_ID == 0x411
//JPN specific sections
[HypertrmCopyFilesConfig]
;AT&T Mail.ht,           att.ht,,    16
;CompuServe.ht,          cis.ht,,    16
;HyperTerminal BBS.ht,   hilgbbs.ht,,16
;MCI Mail.ht,            mci.ht,,    16
;Microsoft BBS.ht,       msbbs.ht,,  16

#elif LANGUAGE_ID == 0x412
//KOR specific sections
[HypertrmCopyFilesConfig]
;AT&T Mail.ht,           att.ht,,    16
;CompuServe.ht,          cis.ht,,    16
;HyperTerminal BBS.ht,   hilgbbs.ht,,16
;MCI Mail.ht,            mci.ht,,    16
;Microsoft BBS.ht,       msbbs.ht,,  16

#endif

// String section below for localizers

[Strings]
KEY_OPTIONAL        = "SOFTWARE\Microsoft\Windows\CurrentVersion\Setup\OptionalComponents"
KEY_APP_PATH        = "SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths"
Access_GROUPOLD     = "Accessories"
Access_GROUP        = "Accessories\Communications"

CommApps_DESC       = "Communications"
CommApps_TIP        = "Includes accessories to help you connect to other computers and online services."

Chat_DESC           = "Chat"
Chat_TIP            = "Allows you to converse with other Windows users over a network."
Chat_Infotip        = "Use Chat to communicate interactively with someone on another computer."

Dialer_DESC         = "Phone Dialer"
Dialer_TIP          = "Enables you to use your computer to dial a phone through a modem."
Dialer_Infotip      = "Makes voice or video calls to other computers and enables video conferencing."
Dialer_DIR          = "Windows NT"

Hypertrm_DESC       = "HyperTerminal"
Hypertrm_TIP        = "Enables you to connect to other computers and online services (requires a modem)."
Hypertrm_Infotip    = "Connects to other computers, Internet telnet sites, bulletin board systems, online services, and host computers using either a modem or a null-modem cable."
Hypertrm_DIR        = "Windows NT"
Hypertrm_GROUPOLD   = "Accessories\Hyperterminal"
HypTrm_File         = "HyperTerminal File"

Phoenix_DESC        = "Windows Real-Time Client"
Phoenix_TIP         = "Enables you to make voice or video calls to other computers and phones."
Phoenix_DIR         = "Windows NT"
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\inf\beta\cht_net.txt ===
#####oemnadso.inf mips
[LanguagesSupported]
    ENG


;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SONIC      = "ARC Built-in Ethernet Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "ARC Built-in Ethernet Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "ARC Built-in Ethernet Adapter Driver"
;
; Hardware
;
OptionList     = ^(Options, 1)
OptionTextList = ^(OptionsTextENG, 1)

ProductHardwareDescription      = *($(OptionTextList), ~($(OptionList), $(Option)))

ProductSoftwareTitle    = "ARC Built-in Ethernet Adapter Driver"
ProductHardwareSONICTitle       = "ARC Built-in Ethernet Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for sonic
;

[Warning1ENG]
Error = "No configuration is required for this adapter card."

#####oemnadim.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    EE16MC     = "Intel Ether Express MCA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Intel Ether Express MCA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Intel Ether Express MCA Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Intel Ether Express MCA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Intel Ether Express MCA Adapter Driver"
ProductHardwareTitle    = "Intel Ether Express MCA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;

#####oemnadem.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNKMC     = "3Com 3C523 Etherlink/MC Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "3Com 3C523 Etherlink/MC Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com 3C523 Etherlink/MC Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "3Com 3C523 Etherlink/MC Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "3Com 3C523 Etherlink/MC Adapter Driver"
ProductHardwareTitle    = "3Com 3C523 Etherlink/MC Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;
#####oemnadtm.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    IBMTOKMC     = "IBM Token Ring 4/16 Adapter /A"
    IBMTOKA      = "IBM Token Ring Adapter /A"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "IBM Token Ring Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "IBM Token Ring Adapter Driver"
;
; Hardware
;
ProductHardwareIBMTOKADescription      = "IBM Token Ring Adapter /A"
ProductHardwareIBMTOKMCDescription     = "IBM Token Ring 4/16 Adapter /A"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "IBM Token Ring Adapter Driver"
ProductHardwareIBMTOKATitle     = "IBM Token Ring Adapter /A"
ProductHardwareIBMTOKMCTitle    = "IBM Token Ring 4/16 Adapter /A"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Edit1Label = "&Network Address:"

;no translation needed after this

DlgType = "Edit"
DlgTemplate = "NETWORK_NUMBER"
Caption = $(FunctionTitle)

HelpContext = $(!IDH_DB_OEMNADTM_INS)

EditTextLim = 17
EditTextIn  = $(NetworkAddress)
EditFocus   = "ALL"
RCCtlFocusOn = 403

#####oemnadum.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    UBPS     = "Ungermann-Bass Ethernet NIUps Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Ungermann-Bass Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Ungermann-Bass Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Ungermann-Bass Ethernet NIUps Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Ungermann-Bass Driver"
ProductHardwareTitle    = "Ungermann-Bass Ethernet NIUps Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;

#####oemnadwm.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    WD8003EA = "SMC (WD) 8003E /A"
    WD8003WA = "SMC (WD) 8003W /A"
    WD8013WPA = "SMC (WD) 8013WP /A"
    WD8013EPA = "SMC (WD) 8013EP /A"

;  Disable options
;    WD8003EA = "SMC (WD) 8003E /A"
;    WD8003SA = "SMC (WD) 8003S /A"
;    WD8003WA = "SMC (WD) 8003W /A"
;    WD8013WA = "SMC (WD) 8013W /A"
;    WD8115TRA = "SMC (WD) 8115 /A"
;    BISTOR003EA = "SMC (WD) BISTOR003EA /A"
;    BISTOR013EA = "SMC (WD) BISTOR013EA /A"
;    BISTOR013WA = "SMC (WD) BISTOR013WA /A"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
; Product Info
;
FunctionTitle   = "SMC (WD) "$(Option)" Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "SMC (WD) Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "SMC (WD) "$(Option)" Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "SMC (WD) Adapter Driver"
ProductHardwareTitle    = "SMC (WD) "$(Option)" Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;

#####oemnxpxn.inf all
;------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
;       This lists the languages supported by this file.
;       If you add other languages to this list, you must
;       also add the appropriate text sections for the new
;       language
;------------------------------------------------------------------
[LanguagesSupported]
    ENG

;-------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
;
;       These are the text strings used to identify the options to
;       the user.  There should be a header and entry for every
;       language listed in the "LanguagesSupported" section.
;-------------------------------------------------------------------
[OptionsTextENG]
    MCSXNS     = "MCS XNS Network Transport"

;--------------------------------------------------------------------
;       Language Dependent Dialog Constants
;--------------------------------------------------------------------
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "MCS XNS Setup"
ProductMCSXNSDescription     = "MCS XNS System Driver"
ProductUBNBDescription   = "MCS Ungermann-Bass NetBIOS System Driver"
ProductMCSXNSDisplayName = "MCS XNS Network Transport"
ProductMCSXNSTitle      = "MCS XNS Network Transport"
ProductMCSXNSSYSDisplayName = "McsXnssys"
ProductMCSXNSSYSTitle   = "MCS XNS Network Transport Driver"
ProductUBNBDisplayName = "MCS Ungermann-Bass NetBIOS Transport"
ProductUBNBTitle        = "MCS Ungermann-Bass NetBIOS Transport"
ProductUBNBSYSDisplayName = "Ubnbsys"
ProductUBNBSYSTitle      = "MCS Ungermann-Bass NetBIOS Transport Driver"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[FileDependentDlgENG]
;
;--- No UI for McsXns
;

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlg]
STF_MB_TITLE = "Information Message"
; no translation needed for dlgtype
DlgType = "MessageBox"
STF_MB_TEXT  = $(InfoMsgText)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlgCantConfigure]
InfoMsgText = "The MCS XNS service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click  OK.  You will then have the opportunity to configure the adapters."

;--------------------------------------------------------------------
;       Get the string to use while doing the install
;--------------------------------------------------------------------
[Billboard1ENG]
Status = "Installing MCS XNS/UB and related services..."


#####oemnadnp.inf all
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NPEISA     = "Network Peripherals FDDI, EISA"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Network Peripherals FDDI EISA Setup"
;
; Software
;
ProductSoftwareDescription      = "Network Peripherals FDDI EISA Driver"
;
; Hardware
;
ProductHardwareDescription      = "Network Peripherals FDDI EISA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Network Peripherals FDDI, EISA Driver"
ProductHardwareTitle    = "Network Peripherals FDDI Eisa Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for EISA
;

#####nbinfo.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NETBIOS     = "NETBIOS provider"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


ShellCodeErrorTitle     = "Error: NETBIOS Provider"
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]


#####ncpashel.inf all
;**************************************************************************
;  Language Support
;**************************************************************************
[LanguageID]
   ENG

[LanguageTextENG]
   "English (United States)"

;**************************************************************************
; PROGRESS GUAGE VARIABLES: to support file copy operations.
;**************************************************************************

[ProgressCopyENG]
    ProCaption   = "Windows NT Networking Setup"
    ProCancel    = "Cancel"
    ProCancelMsg = "Windows NT is not correctly installed.  Are you sure you want "+
                   "to cancel copying files?"
    ProCancelCap = "Setup Message"
    ProText1     = "Copying:"
    ProText2     = "To:"

    PlatformID_I386 = I386
    PlatformID_Mips = Mips
    PlatformID_PPC  = ppc

;----------------------------------------------
; FATAL ERROR DIALOG
;----------------------------------------------
[FatalDlgENG]
STF_MB_TITLE = "Setup Message"
; no translation needed after this
DlgType = "MessageBox"
STF_MB_TEXT  = $(Error)
STF_MB_TYPE  = 1
STF_MB_ICON  = 3
STF_MB_DEF   = 1

;----------------------------------------------
; FATAL ERRORS
;----------------------------------------------

[FatalError1ENG]
Error = "Initialization failed"

[FatalError2ENG]
Error = "No INF file name given (NTN_Infname)"

[FatalError3ENG]
Error = "Invocation of INF file "$(!NTN_Infname)" failed"

;
;  These values are based upon SHELL_CODE_OK, SHELL_CODE_NO_SUCH_INF, etc.
;
[ShellError1ENG]
Error = "INF file "$(!NTN_Infname)" does not exist"

[ShellError2ENG]
Error = "INF file "$(!NTN_Infname)" does not have a section named "$(!NTN_InfSection)

[ShellError3ENG]
Error = "INF file "$(!NTN_Infname)", section "$(!NTN_InfSection)" has syntax errors"


;-----------------------------------------------------------------------
;
; ROUTINE:      DoAskOemsetupSource
;
; DESCRIPTION:  This routine prompts the source of OEMSETUP.INF
;
; INPUTS:       $0:  Current Src
;
; OUTPUTS:      $R0: STATUS:   STATUS_SUCCESSFUL |
;                              STATUS_USERCANCEL |
;                              STATUS_FAILED
;
;               $R1: Diskette Src
;
;               $R2: Drive to Free or "" if none
;
;               $R3: Actual string returned from dialog
;
;------------------------------------------------------------------------

[DoAskUpgradeSrcDlgTextENG]
    DlgText        = "Please enter the full path for the upgrade/update "+
                     "OEMSETUP.INF file. Then choose Continue."

[IncorrectOemsetupDiskENG]
    ErrorText      = "Update aborted. The OEMSETUP.INF does not support upgrade for the specified component."


#####netdtect.inf all
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NCDETECT = "Netcard Auto-detection Driver and DLLs"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Netcard Auto-detection Driver Setup"
;
; Software
;
ProductSoftwareTitle = "Netcard Auto-detection Driver"
ProductVersion = "1.0"
ServiceDisplayName = "NetDetect"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI; sigh.
;

#####oemnadd1.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DEC100     = "DEC EtherWORKS LC Adapter"
    DEC101     = "DEC EtherWORKS Turbo/LC Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitleDEC100   = "DEC EtherWORKS LC Adapter Card Setup"
FunctionTitleDEC101   = "DEC EtherWORKS Turbo/LC Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "DEC Lance Adapter Driver"
;
; Hardware
;
ProductHardwareDEC100Description        = "DEC EtherWORKS LC Adapter"
ProductHardwareDEC101Description        = "DEC EtherWORKS Turbo/LC Adapter"
ProductSoftwareTitle    = "DEC Lance Adapter Driver"
ProductHardwareDEC100Title      = "DEC EtherWORKS LC Adapter"
ProductHardwareDEC101Title      = "DEC EtherWORKS Turbo/LC Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle$(Option))
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Label1 = "&IRQ Level:"
Label2 = "&Memory Base Address:"
Group1 = "I/O Port Base Address"

Radio1 = "&Primary"
Radio2 = "&Secondary"

; no translation need after this
DlgType = "RadioCombination"
DlgTemplate = "DEC_SETUP"
Caption = $(FunctionTitle$(Option))

CBOptionGreyed = {}
RadioOptionGreyed = {}

RadioIn = {$(IOBaseChoice)}

Combo1List = $(IRQ_List)
Combo1Out  = $(IRQLevel)

Combo2List = $(MemBaseAddrHexList)
Combo2Out  = $(MemBaseAddrHex)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADD1_INS)

#####oemnadd2.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DECETHERWORKSTURBO     = "DEC EtherWORKS Turbo Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

;
; Product Info
;
FunctionTitle   = "DEC EtherWORKS Turbo Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "DEC Lance Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "DEC EtherWORKS Turbo Adapter"
ProductSoftwareTitle    = "DEC Lance Adapter Driver"
ProductHardwareTitle    = "DEC EtherWORKS Turbo Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Label1 = "&IRQ Level:"
Label2 = "&Memory Base Address:"
Group1 = "I/O Port Base Address"

Radio1 = "&Primary"
Radio2 = "&Secondary"

; no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "DEC_SETUP"
Caption = $(FunctionTitle)

CBOptionGreyed = {}
RadioOptionGreyed = {}

RadioIn = {$(IOBaseChoice)}

Combo1List = $(IRQ_List)
Combo1Out  = $(IRQLevel)

Combo2List = $(MemBaseAddrHexList)
Combo2Out  = $(MemBaseAddrHex)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADD2_INS)

#####oemnadd4.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DEC422     = "DEC EtherWORKS Turbo EISA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "DEC EtherWORKS Turbo EISA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "DEC Lance Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "DEC EtherWORKS Turbo EISA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ProductSoftwareTitle    = "DEC Lance Adapter Driver"
ProductHardwareTitle    = "DEC EtherWORKS Turbo EISA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for EISA
;

#####oemnadde.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DECSTAT     = "DEC Turbo Channel Ethernet Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "DEC Turbo Channel Setup"
;
; Software
;
ProductSoftwareDescription      = "DEC Lance Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "DEC Turbo Channel Ethernet Adapter"

ProductSoftwareTitle    = "DEC Lance Adapter Driver"
ProductHardwareTitle    = "DEC Turbo Channel Ethernet Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[DecstationDlgENG]
Label1 = "&Slot Number:"

;no translation needed after this

DlgType = "MultiCombo"
DlgTemplate = "SINGLE_COMBO"
Caption = $(FunctionTitle)

Combo1List = $(SlotList)
Combo1Out  = $(SlotNum)

ComboListItemsIn  = {Combo1List}
ComboListItemsOut = {Combo1Out}

HelpContext = $(!IDH_DB_OEMNADDE_INS)

#####oemnaddi.inf all

[OptionsTextENG]
    DATAFIREU     = "Digi DataFire - ISA1U Adapter"
    DATAFIREST    = "Digi DataFire - ISA1S/T Adapter"
    DATAFIRE4ST   = "Digi DataFire - ISA4S/T Adapter"
    PCIMACISA     = "Digi PCIMAC - ISA Adapter"
    PCIMAC4       = "Digi PCIMAC/4 Adapter"

[OptionsTextMCAENG]
    PCIMACMC      = "Digi PCIMAC - MC Adapter"

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

;
; Product Info
;
FunctionTitle   = "Digi ISDN Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Digi ISDN Adapter Driver"
;
; Hardware
;
ProductHardwarePCIMACDescription        = "Digi ISDN Adapter"

[InvokeRasDlgENG]
InvokeRasSetupMsg = "Digi ISDN setup is complete. "+
                    "Remote Access Services (RAS) will now be installed. "+
                    "Please configure one or more ISDN ports in RAS setup "+
                    "to enable you to use RAS over ISDN."
InvokeRasConfigMsg = "Digi ISDN setup is complete. "+
                     "Remote Access Services (RAS) setup will now be invoked. "+
                     "Please configure one or more ISDN ports in RAS setup "+
                     "to enable you to use RAS over ISDN."
InvokeRasError =  "Digi ISDN setup encountered an error while invoking "+
                  "the RAS setup INF file (OEMNSVRA.INF). "+
                  "Please make sure that the file is present in the system32 "+
                  "directory and is the proper file."
InvokeUserInstallRasMsg = "Digi ISDN setup is complete. "+
                    "Remote Access Services (RAS) should be installed and "+
                    "one or more ISDN ports configured in RAS setup. "

#####oemnaddp.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DECPC     = "DEC EtherWORKS DEPCA"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "DEC EtherWORKS DEPCA Setup"
;
; Software
;
ProductSoftwareDescription      = "DEC Lance Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "DEC EtherWORKS DEPCA"
ProductSoftwareTitle    = "DEC Lance Adapter Driver"
ProductHardwareTitle    = "DEC EtherWORKS DEPCA"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

#####oemnadds.inf all

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DigiBoardCX     = "Digi C/X Adapter"
    DigiBoardXem    = "Digi PC/Xem Adapter"
    DigiBoard8r     = "Digi AccelePort 8 Adapter"
    IBM8r           = "IBM 8-Port Async, EIA-232 (ISA) Adapter"
    DigiBoard8i     = "Digi PC/8i Adapter"
    DigiBoard16i    = "Digi PC/16i Adapter"
    DigiBoard2Port  = "Digi PC/2e (8K) Adapter"
    DigiBoard4Port  = "Digi PC/4e (8K) Adapter"
    DigiBoard8Port  = "Digi PC/8e (8K) Adapter"
    DigiBoard4e     = "Digi PC/4e Adapter"
    DigiBoard8e     = "Digi PC/8e Adapter"
    DigiBoard16e    = "Digi PC/16e Adapter"
    DigiBoardEPC    = "Digi EPC Adapter"
    StarGateClusStar = "Digi/StarGate ClusStar Adapter"

[OptionsTextMCAENG]
    DigiBoardCX     = "Digi MC C/X Adapter"
    DigiBoardXem    = "Digi MC/Xem Adapter"
    DigiBoard8r     = "Digi MC AccelePort 8 Adapter"
    DigiBoard4i     = "Digi MC/4i Adapter"
    DigiBoard8i     = "Digi MC/8i Adapter"
    DigiBoard16i    = "Digi MC/16i Adapter"
    DigiBoard2Port  = "Digi MC/2e (8K) Adapter"
    DigiBoard4Port  = "Digi MC/4e (8K) Adapter"
    DigiBoard8Port  = "Digi MC/8e (8K) Adapter"
    DigiBoardEPC    = "Digi MC EPC Adapter"
    StarGateClusStar = "Digi/StarGate MC ClusStar Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
    ProCaption   = $(ManufacturerDisplayName)" "$(AdapterTitle)" Adapter Setup"
    ProCancel    = "Cance&l"
    ProCancelMsg = $(ManufacturerDisplayName)" Adapters and/or Drivers are not correctly installed. "+
                   "Are you sure you want to cancel copying files?"
    ProCancelCap = $(ProCaption)
    ProText1     = "Copying:"
    ProText2     = "To:"
    Error         = "Unable to determine proper source disk location; copy cannot be performed."
;
; Product Info
;
    FunctionTitle = $(ProCaption)
;
; Software
;
    ProductSoftwareDescription          = $(ManufacturerDisplayName)" FEP 5 Adapter Driver"
    ProductSoftwareDescriptionHdwDriver = $(ManufacturerDisplayName)" "$(AdapterTitle)" Miniport Driver"
    ProductSoftwareTitle    = $(ManufacturerDisplayName)" FEP 5 Driver"
    ProductSoftwareTitleHdwDriver = $(ManufacturerDisplayName)" "$(AdapterTitle)" Miniport Driver"

;
; Configuration Information
;
   ConfigurationTitle = $(ProCaption)
   IRQDisableLabel = "Disabled"

;
; Hardware
;
    ProductHardwareDescription      = $(ManufacturerDisplayName)" "$(AdapterTitle)" Adapter"
    ProductHardwareTitle        = $(ManufacturerDisplayName)" "$(AdapterTitle)" Adapter"

[DialogConstantsENG]
;
; Common button names, etc.
;
    Help        = "&Help"
    Exit        = "E&xit"
    OK          = "OK"
    HelpContext = ""
    Continue    = "C&ontinue"
    Cancel      = "C&ancel"

[UpdatingConfigurationENG]
    UpdatingConfiguration      = "Updating new configuration..."

[AbortMessageENG]
  AbortText  =  "Aborting "$(ManufacturerDisplayName)" Setup. Please reboot the system "+
                "to fix the problem."


#####oemnade1.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNK16     = "3Com Etherlink16/EtherLink16 TP Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "3Com Etherlink 16 Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com Etherlink16/Etherlink16 TP Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "3Com Etherlink16/Etherlink16 TP Adapter"
ProductSoftwareTitle    = "3Com Etherlink16/Etherlink16 TP Adapter Driver"
ProductHardwareTitle    = "3Com Etherlink16/Etherlink16 TP Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Caption = $(FunctionTitle)

Combo1Label = "&IRQ Level:"
Combo2Label = "I/O &Port Address:"
Label1 = "Transceiver Type"
Radio1 = "&External"
Radio2 = "O&n Board"
CheckBox1 = "&Zero Wait State"
Combo3Label = "&Memory Address:"
Combo4Label = "Memo&ry Size:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "ELNK_16"

Combo1Out  = $(IRQ_Level)
Combo1List = $(IRQ_List)
Combo2List = $(IOADDR_Hex_List)
Combo2Out  = $(IOADDR_Hex_Value)
Combo3List = $(MemAddrHexList)
Combo3Out  = $(MemAddrHexValue)
Combo4List = $(MemAddrLengthList)
Combo4Out  = $(MemAddrLength)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List, Combo4List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out, Combo4Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO, NO, NO}

HelpContext = $(!IDH_DB_OEMNADE1_INS)

#####oemnade2.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNKII     = "3Com Etherlink II Adapter (also II/16 and II/16 TP)"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "3Com Etherlink II Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com Etherlink II Adapter Driver"
;
; Hardware
;
ProductHardwareELNKIIDescription        = "3Com Etherlink II Adapter"
ProductSoftwareTitle    = "3Com Etherlink II Adapter Driver"
ProductHardwareELNKIITitle = "3Com Etherlink II Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[MemoryMappedChoicesENG]

Map_1 = 1, "ON"
Map_2 = 0, "OFF"


[FileDependentDlgENG]

DlgText = "Please select values for the following fields:"

Combo1Label = "&IRQ Level:"
Combo2Label = "I/O &Port Address:"
CheckBox1   = "&Memory Mapped"
Label1 = "Transceiver Type"

Radio1 = "&External"
Radio2 = "O&n Board"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "ELNK_II"
Caption = $(FunctionTitle)

Combo1List = $(IRQ_List)
Combo1Out  = $(IRQ_Level)
Combo2List = $(IOADDR_Hex_List)
Combo2Out  = $(IOADDR_Hex_Value)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADE2_INS)

#####oemnadin.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    EE16     = "Intel Ether Express 16 LAN Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Intel Ether Express 16 LAN Adapter Setup"
;
; Software
;
ProductSoftwareDescription      = "Intel Ether Express 16 LAN Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Intel Ether Express 16 LAN Adapter"
ProductSoftwareTitle    = "Intel Ether Express 16 LAN Adapter Driver"
ProductHardwareTitle    = "Intel Ether Express 16 LAN Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

IOReadyListShort = { "Late", "Never" }
IOReadyList      = { "Early", "Late", "Never" }
TransceiverList  = {"Thick Net (AUI/DIX)","Thin Net (BNC/COAX)","Twisted-Pair (TPE)"}

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------

[FileDependentDlgENG]
Combo1Label = "&IRQ Level:"
Combo2Label = "I/&O Port Address:"
Combo3Label = "I/O &Channel Ready:"
Combo4Label = "&Transceiver Type:"

EarlyWarning = "Use of the Early setting may cause system failure in some machines. "+
               "Are you sure you wish to continue?"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "EE_16"
Caption = $(FunctionTitle)

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOBaseAddrHexList)
Combo2Out  = $(IOBaseAddress)
Combo3List = $(IOReadyListDisplay)
Combo3Out  = $(IOReadyValue)
Combo4List = $(TransceiverList)
Combo4Out  = $(TransceiverValue)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List, Combo4List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out, Combo4Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADIN_INS)


#####oemnadep.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    IEEPRO = "Intel EtherExpress PRO Ethernet Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle = "Intel EtherExpress PRO Ethernet Adapter Setup"
;
; Software
;
ProductSoftwareDescription = "Intel EtherExpress PRO Ethernet Driver"
;
; Hardware
;
ProductHardwareDescription = "Intel EtherExpress PRO Ethernet Adapter"

;
; Dialog Message Information
;
IRQList = {"3", "5", "9", "10", "11"}
IOReadyList = { "Early", "Late", "Never", "Auto Detect" }
IOReadyListExt = { "Early", "Late", "Never", "Auto Detect" }
TransceiverList = {"Thick Net (AUI/DIX)","Thin Net (BNC/COAX)","Twisted-Pair (TPE)","Auto Connect"}

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------

[FileDependentDlgENG]

DlgType = "RadioCombination"
DlgTemplate = "EE_16"
Caption = $(FunctionTitle)

DlgText = "Please select values for the following fields:"

Combo1Label = "&Interrupt Number:"
Combo2Label = "I/O &Port Address:"
Combo3Label = "I/O &Channel Ready:"
Combo4Label = "&Transceiver Type:"

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOAddrList)
Combo2Out  = $(IOAddrValue)
Combo3List = $(IOReadyList)
Combo3Out  = $(IOReadyValue)
Combo4List = $(TransceiverList)
Combo4Out  = $(TransceiverValue)
ComboListItemsIn  = {Combo1List, Combo2List, Combo3List, Combo4List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out, Combo4Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADEP_INS)

#####oemnadn2.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NE2000              = "Novell NE2000 Compatible Adapter"
    NE2000SOCKETEA      = "Novell NE2000 Socket EA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitleNE2000   = "Novell NE2000 Compatible Network Card Setup"
FunctionTitleNE2000SOCKETEA   = "Novell NE2000 Socket EA Network Card Setup"


;
; Software
;
ProductSoftwareNE2000Description      = "Novell NE2000 Adapter Driver"
ProductSoftwareNE2000SOCKETEADescription      = "Novell NE2000 Socket EA Adapter Driver"
;
; Hardware
;
ProductHardwareNE2000Description        = "Novell NE2000 Adapter"
ProductHardwareNE2000SOCKETEADescription        = "Novell NE2000 Socket EA Adapter"
ProductSoftwareNE2000Title    = "Novell NE2000 Adapter Driver"
ProductSoftwareNE2000SOCKETEATitle    = "Novell NE2000 Socket EA Adapter Driver"
ProductHardwareNE2000Title      = "Novell NE2000 Adapter"
ProductHardwareNE2000SOCKETEATitle      = "Novell NE2000 Socket EA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------

[FileDependentDlgENG]
Label1 = "&IRQ Level:"
Label2 = "I/O &Port Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "NE2000"
Caption =  $(FunctionTitle$(Option))

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOBaseAddrHexList)
Combo2Out  = $(IOBaseAddress)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADN2_INS)

#####oemnadne.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NE3200     = "Novell NE3200 EISA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Novell 3200 EISA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Novell 3200 Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Novell NE3200 EISA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Novell 3200 Adapter Driver"
ProductHardwareTitle    = "Novell NE3200 EISA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for EISA
;

#####oemnads1.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SONICEISA     = "Sonic, EISA"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Sonic EISA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Sonic EISA Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Sonic, EISA"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Sonic EISA Adapter Driver"
ProductHardwareTitle    = "Sonic, EISA"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for EISA
;

#####oemnadnf.inf all
[LanguagesSupported]
    ENG
[OptionsTextENG]
    CPQTOK     = "<this option is no longer supported for install>"
    BONSAI     = "COMPAQ NetFlex-2 DualPort ENET Controller"
    RODAN      = "COMPAQ NetFlex-2 DualPort TR Controller"
    NETFLX     = "COMPAQ NetFlex/NetFlex-2 ENET-TR Controller"
    DURANGO    = "COMPAQ NetFlex-2 TR Controller"
    MAPLE      = "COMPAQ 32-Bit DualSpeed Token-Ring Controller"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cance&l"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "COMPAQ NetFlex Adapter Card Setup"
ProductSoftwareDescription        = "COMPAQ ENET-TR EISA Driver"
ProductHardwareBONSAIDescription  = "COMPAQ NetFlex-2 DualPort ENET Controller"
ProductHardwareRODANDescription   = "COMPAQ NetFlex-2 DualPort TR Controller"
ProductHardwareNETFLXDescription  = "COMPAQ NetFlex/NetFlex-2 ENET-TR Controller"
ProductHardwareDURANGODescription = "COMPAQ Token-Ring Controllers"
ProductHardwareCPQTOKDescription        = "COMPAQ 32-Bit DualSpeed Token-Ring Controller (ns)"
ProductHardwareMAPLEDescription        = "COMPAQ 32-Bit DualSpeed Token-Ring Controller"
CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ProductSoftwareTitle            = "COMPAQ ENET-TR Driver"
ProductHardwareBONSAITitle      = "COMPAQ NetFlex-2 DualPort ENET Controller"
ProductHardwareRODANTitle       = "COMPAQ NetFlex-2 DualPort TR Controller"
ProductHardwareNETFLXTitle      = "COMPAQ NetFlex/NetFlex-2 ENET-TR Controller"
ProductHardwareDURANGOTitle     = "COMPAQ NetFlex-2 TR Controller"
ProductHardwareCPQTOKTitle      = "COMPAQ 32-Bit Token-Ring Controller (ns)"
ProductHardwareMAPLETitle      = "COMPAQ 32-Bit Token-Ring Controller"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
Edit1Label = "&Network Address:"

;no translation needed after this

DlgType = "Edit"
DlgTemplate = "NETWORK_NUMBER"
Caption = $(FunctionTitle)

HelpContext = $(!IDH_DB_OEMNADNF_INS)

EditTextLim = 17
EditTextIn  = $(NetworkAddress)
EditFocus   = "ALL"
RCCtlFocusOn = 403


#####oemnadp3.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    P1390     = "Proteon p139X Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Proteon p139X Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Proteon Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Proteon p139X Adapter"

ProductSoftwareTitle    = "Proteon Adapter Driver"
ProductHardwareTitle    = "Proteon p139X Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Label1 = "&IRQ Level:"
Label2 = "I/O &Port Base Address:"
Label3 = "&DMA Channel:"
Group1 = "Cable &Type"
Group2 = "Card Sp&eed"

Radio1 = "&UTP"
Radio2 = "&STP"
Edit1Label = "&Network Address:"

;no translation needed after this

Radio3 = "&4"
Radio4 = "&16"

DlgType = "RadioCombination"
DlgTemplate = "PROTEON"
Caption = $(FunctionTitle)

CBOptionGreyed = {}
RadioOptionGreyed = {}

Combo1List = $(IRQ_List)
Combo1Out  = $(IRQLevel)

Combo2List = $(IOBaseAddressList)
Combo2Out  = $(IOBaseAddress)

Combo3List = $(DMA_List)
Combo3Out  = $(DMAChannel)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}


EditTextIn = $(NetworkAddress)
EditTextLim = 17
NotifyFields = {NO, NO, NO}
RCCtlFocusOn = 403

HelpContext = $(!IDH_DB_OEMNADP3_INS)

#####oemnadp9.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    P1990     = "Proteon p199X Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Proteon p199X Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Proteon Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Proteon p199X Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductHardwareTitle    = "Proteon p199X Adapter"
ProductSoftwareTitle    = "Proteon Adapter Driver"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Group1 = "Card Speed"
Radio1 = "&4"
Radio2 = "&16"
Edit1Label = "&Network Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "IBM_TOKEN"
Caption = $(FunctionTitle)
ComboListItemsIn = {}
ComboListItemsOut = {}
EditTextLim = 17
EditTextIn = $(NetworkAddress)
Edit1Label = "&Network Address:"

HelpContext = $(!IDH_DB_OEMNADP9_INS)

EditTextLim = 17
EditTextIn  = $(NetworkAddress)
EditFocus   = "ALL"
RCCtlFocusOn = 403

#####oemnadtk.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    IBMTOK     = "IBM Token Ring (ISA/PCMCIA) Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "IBM Token Ring Adapter Card Setup"
FunctionTitle1   = "IBM Token Ring PCMCIA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "IBM Token Ring (ISA/PCMCIA) Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "IBM Token Ring (ISA/PCMCIA) Adapter"

ProductSoftwareTitle    = "IBM Token Ring Adapter (ISA/PCMCIA) Driver"
ProductHardwareTitle    = "IBM Token Ring (ISA/PCMCIA) Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Group1 = "I/O Port Base Address"
Radio1 = "&Primary"
Radio2 = "&Secondary"
Edit1Label = "&Network Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "IBM_TOKEN"
Caption = $(FunctionTitle)
ComboListItemsIn = {}
ComboListItemsOut = {}
EditTextLim = 17
EditTextIn = $(NetworkAddress)

OptionsGreyed = {}

HelpContext = $(!IDH_DB_OEMNADTK_INS)
RCCtlFocusOn = 403

[SecondDlgENG]
Group1 = "Network Speed"
HelpContext = 1
Caption = $(FunctionTitle1)
Combo1Label = "Network &Speed:"
Combo2Label = "Card &IRQ Level:"
Combo3Label = "Memory &Base:"
Combo1List = $(SpeedList)
Combo1Out = $(Token1Speed)
Combo2List = $(IRQList)
Combo2Out = $(Token1IRQVal)
Combo3List = $(MMIOList)
Combo3Out = $(Token1MMIO)
DlgType = Combination
DlgTemplate = "WD"
ComboListItemsIn = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}
CBOptionsGreyed = {}
EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO, NO}
HelpContext = 1

#####oemnadub.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    UBPC     = "Ungermann-Bass Ethernet NIUpc Adapter"
    UBPCEOTP = "Ungermann-Bass Ethernet NIUpc/EOTP Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Ungermann-Bass Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Ungermann-Bass Adapter Driver"
;
; Hardware
;
ProductHardwareUBPCDescription          = "Ungermann-Bass Ethernet NIUpc Adapter"
ProductHardwareUBPCEOTPDescription      = "Ungermann-Bass Ethernet NIUpc/EOTP Adapter"
ProductHardwareUBPSDescription          = "Ungermann-Bass Ethernet NIUps Adapter"

ProductSoftwareTitle    = "Ungermann-Bass Driver"
ProductHardwareUBPCTitle        = "Ungermann-Bass Ethernet NIUpc Adapter"
ProductHardwareUBPCEOTPTitle    = "Ungermann-Bass Ethernet NIUpc/EOTP Adapter"
ProductHardwareUBPSTitle        = "Ungermann-Bass Ethernet NIUps Adapter"

IRQList  = ^(IRQChoices$(Option), 1)
IRQValues = ^(IRQChoices$(Option), 2)
IOBaseAddrList = ^(IOBaseAddrChoices, 1)
IOBaseAddrValues = ^(IOBaseAddrChoices, 2)
MemMappedWndAddrList = ^(MemMappedWndBaseAddrChoices$(Option), 1)
MemMappedWndAddrValues = ^(MemMappedWndBaseAddrChoices$(Option), 2)

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Label1 = "&Interrupt Number:"
Label2 = "I/O &Port Base Addr:"
Label3 = "&Memory Address:"

;no translation needed after this

DlgType = "Combination"
DlgTemplate = "UBNDIS"
Caption = $(FunctionTitle)

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOBaseAddrList)
Combo2Out  = $(IOBaseAddrValue)
Combo3List = $(MemMappedWndAddrList)
Combo3Out  = $(MemMappedWndAddrValue)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}

EditTextLim = ""
CBOptionsGreyed = {}

HelpContext = $(!IDH_DB_OEMNADUB_INS)

#####oemnadwd.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SMCISA = "SMC (WD) EtherCard"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "SMC (WD) ISA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "SMC (WD) Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "SMC (WD) ISA Adapter"

ProductSoftwareTitle    = "SMC (WD) Adapter Driver"
ProductHardwareTitle    = "SMC (WD) ISA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Combo1Label = "&IRQ Level:"
Combo2Label = "&Memory Base Address:"
Combo3Label = "I/&O Port Address:"

;no translation needed after this

DlgType = "MultiCombo"
DlgTemplate = "WD"
Caption = $(FunctionTitle)

Combo1List = $(IRQ_List)
Combo1Out  = $(IRQLevel)

Combo2List = $(WinBaseAddressHexList)
Combo2Out  = $(WinBaseAddress)

Combo3List = $(IOBaseAddressHexList)
Combo3Out  = $(IOBaseAddress)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}

EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO, NO}

HelpContext = $(!IDH_DB_OEMNADWD_INS)

#####oemnsvf1.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG
;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    FTPD     = "FTP Server"
;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "FTP Setup"
;
; Software
;
ProductSoftwareDescription      = "FTP Server"
;
; The user needs to install Microsoft TCP/IP before install FTP.
; If TCPIP does not exist in the registry, the inf file will popup this
; message and exit.
;
ProductSoftwareDisplayName      = "FTP Server"
ProductSoftwareTitle            = "FTP Server"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DefaultsENG]
AnonymousUsername = "guest"

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for FTP
;

#####oemnsvir.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    IPRIP = "RIP for Internet Protocol"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductIPRIPTitle       = "RIP for Internet Protocol"
ProductIPRIPDescription = "Routing Information Protocol. Enables a router to exchange routing information with other routers on an IP LAN."
ProductIPRIPDisplayName = "RIP for Internet Protocol"

[VerExistsENG]
    Ver   = " version "
    Text1 = " is already installed."

[InUseENG]
Error = "RIP for Internet Protocol is currently in use by other network protocols. Please remove all related services first."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"


#####oemnsvrr.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NWLNKRIP = "RIP for NwLink IPX/SPX compatible transport"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductNWLNKRIPTitle       = "RIP for NWLink IPX"
ProductNWLNKRIPDescription = "RIP for NWLink IPX"
ProductNWLNKRIPDisplayName = "RIP for NWLink IPX"

[VerExistsENG]
    Ver   = " version "
    Text1 = " is already installed. "

[InUseENG]
Error = "RIP for NWLink IPX is currently in use by other network protocols. Please remove all related services first."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[EnableNetbiosRoutingDlgENG]
DlgType = "MessageBox"
STF_MB_TITLE = "RIP for NWLink IPX Configuration"
STF_MB_TYPE  = 3
STF_MB_ICON  = 2
STF_MB_DEF   = 2

Enabled  = "NetBIOS Broadcast Propagation (broadcast of type 20 packets) is currently enabled. "$(!LF)+
           "If any Microsoft Windows clients use NwLink IPX to connect to this server, you must "+
           "enable this option to allow NwLink IPX to function correctly."$(!LF)+
           "Enable this option only if you understand the routing implications because it might "+
           "affect your network performance."$(!LF)$(!LF)+
           "Do you want to disable NetBIOS Broadcast Propagation?"

Disabled = "NetBIOS Broadcast Propagation (broadcast of type 20 packets) is currently disabled. "$(!LF)+
           "If any Microsoft Windows clients use NwLink IPX to connect to this server, you must "+
           "enable this option to allow NwLink IPX to function correctly."$(!LF)+
           "Enable this option only if you understand the routing implications because it might "+
           "affect your network performance."$(!LF)$(!LF)+
           "Do you want to enable NetBIOS Broadcast Propagation?"

[ConfigErrorTxtENG]
Error = "Could not open the NWLNKRIP\Parameters registry key."

#####oemnsvnb.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NETBIOS     = "NetBIOS Interface"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "NetBIOS Interface Setup"
;
; Software
;
ProductSoftwareDescription      = "Defines a software interface and naming convention for Microsoft networking."
ProductSoftwareDisplayName = "NetBIOS Interface"
ProductSoftwareTitle    = "NetBIOS Interface"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for NETBIOS
;
[InfoDlgCantConfigure]
InfoMsgTitle = "Information Message"
InfoMsgText = "The NETBIOS service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click OK."

#####oemnsvrp.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    RPCLOCATE   = "RPC Configuration"
    RPCBANYAN   = "RPC support for Banyan"

[LocatorNamesENG]
LocName1 = "Windows NT Locator"
LocName2 = "DCE Cell Directory Service"

[SecurityNamesENG]
SecName1 = "Windows NT Security Service"
SecName2 = "DCE Security Service"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Software
;
ProductSoftwareDescription      = "Remote Procedure Call service enables RPC-written programs to perform procedures on multiple computers. Includes the endpoint mapper and other RPC services."
ProductRPCTitle   = "RPC Configuration"
ProductRPCBanyanTitle   = "RPC support for Banyan"
ProductRPCBaynanSoftDescription      = "RPC support for Banyan"

RpcSrvDisplayNameRpcss   = "Remote Procedure Call (RPC) Service"
RpcSrvDisplayNameLocator = "Remote Procedure Call (RPC) Locator"
RpcSrvDisplayNameSSP     = "NT LM Security Support Provider"
RpcSuiteDisplayName      = "Remote Procedure Call Configuration"

[RPCLOCATEConstantsENG]
;
; Product Info
;
FunctionTitle   = "RPC Configuration"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[RPCBANYANConstantsENG]
;
; Product Info
;
FunctionTitle   = "RPC support for Banyan"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[RpcProviderDlgENG]
Caption = "RPC Configuration"

Edit1Label = "Network &Address:"

Combo1Label = "&Name Service Provider:"
Combo2Label = "&Security Service Provider:"
Help        = "&Help"
Continue    = "OK"
Cancel      = "Cancel"

;no translation needed after this

DlgType = Combination
DlgTemplate = "RPCPROVIDE"
EditTextIn = $(NetworkAddress)

EditFocus = "ALL"
EditTextLim = 50

Combo1List  = $(LocatorListboxNames)
Combo1Out   = $(LocatorChosenName)

Combo2List  = $(SecurityListboxNames)
Combo2Out   = $(SecurityChosenName)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

HelpContext = $(!IDH_DB_RPCLOCATE_INS)
ExitState   = "Active"
NotifyFields = { YES }

[NonFatalError1ENG]
NonFatal = "No network address was entered."

[NonFatalError2ENG]
NonFatal = "Network address ignored for Windows NT Locator."

[NonFatalError3ENG]
NonFatal = "The DCE Security Service is not installed on this computer."

#####oemnsvsv.inf all

;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SRV         = "Server"
;   XACTSRV     = "LAN Manager Translator"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Server"
;
; Software
;
ProductSRVDescription           = "Installs support for the SMB (Server Message Block) protocol, the core of Microsoft networking."
ProductXACTSRVDescription       = "Microsoft LAN Manager Translator Service"
ProductSRVDisplayName   = "Server"
ProductSRVTitle         = "Server"
ProductXACTDisplayName  = "XactSrv"
ProductSRVSRVDisplayName       = "Srv"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
GroupLabel = "Optimization:"

Radio1 = "&Minimize Memory Used"
Radio2 = "&Balance"
Radio3 = "M&aximize Throughput for File Sharing"
Radio4 = "Ma&ximize Throughput for Network Applications"

CheckBox1 = "Ma&ke Browser Broadcasts to LAN Manager 2.x Clients"

;no translation needed after this

DlgType = "RadioCombination"               ; DON'T NATIONALIZE
DlgTemplate = "LMSERVER"       ; DON'T NATIONALIZE
Caption = $(FunctionTitle)

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
ComboListItemsOut = {}

OptionsGreyed = {}

HelpContext = $(!IDH_DB_OEMNSVSV_INS)

#####oemnsvwk.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    WKSTA       = "Workstation"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

;
; Error Message
;
RemoveBrowserError = "The Browser may not be removed. Please remove the Workstation service first."
UpdateBrowserError = "You must update the Windows Workstation in order to update the Browser."

;
; Product Info
;
FunctionTitle   = "Workstation Services Setup"
;
; Software
;
ProductWKSTADescription         = "Installs the client for the SMB (Server Message Block) protocol, the core of Microsoft networking."
ProductNETLOGONDescription      = "Microsoft Network Authentication Service"
ProductALERTERDescription       = "Microsoft Alerter Service"
ProductBROWSERDescription       = "Distributed protocol required for running the Computer Browser service."
ProductMESSENGERDescription     = "Microsoft Messenger Service"
ProductRDRDescription           = "Microsoft Redirector Service"
ProductREPLDescription          = "Microsoft Directory Replicator Service"
ProductMUPDescription           = "Microsoft MUP Service"
ProviderRDRName                 = "NT Lan Manager"

ProductWKSTADisplayName = "Workstation"
ProductWKSTATitle       = "Workstation"
ProductNETLOGONDisplayName = "Net Logon"
ProductNETLOGONTitle    = "Net Logon"
ProductALERTERDisplayName = "Alerter"
ProductALERTERTitle     = "Alerter"
ProductBROWSERDisplayName = "Computer Browser"
ProductBROWSERTitle     = "Computer Browser"
ProductMESSENGERDisplayName = "Messenger"
ProductMESSENGERTitle   = "Messenger"
ProductRDRDisplayName   = "MRXSMB"
ProductRDRTitle         = "Redirector"
PruductRDRBSSDisplayName = "RDBSS"
ProductProviderName = "Microsoft Windows Network"
ProductREPLDisplayName  = "Directory Replicator"
ProductREPLTitle        = "Directory Replicator"
ProductMUPDisplayName   = "Mup"
ProductMUPTitle         = "Mup"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for workstation
;
#####oemnxpdl.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DLC     = "DLC Protocol"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "DLC Setup"
;
; Software
;
ProductSoftwareDescription      = "Data Link Control enables this computer to connect to an IBM mainframe and set up printers attached directly to network control."

ProductSoftwareDisplayName      = "DLC Protocol"
ProductSoftwareTitle    = "DLC Protocol"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for DLC
;

#####oemnxpnb.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NBF     = "NetBEUI Protocol"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "NetBEUI Protocol"
;
; Software
;
ProductSoftwareDescription      = "A nonroutable protocol designed for use in small LANs."
;
ProductSoftwareDisplayName = "NetBEUI Protocol"
ProductSoftwareTitle    = "NetBEUI Protocol"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
GroupLabel = "Optimization:"

Radio1 = "&Minimize Memory Used"
Radio2 = "&Balance"
Radio3 = "M&aximize Throughput && Connections"

;no translation needed after this

DlgType = "Radio"               ; DON'T NATIONALIZE
DlgTemplate = "NBF"             ; DON'T NATIONALIZE
Caption = $(FunctionTitle)

OptionsGreyed = {}

HelpContext = $(!IDH_DB_OEMNXPNB_INS)


#####oemnxpst.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    STREAMS = "Streams Environment"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductSTREAMSDescription       = "Enables transport drivers developed in STREAMS environments (popular on UNIX platforms) to port easily to Windows NT."
ProductSTREAMSDisplayName       = "Streams Environment"
ProductSTREAMSTitle     = "Streams Environment"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

StreamsAlreadyInstalled  = "Streams Environment is already installed in the system."
RefCountNotZeroMsg = "The Streams Environment is currently in use by other network protocols. Please removed all streams-based protocols first."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for STREAMS
;

;**************************************************************************
;
; BILLBOARD DIALOG SECTIONS
;
;**************************************************************************
[Billboard1ENG]
Status = "Installing STREAMS and related services..."

#####oemnxpnn.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    TCPIP     = "Old TCP/IP Protocol"
;   TELNET    = "Telnet"
;   NBT       = "RFC NetBIOS"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "TCP/IP Setup"
;
; Software
;
ProductTCPIPDescription         = "TCP/IP System Driver"
ProductNBTDescription           = "NBT System Driver"

ProductTCPIPDisplayName = "TCP/IP Protocol"
ProductTCPIPTitle       = "TCP/IP Protocol"

ProductTCPIPSYSDisplayName = "Tcpipsys"
ProductTCPIPSYSTitle    = "TCP/IP Network Transport Driver"

ProductNBTDisplayName   = "TCP/IP NetBIOS"
ProductNBTTitle         = "TCP/IP NetBIOS"

ProductNBTSYSDisplayName = "Nbtsys"
ProductNBTSYSTitle      = "RFC NetBIOS Driver"

ProductTELNETDisplayName = "Telnet"
ProductTELNETTitle      = "Telnet Networking Support Environment"

ProductTELNETSYSDisplayName = "Telnetsys"
ProductTELNETSYSTitle     = "Telnet Driver"

ProductLOOPDisplayName  = "Loop"
ProductLOOPTitle        = "Loop Support Environment"

ProductLMHOSTSDisplayName = "TCP/IP NetBIOS Helper"
ProductLMHOSTSTitle     = "TCP/IP NetBIOS Helper"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for TCPIP
;
;----------------------------------------------
; INFO DIALOG
;----------------------------------------------
[InfoDlg]
STF_MB_TITLE = "Information Message"

;no translation needed after this

DlgType = "MessageBox"
STF_MB_TEXT  = $(InfoMsgText)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

[InfoDlgCantConfigure]
InfoMsgText = "The TCP/IP service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click  OK.  You will then have the opportunity to configure the adapters."

;----------------------------------------------
; WARNING DIALOG
;----------------------------------------------
[WarningDlgENG]
STF_MB_TITLE = "TCP/IP Setup Warning"

;no translation needed after this

DlgType = "MessageBox"
STF_MB_TEXT  = $(Error)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

;**************************************************************************
;
; BILLBOARD DIALOG SECTIONS
;
;**************************************************************************
[Billboard1ENG]
Status = "Installing TCP/IP and related services..."

[LMHOSTDlgENG]

Caption = "Import LMHOSTS File"
Import = "&Import"

DlgText = "If you want to import an existing LMHOSTS file, enter the directory path where the file is located and choose Import. Otherwise, choose Continue."

;no translation needed after this

DlgType = "Edit"
DlgTemplate = "LMHOST"
EditTextIn = ""

HelpContext = $(!IDH_DB_LMHOST_INS)

[LMHOSTAskSourceStringsENG]
String1 = "Error processing path entered.  Please reenter the path."

String2 = "Setup requires a full path of the Windows NT distribution files.  "+
          "Please reenter the path."

String3 = "Setup failed to find a free drive to use to connect to the "+
          "server specified.  Please free up some drives and try again."

String4 = "Setup failed to connect to the server specified.  Please reenter "+
          "the path."

String5 = "You just typed in a new LMHOSTS file path. Are you sure that you want to use the default LMHOSTS file?"

#####utility.inf all
[AFDVars]
;
; AFD Software data
;
ProductAFDTitle         = "AFD Networking Support Environment"
;
; don't localize the next 3 lines
;
ProductAFDName          = "Afd"
ProductAFDImagePath     = "\SystemRoot\System32\drivers\afd.sys"
ProductAFDSvcType       = "kernelautostart"

;---------------------------------------------
;
;  Section used to build RegistryErrorList$(STF_LANGUAGE)
;
[RegistryErrorsENG]
UNABLE_ACCESS_SOFTWARE_REG,"Unable to access SOFTWARE subtree in Registry"
UNABLE_CREATE_MANUFACTURER_KEY,"Unable to create Manufacturer key in Registry"
UNABLE_OPEN_MICROSOFT_KEY,"Unable to open Microsoft subkey in Registry"
UNABLE_CREATE_PRODUCT_KEY,"Unable to create subkey in Registry for Windows NT"
UNABLE_CREATE_PRODUCT_VERSION,"Unable to create version subkey in Registry for Windows NT"
UNABLE_CREATE_NETRULES_KEY,"Unable to create a NetRules subkey in Registry"
UNABLE_OPEN_HARDWARE_SECTION,"Unable to open HARDWARE subkey in Registry"
UNABLE_OPEN_NETWORKCARD_SECTION,"Unable to open NetworkCards subkey in Registry"
UNABLE_OPEN_EVENTLOG_SUBKEY,"Unable to open Eventlog subkey in Registry"
UNABLE_CREATE_NETCARD_CONFIGURATION,"Unable to create entry for network adapter in Registry"
UNABLE_ACCESS_CONFIGURE_SERVICE,"Unable to access Services subkey in Registry"
UNABLE_CREATE_CONFIGURE_SERVICE,"Unable to create Services subkey in Registry"
UNABLE_CREATE_SERVICE_SUBKEY,"Unable to create Services subkey in Registry"
INVALID_DATA_PASSED,"Invalid data passed to Registry utility routine"
SERVICE_ALREADY_EXISTS,"Registry Service subkey already exists"
OPERATION_UNIMPLEMENTED,"Registry operation UNIMPLEMENTED"
CANNOT_FIND_COMPONENT_SERVICE,"Component service name not found or non-existent"
CANNOT_CONFIGURE_HARDWARE,"Cannot configure the hardware component"
CANNOT_CONFIGURE_SOFTWARE,"Cannot configure the software component"
UNABLE_WRITE_REGISTRY, "Cannot write to registry"
UNABLE_INSTALL, "Installation Error"
PROVIDER_ALREADY_EXISTED, "Provider already exists in Registry"
PROVIDER_ORDER_DOES_NOT_EXIST, "Provider order does not exist in Registry."
TCPIP_NONEXIST_ERROR, "Please install Microsoft TCP/IP before installing SNMP."
TCPIP_NONEXIST_ERROR_FTPD, "Please install Microsoft TCP/IP before installing FTP Server."
NO_BINDING_INFO, "Missing Binding Information. Please click BINDINGS button first."
CANNOT_OPEN_EVENTLOG_KEY, "Cannot open Eventlog subkey in Registry."
CANNOT_CREATE_SNMPPROXYKEY, "Cannot create SNMP Proxy subkey in Registry."
REF_COUNT_NOT_ZERO, "Please remove all related network adapter cards before removing the software driver."
UNABLE_REMOVE_CONFIGURE_SERVICE,"Unable to remove Services subkey for a software driver in Registry"
UNABLE_ACCESS_WINSOCK_MAP_INFO,"Unable to access WinSock mapping information in DLL"
VERIFY_WARNING,"The current netcard parameters are not verifiably correct and may result in usage problems or system failure.  Use them anyway?"
CANNOT_DETECT,"Setup is unable to obtain network adapter information from the associated network adapter DLL files.  Operation cannot continue."
UNABLE_COPY_FILE,"File copy operation failed."
ASK_SOURCE_FAIL,"Failed to obtain source file location."
SETUP_FAIL,"Setup operation failed."
SERVICE_MARKED_FOR_DELETE,"This network component has recently been removed. Please restart your computer before installing it again."
REBOOT_MACHINE_BEFORE_ADD_ADAPTER,"This network component has recently been removed. Please restart your computer before installing it again."
CANT_REMOVE_WKSTA_NTAS,"The Workstation cannot be removed on a Windows NT Domain Controller."
CANT_REMOVE_SERVER_NTAS,"The Server cannot be removed on a Windows NT Domain Controller."
NO_ERROR, ""
DLC_NONEXIST_ERROR, "Please install Microsoft DLC before installing Remoteboot."
NBF_NONEXIST_ERROR, "Please install the NetBEUI protocol before installing Remoteboot."
UNABLE_ADD_NAMESPACE_PROVIDER, "Unable to add software component as a Name Space Provider"
UNABLE_REMOVE_NAMESPACE_PROVIDER, "Unable to remove Name Space Provider"

[RegistryErrorUnknownENG]
Error_Bogus = "UNKNOWN REGISTRY FAILURE"

;
;---------------------------------------------
;
; Section used for version already exists dialog
;

[VerExistedENG]
ver = " ver "
Text = " already exists on the system. Please use [Update] to update the software."

[CardExistedENG]
Text = "A network card of this type is already installed in the system. Do you want to continue?"

;---------------------------------------------

;*************************************************************************
;  end of section  RemoveNetworkProvider
;*************************************************************************

[ProgressCopyENG]
    ProCaption   = "Windows NT Networking Setup"
    ProCancel    = "Cancel"
    ProCancelMsg = "Windows NT is not correctly installed.  Are you sure you want "+
                   "to cancel copying files?"
    ProCancelCap = "Setup Message"
    ProText1     = "Copying:"
    ProText2     = "To:"
    Error        = "Unable to determine proper source disk location; copy cannot be performed."

#####oemnxpi1.inf all
;------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
;       This lists the languages supported by this file.
;       If you add other languages to this list, you must
;       also add the appropriate text sections for the new
;       language
;------------------------------------------------------------------
[LanguagesSupported]
    ENG

;-------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
;
;       These are the text strings used to identify the options to
;       the user.  There should be a header and entry for every
;       language listed in the "LanguagesSupported" section.
;-------------------------------------------------------------------
[OptionsTextENG]
    NWLINK     = "Old NWLink IPX/SPX Compatible Transport"

;--------------------------------------------------------------------
;       Language Dependent Dialog Constants
;--------------------------------------------------------------------
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle            = "NWLink Setup"
ProductNWLINKDescription  = "NWLink Transport Driver"
ProductNWNBLINKDescription   = "NWLink NetBIOS Driver"
ProductNWLINKDisplayName = "NWLink"
ProductNWLINKTitle       = "NWLink Transport"
ProductNWLINKSYSDisplayName = "NWLinksys"
ProductNWLINKSYSTitle    = "NWLINK Transport Driver"
ProductNWNBLINKDisplayName  = "NWNBLink"
ProductNWNBLINKTitle        = "NWLink NetBIOS"
ProductNWNBLINKSYSDisplayName = "NWNBLinksys"
ProductNWNBLINKSYSTitle     = "NWLINK NetBIOS Driver"

CompetitorDisplayName = "Novell IPX/SPX II Transport"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[FileDependentDlgENG]
;
;--- No UI for NWLINK
;

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlg]
STF_MB_TITLE = "Information Message"

;
; don't need to localize the dialog type
;
DlgType      = "MessageBox"
STF_MB_TEXT  = $(InfoMsgText)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlgCantConfigure]
InfoMsgText = "The NWLINK service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click  OK.  You will then have the opportunity to configure the adapters."

;--------------------------------------------------------------------
;       Get the string to use while doing the install
;--------------------------------------------------------------------
[Billboard1ENG]
Status = "Installing NWLINK and related services..."

[FatalError1ENG]
Error = "Another IPX/SPX protocol driver is currently installed in this machine, "+
        "and the network interface cannot operate properly with both drivers installed. "+
        "If you still wish to install the NWLINK protocol driver, you must first "+
        "remove the "$(CompetitorDisplayName)" component and reboot your machine."

#####oemnadn1.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NE1000     = "Novell NE1000 Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Novell NE1000 Network Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Novell NE1000 Adapter Driver"
;
; Hardware
;
ProductHardwareNE1000Description        = "Novell NE1000 Adapter"
ProductSoftwareTitle    = "Novell NE1000 Adapter Driver"
ProductHardwareNE1000Title      = "Novell NE1000 Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------

[FileDependentDlgENG]
Label1 = "&IRQ Level:"
Label2 = "I/O &Port Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "NE2000"
Caption = $(FunctionTitle)

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOBaseAddrHexList)
Combo2Out  = $(IOBaseAddress)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADN2_INS)

#####oemnadlb.inf all
[LanguagesSupported]
    ENG

[OptionsTextENG]
    LOOP     = "MS Loopback Adapter"

[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "MS Loopback Adapter Card Setup"
ProductSoftwareDescription = "MS Loopback Adapter Driver"
ProductHardwareDescription = "MS Loopback Adapter"
ProductSoftwareTitle    = "MS Loopback Adapter Driver"
ProductHardwareTitle    = "MS Loopback Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[FileDependentDlgENG]
DlgType = "MultiCombo"
DlgTemplate = "SINGLE_COMBO"
Label1 = "&Frame Type:"
Caption = $(FunctionTitle)
Combo1List = $(MediaList)
Combo1Out  = $(MediaChoice)
ComboListItemsIn  = {Combo1List}
ComboListItemsOut = {Combo1Out}
HelpContext = $(!IDH_DB_OEMNADLB_INS)


#####oemnade3.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNK3ISA509     = "3Com Etherlink III ISA/PCMCIA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "3Com Etherlink III Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com Etherlink III Adapter Driver"
;
; Hardware
;
ProductHardwareELNK3ISA509Description        = "3Com Etherlink III Adapter"
ProductSoftwareTitle    = "3Com Etherlink III Adapter Driver"
ProductHardwareELNK3ISA509Title = "3Com Etherlink III Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

TransceiverList  = {"10 Base T", "Thick Net (AUI/DIX)","","Thin Net (BNC/COAX)"}
TransceiverDisplayList  = {"10 Base T", "Thick Net (AUI/DIX)","Thin Net (BNC/COAX)"}

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Label1 = "I/O &Port Address:"
Label2 = "&Interrupt Number:"
Label3 = "&Transceiver Type:"

;no translation needed after this

DlgType = "Combination"
DlgTemplate = "UBNDIS"
Caption = $(FunctionTitle)

Combo1List = $(IOADDR_Hex_List)
Combo1Out  = $(IOADDR_Hex_Value)
Combo2List = $(IRQList)
Combo2Out  = $(IRQValue)
Combo3List = $(TransceiverDisplayList)
Combo3Out  = $(TransceiverValue)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO, NO}

HelpContext = $(!IDH_DB_OEMNADE3_INS)

#####oemnadee.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNK3EISA     = "3Com Etherlink III EISA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;                             a
; Product Info
;
FunctionTitle   = "3Com Etherlink III EISA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com Etherlink III Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "3Com Etherlink III EISA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "3Com Etherlink III Adapter Driver"
ProductHardwareTitle    = "3Com Etherlink III EISA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for EISA
;

#####oemnaden.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNK3MCA     = "3Com Etherlink III MCA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "3Com Etherlink III MCA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com Etherlink III MCA Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "3Com Etherlink III MCA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "3Com Etherlink III MCA Adapter Driver"
ProductHardwareTitle    = "3Com Etherlink III MCA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;

#####oemnadnm.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NE2000MCA     = "NE/2 and compatible MC Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "NE/2 and compatible MC Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "NE/2 and compatible MC Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "NE/2 and compatible MC Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "NE/2 and compatible MC Adapter Driver"
ProductHardwareTitle    = "NE/2 and compatible MC Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Label1 = "&IRQ Level:"
Label2 = "I/O &Port Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "NE2000"
Caption = $(FunctionTitle)

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOBaseAddrHexList)
Combo2Out  = $(IOBaseAddress)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADN2_INS)


#####oemnadfd.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NPMCA     = "Network Peripherals FDDI, MCA"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Network Peripherals FDDI, MCA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Network Peripherals FDDI, MCA Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Network Peripherals FDDI, MCA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Network Peripherals FDDI, MCA Adapter Driver"
ProductHardwareTitle    = "Network Peripherals FDDI, MCA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;

#####oemnsvsn.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SNMP     = "SNMP Service"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "SNMP Setup"
;
; Software
;
ProductSoftwareDescription      = "Simple Network Management Protocol service that enables a Windows NT computer to be administered remotely with an SNMP management tool."
;
; The user needs to install Microsoft TCP/IP before install SNMP.
; If TCPIP does not exist in the registry, the inf file will popup this
; message and exit.
;
ProductSoftwareDisplayName      = "SNMP Service"
ProductSoftwareTitle    = "SNMP Service"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for SNMP
;

#####oemnsvcu.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    TCPIPCU = "TCP/IP Utilities"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProductTCPIPCUTitle = "TCP/IP Utilities"
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

GroupName    = "Accessories"
IconName     = "Telnet"

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
;


#####oemnsvsa.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SAP = "SAP Agent"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductSAPTitle       = "SAP Agent"
ProductSAPDescription = "Service Advertising Protocol advertises servers and addresses on a network."
ProductSAPDisplayName = "SAP Agent"

[InUsed]
Error = "SAP Agent is currently in use by other network protocols. Please remove all related services first."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
;


#####oemnsvwi.inf
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG
;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    WINS     = "Windows Internet Name Service"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Windows Internet Name Service Setup"
;
; Software
;
ProductSoftwareDescription      = "Dynamic name registration and resolution service that maps NetBIOS computer names to IP addresses."
ProductSoftwareDisplayName      = "Windows Internet Name Service"
ProductSoftwareTitle            = "Windows Internet Name Service"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

OldGroupName    = "Network Administration"
GroupName    = "Administrative Tools"
IconName     = "WINS Manager"

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for WINS
;

#####oemnsvdh.inf
[LanguagesSupported]
    ENG
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

[FileConstantsENG]
ProductDHCPDisplayName  = "Microsoft DHCP Server"
ProductDHCPTitle        = "Microsoft DHCP Server"
ProductDHCPDescription  = "Automatically assigns IP addresses to other computers running the DHCP (Dynamic Hose Configuration Protocol) Client Service."
OldGroupName    = "Network Administration"
GroupName    = "Administrative Tools"
IconName     = "DHCP Manager"

[OptionsTextENG]
        DHCP = "Microsoft DHCP Server"

[DHCPServerDialog]
DHCPTxt = "If any adapters are using DHCP to obtain an IP address, they are now "+
           "required to use a static IP address.  Press Close on the Network Control Panel "+
           "and the TCP/IP Property Sheet will be displayed allowing you to enter an address."
STF_MB_TITLE = $(DHCP)
DlgType = "MessageBox"
STF_MB_TEXT  = $(DHCPTxt)
STF_MB_TYPE  = 1
STF_MB_ICON  = 2
STF_MB_DEF   = 1

#####oemnsvdn.inf
[LanguagesSupported]
    ENG
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

[FileConstantsENG]
ProductDNSDisplayName  = "Microsoft DNS Server"
ProductDNSTitle        = "Microsoft DNS Server"
ProductDNSDescription  = "The Domain Name System maps DNS domain names to IP addresses."

OldGroupName = "Network Administration"
GroupName = "Administrative Tools"
IconName  = "DNS Manager"


[OptionsTextENG]
        DNS = "Microsoft DNS Server"

#####oemnsvsp.inf
[LanguagesSupported]
    ENG
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductSTCPIPDisplayName        = "Simple TCP/IP Services"
ProductSTCPIPTitle              = "Simple TCP/IP Services"
ProductSTCPIPDescription        = "Client programs for simple network protocols, including Character Generator, Daytime, Echo and Quote of the Day."

[OptionsTextENG]
    STCPIP = "Simple TCP/IP Services"

#####oemnsvtp.inf
[LanguagesSupported]
    ENG
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductLPDDisplayName = "TCP/IP Print Server"
ProductLPDTitle = "Microsoft TCP/IP Printing"
ProductLPDDescription = "Enables Windows NT to print to TCP/IP-connected printers or to printers that are physically attached to UNIX computers."

[OptionsTextENG]
        TCPPRINT = "Microsoft TCP/IP Printing"

#####oemnxptc.inf
[LanguagesSupported]
    ENG
[OptionsTextENG]
    TC     = "TCP/IP Protocol"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
NoNewComponents = "No New Components to Install."
FunctionTitle   = "TCP/IP Setup"
ProductNETBTDescription           = "NetBT System Driver"
ProductNETBTDisplayName   = "WINS Client(TCP/IP)"
ProductNETBTTitle         = "WINS Client(TCP/IP)"
ProductTELNETDisplayName = "Telnet"
ProductTELNETTitle      = "Telnet Networking Support Environment"
ProductTELNETSYSDisplayName = "Telnetsys"
ProductTELNETSYSTitle     = "Telnet Driver"
ProductLMHOSTSDisplayName = "TCP/IP NetBIOS Helper"
ProductLMHOSTSTitle     = "TCP/IP NetBIOS Helper"
ProductDHCPDisplayName = "DHCP Client"
ProductDHCPTitle     = "DHCP Client"
ProductTCDisplayName = "TCP/IP Service"
ProductTCTitle     = "TCP/IP Protocol"
ProductTCDescription         = "Transport Control Protocol/Internet Protocol. The default wide area network protocol that provides communication across diverse interconnected networks."
ProviderDisplayName     = "TCP/IP"
LDAPProviderDisplayName = "NTDS"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
RASRebindError = "Setup has discovered that you have Remote Access Services installed. Do you want to configure RAS to support the TCP/IP protocol?"

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
[InfoDlg]
STF_MB_TITLE = "Information Message"
DlgType = "MessageBox"
STF_MB_TEXT  = $(InfoMsgText)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

[DHCPDialog]
DHCPText = "If there is a DHCP server on your network, TCP/IP can be configured to dynamically provide"+
                 " an IP address.  If you are not sure, ask your system administrator.  Do you wish to use DHCP?"
STF_MB_TITLE = "TCP/IP Setup"
DlgType = "MessageBox"
STF_MB_TEXT  = $(DHCPText)
STF_MB_TYPE  = 3
STF_MB_ICON  = 5
STF_MB_DEF   = 2

[InfoDlgCantConfigure]
InfoMsgText = "The TCP/IP service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click  OK or CLOSE.  You will then have the opportunity to configure the adapters."
[WarningDlgENG]
STF_MB_TITLE = "TCP/IP Setup Warning"
DlgType = "MessageBox"
STF_MB_TEXT  = $(Error)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1
[Billboard1ENG]
Status = "Installing TCP/IP and related services..."

#####oemnxpip.inf all
;------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
;       This lists the languages supported by this file.
;       If you add other languages to this list, you must
;       also add the appropriate text sections for the new
;       language
;------------------------------------------------------------------
[LanguagesSupported]
    ENG

;-------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
;
;       These are the text strings used to identify the options to
;       the user.  There should be a header and entry for every
;       language listed in the "LanguagesSupported" section.
;-------------------------------------------------------------------
[OptionsTextENG]
    NWLNKIPX     = "NWLink IPX/SPX Compatible Transport"

;--------------------------------------------------------------------
;       Language Dependent Dialog Constants
;--------------------------------------------------------------------
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle            = "NWLink IPX/SPX Compatible Transport Setup"
ProductNWLNKIPXDescription  = "An implementation of the IPX and SPX protocols, which are used by the NetWare networks."
ProductNWLNKIPXDisplayName = "NWLink IPX/SPX Compatible Transport Protocol"
ProductNWLNKIPXTitle       = "NWLink IPX/SPX Compatible Transport"

ProductNWLNKNBDescription   = "Enables Novell NetBIOS packets to be sent between a NetWare server running Novell NetBIOS and a Windows NT computer, or between two Windows NT computers."
ProductNWLNKNBDisplayName  = "NWLink NetBIOS"
ProductNWLNKNBTitle        = "NWLink NetBIOS"
ProductNWLNKNBSYSDisplayName = "NWLinkNBsys"
ProductNWLNKNBSYSTitle     = "NWLINK NetBIOS Driver"

ProductNWLNKSPXDescription  = "NWLink SPX Protocol Driver"
ProductNWLNKSPXDisplayName = "NWLink SPX/SPXII Protocol"
ProductNWLNKSPXTitle       = "NWLink SPX Protocol"

CompetitorDisplayName = "NWLink IPX/SPX II Transport"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

RASRebindError = "Setup has discovered that you have Remote Access Services installed. Do you want to configure RAS to support the NWLINK protocol?"
InstallRip     = "Do you want to install the IPX Rip Router?"

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[FileDependentDlgENG]
;
;--- No UI for NWLNK
;

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlg]
STF_MB_TITLE = "Information Message"

;
; don't need to localize the dialog type
;
DlgType      = "MessageBox"
STF_MB_TEXT  = $(InfoMsgText)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlgCantConfigure]
InfoMsgText = "The IPX Protocol service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click  OK.  You will then have the opportunity to configure the adapters."

[InUseENG]
InfoMsgText = "The IPX Protocol service is being used by another service(s). "+
    "Please remove other related components before removing IPX Protocol."

;--------------------------------------------------------------------
;       Get the string to use while doing the install
;--------------------------------------------------------------------
[Billboard1ENG]
Status = "Installing IPX Protocol and related services..."

[FatalError1ENG]
Error = "Another IPX/SPX protocol driver is currently installed in this machine, "+
        "and the network interface cannot operate properly with both drivers installed. "+
        "If you still wish to install the NWLNK protocol driver, you must first "+
        "remove the "$(CompetitorDisplayName)" component and reboot your machine."

#####oemnsvnw.inf
[LanguagesSupported]
    ENG
;
; Language depended section
;
[WorkstationENG]
    NWType = "Client Service for NetWare"
    NWDescription = "Enables this computer to log on to NetWare servers and access their resources."
[GatewayENG]
    NWType = "Gateway Service for NetWare"
    NWDescription = "Enables other Windows NT computers to access NetWare servers without running NetWare Client software."
[OptionsWINNTTextENG]
    NWWKSTA       = "Client Service for NetWare"
[OptionsLANMANNTTextENG]
    NWWKSTA       = "Gateway (and Client) Services for NetWare"

[FileConstantsENG]
NotEnoughSpace = "Out of disk space. Please remove some files before install "$(NWType)"."
UpgradeBetaOnTopOfDaytona = "You cannot update the beta version of "$(NWType)" over Windows NT 3.51's "$(NWType)"."
InstallNWLINKFirst = "Please install the NWLINK IPX/SPX Compatible Transport before you install the "$(NWType)"."
InstallNTWKSTAFirst = "Please install the Windows NT Workstation service before you install the "$(NWType)"."
RemoveAndReboot    = "Please remove any existing "$(NWType)" component and reboot your machine before installing the latest version of "$(NWType)"."
UpgradeFirst = "Please install the Windows NT patch before installing the "$(NWType)"."
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = $(NWType)" Setup"
ProductNWWKSTADescription         = $(NWDescription)
ProductNWRDRDescription           = "NetWare Redirector Compatible Service"
ProviderRDRName                 = "NetWare Compatible Redirector"
ProductNWWKSTATitle       = $(NWType)
ProductNWWKSTADisplayName = $(NWType)
ProductNWRDRDisplayName   = "NetWare Rdr"
ProductNWRDRTitle         = "NetWare Redirector"
ProductProviderName = "NetWare Network"
ProductProviderDisplayName = "NetWare or Compatible Network"
ProductPrintProviderName = "NetWare or Compatible Network"
OldPrintProviderName = "Netware(R) Network"
OldPrintProviderName2 = "NetWare Network"
REM1 = "REM Install network redirector"

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
ShellCodeErrorText = "Shell Code Error"

[FileDependentDlgENG]
; nothing



#####oemnsvbh.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NETMON      = "Network Monitor Agent"
    NETMONTOOLS = "Network Monitor Tools and Agent"


;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
;
; Software
;
ProductNMAgentDisplayName  = "Network Monitor Agent"

;
; Software Tools
;
NETMONTOOLSSoftwareTitle  = "Network Monitor Tools and Agent"
NETMONSoftwareTitle       = "Network Monitor Agent"


[NETMONConstantsENG]
;
; Product Info
;
ProductSoftwareTitle       = $(NETMONSoftwareTitle)
ProductSoftwareDescription = "Informs monitoring programs, such as Performance Monitor and Network Monitor, of network transactions for this computer."
ProductSoftwareDisplayName = $(ProductSoftwareTitle)" Driver"

FunctionTitle   =  $(ProductSoftwareTitle)

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[NETMONTOOLSConstantsENG]
;
; Product Info
;
ProductSoftwareTitle       = $(NETMONTOOLSSoftwareTitle)
ProductSoftwareDescription = "A software package for monitoring and troubleshooting network transactions"
ProductSoftwareDisplayName = $(ProductSoftwareTitle)" Drivers"

FunctionTitle   = $(ProductSoftwareTitle)

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[IconInfoENG]
    OldNetAdminGroupName = "Network Administration"
    NetAdminGroupName = "Administrative Tools"
    NetMonitor = "Network Monitor"



#####oemnsvri.inf
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    REMOTEBOOT     = "Remoteboot Service"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Remoteboot Setup"
;
; Software
;
ProductSoftwareDescription      = "Starts MS-DOS and Microsoft Windows workstations over the network."
ProductSoftwareDisplayName      = "Remoteboot Service"
ProductSoftwareTitle    = "Remoteboot Service"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
;
; Program group information
;
OldRplGroup    = "Network Administration"
RplGroup    = "Administrative Tools"
RplMgr    = "Remoteboot Manager"


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Edit1Label = "&Remoteboot directory:"
CheckBox1 = "&Migrate Remoteboot directory from LAN Manager 2.2"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "QUERY_RPL_PATH"
Caption = $(FunctionTitle)
CBOptionsGreyed = {}
ComboListItemsIn = {}
ComboListItemsOut = {}

HelpContext = $(!IDH_DB_OEMNSVRI_INS)

EditTextLim = 256
EditTextIn  = $(RPLDIR)
EditFocus   = "ALL"
RCCtlFocusOn = 403

[NonFatalError1ENG]
Error = "The Remoteboot directory must be an absolute path."

[DoAskSourceDlgTextENG]
    DlgText = "Setup needs to copy Remoteboot Client files. These files are located "+
              "in the \CLIENTS\RPL directory of the Windows NT Server CD."$(!LF)$(!LF)+
              "If you want Setup to look in a different place, type the new location below. "+
              "When the location is correct, click Continue."

#####oemnadt2.inf all
[LanguagesSupported]
    ENG
[OptionsTextENG]
    IBMTOK2ISA     = "IBM Token-Ring Network 16/4 ISA Adapter II"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "IBM Token-Ring 16/4 Adapter II Card Setup"
ProductSoftwareDescription      = "IBM Token-Ring 16/4 ISA Adapter II Driver"
ProductHardwareIBMTOK2ISADescription        = "IBM Token-Ring 16/4 ISA Adapter II"
ProductSoftwareTitle    = "IBM Token-Ring 16/4 ISA Adapter II Driver"
ProductHardwareIBMTOK2ISATitle = "IBM Token-Ring 16/4 ISA Adapter II"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
Combo1Label = "I/O &Port Address:"
DlgType = "RadioCombination"
DlgTemplate = "IBMTOK2"
Caption = $(FunctionTitle)
Combo1List = $(IOADDR_Hex_List)
Combo1Out  = $(IOADDR_Hex_Value)
ComboListItemsIn  = {Combo1List}
ComboListItemsOut = {Combo1Out}
EditTextLim = 17
EditTextIn = $(NetworkAddress)
Edit1Label = "&NetworkAddress"
HelpContext = $(!IDH_DB_OEMNADT2_INS)

#####oemnadte.inf all
[LanguagesSupported]
    ENG
[OptionsTextENG]
    IBMTOK2E     = "IBM Token Ring EISA Adapter"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "IBM Token Ring EISA Adapter Card Setup"
ProductSoftwareDescription      = "IBM Token Ring EISA Adapter Driver"
ProductHardwareDescription      = "IBM Token Ring EISA Adapter"
CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ProductHardwareTitle    = "IBM Token Ring EISA Adapter"
ProductSoftwareTitle    = "IBM Token Ring EISA Adapter Driver"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
Edit1Label = "&Network Address:"
DlgType = "Edit"
DlgTemplate = "NETWORK_NUMBER"
Caption = $(FunctionTitle)
HelpContext = $(!IDH_DB_OEMNADTE_INS)
EditTextLim = 17
EditTextIn  = $(NetworkAddress)
EditFocus   = "ALL"
RCCtlFocusOn = 403



#####oemnsvrc.inf
[LanguagesSupported]
    ENG
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

#####oemnadpm.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    P189X     = "ProNET-4/16 p189X NIC"

[PacketChoices]
Packet1="4Kb",4210
Packet2="18Kb",17986

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

FunctionTitle   = "Proteon p189X Adapter Card Setup"
ProductSoftwareDescription      = "Proteon RapiDriver"
ProductHardwareDescription      = "Proteon p189X ProNET-4/16 NIC"
CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ProductHardwareTitle    = "Proteon p189X ProNET-4/16 NIC"
ProductSoftwareTitle    = "Proteon RapiDriver"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Group1 = "CardSpeed"
Radio1 = "&4"
Radio2 = "&16"
Edit1Label = "&Network Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "IBM_TOKEN"
Caption = $(FunctionTitle)
ComboListItemsIn = {}
ComboListItemsOut = {}
EditTextLim = 17
EditTextIn = $(NetworkAddress)

OptionsGreyed = {}

HelpContext = $(!IDH_DB_OEMNADP9_INS)
RCCtlFocusOn = 403

#####oemnadar.inf all
[OptListENG]
OptList_1 = tc$arcnet "Arcnet/TCNS (All Types)",     "tcarc", "ARCNET/TCNS Adapter", "ARCNET or Thomas-Conrad TCNS Adapter"
OptList_2 = tc$tcns,  "Thomas-Conrad TCNS",          "tcarc", "TCNS Adapter",        "Thomas-Conrad 100Mbps TCNS"

[FileConstantsENG]
   ProCaption              = "Windows NT Setup"
   ProCancel               = "Cancel"
   ProCancelMsg            = "Your ARCNET/TCNS Windows NT Networking "+
                             "Adapter is not correctly installed.  Are "+
                             "you sure you want to cancel copying files?"
   ProCancelCap            = "Network Setup Message"
   ProText1                = "Copying:"
   ProText2                = "To:"
   SoftwareTitle           = "ARCNET/TCNS Driver"
   SoftwareDescription     = "ARCNET/TCNS Adapter Driver"

[DialogConstantsENG]
   Help                    = "&Help"
   Exit                    = "Cancel"
   OK                      = "OK"
   HelpContext             = ""
   Continue                = "Continue"
   Cancel                  = "Cancel"
   FunctionTitle           = "ARCNET/TCNS Adapter Setup"
   InterruptLabel          = "&Interrupt Number:"
   BaseIoLabel             = "I/O &Port Base Addr:"
   MemoryLabel             = "&Memory Address:"
   TcnsCaption             = "Thomas-Conrad TCNS Adapter Setup"
   TcnsEISACaption         = "Thomas-Conrad TCNS (TC3147) Adapter Setup"
   SlotNumberLabel         = "&Slot Number:"

[LanguagesSupported]
   ENG



#####oemnaddt.inf all
[LanguagesSupported]
    ENG
[OptionsTextENG]
    DC21040  = "DEC PCI Ethernet DECchip 21040"
    DC21041  = "DEC PCI Ethernet DECchip 21041"
    DC21140  = "DEC PCI Fast Ethernet DECchip 21140"
    DC21142  = "DEC PCI Fast Ethernet DECchip 21142"
    DE434    = "DEC DE434 EtherWORKS Turbo PCI TP Adapter"
    DE435    = "DEC DE435 EtherWORKS Turbo PCI Adapter"
;    DE436    = "DEC DE436 EtherWORKS Turbo PCI Quad Adapter"
    MULTIA   = "DEC multia's Ethernet Controller"
    DE425    = "DEC DE425 EtherWORKS Turbo EISA Adapter"
    DE450    = "DEC DE450 EtherWORKS Turbo PCI Adapter"
    DE500    = "DEC DE500 Fast Ethernet PCI Adapter"

[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductSoftwareDescription = "DEC DC21x4 Driver"

FunctionDC21040Title = "DEC DECchip 21040 Based Adapter Setup"
ProductHardwareDC21040Description = "DEC PCI Ethernet DECchip 21040"
ProductHardwareDC21040Title = "DEC PCI Ethernet DECchip 21040"

FunctionDC21041Title = "DEC DECchip 21041 Based Adapter Setup"
ProductHardwareDC21041Description = "DEC PCI Ethernet DECchip 21041"
ProductHardwareDC21041Title = "DEC PCI Ethernet DECchip 21041"

FunctionDC21140Title = "DEC DECchip 21140 Based Adapter Setup"
ProductHardwareDC21140Description = "DEC PCI Fast Ethernet DECchip 21140"
ProductHardwareDC21140Title = "DEC PCI Fast Ethernet DECchip 21140"

FunctionDC21142Title = "DEC DECchip 21142 Based Adapter Setup"
ProductHardwareDC21142Title = "DEC PCI Ethernet DC21142"
ProductHardwareDC21142Description = "DEC PCI Fast Ethernet DECchip 21142"

FunctionDE434Title   = "DEC DE434 PCI Adapter Card Setup"
ProductHardwareDE434Description   = "DEC DE434 EtherWORKS Turbo PCI TP Adapter"
ProductHardwareDE434Title   = "DEC DE434 EtherWORKS Turbo PCI TP Adapter"

FunctionDE435Title   = "DEC DE435 PCI Adapter Card Setup"
ProductHardwareDE435Description   = "DEC DE435 EtherWORKS Turbo PCI Adapter"
ProductHardwareDE435Title   = "DEC DE435 EtherWORKS Turbo PCI Adapter"

FunctionMULTIATitle = "DEC multia's Ethernet Controller Setup"
ProductHardwareMULTIADescription = "DEC multia's Ethernet Controller"
ProductHardwareMULTIATitle = "DEC multia's Ethernet Controller"

FunctionDE425Title   = "DEC DE425 EISA Adapter Card Setup"
ProductHardwareDE425Description   = "DEC DE425 EtherWORKS Turbo EISA Adapter"
ProductHardwareDE425Title   = "DEC DE425 EtherWORKS Turbo EISA Adapter"

FunctionDE450Title   = "DEC DE450 PCI Adapter Card Setup"
ProductHardwareDE450Description   = "DEC DE450 EtherWORKS Turbo PCI Adapter"
ProductHardwareDE450Title   = "DEC DE450 EtherWORKS Turbo PCI Adapter"

FunctionDE500Title   = "DEC DE500 PCI Adapter Card Setup"
ProductHardwareDE500Description   = "DEC DE500 Fast Ethernet PCI Adapter"
ProductHardwareDE500Title   = "DEC DE500 Fast Ethernet PCI Adapter"

ConnectionList  = ^(ConnectionChoices$(Option), 1)
ConnectionValues = ^(ConnectionChoices$(Option), 2)
NoList  = ^(NoChoices, 1)
NoValues = ^(NoChoices, 2)
ShellCodeErrorTitle     = "Error: "$(Function$(Option)Title)
ShellCodeErrorText      = "Shell Code Error."
CANNOT_FIND_ANY_CARD    = "Network card is not present in the system"

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[FileDependentDlgENG]

DlgText = "Choose the proper cable type for the "+
          "network adapter. Select [Help] for a detailed "+
          "description of the available options of the list."

Combo1Label = "&Connection Type:"

;
; don't localize anything below this
;
DlgTemplate = "ADAP_PROTO_COMBO"
DlgType = "Combination"

Caption = $(Function$(Option)Title)
Combo1List = $(ConnectionList)
Combo1Out  = $(ConnectionValue)
ComboListItemsIn  = {Combo1List}
ComboListItemsOut = {Combo1Out}

EditTextLim = ""
CBOptionsGreyed = {}
MinHelpId = 10
MaxHelpId = 1130
HelpContext = $(Help$(Option)Id)

[ConnectionChoicesDC21040]
    Connect_0 = "AutoDetect", 0
    Connect_1 = "10BaseT (Twisted_Pair) ", 2
    Connect_2 = "10BaseT Full_Duplex ", 3
    Connect_3 = "10BaseT No_Link_Test", 4
    Connect_4 = "10Base2 (BNC)", 1
    Connect_5 = "10Base5 (AUI)", 5
[ConnectionChoicesDC21041]
    Connect_0 = "AutoSense", 0
    Connect_1 = "AutoSense No_Nway", 6
    Connect_2 = "10BaseT (Twisted_Pair) ", 2
    Connect_3 = "10BaseT Full_Duplex ", 3
    Connect_5 = "10BaseT No_Link_Test", 4
    Connect_6 = "10Base2 (BNC)", 1
    Connect_7 = "10Base5 (AUI)", 5
[ConnectionChoicesDC21140]
    Connect_0 = "AutoSense", 0
    Connect_1 = "AutoSense No_Nway", 6
    Connect_2 = "100BaseTx", 8
    Connect_3 = "100BaseTx Full_Duplex", 9
    Connect_4 = "100BaseT4", 10
    Connect_5 = "100BaseFx", 11
    Connect_6 = "100BaseFx Full_Duplex", 12
    Connect_7 = "10BaseT (Twisted Pair)", 2
    Connect_8 = "10BaseT Full_Duplex", 3
[ConnectionChoicesDC21142]
    Connect_0 = "AutoSense", 0
    Connect_1 = "100BaseTx", 8
    Connect_2 = "100BaseTx Full_Duplex", 9
    Connect_3 = "100BaseT4", 10
    Connect_4 = "100BaseFx", 11
    Connect_5 = "100BaseFx Full_Duplex", 12
    Connect_6 = "10BaseT (Twisted_Pair) ", 2
    Connect_7 = "10BaseT Full_Duplex", 3
    Connect_8 = "10BaseT No_Link_Test", 4
    Connect_9 = "10Base2 (BNC)", 1
    Connect_10= "10Base5 (AUI)", 5
[ConnectionChoicesMULTIA]
    Connect_0 = "AutoDetect", 0
    Connect_1 = "10BaseT (Twisted_Pair) ", 2
    Connect_2 = "10BaseT Full_Duplex ", 3
    Connect_3 = "10BaseT No_Link_Test", 4
    Connect_4 = "10Base2 (BNC)", 1
    Connect_5 = "10Base5 (AUI)", 5
[ConnectionChoicesDE434]
    Connect_0 = "10BaseT (Twisted_Pair) ", 2
    Connect_1 = "10BaseT Full_Duplex ", 3
    Connect_2 = "10BaseT No_Link_Test", 4
[ConnectionChoicesDE435]
    Connect_0 = "AutoDetect", 0
    Connect_1 = "10BaseT (Twisted_Pair) ", 2
    Connect_2 = "10BaseT Full_Duplex ", 3
    Connect_3 = "10BaseT No_Link_Test", 4
    Connect_4 = "10Base2 (BNC)", 1
    Connect_5 = "10Base5 (AUI)", 5
[ConnectionChoicesDE450]
    Connect_0 = "AutoSense", 0
    Connect_1 = "AutoSense No_Nway", 6
    Connect_2 = "10BaseT (Twisted_Pair) ", 2
    Connect_3 = "10BaseT Full_Duplex ", 3
    Connect_4 = "10BaseT No_Link_Test", 4
    Connect_5 = "10Base2 (BNC)", 1
    Connect_6 = "10Base5 (AUI)", 5
[ConnectionChoicesDE500]
    Connect_0 = "AutoSense", 0
    Connect_1 = "100BaseTx", 8
    Connect_2 = "100BaseTx Full_Duplex", 9
    Connect_3 = "10BaseT", 2
    Connect_4 = "10BaseT Full_Duplex", 3


#####oemnadzz.inf all
[LanguagesSupported]
    ENG

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


ShellCodeErrorTitle     = "Error: "
ShellCodeErrorText      = "Shell Code Error."

[ErrorMsgENG]
CannotFindOemsetup = "Setup cannot find "$(File1)", "$(File2)", "$(File3)", or "$(File4)". Please make sure your input path is correct."

#####oemnadap.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

[OptionsTextENG]
    AMDPCI     = "AMD PCNET Family Ethernet Adapter"

[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


GenericAdapterName = "AMD PCNET ISA/VESA Ethernet Adapter"
GenericPCIAdapterName = "AMD PCNET PCI Ethernet Adapter"
GenericDriverName  = "AMD PCNET Family Ethernet Adapter Driver"

ProductSoftwareDescription = $(GenericDriverName)
ProductHardwareDescription = $(GenericAdapterName)
ProductHardwarePCNTN3Description="AMD PCnet Family Driver"

ProductSoftwareTitle =       $(GenericDriverName)
ProductHardwarePCNTN3Title = $(GenericAdapterName)

;
; no localization until [DialogConstantsENG]
;

DialogDllName   = "amddlg.dll"

IRQList  = ^(IRQChoices, 1)
IRQValues = ^(IRQChoices, 2)

IOBaseAddrList = ^(IOBaseAddrChoices, 1)
IOBaseAddrValues = ^(IOBaseAddrChoices, 2)

DMAChannelList = ^(DMAChannelChoices,1)
DMAChannelValues = ^(DMAChannelChoices,2)

LEDList = ^(LEDChoices,1)
LEDValues = ^(LEDChoices,2)

FullDuplexList = ^(FullDuplexChoices,1)
FullDuplexValues = ^(FullDuplexChoices,2)

BusTimerList = ^(BusTimerChoices,1)
BusTimerValues = ^(BusTimerChoices,2)

[DialogConstantsENG]
FunctionTitle   = $(GenericDriverName)$(GenericInfVersion)
Help        = "&Help"
Exit        = "Cance&l"
OK          = "&OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "&Cancel"

[MemoryMappedChoicesENG]
Map_1 = 1, "ON"
Map_2 = 0, "OFF"

[FileDependentDlgENG]
FunctionTitle   = $(GenericAdapterName)$(GenericInfVersion)
DlgText = "Please select values for the following fields:"

Combo1Label = "&I/O Port:"
Combo2Label = "IRQ &Number:"
Combo3Label = "&DMA Number:"
Combo4Label = "&Full Duplex:"
Combo5Label = "&Bus Timer:"

BigButton   = "&More options >>"

CheckBox1 = "10Base-&T port"

Group1 = "&Bus to scan"

Radio1 = "&PNP"
Radio2 = "&VESA"
Radio3 = "&ISA"
Radio4 = "&ALL"

;
; no localization until IRQChoices
;

DlgType = "RadioCombination"
DlgTemplate = "PCNTN3"
Caption = $(FunctionTitle)

CBOptionsGreyed = {}
NotifyFields = {NO, NO}
HelpContext = 1

Combo1List = $(IOBaseAddrList)
Combo1Out  = $(IOBaseAddrValue)

Combo2List = $(IRQList)
Combo2Out  = $(IRQValue)

Combo3List = $(DMAChannelList)
Combo3Out  = $(DMAChannelValue)

Combo4List = $(FullDuplexList)
Combo4Out  = $(FullDuplexValue)

Combo5List = $(BusTimerList)
Combo5Out  = $(BusTimerValue)

ComboListItemsIn  = {Combo1List,Combo2List,Combo3List,Combo4List,Combo5List}
ComboListItemsOut = {Combo1Out,Combo2Out,Combo3Out,Combo4Out,Combo5Out}

EditTextIn = ""
EditTextLim = ""

[IRQChoices]
IRQ_1 = "3",3
IRQ_2 = "4",4
IRQ_3 = "5",5
IRQ_4 = "9",9
IRQ_5 = "10",10
IRQ_6 = "11",11
IRQ_7 = "12",12
IRQ_8 = "15",15
IRQ_9 = "Auto_Scan",0

[IOBaseAddrChoices]
IOBase_1  = "0x200",512
IOBase_2  = "0x220",544
IOBase_3  = "0x240",576
IOBase_4  = "0x260",608
IOBase_5  = "0x280",640
IOBase_6  = "0x2a0",672
IOBase_7  = "0x2c0",714
IOBase_8  = "0x2e0",746
IOBase_9  = "0x300",768
IOBase_10 = "0x320",800
IOBase_11 = "0x340",832
IOBase_12 = "0x360",864
IOBase_13 = "0x380",896
IOBase_14 = "0x3a0",928
IOBase_15 = "0x3c0",960
IOBase_16 = "0x3e0",992
IOBase_17 = "Auto_Scan",0

[DMAChannelChoices]
DMAChannel_1 = "3",3
DMAChannel_2 = "5",5
DMAChannel_3 = "6",6
DMAChannel_4 = "7",7
DMAChannel_5 = "Auto_Scan",0

[LEDChoices]
LED_1 = "Default",65536
LED_2 = "0x0",0
LED_3 = "0x2",2
LED_4 = "0x4",4
LED_5 = "0x8",8
LED_6 = "0x10",16
LED_7 = "0x20",32
LED_8 = "0x30",48
LED_9 = "0x34",52
LED_10 = "0x40",64
LED_11 = "0xc0",192
LED_12 = "0x4088",16520
LED_13 = "0xb0",176
LED_14 = "0x21",129

[FullDuplexChoices]
FULLDUPLEX_1 = "OFF",1
FULLDUPLEX_2 = "AUI",2
FULLDUPLEX_3 = "UTP",3
FULLDUPLEX_4 = "Default",0

[BusTimerChoices]
BUSTIMER_1 = "5",5
BUSTIMER_2 = "6",6
BUSTIMER_3 = "7",7
BUSTIMER_4 = "8",8
BUSTIMER_5 = "9",9
BUSTIMER_6 = "10",10
BUSTIMER_7 = "11",11
BUSTIMER_8 = "12",12
BUSTIMER_9 = "13",13
BUSTIMER_10 = "Default",0

[FileDependentDlgPCIENG]
FunctionTitle   = $(GenericPCIAdapterName)$(GenericInfVersion)
DlgText = "Please select values for the following fields:"

Combo1Label = "&Full Duplex:"
BigButton   = "&More options >>"
CheckBox1 = "10Base-&T port"

;
; no locationization until LEDChoices
;

DlgType = "RadioCombination"
DlgTemplate = "PCNTN3PCI"
Caption = $(FunctionTitle)

CBOptionsGreyed = {}
NotifyFields = {NO, NO}
HelpContext = 1

Combo1List = $(FullDuplexList)
Combo1Out  = $(FullDuplexValue)

Combo3List = $(LEDList)
Combo3Out  = $(LED0Value)

Combo4List = $(LEDList)
Combo4Out  = $(LED1Value)

Combo5List = $(LEDList)
Combo5Out  = $(LED2Value)

Combo6List = $(LEDList)
Combo6Out  = $(LED3Value)

ComboListItemsIn  = {Combo1List}
ComboListItemsOut = {Combo1Out}

EditTextIn = ""
EditTextLim = ""

[LEDChoices]
LED_1 = "Default",65536
LED_2 = "0x0",0
LED_3 = "0x2",2
LED_4 = "0x4",4
LED_5 = "0x8",8
LED_6 = "0x10",16
LED_7 = "0x20",32
LED_8 = "0x30",48
LED_9 = "0x34",52
LED_10 = "0x40",64
LED_11 = "0xc0",192
LED_12 = "0x4088",16520
LED_13 = "0xb0",176
LED_14 = "0x21",129

[FullDuplexChoices]
FULLDUPLEX_1 = "OFF",1
FULLDUPLEX_2 = "AUI",2
FULLDUPLEX_3 = "UTP",3
FULLDUPLEX_4 = "Default",0

[BusTimerChoices]
BUSTIMER_1 = "5",5
BUSTIMER_2 = "6",6
BUSTIMER_3 = "7",7
BUSTIMER_4 = "8",8
BUSTIMER_5 = "9",9
BUSTIMER_6 = "10",10
BUSTIMER_7 = "11",11
BUSTIMER_8 = "12",12
BUSTIMER_9 = "13",13
BUSTIMER_10 = "Default",0

#####oemnaddf.inf all

[LanguagesSupported]
        ENG
[OptionsTextENG]
        DEFPA     = "DEC FDDIcontroller/PCI"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "DEC FDDIcontroller/PCI Card Setup"
ProductSoftwareDescription      = "DEC FDDIcontroller/PCI Driver"
ProductHardwareDescription      = "DEC FDDIcontroller/PCI"
CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
ReceiveBuffList = ^(ReceiveBuffChoices,1)
ReceiveBuffValues = ^(ReceiveBuffChoices,2)
TransmitBuffList = ^(TransmitBuffChoices,1)
TransmitBuffValues = ^(TransmitBuffChoices,2)
BurstSizeList = ^(BurstSizeChoices,1)
BurstSizeValues = ^(BurstSizeChoices,2)
DialogDllName = "defpa.dll"
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = 1
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
DlgType = "RadioCombination"
DlgTemplate = "DEFPA"
Combo1 = "Receive Buffers:"
Combo2 = "Transmit Buffers:"
Combo3 = "Burst Size:"
Edit1 = "Requested TTRT(ms):"
Edit2 = "Bus Number:"
Edit3 = "Card Instance:"
Group = "Full Duplex Enable"
Combo1List = $(ReceiveBuffList)
Combo1Out = $(ReceiveBuffValue)
Combo2List = $(TransmitBuffList)
Combo2Out = $(TransmitBuffValue)
Combo3List = $(BurstSizeList)
Combo3Out = $(BurstSizeValue)
; Burst size is not included in dialog box, for now
ComboListItemsIn = {Combo1List,Combo2List}
ComboListItemsOut = {Combo1Out,Combo2Out}
EditTextLim = {3,3,1}
EditTextIn = {$(EditText1),$(EditText2),$(EditText3)}
EditTextOut = {$(EditText1),$(EditText2),$(EditText3)}
[ReceiveBuffChoices]
Receive_1 = "2",2
Receive_2 = "4",4
Receive_3 = "8",8
[TransmitBuffChoices]
Transmit_1 = "8",8
Transmit_2 = "16",16
Transmit_3 = "32",32
Transmit_4 = "64",64
Transmit_5 = "128",128
[BurstSizeChoices]
Burst_1 = "4",0
Burst_2 = "8",1
Burst_3 = "16",2

#####oemnadd3.inf all
[LanguagesSupported]
        ENG
[OptionsTextENG]
        DEC300     = "DEC FDDIcontroller/EISA"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
                           "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "DEC FDDIcontroller/EISA Card Setup"
ProductSoftwareDescription      = "DEC FDDIcontroller/EISA Driver"
ProductHardwareDescription      = "DEC FDDIcontroller/EISA"
CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ProductSoftwareTitle    = "DEC FDDIcontroller/EISA Driver"
ProductHardwareTitle    = "DEC FDDIcontroller/EISA Adapter"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
BurstSizeList = ^(BurstSizeChoices,1)
BurstSizeValues = ^(BurstSizeChoices,2)
ReceiveBuffList = ^(ReceiveBuffChoices,1)
ReceiveBuffValues = ^(ReceiveBuffChoices,2)
TransmitBuffList = ^(TransmitBuffChoices,1)
TransmitBuffValues = ^(TransmitBuffChoices,2)
DialogDllName = "defea.dll"
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = 1
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
DlgType = "RadioCombination"
DlgTemplate = "DEFEA"
Combo1 = "Burst Size:"
Combo2 = "Receive Buffers:"
Combo3 = "Transmit Buffers:"
Group = "Full Duplex Enable"
Edit1 = "Requested TTRT(ms):"
Combo1List = $(BurstSizeList)
Combo1Out = $(BurstSizeValue)
Combo2List = $(ReceiveBuffList)
Combo2Out = $(ReceiveBuffValue)
Combo3List = $(TransmitBuffList)
Combo3Out = $(TransmitBuffValue)
ComboListItemsIn = {Combo2List,Combo3List}
ComboListItemsOut = {Combo2Out,Combo3Out}
EditTextLim = {3}
[BurstSizeChoices]
Burst_1 = "4",0
Burst_2 = "8",1
Burst_3 = "16",2
[ReceiveBuffChoices]
Receive_1 = "2",2
Receive_2 = "4",4
Receive_3 = "8",8
[TransmitBuffChoices]
Transmit_1 = "8",8
Transmit_2 = "16",16
Transmit_3 = "32",32
Transmit_4 = "64",64
Transmit_5 = "128",128

#####oemnadni.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NE2000IBMCOMPAT = "IBM Ethernet PCMCIA and Compatible Adapter"
    NE4000PCMCIA    = "Novell NE4000 PCMCIA Adapter"
    MICRODYNEPCMCIA = "Microdyne NE4000 PCMCIA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
;
; Software
;
ProductSoftwareNE2000IBMCOMPATDescription = "IBM Ethernet PCMCIA and Compatible Adapter Driver"
ProductSoftwareNE2000IBMCOMPATTitle       = "IBM Ethernet PCMCIA and Compatible Adapter Driver"
ProductSoftwareNE4000PCMCIADescription = "Novell NE4000 PCMCIA Adapter Driver"
ProductSoftwareNE4000PCMCIATitle       = "Novell NE4000 PCMCIA Adapter Driver"
ProductSoftwareMICRODYNEPCMCIADescription      = "Microdyne NE4000 PCMCIA Adapter Driver"
ProductSoftwareMICRODYNEPCMCIATitle    = "Microdyne NE4000 PCMCIA Adapter Driver"

;
; Hardware
;

ProductHardwareNE2000IBMCOMPATDescription  = "IBM Ethernet PCMCIA and Compatible Adapter"
ProductHardwareNE2000IBMCOMPATTitle    = "IBM Ethernet PCMCIA and Compatible Adapter"
ProductHardwareNE4000PCMCIADescription = "Novell NE4000 PCMCIA Adapter"
ProductHardwareNE4000PCMCIATitle       = "Novell NE4000 PCMCIA Adapter"
ProductHardwareMICRODYNEPCMCIADescription = "Microdyne NE4000 PCMCIA Adapter"
ProductHardwareMICRODYNEPCMCIATitle       = "Microdyne NE4000 PCMCIA Adapter"

FunctionTitle   = $(ProductHardware$(Option)Title)" Card Setup"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Combo1Label = "&IRQ Level:"
Combo2Label = "&Memory Base Address:"
Combo3Label = "I/&O Port Address:"

;no translation needed after this

DlgType = "MultiCombo"
DlgTemplate = "WD"
Caption = $(FunctionTitle)

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)

Combo2List = $(PcCardAddressHexList)
Combo2Out  = $(PcCardBaseAddress)

Combo3List = $(IOBaseAddrHexList)
Combo3Out  = $(IOBaseAddress)


ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}


EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO, NO}

HelpContext = $(!IDH_DB_OEMNADWD_INS)

#####oemnxppp.inf all
[LanguagesSupported]
    ENG

[OptionsTextENG]
    RASPPTP             = "Point To Point Tunneling Protocol"

;***********************************************************************
;
;***********************************************************************
[FileConstantsENG]
    ProCaption          = "Windows NT Setup"
    ProCancel           = "Cancel"
    ProCancelMsg        = "Windows NT Networking is not correctly installed.  "+
                          "Are you sure you want to cancel copying files?"
    ProCancelCap        = "Network Setup Message"
    ProText1            = "Copying:"
    ProText2            = "To:"

    FunctionTitleRASPPTP                = "PPTP Card Setup"
    ProductSoftwareDescription          = "PPTP Miniport Driver"
    ProductHardwareRASPPTPDescription   = "PPTP Adapter"
    ProductSoftwareTitle                = "PPTP Miniport Driver"
    ProductHardwareRASPPTPTitle         = "PPTP Adapter"

    ProductRASPPTPDescription           = "This is a protocol for tunneling secure remote network communications across Point to Point (PPP) connections to the Internet. "+
                                          "It will allow remote and mobile users to dial into the Internet, using local points of presence and Internet service providers (ISPs) to gain access to corporate networks."
    ProductRASPPTPTitle                 = "Point To Point Tunneling Protocol"

    ShellCodeErrorTitle                 = "Error: "$(FunctionTitle)$(Option))
    ShellCodeErrorText                  = "Shell Code Error."

;RASPPTP_SPECIFIC_START
;***********************************************************************
; These constants are specific to the RASPPTP.sys driver for SMAN
;***********************************************************************
[SMANFileConstantsENG]
    PPTPFunctionTitleRASPPTP                = "PPTP Card Setup"
    PPTPProductSoftwareDescription          = "PPTP Protocol Driver"
    PPTPProductHardwareRASPPTPDescription   = "PPTP Adapter"
    PPTPProductSoftwareTitle                = "PPTP Protocol Driver"
    PPTPProductHardwareRASPPTPTitle         = "PPTP Adapter"

;RASPPTP_SPECIFIC_END

;***********************************************************************
;
;***********************************************************************
[DialogConstantsENG]
    Help                = "&Help"
    Exit                = "Cancel"
    OK                  = "OK"
    HelpContext         = ""
    Continue            = "Continue"
    Cancel              = "Cancel"

;***********************************************************************
;
;***********************************************************************
[FileDependentDlgENG]
    ;Label1              = "&IRQ Level:"
    ;Label2              = "&RAM Base Address:"
    DlgType             = "RadioCombination"
    DlgTemplate         = "NE2000"
    Caption             = $(FunctionTitle)$(Option)
    ;Combo1List          = $(IRQ_List)
    ;Combo1Out           = $(InterruptNumber)
    ;Combo2List          = $(RAM_Hex_List)
    ;Combo2Out           = $(RAM_Hex_Value)
    ;ComboListItemsIn    = {Combo1List, Combo2List}
    ;ComboListItemsOut   = {Combo1Out, Combo2Out}
    EditTextIn          = ""
    EditTextLim         = ""
    CBOptionsGreyed     = {}
    NotifyFields        = {NO, NO}
;    HelpContext         = $(!IDH_DB_OEMNADN2_INS)

;***********************************************************************
;
;***********************************************************************
[InvokeRasDlgENG]
    InvokeRasSetupMsg   = "Remote Access Services (RAS) will now be installed. "+
                          "Please configure the PPTP ports in RAS "+
                          "setup to enable you to use RAS over PPTP."
    InvokeRasConfigMsg  = "Remote Access Services (RAS) setup will now be invoked. "+
                          "Please configure the PPTP ports in RAS "+
                          "setup to enable you to use RAS over PPTP."
    InvokeRasConfigMsg2 = "Remote Access Services (RAS) setup will now be invoked. "+
                          "Please remove the PPTP ports in RAS configuration."

    InvokeRasError      = "PPTP setup encountered an error "+
                          "while invoking the RAS setup INF file (OEMNSVRA.INF). "+
                          "Please make sure that the file is present in the "+
                          "System32 directory and is the proper file."

[InvokeRasSetupDlgENG]
    DlgType      = "MessageBox"
    STF_MB_TEXT  = "Remote Access Services (RAS) is not installed. "+
                   "Do you want to install RAS "+
                   "and add the PPTP ports in RAS setup to enable "+
                   "you to use RAS over PPTP?"$(!LF)$(!LF)+
                   "NOTE: if you are going to install Routing and "+
                   "Remote Access Services beta, choose NO"

    STF_MB_TITLE = "PPTP setup"
    STF_MB_TYPE  = 3
    STF_MB_ICON  = 4
    STF_MB_DEF   = 2

[InvokeRasConfigDlgENG]
    DlgType      = "MessageBox"
    STF_MB_TEXT  = "Do you want to configure Remote Access Services (RAS) "+
                   "and add the PPTP ports in RAS setup to enable "+
                   "you to use RAS over PPTP?"

    STF_MB_TITLE = "PPTP setup"
    STF_MB_TYPE  = 3
    STF_MB_ICON  = 4
    STF_MB_DEF   = 2

;***********************************************************************
;
;***********************************************************************
[InvokeTCPIPDlgENG]
    InvokeTCPSetupMsg   = "TCP/IP is not installed. It will now be installed."
    InvokeTCPError      = "PPTP setup encountered an error "+
                          "while invoking the TCP/IP setup INF file (OEMNXPTC.INF). "+
                          "Please make sure that the file is present in the "+
                          "System32 directory and is the proper file."

;***********************************************************************
;
;***********************************************************************
[InvokeCancelDlgENG]
    InvokeCancelMsg = "PPTP setup is incomplete. "+
                       "Please rerun the Setup Program if you want "+
                       "to install PPTP."

;***********************************************************************
;
;***********************************************************************
[InvokeConfigureDlgENG]
    InvokeConfigureMsg = "Please reboot for the new changes to take effect."

#####oemnsvbr.inf all
[LanguagesSupported]
    ENG

[OptionsTextENG]
    RelayAgent = "DHCP Relay Agent"

[FileConstantsENG]
FunctionTitle                   = "Relay Agent Setup"
ProductSoftwareDescription      = "Enables the Windows NT Server to forward DHCP (Dynamic Host Configuration Protocol) broadcasts across a router to a remote DHCP server."
ProductSoftwareDisplayName      = "DHCP Relay Agent"
ProductSoftwareTitle            = "DHCP Relay Agent"
ErrorTCPIPNotInstalled          = "TCP/IP is not installed. Please install TCP/IP and retry this installation."
ShellCodeErrorTitle             = "Error: "$(FunctionTitle)
ShellCodeErrorText              = "Shell Code Error."
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"

[DefaultsENG]

[DialogConstantsENG]
Help            = "&Help"
Exit            = "Cancel"
OK              = "OK"
HelpContext     = ""
Continue        = "Continue"
Cancel          = "Cancel"

[FileDependentDlgENG]

#####oemnsvsm.inf all
[LanguagesSupported]
ENG
[OptionsTextENG]
SFM      = "Services for Macintosh"

[FileConstantsENG]

FunctionTitle                   =  "Services for Macintosh Setup"
ProductATALKDescription         =  "Enables a Macintosh computer to access shared disk space on your computer."
ProductAFPSVCDescription        =  "AppleTalk File Server"
ProductMACPRINTDescription      =  "AppleTalk Print Server"
ProductSFMDescription           =  "Enables a Windows NT Server to act as an AppleTalk router, allowing PC and Macintosh clients to share files and printers."


ProCaption      = $(FunctionTitle)
ProCancel       = "Cancel"
ProCancelMsg    = "Services for Macintosh is not correctly installed. "+
                  "Are you sure you want to cancel copying files ?"
ProCancelCap    = "Services for Macintosh Setup"
ProText1        = "Copying:"
ProText2        = "To:"
Error           = "User has cancelled copying files. Copied files will be removed."

MajorVersion    = "MajorVersion"
MinorVersion    = "MinorVersion"
Version         =  "Version "

AskLocationText = "Setup needs to copy Services for Macintosh files."$(!LF)$(!LF)+
                  "Setup will look for the files in the location specified below. If you want "+
                  "Setup to look in a different place, type the new location. When the location "+
                  "is correct, click Continue."

ProductSFMTitle                 = "Services for Macintosh"
ProductATALKDisplayName         = "AppleTalk Protocol"
ProductATALKTitle               = "AppleTalk Protocol"
ProductAFPSVCDisplayName        = "File Server for Macintosh"
ProductAFPSVCTitle              = "File Server for Macintosh"
ProductAFPSRVRDisplayName       = "SFM Kernel Driver"
ProductMACPRINTDisplayName      = "Print Server for Macintosh"
ProductMACPRINTTitle            = "Print Server for Macintosh"


!UAMVolumeName                  = "Microsoft UAM Volume"
!AtalkMonName                   = "AppleTalk Printing Devices"
!AtalkMonEventLogName           = "AppleTalk Print Monitor"

!AppleShareFolder                       = "AppleShare Folder"
!UamReadMeDestFile                      = "ReadMe.UAM"

GroupName    = "Administrative Tools"
IconName     = "File Manager"


[DialogConstantsENG]

Help        = "&Help"
Exit        = "E&xit Setup"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[UAMVarsENG]
UAMDirName     =       "Microsoft UAM Volume"
UAMPath        =       $(UAMDrive)"\"$(UAMDirName)

[TCCommentsENG]

!XCEL1COMMENT   = "Comment=MS Excel 3.0 Chart"
!XCEL2COMMENT   = "Comment=MS Excel 3.0 Spreadsheet"
!XCEL3COMMENT   = "Comment=MS Excel 3.0 Macrosheet"
!XCEL4COMMENT   = "Comment=MS Excel 3.0 Workspace"
!XCEL5COMMENT   = "Comment=MS Excel 3.0 Add-in MacroFile"
!XCEL6COMMENT   = "Comment=MS Excel 3.0 Template File"
!XCEL7COMMENT   = "Comment=MS Excel 3.0"
!XCEL8COMMENT   = "Comment=MS Excel 4.0 Chart"
!XCEL9COMMENT   = "Comment=MS Excel 4.0 Spreadsheet"
!XCEL10COMMENT  = "Comment=MS Excel 4.0 Macrosheet"
!XCEL11COMMENT  = "Comment=MS Excel 4.0 WorkSpace"
!XCEL12COMMENT  = "Comment=MS Excel 4.0 Add-in MacroFile"
!XCEL13COMMENT  = "Comment=MS Excel 4.0 Template File"
!MSWD1COMMENT   = "Comment=MS Word 5.1 Document"
!MSWD2COMMENT   = "Comment=MS Word 5.1 Document"
!MSWD3COMMENT   = "Comment=MS Word 6.0 Document"
!MSWD4COMMENT   = "Comment=MS Word 6.0 Template"
!MSPJ1COMMENT   = "Comment=MS Project 4.0"
!MSPJ2COMMENT   = "Comment=MS Project 4.0 Exchange File"
!MSPJ3COMMENT   = "Comment=MS Project 4.0 Calendar"
!MSPJ4COMMENT   = "Comment=MS Project 4.0 View"
!MSPJ5COMMENT   = "Comment=MS Project 4.0 WorkSpace"
!MSPJ6COMMENT   = "Comment=MS Project 4.0 Template"
!ALD31COMMENT   = "Comment=Pagemaker 3.0  Publication"
!ALD32COMMENT   = "Comment=Pagemaker 3.0 Template"
!ALD33COMMENT   = "Comment=Pagemaker 3.0 Tiff Graphics"
!ALD41COMMENT   = "Comment=Pagemaker 4.0 Publication"
!ALD42COMMENT   = "Comment=Pagemaker 4.0 Template"
!ALD43COMMENT   = "Comment=Pagemaker 4.0 Tiff Graphics"
!MORECOMMENT    = "Comment=Symantec More File"
!FOX+COMMENT    = "Comment=FoxBase Plus"
!ARTZCOMMENT    = "Comment=Adobe Illustrator"
!SIT!COMMENT    = "Comment=Aladdin Stuffit"
!PPT2COMMENT    = "Comment=MS PowerPoint 2.0"
!PPT3COMMENT    = "Comment=MS PowerPoint 3.0"
!L123COMMENT    = "Comment=Lotus 1-2-3"
!LMANCOMMENT    = "Comment=LMAN Executables"
!TTXTCOMMENT    = "Comment=Teach Text Document"
!FOXX1COMMENT   = "Comment=FoxPro 2.0 Table"
!FOXX2COMMENT   = "Comment=FoxPro 2.0 Memo"
!FOXX3COMMENT   = "Comment=FoxPro 2.0 Index"
!FOXX4COMMENT   = "Comment=FoxPro 2.0 Compound Index"
!FOXX5COMMENT   = "Comment=FoxPro 2.0 Program"
!FOXX6COMMENT   = "Comment=FoxPro 2.0 Report"
!FOXX7COMMENT   = "Comment=FoxPro 2.0 Report Memo"
!FOXX8COMMENT   = "Comment=FoxPro 2.0 Label"
!FOXX9COMMENT   = "Comment=FoxPro 2.0 Label Memo"
!FOXX10COMMENT   = "Comment=FoxPro 2.0 Screen"
!FOXX11COMMENT   = "Comment=FoxPro 2.0 Screen Memo"
!FOXX12COMMENT   = "Comment=FoxPro 2.0 Menu"
!FOXX13COMMENT   = "Comment=FoxPro 2.0 Menu Memo"
!FOXX14COMMENT   = "Comment=FoxPro 2.0 Gen. Query Program"
!FOXX15COMMENT   = "Comment=FoxPro 2.0 Project"
!FOXX16COMMENT   = "Comment=FoxPro 2.0 Project Memo"

;------------------------------------------------------------------
; Express /Custom Mode Install Dialog - Used In Initial Setup Only
;------------------------------------------------------------------

[SetupSpaceDlgENG]
STF_MB_TEXT = +
"Setup could not find enough space on your Windows NT Server system partition. "+
"Setup requires at least 2 MB for installing Services for Macintosh. "+
"You can retry installation after freeing up disk space on your system partition."


;no translation needed after this

DlgType         = "MessageBox"
STF_MB_TYPE     = 5
STF_MB_ICON     = 3
STF_MB_DEF      = 3
STF_MB_TITLE    = $(FunctionTitle)

;no translation needed after this

[ExitWarningDlgENG]
STF_MB_TITLE    = "Services for Macintosh Setup"
STF_MB_TEXT     = "Services for Macintosh is not correctly installed. Are you "+
                  "sure you want to exit Setup?"

;no translation needed after this

DlgType         = "MessageBox"
STF_MB_TYPE     = 3
STF_MB_ICON     = 5
STF_MB_DEF      = 2

;------------------------------------------------------------------
; Error Strings
;------------------------------------------------------------------

;------------------------------------------------------------------
; Miscellaneous Errors
;------------------------------------------------------------------

[MiscErrorString1ENG]
ErrorString = +
" of Services for Macintosh is already installed on your system. "+
"Use [Update] to update to newer versions."


[MiscErrorString2ENG]
ErrorString = +
"Sufficient memory is not available on your system to run  "+
"Services for Macintosh. Services for Macintosh requires "+
"a minimum of 8 MB to function."


[MiscErrorString3ENG]
ErrorString = +
"Setup encountered the following error during installation. Try installing "+
"Services for Macintosh after rebooting your system. "$(LF)

[ShellingErrorENG]
ErrorString  = +
"An internal error occurred. Contact Technical Support."

[NTFSFormatHappeningENG]
ErrorString = +
"Setup could not find any NTFS partitions in your system. You could be "+
"reformatting or converting your existing NTFS partition. The Microsoft UAM "+
"volume cannot be installed at this time. Setup will proceed with installation. "+
"Use the command SETUP /i OEMNSVSM.INF /c UAMINSTALL to install the UAM volume "+
"after Windows NT Server installation."


[UamFileNotCopiedENG]
ErrorString  = +
"Setup cannot copy Microsoft user authentication files to the Microsoft UAM "+
"volume. Macintosh workstations will be unable to download these files. There "+
"may not be enough disk space on your NTFS partition or the UAM files might be "+
"missing from your Windows NT Server distribution disks. Refer to your Administrator's guide "+
"on how to create this volume after installation."

[UamFileNotCopied1ENG]
ErrorString  = +
"Setup cannot copy Microsoft user authentication files to the Microsoft UAM "+
"volume. Macintosh workstations will be unable to download these files. There "+
"may not be enough disk space on your NTFS partition or the UAM files might be "+
"missing from your Windows NT Server distribution disks. Refer to your Administrator's guide "+
"on how to create this volume after installation."

[UamSecurityNotSetENG]
ErrorString = +
"Setup cannot set the default security settings for the UAM volume. "+
"Security for the UAM volume can also be set from the User Manager "+
"after installation."

[CannotStartAtalkENG]
ErrorSuffix = +
"Setup was unable to start the AppleTalk Protocol. You will be unable to choose "+
"a desired zone at this time."

[CannotStartAfdENG]
ErrorSuffix = +
"Setup was unable to start the AFD Driver. You will be unable to choose "+
"a desired zone at this time."

;------------------------------------------------------------------
; Status Strings
;------------------------------------------------------------------


[StatusInstallSfmENG]
Status = "Installing Services for Macintosh..."

[StatusRemoveSfmENG]
Status = "Removing Services for Macintosh files..."

[StatusStartingAppleTalkENG]
Status = "Starting AppleTalk Protocol..."



;------------------------------------------------------------------
; AppleTalk Transport Error Strings
;------------------------------------------------------------------

[AtalkString1ENG]
ErrorString  = +
"Setup cannot add Windows sockets support for the AppleTalk protocol. "+
"Windows sockets applications will be unable to use the AppleTalk Protocol. "+
"Remove Services for Macintosh after installation and re-install. If the problem "+
"persists, contact Microsoft support."

[AtalkString2ENG]
ErrorString  = +
"Setup cannot remove Windows Sockets support for the AppleTalk protocol."


[AtalkString3ENG]
ErrorString  = +
"Services for Macintosh has just been installed. Services will be "+
"available to Macintosh workstations in the default network. If you would like "+
"the services to appear in a different zone or to configure routing, close "+
"the Control Panel, reboot, start AppleTalk and use the Control Panel "+
"to configure Services for Macintosh."

[AtalkString5ENG]
ErrorString = +
"Setup cannot remove the monitor for the Print Server for Macintosh."

[AFPString1ENG]
ErrorString = +
"Setup cannot find an NTFS partition on your system. "+
"Services for Macintosh requires an NTFS partition for "+
"Macintosh workstations to share files. You can create "+
"the NTFS partition after installing Services for Macintosh. "+
"To format a partition to NTFS, use the command, format [drive] /fs:NTFS. "+
"Setup will proceed with installation."


[AFPString2ENG]
ErrorString = +
"Setup cannot add the Macintosh File Server to the File Manager. "+
"You will be unable to work with Macintosh accessible volumes from "+
"File Manager."


[AFPString3ENG]
ErrorString  = +
"Setup cannot add the Macintosh File Server to the Server Manager. "+
"You will be unable to work with Services for Macintosh servers from "+
"Server Manager."

[AFPString11ENG]
ErrorString  = +
"Setup can not find the volumes key in the MacFile section in registry. "+
"The UAM volume cannot be built."

[AFPString12ENG]
ErrorString  = +
"Setup can not find any NTFS volumes in your system. The UAM volume can not be installed."


[MacPrintString2ENG]
ErrorString = +
"Setup cannot create the eventlog entries for the Print Server for Macintosh. "+
"You will be unable to use the event viewer to see the log for Print Server "+
"for Macintosh."

[MacPrintString3ENG]
ErrorString = +
"Setup cannot add the print processor for the Print Server for Macintosh. "+
"Macintosh workstations will be unable to print postscript jobs to a "+
"non-postscript printer on the Windows NT Server network."

[MacPrintString4ENG]
ErrorString = +
"Setup cannot add the print monitor for the Print Server for Macintosh. "+
"Macintosh workstations will be unable to use print services on this "+
"Windows NT Server."

[MacPrintString5ENG]
ErrorString = +
"Setup cannot remove the print processor for the Print Server for Macintosh."

[MacPrintString6ENG]
ErrorString = +
"Setup can not find the directory to install the Macintosh print processor. "+
"The Macintosh print processor will not be installed."

[MacPrintString7ENG]
ErrorString = +
"Setup cannot remove the monitor for the Print Server for Macintosh."


[MacPrintString10ENG]
ErrorString = +
"Setup cannot create the eventlog entries for the Print Server for Macintosh monitor. "+
"You will be unable to use the event viewer to see the log for Print Server "+
"for Macintosh."


[NoAdaptersFoundENG]

ErrorString = +
"Setup cannot find any network adapter for Services for Macintosh. You will "+
"be unable to use Services for Macintosh. Try adding a network adapter or "+
"enable the bindings for AppleTalk Protocol."

[RemoveDefaultPortENG]
ErrorString  = +
"Setup has detected that the default network adapter used by Services "+
"for Macintosh has been removed. Setup will change the default network, if "+
"one is available. This may cause Macintosh workstations to no longer "+
"see Services for Macintosh on their current zone."

#####oemnxpsm.inf all

[LanguagesSupported]
   ENG
[OptionsTextENG]
   ATALK           = "AppleTalk Protocol"

[FileConstantsENG]
ProductSFMADMTitle              = "Macintosh Administrator Tools"
ProductSFMADMDescription        = "Macintosh Administrator Tools"
ProductATALKTitle               = "AppleTalk Protocol"
ProductSFMADMName               = "SFMADM"
FunctionTitle               = "AppleTalk Protocol Setup"
ProductATALKDescription     = "Enables a Macintosh computer to access shared disk space on your computer."


ProCaption      = $(FunctionTitle)
ProCancel       = "Cancel"
ProCancelMsg    = "AppleTalk Protocol is not correctly installed. "+
                  "Are you sure you want to cancel copying files ?"
ProCancelCap    = "AppleTalk Protocol Setup"
ProText1        = "Copying:"
ProText2        = "To:"
Error           = "User has cancelled copying files. Copied files will be removed."

MajorVersion    = "MajorVersion"
MinorVersion    = "MinorVersion"
Version         =  "Version "
OF              = " of "

!AtalkMonName                   = "AppleTalk Printing Devices"
!AtalkMonEventLogName   = "AppleTalk Print Monitor"

AskLocationText = "Setup needs to copy AppleTalk Protocol files."$(!LF)$(!LF)+
                  "Setup will look for the files in the location specified below. If you want "+
                  "Setup to look in a different place, type the new location. When the location "+
                  "is correct, click Continue."

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[ExitWarningDlgENG]
STF_MB_TITLE    = "AppleTalk Protocol Setup"
STF_MB_TEXT     = "AppleTalk Protocol is not correctly installed. Are you "+
                  "sure you want to exit Setup?"

;no translation needed after this

DlgType         = "MessageBox"
STF_MB_TYPE     = 3
STF_MB_ICON     = 5
STF_MB_DEF      = 2

;------------------------------------------------------------------
; Error Strings
;------------------------------------------------------------------

;------------------------------------------------------------------
; Miscellaneous Errors
;------------------------------------------------------------------

[MiscErrorString1ENG]
ErrorString = +
" is already installed on your system. "+
"Use [Update] to update to newer versions."

[SfmAlreadyInstalledENG]
ErrorString = +
" of Services for Macintosh is already installed on your system. "+
"You have to remove Services for Macintosh before installing the "+
"AppleTalk Protocol."

[MiscErrorString3ENG]
ErrorString = +
"Setup encountered the following error during installation. Try installing "+
"after rebooting your system. "$(LF)

[ShellingErrorENG]
ErrorString  = +
"An internal error occurred. Contact Technical Support."

[CannotStartAtalkENG]
ErrorSuffix = +
"Setup was unable to start the AppleTalk Protocol. You will be unable to choose "+
"a desired zone at this time."

[CannotStartAfdENG]
ErrorSuffix = +
"Setup was unable to start the AFD Driver. You will be unable to choose "+
"a desired zone at this time."

[StatusStartingAppleTalkENG]
Status = "Starting AppleTalk Protocol..."

;------------------------------------------------------------------
; AppleTalk Transport Error Strings
;------------------------------------------------------------------

[AtalkString1ENG]
ErrorString  = +
"Setup cannot add Windows sockets support for the AppleTalk protocol. "+
"Windows sockets applications will be unable to use the AppleTalk Protocol. "+
"Remove Services for Macintosh after installation and re-install. If the problem "+
"persists, contact Microsoft support."

[AtalkString2ENG]
ErrorString  = +
"Setup cannot remove Windows Sockets support for the AppleTalk protocol."


[AtalkString3ENG]
ErrorString  = +
"AppleTalk has just been installed. "+
"If you would like to configure AppleTalk, close "+
"the Control Panel, reboot, start AppleTalk and use the Control Panel "+
"to configure."

[AtalkString4ENG]
ErrorString = +
"Setup cannot add the print monitor for the Print Server for Macintosh. "+
"Macintosh workstations will be unable to use print services on this "+
"Windows NT workstation."

[AtalkString5ENG]
ErrorString = +
"Setup cannot remove the monitor for the Print Server for Macintosh."

[AtalkString6ENG]
"Setup cannot create the eventlog entries for the Print Server for Macintosh monitor. "+
"You will be unable to use the event viewer to see the log for Print Server "+
"for Macintosh."

[AtalkString7ENG]
ErrorString = +
"Services for Macintosh is installed on your system and it requires "+
"AppleTalk Protocol for proper operation."+
"You have to remove Services for Macintosh if you desire to remove "+
"AppleTalk Protocol."

[AFPString2ENG]
ErrorString = +
"Setup cannot add the Macintosh File Server to the File Manager. "+
"You will be unable to work with Macintosh accessible volumes from "+
"File Manager."


[AFPString3ENG]
ErrorString  = +
"Setup cannot add the Macintosh File Server to the Server Manager. "+
"You will be unable to work with Services for Macintosh servers from "+
"Server Manager."

[NoAdaptersFoundENG]

ErrorString = +
"Setup cannot find any network adapter for the AppleTalk Protocol. You will "+
"be unable to use AppleTalk Protocol. Try adding a network adapter or "+
"enable the bindings for AppleTalk Protocol."

[RemoveDefaultPortENG]
ErrorString  = +
"Setup has detected that the default network adapter used by AppleTalk "+
"Protocol has been removed. Setup will change the default network, if "+
"one is available."

[CantConfigureADMENG]
ErrorString = +
"You cannot configure this software component."

[RemovingSFMENG]
Message = "You have Services for Macintosh (SFM) installed on your "+
          "Windows NT Workstation. "+
          "SFM is only supported on the Windows NT Server. "+
          "Your SFM installation will be removed since this is not a "+
          "supported configuration. "+
          "Please install the Windows NT Server if you want to run SFM."


#####netbond.inf all
[MessageTextENG]
ProCaption   = "Windows NT Networking Installation"
ProCancel    = "Cancel"
MPreInstall1 = "Setup is installing the "
MPreInstall2 = "..."
MPostInstall = " has been installed."
ProCancelMsg = "Windows NT is not correctly installed.  Are you sure you want "+
                   "to cancel copying files?"
ProCancelCap = "Setup Message"
MPreUpgrade1 = "Setup is upgrading the "
MPostUpgrade = " has been upgraded."

MPreRemove1 = "Setup is removing the "
MPreRemove2 = "..."
MPostRemove = " has been removed."

[FatalErrorENG]
; do not translate the string on the left of the '='
Error = "Setup was unable to process the INF file "$(FailedInfFile)" which is required "+
        "for network installation."

[ErrorMsgENG]
CannotFindNtFiles = "The Windows NT files were not found in "$(Path1)", "$(Path2)", or "$(Path3)". Please make sure your input path is correct."

[FatalDlgENG]
STF_MB_TITLE = "Setup Message"
; no translation starting now
DlgType = "MessageBox"
STF_MB_TEXT  = $(Error)
STF_MB_TYPE  = 1
STF_MB_ICON  = 3
STF_MB_DEF   = 1
; end of no translation zone

[UpgradeWarnings]
; do not translate the string on the left of the '='
Warning = "You have the following product installed on your computer:  "$(ServiceTitle)".  Windows NT cannot upgrade this component.  Please contact your system administrator  or look through your product documentation to make sure that this product is compatible with this version of Windows NT."

[UpgradeNetCardWarnings]
; do not translate the string on the left of the '='
Warning = "The following non-Microsoft networking component is installed on this computer:  "$(ServiceTitle)".  Although your network connection may function properly after the upgrade is completed,  the component should be removed and replaced with a newer version."

[WarningDlg]
STF_MB_TITLE = "Network Setup Information"

; no translation starting now
DlgType = "MessageBox"
STF_MB_TEXT  = $(Warning)
STF_MB_TYPE  = 1
STF_MB_ICON  = 2
STF_MB_DEF   = 1
; end of no translation zone

[UpgradeDialogENG]
    ProCaption   = "Windows NT Networking Upgrade"
    ProCancel    = "Cancel"
    ProCancelMsg = "Windows NT is not correctly upgraded.  Are you sure you want "+
                   "to cancel copying files?"
    ProCancelCap = "Network Upgrade Message"
    ProText1     = "Copying:"
    ProText2     = "To:"

#####oemnsvin.inf all
[LanguagesSupported]
    ENG


;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsWINNTTextENG]
    INETSRV      = "Microsoft Peer Web Services"

[OptionsLANMANNTTextENG]
    INETSRV      = "Microsoft Internet Information Server 2.0"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionLANMANNTTitle    = "Microsoft Internet Information Server 2.0"
FunctionWINNTTitle = "Microsoft Peer Web Services"
;
; Software
;
ProductSoftwareWINNTDescription      = "Microsoft Peer Web Services"
ProductSoftwareLANMANNTDescription   = "Microsoft Internet Information Server 2.0"
;
; Hardware
;
OptionList     = ^(Options, 1)
OptionTextList = ^(OptionsTextENG, 1)

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

Warning1 = "Please use Internet Manager to configure the software."
Warning2Winnt = "Microsoft Peer Web Services may be deleted by another process. Please restart your Network Control Panel applet."
Warning2LanmanNt = "Microsoft Internet Information Server may be deleted by another process. Please restart your Network Control Panel applet."
Warning3Winnt = "Microsoft Peer Web Services may be installed by another process. Please restart your Network Control Panel applet."
Warning3LanmanNt = "Microsoft Internet Information Server may be installed by another process. Please restart your Network Control Panel applet."
Warning4Winnt = "Microsoft Peer Web Services cannot be installed without proper network protocol setup. Please make sure your network protocol is installed."
Warning4LanmanNt = "Microsoft Internet Information Server cannot be installed without proper network protocol setup. Please make sure your network protocl is installed."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for sonic
;

#####oemnadsn.inf all
[LanguagesSupported]
    ENG

[OptionsTextENG]
    SNIMAC      = "SNI RM400/RM200 Driver for onboard Ethernet Adapter"

[FileConstantsENG]
    ProCaption   = "Windows NT Setup"
    ProCancel    = "Cancel"
    ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
                   "Are you sure you want to cancel copying files?"
    ProCancelCap = "Network Setup Message"
    ProText1     = "Copying:"
    ProText2     = "To:"
    FunctionTitle                   = "SNI RM400/RM200 onboard Ethernet Adapter Card Setup"
    ProductSoftwareDescription      = "SNI RM400/RM200 onboard Ethernet Adapter Driver"
    OptionList     = ^(Options, 1)
    OptionTextList = ^(OptionsTextENG, 1)
    ProductHardwareDescription      = *($(OptionTextList), ~($(OptionList), $(Option)))
    ProductSoftwareTitle            = "SNI RM400/RM200 onboard Ethernet Adapter Driver"
    ProductHardwareSNIMACx00Title      = "SNI RM400/RM200 onboard Ethernet Adapter"
    ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
    ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
    Help        = "&Help"
    Exit        = "Cancel"
    OK          = "OK"
    HelpContext = ""
    Continue    = "C&ontinue"
    Cancel      = "C&ancel"

[FileDependentDlgENG]

[Warning1ENG]
    Error = "No configuration is required for this adapter card."



#####oemnadma.inf all
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; Text strings to identify adapter options.
;-----------------------------------------------------------------------

[OptionsTextENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPISA   = "Madge Smart 16/4 AT Ringnode"
    MSMDGMPATP   = "Madge Smart 16/4 AT Plus Ringnode"
    MSMDGMPISAC  = "Madge Smart 16/4 ISA Client Ringnode"
    MSMDGMPISACP = "Madge Smart 16/4 ISA Client Plus Ringnode"
    MSMDGMPPC    = "Madge Smart 16/4 PC Ringnode"
    MSMDGMPSM16  = "Madge Smart 16 Ringnode"
    MSMDGMPPNP   = "Madge Smart 16/4 ISA Client PnP Ringnode"
    MSMDGMPMCA   = "Madge Smart 16/4 MC Ringnode"
    MSMDGMPMC32  = "Madge Smart 16/4 MC32 Ringnode"
    MSMDGMPEISA  = "Madge Smart 16/4 EISA Ringnode"
    MSMDGMPPCI   = "Madge Smart 16/4 PCI Ringnode"
    MSMDGMPPCIBM = "Madge Smart 16/4 PCI Ringnode (BM)"
    MSMDGMPPCMCIA = "Madge Smart 16/4 PCMCIA Ringnode"

[OptionsTextISAENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPISA   = "Madge Smart 16/4 AT Ringnode"
    MSMDGMPATP   = "Madge Smart 16/4 AT Plus Ringnode"
    MSMDGMPISAC  = "Madge Smart 16/4 ISA Client Ringnode"
    MSMDGMPISACP = "Madge Smart 16/4 ISA Client Plus Ringnode"
    MSMDGMPPC    = "Madge Smart 16/4 PC Ringnode"
    MSMDGMPSM16  = "Madge Smart 16 Ringnode"
    MSMDGMPPNP   = "Madge Smart 16/4 ISA Client PnP Ringnode"

[OptionsTextMCAENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPMCA   = "Madge Smart 16/4 MC Ringnode"
    MSMDGMPMC32  = "Madge Smart 16/4 MC32 Ringnode"

[OptionsTextEISAENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPEISA  = "Madge Smart 16/4 EISA Ringnode"
    MSMDGMPISA   = "Madge Smart 16/4 AT Ringnode"
    MSMDGMPATP   = "Madge Smart 16/4 AT Plus Ringnode"
    MSMDGMPISAC  = "Madge Smart 16/4 ISA Client Ringnode"
    MSMDGMPISACP = "Madge Smart 16/4 ISA Client Plus Ringnode"
    MSMDGMPPC    = "Madge Smart 16/4 PC Ringnode"
    MSMDGMPSM16  = "Madge Smart 16 Ringnode"
    MSMDGMPPNP   = "Madge Smart 16/4 ISA Client PnP Ringnode"

[OptionsTextPCIENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPPCI   = "Madge Smart 16/4 PCI Ringnode"
    MSMDGMPPCIBM = "Madge Smart 16/4 PCI Ringnode (BM)"

[OptionsTextPCMCIAENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPPCMCIA = "Madge Smart 16/4 PCMCIA Ringnode"


; ----------------------------------------------------------------------
; Miscellaneous declarations for initialsing lists.
; ----------------------------------------------------------------------

[IoLocationChoices]
    "0x0300",768
    "0x0a20",2592
    "0x1a20",6688
    "0x2a20",10784
    "0x3a20",14880
    "0x4a20",18976
    "0x4e20",20000
    "0x5a20",23072
    "0x5e20",24096
    "0x6a20",27168
    "0x6e20",28192
    "0x7a20",31264
    "0x7e20",32288
    "0x0140",320
    "0x0920",2336
    "0x0940",2368
    "0x0960",2400
    "0x0980",2432
    "0x0a40",2624
    "0x0a60",2656
    "0x0a80",2688
    "0x0aa0",2720
    "0x0b20",2848
    "0x0b40",2880
    "0x0b60",2912
    "0x0b80",2944
    "UNKNOWN",65535

[DmaChannelChoices]
    "PIO",0
    "DMA Channel 01",1
    "DMA Channel 02",2
    "DMA Channel 03",3
    "DMA Channel 04",4
    "DMA Channel 05",5
    "DMA Channel 06",6
    "DMA Channel 07",7
    "DMA Channel 08",8
    "DMA Channel 09",9
    "DMA Channel 10",10
    "DMA Channel 11",11
    "DMA Channel 12",12
    "DMA Channel 13",13
    "DMA Channel 14",14
    "DMA Channel 15",15
    "DMA",500
    "MMIO",501
    "UNKNOWN",65535

[IrqNumberChoices]
    "01",1
    "02",2
    "03",3
    "04",4
    "05",5
    "06",6
    "07",7
    "08",8
    "09",9
    "10",10
    "11",11
    "12",12
    "13",13
    "14",14
    "15",15
    "UNKNOWN",65535

[SlotNumberChoices]
    "00",0
    "01",1
    "02",2
    "03",3
    "04",4
    "05",5
    "06",6
    "07",7
    "08",8
    "09",9
    "10",10
    "11",11
    "12",12
    "13",13
    "14",14
    "15",15
    "16",16
    "17",17
    "18",18
    "19",19
    "20",20
    "21",21
    "22",22
    "23",23
    "24",24
    "25",25
    "26",26
    "27",27
    "28",28
    "29",29
    "30",30
    "31",31
    "UNKNOWN",65535

[RxTxSlotsChoices]
    "Rx=02 Tx=02",0
    "Rx=03 Tx=03",1
    "Rx=04 Tx=04",2
    "Rx=06 Tx=06",3
    "Rx=08 Tx=08",4
    "Rx=10 Tx=10",5

[StatsChoices]
    "Disabled",0
    "Enabled",1

[MpChoices]
    "One",0
    "Multiple",1
    "UNKNOWN",65535
; ----------------------------------------------------------------------
; Language dependent constants specific to the driver.
; ----------------------------------------------------------------------

[FileConstantsENG]

;
; Product Info
;

FunctionTitle   = "MdgMPort v"$(ProductVersion)": Madge Smart Ringnode Setup"

;
; Software.
;

ProductSoftwareTitle       = "MdgMPort"
ProductSoftwareDescription = "MdgMPort: Madge Smart Ringnode NDIS3 Miniport Driver"

;
; Hardware.
;

ProductHardwareMSMDGMPISATitle   = "Madge Smart 16/4 AT Ringnode"
ProductHardwareMSMDGMPATPTitle   = "Madge Smart 16/4 AT Plus Ringnode"
ProductHardwareMSMDGMPISACTitle  = "Madge Smart 16/4 ISA Client Ringnode"
ProductHardwareMSMDGMPISACPTitle = "Madge Smart 16/4 ISA Client Plus Ringnode"
ProductHardwareMSMDGMPPCTitle    = "Madge Smart 16/4 PC Ringnode"
ProductHardwareMSMDGMPEISATitle  = "Madge Smart 16/4 EISA Ringnode"
ProductHardwareMSMDGMPMCATitle   = "Madge Smart 16/4 MC Ringnode"
ProductHardwareMSMDGMPMC32Title  = "Madge Smart 16/4 MC32 Ringnode"
ProductHardwareMSMDGMPSM16Title  = "Madge Smart 16 Ringnode"
ProductHardwareMSMDGMPPNPTitle   = "Madge Smart 16/4 ISA Client PnP Ringnode"
ProductHardwareMSMDGMPPCITitle   = "Madge Smart 16/4 PCI Ringnode"
ProductHardwareMSMDGMPPCIBMTitle = "Madge Smart 16/4 PCI Ringnode (BM)"
ProductHardwareMSMDGMPPCMCIATitle  = "Madge Smart 16/4 PCMCIA Ringnode"

ProductHardwareMSMDGMPISADescription   = "Madge Smart 16/4 AT Ringnode"
ProductHardwareMSMDGMPATPDescription   = "Madge Smart 16/4 AT Plus Ringnode"
ProductHardwareMSMDGMPISACDescription  = "Madge Smart 16/4 ISA Client Ringnode"
ProductHardwareMSMDGMPISACPDescription = "Madge Smart 16/4 ISA Client Plus Ringnode"
ProductHardwareMSMDGMPPCDescription    = "Madge Smart 16/4 PC Ringnode"
ProductHardwareMSMDGMPEISADescription  = "Madge Smart 16/4 EISA Ringnode"
ProductHardwareMSMDGMPMCADescription   = "Madge Smart 16/4 MC Ringnode"
ProductHardwareMSMDGMPMC32Description  = "Madge Smart 16/4 MC32 Ringnode"
ProductHardwareMSMDGMPSM16Description  = "Madge Smart 16 Ringnode"
ProductHardwareMSMDGMPPNPDescription   = "Madge Smart 16/4 ISA Client PnP Ringnode"
ProductHardwareMSMDGMPPCIDescription   = "Madge Smart 16/4 PCI Ringnode"
ProductHardwareMSMDGMPPCIBMDescription = "Madge Smart 16/4 PCI Ringnode (BM)"
ProductHardwareMSMDGMPPCMCIADescription   = "Madge Smart 16/4 PCMCIA Ringnode"

;
; Ring speed selection.
;

SpeedUserListMSMDGMPISA    = {"Set at adapter", "Force 16 MBit/s"}
SpeedRawListMSMDGMPISA     = {0, 2}

SpeedUserListMSMDGMPATP    = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPATP     = {0, 1, 2}

SpeedUserListMSMDGMPISAC   = {"Set at adapter", "Force 16 MBit/s"}
SpeedRawListMSMDGMPISAC    = {0, 2}

SpeedUserListMSMDGMPISACP  = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPISACP   = {0, 1, 2}

SpeedUserListMSMDGMPPC     = {"Set at adapter", "Force 16 MBit/s"}
SpeedRawListMSMDGMPPC      = {0, 2}

SpeedUserListMSMDGMPEISA   = {"Set at adapter"}
SpeedRawListMSMDGMPEISA    = {0}

SpeedUserListMSMDGMPMCA    = {"Set at adapter"}
SpeedRawListMSMDGMPMCA     = {0}

SpeedUserListMSMDGMPMC32   = {"Set at adapter"}
SpeedRawListMSMDGMPMC32    = {0}

SpeedUserListMSMDGMPSM16   = {"Always 16 MBit/s"}
SpeedRawListMSMDGMPSM16    = {0}

SpeedUserListMSMDGMPPNP    = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPPNP     = {0, 1, 2}

SpeedUserListMSMDGMPPCI    = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPPCI     = {0, 1, 2}

SpeedUserListMSMDGMPPCIBM  = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPPCIBM   = {0, 1, 2}

SpeedUserListMSMDGMPPCMCIA = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPPCMCIA  = {0, 1, 2}

;
; Adapter types.
;

AdapterTypeFlagMSMDGMPISA    = 100
AdapterTypeFlagMSMDGMPATP    = 100
AdapterTypeFlagMSMDGMPISAC   = 100
AdapterTypeFlagMSMDGMPISACP  = 100
AdapterTypeFlagMSMDGMPPC     = 100
AdapterTypeFlagMSMDGMPEISA   = 500
AdapterTypeFlagMSMDGMPMCA    = 600
AdapterTypeFlagMSMDGMPMC32   = 600
AdapterTypeFlagMSMDGMPSM16   = 400
AdapterTypeFlagMSMDGMPPNP    = 300
AdapterTypeFlagMSMDGMPPCI    = 700
AdapterTypeFlagMSMDGMPPCIBM  = 700
AdapterTypeFlagMSMDGMPPCMCIA = 200

;
; Messages.
;

CANNOT_FIND_ANY_CARD = "Cannot find a Madge Smart Ringnode in the machine. "+
                       "If you are certain that a Madge Smart Ringode is "+
                       "present then try choosing the adapter type "+
                       "instead of automatic installation. Please note "+
                       "that EISA and MCA adapters will only be found if "+
                       "the EISA configuration utility or PS/2 reference "+
                       "diskette respectively have been used to configure "+
                       "the adapter. Also not that automated installation "+
                       "will not find PCI adapters."

TRIMMED_MFS = "WARNING: The maximum frame size at 16Mbps is 17839 bytes"+
	      "  and you have specified a value greater than that. This"+
	      "  value has been reduced to 17839 for you. If you are in"+
	      "  fact running at 4Mbps, the maximum frame size is 4472,"+
	      "  but do not worry -  the driver will automatically  set"+
	      "  the correct value, and write it to the Event Log."

ShellCodeErrorTitle = "Error: "$(FunctionTitle)
ShellCodeErrorText  = "Shell Code Error"

ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

; ---------------------------------------------------------------------
; Language dependant general dialog constants.
; ---------------------------------------------------------------------

[DialogConstantsENG]

;
; Common button names, etc.
;

Help        = "&Help"
Exit        = "&Cancel"
OK          = "&OK"
Continue    = "C&ontinue"
Cancel      = "C&ancel"
HelpContext = ""

OldValueTitleInstall   = "Current hardware settings"
OldValueTitleConfigure = "Currently configured settings"

ConsultHelp = "Consult help before changing the settings below"

; -----------------------------------------------------------------------
; Language depentant input dialog constants.
; -----------------------------------------------------------------------

[FileDependentDlgENG]

DlgType     = "RadioCombination"
DlgTemplate = $(Option)

Caption = $(FunctionTitle)

Combo1Label = "&IRQ Level:"
Combo2Label = "I/O &Location:"
Combo3Label = "&Transfer method:"
Combo4Label = "Rx/Tx &Buffers:"
Combo5Label = "Traffic &Statistics Gathering:"
Combo6Label = "Please choose a Madge adapter to install"
Combo7Label = "Number of processors in &PC:"
Combo8Label = "Slot &Number:"
Combo9Label = "&Ring Speed:"

PciCombo8Label = "PCI &Device ID:"

Combo1List = $(IrqList)
Combo1Out  = $(IrqNumber)

Combo2List = $(IoList)
Combo2Out  = $(IoLocation)

Combo3List = $(DmaList)
Combo3Out  = $(DmaChannel)

Combo4List = $(RxTxUserList)
Combo4Out  = $(RxTxSlots)

Combo5List = $(StatsUserList)
Combo5Out  = $(StatsFlag)

Combo6List = $(AdapterDescList)
Combo6Out  = $(AdapterType)

Combo7List = $(MpList)
Combo7Out  = $(MpFlag)

Combo8List = $(SlotList)
Combo8Out  = $(SlotNumber)

Combo9List = $(SpeedUserList)
Combo9Out  = $(SpeedFlag)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List, Combo4List, Combo5List, Combo6List, Combo7List, Combo8List, Combo9List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out, Combo4Out, Combo5Out, Combo6Out, Combo7Out, Combo8Out, Combo9Out}

Edit1Label  = "Max&FrameSize:"
Edit2Label  = "&LAA:"
EditTextIn  = {$(MaxFrameSize), $(LAA)}
EditTextLim = {5,17}
EditTextOut = {}

CBOptionsGreyed = {}
NotifyFields = {NO, NO, NO, NO, NO, NO, NO, NO}

HelpContext = $(MadgeHelpId$(Option))

AdapterTitle = #(OptionsText$(!STF_LANGUAGE),$(Option),1)

#####oemnadam.inf i386
[LanguagesSupported]
    ENG
[OptionsTextENG]
    AM1500T = "Advanced Micro Devices AM2100/AM1500T Adapter"
    AM1500T1 = "Novell/Anthem NE1500T Adapter"
    AM1500T2 = "Novell/Anthem NE2100 Adapter"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionAM1500TTitle   = "AMD AM2100/AM1500T Adapter Setup"
FunctionAM1500T1Title   = "Novell/Anthem NE1500T Adapter Setup"
FunctionAM1500T2Title   = "Novell/Anthem NE2100 Adapter Setup"
ProductSoftwareAM1500TDescription       = "AMD AM2100/AM1500T Driver"
ProductSoftwareAM1500T1Description      = "Novell/Anthem NE1500T Driver"
ProductSoftwareAM1500T2Description      = "Novell/Anthem NE2100 Driver"
ProductHardwareAM1500TDescription       = "AMD AM2100/AM1500T Adapter"
ProductHardwareAM1500T1Description      = "Novell/Anthem NE1500T Adapter"
ProductHardwareAM1500T2Description      = "Novell/Anthem NE2100 Adapter"
ProductSoftwareAM1500TTitle     = "AMD Driver"
ProductSoftwareAM1500T1Title    = "Novell/Anthem NE1500T Driver"
ProductSoftwareAM1500T2Title    = "Novell/Anthem NE2100 Driver"
ProductHardwareAM1500TTitle     = "AMD AM2100/AM1500T Adapter"
ProductHardwareAM1500T1Title    = "Novell/Anthem NE1500T Adapter"
ProductHardwareAM1500T2Title    = "Novell/Anthem NE2100 Adapter"
ShellCodeErrorTitle     = "Error: "$(Function$(Option)Title)
ShellCodeErrorText      = "Shell Code Error."
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
DlgType = "MultiCombo"
DlgTemplate = "WD"
Caption = $(Function$(Option)Title)
Combo1Label = "&IRQ Level:"
Combo2Label = "&DMA Channel:"
Combo3Label = "I/&O Port Address:"
Combo1List = $(IRQ_List)
Combo1Out  = $(IRQLevel)
Combo2List = $(DMAChannelList)
Combo2Out  = $(DMAChannel)
Combo3List = $(IOBaseAddressHexList)
Combo3Out  = $(IOBaseAddress)
ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}
EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO, NO}
HelpContext = $(!IDH_DB_OEMNADAM_INS)

=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\inf\beta\usa_net.txt ===
#####oemnadso.inf mips
[LanguagesSupported]
    ENG


;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SONIC      = "ARC Built-in Ethernet Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "ARC Built-in Ethernet Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "ARC Built-in Ethernet Adapter Driver"
;
; Hardware
;
OptionList     = ^(Options, 1)
OptionTextList = ^(OptionsTextENG, 1)

ProductHardwareDescription      = *($(OptionTextList), ~($(OptionList), $(Option)))

ProductSoftwareTitle    = "ARC Built-in Ethernet Adapter Driver"
ProductHardwareSONICTitle       = "ARC Built-in Ethernet Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for sonic
;

[Warning1ENG]
Error = "No configuration is required for this adapter card."

#####oemnadim.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    EE16MC     = "Intel Ether Express MCA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Intel Ether Express MCA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Intel Ether Express MCA Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Intel Ether Express MCA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Intel Ether Express MCA Adapter Driver"
ProductHardwareTitle    = "Intel Ether Express MCA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;

#####oemnadem.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNKMC     = "3Com 3C523 Etherlink/MC Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "3Com 3C523 Etherlink/MC Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com 3C523 Etherlink/MC Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "3Com 3C523 Etherlink/MC Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "3Com 3C523 Etherlink/MC Adapter Driver"
ProductHardwareTitle    = "3Com 3C523 Etherlink/MC Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;
#####oemnadtm.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    IBMTOKMC     = "IBM Token Ring 4/16 Adapter /A"
    IBMTOKA      = "IBM Token Ring Adapter /A"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "IBM Token Ring Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "IBM Token Ring Adapter Driver"
;
; Hardware
;
ProductHardwareIBMTOKADescription      = "IBM Token Ring Adapter /A"
ProductHardwareIBMTOKMCDescription     = "IBM Token Ring 4/16 Adapter /A"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "IBM Token Ring Adapter Driver"
ProductHardwareIBMTOKATitle     = "IBM Token Ring Adapter /A"
ProductHardwareIBMTOKMCTitle    = "IBM Token Ring 4/16 Adapter /A"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Edit1Label = "&Network Address:"

;no translation needed after this

DlgType = "Edit"
DlgTemplate = "NETWORK_NUMBER"
Caption = $(FunctionTitle)

HelpContext = $(!IDH_DB_OEMNADTM_INS)

EditTextLim = 17
EditTextIn  = $(NetworkAddress)
EditFocus   = "ALL"
RCCtlFocusOn = 403

#####oemnadum.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    UBPS     = "Ungermann-Bass Ethernet NIUps Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Ungermann-Bass Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Ungermann-Bass Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Ungermann-Bass Ethernet NIUps Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Ungermann-Bass Driver"
ProductHardwareTitle    = "Ungermann-Bass Ethernet NIUps Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;

#####oemnadwm.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    WD8003EA = "SMC (WD) 8003E /A"
    WD8003WA = "SMC (WD) 8003W /A"
    WD8013WPA = "SMC (WD) 8013WP /A"
    WD8013EPA = "SMC (WD) 8013EP /A"

;  Disable options
;    WD8003EA = "SMC (WD) 8003E /A"
;    WD8003SA = "SMC (WD) 8003S /A"
;    WD8003WA = "SMC (WD) 8003W /A"
;    WD8013WA = "SMC (WD) 8013W /A"
;    WD8115TRA = "SMC (WD) 8115 /A"
;    BISTOR003EA = "SMC (WD) BISTOR003EA /A"
;    BISTOR013EA = "SMC (WD) BISTOR013EA /A"
;    BISTOR013WA = "SMC (WD) BISTOR013WA /A"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
; Product Info
;
FunctionTitle   = "SMC (WD) "$(Option)" Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "SMC (WD) Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "SMC (WD) "$(Option)" Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "SMC (WD) Adapter Driver"
ProductHardwareTitle    = "SMC (WD) "$(Option)" Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;

#####oemnxpxn.inf all
;------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
;       This lists the languages supported by this file.
;       If you add other languages to this list, you must
;       also add the appropriate text sections for the new
;       language
;------------------------------------------------------------------
[LanguagesSupported]
    ENG

;-------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
;
;       These are the text strings used to identify the options to
;       the user.  There should be a header and entry for every
;       language listed in the "LanguagesSupported" section.
;-------------------------------------------------------------------
[OptionsTextENG]
    MCSXNS     = "MCS XNS Network Transport"

;--------------------------------------------------------------------
;       Language Dependent Dialog Constants
;--------------------------------------------------------------------
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "MCS XNS Setup"
ProductMCSXNSDescription     = "MCS XNS System Driver"
ProductUBNBDescription   = "MCS Ungermann-Bass NetBIOS System Driver"
ProductMCSXNSDisplayName = "MCS XNS Network Transport"
ProductMCSXNSTitle      = "MCS XNS Network Transport"
ProductMCSXNSSYSDisplayName = "McsXnssys"
ProductMCSXNSSYSTitle   = "MCS XNS Network Transport Driver"
ProductUBNBDisplayName = "MCS Ungermann-Bass NetBIOS Transport"
ProductUBNBTitle        = "MCS Ungermann-Bass NetBIOS Transport"
ProductUBNBSYSDisplayName = "Ubnbsys"
ProductUBNBSYSTitle      = "MCS Ungermann-Bass NetBIOS Transport Driver"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[FileDependentDlgENG]
;
;--- No UI for McsXns
;

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlg]
STF_MB_TITLE = "Information Message"
; no translation needed for dlgtype
DlgType = "MessageBox"
STF_MB_TEXT  = $(InfoMsgText)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlgCantConfigure]
InfoMsgText = "The MCS XNS service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click  OK.  You will then have the opportunity to configure the adapters."

;--------------------------------------------------------------------
;       Get the string to use while doing the install
;--------------------------------------------------------------------
[Billboard1ENG]
Status = "Installing MCS XNS/UB and related services..."


#####oemnadnp.inf all
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NPEISA     = "Network Peripherals FDDI, EISA"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Network Peripherals FDDI EISA Setup"
;
; Software
;
ProductSoftwareDescription      = "Network Peripherals FDDI EISA Driver"
;
; Hardware
;
ProductHardwareDescription      = "Network Peripherals FDDI EISA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Network Peripherals FDDI, EISA Driver"
ProductHardwareTitle    = "Network Peripherals FDDI Eisa Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for EISA
;

#####nbinfo.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NETBIOS     = "NETBIOS provider"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


ShellCodeErrorTitle     = "Error: NETBIOS Provider"
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]


#####ncpashel.inf all
;**************************************************************************
;  Language Support
;**************************************************************************
[LanguageID]
   ENG

[LanguageTextENG]
   "English (United States)"

;**************************************************************************
; PROGRESS GUAGE VARIABLES: to support file copy operations.
;**************************************************************************

[ProgressCopyENG]
    ProCaption   = "Windows NT Networking Setup"
    ProCancel    = "Cancel"
    ProCancelMsg = "Windows NT is not correctly installed.  Are you sure you want "+
                   "to cancel copying files?"
    ProCancelCap = "Setup Message"
    ProText1     = "Copying:"
    ProText2     = "To:"

    PlatformID_I386 = I386
    PlatformID_Mips = Mips
    PlatformID_PPC  = ppc

;----------------------------------------------
; FATAL ERROR DIALOG
;----------------------------------------------
[FatalDlgENG]
STF_MB_TITLE = "Setup Message"
; no translation needed after this
DlgType = "MessageBox"
STF_MB_TEXT  = $(Error)
STF_MB_TYPE  = 1
STF_MB_ICON  = 3
STF_MB_DEF   = 1

;----------------------------------------------
; FATAL ERRORS
;----------------------------------------------

[FatalError1ENG]
Error = "Initialization failed"

[FatalError2ENG]
Error = "No INF file name given (NTN_Infname)"

[FatalError3ENG]
Error = "Invocation of INF file "$(!NTN_Infname)" failed"

;
;  These values are based upon SHELL_CODE_OK, SHELL_CODE_NO_SUCH_INF, etc.
;
[ShellError1ENG]
Error = "INF file "$(!NTN_Infname)" does not exist"

[ShellError2ENG]
Error = "INF file "$(!NTN_Infname)" does not have a section named "$(!NTN_InfSection)

[ShellError3ENG]
Error = "INF file "$(!NTN_Infname)", section "$(!NTN_InfSection)" has syntax errors"


;-----------------------------------------------------------------------
;
; ROUTINE:      DoAskOemsetupSource
;
; DESCRIPTION:  This routine prompts the source of OEMSETUP.INF
;
; INPUTS:       $0:  Current Src
;
; OUTPUTS:      $R0: STATUS:   STATUS_SUCCESSFUL |
;                              STATUS_USERCANCEL |
;                              STATUS_FAILED
;
;               $R1: Diskette Src
;
;               $R2: Drive to Free or "" if none
;
;               $R3: Actual string returned from dialog
;
;------------------------------------------------------------------------

[DoAskUpgradeSrcDlgTextENG]
    DlgText        = "Please enter the full path for the upgrade/update "+
                     "OEMSETUP.INF file. Then choose Continue."

[IncorrectOemsetupDiskENG]
    ErrorText      = "Update aborted. The OEMSETUP.INF does not support upgrade for the specified component."


#####netdtect.inf all
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NCDETECT = "Netcard Auto-detection Driver and DLLs"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Netcard Auto-detection Driver Setup"
;
; Software
;
ProductSoftwareTitle = "Netcard Auto-detection Driver"
ProductVersion = "1.0"
ServiceDisplayName = "NetDetect"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI; sigh.
;

#####oemnadd1.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DEC100     = "DEC EtherWORKS LC Adapter"
    DEC101     = "DEC EtherWORKS Turbo/LC Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitleDEC100   = "DEC EtherWORKS LC Adapter Card Setup"
FunctionTitleDEC101   = "DEC EtherWORKS Turbo/LC Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "DEC Lance Adapter Driver"
;
; Hardware
;
ProductHardwareDEC100Description        = "DEC EtherWORKS LC Adapter"
ProductHardwareDEC101Description        = "DEC EtherWORKS Turbo/LC Adapter"
ProductSoftwareTitle    = "DEC Lance Adapter Driver"
ProductHardwareDEC100Title      = "DEC EtherWORKS LC Adapter"
ProductHardwareDEC101Title      = "DEC EtherWORKS Turbo/LC Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle$(Option))
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Label1 = "&IRQ Level:"
Label2 = "&Memory Base Address:"
Group1 = "I/O Port Base Address"

Radio1 = "&Primary"
Radio2 = "&Secondary"

; no translation need after this
DlgType = "RadioCombination"
DlgTemplate = "DEC_SETUP"
Caption = $(FunctionTitle$(Option))

CBOptionGreyed = {}
RadioOptionGreyed = {}

RadioIn = {$(IOBaseChoice)}

Combo1List = $(IRQ_List)
Combo1Out  = $(IRQLevel)

Combo2List = $(MemBaseAddrHexList)
Combo2Out  = $(MemBaseAddrHex)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADD1_INS)

#####oemnadd2.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DECETHERWORKSTURBO     = "DEC EtherWORKS Turbo Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

;
; Product Info
;
FunctionTitle   = "DEC EtherWORKS Turbo Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "DEC Lance Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "DEC EtherWORKS Turbo Adapter"
ProductSoftwareTitle    = "DEC Lance Adapter Driver"
ProductHardwareTitle    = "DEC EtherWORKS Turbo Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Label1 = "&IRQ Level:"
Label2 = "&Memory Base Address:"
Group1 = "I/O Port Base Address"

Radio1 = "&Primary"
Radio2 = "&Secondary"

; no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "DEC_SETUP"
Caption = $(FunctionTitle)

CBOptionGreyed = {}
RadioOptionGreyed = {}

RadioIn = {$(IOBaseChoice)}

Combo1List = $(IRQ_List)
Combo1Out  = $(IRQLevel)

Combo2List = $(MemBaseAddrHexList)
Combo2Out  = $(MemBaseAddrHex)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADD2_INS)

#####oemnadd4.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DEC422     = "DEC EtherWORKS Turbo EISA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "DEC EtherWORKS Turbo EISA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "DEC Lance Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "DEC EtherWORKS Turbo EISA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ProductSoftwareTitle    = "DEC Lance Adapter Driver"
ProductHardwareTitle    = "DEC EtherWORKS Turbo EISA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for EISA
;

#####oemnadde.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DECSTAT     = "DEC Turbo Channel Ethernet Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "DEC Turbo Channel Setup"
;
; Software
;
ProductSoftwareDescription      = "DEC Lance Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "DEC Turbo Channel Ethernet Adapter"

ProductSoftwareTitle    = "DEC Lance Adapter Driver"
ProductHardwareTitle    = "DEC Turbo Channel Ethernet Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[DecstationDlgENG]
Label1 = "&Slot Number:"

;no translation needed after this

DlgType = "MultiCombo"
DlgTemplate = "SINGLE_COMBO"
Caption = $(FunctionTitle)

Combo1List = $(SlotList)
Combo1Out  = $(SlotNum)

ComboListItemsIn  = {Combo1List}
ComboListItemsOut = {Combo1Out}

HelpContext = $(!IDH_DB_OEMNADDE_INS)

#####oemnaddi.inf all

[OptionsTextENG]
    DATAFIREU     = "Digi DataFire - ISA1U Adapter"
    DATAFIREST    = "Digi DataFire - ISA1S/T Adapter"
    DATAFIRE4ST   = "Digi DataFire - ISA4S/T Adapter"
    PCIMACISA     = "Digi PCIMAC - ISA Adapter"
    PCIMAC4       = "Digi PCIMAC/4 Adapter"

[OptionsTextMCAENG]
    PCIMACMC      = "Digi PCIMAC - MC Adapter"

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

;
; Product Info
;
FunctionTitle   = "Digi ISDN Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Digi ISDN Adapter Driver"
;
; Hardware
;
ProductHardwarePCIMACDescription        = "Digi ISDN Adapter"

[InvokeRasDlgENG]
InvokeRasSetupMsg = "Digi ISDN setup is complete. "+
                    "Remote Access Services (RAS) will now be installed. "+
                    "Please configure one or more ISDN ports in RAS setup "+
                    "to enable you to use RAS over ISDN."
InvokeRasConfigMsg = "Digi ISDN setup is complete. "+
                     "Remote Access Services (RAS) setup will now be invoked. "+
                     "Please configure one or more ISDN ports in RAS setup "+
                     "to enable you to use RAS over ISDN."
InvokeRasError =  "Digi ISDN setup encountered an error while invoking "+
                  "the RAS setup INF file (OEMNSVRA.INF). "+
                  "Please make sure that the file is present in the system32 "+
                  "directory and is the proper file."
InvokeUserInstallRasMsg = "Digi ISDN setup is complete. "+
                    "Remote Access Services (RAS) should be installed and "+
                    "one or more ISDN ports configured in RAS setup. "

#####oemnaddp.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DECPC     = "DEC EtherWORKS DEPCA"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "DEC EtherWORKS DEPCA Setup"
;
; Software
;
ProductSoftwareDescription      = "DEC Lance Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "DEC EtherWORKS DEPCA"
ProductSoftwareTitle    = "DEC Lance Adapter Driver"
ProductHardwareTitle    = "DEC EtherWORKS DEPCA"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

#####oemnadds.inf all

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DigiBoardCX     = "Digi C/X Adapter"
    DigiBoardXem    = "Digi PC/Xem Adapter"
    DigiBoard8r     = "Digi AccelePort 8 Adapter"
    IBM8r           = "IBM 8-Port Async, EIA-232 (ISA) Adapter"
    DigiBoard8i     = "Digi PC/8i Adapter"
    DigiBoard16i    = "Digi PC/16i Adapter"
    DigiBoard2Port  = "Digi PC/2e (8K) Adapter"
    DigiBoard4Port  = "Digi PC/4e (8K) Adapter"
    DigiBoard8Port  = "Digi PC/8e (8K) Adapter"
    DigiBoard4e     = "Digi PC/4e Adapter"
    DigiBoard8e     = "Digi PC/8e Adapter"
    DigiBoard16e    = "Digi PC/16e Adapter"
    DigiBoardEPC    = "Digi EPC Adapter"
    StarGateClusStar = "Digi/StarGate ClusStar Adapter"

[OptionsTextMCAENG]
    DigiBoardCX     = "Digi MC C/X Adapter"
    DigiBoardXem    = "Digi MC/Xem Adapter"
    DigiBoard8r     = "Digi MC AccelePort 8 Adapter"
    DigiBoard4i     = "Digi MC/4i Adapter"
    DigiBoard8i     = "Digi MC/8i Adapter"
    DigiBoard16i    = "Digi MC/16i Adapter"
    DigiBoard2Port  = "Digi MC/2e (8K) Adapter"
    DigiBoard4Port  = "Digi MC/4e (8K) Adapter"
    DigiBoard8Port  = "Digi MC/8e (8K) Adapter"
    DigiBoardEPC    = "Digi MC EPC Adapter"
    StarGateClusStar = "Digi/StarGate MC ClusStar Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
    ProCaption   = $(ManufacturerDisplayName)" "$(AdapterTitle)" Adapter Setup"
    ProCancel    = "Cance&l"
    ProCancelMsg = $(ManufacturerDisplayName)" Adapters and/or Drivers are not correctly installed. "+
                   "Are you sure you want to cancel copying files?"
    ProCancelCap = $(ProCaption)
    ProText1     = "Copying:"
    ProText2     = "To:"
    Error         = "Unable to determine proper source disk location; copy cannot be performed."
;
; Product Info
;
    FunctionTitle = $(ProCaption)
;
; Software
;
    ProductSoftwareDescription          = $(ManufacturerDisplayName)" FEP 5 Adapter Driver"
    ProductSoftwareDescriptionHdwDriver = $(ManufacturerDisplayName)" "$(AdapterTitle)" Miniport Driver"
    ProductSoftwareTitle    = $(ManufacturerDisplayName)" FEP 5 Driver"
    ProductSoftwareTitleHdwDriver = $(ManufacturerDisplayName)" "$(AdapterTitle)" Miniport Driver"

;
; Configuration Information
;
   ConfigurationTitle = $(ProCaption)
   IRQDisableLabel = "Disabled"

;
; Hardware
;
    ProductHardwareDescription      = $(ManufacturerDisplayName)" "$(AdapterTitle)" Adapter"
    ProductHardwareTitle        = $(ManufacturerDisplayName)" "$(AdapterTitle)" Adapter"

[DialogConstantsENG]
;
; Common button names, etc.
;
    Help        = "&Help"
    Exit        = "E&xit"
    OK          = "OK"
    HelpContext = ""
    Continue    = "C&ontinue"
    Cancel      = "C&ancel"

[UpdatingConfigurationENG]
    UpdatingConfiguration      = "Updating new configuration..."

[AbortMessageENG]
  AbortText  =  "Aborting "$(ManufacturerDisplayName)" Setup. Please reboot the system "+
                "to fix the problem."


#####oemnade1.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNK16     = "3Com Etherlink16/EtherLink16 TP Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "3Com Etherlink 16 Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com Etherlink16/Etherlink16 TP Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "3Com Etherlink16/Etherlink16 TP Adapter"
ProductSoftwareTitle    = "3Com Etherlink16/Etherlink16 TP Adapter Driver"
ProductHardwareTitle    = "3Com Etherlink16/Etherlink16 TP Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Caption = $(FunctionTitle)

Combo1Label = "&IRQ Level:"
Combo2Label = "I/O &Port Address:"
Label1 = "Transceiver Type"
Radio1 = "&External"
Radio2 = "O&n Board"
CheckBox1 = "&Zero Wait State"
Combo3Label = "&Memory Address:"
Combo4Label = "Memo&ry Size:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "ELNK_16"

Combo1Out  = $(IRQ_Level)
Combo1List = $(IRQ_List)
Combo2List = $(IOADDR_Hex_List)
Combo2Out  = $(IOADDR_Hex_Value)
Combo3List = $(MemAddrHexList)
Combo3Out  = $(MemAddrHexValue)
Combo4List = $(MemAddrLengthList)
Combo4Out  = $(MemAddrLength)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List, Combo4List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out, Combo4Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO, NO, NO}

HelpContext = $(!IDH_DB_OEMNADE1_INS)

#####oemnade2.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNKII     = "3Com Etherlink II Adapter (also II/16 and II/16 TP)"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "3Com Etherlink II Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com Etherlink II Adapter Driver"
;
; Hardware
;
ProductHardwareELNKIIDescription        = "3Com Etherlink II Adapter"
ProductSoftwareTitle    = "3Com Etherlink II Adapter Driver"
ProductHardwareELNKIITitle = "3Com Etherlink II Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[MemoryMappedChoicesENG]

Map_1 = 1, "ON"
Map_2 = 0, "OFF"


[FileDependentDlgENG]

DlgText = "Please select values for the following fields:"

Combo1Label = "&IRQ Level:"
Combo2Label = "I/O &Port Address:"
CheckBox1   = "&Memory Mapped"
Label1 = "Transceiver Type"

Radio1 = "&External"
Radio2 = "O&n Board"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "ELNK_II"
Caption = $(FunctionTitle)

Combo1List = $(IRQ_List)
Combo1Out  = $(IRQ_Level)
Combo2List = $(IOADDR_Hex_List)
Combo2Out  = $(IOADDR_Hex_Value)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADE2_INS)

#####oemnadin.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    EE16     = "Intel Ether Express 16 LAN Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Intel Ether Express 16 LAN Adapter Setup"
;
; Software
;
ProductSoftwareDescription      = "Intel Ether Express 16 LAN Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Intel Ether Express 16 LAN Adapter"
ProductSoftwareTitle    = "Intel Ether Express 16 LAN Adapter Driver"
ProductHardwareTitle    = "Intel Ether Express 16 LAN Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

IOReadyListShort = { "Late", "Never" }
IOReadyList      = { "Early", "Late", "Never" }
TransceiverList  = {"Thick Net (AUI/DIX)","Thin Net (BNC/COAX)","Twisted-Pair (TPE)"}

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------

[FileDependentDlgENG]
Combo1Label = "&IRQ Level:"
Combo2Label = "I/&O Port Address:"
Combo3Label = "I/O &Channel Ready:"
Combo4Label = "&Transceiver Type:"

EarlyWarning = "Use of the Early setting may cause system failure in some machines. "+
               "Are you sure you wish to continue?"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "EE_16"
Caption = $(FunctionTitle)

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOBaseAddrHexList)
Combo2Out  = $(IOBaseAddress)
Combo3List = $(IOReadyListDisplay)
Combo3Out  = $(IOReadyValue)
Combo4List = $(TransceiverList)
Combo4Out  = $(TransceiverValue)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List, Combo4List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out, Combo4Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADIN_INS)


#####oemnadep.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    IEEPRO = "Intel EtherExpress PRO Ethernet Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle = "Intel EtherExpress PRO Ethernet Adapter Setup"
;
; Software
;
ProductSoftwareDescription = "Intel EtherExpress PRO Ethernet Driver"
;
; Hardware
;
ProductHardwareDescription = "Intel EtherExpress PRO Ethernet Adapter"

;
; Dialog Message Information
;
IRQList = {"3", "5", "9", "10", "11"}
IOReadyList = { "Early", "Late", "Never", "Auto Detect" }
IOReadyListExt = { "Early", "Late", "Never", "Auto Detect" }
TransceiverList = {"Thick Net (AUI/DIX)","Thin Net (BNC/COAX)","Twisted-Pair (TPE)","Auto Connect"}

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------

[FileDependentDlgENG]

DlgType = "RadioCombination"
DlgTemplate = "EE_16"
Caption = $(FunctionTitle)

DlgText = "Please select values for the following fields:"

Combo1Label = "&Interrupt Number:"
Combo2Label = "I/O &Port Address:"
Combo3Label = "I/O &Channel Ready:"
Combo4Label = "&Transceiver Type:"

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOAddrList)
Combo2Out  = $(IOAddrValue)
Combo3List = $(IOReadyList)
Combo3Out  = $(IOReadyValue)
Combo4List = $(TransceiverList)
Combo4Out  = $(TransceiverValue)
ComboListItemsIn  = {Combo1List, Combo2List, Combo3List, Combo4List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out, Combo4Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADEP_INS)

#####oemnadn2.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NE2000              = "Novell NE2000 Compatible Adapter"
    NE2000SOCKETEA      = "Novell NE2000 Socket EA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitleNE2000   = "Novell NE2000 Compatible Network Card Setup"
FunctionTitleNE2000SOCKETEA   = "Novell NE2000 Socket EA Network Card Setup"


;
; Software
;
ProductSoftwareNE2000Description      = "Novell NE2000 Adapter Driver"
ProductSoftwareNE2000SOCKETEADescription      = "Novell NE2000 Socket EA Adapter Driver"
;
; Hardware
;
ProductHardwareNE2000Description        = "Novell NE2000 Adapter"
ProductHardwareNE2000SOCKETEADescription        = "Novell NE2000 Socket EA Adapter"
ProductSoftwareNE2000Title    = "Novell NE2000 Adapter Driver"
ProductSoftwareNE2000SOCKETEATitle    = "Novell NE2000 Socket EA Adapter Driver"
ProductHardwareNE2000Title      = "Novell NE2000 Adapter"
ProductHardwareNE2000SOCKETEATitle      = "Novell NE2000 Socket EA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------

[FileDependentDlgENG]
Label1 = "&IRQ Level:"
Label2 = "I/O &Port Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "NE2000"
Caption =  $(FunctionTitle$(Option))

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOBaseAddrHexList)
Combo2Out  = $(IOBaseAddress)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADN2_INS)

#####oemnadne.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NE3200     = "Novell NE3200 EISA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Novell 3200 EISA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Novell 3200 Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Novell NE3200 EISA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Novell 3200 Adapter Driver"
ProductHardwareTitle    = "Novell NE3200 EISA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for EISA
;

#####oemnads1.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SONICEISA     = "Sonic, EISA"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Sonic EISA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Sonic EISA Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Sonic, EISA"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Sonic EISA Adapter Driver"
ProductHardwareTitle    = "Sonic, EISA"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for EISA
;

#####oemnadnf.inf all
[LanguagesSupported]
    ENG
[OptionsTextENG]
    CPQTOK     = "<this option is no longer supported for install>"
    BONSAI     = "COMPAQ NetFlex-2 DualPort ENET Controller"
    RODAN      = "COMPAQ NetFlex-2 DualPort TR Controller"
    NETFLX     = "COMPAQ NetFlex/NetFlex-2 ENET-TR Controller"
    DURANGO    = "COMPAQ NetFlex-2 TR Controller"
    MAPLE      = "COMPAQ 32-Bit DualSpeed Token-Ring Controller"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cance&l"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "COMPAQ NetFlex Adapter Card Setup"
ProductSoftwareDescription        = "COMPAQ ENET-TR EISA Driver"
ProductHardwareBONSAIDescription  = "COMPAQ NetFlex-2 DualPort ENET Controller"
ProductHardwareRODANDescription   = "COMPAQ NetFlex-2 DualPort TR Controller"
ProductHardwareNETFLXDescription  = "COMPAQ NetFlex/NetFlex-2 ENET-TR Controller"
ProductHardwareDURANGODescription = "COMPAQ Token-Ring Controllers"
ProductHardwareCPQTOKDescription        = "COMPAQ 32-Bit DualSpeed Token-Ring Controller (ns)"
ProductHardwareMAPLEDescription        = "COMPAQ 32-Bit DualSpeed Token-Ring Controller"
CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ProductSoftwareTitle            = "COMPAQ ENET-TR Driver"
ProductHardwareBONSAITitle      = "COMPAQ NetFlex-2 DualPort ENET Controller"
ProductHardwareRODANTitle       = "COMPAQ NetFlex-2 DualPort TR Controller"
ProductHardwareNETFLXTitle      = "COMPAQ NetFlex/NetFlex-2 ENET-TR Controller"
ProductHardwareDURANGOTitle     = "COMPAQ NetFlex-2 TR Controller"
ProductHardwareCPQTOKTitle      = "COMPAQ 32-Bit Token-Ring Controller (ns)"
ProductHardwareMAPLETitle      = "COMPAQ 32-Bit Token-Ring Controller"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
Edit1Label = "&Network Address:"

;no translation needed after this

DlgType = "Edit"
DlgTemplate = "NETWORK_NUMBER"
Caption = $(FunctionTitle)

HelpContext = $(!IDH_DB_OEMNADNF_INS)

EditTextLim = 17
EditTextIn  = $(NetworkAddress)
EditFocus   = "ALL"
RCCtlFocusOn = 403


#####oemnadp3.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    P1390     = "Proteon p139X Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Proteon p139X Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Proteon Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Proteon p139X Adapter"

ProductSoftwareTitle    = "Proteon Adapter Driver"
ProductHardwareTitle    = "Proteon p139X Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Label1 = "&IRQ Level:"
Label2 = "I/O &Port Base Address:"
Label3 = "&DMA Channel:"
Group1 = "Cable &Type"
Group2 = "Card Sp&eed"

Radio1 = "&UTP"
Radio2 = "&STP"
Edit1Label = "&Network Address:"

;no translation needed after this

Radio3 = "&4"
Radio4 = "&16"

DlgType = "RadioCombination"
DlgTemplate = "PROTEON"
Caption = $(FunctionTitle)

CBOptionGreyed = {}
RadioOptionGreyed = {}

Combo1List = $(IRQ_List)
Combo1Out  = $(IRQLevel)

Combo2List = $(IOBaseAddressList)
Combo2Out  = $(IOBaseAddress)

Combo3List = $(DMA_List)
Combo3Out  = $(DMAChannel)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}


EditTextIn = $(NetworkAddress)
EditTextLim = 17
NotifyFields = {NO, NO, NO}
RCCtlFocusOn = 403

HelpContext = $(!IDH_DB_OEMNADP3_INS)

#####oemnadp9.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    P1990     = "Proteon p199X Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Proteon p199X Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Proteon Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Proteon p199X Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductHardwareTitle    = "Proteon p199X Adapter"
ProductSoftwareTitle    = "Proteon Adapter Driver"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Group1 = "Card Speed"
Radio1 = "&4"
Radio2 = "&16"
Edit1Label = "&Network Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "IBM_TOKEN"
Caption = $(FunctionTitle)
ComboListItemsIn = {}
ComboListItemsOut = {}
EditTextLim = 17
EditTextIn = $(NetworkAddress)
Edit1Label = "&Network Address:"

HelpContext = $(!IDH_DB_OEMNADP9_INS)

EditTextLim = 17
EditTextIn  = $(NetworkAddress)
EditFocus   = "ALL"
RCCtlFocusOn = 403

#####oemnadtk.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    IBMTOK     = "IBM Token Ring (ISA/PCMCIA) Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "IBM Token Ring Adapter Card Setup"
FunctionTitle1   = "IBM Token Ring PCMCIA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "IBM Token Ring (ISA/PCMCIA) Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "IBM Token Ring (ISA/PCMCIA) Adapter"

ProductSoftwareTitle    = "IBM Token Ring Adapter (ISA/PCMCIA) Driver"
ProductHardwareTitle    = "IBM Token Ring (ISA/PCMCIA) Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Group1 = "I/O Port Base Address"
Radio1 = "&Primary"
Radio2 = "&Secondary"
Edit1Label = "&Network Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "IBM_TOKEN"
Caption = $(FunctionTitle)
ComboListItemsIn = {}
ComboListItemsOut = {}
EditTextLim = 17
EditTextIn = $(NetworkAddress)

OptionsGreyed = {}

HelpContext = $(!IDH_DB_OEMNADTK_INS)
RCCtlFocusOn = 403

[SecondDlgENG]
Group1 = "Network Speed"
HelpContext = 1
Caption = $(FunctionTitle1)
Combo1Label = "Network &Speed:"
Combo2Label = "Card &IRQ Level:"
Combo3Label = "Memory &Base:"
Combo1List = $(SpeedList)
Combo1Out = $(Token1Speed)
Combo2List = $(IRQList)
Combo2Out = $(Token1IRQVal)
Combo3List = $(MMIOList)
Combo3Out = $(Token1MMIO)
DlgType = Combination
DlgTemplate = "WD"
ComboListItemsIn = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}
CBOptionsGreyed = {}
EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO, NO}
HelpContext = 1

#####oemnadub.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    UBPC     = "Ungermann-Bass Ethernet NIUpc Adapter"
    UBPCEOTP = "Ungermann-Bass Ethernet NIUpc/EOTP Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Ungermann-Bass Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Ungermann-Bass Adapter Driver"
;
; Hardware
;
ProductHardwareUBPCDescription          = "Ungermann-Bass Ethernet NIUpc Adapter"
ProductHardwareUBPCEOTPDescription      = "Ungermann-Bass Ethernet NIUpc/EOTP Adapter"
ProductHardwareUBPSDescription          = "Ungermann-Bass Ethernet NIUps Adapter"

ProductSoftwareTitle    = "Ungermann-Bass Driver"
ProductHardwareUBPCTitle        = "Ungermann-Bass Ethernet NIUpc Adapter"
ProductHardwareUBPCEOTPTitle    = "Ungermann-Bass Ethernet NIUpc/EOTP Adapter"
ProductHardwareUBPSTitle        = "Ungermann-Bass Ethernet NIUps Adapter"

IRQList  = ^(IRQChoices$(Option), 1)
IRQValues = ^(IRQChoices$(Option), 2)
IOBaseAddrList = ^(IOBaseAddrChoices, 1)
IOBaseAddrValues = ^(IOBaseAddrChoices, 2)
MemMappedWndAddrList = ^(MemMappedWndBaseAddrChoices$(Option), 1)
MemMappedWndAddrValues = ^(MemMappedWndBaseAddrChoices$(Option), 2)

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Label1 = "&Interrupt Number:"
Label2 = "I/O &Port Base Addr:"
Label3 = "&Memory Address:"

;no translation needed after this

DlgType = "Combination"
DlgTemplate = "UBNDIS"
Caption = $(FunctionTitle)

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOBaseAddrList)
Combo2Out  = $(IOBaseAddrValue)
Combo3List = $(MemMappedWndAddrList)
Combo3Out  = $(MemMappedWndAddrValue)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}

EditTextLim = ""
CBOptionsGreyed = {}

HelpContext = $(!IDH_DB_OEMNADUB_INS)

#####oemnadwd.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SMCISA = "SMC (WD) EtherCard"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "SMC (WD) ISA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "SMC (WD) Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "SMC (WD) ISA Adapter"

ProductSoftwareTitle    = "SMC (WD) Adapter Driver"
ProductHardwareTitle    = "SMC (WD) ISA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Combo1Label = "&IRQ Level:"
Combo2Label = "&Memory Base Address:"
Combo3Label = "I/&O Port Address:"

;no translation needed after this

DlgType = "MultiCombo"
DlgTemplate = "WD"
Caption = $(FunctionTitle)

Combo1List = $(IRQ_List)
Combo1Out  = $(IRQLevel)

Combo2List = $(WinBaseAddressHexList)
Combo2Out  = $(WinBaseAddress)

Combo3List = $(IOBaseAddressHexList)
Combo3Out  = $(IOBaseAddress)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}

EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO, NO}

HelpContext = $(!IDH_DB_OEMNADWD_INS)

#####oemnsvf1.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG
;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    FTPD     = "FTP Server"
;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "FTP Setup"
;
; Software
;
ProductSoftwareDescription      = "FTP Server"
;
; The user needs to install Microsoft TCP/IP before install FTP.
; If TCPIP does not exist in the registry, the inf file will popup this
; message and exit.
;
ProductSoftwareDisplayName      = "FTP Server"
ProductSoftwareTitle            = "FTP Server"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DefaultsENG]
AnonymousUsername = "guest"

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for FTP
;

#####oemnsvir.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    IPRIP = "RIP for Internet Protocol"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductIPRIPTitle       = "RIP for Internet Protocol"
ProductIPRIPDescription = "Routing Information Protocol. Enables a router to exchange routing information with other routers on an IP LAN."
ProductIPRIPDisplayName = "RIP for Internet Protocol"

[VerExistsENG]
    Ver   = " version "
    Text1 = " is already installed."

[InUseENG]
Error = "RIP for Internet Protocol is currently in use by other network protocols. Please remove all related services first."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"


#####oemnsvrr.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NWLNKRIP = "RIP for NwLink IPX/SPX compatible transport"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductNWLNKRIPTitle       = "RIP for NWLink IPX"
ProductNWLNKRIPDescription = "RIP for NWLink IPX"
ProductNWLNKRIPDisplayName = "RIP for NWLink IPX"

[VerExistsENG]
    Ver   = " version "
    Text1 = " is already installed. "

[InUseENG]
Error = "RIP for NWLink IPX is currently in use by other network protocols. Please remove all related services first."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[EnableNetbiosRoutingDlgENG]
DlgType = "MessageBox"
STF_MB_TITLE = "RIP for NWLink IPX Configuration"
STF_MB_TYPE  = 3
STF_MB_ICON  = 2
STF_MB_DEF   = 2

Enabled  = "NetBIOS Broadcast Propagation (broadcast of type 20 packets) is currently enabled. "$(!LF)+
           "If any Microsoft Windows clients use NwLink IPX to connect to this server, you must "+
           "enable this option to allow NwLink IPX to function correctly."$(!LF)+
           "Enable this option only if you understand the routing implications because it might "+
           "affect your network performance."$(!LF)$(!LF)+
           "Do you want to disable NetBIOS Broadcast Propagation?"

Disabled = "NetBIOS Broadcast Propagation (broadcast of type 20 packets) is currently disabled. "$(!LF)+
           "If any Microsoft Windows clients use NwLink IPX to connect to this server, you must "+
           "enable this option to allow NwLink IPX to function correctly."$(!LF)+
           "Enable this option only if you understand the routing implications because it might "+
           "affect your network performance."$(!LF)$(!LF)+
           "Do you want to enable NetBIOS Broadcast Propagation?"

[ConfigErrorTxtENG]
Error = "Could not open the NWLNKRIP\Parameters registry key."

#####oemnsvnb.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NETBIOS     = "NetBIOS Interface"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "NetBIOS Interface Setup"
;
; Software
;
ProductSoftwareDescription      = "Defines a software interface and naming convention for Microsoft networking."
ProductSoftwareDisplayName = "NetBIOS Interface"
ProductSoftwareTitle    = "NetBIOS Interface"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for NETBIOS
;
[InfoDlgCantConfigure]
InfoMsgTitle = "Information Message"
InfoMsgText = "The NETBIOS service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click OK."

#####oemnsvrp.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    RPCLOCATE   = "RPC Configuration"
    RPCBANYAN   = "RPC support for Banyan"

[LocatorNamesENG]
LocName1 = "Windows NT Locator"
LocName2 = "DCE Cell Directory Service"

[SecurityNamesENG]
SecName1 = "Windows NT Security Service"
SecName2 = "DCE Security Service"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Software
;
ProductSoftwareDescription      = "Remote Procedure Call service enables RPC-written programs to perform procedures on multiple computers. Includes the endpoint mapper and other RPC services."
ProductRPCTitle   = "RPC Configuration"
ProductRPCBanyanTitle   = "RPC support for Banyan"
ProductRPCBaynanSoftDescription      = "RPC support for Banyan"

RpcSrvDisplayNameRpcss   = "Remote Procedure Call (RPC) Service"
RpcSrvDisplayNameLocator = "Remote Procedure Call (RPC) Locator"
RpcSrvDisplayNameSSP     = "NT LM Security Support Provider"
RpcSuiteDisplayName      = "Remote Procedure Call Configuration"

[RPCLOCATEConstantsENG]
;
; Product Info
;
FunctionTitle   = "RPC Configuration"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[RPCBANYANConstantsENG]
;
; Product Info
;
FunctionTitle   = "RPC support for Banyan"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[RpcProviderDlgENG]
Caption = "RPC Configuration"

Edit1Label = "Network &Address:"

Combo1Label = "&Name Service Provider:"
Combo2Label = "&Security Service Provider:"
Help        = "&Help"
Continue    = "OK"
Cancel      = "Cancel"

;no translation needed after this

DlgType = Combination
DlgTemplate = "RPCPROVIDE"
EditTextIn = $(NetworkAddress)

EditFocus = "ALL"
EditTextLim = 50

Combo1List  = $(LocatorListboxNames)
Combo1Out   = $(LocatorChosenName)

Combo2List  = $(SecurityListboxNames)
Combo2Out   = $(SecurityChosenName)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

HelpContext = $(!IDH_DB_RPCLOCATE_INS)
ExitState   = "Active"
NotifyFields = { YES }

[NonFatalError1ENG]
NonFatal = "No network address was entered."

[NonFatalError2ENG]
NonFatal = "Network address ignored for Windows NT Locator."

[NonFatalError3ENG]
NonFatal = "The DCE Security Service is not installed on this computer."

#####oemnsvsv.inf all

;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SRV         = "Server"
;   XACTSRV     = "LAN Manager Translator"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Server"
;
; Software
;
ProductSRVDescription           = "Installs support for the SMB (Server Message Block) protocol, the core of Microsoft networking."
ProductXACTSRVDescription       = "Microsoft LAN Manager Translator Service"
ProductSRVDisplayName   = "Server"
ProductSRVTitle         = "Server"
ProductXACTDisplayName  = "XactSrv"
ProductSRVSRVDisplayName       = "Srv"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
GroupLabel = "Optimization:"

Radio1 = "&Minimize Memory Used"
Radio2 = "&Balance"
Radio3 = "M&aximize Throughput for File Sharing"
Radio4 = "Ma&ximize Throughput for Network Applications"

CheckBox1 = "Ma&ke Browser Broadcasts to LAN Manager 2.x Clients"

;no translation needed after this

DlgType = "RadioCombination"               ; DON'T NATIONALIZE
DlgTemplate = "LMSERVER"       ; DON'T NATIONALIZE
Caption = $(FunctionTitle)

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
ComboListItemsOut = {}

OptionsGreyed = {}

HelpContext = $(!IDH_DB_OEMNSVSV_INS)

#####oemnsvwk.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    WKSTA       = "Workstation"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

;
; Error Message
;
RemoveBrowserError = "The Browser may not be removed. Please remove the Workstation service first."
UpdateBrowserError = "You must update the Windows Workstation in order to update the Browser."

;
; Product Info
;
FunctionTitle   = "Workstation Services Setup"
;
; Software
;
ProductWKSTADescription         = "Installs the client for the SMB (Server Message Block) protocol, the core of Microsoft networking."
ProductNETLOGONDescription      = "Microsoft Network Authentication Service"
ProductALERTERDescription       = "Microsoft Alerter Service"
ProductBROWSERDescription       = "Distributed protocol required for running the Computer Browser service."
ProductMESSENGERDescription     = "Microsoft Messenger Service"
ProductRDRDescription           = "Microsoft Redirector Service"
ProductREPLDescription          = "Microsoft Directory Replicator Service"
ProductMUPDescription           = "Microsoft MUP Service"
ProviderRDRName                 = "NT Lan Manager"

ProductWKSTADisplayName = "Workstation"
ProductWKSTATitle       = "Workstation"
ProductNETLOGONDisplayName = "Net Logon"
ProductNETLOGONTitle    = "Net Logon"
ProductALERTERDisplayName = "Alerter"
ProductALERTERTitle     = "Alerter"
ProductBROWSERDisplayName = "Computer Browser"
ProductBROWSERTitle     = "Computer Browser"
ProductMESSENGERDisplayName = "Messenger"
ProductMESSENGERTitle   = "Messenger"
ProductRDRDisplayName   = "MRXSMB"
ProductRDRTitle         = "Redirector"
PruductRDRBSSDisplayName = "RDBSS"
ProductProviderName = "Microsoft Windows Network"
ProductREPLDisplayName  = "Directory Replicator"
ProductREPLTitle        = "Directory Replicator"
ProductMUPDisplayName   = "Mup"
ProductMUPTitle         = "Mup"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for workstation
;
#####oemnxpdl.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DLC     = "DLC Protocol"
    ATALK   = "AppleTalk Protocol"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "DLC Setup"
;
; Software
;
ProductSoftwareDescription      = "Data Link Control enables this computer to connect to an IBM mainframe and set up printers attached directly to network control."

ProductSoftwareDisplayName      = "DLC Protocol"
ProductSoftwareTitle    = "DLC Protocol"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for DLC
;

#####oemnxpnb.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NBF     = "NetBEUI Protocol"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "NetBEUI Protocol"
;
; Software
;
ProductSoftwareDescription      = "A nonroutable protocol designed for use in small LANs."
;
ProductSoftwareDisplayName = "NetBEUI Protocol"
ProductSoftwareTitle    = "NetBEUI Protocol"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
GroupLabel = "Optimization:"

Radio1 = "&Minimize Memory Used"
Radio2 = "&Balance"
Radio3 = "M&aximize Throughput && Connections"

;no translation needed after this

DlgType = "Radio"               ; DON'T NATIONALIZE
DlgTemplate = "NBF"             ; DON'T NATIONALIZE
Caption = $(FunctionTitle)

OptionsGreyed = {}

HelpContext = $(!IDH_DB_OEMNXPNB_INS)


#####oemnxpst.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    STREAMS = "Streams Environment"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductSTREAMSDescription       = "Enables transport drivers developed in STREAMS environments (popular on UNIX platforms) to port easily to Windows NT."
ProductSTREAMSDisplayName       = "Streams Environment"
ProductSTREAMSTitle     = "Streams Environment"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

StreamsAlreadyInstalled  = "Streams Environment is already installed in the system."
RefCountNotZeroMsg = "The Streams Environment is currently in use by other network protocols. Please removed all streams-based protocols first."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for STREAMS
;

;**************************************************************************
;
; BILLBOARD DIALOG SECTIONS
;
;**************************************************************************
[Billboard1ENG]
Status = "Installing STREAMS and related services..."

#####oemnxpnn.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    TCPIP     = "Old TCP/IP Protocol"
;   TELNET    = "Telnet"
;   NBT       = "RFC NetBIOS"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "TCP/IP Setup"
;
; Software
;
ProductTCPIPDescription         = "TCP/IP System Driver"
ProductNBTDescription           = "NBT System Driver"

ProductTCPIPDisplayName = "TCP/IP Protocol"
ProductTCPIPTitle       = "TCP/IP Protocol"

ProductTCPIPSYSDisplayName = "Tcpipsys"
ProductTCPIPSYSTitle    = "TCP/IP Network Transport Driver"

ProductNBTDisplayName   = "TCP/IP NetBIOS"
ProductNBTTitle         = "TCP/IP NetBIOS"

ProductNBTSYSDisplayName = "Nbtsys"
ProductNBTSYSTitle      = "RFC NetBIOS Driver"

ProductTELNETDisplayName = "Telnet"
ProductTELNETTitle      = "Telnet Networking Support Environment"

ProductTELNETSYSDisplayName = "Telnetsys"
ProductTELNETSYSTitle     = "Telnet Driver"

ProductLOOPDisplayName  = "Loop"
ProductLOOPTitle        = "Loop Support Environment"

ProductLMHOSTSDisplayName = "TCP/IP NetBIOS Helper"
ProductLMHOSTSTitle     = "TCP/IP NetBIOS Helper"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for TCPIP
;
;----------------------------------------------
; INFO DIALOG
;----------------------------------------------
[InfoDlg]
STF_MB_TITLE = "Information Message"

;no translation needed after this

DlgType = "MessageBox"
STF_MB_TEXT  = $(InfoMsgText)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

[InfoDlgCantConfigure]
InfoMsgText = "The TCP/IP service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click  OK.  You will then have the opportunity to configure the adapters."

;----------------------------------------------
; WARNING DIALOG
;----------------------------------------------
[WarningDlgENG]
STF_MB_TITLE = "TCP/IP Setup Warning"

;no translation needed after this

DlgType = "MessageBox"
STF_MB_TEXT  = $(Error)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

;**************************************************************************
;
; BILLBOARD DIALOG SECTIONS
;
;**************************************************************************
[Billboard1ENG]
Status = "Installing TCP/IP and related services..."

[LMHOSTDlgENG]

Caption = "Import LMHOSTS File"
Import = "&Import"

DlgText = "If you want to import an existing LMHOSTS file, enter the directory path where the file is located and choose Import. Otherwise, choose Continue."

;no translation needed after this

DlgType = "Edit"
DlgTemplate = "LMHOST"
EditTextIn = ""

HelpContext = $(!IDH_DB_LMHOST_INS)

[LMHOSTAskSourceStringsENG]
String1 = "Error processing path entered.  Please reenter the path."

String2 = "Setup requires a full path of the Windows NT distribution files.  "+
          "Please reenter the path."

String3 = "Setup failed to find a free drive to use to connect to the "+
          "server specified.  Please free up some drives and try again."

String4 = "Setup failed to connect to the server specified.  Please reenter "+
          "the path."

String5 = "You just typed in a new LMHOSTS file path. Are you sure that you want to use the default LMHOSTS file?"

#####utility.inf all
[AFDVars]
;
; AFD Software data
;
ProductAFDTitle         = "AFD Networking Support Environment"
;
; don't localize the next 3 lines
;
ProductAFDName          = "Afd"
ProductAFDImagePath     = "\SystemRoot\System32\drivers\afd.sys"
ProductAFDSvcType       = "kernelautostart"

;---------------------------------------------
;
;  Section used to build RegistryErrorList$(STF_LANGUAGE)
;
[RegistryErrorsENG]
UNABLE_ACCESS_SOFTWARE_REG,"Unable to access SOFTWARE subtree in Registry"
UNABLE_CREATE_MANUFACTURER_KEY,"Unable to create Manufacturer key in Registry"
UNABLE_OPEN_MICROSOFT_KEY,"Unable to open Microsoft subkey in Registry"
UNABLE_CREATE_PRODUCT_KEY,"Unable to create subkey in Registry for Windows NT"
UNABLE_CREATE_PRODUCT_VERSION,"Unable to create version subkey in Registry for Windows NT"
UNABLE_CREATE_NETRULES_KEY,"Unable to create a NetRules subkey in Registry"
UNABLE_OPEN_HARDWARE_SECTION,"Unable to open HARDWARE subkey in Registry"
UNABLE_OPEN_NETWORKCARD_SECTION,"Unable to open NetworkCards subkey in Registry"
UNABLE_OPEN_EVENTLOG_SUBKEY,"Unable to open Eventlog subkey in Registry"
UNABLE_CREATE_NETCARD_CONFIGURATION,"Unable to create entry for network adapter in Registry"
UNABLE_ACCESS_CONFIGURE_SERVICE,"Unable to access Services subkey in Registry"
UNABLE_CREATE_CONFIGURE_SERVICE,"Unable to create Services subkey in Registry"
UNABLE_CREATE_SERVICE_SUBKEY,"Unable to create Services subkey in Registry"
INVALID_DATA_PASSED,"Invalid data passed to Registry utility routine"
SERVICE_ALREADY_EXISTS,"Registry Service subkey already exists"
OPERATION_UNIMPLEMENTED,"Registry operation UNIMPLEMENTED"
CANNOT_FIND_COMPONENT_SERVICE,"Component service name not found or non-existent"
CANNOT_CONFIGURE_HARDWARE,"Cannot configure the hardware component"
CANNOT_CONFIGURE_SOFTWARE,"Cannot configure the software component"
UNABLE_WRITE_REGISTRY, "Cannot write to registry"
UNABLE_INSTALL, "Installation Error"
PROVIDER_ALREADY_EXISTED, "Provider already exists in Registry"
PROVIDER_ORDER_DOES_NOT_EXIST, "Provider order does not exist in Registry."
TCPIP_NONEXIST_ERROR, "Please install Microsoft TCP/IP before installing SNMP."
TCPIP_NONEXIST_ERROR_FTPD, "Please install Microsoft TCP/IP before installing FTP Server."
NO_BINDING_INFO, "Missing Binding Information. Please click BINDINGS button first."
CANNOT_OPEN_EVENTLOG_KEY, "Cannot open Eventlog subkey in Registry."
CANNOT_CREATE_SNMPPROXYKEY, "Cannot create SNMP Proxy subkey in Registry."
REF_COUNT_NOT_ZERO, "Please remove all related network adapter cards before removing the software driver."
UNABLE_REMOVE_CONFIGURE_SERVICE,"Unable to remove Services subkey for a software driver in Registry"
UNABLE_ACCESS_WINSOCK_MAP_INFO,"Unable to access WinSock mapping information in DLL"
VERIFY_WARNING,"The current netcard parameters are not verifiably correct and may result in usage problems or system failure.  Use them anyway?"
CANNOT_DETECT,"Setup is unable to obtain network adapter information from the associated network adapter DLL files.  Operation cannot continue."
UNABLE_COPY_FILE,"File copy operation failed."
ASK_SOURCE_FAIL,"Failed to obtain source file location."
SETUP_FAIL,"Setup operation failed."
SERVICE_MARKED_FOR_DELETE,"This network component has recently been removed. Please restart your computer before installing it again."
REBOOT_MACHINE_BEFORE_ADD_ADAPTER,"This network component has recently been removed. Please restart your computer before installing it again."
CANT_REMOVE_WKSTA_NTAS,"The Workstation cannot be removed on a Windows NT Domain Controller."
CANT_REMOVE_SERVER_NTAS,"The Server cannot be removed on a Windows NT Domain Controller."
NO_ERROR, ""
DLC_NONEXIST_ERROR, "Please install Microsoft DLC before installing Remoteboot."
NBF_NONEXIST_ERROR, "Please install the NetBEUI protocol before installing Remoteboot."
UNABLE_ADD_NAMESPACE_PROVIDER, "Unable to add software component as a Name Space Provider"
UNABLE_REMOVE_NAMESPACE_PROVIDER, "Unable to remove Name Space Provider"

[RegistryErrorUnknownENG]
Error_Bogus = "UNKNOWN REGISTRY FAILURE"

;
;---------------------------------------------
;
; Section used for version already exists dialog
;

[VerExistedENG]
ver = " ver "
Text = " already exists on the system. Please use [Update] to update the software."

[CardExistedENG]
Text = "A network card of this type is already installed in the system. Do you want to continue?"

;---------------------------------------------

;*************************************************************************
;  end of section  RemoveNetworkProvider
;*************************************************************************

[ProgressCopyENG]
    ProCaption   = "Windows NT Networking Setup"
    ProCancel    = "Cancel"
    ProCancelMsg = "Windows NT is not correctly installed.  Are you sure you want "+
                   "to cancel copying files?"
    ProCancelCap = "Setup Message"
    ProText1     = "Copying:"
    ProText2     = "To:"
    Error        = "Unable to determine proper source disk location; copy cannot be performed."

#####oemnxpi1.inf all
;------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
;       This lists the languages supported by this file.
;       If you add other languages to this list, you must
;       also add the appropriate text sections for the new
;       language
;------------------------------------------------------------------
[LanguagesSupported]
    ENG

;-------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
;
;       These are the text strings used to identify the options to
;       the user.  There should be a header and entry for every
;       language listed in the "LanguagesSupported" section.
;-------------------------------------------------------------------
[OptionsTextENG]
    NWLINK     = "Old NWLink IPX/SPX Compatible Transport"

;--------------------------------------------------------------------
;       Language Dependent Dialog Constants
;--------------------------------------------------------------------
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle            = "NWLink Setup"
ProductNWLINKDescription  = "NWLink Transport Driver"
ProductNWNBLINKDescription   = "NWLink NetBIOS Driver"
ProductNWLINKDisplayName = "NWLink"
ProductNWLINKTitle       = "NWLink Transport"
ProductNWLINKSYSDisplayName = "NWLinksys"
ProductNWLINKSYSTitle    = "NWLINK Transport Driver"
ProductNWNBLINKDisplayName  = "NWNBLink"
ProductNWNBLINKTitle        = "NWLink NetBIOS"
ProductNWNBLINKSYSDisplayName = "NWNBLinksys"
ProductNWNBLINKSYSTitle     = "NWLINK NetBIOS Driver"

CompetitorDisplayName = "Novell IPX/SPX II Transport"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[FileDependentDlgENG]
;
;--- No UI for NWLINK
;

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlg]
STF_MB_TITLE = "Information Message"

;
; don't need to localize the dialog type
;
DlgType      = "MessageBox"
STF_MB_TEXT  = $(InfoMsgText)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlgCantConfigure]
InfoMsgText = "The NWLINK service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click  OK.  You will then have the opportunity to configure the adapters."

;--------------------------------------------------------------------
;       Get the string to use while doing the install
;--------------------------------------------------------------------
[Billboard1ENG]
Status = "Installing NWLINK and related services..."

[FatalError1ENG]
Error = "Another IPX/SPX protocol driver is currently installed in this machine, "+
        "and the network interface cannot operate properly with both drivers installed. "+
        "If you still wish to install the NWLINK protocol driver, you must first "+
        "remove the "$(CompetitorDisplayName)" component and reboot your machine."

#####oemnadn1.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NE1000     = "Novell NE1000 Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Novell NE1000 Network Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Novell NE1000 Adapter Driver"
;
; Hardware
;
ProductHardwareNE1000Description        = "Novell NE1000 Adapter"
ProductSoftwareTitle    = "Novell NE1000 Adapter Driver"
ProductHardwareNE1000Title      = "Novell NE1000 Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------

[FileDependentDlgENG]
Label1 = "&IRQ Level:"
Label2 = "I/O &Port Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "NE2000"
Caption = $(FunctionTitle)

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOBaseAddrHexList)
Combo2Out  = $(IOBaseAddress)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADN2_INS)

#####oemnadlb.inf all
[LanguagesSupported]
    ENG

[OptionsTextENG]
    LOOP     = "MS Loopback Adapter"

[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "MS Loopback Adapter Card Setup"
ProductSoftwareDescription = "MS Loopback Adapter Driver"
ProductHardwareDescription = "MS Loopback Adapter"
ProductSoftwareTitle    = "MS Loopback Adapter Driver"
ProductHardwareTitle    = "MS Loopback Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[FileDependentDlgENG]
DlgType = "MultiCombo"
DlgTemplate = "SINGLE_COMBO"
Label1 = "&Frame Type:"
Caption = $(FunctionTitle)
Combo1List = $(MediaList)
Combo1Out  = $(MediaChoice)
ComboListItemsIn  = {Combo1List}
ComboListItemsOut = {Combo1Out}
HelpContext = $(!IDH_DB_OEMNADLB_INS)


#####oemnade3.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNK3ISA509     = "3Com Etherlink III ISA/PCMCIA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "3Com Etherlink III Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com Etherlink III Adapter Driver"
;
; Hardware
;
ProductHardwareELNK3ISA509Description        = "3Com Etherlink III Adapter"
ProductSoftwareTitle    = "3Com Etherlink III Adapter Driver"
ProductHardwareELNK3ISA509Title = "3Com Etherlink III Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

TransceiverList  = {"10 Base T", "Thick Net (AUI/DIX)","","Thin Net (BNC/COAX)"}
TransceiverDisplayList  = {"10 Base T", "Thick Net (AUI/DIX)","Thin Net (BNC/COAX)"}

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Label1 = "I/O &Port Address:"
Label2 = "&Interrupt Number:"
Label3 = "&Transceiver Type:"

;no translation needed after this

DlgType = "Combination"
DlgTemplate = "UBNDIS"
Caption = $(FunctionTitle)

Combo1List = $(IOADDR_Hex_List)
Combo1Out  = $(IOADDR_Hex_Value)
Combo2List = $(IRQList)
Combo2Out  = $(IRQValue)
Combo3List = $(TransceiverDisplayList)
Combo3Out  = $(TransceiverValue)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO, NO}

HelpContext = $(!IDH_DB_OEMNADE3_INS)

#####oemnadee.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNK3EISA     = "3Com Etherlink III EISA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;                             a
; Product Info
;
FunctionTitle   = "3Com Etherlink III EISA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com Etherlink III Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "3Com Etherlink III EISA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "3Com Etherlink III Adapter Driver"
ProductHardwareTitle    = "3Com Etherlink III EISA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for EISA
;

#####oemnaden.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNK3MCA     = "3Com Etherlink III MCA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "3Com Etherlink III MCA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com Etherlink III MCA Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "3Com Etherlink III MCA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "3Com Etherlink III MCA Adapter Driver"
ProductHardwareTitle    = "3Com Etherlink III MCA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;

#####oemnadnm.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NE2000MCA     = "NE/2 and compatible MC Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "NE/2 and compatible MC Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "NE/2 and compatible MC Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "NE/2 and compatible MC Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "NE/2 and compatible MC Adapter Driver"
ProductHardwareTitle    = "NE/2 and compatible MC Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Label1 = "&IRQ Level:"
Label2 = "I/O &Port Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "NE2000"
Caption = $(FunctionTitle)

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOBaseAddrHexList)
Combo2Out  = $(IOBaseAddress)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADN2_INS)


#####oemnadfd.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NPMCA     = "Network Peripherals FDDI, MCA"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Network Peripherals FDDI, MCA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Network Peripherals FDDI, MCA Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Network Peripherals FDDI, MCA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Network Peripherals FDDI, MCA Adapter Driver"
ProductHardwareTitle    = "Network Peripherals FDDI, MCA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;

#####oemnsvsn.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SNMP     = "SNMP Service"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "SNMP Setup"
;
; Software
;
ProductSoftwareDescription      = "Simple Network Management Protocol service that enables a Windows NT computer to be administered remotely with an SNMP management tool."
;
; The user needs to install Microsoft TCP/IP before install SNMP.
; If TCPIP does not exist in the registry, the inf file will popup this
; message and exit.
;
ProductSoftwareDisplayName      = "SNMP Service"
ProductSoftwareTitle    = "SNMP Service"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for SNMP
;

#####oemnsvcu.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    TCPIPCU = "TCP/IP Utilities"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProductTCPIPCUTitle = "TCP/IP Utilities"
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

GroupName    = "Accessories"
IconName     = "Telnet"

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
;


#####oemnsvsa.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SAP = "SAP Agent"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductSAPTitle       = "SAP Agent"
ProductSAPDescription = "Service Advertising Protocol advertises servers and addresses on a network."
ProductSAPDisplayName = "SAP Agent"

[InUsed]
Error = "SAP Agent is currently in use by other network protocols. Please remove all related services first."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
;


#####oemnsvwi.inf
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG
;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    WINS     = "Windows Internet Name Service"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Windows Internet Name Service Setup"
;
; Software
;
ProductSoftwareDescription      = "Dynamic name registration and resolution service that maps NetBIOS computer names to IP addresses."
ProductSoftwareDisplayName      = "Windows Internet Name Service"
ProductSoftwareTitle            = "Windows Internet Name Service"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

OldGroupName    = "Network Administration"
GroupName    = "Administrative Tools"
IconName     = "WINS Manager"

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for WINS
;

#####oemnsvdh.inf
[LanguagesSupported]
    ENG
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

[FileConstantsENG]
ProductDHCPDisplayName  = "Microsoft DHCP Server"
ProductDHCPTitle        = "Microsoft DHCP Server"
ProductDHCPDescription  = "Automatically assigns IP addresses to other computers running the DHCP (Dynamic Hose Configuration Protocol) Client Service."
OldGroupName    = "Network Administration"
GroupName    = "Administrative Tools"
IconName     = "DHCP Manager"

[OptionsTextENG]
        DHCP = "Microsoft DHCP Server"

[DHCPServerDialog]
DHCPTxt = "If any adapters are using DHCP to obtain an IP address, they are now "+
           "required to use a static IP address.  Press Close on the Network Control Panel "+
           "and the TCP/IP Property Sheet will be displayed allowing you to enter an address."
STF_MB_TITLE = $(DHCP)
DlgType = "MessageBox"
STF_MB_TEXT  = $(DHCPTxt)
STF_MB_TYPE  = 1
STF_MB_ICON  = 2
STF_MB_DEF   = 1

#####oemnsvdn.inf
[LanguagesSupported]
    ENG
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

[FileConstantsENG]
ProductDNSDisplayName  = "Microsoft DNS Server"
ProductDNSTitle        = "Microsoft DNS Server"
ProductDNSDescription  = "The Domain Name System maps DNS domain names to IP addresses."

OldGroupName = "Network Administration"
GroupName = "Administrative Tools"
IconName  = "DNS Manager"


[OptionsTextENG]
        DNS = "Microsoft DNS Server"

#####oemnsvsp.inf
[LanguagesSupported]
    ENG
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductSTCPIPDisplayName        = "Simple TCP/IP Services"
ProductSTCPIPTitle              = "Simple TCP/IP Services"
ProductSTCPIPDescription        = "Client programs for simple network protocols, including Character Generator, Daytime, Echo and Quote of the Day."

[OptionsTextENG]
    STCPIP = "Simple TCP/IP Services"

#####oemnsvtp.inf
[LanguagesSupported]
    ENG
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductLPDDisplayName = "TCP/IP Print Server"
ProductLPDTitle = "Microsoft TCP/IP Printing"
ProductLPDDescription = "Enables Windows NT to print to TCP/IP-connected printers or to printers that are physically attached to UNIX computers."

[OptionsTextENG]
        TCPPRINT = "Microsoft TCP/IP Printing"

#####oemnxptc.inf
[LanguagesSupported]
    ENG
[OptionsTextENG]
    TC     = "TCP/IP Protocol"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
NoNewComponents = "No New Components to Install."
FunctionTitle   = "TCP/IP Setup"
ProductNETBTDescription           = "NetBT System Driver"
ProductNETBTDisplayName   = "WINS Client(TCP/IP)"
ProductNETBTTitle         = "WINS Client(TCP/IP)"
ProductTELNETDisplayName = "Telnet"
ProductTELNETTitle      = "Telnet Networking Support Environment"
ProductTELNETSYSDisplayName = "Telnetsys"
ProductTELNETSYSTitle     = "Telnet Driver"
ProductLMHOSTSDisplayName = "TCP/IP NetBIOS Helper"
ProductLMHOSTSTitle     = "TCP/IP NetBIOS Helper"
ProductDHCPDisplayName = "DHCP Client"
ProductDHCPTitle     = "DHCP Client"
ProductTCDisplayName = "TCP/IP Service"
ProductTCTitle     = "TCP/IP Protocol"
ProductTCDescription         = "Transport Control Protocol/Internet Protocol. The default wide area network protocol that provides communication across diverse interconnected networks."
ProviderDisplayName     = "TCP/IP"
LDAPProviderDisplayName = "NTDS"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
RASRebindError = "Setup has discovered that you have Remote Access Services installed. Do you want to configure RAS to support the TCP/IP protocol?"

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
[InfoDlg]
STF_MB_TITLE = "Information Message"
DlgType = "MessageBox"
STF_MB_TEXT  = $(InfoMsgText)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

[DHCPDialog]
DHCPText = "If there is a DHCP server on your network, TCP/IP can be configured to dynamically provide"+
                 " an IP address.  If you are not sure, ask your system administrator.  Do you wish to use DHCP?"
STF_MB_TITLE = "TCP/IP Setup"
DlgType = "MessageBox"
STF_MB_TEXT  = $(DHCPText)
STF_MB_TYPE  = 3
STF_MB_ICON  = 5
STF_MB_DEF   = 2

[InfoDlgCantConfigure]
InfoMsgText = "The TCP/IP service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click  OK or CLOSE.  You will then have the opportunity to configure the adapters."
[WarningDlgENG]
STF_MB_TITLE = "TCP/IP Setup Warning"
DlgType = "MessageBox"
STF_MB_TEXT  = $(Error)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1
[Billboard1ENG]
Status = "Installing TCP/IP and related services..."

#####oemnxpip.inf all
;------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
;       This lists the languages supported by this file.
;       If you add other languages to this list, you must
;       also add the appropriate text sections for the new
;       language
;------------------------------------------------------------------
[LanguagesSupported]
    ENG

;-------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
;
;       These are the text strings used to identify the options to
;       the user.  There should be a header and entry for every
;       language listed in the "LanguagesSupported" section.
;-------------------------------------------------------------------
[OptionsTextENG]
    NWLNKIPX     = "NWLink IPX/SPX Compatible Transport"

;--------------------------------------------------------------------
;       Language Dependent Dialog Constants
;--------------------------------------------------------------------
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle            = "NWLink IPX/SPX Compatible Transport Setup"
ProductNWLNKIPXDescription  = "An implementation of the IPX and SPX protocols, which are used by the NetWare networks."
ProductNWLNKIPXDisplayName = "NWLink IPX/SPX Compatible Transport Protocol"
ProductNWLNKIPXTitle       = "NWLink IPX/SPX Compatible Transport"

ProductNWLNKNBDescription   = "Enables Novell NetBIOS packets to be sent between a NetWare server running Novell NetBIOS and a Windows NT computer, or between two Windows NT computers."
ProductNWLNKNBDisplayName  = "NWLink NetBIOS"
ProductNWLNKNBTitle        = "NWLink NetBIOS"
ProductNWLNKNBSYSDisplayName = "NWLinkNBsys"
ProductNWLNKNBSYSTitle     = "NWLINK NetBIOS Driver"

ProductNWLNKSPXDescription  = "NWLink SPX Protocol Driver"
ProductNWLNKSPXDisplayName = "NWLink SPX/SPXII Protocol"
ProductNWLNKSPXTitle       = "NWLink SPX Protocol"

CompetitorDisplayName = "NWLink IPX/SPX II Transport"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

RASRebindError = "Setup has discovered that you have Remote Access Services installed. Do you want to configure RAS to support the NWLINK protocol?"
InstallRip     = "Do you want to install the IPX Rip Router?"

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[FileDependentDlgENG]
;
;--- No UI for NWLNK
;

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlg]
STF_MB_TITLE = "Information Message"

;
; don't need to localize the dialog type
;
DlgType      = "MessageBox"
STF_MB_TEXT  = $(InfoMsgText)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlgCantConfigure]
InfoMsgText = "The IPX Protocol service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click  OK.  You will then have the opportunity to configure the adapters."

[InUseENG]
InfoMsgText = "The IPX Protocol service is being used by another service(s). "+
    "Please remove other related components before removing IPX Protocol."

;--------------------------------------------------------------------
;       Get the string to use while doing the install
;--------------------------------------------------------------------
[Billboard1ENG]
Status = "Installing IPX Protocol and related services..."

[FatalError1ENG]
Error = "Another IPX/SPX protocol driver is currently installed in this machine, "+
        "and the network interface cannot operate properly with both drivers installed. "+
        "If you still wish to install the NWLNK protocol driver, you must first "+
        "remove the "$(CompetitorDisplayName)" component and reboot your machine."

#####oemnsvnw.inf
[LanguagesSupported]
    ENG
;
; Language depended section
;
[WorkstationENG]
    NWType = "Client Service for NetWare"
    NWDescription = "Enables this computer to log on to NetWare servers and access their resources."
[GatewayENG]
    NWType = "Gateway Service for NetWare"
    NWDescription = "Enables other Windows NT computers to access NetWare servers without running NetWare Client software."
[OptionsWINNTTextENG]
    NWWKSTA       = "Client Service for NetWare"
[OptionsLANMANNTTextENG]
    NWWKSTA       = "Gateway (and Client) Services for NetWare"

[FileConstantsENG]
NotEnoughSpace = "Out of disk space. Please remove some files before install "$(NWType)"."
UpgradeBetaOnTopOfDaytona = "You cannot update the beta version of "$(NWType)" over Windows NT 3.51's "$(NWType)"."
InstallNWLINKFirst = "Please install the NWLINK IPX/SPX Compatible Transport before you install the "$(NWType)"."
InstallNTWKSTAFirst = "Please install the Windows NT Workstation service before you install the "$(NWType)"."
RemoveAndReboot    = "Please remove any existing "$(NWType)" component and reboot your machine before installing the latest version of "$(NWType)"."
UpgradeFirst = "Please install the Windows NT patch before installing the "$(NWType)"."
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = $(NWType)" Setup"
ProductNWWKSTADescription         = $(NWDescription)
ProductNWRDRDescription           = "NetWare Redirector Compatible Service"
ProviderRDRName                 = "NetWare Compatible Redirector"
ProductNWWKSTATitle       = $(NWType)
ProductNWWKSTADisplayName = $(NWType)
ProductNWRDRDisplayName   = "NetWare Rdr"
ProductNWRDRTitle         = "NetWare Redirector"
ProductProviderName = "NetWare Network"
ProductProviderDisplayName = "NetWare or Compatible Network"
ProductPrintProviderName = "NetWare or Compatible Network"
OldPrintProviderName = "Netware(R) Network"
OldPrintProviderName2 = "NetWare Network"
REM1 = "REM Install network redirector"

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
ShellCodeErrorText = "Shell Code Error"

[FileDependentDlgENG]
; nothing



#####oemnsvbh.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NETMON      = "Network Monitor Agent"
    NETMONTOOLS = "Network Monitor Tools and Agent"


;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
;
; Software
;
ProductNMAgentDisplayName  = "Network Monitor Agent"

;
; Software Tools
;
NETMONTOOLSSoftwareTitle  = "Network Monitor Tools and Agent"
NETMONSoftwareTitle       = "Network Monitor Agent"


[NETMONConstantsENG]
;
; Product Info
;
ProductSoftwareTitle       = $(NETMONSoftwareTitle)
ProductSoftwareDescription = "Informs monitoring programs, such as Performance Monitor and Network Monitor, of network transactions for this computer."
ProductSoftwareDisplayName = $(ProductSoftwareTitle)" Driver"

FunctionTitle   =  $(ProductSoftwareTitle)

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[NETMONTOOLSConstantsENG]
;
; Product Info
;
ProductSoftwareTitle       = $(NETMONTOOLSSoftwareTitle)
ProductSoftwareDescription = "A software package for monitoring and troubleshooting network transactions"
ProductSoftwareDisplayName = $(ProductSoftwareTitle)" Drivers"

FunctionTitle   = $(ProductSoftwareTitle)

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[IconInfoENG]
    OldNetAdminGroupName = "Network Administration"
    NetAdminGroupName = "Administrative Tools"
    NetMonitor = "Network Monitor"



#####oemnsvri.inf
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    REMOTEBOOT     = "Remoteboot Service"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Remoteboot Setup"
;
; Software
;
ProductSoftwareDescription      = "Starts MS-DOS and Microsoft Windows workstations over the network."
ProductSoftwareDisplayName      = "Remoteboot Service"
ProductSoftwareTitle    = "Remoteboot Service"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
;
; Program group information
;
OldRplGroup    = "Network Administration"
RplGroup    = "Administrative Tools"
RplMgr    = "Remoteboot Manager"


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Edit1Label = "&Remoteboot directory:"
CheckBox1 = "&Migrate Remoteboot directory from LAN Manager 2.2"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "QUERY_RPL_PATH"
Caption = $(FunctionTitle)
CBOptionsGreyed = {}
ComboListItemsIn = {}
ComboListItemsOut = {}

HelpContext = $(!IDH_DB_OEMNSVRI_INS)

EditTextLim = 256
EditTextIn  = $(RPLDIR)
EditFocus   = "ALL"
RCCtlFocusOn = 403

[NonFatalError1ENG]
Error = "The Remoteboot directory must be an absolute path."

[DoAskSourceDlgTextENG]
    DlgText = "Setup needs to copy Remoteboot Client files. These files are located "+
              "in the \CLIENTS\RPL directory of the Windows NT Server CD."$(!LF)$(!LF)+
              "If you want Setup to look in a different place, type the new location below. "+
              "When the location is correct, click Continue."

#####oemnadt2.inf all
[LanguagesSupported]
    ENG
[OptionsTextENG]
    IBMTOK2ISA     = "IBM Token-Ring Network 16/4 ISA Adapter II"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "IBM Token-Ring 16/4 Adapter II Card Setup"
ProductSoftwareDescription      = "IBM Token-Ring 16/4 ISA Adapter II Driver"
ProductHardwareIBMTOK2ISADescription        = "IBM Token-Ring 16/4 ISA Adapter II"
ProductSoftwareTitle    = "IBM Token-Ring 16/4 ISA Adapter II Driver"
ProductHardwareIBMTOK2ISATitle = "IBM Token-Ring 16/4 ISA Adapter II"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
Combo1Label = "I/O &Port Address:"
DlgType = "RadioCombination"
DlgTemplate = "IBMTOK2"
Caption = $(FunctionTitle)
Combo1List = $(IOADDR_Hex_List)
Combo1Out  = $(IOADDR_Hex_Value)
ComboListItemsIn  = {Combo1List}
ComboListItemsOut = {Combo1Out}
EditTextLim = 17
EditTextIn = $(NetworkAddress)
Edit1Label = "&NetworkAddress"
HelpContext = $(!IDH_DB_OEMNADT2_INS)

#####oemnadte.inf all
[LanguagesSupported]
    ENG
[OptionsTextENG]
    IBMTOK2E     = "IBM Token Ring EISA Adapter"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "IBM Token Ring EISA Adapter Card Setup"
ProductSoftwareDescription      = "IBM Token Ring EISA Adapter Driver"
ProductHardwareDescription      = "IBM Token Ring EISA Adapter"
CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ProductHardwareTitle    = "IBM Token Ring EISA Adapter"
ProductSoftwareTitle    = "IBM Token Ring EISA Adapter Driver"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
Edit1Label = "&Network Address:"
DlgType = "Edit"
DlgTemplate = "NETWORK_NUMBER"
Caption = $(FunctionTitle)
HelpContext = $(!IDH_DB_OEMNADTE_INS)
EditTextLim = 17
EditTextIn  = $(NetworkAddress)
EditFocus   = "ALL"
RCCtlFocusOn = 403



#####oemnsvrc.inf
[LanguagesSupported]
    ENG
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

#####oemnadpm.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    P189X     = "ProNET-4/16 p189X NIC"

[PacketChoices]
Packet1="4Kb",4210
Packet2="18Kb",17986

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

FunctionTitle   = "Proteon p189X Adapter Card Setup"
ProductSoftwareDescription      = "Proteon RapiDriver"
ProductHardwareDescription      = "Proteon p189X ProNET-4/16 NIC"
CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ProductHardwareTitle    = "Proteon p189X ProNET-4/16 NIC"
ProductSoftwareTitle    = "Proteon RapiDriver"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Group1 = "CardSpeed"
Radio1 = "&4"
Radio2 = "&16"
Edit1Label = "&Network Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "IBM_TOKEN"
Caption = $(FunctionTitle)
ComboListItemsIn = {}
ComboListItemsOut = {}
EditTextLim = 17
EditTextIn = $(NetworkAddress)

OptionsGreyed = {}

HelpContext = $(!IDH_DB_OEMNADP9_INS)
RCCtlFocusOn = 403

#####oemnadar.inf all
[OptListENG]
OptList_1 = tc$arcnet "Arcnet/TCNS (All Types)",     "tcarc", "ARCNET/TCNS Adapter", "ARCNET or Thomas-Conrad TCNS Adapter"
OptList_2 = tc$tcns,  "Thomas-Conrad TCNS",          "tcarc", "TCNS Adapter",        "Thomas-Conrad 100Mbps TCNS"

[FileConstantsENG]
   ProCaption              = "Windows NT Setup"
   ProCancel               = "Cancel"
   ProCancelMsg            = "Your ARCNET/TCNS Windows NT Networking "+
                             "Adapter is not correctly installed.  Are "+
                             "you sure you want to cancel copying files?"
   ProCancelCap            = "Network Setup Message"
   ProText1                = "Copying:"
   ProText2                = "To:"
   SoftwareTitle           = "ARCNET/TCNS Driver"
   SoftwareDescription     = "ARCNET/TCNS Adapter Driver"

[DialogConstantsENG]
   Help                    = "&Help"
   Exit                    = "Cancel"
   OK                      = "OK"
   HelpContext             = ""
   Continue                = "Continue"
   Cancel                  = "Cancel"
   FunctionTitle           = "ARCNET/TCNS Adapter Setup"
   InterruptLabel          = "&Interrupt Number:"
   BaseIoLabel             = "I/O &Port Base Addr:"
   MemoryLabel             = "&Memory Address:"
   TcnsCaption             = "Thomas-Conrad TCNS Adapter Setup"
   TcnsEISACaption         = "Thomas-Conrad TCNS (TC3147) Adapter Setup"
   SlotNumberLabel         = "&Slot Number:"

[LanguagesSupported]
   ENG



#####oemnaddt.inf all
[LanguagesSupported]
    ENG
[OptionsTextENG]
    DC21040  = "DEC PCI Ethernet DECchip 21040"
    DC21041  = "DEC PCI Ethernet DECchip 21041"
    DC21140  = "DEC PCI Fast Ethernet DECchip 21140"
    DC21142  = "DEC PCI Fast Ethernet DECchip 21142"
    DE434    = "DEC DE434 EtherWORKS Turbo PCI TP Adapter"
    DE435    = "DEC DE435 EtherWORKS Turbo PCI Adapter"
;    DE436    = "DEC DE436 EtherWORKS Turbo PCI Quad Adapter"
    MULTIA   = "DEC multia's Ethernet Controller"
    DE425    = "DEC DE425 EtherWORKS Turbo EISA Adapter"
    DE450    = "DEC DE450 EtherWORKS Turbo PCI Adapter"
    DE500    = "DEC DE500 Fast Ethernet PCI Adapter"

[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductSoftwareDescription = "DEC DC21x4 Driver"

FunctionDC21040Title = "DEC DECchip 21040 Based Adapter Setup"
ProductHardwareDC21040Description = "DEC PCI Ethernet DECchip 21040"
ProductHardwareDC21040Title = "DEC PCI Ethernet DECchip 21040"

FunctionDC21041Title = "DEC DECchip 21041 Based Adapter Setup"
ProductHardwareDC21041Description = "DEC PCI Ethernet DECchip 21041"
ProductHardwareDC21041Title = "DEC PCI Ethernet DECchip 21041"

FunctionDC21140Title = "DEC DECchip 21140 Based Adapter Setup"
ProductHardwareDC21140Description = "DEC PCI Fast Ethernet DECchip 21140"
ProductHardwareDC21140Title = "DEC PCI Fast Ethernet DECchip 21140"

FunctionDC21142Title = "DEC DECchip 21142 Based Adapter Setup"
ProductHardwareDC21142Title = "DEC PCI Ethernet DC21142"
ProductHardwareDC21142Description = "DEC PCI Fast Ethernet DECchip 21142"

FunctionDE434Title   = "DEC DE434 PCI Adapter Card Setup"
ProductHardwareDE434Description   = "DEC DE434 EtherWORKS Turbo PCI TP Adapter"
ProductHardwareDE434Title   = "DEC DE434 EtherWORKS Turbo PCI TP Adapter"

FunctionDE435Title   = "DEC DE435 PCI Adapter Card Setup"
ProductHardwareDE435Description   = "DEC DE435 EtherWORKS Turbo PCI Adapter"
ProductHardwareDE435Title   = "DEC DE435 EtherWORKS Turbo PCI Adapter"

FunctionMULTIATitle = "DEC multia's Ethernet Controller Setup"
ProductHardwareMULTIADescription = "DEC multia's Ethernet Controller"
ProductHardwareMULTIATitle = "DEC multia's Ethernet Controller"

FunctionDE425Title   = "DEC DE425 EISA Adapter Card Setup"
ProductHardwareDE425Description   = "DEC DE425 EtherWORKS Turbo EISA Adapter"
ProductHardwareDE425Title   = "DEC DE425 EtherWORKS Turbo EISA Adapter"

FunctionDE450Title   = "DEC DE450 PCI Adapter Card Setup"
ProductHardwareDE450Description   = "DEC DE450 EtherWORKS Turbo PCI Adapter"
ProductHardwareDE450Title   = "DEC DE450 EtherWORKS Turbo PCI Adapter"

FunctionDE500Title   = "DEC DE500 PCI Adapter Card Setup"
ProductHardwareDE500Description   = "DEC DE500 Fast Ethernet PCI Adapter"
ProductHardwareDE500Title   = "DEC DE500 Fast Ethernet PCI Adapter"

ConnectionList  = ^(ConnectionChoices$(Option), 1)
ConnectionValues = ^(ConnectionChoices$(Option), 2)
NoList  = ^(NoChoices, 1)
NoValues = ^(NoChoices, 2)
ShellCodeErrorTitle     = "Error: "$(Function$(Option)Title)
ShellCodeErrorText      = "Shell Code Error."
CANNOT_FIND_ANY_CARD    = "Network card is not present in the system"

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[FileDependentDlgENG]

DlgText = "Choose the proper cable type for the "+
          "network adapter. Select [Help] for a detailed "+
          "description of the available options of the list."

Combo1Label = "&Connection Type:"

;
; don't localize anything below this
;
DlgTemplate = "ADAP_PROTO_COMBO"
DlgType = "Combination"

Caption = $(Function$(Option)Title)
Combo1List = $(ConnectionList)
Combo1Out  = $(ConnectionValue)
ComboListItemsIn  = {Combo1List}
ComboListItemsOut = {Combo1Out}

EditTextLim = ""
CBOptionsGreyed = {}
MinHelpId = 10
MaxHelpId = 1130
HelpContext = $(Help$(Option)Id)

[ConnectionChoicesDC21040]
    Connect_0 = "AutoDetect", 0
    Connect_1 = "10BaseT (Twisted_Pair) ", 2
    Connect_2 = "10BaseT Full_Duplex ", 3
    Connect_3 = "10BaseT No_Link_Test", 4
    Connect_4 = "10Base2 (BNC)", 1
    Connect_5 = "10Base5 (AUI)", 5
[ConnectionChoicesDC21041]
    Connect_0 = "AutoSense", 0
    Connect_1 = "AutoSense No_Nway", 6
    Connect_2 = "10BaseT (Twisted_Pair) ", 2
    Connect_3 = "10BaseT Full_Duplex ", 3
    Connect_5 = "10BaseT No_Link_Test", 4
    Connect_6 = "10Base2 (BNC)", 1
    Connect_7 = "10Base5 (AUI)", 5
[ConnectionChoicesDC21140]
    Connect_0 = "AutoSense", 0
    Connect_1 = "AutoSense No_Nway", 6
    Connect_2 = "100BaseTx", 8
    Connect_3 = "100BaseTx Full_Duplex", 9
    Connect_4 = "100BaseT4", 10
    Connect_5 = "100BaseFx", 11
    Connect_6 = "100BaseFx Full_Duplex", 12
    Connect_7 = "10BaseT (Twisted Pair)", 2
    Connect_8 = "10BaseT Full_Duplex", 3
[ConnectionChoicesDC21142]
    Connect_0 = "AutoSense", 0
    Connect_1 = "100BaseTx", 8
    Connect_2 = "100BaseTx Full_Duplex", 9
    Connect_3 = "100BaseT4", 10
    Connect_4 = "100BaseFx", 11
    Connect_5 = "100BaseFx Full_Duplex", 12
    Connect_6 = "10BaseT (Twisted_Pair) ", 2
    Connect_7 = "10BaseT Full_Duplex", 3
    Connect_8 = "10BaseT No_Link_Test", 4
    Connect_9 = "10Base2 (BNC)", 1
    Connect_10= "10Base5 (AUI)", 5
[ConnectionChoicesMULTIA]
    Connect_0 = "AutoDetect", 0
    Connect_1 = "10BaseT (Twisted_Pair) ", 2
    Connect_2 = "10BaseT Full_Duplex ", 3
    Connect_3 = "10BaseT No_Link_Test", 4
    Connect_4 = "10Base2 (BNC)", 1
    Connect_5 = "10Base5 (AUI)", 5
[ConnectionChoicesDE434]
    Connect_0 = "10BaseT (Twisted_Pair) ", 2
    Connect_1 = "10BaseT Full_Duplex ", 3
    Connect_2 = "10BaseT No_Link_Test", 4
[ConnectionChoicesDE435]
    Connect_0 = "AutoDetect", 0
    Connect_1 = "10BaseT (Twisted_Pair) ", 2
    Connect_2 = "10BaseT Full_Duplex ", 3
    Connect_3 = "10BaseT No_Link_Test", 4
    Connect_4 = "10Base2 (BNC)", 1
    Connect_5 = "10Base5 (AUI)", 5
[ConnectionChoicesDE450]
    Connect_0 = "AutoSense", 0
    Connect_1 = "AutoSense No_Nway", 6
    Connect_2 = "10BaseT (Twisted_Pair) ", 2
    Connect_3 = "10BaseT Full_Duplex ", 3
    Connect_4 = "10BaseT No_Link_Test", 4
    Connect_5 = "10Base2 (BNC)", 1
    Connect_6 = "10Base5 (AUI)", 5
[ConnectionChoicesDE500]
    Connect_0 = "AutoSense", 0
    Connect_1 = "100BaseTx", 8
    Connect_2 = "100BaseTx Full_Duplex", 9
    Connect_3 = "10BaseT", 2
    Connect_4 = "10BaseT Full_Duplex", 3


#####oemnadzz.inf all
[LanguagesSupported]
    ENG

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


ShellCodeErrorTitle     = "Error: "
ShellCodeErrorText      = "Shell Code Error."

[ErrorMsgENG]
CannotFindOemsetup = "Setup cannot find "$(File1)", "$(File2)", "$(File3)", or "$(File4)". Please make sure your input path is correct."

#####oemnadap.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

[OptionsTextENG]
    AMDPCI     = "AMD PCNET Family Ethernet Adapter"

[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


GenericAdapterName = "AMD PCNET ISA/VESA Ethernet Adapter"
GenericPCIAdapterName = "AMD PCNET PCI Ethernet Adapter"
GenericDriverName  = "AMD PCNET Family Ethernet Adapter Driver"

ProductSoftwareDescription = $(GenericDriverName)
ProductHardwareDescription = $(GenericAdapterName)
ProductHardwarePCNTN3Description="AMD PCnet Family Driver"

ProductSoftwareTitle =       $(GenericDriverName)
ProductHardwarePCNTN3Title = $(GenericAdapterName)

;
; no localization until [DialogConstantsENG]
;

DialogDllName   = "amddlg.dll"

IRQList  = ^(IRQChoices, 1)
IRQValues = ^(IRQChoices, 2)

IOBaseAddrList = ^(IOBaseAddrChoices, 1)
IOBaseAddrValues = ^(IOBaseAddrChoices, 2)

DMAChannelList = ^(DMAChannelChoices,1)
DMAChannelValues = ^(DMAChannelChoices,2)

LEDList = ^(LEDChoices,1)
LEDValues = ^(LEDChoices,2)

FullDuplexList = ^(FullDuplexChoices,1)
FullDuplexValues = ^(FullDuplexChoices,2)

BusTimerList = ^(BusTimerChoices,1)
BusTimerValues = ^(BusTimerChoices,2)

[DialogConstantsENG]
FunctionTitle   = $(GenericDriverName)$(GenericInfVersion)
Help        = "&Help"
Exit        = "Cance&l"
OK          = "&OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "&Cancel"

[MemoryMappedChoicesENG]
Map_1 = 1, "ON"
Map_2 = 0, "OFF"

[FileDependentDlgENG]
FunctionTitle   = $(GenericAdapterName)$(GenericInfVersion)
DlgText = "Please select values for the following fields:"

Combo1Label = "&I/O Port:"
Combo2Label = "IRQ &Number:"
Combo3Label = "&DMA Number:"
Combo4Label = "&Full Duplex:"
Combo5Label = "&Bus Timer:"

BigButton   = "&More options >>"

CheckBox1 = "10Base-&T port"

Group1 = "&Bus to scan"

Radio1 = "&PNP"
Radio2 = "&VESA"
Radio3 = "&ISA"
Radio4 = "&ALL"

;
; no localization until IRQChoices
;

DlgType = "RadioCombination"
DlgTemplate = "PCNTN3"
Caption = $(FunctionTitle)

CBOptionsGreyed = {}
NotifyFields = {NO, NO}
HelpContext = 1

Combo1List = $(IOBaseAddrList)
Combo1Out  = $(IOBaseAddrValue)

Combo2List = $(IRQList)
Combo2Out  = $(IRQValue)

Combo3List = $(DMAChannelList)
Combo3Out  = $(DMAChannelValue)

Combo4List = $(FullDuplexList)
Combo4Out  = $(FullDuplexValue)

Combo5List = $(BusTimerList)
Combo5Out  = $(BusTimerValue)

ComboListItemsIn  = {Combo1List,Combo2List,Combo3List,Combo4List,Combo5List}
ComboListItemsOut = {Combo1Out,Combo2Out,Combo3Out,Combo4Out,Combo5Out}

EditTextIn = ""
EditTextLim = ""

[IRQChoices]
IRQ_1 = "3",3
IRQ_2 = "4",4
IRQ_3 = "5",5
IRQ_4 = "9",9
IRQ_5 = "10",10
IRQ_6 = "11",11
IRQ_7 = "12",12
IRQ_8 = "15",15
IRQ_9 = "Auto_Scan",0

[IOBaseAddrChoices]
IOBase_1  = "0x200",512
IOBase_2  = "0x220",544
IOBase_3  = "0x240",576
IOBase_4  = "0x260",608
IOBase_5  = "0x280",640
IOBase_6  = "0x2a0",672
IOBase_7  = "0x2c0",714
IOBase_8  = "0x2e0",746
IOBase_9  = "0x300",768
IOBase_10 = "0x320",800
IOBase_11 = "0x340",832
IOBase_12 = "0x360",864
IOBase_13 = "0x380",896
IOBase_14 = "0x3a0",928
IOBase_15 = "0x3c0",960
IOBase_16 = "0x3e0",992
IOBase_17 = "Auto_Scan",0

[DMAChannelChoices]
DMAChannel_1 = "3",3
DMAChannel_2 = "5",5
DMAChannel_3 = "6",6
DMAChannel_4 = "7",7
DMAChannel_5 = "Auto_Scan",0

[LEDChoices]
LED_1 = "Default",65536
LED_2 = "0x0",0
LED_3 = "0x2",2
LED_4 = "0x4",4
LED_5 = "0x8",8
LED_6 = "0x10",16
LED_7 = "0x20",32
LED_8 = "0x30",48
LED_9 = "0x34",52
LED_10 = "0x40",64
LED_11 = "0xc0",192
LED_12 = "0x4088",16520
LED_13 = "0xb0",176
LED_14 = "0x21",129

[FullDuplexChoices]
FULLDUPLEX_1 = "OFF",1
FULLDUPLEX_2 = "AUI",2
FULLDUPLEX_3 = "UTP",3
FULLDUPLEX_4 = "Default",0

[BusTimerChoices]
BUSTIMER_1 = "5",5
BUSTIMER_2 = "6",6
BUSTIMER_3 = "7",7
BUSTIMER_4 = "8",8
BUSTIMER_5 = "9",9
BUSTIMER_6 = "10",10
BUSTIMER_7 = "11",11
BUSTIMER_8 = "12",12
BUSTIMER_9 = "13",13
BUSTIMER_10 = "Default",0

[FileDependentDlgPCIENG]
FunctionTitle   = $(GenericPCIAdapterName)$(GenericInfVersion)
DlgText = "Please select values for the following fields:"

Combo1Label = "&Full Duplex:"
BigButton   = "&More options >>"
CheckBox1 = "10Base-&T port"

;
; no locationization until LEDChoices
;

DlgType = "RadioCombination"
DlgTemplate = "PCNTN3PCI"
Caption = $(FunctionTitle)

CBOptionsGreyed = {}
NotifyFields = {NO, NO}
HelpContext = 1

Combo1List = $(FullDuplexList)
Combo1Out  = $(FullDuplexValue)

Combo3List = $(LEDList)
Combo3Out  = $(LED0Value)

Combo4List = $(LEDList)
Combo4Out  = $(LED1Value)

Combo5List = $(LEDList)
Combo5Out  = $(LED2Value)

Combo6List = $(LEDList)
Combo6Out  = $(LED3Value)

ComboListItemsIn  = {Combo1List}
ComboListItemsOut = {Combo1Out}

EditTextIn = ""
EditTextLim = ""

[LEDChoices]
LED_1 = "Default",65536
LED_2 = "0x0",0
LED_3 = "0x2",2
LED_4 = "0x4",4
LED_5 = "0x8",8
LED_6 = "0x10",16
LED_7 = "0x20",32
LED_8 = "0x30",48
LED_9 = "0x34",52
LED_10 = "0x40",64
LED_11 = "0xc0",192
LED_12 = "0x4088",16520
LED_13 = "0xb0",176
LED_14 = "0x21",129

[FullDuplexChoices]
FULLDUPLEX_1 = "OFF",1
FULLDUPLEX_2 = "AUI",2
FULLDUPLEX_3 = "UTP",3
FULLDUPLEX_4 = "Default",0

[BusTimerChoices]
BUSTIMER_1 = "5",5
BUSTIMER_2 = "6",6
BUSTIMER_3 = "7",7
BUSTIMER_4 = "8",8
BUSTIMER_5 = "9",9
BUSTIMER_6 = "10",10
BUSTIMER_7 = "11",11
BUSTIMER_8 = "12",12
BUSTIMER_9 = "13",13
BUSTIMER_10 = "Default",0

#####oemnaddf.inf all

[LanguagesSupported]
        ENG
[OptionsTextENG]
        DEFPA     = "DEC FDDIcontroller/PCI"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "DEC FDDIcontroller/PCI Card Setup"
ProductSoftwareDescription      = "DEC FDDIcontroller/PCI Driver"
ProductHardwareDescription      = "DEC FDDIcontroller/PCI"
CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
ReceiveBuffList = ^(ReceiveBuffChoices,1)
ReceiveBuffValues = ^(ReceiveBuffChoices,2)
TransmitBuffList = ^(TransmitBuffChoices,1)
TransmitBuffValues = ^(TransmitBuffChoices,2)
BurstSizeList = ^(BurstSizeChoices,1)
BurstSizeValues = ^(BurstSizeChoices,2)
DialogDllName = "defpa.dll"
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = 1
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
DlgType = "RadioCombination"
DlgTemplate = "DEFPA"
Combo1 = "Receive Buffers:"
Combo2 = "Transmit Buffers:"
Combo3 = "Burst Size:"
Edit1 = "Requested TTRT(ms):"
Edit2 = "Bus Number:"
Edit3 = "Card Instance:"
Group = "Full Duplex Enable"
Combo1List = $(ReceiveBuffList)
Combo1Out = $(ReceiveBuffValue)
Combo2List = $(TransmitBuffList)
Combo2Out = $(TransmitBuffValue)
Combo3List = $(BurstSizeList)
Combo3Out = $(BurstSizeValue)
; Burst size is not included in dialog box, for now
ComboListItemsIn = {Combo1List,Combo2List}
ComboListItemsOut = {Combo1Out,Combo2Out}
EditTextLim = {3,3,1}
EditTextIn = {$(EditText1),$(EditText2),$(EditText3)}
EditTextOut = {$(EditText1),$(EditText2),$(EditText3)}
[ReceiveBuffChoices]
Receive_1 = "2",2
Receive_2 = "4",4
Receive_3 = "8",8
[TransmitBuffChoices]
Transmit_1 = "8",8
Transmit_2 = "16",16
Transmit_3 = "32",32
Transmit_4 = "64",64
Transmit_5 = "128",128
[BurstSizeChoices]
Burst_1 = "4",0
Burst_2 = "8",1
Burst_3 = "16",2

#####oemnadd3.inf all
[LanguagesSupported]
        ENG
[OptionsTextENG]
        DEC300     = "DEC FDDIcontroller/EISA"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
                           "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "DEC FDDIcontroller/EISA Card Setup"
ProductSoftwareDescription      = "DEC FDDIcontroller/EISA Driver"
ProductHardwareDescription      = "DEC FDDIcontroller/EISA"
CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ProductSoftwareTitle    = "DEC FDDIcontroller/EISA Driver"
ProductHardwareTitle    = "DEC FDDIcontroller/EISA Adapter"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
BurstSizeList = ^(BurstSizeChoices,1)
BurstSizeValues = ^(BurstSizeChoices,2)
ReceiveBuffList = ^(ReceiveBuffChoices,1)
ReceiveBuffValues = ^(ReceiveBuffChoices,2)
TransmitBuffList = ^(TransmitBuffChoices,1)
TransmitBuffValues = ^(TransmitBuffChoices,2)
DialogDllName = "defea.dll"
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = 1
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
DlgType = "RadioCombination"
DlgTemplate = "DEFEA"
Combo1 = "Burst Size:"
Combo2 = "Receive Buffers:"
Combo3 = "Transmit Buffers:"
Group = "Full Duplex Enable"
Edit1 = "Requested TTRT(ms):"
Combo1List = $(BurstSizeList)
Combo1Out = $(BurstSizeValue)
Combo2List = $(ReceiveBuffList)
Combo2Out = $(ReceiveBuffValue)
Combo3List = $(TransmitBuffList)
Combo3Out = $(TransmitBuffValue)
ComboListItemsIn = {Combo2List,Combo3List}
ComboListItemsOut = {Combo2Out,Combo3Out}
EditTextLim = {3}
[BurstSizeChoices]
Burst_1 = "4",0
Burst_2 = "8",1
Burst_3 = "16",2
[ReceiveBuffChoices]
Receive_1 = "2",2
Receive_2 = "4",4
Receive_3 = "8",8
[TransmitBuffChoices]
Transmit_1 = "8",8
Transmit_2 = "16",16
Transmit_3 = "32",32
Transmit_4 = "64",64
Transmit_5 = "128",128

#####oemnadni.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NE2000IBMCOMPAT = "IBM Ethernet PCMCIA and Compatible Adapter"
    NE4000PCMCIA    = "Novell NE4000 PCMCIA Adapter"
    MICRODYNEPCMCIA = "Microdyne NE4000 PCMCIA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
;
; Software
;
ProductSoftwareNE2000IBMCOMPATDescription = "IBM Ethernet PCMCIA and Compatible Adapter Driver"
ProductSoftwareNE2000IBMCOMPATTitle       = "IBM Ethernet PCMCIA and Compatible Adapter Driver"
ProductSoftwareNE4000PCMCIADescription = "Novell NE4000 PCMCIA Adapter Driver"
ProductSoftwareNE4000PCMCIATitle       = "Novell NE4000 PCMCIA Adapter Driver"
ProductSoftwareMICRODYNEPCMCIADescription      = "Microdyne NE4000 PCMCIA Adapter Driver"
ProductSoftwareMICRODYNEPCMCIATitle    = "Microdyne NE4000 PCMCIA Adapter Driver"

;
; Hardware
;

ProductHardwareNE2000IBMCOMPATDescription  = "IBM Ethernet PCMCIA and Compatible Adapter"
ProductHardwareNE2000IBMCOMPATTitle    = "IBM Ethernet PCMCIA and Compatible Adapter"
ProductHardwareNE4000PCMCIADescription = "Novell NE4000 PCMCIA Adapter"
ProductHardwareNE4000PCMCIATitle       = "Novell NE4000 PCMCIA Adapter"
ProductHardwareMICRODYNEPCMCIADescription = "Microdyne NE4000 PCMCIA Adapter"
ProductHardwareMICRODYNEPCMCIATitle       = "Microdyne NE4000 PCMCIA Adapter"

FunctionTitle   = $(ProductHardware$(Option)Title)" Card Setup"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Combo1Label = "&IRQ Level:"
Combo2Label = "&Memory Base Address:"
Combo3Label = "I/&O Port Address:"

;no translation needed after this

DlgType = "MultiCombo"
DlgTemplate = "WD"
Caption = $(FunctionTitle)

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)

Combo2List = $(PcCardAddressHexList)
Combo2Out  = $(PcCardBaseAddress)

Combo3List = $(IOBaseAddrHexList)
Combo3Out  = $(IOBaseAddress)


ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}


EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO, NO}

HelpContext = $(!IDH_DB_OEMNADWD_INS)

#####oemnxppp.inf all
[LanguagesSupported]
    ENG

[OptionsTextENG]
    RASPPTP             = "Point To Point Tunneling Protocol"

;***********************************************************************
;
;***********************************************************************
[FileConstantsENG]
    ProCaption          = "Windows NT Setup"
    ProCancel           = "Cancel"
    ProCancelMsg        = "Windows NT Networking is not correctly installed.  "+
                          "Are you sure you want to cancel copying files?"
    ProCancelCap        = "Network Setup Message"
    ProText1            = "Copying:"
    ProText2            = "To:"

    FunctionTitleRASPPTP                = "PPTP Card Setup"
    ProductSoftwareDescription          = "PPTP Miniport Driver"
    ProductHardwareRASPPTPDescription   = "PPTP Adapter"
    ProductSoftwareTitle                = "PPTP Miniport Driver"
    ProductHardwareRASPPTPTitle         = "PPTP Adapter"

    ProductRASPPTPDescription           = "This is a protocol for tunneling secure remote network communications across Point to Point (PPP) connections to the Internet. "+
                                          "It will allow remote and mobile users to dial into the Internet, using local points of presence and Internet service providers (ISPs) to gain access to corporate networks."
    ProductRASPPTPTitle                 = "Point To Point Tunneling Protocol"

    ShellCodeErrorTitle                 = "Error: "$(FunctionTitle)$(Option))
    ShellCodeErrorText                  = "Shell Code Error."

;RASPPTP_SPECIFIC_START
;***********************************************************************
; These constants are specific to the RASPPTP.sys driver for SMAN
;***********************************************************************
[SMANFileConstantsENG]
    PPTPFunctionTitleRASPPTP                = "PPTP Card Setup"
    PPTPProductSoftwareDescription          = "PPTP Protocol Driver"
    PPTPProductHardwareRASPPTPDescription   = "PPTP Adapter"
    PPTPProductSoftwareTitle                = "PPTP Protocol Driver"
    PPTPProductHardwareRASPPTPTitle         = "PPTP Adapter"

;RASPPTP_SPECIFIC_END

;***********************************************************************
;
;***********************************************************************
[DialogConstantsENG]
    Help                = "&Help"
    Exit                = "Cancel"
    OK                  = "OK"
    HelpContext         = ""
    Continue            = "Continue"
    Cancel              = "Cancel"

;***********************************************************************
;
;***********************************************************************
[FileDependentDlgENG]
    ;Label1              = "&IRQ Level:"
    ;Label2              = "&RAM Base Address:"
    DlgType             = "RadioCombination"
    DlgTemplate         = "NE2000"
    Caption             = $(FunctionTitle)$(Option)
    ;Combo1List          = $(IRQ_List)
    ;Combo1Out           = $(InterruptNumber)
    ;Combo2List          = $(RAM_Hex_List)
    ;Combo2Out           = $(RAM_Hex_Value)
    ;ComboListItemsIn    = {Combo1List, Combo2List}
    ;ComboListItemsOut   = {Combo1Out, Combo2Out}
    EditTextIn          = ""
    EditTextLim         = ""
    CBOptionsGreyed     = {}
    NotifyFields        = {NO, NO}
;    HelpContext         = $(!IDH_DB_OEMNADN2_INS)

;***********************************************************************
;
;***********************************************************************
[InvokeRasDlgENG]
    InvokeRasSetupMsg   = "Remote Access Services (RAS) will now be installed. "+
                          "Please configure the PPTP ports in RAS "+
                          "setup to enable you to use RAS over PPTP."
    InvokeRasConfigMsg  = "Remote Access Services (RAS) setup will now be invoked. "+
                          "Please configure the PPTP ports in RAS "+
                          "setup to enable you to use RAS over PPTP."
    InvokeRasConfigMsg2 = "Remote Access Services (RAS) setup will now be invoked. "+
                          "Please remove the PPTP ports in RAS configuration."

    InvokeRasError      = "PPTP setup encountered an error "+
                          "while invoking the RAS setup INF file (OEMNSVRA.INF). "+
                          "Please make sure that the file is present in the "+
                          "System32 directory and is the proper file."

[InvokeRasSetupDlgENG]
    DlgType      = "MessageBox"
    STF_MB_TEXT  = "Remote Access Services (RAS) is not installed. "+
                   "Do you want to install RAS "+
                   "and add the PPTP ports in RAS setup to enable "+
                   "you to use RAS over PPTP?"$(!LF)$(!LF)+
                   "NOTE: if you are going to install Routing and "+
                   "Remote Access Services beta, choose NO"

    STF_MB_TITLE = "PPTP setup"
    STF_MB_TYPE  = 3
    STF_MB_ICON  = 4
    STF_MB_DEF   = 2

[InvokeRasConfigDlgENG]
    DlgType      = "MessageBox"
    STF_MB_TEXT  = "Do you want to configure Remote Access Services (RAS) "+
                   "and add the PPTP ports in RAS setup to enable "+
                   "you to use RAS over PPTP?"

    STF_MB_TITLE = "PPTP setup"
    STF_MB_TYPE  = 3
    STF_MB_ICON  = 4
    STF_MB_DEF   = 2

;***********************************************************************
;
;***********************************************************************
[InvokeTCPIPDlgENG]
    InvokeTCPSetupMsg   = "TCP/IP is not installed. It will now be installed."
    InvokeTCPError      = "PPTP setup encountered an error "+
                          "while invoking the TCP/IP setup INF file (OEMNXPTC.INF). "+
                          "Please make sure that the file is present in the "+
                          "System32 directory and is the proper file."

;***********************************************************************
;
;***********************************************************************
[InvokeCancelDlgENG]
    InvokeCancelMsg = "PPTP setup is incomplete. "+
                       "Please rerun the Setup Program if you want "+
                       "to install PPTP."

;***********************************************************************
;
;***********************************************************************
[InvokeConfigureDlgENG]
    InvokeConfigureMsg = "Please reboot for the new changes to take effect."

#####oemnsvbr.inf all
[LanguagesSupported]
    ENG

[OptionsTextENG]
    RelayAgent = "DHCP Relay Agent"

[FileConstantsENG]
FunctionTitle                   = "Relay Agent Setup"
ProductSoftwareDescription      = "Enables the Windows NT Server to forward DHCP (Dynamic Host Configuration Protocol) broadcasts across a router to a remote DHCP server."
ProductSoftwareDisplayName      = "DHCP Relay Agent"
ProductSoftwareTitle            = "DHCP Relay Agent"
ErrorTCPIPNotInstalled          = "TCP/IP is not installed. Please install TCP/IP and retry this installation."
ShellCodeErrorTitle             = "Error: "$(FunctionTitle)
ShellCodeErrorText              = "Shell Code Error."
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"

[DefaultsENG]

[DialogConstantsENG]
Help            = "&Help"
Exit            = "Cancel"
OK              = "OK"
HelpContext     = ""
Continue        = "Continue"
Cancel          = "Cancel"

[FileDependentDlgENG]

#####oemnsvsm.inf all
[LanguagesSupported]
ENG
[OptionsTextENG]
SFM      = "Services for Macintosh"

[FileConstantsENG]

FunctionTitle                   =  "Services for Macintosh Setup"
ProductATALKDescription         =  "Enables a Macintosh computer to access shared disk space on your computer."
ProductAFPSVCDescription        =  "AppleTalk File Server"
ProductMACPRINTDescription      =  "AppleTalk Print Server"
ProductSFMDescription           =  "Enables a Windows NT Server to act as an AppleTalk router, allowing PC and Macintosh clients to share files and printers."


ProCaption      = $(FunctionTitle)
ProCancel       = "Cancel"
ProCancelMsg    = "Services for Macintosh is not correctly installed. "+
                  "Are you sure you want to cancel copying files ?"
ProCancelCap    = "Services for Macintosh Setup"
ProText1        = "Copying:"
ProText2        = "To:"
Error           = "User has cancelled copying files. Copied files will be removed."

MajorVersion    = "MajorVersion"
MinorVersion    = "MinorVersion"
Version         =  "Version "

AskLocationText = "Setup needs to copy Services for Macintosh files."$(!LF)$(!LF)+
                  "Setup will look for the files in the location specified below. If you want "+
                  "Setup to look in a different place, type the new location. When the location "+
                  "is correct, click Continue."

ProductSFMTitle                 = "Services for Macintosh"
ProductATALKDisplayName         = "AppleTalk Protocol"
ProductATALKTitle               = "AppleTalk Protocol"
ProductAFPSVCDisplayName        = "File Server for Macintosh"
ProductAFPSVCTitle              = "File Server for Macintosh"
ProductAFPSRVRDisplayName       = "SFM Kernel Driver"
ProductMACPRINTDisplayName      = "Print Server for Macintosh"
ProductMACPRINTTitle            = "Print Server for Macintosh"


!UAMVolumeName                  = "Microsoft UAM Volume"
!AtalkMonName                   = "AppleTalk Printing Devices"
!AtalkMonEventLogName           = "AppleTalk Print Monitor"

!AppleShareFolder                       = "AppleShare Folder"
!UamReadMeDestFile                      = "ReadMe.UAM"

GroupName    = "Administrative Tools"
IconName     = "File Manager"


[DialogConstantsENG]

Help        = "&Help"
Exit        = "E&xit Setup"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[UAMVarsENG]
UAMDirName     =       "Microsoft UAM Volume"
UAMPath        =       $(UAMDrive)"\"$(UAMDirName)

[TCCommentsENG]

!XCEL1COMMENT   = "Comment=MS Excel 3.0 Chart"
!XCEL2COMMENT   = "Comment=MS Excel 3.0 Spreadsheet"
!XCEL3COMMENT   = "Comment=MS Excel 3.0 Macrosheet"
!XCEL4COMMENT   = "Comment=MS Excel 3.0 Workspace"
!XCEL5COMMENT   = "Comment=MS Excel 3.0 Add-in MacroFile"
!XCEL6COMMENT   = "Comment=MS Excel 3.0 Template File"
!XCEL7COMMENT   = "Comment=MS Excel 3.0"
!XCEL8COMMENT   = "Comment=MS Excel 4.0 Chart"
!XCEL9COMMENT   = "Comment=MS Excel 4.0 Spreadsheet"
!XCEL10COMMENT  = "Comment=MS Excel 4.0 Macrosheet"
!XCEL11COMMENT  = "Comment=MS Excel 4.0 WorkSpace"
!XCEL12COMMENT  = "Comment=MS Excel 4.0 Add-in MacroFile"
!XCEL13COMMENT  = "Comment=MS Excel 4.0 Template File"
!MSWD1COMMENT   = "Comment=MS Word 5.1 Document"
!MSWD2COMMENT   = "Comment=MS Word 5.1 Document"
!MSWD3COMMENT   = "Comment=MS Word 6.0 Document"
!MSWD4COMMENT   = "Comment=MS Word 6.0 Template"
!MSPJ1COMMENT   = "Comment=MS Project 4.0"
!MSPJ2COMMENT   = "Comment=MS Project 4.0 Exchange File"
!MSPJ3COMMENT   = "Comment=MS Project 4.0 Calendar"
!MSPJ4COMMENT   = "Comment=MS Project 4.0 View"
!MSPJ5COMMENT   = "Comment=MS Project 4.0 WorkSpace"
!MSPJ6COMMENT   = "Comment=MS Project 4.0 Template"
!ALD31COMMENT   = "Comment=Pagemaker 3.0  Publication"
!ALD32COMMENT   = "Comment=Pagemaker 3.0 Template"
!ALD33COMMENT   = "Comment=Pagemaker 3.0 Tiff Graphics"
!ALD41COMMENT   = "Comment=Pagemaker 4.0 Publication"
!ALD42COMMENT   = "Comment=Pagemaker 4.0 Template"
!ALD43COMMENT   = "Comment=Pagemaker 4.0 Tiff Graphics"
!MORECOMMENT    = "Comment=Symantec More File"
!FOX+COMMENT    = "Comment=FoxBase Plus"
!ARTZCOMMENT    = "Comment=Adobe Illustrator"
!SIT!COMMENT    = "Comment=Aladdin Stuffit"
!PPT2COMMENT    = "Comment=MS PowerPoint 2.0"
!PPT3COMMENT    = "Comment=MS PowerPoint 3.0"
!L123COMMENT    = "Comment=Lotus 1-2-3"
!LMANCOMMENT    = "Comment=LMAN Executables"
!TTXTCOMMENT    = "Comment=Teach Text Document"
!FOXX1COMMENT   = "Comment=FoxPro 2.0 Table"
!FOXX2COMMENT   = "Comment=FoxPro 2.0 Memo"
!FOXX3COMMENT   = "Comment=FoxPro 2.0 Index"
!FOXX4COMMENT   = "Comment=FoxPro 2.0 Compound Index"
!FOXX5COMMENT   = "Comment=FoxPro 2.0 Program"
!FOXX6COMMENT   = "Comment=FoxPro 2.0 Report"
!FOXX7COMMENT   = "Comment=FoxPro 2.0 Report Memo"
!FOXX8COMMENT   = "Comment=FoxPro 2.0 Label"
!FOXX9COMMENT   = "Comment=FoxPro 2.0 Label Memo"
!FOXX10COMMENT   = "Comment=FoxPro 2.0 Screen"
!FOXX11COMMENT   = "Comment=FoxPro 2.0 Screen Memo"
!FOXX12COMMENT   = "Comment=FoxPro 2.0 Menu"
!FOXX13COMMENT   = "Comment=FoxPro 2.0 Menu Memo"
!FOXX14COMMENT   = "Comment=FoxPro 2.0 Gen. Query Program"
!FOXX15COMMENT   = "Comment=FoxPro 2.0 Project"
!FOXX16COMMENT   = "Comment=FoxPro 2.0 Project Memo"

;------------------------------------------------------------------
; Express /Custom Mode Install Dialog - Used In Initial Setup Only
;------------------------------------------------------------------

[SetupSpaceDlgENG]
STF_MB_TEXT = +
"Setup could not find enough space on your Windows NT Server system partition. "+
"Setup requires at least 2 MB for installing Services for Macintosh. "+
"You can retry installation after freeing up disk space on your system partition."


;no translation needed after this

DlgType         = "MessageBox"
STF_MB_TYPE     = 5
STF_MB_ICON     = 3
STF_MB_DEF      = 3
STF_MB_TITLE    = $(FunctionTitle)

;no translation needed after this

[ExitWarningDlgENG]
STF_MB_TITLE    = "Services for Macintosh Setup"
STF_MB_TEXT     = "Services for Macintosh is not correctly installed. Are you "+
                  "sure you want to exit Setup?"

;no translation needed after this

DlgType         = "MessageBox"
STF_MB_TYPE     = 3
STF_MB_ICON     = 5
STF_MB_DEF      = 2

;------------------------------------------------------------------
; Error Strings
;------------------------------------------------------------------

;------------------------------------------------------------------
; Miscellaneous Errors
;------------------------------------------------------------------

[MiscErrorString1ENG]
ErrorString = +
" of Services for Macintosh is already installed on your system. "+
"Use [Update] to update to newer versions."


[MiscErrorString2ENG]
ErrorString = +
"Sufficient memory is not available on your system to run  "+
"Services for Macintosh. Services for Macintosh requires "+
"a minimum of 8 MB to function."


[MiscErrorString3ENG]
ErrorString = +
"Setup encountered the following error during installation. Try installing "+
"Services for Macintosh after rebooting your system. "$(LF)

[ShellingErrorENG]
ErrorString  = +
"An internal error occurred. Contact Technical Support."

[NTFSFormatHappeningENG]
ErrorString = +
"Setup could not find any NTFS partitions in your system. You could be "+
"reformatting or converting your existing NTFS partition. The Microsoft UAM "+
"volume cannot be installed at this time. Setup will proceed with installation. "+
"Use the command SETUP /i OEMNSVSM.INF /c UAMINSTALL to install the UAM volume "+
"after Windows NT Server installation."


[UamFileNotCopiedENG]
ErrorString  = +
"Setup cannot copy Microsoft user authentication files to the Microsoft UAM "+
"volume. Macintosh workstations will be unable to download these files. There "+
"may not be enough disk space on your NTFS partition or the UAM files might be "+
"missing from your Windows NT Server distribution disks. Refer to your Administrator's guide "+
"on how to create this volume after installation."

[UamFileNotCopied1ENG]
ErrorString  = +
"Setup cannot copy Microsoft user authentication files to the Microsoft UAM "+
"volume. Macintosh workstations will be unable to download these files. There "+
"may not be enough disk space on your NTFS partition or the UAM files might be "+
"missing from your Windows NT Server distribution disks. Refer to your Administrator's guide "+
"on how to create this volume after installation."

[UamSecurityNotSetENG]
ErrorString = +
"Setup cannot set the default security settings for the UAM volume. "+
"Security for the UAM volume can also be set from the User Manager "+
"after installation."

[CannotStartAtalkENG]
ErrorSuffix = +
"Setup was unable to start the AppleTalk Protocol. You will be unable to choose "+
"a desired zone at this time."

[CannotStartAfdENG]
ErrorSuffix = +
"Setup was unable to start the AFD Driver. You will be unable to choose "+
"a desired zone at this time."

;------------------------------------------------------------------
; Status Strings
;------------------------------------------------------------------


[StatusInstallSfmENG]
Status = "Installing Services for Macintosh..."

[StatusRemoveSfmENG]
Status = "Removing Services for Macintosh files..."

[StatusStartingAppleTalkENG]
Status = "Starting AppleTalk Protocol..."



;------------------------------------------------------------------
; AppleTalk Transport Error Strings
;------------------------------------------------------------------

[AtalkString1ENG]
ErrorString  = +
"Setup cannot add Windows sockets support for the AppleTalk protocol. "+
"Windows sockets applications will be unable to use the AppleTalk Protocol. "+
"Remove Services for Macintosh after installation and re-install. If the problem "+
"persists, contact Microsoft support."

[AtalkString2ENG]
ErrorString  = +
"Setup cannot remove Windows Sockets support for the AppleTalk protocol."


[AtalkString3ENG]
ErrorString  = +
"Services for Macintosh has just been installed. Services will be "+
"available to Macintosh workstations in the default network. If you would like "+
"the services to appear in a different zone or to configure routing, close "+
"the Control Panel, reboot, start AppleTalk and use the Control Panel "+
"to configure Services for Macintosh."

[AtalkString5ENG]
ErrorString = +
"Setup cannot remove the monitor for the Print Server for Macintosh."

[AFPString1ENG]
ErrorString = +
"Setup cannot find an NTFS partition on your system. "+
"Services for Macintosh requires an NTFS partition for "+
"Macintosh workstations to share files. You can create "+
"the NTFS partition after installing Services for Macintosh. "+
"To format a partition to NTFS, use the command, format [drive] /fs:NTFS. "+
"Setup will proceed with installation."


[AFPString2ENG]
ErrorString = +
"Setup cannot add the Macintosh File Server to the File Manager. "+
"You will be unable to work with Macintosh accessible volumes from "+
"File Manager."


[AFPString3ENG]
ErrorString  = +
"Setup cannot add the Macintosh File Server to the Server Manager. "+
"You will be unable to work with Services for Macintosh servers from "+
"Server Manager."

[AFPString11ENG]
ErrorString  = +
"Setup can not find the volumes key in the MacFile section in registry. "+
"The UAM volume cannot be built."

[AFPString12ENG]
ErrorString  = +
"Setup can not find any NTFS volumes in your system. The UAM volume can not be installed."


[MacPrintString2ENG]
ErrorString = +
"Setup cannot create the eventlog entries for the Print Server for Macintosh. "+
"You will be unable to use the event viewer to see the log for Print Server "+
"for Macintosh."

[MacPrintString3ENG]
ErrorString = +
"Setup cannot add the print processor for the Print Server for Macintosh. "+
"Macintosh workstations will be unable to print postscript jobs to a "+
"non-postscript printer on the Windows NT Server network."

[MacPrintString4ENG]
ErrorString = +
"Setup cannot add the print monitor for the Print Server for Macintosh. "+
"Macintosh workstations will be unable to use print services on this "+
"Windows NT Server."

[MacPrintString5ENG]
ErrorString = +
"Setup cannot remove the print processor for the Print Server for Macintosh."

[MacPrintString6ENG]
ErrorString = +
"Setup can not find the directory to install the Macintosh print processor. "+
"The Macintosh print processor will not be installed."

[MacPrintString7ENG]
ErrorString = +
"Setup cannot remove the monitor for the Print Server for Macintosh."


[MacPrintString10ENG]
ErrorString = +
"Setup cannot create the eventlog entries for the Print Server for Macintosh monitor. "+
"You will be unable to use the event viewer to see the log for Print Server "+
"for Macintosh."


[NoAdaptersFoundENG]

ErrorString = +
"Setup cannot find any network adapter for Services for Macintosh. You will "+
"be unable to use Services for Macintosh. Try adding a network adapter or "+
"enable the bindings for AppleTalk Protocol."

[RemoveDefaultPortENG]
ErrorString  = +
"Setup has detected that the default network adapter used by Services "+
"for Macintosh has been removed. Setup will change the default network, if "+
"one is available. This may cause Macintosh workstations to no longer "+
"see Services for Macintosh on their current zone."

#####oemnxpsm.inf all

[LanguagesSupported]
   ENG
[OptionsTextENG]
   ATALK           = "AppleTalk Protocol"

[FileConstantsENG]
ProductSFMADMTitle              = "Macintosh Administrator Tools"
ProductSFMADMDescription        = "Macintosh Administrator Tools"
ProductATALKTitle               = "AppleTalk Protocol"
ProductSFMADMName               = "SFMADM"
FunctionTitle               = "AppleTalk Protocol Setup"
ProductATALKDescription     = "Enables a Macintosh computer to access shared disk space on your computer."


ProCaption      = $(FunctionTitle)
ProCancel       = "Cancel"
ProCancelMsg    = "AppleTalk Protocol is not correctly installed. "+
                  "Are you sure you want to cancel copying files ?"
ProCancelCap    = "AppleTalk Protocol Setup"
ProText1        = "Copying:"
ProText2        = "To:"
Error           = "User has cancelled copying files. Copied files will be removed."

MajorVersion    = "MajorVersion"
MinorVersion    = "MinorVersion"
Version         =  "Version "
OF              = " of "

!AtalkMonName                   = "AppleTalk Printing Devices"
!AtalkMonEventLogName   = "AppleTalk Print Monitor"

AskLocationText = "Setup needs to copy AppleTalk Protocol files."$(!LF)$(!LF)+
                  "Setup will look for the files in the location specified below. If you want "+
                  "Setup to look in a different place, type the new location. When the location "+
                  "is correct, click Continue."

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[ExitWarningDlgENG]
STF_MB_TITLE    = "AppleTalk Protocol Setup"
STF_MB_TEXT     = "AppleTalk Protocol is not correctly installed. Are you "+
                  "sure you want to exit Setup?"

;no translation needed after this

DlgType         = "MessageBox"
STF_MB_TYPE     = 3
STF_MB_ICON     = 5
STF_MB_DEF      = 2

;------------------------------------------------------------------
; Error Strings
;------------------------------------------------------------------

;------------------------------------------------------------------
; Miscellaneous Errors
;------------------------------------------------------------------

[MiscErrorString1ENG]
ErrorString = +
" is already installed on your system. "+
"Use [Update] to update to newer versions."

[SfmAlreadyInstalledENG]
ErrorString = +
" of Services for Macintosh is already installed on your system. "+
"You have to remove Services for Macintosh before installing the "+
"AppleTalk Protocol."

[MiscErrorString3ENG]
ErrorString = +
"Setup encountered the following error during installation. Try installing "+
"after rebooting your system. "$(LF)

[ShellingErrorENG]
ErrorString  = +
"An internal error occurred. Contact Technical Support."

[CannotStartAtalkENG]
ErrorSuffix = +
"Setup was unable to start the AppleTalk Protocol. You will be unable to choose "+
"a desired zone at this time."

[CannotStartAfdENG]
ErrorSuffix = +
"Setup was unable to start the AFD Driver. You will be unable to choose "+
"a desired zone at this time."

[StatusStartingAppleTalkENG]
Status = "Starting AppleTalk Protocol..."

;------------------------------------------------------------------
; AppleTalk Transport Error Strings
;------------------------------------------------------------------

[AtalkString1ENG]
ErrorString  = +
"Setup cannot add Windows sockets support for the AppleTalk protocol. "+
"Windows sockets applications will be unable to use the AppleTalk Protocol. "+
"Remove Services for Macintosh after installation and re-install. If the problem "+
"persists, contact Microsoft support."

[AtalkString2ENG]
ErrorString  = +
"Setup cannot remove Windows Sockets support for the AppleTalk protocol."


[AtalkString3ENG]
ErrorString  = +
"AppleTalk has just been installed. "+
"If you would like to configure AppleTalk, close "+
"the Control Panel, reboot, start AppleTalk and use the Control Panel "+
"to configure."

[AtalkString4ENG]
ErrorString = +
"Setup cannot add the print monitor for the Print Server for Macintosh. "+
"Macintosh workstations will be unable to use print services on this "+
"Windows NT workstation."

[AtalkString5ENG]
ErrorString = +
"Setup cannot remove the monitor for the Print Server for Macintosh."

[AtalkString6ENG]
"Setup cannot create the eventlog entries for the Print Server for Macintosh monitor. "+
"You will be unable to use the event viewer to see the log for Print Server "+
"for Macintosh."

[AtalkString7ENG]
ErrorString = +
"Services for Macintosh is installed on your system and it requires "+
"AppleTalk Protocol for proper operation."+
"You have to remove Services for Macintosh if you desire to remove "+
"AppleTalk Protocol."

[AFPString2ENG]
ErrorString = +
"Setup cannot add the Macintosh File Server to the File Manager. "+
"You will be unable to work with Macintosh accessible volumes from "+
"File Manager."


[AFPString3ENG]
ErrorString  = +
"Setup cannot add the Macintosh File Server to the Server Manager. "+
"You will be unable to work with Services for Macintosh servers from "+
"Server Manager."

[NoAdaptersFoundENG]

ErrorString = +
"Setup cannot find any network adapter for the AppleTalk Protocol. You will "+
"be unable to use AppleTalk Protocol. Try adding a network adapter or "+
"enable the bindings for AppleTalk Protocol."

[RemoveDefaultPortENG]
ErrorString  = +
"Setup has detected that the default network adapter used by AppleTalk "+
"Protocol has been removed. Setup will change the default network, if "+
"one is available."

[CantConfigureADMENG]
ErrorString = +
"You cannot configure this software component."

[RemovingSFMENG]
Message = "You have Services for Macintosh (SFM) installed on your "+
          "Windows NT Workstation. "+
          "SFM is only supported on the Windows NT Server. "+
          "Your SFM installation will be removed since this is not a "+
          "supported configuration. "+
          "Please install the Windows NT Server if you want to run SFM."


#####netbond.inf all
[MessageTextENG]
ProCaption   = "Windows NT Networking Installation"
ProCancel    = "Cancel"
MPreInstall1 = "Setup is installing the "
MPreInstall2 = "..."
MPostInstall = " has been installed."
ProCancelMsg = "Windows NT is not correctly installed.  Are you sure you want "+
                   "to cancel copying files?"
ProCancelCap = "Setup Message"
MPreUpgrade1 = "Setup is upgrading the "
MPostUpgrade = " has been upgraded."

MPreRemove1 = "Setup is removing the "
MPreRemove2 = "..."
MPostRemove = " has been removed."

[FatalErrorENG]
; do not translate the string on the left of the '='
Error = "Setup was unable to process the INF file "$(FailedInfFile)" which is required "+
        "for network installation."

[ErrorMsgENG]
CannotFindNtFiles = "The Windows NT files were not found in "$(Path1)", "$(Path2)", or "$(Path3)". Please make sure your input path is correct."

[FatalDlgENG]
STF_MB_TITLE = "Setup Message"
; no translation starting now
DlgType = "MessageBox"
STF_MB_TEXT  = $(Error)
STF_MB_TYPE  = 1
STF_MB_ICON  = 3
STF_MB_DEF   = 1
; end of no translation zone

[UpgradeWarnings]
; do not translate the string on the left of the '='
Warning = "You have the following product installed on your computer:  "$(ServiceTitle)".  Windows NT cannot upgrade this component.  Please contact your system administrator  or look through your product documentation to make sure that this product is compatible with this version of Windows NT."

[UpgradeNetCardWarnings]
; do not translate the string on the left of the '='
Warning = "The following non-Microsoft networking component is installed on this computer:  "$(ServiceTitle)".  Although your network connection may function properly after the upgrade is completed,  the component should be removed and replaced with a newer version."

[WarningDlg]
STF_MB_TITLE = "Network Setup Information"

; no translation starting now
DlgType = "MessageBox"
STF_MB_TEXT  = $(Warning)
STF_MB_TYPE  = 1
STF_MB_ICON  = 2
STF_MB_DEF   = 1
; end of no translation zone

[UpgradeDialogENG]
    ProCaption   = "Windows NT Networking Upgrade"
    ProCancel    = "Cancel"
    ProCancelMsg = "Windows NT is not correctly upgraded.  Are you sure you want "+
                   "to cancel copying files?"
    ProCancelCap = "Network Upgrade Message"
    ProText1     = "Copying:"
    ProText2     = "To:"

#####oemnsvin.inf all
[LanguagesSupported]
    ENG


;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsWINNTTextENG]
    INETSRV      = "Microsoft Peer Web Services"

[OptionsLANMANNTTextENG]
    INETSRV      = "Microsoft Internet Information Server 2.0"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionLANMANNTTitle    = "Microsoft Internet Information Server 2.0"
FunctionWINNTTitle = "Microsoft Peer Web Services"
;
; Software
;
ProductSoftwareWINNTDescription      = "Microsoft Peer Web Services"
ProductSoftwareLANMANNTDescription   = "Microsoft Internet Information Server 2.0"
;
; Hardware
;
OptionList     = ^(Options, 1)
OptionTextList = ^(OptionsTextENG, 1)

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

Warning1 = "Please use Internet Manager to configure the software."
Warning2Winnt = "Microsoft Peer Web Services may be deleted by another process. Please restart your Network Control Panel applet."
Warning2LanmanNt = "Microsoft Internet Information Server may be deleted by another process. Please restart your Network Control Panel applet."
Warning3Winnt = "Microsoft Peer Web Services may be installed by another process. Please restart your Network Control Panel applet."
Warning3LanmanNt = "Microsoft Internet Information Server may be installed by another process. Please restart your Network Control Panel applet."
Warning4Winnt = "Microsoft Peer Web Services cannot be installed without proper network protocol setup. Please make sure your network protocol is installed."
Warning4LanmanNt = "Microsoft Internet Information Server cannot be installed without proper network protocol setup. Please make sure your network protocl is installed."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for sonic
;

#####oemnadsn.inf all
[LanguagesSupported]
    ENG

[OptionsTextENG]
    SNIMAC      = "SNI RM400/RM200 Driver for onboard Ethernet Adapter"

[FileConstantsENG]
    ProCaption   = "Windows NT Setup"
    ProCancel    = "Cancel"
    ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
                   "Are you sure you want to cancel copying files?"
    ProCancelCap = "Network Setup Message"
    ProText1     = "Copying:"
    ProText2     = "To:"
    FunctionTitle                   = "SNI RM400/RM200 onboard Ethernet Adapter Card Setup"
    ProductSoftwareDescription      = "SNI RM400/RM200 onboard Ethernet Adapter Driver"
    OptionList     = ^(Options, 1)
    OptionTextList = ^(OptionsTextENG, 1)
    ProductHardwareDescription      = *($(OptionTextList), ~($(OptionList), $(Option)))
    ProductSoftwareTitle            = "SNI RM400/RM200 onboard Ethernet Adapter Driver"
    ProductHardwareSNIMACx00Title      = "SNI RM400/RM200 onboard Ethernet Adapter"
    ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
    ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
    Help        = "&Help"
    Exit        = "Cancel"
    OK          = "OK"
    HelpContext = ""
    Continue    = "C&ontinue"
    Cancel      = "C&ancel"

[FileDependentDlgENG]

[Warning1ENG]
    Error = "No configuration is required for this adapter card."



#####oemnadma.inf all
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; Text strings to identify adapter options.
;-----------------------------------------------------------------------

[OptionsTextENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPISA   = "Madge Smart 16/4 AT Ringnode"
    MSMDGMPATP   = "Madge Smart 16/4 AT Plus Ringnode"
    MSMDGMPISAC  = "Madge Smart 16/4 ISA Client Ringnode"
    MSMDGMPISACP = "Madge Smart 16/4 ISA Client Plus Ringnode"
    MSMDGMPPC    = "Madge Smart 16/4 PC Ringnode"
    MSMDGMPSM16  = "Madge Smart 16 Ringnode"
    MSMDGMPPNP   = "Madge Smart 16/4 ISA Client PnP Ringnode"
    MSMDGMPMCA   = "Madge Smart 16/4 MC Ringnode"
    MSMDGMPMC32  = "Madge Smart 16/4 MC32 Ringnode"
    MSMDGMPEISA  = "Madge Smart 16/4 EISA Ringnode"
    MSMDGMPPCI   = "Madge Smart 16/4 PCI Ringnode"
    MSMDGMPPCIBM = "Madge Smart 16/4 PCI Ringnode (BM)"
    MSMDGMPPCMCIA = "Madge Smart 16/4 PCMCIA Ringnode"

[OptionsTextISAENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPISA   = "Madge Smart 16/4 AT Ringnode"
    MSMDGMPATP   = "Madge Smart 16/4 AT Plus Ringnode"
    MSMDGMPISAC  = "Madge Smart 16/4 ISA Client Ringnode"
    MSMDGMPISACP = "Madge Smart 16/4 ISA Client Plus Ringnode"
    MSMDGMPPC    = "Madge Smart 16/4 PC Ringnode"
    MSMDGMPSM16  = "Madge Smart 16 Ringnode"
    MSMDGMPPNP   = "Madge Smart 16/4 ISA Client PnP Ringnode"

[OptionsTextMCAENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPMCA   = "Madge Smart 16/4 MC Ringnode"
    MSMDGMPMC32  = "Madge Smart 16/4 MC32 Ringnode"

[OptionsTextEISAENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPEISA  = "Madge Smart 16/4 EISA Ringnode"
    MSMDGMPISA   = "Madge Smart 16/4 AT Ringnode"
    MSMDGMPATP   = "Madge Smart 16/4 AT Plus Ringnode"
    MSMDGMPISAC  = "Madge Smart 16/4 ISA Client Ringnode"
    MSMDGMPISACP = "Madge Smart 16/4 ISA Client Plus Ringnode"
    MSMDGMPPC    = "Madge Smart 16/4 PC Ringnode"
    MSMDGMPSM16  = "Madge Smart 16 Ringnode"
    MSMDGMPPNP   = "Madge Smart 16/4 ISA Client PnP Ringnode"

[OptionsTextPCIENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPPCI   = "Madge Smart 16/4 PCI Ringnode"
    MSMDGMPPCIBM = "Madge Smart 16/4 PCI Ringnode (BM)"

[OptionsTextPCMCIAENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPPCMCIA = "Madge Smart 16/4 PCMCIA Ringnode"


; ----------------------------------------------------------------------
; Miscellaneous declarations for initialsing lists.
; ----------------------------------------------------------------------

[IoLocationChoices]
    "0x0300",768
    "0x0a20",2592
    "0x1a20",6688
    "0x2a20",10784
    "0x3a20",14880
    "0x4a20",18976
    "0x4e20",20000
    "0x5a20",23072
    "0x5e20",24096
    "0x6a20",27168
    "0x6e20",28192
    "0x7a20",31264
    "0x7e20",32288
    "0x0140",320
    "0x0920",2336
    "0x0940",2368
    "0x0960",2400
    "0x0980",2432
    "0x0a40",2624
    "0x0a60",2656
    "0x0a80",2688
    "0x0aa0",2720
    "0x0b20",2848
    "0x0b40",2880
    "0x0b60",2912
    "0x0b80",2944
    "UNKNOWN",65535

[DmaChannelChoices]
    "PIO",0
    "DMA Channel 01",1
    "DMA Channel 02",2
    "DMA Channel 03",3
    "DMA Channel 04",4
    "DMA Channel 05",5
    "DMA Channel 06",6
    "DMA Channel 07",7
    "DMA Channel 08",8
    "DMA Channel 09",9
    "DMA Channel 10",10
    "DMA Channel 11",11
    "DMA Channel 12",12
    "DMA Channel 13",13
    "DMA Channel 14",14
    "DMA Channel 15",15
    "DMA",500
    "MMIO",501
    "UNKNOWN",65535

[IrqNumberChoices]
    "01",1
    "02",2
    "03",3
    "04",4
    "05",5
    "06",6
    "07",7
    "08",8
    "09",9
    "10",10
    "11",11
    "12",12
    "13",13
    "14",14
    "15",15
    "UNKNOWN",65535

[SlotNumberChoices]
    "00",0
    "01",1
    "02",2
    "03",3
    "04",4
    "05",5
    "06",6
    "07",7
    "08",8
    "09",9
    "10",10
    "11",11
    "12",12
    "13",13
    "14",14
    "15",15
    "16",16
    "17",17
    "18",18
    "19",19
    "20",20
    "21",21
    "22",22
    "23",23
    "24",24
    "25",25
    "26",26
    "27",27
    "28",28
    "29",29
    "30",30
    "31",31
    "UNKNOWN",65535

[RxTxSlotsChoices]
    "Rx=02 Tx=02",0
    "Rx=03 Tx=03",1
    "Rx=04 Tx=04",2
    "Rx=06 Tx=06",3
    "Rx=08 Tx=08",4
    "Rx=10 Tx=10",5

[StatsChoices]
    "Disabled",0
    "Enabled",1

[MpChoices]
    "One",0
    "Multiple",1
    "UNKNOWN",65535
; ----------------------------------------------------------------------
; Language dependent constants specific to the driver.
; ----------------------------------------------------------------------

[FileConstantsENG]

;
; Product Info
;

FunctionTitle   = "MdgMPort v"$(ProductVersion)": Madge Smart Ringnode Setup"

;
; Software.
;

ProductSoftwareTitle       = "MdgMPort"
ProductSoftwareDescription = "MdgMPort: Madge Smart Ringnode NDIS3 Miniport Driver"

;
; Hardware.
;

ProductHardwareMSMDGMPISATitle   = "Madge Smart 16/4 AT Ringnode"
ProductHardwareMSMDGMPATPTitle   = "Madge Smart 16/4 AT Plus Ringnode"
ProductHardwareMSMDGMPISACTitle  = "Madge Smart 16/4 ISA Client Ringnode"
ProductHardwareMSMDGMPISACPTitle = "Madge Smart 16/4 ISA Client Plus Ringnode"
ProductHardwareMSMDGMPPCTitle    = "Madge Smart 16/4 PC Ringnode"
ProductHardwareMSMDGMPEISATitle  = "Madge Smart 16/4 EISA Ringnode"
ProductHardwareMSMDGMPMCATitle   = "Madge Smart 16/4 MC Ringnode"
ProductHardwareMSMDGMPMC32Title  = "Madge Smart 16/4 MC32 Ringnode"
ProductHardwareMSMDGMPSM16Title  = "Madge Smart 16 Ringnode"
ProductHardwareMSMDGMPPNPTitle   = "Madge Smart 16/4 ISA Client PnP Ringnode"
ProductHardwareMSMDGMPPCITitle   = "Madge Smart 16/4 PCI Ringnode"
ProductHardwareMSMDGMPPCIBMTitle = "Madge Smart 16/4 PCI Ringnode (BM)"
ProductHardwareMSMDGMPPCMCIATitle  = "Madge Smart 16/4 PCMCIA Ringnode"

ProductHardwareMSMDGMPISADescription   = "Madge Smart 16/4 AT Ringnode"
ProductHardwareMSMDGMPATPDescription   = "Madge Smart 16/4 AT Plus Ringnode"
ProductHardwareMSMDGMPISACDescription  = "Madge Smart 16/4 ISA Client Ringnode"
ProductHardwareMSMDGMPISACPDescription = "Madge Smart 16/4 ISA Client Plus Ringnode"
ProductHardwareMSMDGMPPCDescription    = "Madge Smart 16/4 PC Ringnode"
ProductHardwareMSMDGMPEISADescription  = "Madge Smart 16/4 EISA Ringnode"
ProductHardwareMSMDGMPMCADescription   = "Madge Smart 16/4 MC Ringnode"
ProductHardwareMSMDGMPMC32Description  = "Madge Smart 16/4 MC32 Ringnode"
ProductHardwareMSMDGMPSM16Description  = "Madge Smart 16 Ringnode"
ProductHardwareMSMDGMPPNPDescription   = "Madge Smart 16/4 ISA Client PnP Ringnode"
ProductHardwareMSMDGMPPCIDescription   = "Madge Smart 16/4 PCI Ringnode"
ProductHardwareMSMDGMPPCIBMDescription = "Madge Smart 16/4 PCI Ringnode (BM)"
ProductHardwareMSMDGMPPCMCIADescription   = "Madge Smart 16/4 PCMCIA Ringnode"

;
; Ring speed selection.
;

SpeedUserListMSMDGMPISA    = {"Set at adapter", "Force 16 MBit/s"}
SpeedRawListMSMDGMPISA     = {0, 2}

SpeedUserListMSMDGMPATP    = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPATP     = {0, 1, 2}

SpeedUserListMSMDGMPISAC   = {"Set at adapter", "Force 16 MBit/s"}
SpeedRawListMSMDGMPISAC    = {0, 2}

SpeedUserListMSMDGMPISACP  = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPISACP   = {0, 1, 2}

SpeedUserListMSMDGMPPC     = {"Set at adapter", "Force 16 MBit/s"}
SpeedRawListMSMDGMPPC      = {0, 2}

SpeedUserListMSMDGMPEISA   = {"Set at adapter"}
SpeedRawListMSMDGMPEISA    = {0}

SpeedUserListMSMDGMPMCA    = {"Set at adapter"}
SpeedRawListMSMDGMPMCA     = {0}

SpeedUserListMSMDGMPMC32   = {"Set at adapter"}
SpeedRawListMSMDGMPMC32    = {0}

SpeedUserListMSMDGMPSM16   = {"Always 16 MBit/s"}
SpeedRawListMSMDGMPSM16    = {0}

SpeedUserListMSMDGMPPNP    = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPPNP     = {0, 1, 2}

SpeedUserListMSMDGMPPCI    = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPPCI     = {0, 1, 2}

SpeedUserListMSMDGMPPCIBM  = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPPCIBM   = {0, 1, 2}

SpeedUserListMSMDGMPPCMCIA = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPPCMCIA  = {0, 1, 2}

;
; Adapter types.
;

AdapterTypeFlagMSMDGMPISA    = 100
AdapterTypeFlagMSMDGMPATP    = 100
AdapterTypeFlagMSMDGMPISAC   = 100
AdapterTypeFlagMSMDGMPISACP  = 100
AdapterTypeFlagMSMDGMPPC     = 100
AdapterTypeFlagMSMDGMPEISA   = 500
AdapterTypeFlagMSMDGMPMCA    = 600
AdapterTypeFlagMSMDGMPMC32   = 600
AdapterTypeFlagMSMDGMPSM16   = 400
AdapterTypeFlagMSMDGMPPNP    = 300
AdapterTypeFlagMSMDGMPPCI    = 700
AdapterTypeFlagMSMDGMPPCIBM  = 700
AdapterTypeFlagMSMDGMPPCMCIA = 200

;
; Messages.
;

CANNOT_FIND_ANY_CARD = "Cannot find a Madge Smart Ringnode in the machine. "+
                       "If you are certain that a Madge Smart Ringode is "+
                       "present then try choosing the adapter type "+
                       "instead of automatic installation. Please note "+
                       "that EISA and MCA adapters will only be found if "+
                       "the EISA configuration utility or PS/2 reference "+
                       "diskette respectively have been used to configure "+
                       "the adapter. Also not that automated installation "+
                       "will not find PCI adapters."

TRIMMED_MFS = "WARNING: The maximum frame size at 16Mbps is 17839 bytes"+
	      "  and you have specified a value greater than that. This"+
	      "  value has been reduced to 17839 for you. If you are in"+
	      "  fact running at 4Mbps, the maximum frame size is 4472,"+
	      "  but do not worry -  the driver will automatically  set"+
	      "  the correct value, and write it to the Event Log."

ShellCodeErrorTitle = "Error: "$(FunctionTitle)
ShellCodeErrorText  = "Shell Code Error"

ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

; ---------------------------------------------------------------------
; Language dependant general dialog constants.
; ---------------------------------------------------------------------

[DialogConstantsENG]

;
; Common button names, etc.
;

Help        = "&Help"
Exit        = "&Cancel"
OK          = "&OK"
Continue    = "C&ontinue"
Cancel      = "C&ancel"
HelpContext = ""

OldValueTitleInstall   = "Current hardware settings"
OldValueTitleConfigure = "Currently configured settings"

ConsultHelp = "Consult help before changing the settings below"

; -----------------------------------------------------------------------
; Language depentant input dialog constants.
; -----------------------------------------------------------------------

[FileDependentDlgENG]

DlgType     = "RadioCombination"
DlgTemplate = $(Option)

Caption = $(FunctionTitle)

Combo1Label = "&IRQ Level:"
Combo2Label = "I/O &Location:"
Combo3Label = "&Transfer method:"
Combo4Label = "Rx/Tx &Buffers:"
Combo5Label = "Traffic &Statistics Gathering:"
Combo6Label = "Please choose a Madge adapter to install"
Combo7Label = "Number of processors in &PC:"
Combo8Label = "Slot &Number:"
Combo9Label = "&Ring Speed:"

PciCombo8Label = "PCI &Device ID:"

Combo1List = $(IrqList)
Combo1Out  = $(IrqNumber)

Combo2List = $(IoList)
Combo2Out  = $(IoLocation)

Combo3List = $(DmaList)
Combo3Out  = $(DmaChannel)

Combo4List = $(RxTxUserList)
Combo4Out  = $(RxTxSlots)

Combo5List = $(StatsUserList)
Combo5Out  = $(StatsFlag)

Combo6List = $(AdapterDescList)
Combo6Out  = $(AdapterType)

Combo7List = $(MpList)
Combo7Out  = $(MpFlag)

Combo8List = $(SlotList)
Combo8Out  = $(SlotNumber)

Combo9List = $(SpeedUserList)
Combo9Out  = $(SpeedFlag)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List, Combo4List, Combo5List, Combo6List, Combo7List, Combo8List, Combo9List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out, Combo4Out, Combo5Out, Combo6Out, Combo7Out, Combo8Out, Combo9Out}

Edit1Label  = "Max&FrameSize:"
Edit2Label  = "&LAA:"
EditTextIn  = {$(MaxFrameSize), $(LAA)}
EditTextLim = {5,17}
EditTextOut = {}

CBOptionsGreyed = {}
NotifyFields = {NO, NO, NO, NO, NO, NO, NO, NO}

HelpContext = $(MadgeHelpId$(Option))

AdapterTitle = #(OptionsText$(!STF_LANGUAGE),$(Option),1)

#####oemnadam.inf i386
[LanguagesSupported]
    ENG
[OptionsTextENG]
    AM1500T = "Advanced Micro Devices AM2100/AM1500T Adapter"
    AM1500T1 = "Novell/Anthem NE1500T Adapter"
    AM1500T2 = "Novell/Anthem NE2100 Adapter"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionAM1500TTitle   = "AMD AM2100/AM1500T Adapter Setup"
FunctionAM1500T1Title   = "Novell/Anthem NE1500T Adapter Setup"
FunctionAM1500T2Title   = "Novell/Anthem NE2100 Adapter Setup"
ProductSoftwareAM1500TDescription       = "AMD AM2100/AM1500T Driver"
ProductSoftwareAM1500T1Description      = "Novell/Anthem NE1500T Driver"
ProductSoftwareAM1500T2Description      = "Novell/Anthem NE2100 Driver"
ProductHardwareAM1500TDescription       = "AMD AM2100/AM1500T Adapter"
ProductHardwareAM1500T1Description      = "Novell/Anthem NE1500T Adapter"
ProductHardwareAM1500T2Description      = "Novell/Anthem NE2100 Adapter"
ProductSoftwareAM1500TTitle     = "AMD Driver"
ProductSoftwareAM1500T1Title    = "Novell/Anthem NE1500T Driver"
ProductSoftwareAM1500T2Title    = "Novell/Anthem NE2100 Driver"
ProductHardwareAM1500TTitle     = "AMD AM2100/AM1500T Adapter"
ProductHardwareAM1500T1Title    = "Novell/Anthem NE1500T Adapter"
ProductHardwareAM1500T2Title    = "Novell/Anthem NE2100 Adapter"
ShellCodeErrorTitle     = "Error: "$(Function$(Option)Title)
ShellCodeErrorText      = "Shell Code Error."
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
DlgType = "MultiCombo"
DlgTemplate = "WD"
Caption = $(Function$(Option)Title)
Combo1Label = "&IRQ Level:"
Combo2Label = "&DMA Channel:"
Combo3Label = "I/&O Port Address:"
Combo1List = $(IRQ_List)
Combo1Out  = $(IRQLevel)
Combo2List = $(DMAChannelList)
Combo2Out  = $(DMAChannel)
Combo3List = $(IOBaseAddressHexList)
Combo3Out  = $(IOBaseAddress)
ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}
EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO, NO}
HelpContext = $(!IDH_DB_OEMNADAM_INS)
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\inf\win4\tools\escpeinf\escpeinf.txt ===
Author: Sandy Coyne
Date: March 7, 2000


Given two files as input, ESCPEINF.EXE generates one output file.

Usage: escpeinf U|C <input file> <output file> <layout.inf>
        U = Upgrade
        C = Clean Install
All fields are required.

The input file must be an inf file containing a [File Security] section. If it does not contain that section, the output file should be identical to the input.

All comparisons are case insensitive. All quotes are required where shown.

Any line that does not fit the following format should be copied to the output file unchanged.

Recognized Input Lines, only in the [File Security] section:

	"<directory>\<WildCardName>",<Integer>,"<SecurityDescriptorString>"

After a line containing a wildcard, there may be zero or more exception lines:

	Exception="<ExceptionFileName>"


Input Detail:
<directory> must be one of the directories in the layout.inf [WinntDirectories] section, and it must begin with "%SystemRoot%" or "%SystemDirectory%"   An example is "%SystemRoot%\Help"

<WildCardName> must be a filename containing at least one wildcard.   An example is "*.hlp"

<Integer> must be a natural integer. Since ESCAPE only accepts a few low numbers, it is possible that huge integers will break the tool. This is okay.   An example is "2"

<SecurityDescriptorString> is a properly formatted security descriptor string. One important aspect of this formatting is that it cannot contain any whitespace.  An example is "D:P(A;;GRGX;;;BU)(A;;GRGX;;;PU)(A;;GA;;;BA)(A;;GA;;;SY)"

<ExceptionFileName> is a file name, with no path. If desired, it can contain wildcards.   Examples are "win.ini" or "*.hlp"

Output:
The Recognized Input Lines will not appear in the output. In their place will be lines in this format:
	"<directory>\<filename1>",<Integer>,"<SecurityDescriptorString>"
	"<directory>\<filename2>",<Integer>,"<SecurityDescriptorString>"
	"<directory>\<filename3>",<Integer>,"<SecurityDescriptorString>"
			.
			.
			.

Output Detail:
<directory> will be identical to the <directory> field of the input.

<filenameX> will be a filename that is found in the layout.inf that matches the <WildCardName> field of the input and is destined for <directory>, except if the filename matches the <ExceptionFileName> field, or if the file is never installed in this mode (Upgrade or Clean Install).

<Integer> will be identical to the <Integer> field of the input.

<SecurityDescriptorString> will be identical to the <SecurityDescriptorString> field of the input.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\inf\beta\jpn_net.txt ===
#####oemnadso.inf mips
[LanguagesSupported]
    ENG


;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SONIC      = "ARC Built-in Ethernet Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "ARC Built-in Ethernet Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "ARC Built-in Ethernet Adapter Driver"
;
; Hardware
;
OptionList     = ^(Options, 1)
OptionTextList = ^(OptionsTextENG, 1)

ProductHardwareDescription      = *($(OptionTextList), ~($(OptionList), $(Option)))

ProductSoftwareTitle    = "ARC Built-in Ethernet Adapter Driver"
ProductHardwareSONICTitle       = "ARC Built-in Ethernet Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for sonic
;

[Warning1ENG]
Error = "No configuration is required for this adapter card."

#####oemnadim.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    EE16MC     = "Intel Ether Express MCA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Intel Ether Express MCA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Intel Ether Express MCA Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Intel Ether Express MCA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Intel Ether Express MCA Adapter Driver"
ProductHardwareTitle    = "Intel Ether Express MCA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;

#####oemnadem.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNKMC     = "3Com 3C523 Etherlink/MC Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "3Com 3C523 Etherlink/MC Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com 3C523 Etherlink/MC Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "3Com 3C523 Etherlink/MC Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "3Com 3C523 Etherlink/MC Adapter Driver"
ProductHardwareTitle    = "3Com 3C523 Etherlink/MC Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;
#####oemnadtm.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    IBMTOKMC     = "IBM Token Ring 4/16 Adapter /A"
    IBMTOKA      = "IBM Token Ring Adapter /A"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "IBM Token Ring Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "IBM Token Ring Adapter Driver"
;
; Hardware
;
ProductHardwareIBMTOKADescription      = "IBM Token Ring Adapter /A"
ProductHardwareIBMTOKMCDescription     = "IBM Token Ring 4/16 Adapter /A"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "IBM Token Ring Adapter Driver"
ProductHardwareIBMTOKATitle     = "IBM Token Ring Adapter /A"
ProductHardwareIBMTOKMCTitle    = "IBM Token Ring 4/16 Adapter /A"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Edit1Label = "&Network Address:"

;no translation needed after this

DlgType = "Edit"
DlgTemplate = "NETWORK_NUMBER"
Caption = $(FunctionTitle)

HelpContext = $(!IDH_DB_OEMNADTM_INS)

EditTextLim = 17
EditTextIn  = $(NetworkAddress)
EditFocus   = "ALL"
RCCtlFocusOn = 403

#####oemnadum.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    UBPS     = "Ungermann-Bass Ethernet NIUps Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Ungermann-Bass Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Ungermann-Bass Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Ungermann-Bass Ethernet NIUps Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Ungermann-Bass Driver"
ProductHardwareTitle    = "Ungermann-Bass Ethernet NIUps Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;

#####oemnadwm.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    WD8003EA = "SMC (WD) 8003E /A"
    WD8003WA = "SMC (WD) 8003W /A"
    WD8013WPA = "SMC (WD) 8013WP /A"
    WD8013EPA = "SMC (WD) 8013EP /A"

;  Disable options
;    WD8003EA = "SMC (WD) 8003E /A"
;    WD8003SA = "SMC (WD) 8003S /A"
;    WD8003WA = "SMC (WD) 8003W /A"
;    WD8013WA = "SMC (WD) 8013W /A"
;    WD8115TRA = "SMC (WD) 8115 /A"
;    BISTOR003EA = "SMC (WD) BISTOR003EA /A"
;    BISTOR013EA = "SMC (WD) BISTOR013EA /A"
;    BISTOR013WA = "SMC (WD) BISTOR013WA /A"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
; Product Info
;
FunctionTitle   = "SMC (WD) "$(Option)" Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "SMC (WD) Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "SMC (WD) "$(Option)" Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "SMC (WD) Adapter Driver"
ProductHardwareTitle    = "SMC (WD) "$(Option)" Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;

#####oemnxpxn.inf all
;------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
;       This lists the languages supported by this file.
;       If you add other languages to this list, you must
;       also add the appropriate text sections for the new
;       language
;------------------------------------------------------------------
[LanguagesSupported]
    ENG

;-------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
;
;       These are the text strings used to identify the options to
;       the user.  There should be a header and entry for every
;       language listed in the "LanguagesSupported" section.
;-------------------------------------------------------------------
[OptionsTextENG]
    MCSXNS     = "MCS XNS Network Transport"

;--------------------------------------------------------------------
;       Language Dependent Dialog Constants
;--------------------------------------------------------------------
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "MCS XNS Setup"
ProductMCSXNSDescription     = "MCS XNS System Driver"
ProductUBNBDescription   = "MCS Ungermann-Bass NetBIOS System Driver"
ProductMCSXNSDisplayName = "MCS XNS Network Transport"
ProductMCSXNSTitle      = "MCS XNS Network Transport"
ProductMCSXNSSYSDisplayName = "McsXnssys"
ProductMCSXNSSYSTitle   = "MCS XNS Network Transport Driver"
ProductUBNBDisplayName = "MCS Ungermann-Bass NetBIOS Transport"
ProductUBNBTitle        = "MCS Ungermann-Bass NetBIOS Transport"
ProductUBNBSYSDisplayName = "Ubnbsys"
ProductUBNBSYSTitle      = "MCS Ungermann-Bass NetBIOS Transport Driver"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[FileDependentDlgENG]
;
;--- No UI for McsXns
;

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlg]
STF_MB_TITLE = "Information Message"
; no translation needed for dlgtype
DlgType = "MessageBox"
STF_MB_TEXT  = $(InfoMsgText)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlgCantConfigure]
InfoMsgText = "The MCS XNS service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click  OK.  You will then have the opportunity to configure the adapters."

;--------------------------------------------------------------------
;       Get the string to use while doing the install
;--------------------------------------------------------------------
[Billboard1ENG]
Status = "Installing MCS XNS/UB and related services..."


#####oemnadnp.inf all
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NPEISA     = "Network Peripherals FDDI, EISA"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Network Peripherals FDDI EISA Setup"
;
; Software
;
ProductSoftwareDescription      = "Network Peripherals FDDI EISA Driver"
;
; Hardware
;
ProductHardwareDescription      = "Network Peripherals FDDI EISA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Network Peripherals FDDI, EISA Driver"
ProductHardwareTitle    = "Network Peripherals FDDI Eisa Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for EISA
;

#####nbinfo.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NETBIOS     = "NETBIOS provider"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


ShellCodeErrorTitle     = "Error: NETBIOS Provider"
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]


#####ncpashel.inf all
;**************************************************************************
;  Language Support
;**************************************************************************
[LanguageID]
   ENG

[LanguageTextENG]
   "English (United States)"

;**************************************************************************
; PROGRESS GUAGE VARIABLES: to support file copy operations.
;**************************************************************************

[ProgressCopyENG]
    ProCaption   = "Windows NT Networking Setup"
    ProCancel    = "Cancel"
    ProCancelMsg = "Windows NT is not correctly installed.  Are you sure you want "+
                   "to cancel copying files?"
    ProCancelCap = "Setup Message"
    ProText1     = "Copying:"
    ProText2     = "To:"

    PlatformID_I386 = I386
    PlatformID_Mips = Mips
    PlatformID_PPC  = ppc

;----------------------------------------------
; FATAL ERROR DIALOG
;----------------------------------------------
[FatalDlgENG]
STF_MB_TITLE = "Setup Message"
; no translation needed after this
DlgType = "MessageBox"
STF_MB_TEXT  = $(Error)
STF_MB_TYPE  = 1
STF_MB_ICON  = 3
STF_MB_DEF   = 1

;----------------------------------------------
; FATAL ERRORS
;----------------------------------------------

[FatalError1ENG]
Error = "Initialization failed"

[FatalError2ENG]
Error = "No INF file name given (NTN_Infname)"

[FatalError3ENG]
Error = "Invocation of INF file "$(!NTN_Infname)" failed"

;
;  These values are based upon SHELL_CODE_OK, SHELL_CODE_NO_SUCH_INF, etc.
;
[ShellError1ENG]
Error = "INF file "$(!NTN_Infname)" does not exist"

[ShellError2ENG]
Error = "INF file "$(!NTN_Infname)" does not have a section named "$(!NTN_InfSection)

[ShellError3ENG]
Error = "INF file "$(!NTN_Infname)", section "$(!NTN_InfSection)" has syntax errors"


;-----------------------------------------------------------------------
;
; ROUTINE:      DoAskOemsetupSource
;
; DESCRIPTION:  This routine prompts the source of OEMSETUP.INF
;
; INPUTS:       $0:  Current Src
;
; OUTPUTS:      $R0: STATUS:   STATUS_SUCCESSFUL |
;                              STATUS_USERCANCEL |
;                              STATUS_FAILED
;
;               $R1: Diskette Src
;
;               $R2: Drive to Free or "" if none
;
;               $R3: Actual string returned from dialog
;
;------------------------------------------------------------------------

[DoAskUpgradeSrcDlgTextENG]
    DlgText        = "Please enter the full path for the upgrade/update "+
                     "OEMSETUP.INF file. Then choose Continue."

[IncorrectOemsetupDiskENG]
    ErrorText      = "Update aborted. The OEMSETUP.INF does not support upgrade for the specified component."


#####netdtect.inf all
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NCDETECT = "Netcard Auto-detection Driver and DLLs"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Netcard Auto-detection Driver Setup"
;
; Software
;
ProductSoftwareTitle = "Netcard Auto-detection Driver"
ProductVersion = "1.0"
ServiceDisplayName = "NetDetect"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI; sigh.
;

#####oemnadd1.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DEC100     = "DEC EtherWORKS LC Adapter"
    DEC101     = "DEC EtherWORKS Turbo/LC Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitleDEC100   = "DEC EtherWORKS LC Adapter Card Setup"
FunctionTitleDEC101   = "DEC EtherWORKS Turbo/LC Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "DEC Lance Adapter Driver"
;
; Hardware
;
ProductHardwareDEC100Description        = "DEC EtherWORKS LC Adapter"
ProductHardwareDEC101Description        = "DEC EtherWORKS Turbo/LC Adapter"
ProductSoftwareTitle    = "DEC Lance Adapter Driver"
ProductHardwareDEC100Title      = "DEC EtherWORKS LC Adapter"
ProductHardwareDEC101Title      = "DEC EtherWORKS Turbo/LC Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle$(Option))
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Label1 = "&IRQ Level:"
Label2 = "&Memory Base Address:"
Group1 = "I/O Port Base Address"

Radio1 = "&Primary"
Radio2 = "&Secondary"

; no translation need after this
DlgType = "RadioCombination"
DlgTemplate = "DEC_SETUP"
Caption = $(FunctionTitle$(Option))

CBOptionGreyed = {}
RadioOptionGreyed = {}

RadioIn = {$(IOBaseChoice)}

Combo1List = $(IRQ_List)
Combo1Out  = $(IRQLevel)

Combo2List = $(MemBaseAddrHexList)
Combo2Out  = $(MemBaseAddrHex)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADD1_INS)

#####oemnadd2.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DECETHERWORKSTURBO     = "DEC EtherWORKS Turbo Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

;
; Product Info
;
FunctionTitle   = "DEC EtherWORKS Turbo Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "DEC Lance Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "DEC EtherWORKS Turbo Adapter"
ProductSoftwareTitle    = "DEC Lance Adapter Driver"
ProductHardwareTitle    = "DEC EtherWORKS Turbo Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Label1 = "&IRQ Level:"
Label2 = "&Memory Base Address:"
Group1 = "I/O Port Base Address"

Radio1 = "&Primary"
Radio2 = "&Secondary"

; no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "DEC_SETUP"
Caption = $(FunctionTitle)

CBOptionGreyed = {}
RadioOptionGreyed = {}

RadioIn = {$(IOBaseChoice)}

Combo1List = $(IRQ_List)
Combo1Out  = $(IRQLevel)

Combo2List = $(MemBaseAddrHexList)
Combo2Out  = $(MemBaseAddrHex)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADD2_INS)

#####oemnadd4.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DEC422     = "DEC EtherWORKS Turbo EISA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "DEC EtherWORKS Turbo EISA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "DEC Lance Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "DEC EtherWORKS Turbo EISA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ProductSoftwareTitle    = "DEC Lance Adapter Driver"
ProductHardwareTitle    = "DEC EtherWORKS Turbo EISA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for EISA
;

#####oemnadde.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DECSTAT     = "DEC Turbo Channel Ethernet Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "DEC Turbo Channel Setup"
;
; Software
;
ProductSoftwareDescription      = "DEC Lance Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "DEC Turbo Channel Ethernet Adapter"

ProductSoftwareTitle    = "DEC Lance Adapter Driver"
ProductHardwareTitle    = "DEC Turbo Channel Ethernet Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[DecstationDlgENG]
Label1 = "&Slot Number:"

;no translation needed after this

DlgType = "MultiCombo"
DlgTemplate = "SINGLE_COMBO"
Caption = $(FunctionTitle)

Combo1List = $(SlotList)
Combo1Out  = $(SlotNum)

ComboListItemsIn  = {Combo1List}
ComboListItemsOut = {Combo1Out}

HelpContext = $(!IDH_DB_OEMNADDE_INS)

#####oemnaddi.inf all

[OptionsTextENG]
    DATAFIREU     = "Digi DataFire - ISA1U Adapter"
    DATAFIREST    = "Digi DataFire - ISA1S/T Adapter"
    DATAFIRE4ST   = "Digi DataFire - ISA4S/T Adapter"
    PCIMACISA     = "Digi PCIMAC - ISA Adapter"
    PCIMAC4       = "Digi PCIMAC/4 Adapter"

[OptionsTextMCAENG]
    PCIMACMC      = "Digi PCIMAC - MC Adapter"

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

;
; Product Info
;
FunctionTitle   = "Digi ISDN Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Digi ISDN Adapter Driver"
;
; Hardware
;
ProductHardwarePCIMACDescription        = "Digi ISDN Adapter"

[InvokeRasDlgENG]
InvokeRasSetupMsg = "Digi ISDN setup is complete. "+
                    "Remote Access Services (RAS) will now be installed. "+
                    "Please configure one or more ISDN ports in RAS setup "+
                    "to enable you to use RAS over ISDN."
InvokeRasConfigMsg = "Digi ISDN setup is complete. "+
                     "Remote Access Services (RAS) setup will now be invoked. "+
                     "Please configure one or more ISDN ports in RAS setup "+
                     "to enable you to use RAS over ISDN."
InvokeRasError =  "Digi ISDN setup encountered an error while invoking "+
                  "the RAS setup INF file (OEMNSVRA.INF). "+
                  "Please make sure that the file is present in the system32 "+
                  "directory and is the proper file."
InvokeUserInstallRasMsg = "Digi ISDN setup is complete. "+
                    "Remote Access Services (RAS) should be installed and "+
                    "one or more ISDN ports configured in RAS setup. "

#####oemnaddp.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DECPC     = "DEC EtherWORKS DEPCA"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "DEC EtherWORKS DEPCA Setup"
;
; Software
;
ProductSoftwareDescription      = "DEC Lance Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "DEC EtherWORKS DEPCA"
ProductSoftwareTitle    = "DEC Lance Adapter Driver"
ProductHardwareTitle    = "DEC EtherWORKS DEPCA"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

#####oemnadds.inf all

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DigiBoardCX     = "Digi C/X Adapter"
    DigiBoardXem    = "Digi PC/Xem Adapter"
    DigiBoard8r     = "Digi AccelePort 8 Adapter"
    IBM8r           = "IBM 8-Port Async, EIA-232 (ISA) Adapter"
    DigiBoard8i     = "Digi PC/8i Adapter"
    DigiBoard16i    = "Digi PC/16i Adapter"
    DigiBoard2Port  = "Digi PC/2e (8K) Adapter"
    DigiBoard4Port  = "Digi PC/4e (8K) Adapter"
    DigiBoard8Port  = "Digi PC/8e (8K) Adapter"
    DigiBoard4e     = "Digi PC/4e Adapter"
    DigiBoard8e     = "Digi PC/8e Adapter"
    DigiBoard16e    = "Digi PC/16e Adapter"
    DigiBoardEPC    = "Digi EPC Adapter"
    StarGateClusStar = "Digi/StarGate ClusStar Adapter"

[OptionsTextMCAENG]
    DigiBoardCX     = "Digi MC C/X Adapter"
    DigiBoardXem    = "Digi MC/Xem Adapter"
    DigiBoard8r     = "Digi MC AccelePort 8 Adapter"
    DigiBoard4i     = "Digi MC/4i Adapter"
    DigiBoard8i     = "Digi MC/8i Adapter"
    DigiBoard16i    = "Digi MC/16i Adapter"
    DigiBoard2Port  = "Digi MC/2e (8K) Adapter"
    DigiBoard4Port  = "Digi MC/4e (8K) Adapter"
    DigiBoard8Port  = "Digi MC/8e (8K) Adapter"
    DigiBoardEPC    = "Digi MC EPC Adapter"
    StarGateClusStar = "Digi/StarGate MC ClusStar Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
    ProCaption   = $(ManufacturerDisplayName)" "$(AdapterTitle)" Adapter Setup"
    ProCancel    = "Cance&l"
    ProCancelMsg = $(ManufacturerDisplayName)" Adapters and/or Drivers are not correctly installed. "+
                   "Are you sure you want to cancel copying files?"
    ProCancelCap = $(ProCaption)
    ProText1     = "Copying:"
    ProText2     = "To:"
    Error         = "Unable to determine proper source disk location; copy cannot be performed."
;
; Product Info
;
    FunctionTitle = $(ProCaption)
;
; Software
;
    ProductSoftwareDescription          = $(ManufacturerDisplayName)" FEP 5 Adapter Driver"
    ProductSoftwareDescriptionHdwDriver = $(ManufacturerDisplayName)" "$(AdapterTitle)" Miniport Driver"
    ProductSoftwareTitle    = $(ManufacturerDisplayName)" FEP 5 Driver"
    ProductSoftwareTitleHdwDriver = $(ManufacturerDisplayName)" "$(AdapterTitle)" Miniport Driver"

;
; Configuration Information
;
   ConfigurationTitle = $(ProCaption)
   IRQDisableLabel = "Disabled"

;
; Hardware
;
    ProductHardwareDescription      = $(ManufacturerDisplayName)" "$(AdapterTitle)" Adapter"
    ProductHardwareTitle        = $(ManufacturerDisplayName)" "$(AdapterTitle)" Adapter"

[DialogConstantsENG]
;
; Common button names, etc.
;
    Help        = "&Help"
    Exit        = "E&xit"
    OK          = "OK"
    HelpContext = ""
    Continue    = "C&ontinue"
    Cancel      = "C&ancel"

[UpdatingConfigurationENG]
    UpdatingConfiguration      = "Updating new configuration..."

[AbortMessageENG]
  AbortText  =  "Aborting "$(ManufacturerDisplayName)" Setup. Please reboot the system "+
                "to fix the problem."


#####oemnade1.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNK16     = "3Com Etherlink16/EtherLink16 TP Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "3Com Etherlink 16 Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com Etherlink16/Etherlink16 TP Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "3Com Etherlink16/Etherlink16 TP Adapter"
ProductSoftwareTitle    = "3Com Etherlink16/Etherlink16 TP Adapter Driver"
ProductHardwareTitle    = "3Com Etherlink16/Etherlink16 TP Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Caption = $(FunctionTitle)

Combo1Label = "&IRQ Level:"
Combo2Label = "I/O &Port Address:"
Label1 = "Transceiver Type"
Radio1 = "&External"
Radio2 = "O&n Board"
CheckBox1 = "&Zero Wait State"
Combo3Label = "&Memory Address:"
Combo4Label = "Memo&ry Size:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "ELNK_16"

Combo1Out  = $(IRQ_Level)
Combo1List = $(IRQ_List)
Combo2List = $(IOADDR_Hex_List)
Combo2Out  = $(IOADDR_Hex_Value)
Combo3List = $(MemAddrHexList)
Combo3Out  = $(MemAddrHexValue)
Combo4List = $(MemAddrLengthList)
Combo4Out  = $(MemAddrLength)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List, Combo4List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out, Combo4Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO, NO, NO}

HelpContext = $(!IDH_DB_OEMNADE1_INS)

#####oemnade2.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNKII     = "3Com Etherlink II Adapter (also II/16 and II/16 TP)"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "3Com Etherlink II Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com Etherlink II Adapter Driver"
;
; Hardware
;
ProductHardwareELNKIIDescription        = "3Com Etherlink II Adapter"
ProductSoftwareTitle    = "3Com Etherlink II Adapter Driver"
ProductHardwareELNKIITitle = "3Com Etherlink II Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[MemoryMappedChoicesENG]

Map_1 = 1, "ON"
Map_2 = 0, "OFF"


[FileDependentDlgENG]

DlgText = "Please select values for the following fields:"

Combo1Label = "&IRQ Level:"
Combo2Label = "I/O &Port Address:"
CheckBox1   = "&Memory Mapped"
Label1 = "Transceiver Type"

Radio1 = "&External"
Radio2 = "O&n Board"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "ELNK_II"
Caption = $(FunctionTitle)

Combo1List = $(IRQ_List)
Combo1Out  = $(IRQ_Level)
Combo2List = $(IOADDR_Hex_List)
Combo2Out  = $(IOADDR_Hex_Value)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADE2_INS)

#####oemnadin.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    EE16     = "Intel Ether Express 16 LAN Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Intel Ether Express 16 LAN Adapter Setup"
;
; Software
;
ProductSoftwareDescription      = "Intel Ether Express 16 LAN Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Intel Ether Express 16 LAN Adapter"
ProductSoftwareTitle    = "Intel Ether Express 16 LAN Adapter Driver"
ProductHardwareTitle    = "Intel Ether Express 16 LAN Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

IOReadyListShort = { "Late", "Never" }
IOReadyList      = { "Early", "Late", "Never" }
TransceiverList  = {"Thick Net (AUI/DIX)","Thin Net (BNC/COAX)","Twisted-Pair (TPE)"}

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------

[FileDependentDlgENG]
Combo1Label = "&IRQ Level:"
Combo2Label = "I/&O Port Address:"
Combo3Label = "I/O &Channel Ready:"
Combo4Label = "&Transceiver Type:"

EarlyWarning = "Use of the Early setting may cause system failure in some machines. "+
               "Are you sure you wish to continue?"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "EE_16"
Caption = $(FunctionTitle)

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOBaseAddrHexList)
Combo2Out  = $(IOBaseAddress)
Combo3List = $(IOReadyListDisplay)
Combo3Out  = $(IOReadyValue)
Combo4List = $(TransceiverList)
Combo4Out  = $(TransceiverValue)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List, Combo4List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out, Combo4Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADIN_INS)


#####oemnadep.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    IEEPRO = "Intel EtherExpress PRO Ethernet Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle = "Intel EtherExpress PRO Ethernet Adapter Setup"
;
; Software
;
ProductSoftwareDescription = "Intel EtherExpress PRO Ethernet Driver"
;
; Hardware
;
ProductHardwareDescription = "Intel EtherExpress PRO Ethernet Adapter"

;
; Dialog Message Information
;
IRQList = {"3", "5", "9", "10", "11"}
IOReadyList = { "Early", "Late", "Never", "Auto Detect" }
IOReadyListExt = { "Early", "Late", "Never", "Auto Detect" }
TransceiverList = {"Thick Net (AUI/DIX)","Thin Net (BNC/COAX)","Twisted-Pair (TPE)","Auto Connect"}

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------

[FileDependentDlgENG]

DlgType = "RadioCombination"
DlgTemplate = "EE_16"
Caption = $(FunctionTitle)

DlgText = "Please select values for the following fields:"

Combo1Label = "&Interrupt Number:"
Combo2Label = "I/O &Port Address:"
Combo3Label = "I/O &Channel Ready:"
Combo4Label = "&Transceiver Type:"

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOAddrList)
Combo2Out  = $(IOAddrValue)
Combo3List = $(IOReadyList)
Combo3Out  = $(IOReadyValue)
Combo4List = $(TransceiverList)
Combo4Out  = $(TransceiverValue)
ComboListItemsIn  = {Combo1List, Combo2List, Combo3List, Combo4List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out, Combo4Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADEP_INS)

#####oemnadn2.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NE2000              = "Novell NE2000 Compatible Adapter"
    NE2000SOCKETEA      = "Novell NE2000 Socket EA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitleNE2000   = "Novell NE2000 Compatible Network Card Setup"
FunctionTitleNE2000SOCKETEA   = "Novell NE2000 Socket EA Network Card Setup"


;
; Software
;
ProductSoftwareNE2000Description      = "Novell NE2000 Adapter Driver"
ProductSoftwareNE2000SOCKETEADescription      = "Novell NE2000 Socket EA Adapter Driver"
;
; Hardware
;
ProductHardwareNE2000Description        = "Novell NE2000 Adapter"
ProductHardwareNE2000SOCKETEADescription        = "Novell NE2000 Socket EA Adapter"
ProductSoftwareNE2000Title    = "Novell NE2000 Adapter Driver"
ProductSoftwareNE2000SOCKETEATitle    = "Novell NE2000 Socket EA Adapter Driver"
ProductHardwareNE2000Title      = "Novell NE2000 Adapter"
ProductHardwareNE2000SOCKETEATitle      = "Novell NE2000 Socket EA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------

[FileDependentDlgENG]
Label1 = "&IRQ Level:"
Label2 = "I/O &Port Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "NE2000"
Caption =  $(FunctionTitle$(Option))

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOBaseAddrHexList)
Combo2Out  = $(IOBaseAddress)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADN2_INS)

#####oemnadne.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NE3200     = "Novell NE3200 EISA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Novell 3200 EISA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Novell 3200 Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Novell NE3200 EISA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Novell 3200 Adapter Driver"
ProductHardwareTitle    = "Novell NE3200 EISA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for EISA
;

#####oemnads1.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SONICEISA     = "Sonic, EISA"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Sonic EISA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Sonic EISA Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Sonic, EISA"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Sonic EISA Adapter Driver"
ProductHardwareTitle    = "Sonic, EISA"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for EISA
;

#####oemnadnf.inf all
[LanguagesSupported]
    ENG
[OptionsTextENG]
    CPQTOK     = "<this option is no longer supported for install>"
    BONSAI     = "COMPAQ NetFlex-2 DualPort ENET Controller"
    RODAN      = "COMPAQ NetFlex-2 DualPort TR Controller"
    NETFLX     = "COMPAQ NetFlex/NetFlex-2 ENET-TR Controller"
    DURANGO    = "COMPAQ NetFlex-2 TR Controller"
    MAPLE      = "COMPAQ 32-Bit DualSpeed Token-Ring Controller"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cance&l"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "COMPAQ NetFlex Adapter Card Setup"
ProductSoftwareDescription        = "COMPAQ ENET-TR EISA Driver"
ProductHardwareBONSAIDescription  = "COMPAQ NetFlex-2 DualPort ENET Controller"
ProductHardwareRODANDescription   = "COMPAQ NetFlex-2 DualPort TR Controller"
ProductHardwareNETFLXDescription  = "COMPAQ NetFlex/NetFlex-2 ENET-TR Controller"
ProductHardwareDURANGODescription = "COMPAQ Token-Ring Controllers"
ProductHardwareCPQTOKDescription        = "COMPAQ 32-Bit DualSpeed Token-Ring Controller (ns)"
ProductHardwareMAPLEDescription        = "COMPAQ 32-Bit DualSpeed Token-Ring Controller"
CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ProductSoftwareTitle            = "COMPAQ ENET-TR Driver"
ProductHardwareBONSAITitle      = "COMPAQ NetFlex-2 DualPort ENET Controller"
ProductHardwareRODANTitle       = "COMPAQ NetFlex-2 DualPort TR Controller"
ProductHardwareNETFLXTitle      = "COMPAQ NetFlex/NetFlex-2 ENET-TR Controller"
ProductHardwareDURANGOTitle     = "COMPAQ NetFlex-2 TR Controller"
ProductHardwareCPQTOKTitle      = "COMPAQ 32-Bit Token-Ring Controller (ns)"
ProductHardwareMAPLETitle      = "COMPAQ 32-Bit Token-Ring Controller"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
Edit1Label = "&Network Address:"

;no translation needed after this

DlgType = "Edit"
DlgTemplate = "NETWORK_NUMBER"
Caption = $(FunctionTitle)

HelpContext = $(!IDH_DB_OEMNADNF_INS)

EditTextLim = 17
EditTextIn  = $(NetworkAddress)
EditFocus   = "ALL"
RCCtlFocusOn = 403


#####oemnadp3.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    P1390     = "Proteon p139X Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Proteon p139X Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Proteon Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Proteon p139X Adapter"

ProductSoftwareTitle    = "Proteon Adapter Driver"
ProductHardwareTitle    = "Proteon p139X Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Label1 = "&IRQ Level:"
Label2 = "I/O &Port Base Address:"
Label3 = "&DMA Channel:"
Group1 = "Cable &Type"
Group2 = "Card Sp&eed"

Radio1 = "&UTP"
Radio2 = "&STP"
Edit1Label = "&Network Address:"

;no translation needed after this

Radio3 = "&4"
Radio4 = "&16"

DlgType = "RadioCombination"
DlgTemplate = "PROTEON"
Caption = $(FunctionTitle)

CBOptionGreyed = {}
RadioOptionGreyed = {}

Combo1List = $(IRQ_List)
Combo1Out  = $(IRQLevel)

Combo2List = $(IOBaseAddressList)
Combo2Out  = $(IOBaseAddress)

Combo3List = $(DMA_List)
Combo3Out  = $(DMAChannel)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}


EditTextIn = $(NetworkAddress)
EditTextLim = 17
NotifyFields = {NO, NO, NO}
RCCtlFocusOn = 403

HelpContext = $(!IDH_DB_OEMNADP3_INS)

#####oemnadp9.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    P1990     = "Proteon p199X Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Proteon p199X Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Proteon Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Proteon p199X Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductHardwareTitle    = "Proteon p199X Adapter"
ProductSoftwareTitle    = "Proteon Adapter Driver"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Group1 = "Card Speed"
Radio1 = "&4"
Radio2 = "&16"
Edit1Label = "&Network Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "IBM_TOKEN"
Caption = $(FunctionTitle)
ComboListItemsIn = {}
ComboListItemsOut = {}
EditTextLim = 17
EditTextIn = $(NetworkAddress)
Edit1Label = "&Network Address:"

HelpContext = $(!IDH_DB_OEMNADP9_INS)

EditTextLim = 17
EditTextIn  = $(NetworkAddress)
EditFocus   = "ALL"
RCCtlFocusOn = 403

#####oemnadtk.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    IBMTOK     = "IBM Token Ring (ISA/PCMCIA) Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "IBM Token Ring Adapter Card Setup"
FunctionTitle1   = "IBM Token Ring PCMCIA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "IBM Token Ring (ISA/PCMCIA) Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "IBM Token Ring (ISA/PCMCIA) Adapter"

ProductSoftwareTitle    = "IBM Token Ring Adapter (ISA/PCMCIA) Driver"
ProductHardwareTitle    = "IBM Token Ring (ISA/PCMCIA) Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Group1 = "I/O Port Base Address"
Radio1 = "&Primary"
Radio2 = "&Secondary"
Edit1Label = "&Network Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "IBM_TOKEN"
Caption = $(FunctionTitle)
ComboListItemsIn = {}
ComboListItemsOut = {}
EditTextLim = 17
EditTextIn = $(NetworkAddress)

OptionsGreyed = {}

HelpContext = $(!IDH_DB_OEMNADTK_INS)
RCCtlFocusOn = 403

[SecondDlgENG]
Group1 = "Network Speed"
HelpContext = 1
Caption = $(FunctionTitle1)
Combo1Label = "Network &Speed:"
Combo2Label = "Card &IRQ Level:"
Combo3Label = "Memory &Base:"
Combo1List = $(SpeedList)
Combo1Out = $(Token1Speed)
Combo2List = $(IRQList)
Combo2Out = $(Token1IRQVal)
Combo3List = $(MMIOList)
Combo3Out = $(Token1MMIO)
DlgType = Combination
DlgTemplate = "WD"
ComboListItemsIn = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}
CBOptionsGreyed = {}
EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO, NO}
HelpContext = 1

#####oemnadub.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    UBPC     = "Ungermann-Bass Ethernet NIUpc Adapter"
    UBPCEOTP = "Ungermann-Bass Ethernet NIUpc/EOTP Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Ungermann-Bass Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Ungermann-Bass Adapter Driver"
;
; Hardware
;
ProductHardwareUBPCDescription          = "Ungermann-Bass Ethernet NIUpc Adapter"
ProductHardwareUBPCEOTPDescription      = "Ungermann-Bass Ethernet NIUpc/EOTP Adapter"
ProductHardwareUBPSDescription          = "Ungermann-Bass Ethernet NIUps Adapter"

ProductSoftwareTitle    = "Ungermann-Bass Driver"
ProductHardwareUBPCTitle        = "Ungermann-Bass Ethernet NIUpc Adapter"
ProductHardwareUBPCEOTPTitle    = "Ungermann-Bass Ethernet NIUpc/EOTP Adapter"
ProductHardwareUBPSTitle        = "Ungermann-Bass Ethernet NIUps Adapter"

IRQList  = ^(IRQChoices$(Option), 1)
IRQValues = ^(IRQChoices$(Option), 2)
IOBaseAddrList = ^(IOBaseAddrChoices, 1)
IOBaseAddrValues = ^(IOBaseAddrChoices, 2)
MemMappedWndAddrList = ^(MemMappedWndBaseAddrChoices$(Option), 1)
MemMappedWndAddrValues = ^(MemMappedWndBaseAddrChoices$(Option), 2)

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Label1 = "&Interrupt Number:"
Label2 = "I/O &Port Base Addr:"
Label3 = "&Memory Address:"

;no translation needed after this

DlgType = "Combination"
DlgTemplate = "UBNDIS"
Caption = $(FunctionTitle)

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOBaseAddrList)
Combo2Out  = $(IOBaseAddrValue)
Combo3List = $(MemMappedWndAddrList)
Combo3Out  = $(MemMappedWndAddrValue)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}

EditTextLim = ""
CBOptionsGreyed = {}

HelpContext = $(!IDH_DB_OEMNADUB_INS)

#####oemnadwd.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SMCISA = "SMC (WD) EtherCard"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "SMC (WD) ISA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "SMC (WD) Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "SMC (WD) ISA Adapter"

ProductSoftwareTitle    = "SMC (WD) Adapter Driver"
ProductHardwareTitle    = "SMC (WD) ISA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Combo1Label = "&IRQ Level:"
Combo2Label = "&Memory Base Address:"
Combo3Label = "I/&O Port Address:"

;no translation needed after this

DlgType = "MultiCombo"
DlgTemplate = "WD"
Caption = $(FunctionTitle)

Combo1List = $(IRQ_List)
Combo1Out  = $(IRQLevel)

Combo2List = $(WinBaseAddressHexList)
Combo2Out  = $(WinBaseAddress)

Combo3List = $(IOBaseAddressHexList)
Combo3Out  = $(IOBaseAddress)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}

EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO, NO}

HelpContext = $(!IDH_DB_OEMNADWD_INS)

#####oemnsvf1.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG
;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    FTPD     = "FTP Server"
;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "FTP Setup"
;
; Software
;
ProductSoftwareDescription      = "FTP Server"
;
; The user needs to install Microsoft TCP/IP before install FTP.
; If TCPIP does not exist in the registry, the inf file will popup this
; message and exit.
;
ProductSoftwareDisplayName      = "FTP Server"
ProductSoftwareTitle            = "FTP Server"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DefaultsENG]
AnonymousUsername = "guest"

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for FTP
;

#####oemnsvir.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    IPRIP = "RIP for Internet Protocol"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductIPRIPTitle       = "RIP for Internet Protocol"
ProductIPRIPDescription = "Routing Information Protocol. Enables a router to exchange routing information with other routers on an IP LAN."
ProductIPRIPDisplayName = "RIP for Internet Protocol"

[VerExistsENG]
    Ver   = " version "
    Text1 = " is already installed."

[InUseENG]
Error = "RIP for Internet Protocol is currently in use by other network protocols. Please remove all related services first."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"


#####oemnsvrr.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NWLNKRIP = "RIP for NwLink IPX/SPX compatible transport"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductNWLNKRIPTitle       = "RIP for NWLink IPX"
ProductNWLNKRIPDescription = "RIP for NWLink IPX"
ProductNWLNKRIPDisplayName = "RIP for NWLink IPX"

[VerExistsENG]
    Ver   = " version "
    Text1 = " is already installed. "

[InUseENG]
Error = "RIP for NWLink IPX is currently in use by other network protocols. Please remove all related services first."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[EnableNetbiosRoutingDlgENG]
DlgType = "MessageBox"
STF_MB_TITLE = "RIP for NWLink IPX Configuration"
STF_MB_TYPE  = 3
STF_MB_ICON  = 2
STF_MB_DEF   = 2

Enabled  = "NetBIOS Broadcast Propagation (broadcast of type 20 packets) is currently enabled. "$(!LF)+
           "If any Microsoft Windows clients use NwLink IPX to connect to this server, you must "+
           "enable this option to allow NwLink IPX to function correctly."$(!LF)+
           "Enable this option only if you understand the routing implications because it might "+
           "affect your network performance."$(!LF)$(!LF)+
           "Do you want to disable NetBIOS Broadcast Propagation?"

Disabled = "NetBIOS Broadcast Propagation (broadcast of type 20 packets) is currently disabled. "$(!LF)+
           "If any Microsoft Windows clients use NwLink IPX to connect to this server, you must "+
           "enable this option to allow NwLink IPX to function correctly."$(!LF)+
           "Enable this option only if you understand the routing implications because it might "+
           "affect your network performance."$(!LF)$(!LF)+
           "Do you want to enable NetBIOS Broadcast Propagation?"

[ConfigErrorTxtENG]
Error = "Could not open the NWLNKRIP\Parameters registry key."

#####oemnsvnb.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NETBIOS     = "NetBIOS Interface"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "NetBIOS Interface Setup"
;
; Software
;
ProductSoftwareDescription      = "Defines a software interface and naming convention for Microsoft networking."
ProductSoftwareDisplayName = "NetBIOS Interface"
ProductSoftwareTitle    = "NetBIOS Interface"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for NETBIOS
;
[InfoDlgCantConfigure]
InfoMsgTitle = "Information Message"
InfoMsgText = "The NETBIOS service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click OK."

#####oemnsvrp.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    RPCLOCATE   = "RPC Configuration"
    RPCBANYAN   = "RPC support for Banyan"

[LocatorNamesENG]
LocName1 = "Windows NT Locator"
LocName2 = "DCE Cell Directory Service"

[SecurityNamesENG]
SecName1 = "Windows NT Security Service"
SecName2 = "DCE Security Service"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Software
;
ProductSoftwareDescription      = "Remote Procedure Call service enables RPC-written programs to perform procedures on multiple computers. Includes the endpoint mapper and other RPC services."
ProductRPCTitle   = "RPC Configuration"
ProductRPCBanyanTitle   = "RPC support for Banyan"
ProductRPCBaynanSoftDescription      = "RPC support for Banyan"

RpcSrvDisplayNameRpcss   = "Remote Procedure Call (RPC) Service"
RpcSrvDisplayNameLocator = "Remote Procedure Call (RPC) Locator"
RpcSrvDisplayNameSSP     = "NT LM Security Support Provider"
RpcSuiteDisplayName      = "Remote Procedure Call Configuration"

[RPCLOCATEConstantsENG]
;
; Product Info
;
FunctionTitle   = "RPC Configuration"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[RPCBANYANConstantsENG]
;
; Product Info
;
FunctionTitle   = "RPC support for Banyan"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[RpcProviderDlgENG]
Caption = "RPC Configuration"

Edit1Label = "Network &Address:"

Combo1Label = "&Name Service Provider:"
Combo2Label = "&Security Service Provider:"
Help        = "&Help"
Continue    = "OK"
Cancel      = "Cancel"

;no translation needed after this

DlgType = Combination
DlgTemplate = "RPCPROVIDE"
EditTextIn = $(NetworkAddress)

EditFocus = "ALL"
EditTextLim = 50

Combo1List  = $(LocatorListboxNames)
Combo1Out   = $(LocatorChosenName)

Combo2List  = $(SecurityListboxNames)
Combo2Out   = $(SecurityChosenName)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

HelpContext = $(!IDH_DB_RPCLOCATE_INS)
ExitState   = "Active"
NotifyFields = { YES }

[NonFatalError1ENG]
NonFatal = "No network address was entered."

[NonFatalError2ENG]
NonFatal = "Network address ignored for Windows NT Locator."

[NonFatalError3ENG]
NonFatal = "The DCE Security Service is not installed on this computer."

#####oemnsvsv.inf all

;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SRV         = "Server"
;   XACTSRV     = "LAN Manager Translator"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Server"
;
; Software
;
ProductSRVDescription           = "Installs support for the SMB (Server Message Block) protocol, the core of Microsoft networking."
ProductXACTSRVDescription       = "Microsoft LAN Manager Translator Service"
ProductSRVDisplayName   = "Server"
ProductSRVTitle         = "Server"
ProductXACTDisplayName  = "XactSrv"
ProductSRVSRVDisplayName       = "Srv"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
GroupLabel = "Optimization:"

Radio1 = "&Minimize Memory Used"
Radio2 = "&Balance"
Radio3 = "M&aximize Throughput for File Sharing"
Radio4 = "Ma&ximize Throughput for Network Applications"

CheckBox1 = "Ma&ke Browser Broadcasts to LAN Manager 2.x Clients"

;no translation needed after this

DlgType = "RadioCombination"               ; DON'T NATIONALIZE
DlgTemplate = "LMSERVER"       ; DON'T NATIONALIZE
Caption = $(FunctionTitle)

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
ComboListItemsOut = {}

OptionsGreyed = {}

HelpContext = $(!IDH_DB_OEMNSVSV_INS)

#####oemnsvwk.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    WKSTA       = "Workstation"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

;
; Error Message
;
RemoveBrowserError = "The Browser may not be removed. Please remove the Workstation service first."
UpdateBrowserError = "You must update the Windows Workstation in order to update the Browser."

;
; Product Info
;
FunctionTitle   = "Workstation Services Setup"
;
; Software
;
ProductWKSTADescription         = "Installs the client for the SMB (Server Message Block) protocol, the core of Microsoft networking."
ProductNETLOGONDescription      = "Microsoft Network Authentication Service"
ProductALERTERDescription       = "Microsoft Alerter Service"
ProductBROWSERDescription       = "Distributed protocol required for running the Computer Browser service."
ProductMESSENGERDescription     = "Microsoft Messenger Service"
ProductRDRDescription           = "Microsoft Redirector Service"
ProductREPLDescription          = "Microsoft Directory Replicator Service"
ProductMUPDescription           = "Microsoft MUP Service"
ProviderRDRName                 = "NT Lan Manager"

ProductWKSTADisplayName = "Workstation"
ProductWKSTATitle       = "Workstation"
ProductNETLOGONDisplayName = "Net Logon"
ProductNETLOGONTitle    = "Net Logon"
ProductALERTERDisplayName = "Alerter"
ProductALERTERTitle     = "Alerter"
ProductBROWSERDisplayName = "Computer Browser"
ProductBROWSERTitle     = "Computer Browser"
ProductMESSENGERDisplayName = "Messenger"
ProductMESSENGERTitle   = "Messenger"
ProductRDRDisplayName   = "MRXSMB"
ProductRDRTitle         = "Redirector"
PruductRDRBSSDisplayName = "RDBSS"
ProductProviderName = "Microsoft Windows Network"
ProductREPLDisplayName  = "Directory Replicator"
ProductREPLTitle        = "Directory Replicator"
ProductMUPDisplayName   = "Mup"
ProductMUPTitle         = "Mup"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for workstation
;
#####oemnxpdl.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DLC     = "DLC Protocol"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "DLC Setup"
;
; Software
;
ProductSoftwareDescription      = "Data Link Control enables this computer to connect to an IBM mainframe and set up printers attached directly to network control."

ProductSoftwareDisplayName      = "DLC Protocol"
ProductSoftwareTitle    = "DLC Protocol"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for DLC
;

#####oemnxpnb.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NBF     = "NetBEUI Protocol"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "NetBEUI Protocol"
;
; Software
;
ProductSoftwareDescription      = "A nonroutable protocol designed for use in small LANs."
;
ProductSoftwareDisplayName = "NetBEUI Protocol"
ProductSoftwareTitle    = "NetBEUI Protocol"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
GroupLabel = "Optimization:"

Radio1 = "&Minimize Memory Used"
Radio2 = "&Balance"
Radio3 = "M&aximize Throughput && Connections"

;no translation needed after this

DlgType = "Radio"               ; DON'T NATIONALIZE
DlgTemplate = "NBF"             ; DON'T NATIONALIZE
Caption = $(FunctionTitle)

OptionsGreyed = {}

HelpContext = $(!IDH_DB_OEMNXPNB_INS)


#####oemnxpst.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    STREAMS = "Streams Environment"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductSTREAMSDescription       = "Enables transport drivers developed in STREAMS environments (popular on UNIX platforms) to port easily to Windows NT."
ProductSTREAMSDisplayName       = "Streams Environment"
ProductSTREAMSTitle     = "Streams Environment"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

StreamsAlreadyInstalled  = "Streams Environment is already installed in the system."
RefCountNotZeroMsg = "The Streams Environment is currently in use by other network protocols. Please removed all streams-based protocols first."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for STREAMS
;

;**************************************************************************
;
; BILLBOARD DIALOG SECTIONS
;
;**************************************************************************
[Billboard1ENG]
Status = "Installing STREAMS and related services..."

#####oemnxpnn.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    TCPIP     = "Old TCP/IP Protocol"
;   TELNET    = "Telnet"
;   NBT       = "RFC NetBIOS"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "TCP/IP Setup"
;
; Software
;
ProductTCPIPDescription         = "TCP/IP System Driver"
ProductNBTDescription           = "NBT System Driver"

ProductTCPIPDisplayName = "TCP/IP Protocol"
ProductTCPIPTitle       = "TCP/IP Protocol"

ProductTCPIPSYSDisplayName = "Tcpipsys"
ProductTCPIPSYSTitle    = "TCP/IP Network Transport Driver"

ProductNBTDisplayName   = "TCP/IP NetBIOS"
ProductNBTTitle         = "TCP/IP NetBIOS"

ProductNBTSYSDisplayName = "Nbtsys"
ProductNBTSYSTitle      = "RFC NetBIOS Driver"

ProductTELNETDisplayName = "Telnet"
ProductTELNETTitle      = "Telnet Networking Support Environment"

ProductTELNETSYSDisplayName = "Telnetsys"
ProductTELNETSYSTitle     = "Telnet Driver"

ProductLOOPDisplayName  = "Loop"
ProductLOOPTitle        = "Loop Support Environment"

ProductLMHOSTSDisplayName = "TCP/IP NetBIOS Helper"
ProductLMHOSTSTitle     = "TCP/IP NetBIOS Helper"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for TCPIP
;
;----------------------------------------------
; INFO DIALOG
;----------------------------------------------
[InfoDlg]
STF_MB_TITLE = "Information Message"

;no translation needed after this

DlgType = "MessageBox"
STF_MB_TEXT  = $(InfoMsgText)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

[InfoDlgCantConfigure]
InfoMsgText = "The TCP/IP service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click  OK.  You will then have the opportunity to configure the adapters."

;----------------------------------------------
; WARNING DIALOG
;----------------------------------------------
[WarningDlgENG]
STF_MB_TITLE = "TCP/IP Setup Warning"

;no translation needed after this

DlgType = "MessageBox"
STF_MB_TEXT  = $(Error)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

;**************************************************************************
;
; BILLBOARD DIALOG SECTIONS
;
;**************************************************************************
[Billboard1ENG]
Status = "Installing TCP/IP and related services..."

[LMHOSTDlgENG]

Caption = "Import LMHOSTS File"
Import = "&Import"

DlgText = "If you want to import an existing LMHOSTS file, enter the directory path where the file is located and choose Import. Otherwise, choose Continue."

;no translation needed after this

DlgType = "Edit"
DlgTemplate = "LMHOST"
EditTextIn = ""

HelpContext = $(!IDH_DB_LMHOST_INS)

[LMHOSTAskSourceStringsENG]
String1 = "Error processing path entered.  Please reenter the path."

String2 = "Setup requires a full path of the Windows NT distribution files.  "+
          "Please reenter the path."

String3 = "Setup failed to find a free drive to use to connect to the "+
          "server specified.  Please free up some drives and try again."

String4 = "Setup failed to connect to the server specified.  Please reenter "+
          "the path."

String5 = "You just typed in a new LMHOSTS file path. Are you sure that you want to use the default LMHOSTS file?"

#####utility.inf all
[AFDVars]
;
; AFD Software data
;
ProductAFDTitle         = "AFD Networking Support Environment"
;
; don't localize the next 3 lines
;
ProductAFDName          = "Afd"
ProductAFDImagePath     = "\SystemRoot\System32\drivers\afd.sys"
ProductAFDSvcType       = "kernelautostart"

;---------------------------------------------
;
;  Section used to build RegistryErrorList$(STF_LANGUAGE)
;
[RegistryErrorsENG]
UNABLE_ACCESS_SOFTWARE_REG,"Unable to access SOFTWARE subtree in Registry"
UNABLE_CREATE_MANUFACTURER_KEY,"Unable to create Manufacturer key in Registry"
UNABLE_OPEN_MICROSOFT_KEY,"Unable to open Microsoft subkey in Registry"
UNABLE_CREATE_PRODUCT_KEY,"Unable to create subkey in Registry for Windows NT"
UNABLE_CREATE_PRODUCT_VERSION,"Unable to create version subkey in Registry for Windows NT"
UNABLE_CREATE_NETRULES_KEY,"Unable to create a NetRules subkey in Registry"
UNABLE_OPEN_HARDWARE_SECTION,"Unable to open HARDWARE subkey in Registry"
UNABLE_OPEN_NETWORKCARD_SECTION,"Unable to open NetworkCards subkey in Registry"
UNABLE_OPEN_EVENTLOG_SUBKEY,"Unable to open Eventlog subkey in Registry"
UNABLE_CREATE_NETCARD_CONFIGURATION,"Unable to create entry for network adapter in Registry"
UNABLE_ACCESS_CONFIGURE_SERVICE,"Unable to access Services subkey in Registry"
UNABLE_CREATE_CONFIGURE_SERVICE,"Unable to create Services subkey in Registry"
UNABLE_CREATE_SERVICE_SUBKEY,"Unable to create Services subkey in Registry"
INVALID_DATA_PASSED,"Invalid data passed to Registry utility routine"
SERVICE_ALREADY_EXISTS,"Registry Service subkey already exists"
OPERATION_UNIMPLEMENTED,"Registry operation UNIMPLEMENTED"
CANNOT_FIND_COMPONENT_SERVICE,"Component service name not found or non-existent"
CANNOT_CONFIGURE_HARDWARE,"Cannot configure the hardware component"
CANNOT_CONFIGURE_SOFTWARE,"Cannot configure the software component"
UNABLE_WRITE_REGISTRY, "Cannot write to registry"
UNABLE_INSTALL, "Installation Error"
PROVIDER_ALREADY_EXISTED, "Provider already exists in Registry"
PROVIDER_ORDER_DOES_NOT_EXIST, "Provider order does not exist in Registry."
TCPIP_NONEXIST_ERROR, "Please install Microsoft TCP/IP before installing SNMP."
TCPIP_NONEXIST_ERROR_FTPD, "Please install Microsoft TCP/IP before installing FTP Server."
NO_BINDING_INFO, "Missing Binding Information. Please click BINDINGS button first."
CANNOT_OPEN_EVENTLOG_KEY, "Cannot open Eventlog subkey in Registry."
CANNOT_CREATE_SNMPPROXYKEY, "Cannot create SNMP Proxy subkey in Registry."
REF_COUNT_NOT_ZERO, "Please remove all related network adapter cards before removing the software driver."
UNABLE_REMOVE_CONFIGURE_SERVICE,"Unable to remove Services subkey for a software driver in Registry"
UNABLE_ACCESS_WINSOCK_MAP_INFO,"Unable to access WinSock mapping information in DLL"
VERIFY_WARNING,"The current netcard parameters are not verifiably correct and may result in usage problems or system failure.  Use them anyway?"
CANNOT_DETECT,"Setup is unable to obtain network adapter information from the associated network adapter DLL files.  Operation cannot continue."
UNABLE_COPY_FILE,"File copy operation failed."
ASK_SOURCE_FAIL,"Failed to obtain source file location."
SETUP_FAIL,"Setup operation failed."
SERVICE_MARKED_FOR_DELETE,"This network component has recently been removed. Please restart your computer before installing it again."
REBOOT_MACHINE_BEFORE_ADD_ADAPTER,"This network component has recently been removed. Please restart your computer before installing it again."
CANT_REMOVE_WKSTA_NTAS,"The Workstation cannot be removed on a Windows NT Domain Controller."
CANT_REMOVE_SERVER_NTAS,"The Server cannot be removed on a Windows NT Domain Controller."
NO_ERROR, ""
DLC_NONEXIST_ERROR, "Please install Microsoft DLC before installing Remoteboot."
NBF_NONEXIST_ERROR, "Please install the NetBEUI protocol before installing Remoteboot."
UNABLE_ADD_NAMESPACE_PROVIDER, "Unable to add software component as a Name Space Provider"
UNABLE_REMOVE_NAMESPACE_PROVIDER, "Unable to remove Name Space Provider"

[RegistryErrorUnknownENG]
Error_Bogus = "UNKNOWN REGISTRY FAILURE"

;
;---------------------------------------------
;
; Section used for version already exists dialog
;

[VerExistedENG]
ver = " ver "
Text = " already exists on the system. Please use [Update] to update the software."

[CardExistedENG]
Text = "A network card of this type is already installed in the system. Do you want to continue?"

;---------------------------------------------

;*************************************************************************
;  end of section  RemoveNetworkProvider
;*************************************************************************

[ProgressCopyENG]
    ProCaption   = "Windows NT Networking Setup"
    ProCancel    = "Cancel"
    ProCancelMsg = "Windows NT is not correctly installed.  Are you sure you want "+
                   "to cancel copying files?"
    ProCancelCap = "Setup Message"
    ProText1     = "Copying:"
    ProText2     = "To:"
    Error        = "Unable to determine proper source disk location; copy cannot be performed."

#####oemnxpi1.inf all
;------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
;       This lists the languages supported by this file.
;       If you add other languages to this list, you must
;       also add the appropriate text sections for the new
;       language
;------------------------------------------------------------------
[LanguagesSupported]
    ENG

;-------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
;
;       These are the text strings used to identify the options to
;       the user.  There should be a header and entry for every
;       language listed in the "LanguagesSupported" section.
;-------------------------------------------------------------------
[OptionsTextENG]
    NWLINK     = "Old NWLink IPX/SPX Compatible Transport"

;--------------------------------------------------------------------
;       Language Dependent Dialog Constants
;--------------------------------------------------------------------
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle            = "NWLink Setup"
ProductNWLINKDescription  = "NWLink Transport Driver"
ProductNWNBLINKDescription   = "NWLink NetBIOS Driver"
ProductNWLINKDisplayName = "NWLink"
ProductNWLINKTitle       = "NWLink Transport"
ProductNWLINKSYSDisplayName = "NWLinksys"
ProductNWLINKSYSTitle    = "NWLINK Transport Driver"
ProductNWNBLINKDisplayName  = "NWNBLink"
ProductNWNBLINKTitle        = "NWLink NetBIOS"
ProductNWNBLINKSYSDisplayName = "NWNBLinksys"
ProductNWNBLINKSYSTitle     = "NWLINK NetBIOS Driver"

CompetitorDisplayName = "Novell IPX/SPX II Transport"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[FileDependentDlgENG]
;
;--- No UI for NWLINK
;

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlg]
STF_MB_TITLE = "Information Message"

;
; don't need to localize the dialog type
;
DlgType      = "MessageBox"
STF_MB_TEXT  = $(InfoMsgText)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlgCantConfigure]
InfoMsgText = "The NWLINK service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click  OK.  You will then have the opportunity to configure the adapters."

;--------------------------------------------------------------------
;       Get the string to use while doing the install
;--------------------------------------------------------------------
[Billboard1ENG]
Status = "Installing NWLINK and related services..."

[FatalError1ENG]
Error = "Another IPX/SPX protocol driver is currently installed in this machine, "+
        "and the network interface cannot operate properly with both drivers installed. "+
        "If you still wish to install the NWLINK protocol driver, you must first "+
        "remove the "$(CompetitorDisplayName)" component and reboot your machine."

#####oemnadn1.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NE1000     = "Novell NE1000 Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Novell NE1000 Network Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Novell NE1000 Adapter Driver"
;
; Hardware
;
ProductHardwareNE1000Description        = "Novell NE1000 Adapter"
ProductSoftwareTitle    = "Novell NE1000 Adapter Driver"
ProductHardwareNE1000Title      = "Novell NE1000 Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------

[FileDependentDlgENG]
Label1 = "&IRQ Level:"
Label2 = "I/O &Port Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "NE2000"
Caption = $(FunctionTitle)

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOBaseAddrHexList)
Combo2Out  = $(IOBaseAddress)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADN2_INS)

#####oemnadlb.inf all
[LanguagesSupported]
    ENG

[OptionsTextENG]
    LOOP     = "MS Loopback Adapter"

[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "MS Loopback Adapter Card Setup"
ProductSoftwareDescription = "MS Loopback Adapter Driver"
ProductHardwareDescription = "MS Loopback Adapter"
ProductSoftwareTitle    = "MS Loopback Adapter Driver"
ProductHardwareTitle    = "MS Loopback Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[FileDependentDlgENG]
DlgType = "MultiCombo"
DlgTemplate = "SINGLE_COMBO"
Label1 = "&Frame Type:"
Caption = $(FunctionTitle)
Combo1List = $(MediaList)
Combo1Out  = $(MediaChoice)
ComboListItemsIn  = {Combo1List}
ComboListItemsOut = {Combo1Out}
HelpContext = $(!IDH_DB_OEMNADLB_INS)


#####oemnade3.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNK3ISA509     = "3Com Etherlink III ISA/PCMCIA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "3Com Etherlink III Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com Etherlink III Adapter Driver"
;
; Hardware
;
ProductHardwareELNK3ISA509Description        = "3Com Etherlink III Adapter"
ProductSoftwareTitle    = "3Com Etherlink III Adapter Driver"
ProductHardwareELNK3ISA509Title = "3Com Etherlink III Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

TransceiverList  = {"10 Base T", "Thick Net (AUI/DIX)","","Thin Net (BNC/COAX)"}
TransceiverDisplayList  = {"10 Base T", "Thick Net (AUI/DIX)","Thin Net (BNC/COAX)"}

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Label1 = "I/O &Port Address:"
Label2 = "&Interrupt Number:"
Label3 = "&Transceiver Type:"

;no translation needed after this

DlgType = "Combination"
DlgTemplate = "UBNDIS"
Caption = $(FunctionTitle)

Combo1List = $(IOADDR_Hex_List)
Combo1Out  = $(IOADDR_Hex_Value)
Combo2List = $(IRQList)
Combo2Out  = $(IRQValue)
Combo3List = $(TransceiverDisplayList)
Combo3Out  = $(TransceiverValue)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO, NO}

HelpContext = $(!IDH_DB_OEMNADE3_INS)

#####oemnadee.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNK3EISA     = "3Com Etherlink III EISA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;                             a
; Product Info
;
FunctionTitle   = "3Com Etherlink III EISA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com Etherlink III Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "3Com Etherlink III EISA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "3Com Etherlink III Adapter Driver"
ProductHardwareTitle    = "3Com Etherlink III EISA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for EISA
;

#####oemnaden.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNK3MCA     = "3Com Etherlink III MCA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "3Com Etherlink III MCA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com Etherlink III MCA Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "3Com Etherlink III MCA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "3Com Etherlink III MCA Adapter Driver"
ProductHardwareTitle    = "3Com Etherlink III MCA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;

#####oemnadnm.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NE2000MCA     = "NE/2 and compatible MC Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "NE/2 and compatible MC Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "NE/2 and compatible MC Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "NE/2 and compatible MC Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "NE/2 and compatible MC Adapter Driver"
ProductHardwareTitle    = "NE/2 and compatible MC Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Label1 = "&IRQ Level:"
Label2 = "I/O &Port Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "NE2000"
Caption = $(FunctionTitle)

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOBaseAddrHexList)
Combo2Out  = $(IOBaseAddress)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADN2_INS)


#####oemnadfd.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NPMCA     = "Network Peripherals FDDI, MCA"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Network Peripherals FDDI, MCA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Network Peripherals FDDI, MCA Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Network Peripherals FDDI, MCA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Network Peripherals FDDI, MCA Adapter Driver"
ProductHardwareTitle    = "Network Peripherals FDDI, MCA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;

#####oemnsvsn.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SNMP     = "SNMP Service"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "SNMP Setup"
;
; Software
;
ProductSoftwareDescription      = "Simple Network Management Protocol service that enables a Windows NT computer to be administered remotely with an SNMP management tool."
;
; The user needs to install Microsoft TCP/IP before install SNMP.
; If TCPIP does not exist in the registry, the inf file will popup this
; message and exit.
;
ProductSoftwareDisplayName      = "SNMP Service"
ProductSoftwareTitle    = "SNMP Service"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for SNMP
;

#####oemnsvcu.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    TCPIPCU = "TCP/IP Utilities"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProductTCPIPCUTitle = "TCP/IP Utilities"
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

GroupName    = "Accessories"
IconName     = "Telnet"

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
;


#####oemnsvsa.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SAP = "SAP Agent"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductSAPTitle       = "SAP Agent"
ProductSAPDescription = "Service Advertising Protocol advertises servers and addresses on a network."
ProductSAPDisplayName = "SAP Agent"

[InUsed]
Error = "SAP Agent is currently in use by other network protocols. Please remove all related services first."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
;


#####oemnsvwi.inf
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG
;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    WINS     = "Windows Internet Name Service"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Windows Internet Name Service Setup"
;
; Software
;
ProductSoftwareDescription      = "Dynamic name registration and resolution service that maps NetBIOS computer names to IP addresses."
ProductSoftwareDisplayName      = "Windows Internet Name Service"
ProductSoftwareTitle            = "Windows Internet Name Service"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

OldGroupName    = "Network Administration"
GroupName    = "Administrative Tools"
IconName     = "WINS Manager"

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for WINS
;

#####oemnsvdh.inf
[LanguagesSupported]
    ENG
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

[FileConstantsENG]
ProductDHCPDisplayName  = "Microsoft DHCP Server"
ProductDHCPTitle        = "Microsoft DHCP Server"
ProductDHCPDescription  = "Automatically assigns IP addresses to other computers running the DHCP (Dynamic Hose Configuration Protocol) Client Service."
OldGroupName    = "Network Administration"
GroupName    = "Administrative Tools"
IconName     = "DHCP Manager"

[OptionsTextENG]
        DHCP = "Microsoft DHCP Server"

[DHCPServerDialog]
DHCPTxt = "If any adapters are using DHCP to obtain an IP address, they are now "+
           "required to use a static IP address.  Press Close on the Network Control Panel "+
           "and the TCP/IP Property Sheet will be displayed allowing you to enter an address."
STF_MB_TITLE = $(DHCP)
DlgType = "MessageBox"
STF_MB_TEXT  = $(DHCPTxt)
STF_MB_TYPE  = 1
STF_MB_ICON  = 2
STF_MB_DEF   = 1

#####oemnsvdn.inf
[LanguagesSupported]
    ENG
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

[FileConstantsENG]
ProductDNSDisplayName  = "Microsoft DNS Server"
ProductDNSTitle        = "Microsoft DNS Server"
ProductDNSDescription  = "The Domain Name System maps DNS domain names to IP addresses."

OldGroupName = "Network Administration"
GroupName = "Administrative Tools"
IconName  = "DNS Manager"


[OptionsTextENG]
        DNS = "Microsoft DNS Server"

#####oemnsvsp.inf
[LanguagesSupported]
    ENG
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductSTCPIPDisplayName        = "Simple TCP/IP Services"
ProductSTCPIPTitle              = "Simple TCP/IP Services"
ProductSTCPIPDescription        = "Client programs for simple network protocols, including Character Generator, Daytime, Echo and Quote of the Day."

[OptionsTextENG]
    STCPIP = "Simple TCP/IP Services"

#####oemnsvtp.inf
[LanguagesSupported]
    ENG
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductLPDDisplayName = "TCP/IP Print Server"
ProductLPDTitle = "Microsoft TCP/IP Printing"
ProductLPDDescription = "Enables Windows NT to print to TCP/IP-connected printers or to printers that are physically attached to UNIX computers."

[OptionsTextENG]
        TCPPRINT = "Microsoft TCP/IP Printing"

#####oemnxptc.inf
[LanguagesSupported]
    ENG
[OptionsTextENG]
    TC     = "TCP/IP Protocol"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
NoNewComponents = "No New Components to Install."
FunctionTitle   = "TCP/IP Setup"
ProductNETBTDescription           = "NetBT System Driver"
ProductNETBTDisplayName   = "WINS Client(TCP/IP)"
ProductNETBTTitle         = "WINS Client(TCP/IP)"
ProductTELNETDisplayName = "Telnet"
ProductTELNETTitle      = "Telnet Networking Support Environment"
ProductTELNETSYSDisplayName = "Telnetsys"
ProductTELNETSYSTitle     = "Telnet Driver"
ProductLMHOSTSDisplayName = "TCP/IP NetBIOS Helper"
ProductLMHOSTSTitle     = "TCP/IP NetBIOS Helper"
ProductDHCPDisplayName = "DHCP Client"
ProductDHCPTitle     = "DHCP Client"
ProductTCDisplayName = "TCP/IP Service"
ProductTCTitle     = "TCP/IP Protocol"
ProductTCDescription         = "Transport Control Protocol/Internet Protocol. The default wide area network protocol that provides communication across diverse interconnected networks."
ProviderDisplayName     = "TCP/IP"
LDAPProviderDisplayName = "NTDS"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
RASRebindError = "Setup has discovered that you have Remote Access Services installed. Do you want to configure RAS to support the TCP/IP protocol?"

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
[InfoDlg]
STF_MB_TITLE = "Information Message"
DlgType = "MessageBox"
STF_MB_TEXT  = $(InfoMsgText)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

[DHCPDialog]
DHCPText = "If there is a DHCP server on your network, TCP/IP can be configured to dynamically provide"+
                 " an IP address.  If you are not sure, ask your system administrator.  Do you wish to use DHCP?"
STF_MB_TITLE = "TCP/IP Setup"
DlgType = "MessageBox"
STF_MB_TEXT  = $(DHCPText)
STF_MB_TYPE  = 3
STF_MB_ICON  = 5
STF_MB_DEF   = 2

[InfoDlgCantConfigure]
InfoMsgText = "The TCP/IP service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click  OK or CLOSE.  You will then have the opportunity to configure the adapters."
[WarningDlgENG]
STF_MB_TITLE = "TCP/IP Setup Warning"
DlgType = "MessageBox"
STF_MB_TEXT  = $(Error)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1
[Billboard1ENG]
Status = "Installing TCP/IP and related services..."

#####oemnxpip.inf all
;------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
;       This lists the languages supported by this file.
;       If you add other languages to this list, you must
;       also add the appropriate text sections for the new
;       language
;------------------------------------------------------------------
[LanguagesSupported]
    ENG

;-------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
;
;       These are the text strings used to identify the options to
;       the user.  There should be a header and entry for every
;       language listed in the "LanguagesSupported" section.
;-------------------------------------------------------------------
[OptionsTextENG]
    NWLNKIPX     = "NWLink IPX/SPX Compatible Transport"

;--------------------------------------------------------------------
;       Language Dependent Dialog Constants
;--------------------------------------------------------------------
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle            = "NWLink IPX/SPX Compatible Transport Setup"
ProductNWLNKIPXDescription  = "An implementation of the IPX and SPX protocols, which are used by the NetWare networks."
ProductNWLNKIPXDisplayName = "NWLink IPX/SPX Compatible Transport Protocol"
ProductNWLNKIPXTitle       = "NWLink IPX/SPX Compatible Transport"

ProductNWLNKNBDescription   = "Enables Novell NetBIOS packets to be sent between a NetWare server running Novell NetBIOS and a Windows NT computer, or between two Windows NT computers."
ProductNWLNKNBDisplayName  = "NWLink NetBIOS"
ProductNWLNKNBTitle        = "NWLink NetBIOS"
ProductNWLNKNBSYSDisplayName = "NWLinkNBsys"
ProductNWLNKNBSYSTitle     = "NWLINK NetBIOS Driver"

ProductNWLNKSPXDescription  = "NWLink SPX Protocol Driver"
ProductNWLNKSPXDisplayName = "NWLink SPX/SPXII Protocol"
ProductNWLNKSPXTitle       = "NWLink SPX Protocol"

CompetitorDisplayName = "NWLink IPX/SPX II Transport"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

RASRebindError = "Setup has discovered that you have Remote Access Services installed. Do you want to configure RAS to support the NWLINK protocol?"
InstallRip     = "Do you want to install the IPX Rip Router?"

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[FileDependentDlgENG]
;
;--- No UI for NWLNK
;

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlg]
STF_MB_TITLE = "Information Message"

;
; don't need to localize the dialog type
;
DlgType      = "MessageBox"
STF_MB_TEXT  = $(InfoMsgText)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlgCantConfigure]
InfoMsgText = "The IPX Protocol service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click  OK.  You will then have the opportunity to configure the adapters."

[InUseENG]
InfoMsgText = "The IPX Protocol service is being used by another service(s). "+
    "Please remove other related components before removing IPX Protocol."

;--------------------------------------------------------------------
;       Get the string to use while doing the install
;--------------------------------------------------------------------
[Billboard1ENG]
Status = "Installing IPX Protocol and related services..."

[FatalError1ENG]
Error = "Another IPX/SPX protocol driver is currently installed in this machine, "+
        "and the network interface cannot operate properly with both drivers installed. "+
        "If you still wish to install the NWLNK protocol driver, you must first "+
        "remove the "$(CompetitorDisplayName)" component and reboot your machine."

#####oemnsvnw.inf
[LanguagesSupported]
    ENG
;
; Language depended section
;
[WorkstationENG]
    NWType = "Client Service for NetWare"
    NWDescription = "Enables this computer to log on to NetWare servers and access their resources."
[GatewayENG]
    NWType = "Gateway Service for NetWare"
    NWDescription = "Enables other Windows NT computers to access NetWare servers without running NetWare Client software."
[OptionsWINNTTextENG]
    NWWKSTA       = "Client Service for NetWare"
[OptionsLANMANNTTextENG]
    NWWKSTA       = "Gateway (and Client) Services for NetWare"

[FileConstantsENG]
NotEnoughSpace = "Out of disk space. Please remove some files before install "$(NWType)"."
UpgradeBetaOnTopOfDaytona = "You cannot update the beta version of "$(NWType)" over Windows NT 3.51's "$(NWType)"."
InstallNWLINKFirst = "Please install the NWLINK IPX/SPX Compatible Transport before you install the "$(NWType)"."
InstallNTWKSTAFirst = "Please install the Windows NT Workstation service before you install the "$(NWType)"."
RemoveAndReboot    = "Please remove any existing "$(NWType)" component and reboot your machine before installing the latest version of "$(NWType)"."
UpgradeFirst = "Please install the Windows NT patch before installing the "$(NWType)"."
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = $(NWType)" Setup"
ProductNWWKSTADescription         = $(NWDescription)
ProductNWRDRDescription           = "NetWare Redirector Compatible Service"
ProviderRDRName                 = "NetWare Compatible Redirector"
ProductNWWKSTATitle       = $(NWType)
ProductNWWKSTADisplayName = $(NWType)
ProductNWRDRDisplayName   = "NetWare Rdr"
ProductNWRDRTitle         = "NetWare Redirector"
ProductProviderName = "NetWare Network"
ProductProviderDisplayName = "NetWare or Compatible Network"
ProductPrintProviderName = "NetWare or Compatible Network"
OldPrintProviderName = "Netware(R) Network"
OldPrintProviderName2 = "NetWare Network"
REM1 = "REM Install network redirector"

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
ShellCodeErrorText = "Shell Code Error"

[FileDependentDlgENG]
; nothing



#####oemnsvbh.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NETMON      = "Network Monitor Agent"
    NETMONTOOLS = "Network Monitor Tools and Agent"


;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
;
; Software
;
ProductNMAgentDisplayName  = "Network Monitor Agent"

;
; Software Tools
;
NETMONTOOLSSoftwareTitle  = "Network Monitor Tools and Agent"
NETMONSoftwareTitle       = "Network Monitor Agent"


[NETMONConstantsENG]
;
; Product Info
;
ProductSoftwareTitle       = $(NETMONSoftwareTitle)
ProductSoftwareDescription = "Informs monitoring programs, such as Performance Monitor and Network Monitor, of network transactions for this computer."
ProductSoftwareDisplayName = $(ProductSoftwareTitle)" Driver"

FunctionTitle   =  $(ProductSoftwareTitle)

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[NETMONTOOLSConstantsENG]
;
; Product Info
;
ProductSoftwareTitle       = $(NETMONTOOLSSoftwareTitle)
ProductSoftwareDescription = "A software package for monitoring and troubleshooting network transactions"
ProductSoftwareDisplayName = $(ProductSoftwareTitle)" Drivers"

FunctionTitle   = $(ProductSoftwareTitle)

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[IconInfoENG]
    OldNetAdminGroupName = "Network Administration"
    NetAdminGroupName = "Administrative Tools"
    NetMonitor = "Network Monitor"



#####oemnsvri.inf
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    REMOTEBOOT     = "Remoteboot Service"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Remoteboot Setup"
;
; Software
;
ProductSoftwareDescription      = "Starts MS-DOS and Microsoft Windows workstations over the network."
ProductSoftwareDisplayName      = "Remoteboot Service"
ProductSoftwareTitle    = "Remoteboot Service"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
;
; Program group information
;
OldRplGroup    = "Network Administration"
RplGroup    = "Administrative Tools"
RplMgr    = "Remoteboot Manager"


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Edit1Label = "&Remoteboot directory:"
CheckBox1 = "&Migrate Remoteboot directory from LAN Manager 2.2"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "QUERY_RPL_PATH"
Caption = $(FunctionTitle)
CBOptionsGreyed = {}
ComboListItemsIn = {}
ComboListItemsOut = {}

HelpContext = $(!IDH_DB_OEMNSVRI_INS)

EditTextLim = 256
EditTextIn  = $(RPLDIR)
EditFocus   = "ALL"
RCCtlFocusOn = 403

[NonFatalError1ENG]
Error = "The Remoteboot directory must be an absolute path."

[DoAskSourceDlgTextENG]
    DlgText = "Setup needs to copy Remoteboot Client files. These files are located "+
              "in the \CLIENTS\RPL directory of the Windows NT Server CD."$(!LF)$(!LF)+
              "If you want Setup to look in a different place, type the new location below. "+
              "When the location is correct, click Continue."

#####oemnadt2.inf all
[LanguagesSupported]
    ENG
[OptionsTextENG]
    IBMTOK2ISA     = "IBM Token-Ring Network 16/4 ISA Adapter II"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "IBM Token-Ring 16/4 Adapter II Card Setup"
ProductSoftwareDescription      = "IBM Token-Ring 16/4 ISA Adapter II Driver"
ProductHardwareIBMTOK2ISADescription        = "IBM Token-Ring 16/4 ISA Adapter II"
ProductSoftwareTitle    = "IBM Token-Ring 16/4 ISA Adapter II Driver"
ProductHardwareIBMTOK2ISATitle = "IBM Token-Ring 16/4 ISA Adapter II"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
Combo1Label = "I/O &Port Address:"
DlgType = "RadioCombination"
DlgTemplate = "IBMTOK2"
Caption = $(FunctionTitle)
Combo1List = $(IOADDR_Hex_List)
Combo1Out  = $(IOADDR_Hex_Value)
ComboListItemsIn  = {Combo1List}
ComboListItemsOut = {Combo1Out}
EditTextLim = 17
EditTextIn = $(NetworkAddress)
Edit1Label = "&NetworkAddress"
HelpContext = $(!IDH_DB_OEMNADT2_INS)

#####oemnadte.inf all
[LanguagesSupported]
    ENG
[OptionsTextENG]
    IBMTOK2E     = "IBM Token Ring EISA Adapter"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "IBM Token Ring EISA Adapter Card Setup"
ProductSoftwareDescription      = "IBM Token Ring EISA Adapter Driver"
ProductHardwareDescription      = "IBM Token Ring EISA Adapter"
CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ProductHardwareTitle    = "IBM Token Ring EISA Adapter"
ProductSoftwareTitle    = "IBM Token Ring EISA Adapter Driver"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
Edit1Label = "&Network Address:"
DlgType = "Edit"
DlgTemplate = "NETWORK_NUMBER"
Caption = $(FunctionTitle)
HelpContext = $(!IDH_DB_OEMNADTE_INS)
EditTextLim = 17
EditTextIn  = $(NetworkAddress)
EditFocus   = "ALL"
RCCtlFocusOn = 403



#####oemnsvrc.inf
[LanguagesSupported]
    ENG
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

#####oemnadpm.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    P189X     = "ProNET-4/16 p189X NIC"

[PacketChoices]
Packet1="4Kb",4210
Packet2="18Kb",17986

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

FunctionTitle   = "Proteon p189X Adapter Card Setup"
ProductSoftwareDescription      = "Proteon RapiDriver"
ProductHardwareDescription      = "Proteon p189X ProNET-4/16 NIC"
CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ProductHardwareTitle    = "Proteon p189X ProNET-4/16 NIC"
ProductSoftwareTitle    = "Proteon RapiDriver"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Group1 = "CardSpeed"
Radio1 = "&4"
Radio2 = "&16"
Edit1Label = "&Network Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "IBM_TOKEN"
Caption = $(FunctionTitle)
ComboListItemsIn = {}
ComboListItemsOut = {}
EditTextLim = 17
EditTextIn = $(NetworkAddress)

OptionsGreyed = {}

HelpContext = $(!IDH_DB_OEMNADP9_INS)
RCCtlFocusOn = 403

#####oemnadar.inf all
[OptListENG]
OptList_1 = tc$arcnet "Arcnet/TCNS (All Types)",     "tcarc", "ARCNET/TCNS Adapter", "ARCNET or Thomas-Conrad TCNS Adapter"
OptList_2 = tc$tcns,  "Thomas-Conrad TCNS",          "tcarc", "TCNS Adapter",        "Thomas-Conrad 100Mbps TCNS"

[FileConstantsENG]
   ProCaption              = "Windows NT Setup"
   ProCancel               = "Cancel"
   ProCancelMsg            = "Your ARCNET/TCNS Windows NT Networking "+
                             "Adapter is not correctly installed.  Are "+
                             "you sure you want to cancel copying files?"
   ProCancelCap            = "Network Setup Message"
   ProText1                = "Copying:"
   ProText2                = "To:"
   SoftwareTitle           = "ARCNET/TCNS Driver"
   SoftwareDescription     = "ARCNET/TCNS Adapter Driver"

[DialogConstantsENG]
   Help                    = "&Help"
   Exit                    = "Cancel"
   OK                      = "OK"
   HelpContext             = ""
   Continue                = "Continue"
   Cancel                  = "Cancel"
   FunctionTitle           = "ARCNET/TCNS Adapter Setup"
   InterruptLabel          = "&Interrupt Number:"
   BaseIoLabel             = "I/O &Port Base Addr:"
   MemoryLabel             = "&Memory Address:"
   TcnsCaption             = "Thomas-Conrad TCNS Adapter Setup"
   TcnsEISACaption         = "Thomas-Conrad TCNS (TC3147) Adapter Setup"
   SlotNumberLabel         = "&Slot Number:"

[LanguagesSupported]
   ENG



#####oemnaddt.inf all
[LanguagesSupported]
    ENG
[OptionsTextENG]
    DC21040  = "DEC PCI Ethernet DECchip 21040"
    DC21041  = "DEC PCI Ethernet DECchip 21041"
    DC21140  = "DEC PCI Fast Ethernet DECchip 21140"
    DC21142  = "DEC PCI Fast Ethernet DECchip 21142"
    DE434    = "DEC DE434 EtherWORKS Turbo PCI TP Adapter"
    DE435    = "DEC DE435 EtherWORKS Turbo PCI Adapter"
;    DE436    = "DEC DE436 EtherWORKS Turbo PCI Quad Adapter"
    MULTIA   = "DEC multia's Ethernet Controller"
    DE425    = "DEC DE425 EtherWORKS Turbo EISA Adapter"
    DE450    = "DEC DE450 EtherWORKS Turbo PCI Adapter"
    DE500    = "DEC DE500 Fast Ethernet PCI Adapter"

[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductSoftwareDescription = "DEC DC21x4 Driver"

FunctionDC21040Title = "DEC DECchip 21040 Based Adapter Setup"
ProductHardwareDC21040Description = "DEC PCI Ethernet DECchip 21040"
ProductHardwareDC21040Title = "DEC PCI Ethernet DECchip 21040"

FunctionDC21041Title = "DEC DECchip 21041 Based Adapter Setup"
ProductHardwareDC21041Description = "DEC PCI Ethernet DECchip 21041"
ProductHardwareDC21041Title = "DEC PCI Ethernet DECchip 21041"

FunctionDC21140Title = "DEC DECchip 21140 Based Adapter Setup"
ProductHardwareDC21140Description = "DEC PCI Fast Ethernet DECchip 21140"
ProductHardwareDC21140Title = "DEC PCI Fast Ethernet DECchip 21140"

FunctionDC21142Title = "DEC DECchip 21142 Based Adapter Setup"
ProductHardwareDC21142Title = "DEC PCI Ethernet DC21142"
ProductHardwareDC21142Description = "DEC PCI Fast Ethernet DECchip 21142"

FunctionDE434Title   = "DEC DE434 PCI Adapter Card Setup"
ProductHardwareDE434Description   = "DEC DE434 EtherWORKS Turbo PCI TP Adapter"
ProductHardwareDE434Title   = "DEC DE434 EtherWORKS Turbo PCI TP Adapter"

FunctionDE435Title   = "DEC DE435 PCI Adapter Card Setup"
ProductHardwareDE435Description   = "DEC DE435 EtherWORKS Turbo PCI Adapter"
ProductHardwareDE435Title   = "DEC DE435 EtherWORKS Turbo PCI Adapter"

FunctionMULTIATitle = "DEC multia's Ethernet Controller Setup"
ProductHardwareMULTIADescription = "DEC multia's Ethernet Controller"
ProductHardwareMULTIATitle = "DEC multia's Ethernet Controller"

FunctionDE425Title   = "DEC DE425 EISA Adapter Card Setup"
ProductHardwareDE425Description   = "DEC DE425 EtherWORKS Turbo EISA Adapter"
ProductHardwareDE425Title   = "DEC DE425 EtherWORKS Turbo EISA Adapter"

FunctionDE450Title   = "DEC DE450 PCI Adapter Card Setup"
ProductHardwareDE450Description   = "DEC DE450 EtherWORKS Turbo PCI Adapter"
ProductHardwareDE450Title   = "DEC DE450 EtherWORKS Turbo PCI Adapter"

FunctionDE500Title   = "DEC DE500 PCI Adapter Card Setup"
ProductHardwareDE500Description   = "DEC DE500 Fast Ethernet PCI Adapter"
ProductHardwareDE500Title   = "DEC DE500 Fast Ethernet PCI Adapter"

ConnectionList  = ^(ConnectionChoices$(Option), 1)
ConnectionValues = ^(ConnectionChoices$(Option), 2)
NoList  = ^(NoChoices, 1)
NoValues = ^(NoChoices, 2)
ShellCodeErrorTitle     = "Error: "$(Function$(Option)Title)
ShellCodeErrorText      = "Shell Code Error."
CANNOT_FIND_ANY_CARD    = "Network card is not present in the system"

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[FileDependentDlgENG]

DlgText = "Choose the proper cable type for the "+
          "network adapter. Select [Help] for a detailed "+
          "description of the available options of the list."

Combo1Label = "&Connection Type:"

;
; don't localize anything below this
;
DlgTemplate = "ADAP_PROTO_COMBO"
DlgType = "Combination"

Caption = $(Function$(Option)Title)
Combo1List = $(ConnectionList)
Combo1Out  = $(ConnectionValue)
ComboListItemsIn  = {Combo1List}
ComboListItemsOut = {Combo1Out}

EditTextLim = ""
CBOptionsGreyed = {}
MinHelpId = 10
MaxHelpId = 1130
HelpContext = $(Help$(Option)Id)

[ConnectionChoicesDC21040]
    Connect_0 = "AutoDetect", 0
    Connect_1 = "10BaseT (Twisted_Pair) ", 2
    Connect_2 = "10BaseT Full_Duplex ", 3
    Connect_3 = "10BaseT No_Link_Test", 4
    Connect_4 = "10Base2 (BNC)", 1
    Connect_5 = "10Base5 (AUI)", 5
[ConnectionChoicesDC21041]
    Connect_0 = "AutoSense", 0
    Connect_1 = "AutoSense No_Nway", 6
    Connect_2 = "10BaseT (Twisted_Pair) ", 2
    Connect_3 = "10BaseT Full_Duplex ", 3
    Connect_5 = "10BaseT No_Link_Test", 4
    Connect_6 = "10Base2 (BNC)", 1
    Connect_7 = "10Base5 (AUI)", 5
[ConnectionChoicesDC21140]
    Connect_0 = "AutoSense", 0
    Connect_1 = "AutoSense No_Nway", 6
    Connect_2 = "100BaseTx", 8
    Connect_3 = "100BaseTx Full_Duplex", 9
    Connect_4 = "100BaseT4", 10
    Connect_5 = "100BaseFx", 11
    Connect_6 = "100BaseFx Full_Duplex", 12
    Connect_7 = "10BaseT (Twisted Pair)", 2
    Connect_8 = "10BaseT Full_Duplex", 3
[ConnectionChoicesDC21142]
    Connect_0 = "AutoSense", 0
    Connect_1 = "100BaseTx", 8
    Connect_2 = "100BaseTx Full_Duplex", 9
    Connect_3 = "100BaseT4", 10
    Connect_4 = "100BaseFx", 11
    Connect_5 = "100BaseFx Full_Duplex", 12
    Connect_6 = "10BaseT (Twisted_Pair) ", 2
    Connect_7 = "10BaseT Full_Duplex", 3
    Connect_8 = "10BaseT No_Link_Test", 4
    Connect_9 = "10Base2 (BNC)", 1
    Connect_10= "10Base5 (AUI)", 5
[ConnectionChoicesMULTIA]
    Connect_0 = "AutoDetect", 0
    Connect_1 = "10BaseT (Twisted_Pair) ", 2
    Connect_2 = "10BaseT Full_Duplex ", 3
    Connect_3 = "10BaseT No_Link_Test", 4
    Connect_4 = "10Base2 (BNC)", 1
    Connect_5 = "10Base5 (AUI)", 5
[ConnectionChoicesDE434]
    Connect_0 = "10BaseT (Twisted_Pair) ", 2
    Connect_1 = "10BaseT Full_Duplex ", 3
    Connect_2 = "10BaseT No_Link_Test", 4
[ConnectionChoicesDE435]
    Connect_0 = "AutoDetect", 0
    Connect_1 = "10BaseT (Twisted_Pair) ", 2
    Connect_2 = "10BaseT Full_Duplex ", 3
    Connect_3 = "10BaseT No_Link_Test", 4
    Connect_4 = "10Base2 (BNC)", 1
    Connect_5 = "10Base5 (AUI)", 5
[ConnectionChoicesDE450]
    Connect_0 = "AutoSense", 0
    Connect_1 = "AutoSense No_Nway", 6
    Connect_2 = "10BaseT (Twisted_Pair) ", 2
    Connect_3 = "10BaseT Full_Duplex ", 3
    Connect_4 = "10BaseT No_Link_Test", 4
    Connect_5 = "10Base2 (BNC)", 1
    Connect_6 = "10Base5 (AUI)", 5
[ConnectionChoicesDE500]
    Connect_0 = "AutoSense", 0
    Connect_1 = "100BaseTx", 8
    Connect_2 = "100BaseTx Full_Duplex", 9
    Connect_3 = "10BaseT", 2
    Connect_4 = "10BaseT Full_Duplex", 3


#####oemnadzz.inf all
[LanguagesSupported]
    ENG

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


ShellCodeErrorTitle     = "Error: "
ShellCodeErrorText      = "Shell Code Error."

[ErrorMsgENG]
CannotFindOemsetup = "Setup cannot find "$(File1)", "$(File2)", "$(File3)", or "$(File4)". Please make sure your input path is correct."

#####oemnadap.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

[OptionsTextENG]
    AMDPCI     = "AMD PCNET Family Ethernet Adapter"

[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


GenericAdapterName = "AMD PCNET ISA/VESA Ethernet Adapter"
GenericPCIAdapterName = "AMD PCNET PCI Ethernet Adapter"
GenericDriverName  = "AMD PCNET Family Ethernet Adapter Driver"

ProductSoftwareDescription = $(GenericDriverName)
ProductHardwareDescription = $(GenericAdapterName)
ProductHardwarePCNTN3Description="AMD PCnet Family Driver"

ProductSoftwareTitle =       $(GenericDriverName)
ProductHardwarePCNTN3Title = $(GenericAdapterName)

;
; no localization until [DialogConstantsENG]
;

DialogDllName   = "amddlg.dll"

IRQList  = ^(IRQChoices, 1)
IRQValues = ^(IRQChoices, 2)

IOBaseAddrList = ^(IOBaseAddrChoices, 1)
IOBaseAddrValues = ^(IOBaseAddrChoices, 2)

DMAChannelList = ^(DMAChannelChoices,1)
DMAChannelValues = ^(DMAChannelChoices,2)

LEDList = ^(LEDChoices,1)
LEDValues = ^(LEDChoices,2)

FullDuplexList = ^(FullDuplexChoices,1)
FullDuplexValues = ^(FullDuplexChoices,2)

BusTimerList = ^(BusTimerChoices,1)
BusTimerValues = ^(BusTimerChoices,2)

[DialogConstantsENG]
FunctionTitle   = $(GenericDriverName)$(GenericInfVersion)
Help        = "&Help"
Exit        = "Cance&l"
OK          = "&OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "&Cancel"

[MemoryMappedChoicesENG]
Map_1 = 1, "ON"
Map_2 = 0, "OFF"

[FileDependentDlgENG]
FunctionTitle   = $(GenericAdapterName)$(GenericInfVersion)
DlgText = "Please select values for the following fields:"

Combo1Label = "&I/O Port:"
Combo2Label = "IRQ &Number:"
Combo3Label = "&DMA Number:"
Combo4Label = "&Full Duplex:"
Combo5Label = "&Bus Timer:"

BigButton   = "&More options >>"

CheckBox1 = "10Base-&T port"

Group1 = "&Bus to scan"

Radio1 = "&PNP"
Radio2 = "&VESA"
Radio3 = "&ISA"
Radio4 = "&ALL"

;
; no localization until IRQChoices
;

DlgType = "RadioCombination"
DlgTemplate = "PCNTN3"
Caption = $(FunctionTitle)

CBOptionsGreyed = {}
NotifyFields = {NO, NO}
HelpContext = 1

Combo1List = $(IOBaseAddrList)
Combo1Out  = $(IOBaseAddrValue)

Combo2List = $(IRQList)
Combo2Out  = $(IRQValue)

Combo3List = $(DMAChannelList)
Combo3Out  = $(DMAChannelValue)

Combo4List = $(FullDuplexList)
Combo4Out  = $(FullDuplexValue)

Combo5List = $(BusTimerList)
Combo5Out  = $(BusTimerValue)

ComboListItemsIn  = {Combo1List,Combo2List,Combo3List,Combo4List,Combo5List}
ComboListItemsOut = {Combo1Out,Combo2Out,Combo3Out,Combo4Out,Combo5Out}

EditTextIn = ""
EditTextLim = ""

[IRQChoices]
IRQ_1 = "3",3
IRQ_2 = "4",4
IRQ_3 = "5",5
IRQ_4 = "9",9
IRQ_5 = "10",10
IRQ_6 = "11",11
IRQ_7 = "12",12
IRQ_8 = "15",15
IRQ_9 = "Auto_Scan",0

[IOBaseAddrChoices]
IOBase_1  = "0x200",512
IOBase_2  = "0x220",544
IOBase_3  = "0x240",576
IOBase_4  = "0x260",608
IOBase_5  = "0x280",640
IOBase_6  = "0x2a0",672
IOBase_7  = "0x2c0",714
IOBase_8  = "0x2e0",746
IOBase_9  = "0x300",768
IOBase_10 = "0x320",800
IOBase_11 = "0x340",832
IOBase_12 = "0x360",864
IOBase_13 = "0x380",896
IOBase_14 = "0x3a0",928
IOBase_15 = "0x3c0",960
IOBase_16 = "0x3e0",992
IOBase_17 = "Auto_Scan",0

[DMAChannelChoices]
DMAChannel_1 = "3",3
DMAChannel_2 = "5",5
DMAChannel_3 = "6",6
DMAChannel_4 = "7",7
DMAChannel_5 = "Auto_Scan",0

[LEDChoices]
LED_1 = "Default",65536
LED_2 = "0x0",0
LED_3 = "0x2",2
LED_4 = "0x4",4
LED_5 = "0x8",8
LED_6 = "0x10",16
LED_7 = "0x20",32
LED_8 = "0x30",48
LED_9 = "0x34",52
LED_10 = "0x40",64
LED_11 = "0xc0",192
LED_12 = "0x4088",16520
LED_13 = "0xb0",176
LED_14 = "0x21",129

[FullDuplexChoices]
FULLDUPLEX_1 = "OFF",1
FULLDUPLEX_2 = "AUI",2
FULLDUPLEX_3 = "UTP",3
FULLDUPLEX_4 = "Default",0

[BusTimerChoices]
BUSTIMER_1 = "5",5
BUSTIMER_2 = "6",6
BUSTIMER_3 = "7",7
BUSTIMER_4 = "8",8
BUSTIMER_5 = "9",9
BUSTIMER_6 = "10",10
BUSTIMER_7 = "11",11
BUSTIMER_8 = "12",12
BUSTIMER_9 = "13",13
BUSTIMER_10 = "Default",0

[FileDependentDlgPCIENG]
FunctionTitle   = $(GenericPCIAdapterName)$(GenericInfVersion)
DlgText = "Please select values for the following fields:"

Combo1Label = "&Full Duplex:"
BigButton   = "&More options >>"
CheckBox1 = "10Base-&T port"

;
; no locationization until LEDChoices
;

DlgType = "RadioCombination"
DlgTemplate = "PCNTN3PCI"
Caption = $(FunctionTitle)

CBOptionsGreyed = {}
NotifyFields = {NO, NO}
HelpContext = 1

Combo1List = $(FullDuplexList)
Combo1Out  = $(FullDuplexValue)

Combo3List = $(LEDList)
Combo3Out  = $(LED0Value)

Combo4List = $(LEDList)
Combo4Out  = $(LED1Value)

Combo5List = $(LEDList)
Combo5Out  = $(LED2Value)

Combo6List = $(LEDList)
Combo6Out  = $(LED3Value)

ComboListItemsIn  = {Combo1List}
ComboListItemsOut = {Combo1Out}

EditTextIn = ""
EditTextLim = ""

[LEDChoices]
LED_1 = "Default",65536
LED_2 = "0x0",0
LED_3 = "0x2",2
LED_4 = "0x4",4
LED_5 = "0x8",8
LED_6 = "0x10",16
LED_7 = "0x20",32
LED_8 = "0x30",48
LED_9 = "0x34",52
LED_10 = "0x40",64
LED_11 = "0xc0",192
LED_12 = "0x4088",16520
LED_13 = "0xb0",176
LED_14 = "0x21",129

[FullDuplexChoices]
FULLDUPLEX_1 = "OFF",1
FULLDUPLEX_2 = "AUI",2
FULLDUPLEX_3 = "UTP",3
FULLDUPLEX_4 = "Default",0

[BusTimerChoices]
BUSTIMER_1 = "5",5
BUSTIMER_2 = "6",6
BUSTIMER_3 = "7",7
BUSTIMER_4 = "8",8
BUSTIMER_5 = "9",9
BUSTIMER_6 = "10",10
BUSTIMER_7 = "11",11
BUSTIMER_8 = "12",12
BUSTIMER_9 = "13",13
BUSTIMER_10 = "Default",0

#####oemnaddf.inf all

[LanguagesSupported]
        ENG
[OptionsTextENG]
        DEFPA     = "DEC FDDIcontroller/PCI"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "DEC FDDIcontroller/PCI Card Setup"
ProductSoftwareDescription      = "DEC FDDIcontroller/PCI Driver"
ProductHardwareDescription      = "DEC FDDIcontroller/PCI"
CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
ReceiveBuffList = ^(ReceiveBuffChoices,1)
ReceiveBuffValues = ^(ReceiveBuffChoices,2)
TransmitBuffList = ^(TransmitBuffChoices,1)
TransmitBuffValues = ^(TransmitBuffChoices,2)
BurstSizeList = ^(BurstSizeChoices,1)
BurstSizeValues = ^(BurstSizeChoices,2)
DialogDllName = "defpa.dll"
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = 1
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
DlgType = "RadioCombination"
DlgTemplate = "DEFPA"
Combo1 = "Receive Buffers:"
Combo2 = "Transmit Buffers:"
Combo3 = "Burst Size:"
Edit1 = "Requested TTRT(ms):"
Edit2 = "Bus Number:"
Edit3 = "Card Instance:"
Group = "Full Duplex Enable"
Combo1List = $(ReceiveBuffList)
Combo1Out = $(ReceiveBuffValue)
Combo2List = $(TransmitBuffList)
Combo2Out = $(TransmitBuffValue)
Combo3List = $(BurstSizeList)
Combo3Out = $(BurstSizeValue)
; Burst size is not included in dialog box, for now
ComboListItemsIn = {Combo1List,Combo2List}
ComboListItemsOut = {Combo1Out,Combo2Out}
EditTextLim = {3,3,1}
EditTextIn = {$(EditText1),$(EditText2),$(EditText3)}
EditTextOut = {$(EditText1),$(EditText2),$(EditText3)}
[ReceiveBuffChoices]
Receive_1 = "2",2
Receive_2 = "4",4
Receive_3 = "8",8
[TransmitBuffChoices]
Transmit_1 = "8",8
Transmit_2 = "16",16
Transmit_3 = "32",32
Transmit_4 = "64",64
Transmit_5 = "128",128
[BurstSizeChoices]
Burst_1 = "4",0
Burst_2 = "8",1
Burst_3 = "16",2

#####oemnadd3.inf all
[LanguagesSupported]
        ENG
[OptionsTextENG]
        DEC300     = "DEC FDDIcontroller/EISA"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
                           "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "DEC FDDIcontroller/EISA Card Setup"
ProductSoftwareDescription      = "DEC FDDIcontroller/EISA Driver"
ProductHardwareDescription      = "DEC FDDIcontroller/EISA"
CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ProductSoftwareTitle    = "DEC FDDIcontroller/EISA Driver"
ProductHardwareTitle    = "DEC FDDIcontroller/EISA Adapter"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
BurstSizeList = ^(BurstSizeChoices,1)
BurstSizeValues = ^(BurstSizeChoices,2)
ReceiveBuffList = ^(ReceiveBuffChoices,1)
ReceiveBuffValues = ^(ReceiveBuffChoices,2)
TransmitBuffList = ^(TransmitBuffChoices,1)
TransmitBuffValues = ^(TransmitBuffChoices,2)
DialogDllName = "defea.dll"
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = 1
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
DlgType = "RadioCombination"
DlgTemplate = "DEFEA"
Combo1 = "Burst Size:"
Combo2 = "Receive Buffers:"
Combo3 = "Transmit Buffers:"
Group = "Full Duplex Enable"
Edit1 = "Requested TTRT(ms):"
Combo1List = $(BurstSizeList)
Combo1Out = $(BurstSizeValue)
Combo2List = $(ReceiveBuffList)
Combo2Out = $(ReceiveBuffValue)
Combo3List = $(TransmitBuffList)
Combo3Out = $(TransmitBuffValue)
ComboListItemsIn = {Combo2List,Combo3List}
ComboListItemsOut = {Combo2Out,Combo3Out}
EditTextLim = {3}
[BurstSizeChoices]
Burst_1 = "4",0
Burst_2 = "8",1
Burst_3 = "16",2
[ReceiveBuffChoices]
Receive_1 = "2",2
Receive_2 = "4",4
Receive_3 = "8",8
[TransmitBuffChoices]
Transmit_1 = "8",8
Transmit_2 = "16",16
Transmit_3 = "32",32
Transmit_4 = "64",64
Transmit_5 = "128",128

#####oemnadni.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NE2000IBMCOMPAT = "IBM Ethernet PCMCIA and Compatible Adapter"
    NE4000PCMCIA    = "Novell NE4000 PCMCIA Adapter"
    MICRODYNEPCMCIA = "Microdyne NE4000 PCMCIA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
;
; Software
;
ProductSoftwareNE2000IBMCOMPATDescription = "IBM Ethernet PCMCIA and Compatible Adapter Driver"
ProductSoftwareNE2000IBMCOMPATTitle       = "IBM Ethernet PCMCIA and Compatible Adapter Driver"
ProductSoftwareNE4000PCMCIADescription = "Novell NE4000 PCMCIA Adapter Driver"
ProductSoftwareNE4000PCMCIATitle       = "Novell NE4000 PCMCIA Adapter Driver"
ProductSoftwareMICRODYNEPCMCIADescription      = "Microdyne NE4000 PCMCIA Adapter Driver"
ProductSoftwareMICRODYNEPCMCIATitle    = "Microdyne NE4000 PCMCIA Adapter Driver"

;
; Hardware
;

ProductHardwareNE2000IBMCOMPATDescription  = "IBM Ethernet PCMCIA and Compatible Adapter"
ProductHardwareNE2000IBMCOMPATTitle    = "IBM Ethernet PCMCIA and Compatible Adapter"
ProductHardwareNE4000PCMCIADescription = "Novell NE4000 PCMCIA Adapter"
ProductHardwareNE4000PCMCIATitle       = "Novell NE4000 PCMCIA Adapter"
ProductHardwareMICRODYNEPCMCIADescription = "Microdyne NE4000 PCMCIA Adapter"
ProductHardwareMICRODYNEPCMCIATitle       = "Microdyne NE4000 PCMCIA Adapter"

FunctionTitle   = $(ProductHardware$(Option)Title)" Card Setup"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Combo1Label = "&IRQ Level:"
Combo2Label = "&Memory Base Address:"
Combo3Label = "I/&O Port Address:"

;no translation needed after this

DlgType = "MultiCombo"
DlgTemplate = "WD"
Caption = $(FunctionTitle)

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)

Combo2List = $(PcCardAddressHexList)
Combo2Out  = $(PcCardBaseAddress)

Combo3List = $(IOBaseAddrHexList)
Combo3Out  = $(IOBaseAddress)


ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}


EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO, NO}

HelpContext = $(!IDH_DB_OEMNADWD_INS)

#####oemnxppp.inf all
[LanguagesSupported]
    ENG

[OptionsTextENG]
    RASPPTP             = "Point To Point Tunneling Protocol"

;***********************************************************************
;
;***********************************************************************
[FileConstantsENG]
    ProCaption          = "Windows NT Setup"
    ProCancel           = "Cancel"
    ProCancelMsg        = "Windows NT Networking is not correctly installed.  "+
                          "Are you sure you want to cancel copying files?"
    ProCancelCap        = "Network Setup Message"
    ProText1            = "Copying:"
    ProText2            = "To:"

    FunctionTitleRASPPTP                = "PPTP Card Setup"
    ProductSoftwareDescription          = "PPTP Miniport Driver"
    ProductHardwareRASPPTPDescription   = "PPTP Adapter"
    ProductSoftwareTitle                = "PPTP Miniport Driver"
    ProductHardwareRASPPTPTitle         = "PPTP Adapter"

    ProductRASPPTPDescription           = "This is a protocol for tunneling secure remote network communications across Point to Point (PPP) connections to the Internet. "+
                                          "It will allow remote and mobile users to dial into the Internet, using local points of presence and Internet service providers (ISPs) to gain access to corporate networks."
    ProductRASPPTPTitle                 = "Point To Point Tunneling Protocol"

    ShellCodeErrorTitle                 = "Error: "$(FunctionTitle)$(Option))
    ShellCodeErrorText                  = "Shell Code Error."

;RASPPTP_SPECIFIC_START
;***********************************************************************
; These constants are specific to the RASPPTP.sys driver for SMAN
;***********************************************************************
[SMANFileConstantsENG]
    PPTPFunctionTitleRASPPTP                = "PPTP Card Setup"
    PPTPProductSoftwareDescription          = "PPTP Protocol Driver"
    PPTPProductHardwareRASPPTPDescription   = "PPTP Adapter"
    PPTPProductSoftwareTitle                = "PPTP Protocol Driver"
    PPTPProductHardwareRASPPTPTitle         = "PPTP Adapter"

;RASPPTP_SPECIFIC_END

;***********************************************************************
;
;***********************************************************************
[DialogConstantsENG]
    Help                = "&Help"
    Exit                = "Cancel"
    OK                  = "OK"
    HelpContext         = ""
    Continue            = "Continue"
    Cancel              = "Cancel"

;***********************************************************************
;
;***********************************************************************
[FileDependentDlgENG]
    ;Label1              = "&IRQ Level:"
    ;Label2              = "&RAM Base Address:"
    DlgType             = "RadioCombination"
    DlgTemplate         = "NE2000"
    Caption             = $(FunctionTitle)$(Option)
    ;Combo1List          = $(IRQ_List)
    ;Combo1Out           = $(InterruptNumber)
    ;Combo2List          = $(RAM_Hex_List)
    ;Combo2Out           = $(RAM_Hex_Value)
    ;ComboListItemsIn    = {Combo1List, Combo2List}
    ;ComboListItemsOut   = {Combo1Out, Combo2Out}
    EditTextIn          = ""
    EditTextLim         = ""
    CBOptionsGreyed     = {}
    NotifyFields        = {NO, NO}
;    HelpContext         = $(!IDH_DB_OEMNADN2_INS)

;***********************************************************************
;
;***********************************************************************
[InvokeRasDlgENG]
    InvokeRasSetupMsg   = "Remote Access Services (RAS) will now be installed. "+
                          "Please configure the PPTP ports in RAS "+
                          "setup to enable you to use RAS over PPTP."
    InvokeRasConfigMsg  = "Remote Access Services (RAS) setup will now be invoked. "+
                          "Please configure the PPTP ports in RAS "+
                          "setup to enable you to use RAS over PPTP."
    InvokeRasConfigMsg2 = "Remote Access Services (RAS) setup will now be invoked. "+
                          "Please remove the PPTP ports in RAS configuration."

    InvokeRasError      = "PPTP setup encountered an error "+
                          "while invoking the RAS setup INF file (OEMNSVRA.INF). "+
                          "Please make sure that the file is present in the "+
                          "System32 directory and is the proper file."

[InvokeRasSetupDlgENG]
    DlgType      = "MessageBox"
    STF_MB_TEXT  = "Remote Access Services (RAS) is not installed. "+
                   "Do you want to install RAS "+
                   "and add the PPTP ports in RAS setup to enable "+
                   "you to use RAS over PPTP?"$(!LF)$(!LF)+
                   "NOTE: if you are going to install Routing and "+
                   "Remote Access Services beta, choose NO"

    STF_MB_TITLE = "PPTP setup"
    STF_MB_TYPE  = 3
    STF_MB_ICON  = 4
    STF_MB_DEF   = 2

[InvokeRasConfigDlgENG]
    DlgType      = "MessageBox"
    STF_MB_TEXT  = "Do you want to configure Remote Access Services (RAS) "+
                   "and add the PPTP ports in RAS setup to enable "+
                   "you to use RAS over PPTP?"

    STF_MB_TITLE = "PPTP setup"
    STF_MB_TYPE  = 3
    STF_MB_ICON  = 4
    STF_MB_DEF   = 2

;***********************************************************************
;
;***********************************************************************
[InvokeTCPIPDlgENG]
    InvokeTCPSetupMsg   = "TCP/IP is not installed. It will now be installed."
    InvokeTCPError      = "PPTP setup encountered an error "+
                          "while invoking the TCP/IP setup INF file (OEMNXPTC.INF). "+
                          "Please make sure that the file is present in the "+
                          "System32 directory and is the proper file."

;***********************************************************************
;
;***********************************************************************
[InvokeCancelDlgENG]
    InvokeCancelMsg = "PPTP setup is incomplete. "+
                       "Please rerun the Setup Program if you want "+
                       "to install PPTP."

;***********************************************************************
;
;***********************************************************************
[InvokeConfigureDlgENG]
    InvokeConfigureMsg = "Please reboot for the new changes to take effect."

#####oemnsvbr.inf all
[LanguagesSupported]
    ENG

[OptionsTextENG]
    RelayAgent = "DHCP Relay Agent"

[FileConstantsENG]
FunctionTitle                   = "Relay Agent Setup"
ProductSoftwareDescription      = "Enables the Windows NT Server to forward DHCP (Dynamic Host Configuration Protocol) broadcasts across a router to a remote DHCP server."
ProductSoftwareDisplayName      = "DHCP Relay Agent"
ProductSoftwareTitle            = "DHCP Relay Agent"
ErrorTCPIPNotInstalled          = "TCP/IP is not installed. Please install TCP/IP and retry this installation."
ShellCodeErrorTitle             = "Error: "$(FunctionTitle)
ShellCodeErrorText              = "Shell Code Error."
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"

[DefaultsENG]

[DialogConstantsENG]
Help            = "&Help"
Exit            = "Cancel"
OK              = "OK"
HelpContext     = ""
Continue        = "Continue"
Cancel          = "Cancel"

[FileDependentDlgENG]

#####oemnsvsm.inf all
[LanguagesSupported]
ENG
[OptionsTextENG]
SFM      = "Services for Macintosh"

[FileConstantsENG]

FunctionTitle                   =  "Services for Macintosh Setup"
ProductATALKDescription         =  "Enables a Macintosh computer to access shared disk space on your computer."
ProductAFPSVCDescription        =  "AppleTalk File Server"
ProductMACPRINTDescription      =  "AppleTalk Print Server"
ProductSFMDescription           =  "Enables a Windows NT Server to act as an AppleTalk router, allowing PC and Macintosh clients to share files and printers."


ProCaption      = $(FunctionTitle)
ProCancel       = "Cancel"
ProCancelMsg    = "Services for Macintosh is not correctly installed. "+
                  "Are you sure you want to cancel copying files ?"
ProCancelCap    = "Services for Macintosh Setup"
ProText1        = "Copying:"
ProText2        = "To:"
Error           = "User has cancelled copying files. Copied files will be removed."

MajorVersion    = "MajorVersion"
MinorVersion    = "MinorVersion"
Version         =  "Version "

AskLocationText = "Setup needs to copy Services for Macintosh files."$(!LF)$(!LF)+
                  "Setup will look for the files in the location specified below. If you want "+
                  "Setup to look in a different place, type the new location. When the location "+
                  "is correct, click Continue."

ProductSFMTitle                 = "Services for Macintosh"
ProductATALKDisplayName         = "AppleTalk Protocol"
ProductATALKTitle               = "AppleTalk Protocol"
ProductAFPSVCDisplayName        = "File Server for Macintosh"
ProductAFPSVCTitle              = "File Server for Macintosh"
ProductAFPSRVRDisplayName       = "SFM Kernel Driver"
ProductMACPRINTDisplayName      = "Print Server for Macintosh"
ProductMACPRINTTitle            = "Print Server for Macintosh"


!UAMVolumeName                  = "Microsoft UAM Volume"
!AtalkMonName                   = "AppleTalk Printing Devices"
!AtalkMonEventLogName           = "AppleTalk Print Monitor"

!AppleShareFolder                       = "AppleShare Folder"
!UamReadMeDestFile                      = "ReadMe.UAM"

GroupName    = "Administrative Tools"
IconName     = "File Manager"


[DialogConstantsENG]

Help        = "&Help"
Exit        = "E&xit Setup"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[UAMVarsENG]
UAMDirName     =       "Microsoft UAM Volume"
UAMPath        =       $(UAMDrive)"\"$(UAMDirName)

[TCCommentsENG]

!XCEL1COMMENT   = "Comment=MS Excel 3.0 Chart"
!XCEL2COMMENT   = "Comment=MS Excel 3.0 Spreadsheet"
!XCEL3COMMENT   = "Comment=MS Excel 3.0 Macrosheet"
!XCEL4COMMENT   = "Comment=MS Excel 3.0 Workspace"
!XCEL5COMMENT   = "Comment=MS Excel 3.0 Add-in MacroFile"
!XCEL6COMMENT   = "Comment=MS Excel 3.0 Template File"
!XCEL7COMMENT   = "Comment=MS Excel 3.0"
!XCEL8COMMENT   = "Comment=MS Excel 4.0 Chart"
!XCEL9COMMENT   = "Comment=MS Excel 4.0 Spreadsheet"
!XCEL10COMMENT  = "Comment=MS Excel 4.0 Macrosheet"
!XCEL11COMMENT  = "Comment=MS Excel 4.0 WorkSpace"
!XCEL12COMMENT  = "Comment=MS Excel 4.0 Add-in MacroFile"
!XCEL13COMMENT  = "Comment=MS Excel 4.0 Template File"
!MSWD1COMMENT   = "Comment=MS Word 5.1 Document"
!MSWD2COMMENT   = "Comment=MS Word 5.1 Document"
!MSWD3COMMENT   = "Comment=MS Word 6.0 Document"
!MSWD4COMMENT   = "Comment=MS Word 6.0 Template"
!MSPJ1COMMENT   = "Comment=MS Project 4.0"
!MSPJ2COMMENT   = "Comment=MS Project 4.0 Exchange File"
!MSPJ3COMMENT   = "Comment=MS Project 4.0 Calendar"
!MSPJ4COMMENT   = "Comment=MS Project 4.0 View"
!MSPJ5COMMENT   = "Comment=MS Project 4.0 WorkSpace"
!MSPJ6COMMENT   = "Comment=MS Project 4.0 Template"
!ALD31COMMENT   = "Comment=Pagemaker 3.0  Publication"
!ALD32COMMENT   = "Comment=Pagemaker 3.0 Template"
!ALD33COMMENT   = "Comment=Pagemaker 3.0 Tiff Graphics"
!ALD41COMMENT   = "Comment=Pagemaker 4.0 Publication"
!ALD42COMMENT   = "Comment=Pagemaker 4.0 Template"
!ALD43COMMENT   = "Comment=Pagemaker 4.0 Tiff Graphics"
!MORECOMMENT    = "Comment=Symantec More File"
!FOX+COMMENT    = "Comment=FoxBase Plus"
!ARTZCOMMENT    = "Comment=Adobe Illustrator"
!SIT!COMMENT    = "Comment=Aladdin Stuffit"
!PPT2COMMENT    = "Comment=MS PowerPoint 2.0"
!PPT3COMMENT    = "Comment=MS PowerPoint 3.0"
!L123COMMENT    = "Comment=Lotus 1-2-3"
!LMANCOMMENT    = "Comment=LMAN Executables"
!TTXTCOMMENT    = "Comment=Teach Text Document"
!FOXX1COMMENT   = "Comment=FoxPro 2.0 Table"
!FOXX2COMMENT   = "Comment=FoxPro 2.0 Memo"
!FOXX3COMMENT   = "Comment=FoxPro 2.0 Index"
!FOXX4COMMENT   = "Comment=FoxPro 2.0 Compound Index"
!FOXX5COMMENT   = "Comment=FoxPro 2.0 Program"
!FOXX6COMMENT   = "Comment=FoxPro 2.0 Report"
!FOXX7COMMENT   = "Comment=FoxPro 2.0 Report Memo"
!FOXX8COMMENT   = "Comment=FoxPro 2.0 Label"
!FOXX9COMMENT   = "Comment=FoxPro 2.0 Label Memo"
!FOXX10COMMENT   = "Comment=FoxPro 2.0 Screen"
!FOXX11COMMENT   = "Comment=FoxPro 2.0 Screen Memo"
!FOXX12COMMENT   = "Comment=FoxPro 2.0 Menu"
!FOXX13COMMENT   = "Comment=FoxPro 2.0 Menu Memo"
!FOXX14COMMENT   = "Comment=FoxPro 2.0 Gen. Query Program"
!FOXX15COMMENT   = "Comment=FoxPro 2.0 Project"
!FOXX16COMMENT   = "Comment=FoxPro 2.0 Project Memo"

;------------------------------------------------------------------
; Express /Custom Mode Install Dialog - Used In Initial Setup Only
;------------------------------------------------------------------

[SetupSpaceDlgENG]
STF_MB_TEXT = +
"Setup could not find enough space on your Windows NT Server system partition. "+
"Setup requires at least 2 MB for installing Services for Macintosh. "+
"You can retry installation after freeing up disk space on your system partition."


;no translation needed after this

DlgType         = "MessageBox"
STF_MB_TYPE     = 5
STF_MB_ICON     = 3
STF_MB_DEF      = 3
STF_MB_TITLE    = $(FunctionTitle)

;no translation needed after this

[ExitWarningDlgENG]
STF_MB_TITLE    = "Services for Macintosh Setup"
STF_MB_TEXT     = "Services for Macintosh is not correctly installed. Are you "+
                  "sure you want to exit Setup?"

;no translation needed after this

DlgType         = "MessageBox"
STF_MB_TYPE     = 3
STF_MB_ICON     = 5
STF_MB_DEF      = 2

;------------------------------------------------------------------
; Error Strings
;------------------------------------------------------------------

;------------------------------------------------------------------
; Miscellaneous Errors
;------------------------------------------------------------------

[MiscErrorString1ENG]
ErrorString = +
" of Services for Macintosh is already installed on your system. "+
"Use [Update] to update to newer versions."


[MiscErrorString2ENG]
ErrorString = +
"Sufficient memory is not available on your system to run  "+
"Services for Macintosh. Services for Macintosh requires "+
"a minimum of 8 MB to function."


[MiscErrorString3ENG]
ErrorString = +
"Setup encountered the following error during installation. Try installing "+
"Services for Macintosh after rebooting your system. "$(LF)

[ShellingErrorENG]
ErrorString  = +
"An internal error occurred. Contact Technical Support."

[NTFSFormatHappeningENG]
ErrorString = +
"Setup could not find any NTFS partitions in your system. You could be "+
"reformatting or converting your existing NTFS partition. The Microsoft UAM "+
"volume cannot be installed at this time. Setup will proceed with installation. "+
"Use the command SETUP /i OEMNSVSM.INF /c UAMINSTALL to install the UAM volume "+
"after Windows NT Server installation."


[UamFileNotCopiedENG]
ErrorString  = +
"Setup cannot copy Microsoft user authentication files to the Microsoft UAM "+
"volume. Macintosh workstations will be unable to download these files. There "+
"may not be enough disk space on your NTFS partition or the UAM files might be "+
"missing from your Windows NT Server distribution disks. Refer to your Administrator's guide "+
"on how to create this volume after installation."

[UamFileNotCopied1ENG]
ErrorString  = +
"Setup cannot copy Microsoft user authentication files to the Microsoft UAM "+
"volume. Macintosh workstations will be unable to download these files. There "+
"may not be enough disk space on your NTFS partition or the UAM files might be "+
"missing from your Windows NT Server distribution disks. Refer to your Administrator's guide "+
"on how to create this volume after installation."

[UamSecurityNotSetENG]
ErrorString = +
"Setup cannot set the default security settings for the UAM volume. "+
"Security for the UAM volume can also be set from the User Manager "+
"after installation."

[CannotStartAtalkENG]
ErrorSuffix = +
"Setup was unable to start the AppleTalk Protocol. You will be unable to choose "+
"a desired zone at this time."

[CannotStartAfdENG]
ErrorSuffix = +
"Setup was unable to start the AFD Driver. You will be unable to choose "+
"a desired zone at this time."

;------------------------------------------------------------------
; Status Strings
;------------------------------------------------------------------


[StatusInstallSfmENG]
Status = "Installing Services for Macintosh..."

[StatusRemoveSfmENG]
Status = "Removing Services for Macintosh files..."

[StatusStartingAppleTalkENG]
Status = "Starting AppleTalk Protocol..."



;------------------------------------------------------------------
; AppleTalk Transport Error Strings
;------------------------------------------------------------------

[AtalkString1ENG]
ErrorString  = +
"Setup cannot add Windows sockets support for the AppleTalk protocol. "+
"Windows sockets applications will be unable to use the AppleTalk Protocol. "+
"Remove Services for Macintosh after installation and re-install. If the problem "+
"persists, contact Microsoft support."

[AtalkString2ENG]
ErrorString  = +
"Setup cannot remove Windows Sockets support for the AppleTalk protocol."


[AtalkString3ENG]
ErrorString  = +
"Services for Macintosh has just been installed. Services will be "+
"available to Macintosh workstations in the default network. If you would like "+
"the services to appear in a different zone or to configure routing, close "+
"the Control Panel, reboot, start AppleTalk and use the Control Panel "+
"to configure Services for Macintosh."

[AtalkString5ENG]
ErrorString = +
"Setup cannot remove the monitor for the Print Server for Macintosh."

[AFPString1ENG]
ErrorString = +
"Setup cannot find an NTFS partition on your system. "+
"Services for Macintosh requires an NTFS partition for "+
"Macintosh workstations to share files. You can create "+
"the NTFS partition after installing Services for Macintosh. "+
"To format a partition to NTFS, use the command, format [drive] /fs:NTFS. "+
"Setup will proceed with installation."


[AFPString2ENG]
ErrorString = +
"Setup cannot add the Macintosh File Server to the File Manager. "+
"You will be unable to work with Macintosh accessible volumes from "+
"File Manager."


[AFPString3ENG]
ErrorString  = +
"Setup cannot add the Macintosh File Server to the Server Manager. "+
"You will be unable to work with Services for Macintosh servers from "+
"Server Manager."

[AFPString11ENG]
ErrorString  = +
"Setup can not find the volumes key in the MacFile section in registry. "+
"The UAM volume cannot be built."

[AFPString12ENG]
ErrorString  = +
"Setup can not find any NTFS volumes in your system. The UAM volume can not be installed."


[MacPrintString2ENG]
ErrorString = +
"Setup cannot create the eventlog entries for the Print Server for Macintosh. "+
"You will be unable to use the event viewer to see the log for Print Server "+
"for Macintosh."

[MacPrintString3ENG]
ErrorString = +
"Setup cannot add the print processor for the Print Server for Macintosh. "+
"Macintosh workstations will be unable to print postscript jobs to a "+
"non-postscript printer on the Windows NT Server network."

[MacPrintString4ENG]
ErrorString = +
"Setup cannot add the print monitor for the Print Server for Macintosh. "+
"Macintosh workstations will be unable to use print services on this "+
"Windows NT Server."

[MacPrintString5ENG]
ErrorString = +
"Setup cannot remove the print processor for the Print Server for Macintosh."

[MacPrintString6ENG]
ErrorString = +
"Setup can not find the directory to install the Macintosh print processor. "+
"The Macintosh print processor will not be installed."

[MacPrintString7ENG]
ErrorString = +
"Setup cannot remove the monitor for the Print Server for Macintosh."


[MacPrintString10ENG]
ErrorString = +
"Setup cannot create the eventlog entries for the Print Server for Macintosh monitor. "+
"You will be unable to use the event viewer to see the log for Print Server "+
"for Macintosh."


[NoAdaptersFoundENG]

ErrorString = +
"Setup cannot find any network adapter for Services for Macintosh. You will "+
"be unable to use Services for Macintosh. Try adding a network adapter or "+
"enable the bindings for AppleTalk Protocol."

[RemoveDefaultPortENG]
ErrorString  = +
"Setup has detected that the default network adapter used by Services "+
"for Macintosh has been removed. Setup will change the default network, if "+
"one is available. This may cause Macintosh workstations to no longer "+
"see Services for Macintosh on their current zone."

#####oemnxpsm.inf all

[LanguagesSupported]
   ENG
[OptionsTextENG]
   ATALK           = "AppleTalk Protocol"

[FileConstantsENG]
ProductSFMADMTitle              = "Macintosh Administrator Tools"
ProductSFMADMDescription        = "Macintosh Administrator Tools"
ProductATALKTitle               = "AppleTalk Protocol"
ProductSFMADMName               = "SFMADM"
FunctionTitle               = "AppleTalk Protocol Setup"
ProductATALKDescription     = "Enables a Macintosh computer to access shared disk space on your computer."


ProCaption      = $(FunctionTitle)
ProCancel       = "Cancel"
ProCancelMsg    = "AppleTalk Protocol is not correctly installed. "+
                  "Are you sure you want to cancel copying files ?"
ProCancelCap    = "AppleTalk Protocol Setup"
ProText1        = "Copying:"
ProText2        = "To:"
Error           = "User has cancelled copying files. Copied files will be removed."

MajorVersion    = "MajorVersion"
MinorVersion    = "MinorVersion"
Version         =  "Version "
OF              = " of "

!AtalkMonName                   = "AppleTalk Printing Devices"
!AtalkMonEventLogName   = "AppleTalk Print Monitor"

AskLocationText = "Setup needs to copy AppleTalk Protocol files."$(!LF)$(!LF)+
                  "Setup will look for the files in the location specified below. If you want "+
                  "Setup to look in a different place, type the new location. When the location "+
                  "is correct, click Continue."

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[ExitWarningDlgENG]
STF_MB_TITLE    = "AppleTalk Protocol Setup"
STF_MB_TEXT     = "AppleTalk Protocol is not correctly installed. Are you "+
                  "sure you want to exit Setup?"

;no translation needed after this

DlgType         = "MessageBox"
STF_MB_TYPE     = 3
STF_MB_ICON     = 5
STF_MB_DEF      = 2

;------------------------------------------------------------------
; Error Strings
;------------------------------------------------------------------

;------------------------------------------------------------------
; Miscellaneous Errors
;------------------------------------------------------------------

[MiscErrorString1ENG]
ErrorString = +
" is already installed on your system. "+
"Use [Update] to update to newer versions."

[SfmAlreadyInstalledENG]
ErrorString = +
" of Services for Macintosh is already installed on your system. "+
"You have to remove Services for Macintosh before installing the "+
"AppleTalk Protocol."

[MiscErrorString3ENG]
ErrorString = +
"Setup encountered the following error during installation. Try installing "+
"after rebooting your system. "$(LF)

[ShellingErrorENG]
ErrorString  = +
"An internal error occurred. Contact Technical Support."

[CannotStartAtalkENG]
ErrorSuffix = +
"Setup was unable to start the AppleTalk Protocol. You will be unable to choose "+
"a desired zone at this time."

[CannotStartAfdENG]
ErrorSuffix = +
"Setup was unable to start the AFD Driver. You will be unable to choose "+
"a desired zone at this time."

[StatusStartingAppleTalkENG]
Status = "Starting AppleTalk Protocol..."

;------------------------------------------------------------------
; AppleTalk Transport Error Strings
;------------------------------------------------------------------

[AtalkString1ENG]
ErrorString  = +
"Setup cannot add Windows sockets support for the AppleTalk protocol. "+
"Windows sockets applications will be unable to use the AppleTalk Protocol. "+
"Remove Services for Macintosh after installation and re-install. If the problem "+
"persists, contact Microsoft support."

[AtalkString2ENG]
ErrorString  = +
"Setup cannot remove Windows Sockets support for the AppleTalk protocol."


[AtalkString3ENG]
ErrorString  = +
"AppleTalk has just been installed. "+
"If you would like to configure AppleTalk, close "+
"the Control Panel, reboot, start AppleTalk and use the Control Panel "+
"to configure."

[AtalkString4ENG]
ErrorString = +
"Setup cannot add the print monitor for the Print Server for Macintosh. "+
"Macintosh workstations will be unable to use print services on this "+
"Windows NT workstation."

[AtalkString5ENG]
ErrorString = +
"Setup cannot remove the monitor for the Print Server for Macintosh."

[AtalkString6ENG]
"Setup cannot create the eventlog entries for the Print Server for Macintosh monitor. "+
"You will be unable to use the event viewer to see the log for Print Server "+
"for Macintosh."

[AtalkString7ENG]
ErrorString = +
"Services for Macintosh is installed on your system and it requires "+
"AppleTalk Protocol for proper operation."+
"You have to remove Services for Macintosh if you desire to remove "+
"AppleTalk Protocol."

[AFPString2ENG]
ErrorString = +
"Setup cannot add the Macintosh File Server to the File Manager. "+
"You will be unable to work with Macintosh accessible volumes from "+
"File Manager."


[AFPString3ENG]
ErrorString  = +
"Setup cannot add the Macintosh File Server to the Server Manager. "+
"You will be unable to work with Services for Macintosh servers from "+
"Server Manager."

[NoAdaptersFoundENG]

ErrorString = +
"Setup cannot find any network adapter for the AppleTalk Protocol. You will "+
"be unable to use AppleTalk Protocol. Try adding a network adapter or "+
"enable the bindings for AppleTalk Protocol."

[RemoveDefaultPortENG]
ErrorString  = +
"Setup has detected that the default network adapter used by AppleTalk "+
"Protocol has been removed. Setup will change the default network, if "+
"one is available."

[CantConfigureADMENG]
ErrorString = +
"You cannot configure this software component."

[RemovingSFMENG]
Message = "You have Services for Macintosh (SFM) installed on your "+
          "Windows NT Workstation. "+
          "SFM is only supported on the Windows NT Server. "+
          "Your SFM installation will be removed since this is not a "+
          "supported configuration. "+
          "Please install the Windows NT Server if you want to run SFM."


#####netbond.inf all
[MessageTextENG]
ProCaption   = "Windows NT Networking Installation"
ProCancel    = "Cancel"
MPreInstall1 = "Setup is installing the "
MPreInstall2 = "..."
MPostInstall = " has been installed."
ProCancelMsg = "Windows NT is not correctly installed.  Are you sure you want "+
                   "to cancel copying files?"
ProCancelCap = "Setup Message"
MPreUpgrade1 = "Setup is upgrading the "
MPostUpgrade = " has been upgraded."

MPreRemove1 = "Setup is removing the "
MPreRemove2 = "..."
MPostRemove = " has been removed."

[FatalErrorENG]
; do not translate the string on the left of the '='
Error = "Setup was unable to process the INF file "$(FailedInfFile)" which is required "+
        "for network installation."

[ErrorMsgENG]
CannotFindNtFiles = "The Windows NT files were not found in "$(Path1)", "$(Path2)", or "$(Path3)". Please make sure your input path is correct."

[FatalDlgENG]
STF_MB_TITLE = "Setup Message"
; no translation starting now
DlgType = "MessageBox"
STF_MB_TEXT  = $(Error)
STF_MB_TYPE  = 1
STF_MB_ICON  = 3
STF_MB_DEF   = 1
; end of no translation zone

[UpgradeWarnings]
; do not translate the string on the left of the '='
Warning = "You have the following product installed on your computer:  "$(ServiceTitle)".  Windows NT cannot upgrade this component.  Please contact your system administrator  or look through your product documentation to make sure that this product is compatible with this version of Windows NT."

[UpgradeNetCardWarnings]
; do not translate the string on the left of the '='
Warning = "The following non-Microsoft networking component is installed on this computer:  "$(ServiceTitle)".  Although your network connection may function properly after the upgrade is completed,  the component should be removed and replaced with a newer version."

[WarningDlg]
STF_MB_TITLE = "Network Setup Information"

; no translation starting now
DlgType = "MessageBox"
STF_MB_TEXT  = $(Warning)
STF_MB_TYPE  = 1
STF_MB_ICON  = 2
STF_MB_DEF   = 1
; end of no translation zone

[UpgradeDialogENG]
    ProCaption   = "Windows NT Networking Upgrade"
    ProCancel    = "Cancel"
    ProCancelMsg = "Windows NT is not correctly upgraded.  Are you sure you want "+
                   "to cancel copying files?"
    ProCancelCap = "Network Upgrade Message"
    ProText1     = "Copying:"
    ProText2     = "To:"

#####oemnsvin.inf all
[LanguagesSupported]
    ENG


;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsWINNTTextENG]
    INETSRV      = "Microsoft Peer Web Services"

[OptionsLANMANNTTextENG]
    INETSRV      = "Microsoft Internet Information Server 2.0"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionLANMANNTTitle    = "Microsoft Internet Information Server 2.0"
FunctionWINNTTitle = "Microsoft Peer Web Services"
;
; Software
;
ProductSoftwareWINNTDescription      = "Microsoft Peer Web Services"
ProductSoftwareLANMANNTDescription   = "Microsoft Internet Information Server 2.0"
;
; Hardware
;
OptionList     = ^(Options, 1)
OptionTextList = ^(OptionsTextENG, 1)

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

Warning1 = "Please use Internet Manager to configure the software."
Warning2Winnt = "Microsoft Peer Web Services may be deleted by another process. Please restart your Network Control Panel applet."
Warning2LanmanNt = "Microsoft Internet Information Server may be deleted by another process. Please restart your Network Control Panel applet."
Warning3Winnt = "Microsoft Peer Web Services may be installed by another process. Please restart your Network Control Panel applet."
Warning3LanmanNt = "Microsoft Internet Information Server may be installed by another process. Please restart your Network Control Panel applet."
Warning4Winnt = "Microsoft Peer Web Services cannot be installed without proper network protocol setup. Please make sure your network protocol is installed."
Warning4LanmanNt = "Microsoft Internet Information Server cannot be installed without proper network protocol setup. Please make sure your network protocl is installed."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for sonic
;

#####oemnadsn.inf all
[LanguagesSupported]
    ENG

[OptionsTextENG]
    SNIMAC      = "SNI RM400/RM200 Driver for onboard Ethernet Adapter"

[FileConstantsENG]
    ProCaption   = "Windows NT Setup"
    ProCancel    = "Cancel"
    ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
                   "Are you sure you want to cancel copying files?"
    ProCancelCap = "Network Setup Message"
    ProText1     = "Copying:"
    ProText2     = "To:"
    FunctionTitle                   = "SNI RM400/RM200 onboard Ethernet Adapter Card Setup"
    ProductSoftwareDescription      = "SNI RM400/RM200 onboard Ethernet Adapter Driver"
    OptionList     = ^(Options, 1)
    OptionTextList = ^(OptionsTextENG, 1)
    ProductHardwareDescription      = *($(OptionTextList), ~($(OptionList), $(Option)))
    ProductSoftwareTitle            = "SNI RM400/RM200 onboard Ethernet Adapter Driver"
    ProductHardwareSNIMACx00Title      = "SNI RM400/RM200 onboard Ethernet Adapter"
    ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
    ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
    Help        = "&Help"
    Exit        = "Cancel"
    OK          = "OK"
    HelpContext = ""
    Continue    = "C&ontinue"
    Cancel      = "C&ancel"

[FileDependentDlgENG]

[Warning1ENG]
    Error = "No configuration is required for this adapter card."



#####oemnadma.inf all
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; Text strings to identify adapter options.
;-----------------------------------------------------------------------

[OptionsTextENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPISA   = "Madge Smart 16/4 AT Ringnode"
    MSMDGMPATP   = "Madge Smart 16/4 AT Plus Ringnode"
    MSMDGMPISAC  = "Madge Smart 16/4 ISA Client Ringnode"
    MSMDGMPISACP = "Madge Smart 16/4 ISA Client Plus Ringnode"
    MSMDGMPPC    = "Madge Smart 16/4 PC Ringnode"
    MSMDGMPSM16  = "Madge Smart 16 Ringnode"
    MSMDGMPPNP   = "Madge Smart 16/4 ISA Client PnP Ringnode"
    MSMDGMPMCA   = "Madge Smart 16/4 MC Ringnode"
    MSMDGMPMC32  = "Madge Smart 16/4 MC32 Ringnode"
    MSMDGMPEISA  = "Madge Smart 16/4 EISA Ringnode"
    MSMDGMPPCI   = "Madge Smart 16/4 PCI Ringnode"
    MSMDGMPPCIBM = "Madge Smart 16/4 PCI Ringnode (BM)"
    MSMDGMPPCMCIA = "Madge Smart 16/4 PCMCIA Ringnode"

[OptionsTextISAENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPISA   = "Madge Smart 16/4 AT Ringnode"
    MSMDGMPATP   = "Madge Smart 16/4 AT Plus Ringnode"
    MSMDGMPISAC  = "Madge Smart 16/4 ISA Client Ringnode"
    MSMDGMPISACP = "Madge Smart 16/4 ISA Client Plus Ringnode"
    MSMDGMPPC    = "Madge Smart 16/4 PC Ringnode"
    MSMDGMPSM16  = "Madge Smart 16 Ringnode"
    MSMDGMPPNP   = "Madge Smart 16/4 ISA Client PnP Ringnode"

[OptionsTextMCAENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPMCA   = "Madge Smart 16/4 MC Ringnode"
    MSMDGMPMC32  = "Madge Smart 16/4 MC32 Ringnode"

[OptionsTextEISAENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPEISA  = "Madge Smart 16/4 EISA Ringnode"
    MSMDGMPISA   = "Madge Smart 16/4 AT Ringnode"
    MSMDGMPATP   = "Madge Smart 16/4 AT Plus Ringnode"
    MSMDGMPISAC  = "Madge Smart 16/4 ISA Client Ringnode"
    MSMDGMPISACP = "Madge Smart 16/4 ISA Client Plus Ringnode"
    MSMDGMPPC    = "Madge Smart 16/4 PC Ringnode"
    MSMDGMPSM16  = "Madge Smart 16 Ringnode"
    MSMDGMPPNP   = "Madge Smart 16/4 ISA Client PnP Ringnode"

[OptionsTextPCIENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPPCI   = "Madge Smart 16/4 PCI Ringnode"
    MSMDGMPPCIBM = "Madge Smart 16/4 PCI Ringnode (BM)"

[OptionsTextPCMCIAENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPPCMCIA = "Madge Smart 16/4 PCMCIA Ringnode"


; ----------------------------------------------------------------------
; Miscellaneous declarations for initialsing lists.
; ----------------------------------------------------------------------

[IoLocationChoices]
    "0x0300",768
    "0x0a20",2592
    "0x1a20",6688
    "0x2a20",10784
    "0x3a20",14880
    "0x4a20",18976
    "0x4e20",20000
    "0x5a20",23072
    "0x5e20",24096
    "0x6a20",27168
    "0x6e20",28192
    "0x7a20",31264
    "0x7e20",32288
    "0x0140",320
    "0x0920",2336
    "0x0940",2368
    "0x0960",2400
    "0x0980",2432
    "0x0a40",2624
    "0x0a60",2656
    "0x0a80",2688
    "0x0aa0",2720
    "0x0b20",2848
    "0x0b40",2880
    "0x0b60",2912
    "0x0b80",2944
    "UNKNOWN",65535

[DmaChannelChoices]
    "PIO",0
    "DMA Channel 01",1
    "DMA Channel 02",2
    "DMA Channel 03",3
    "DMA Channel 04",4
    "DMA Channel 05",5
    "DMA Channel 06",6
    "DMA Channel 07",7
    "DMA Channel 08",8
    "DMA Channel 09",9
    "DMA Channel 10",10
    "DMA Channel 11",11
    "DMA Channel 12",12
    "DMA Channel 13",13
    "DMA Channel 14",14
    "DMA Channel 15",15
    "DMA",500
    "MMIO",501
    "UNKNOWN",65535

[IrqNumberChoices]
    "01",1
    "02",2
    "03",3
    "04",4
    "05",5
    "06",6
    "07",7
    "08",8
    "09",9
    "10",10
    "11",11
    "12",12
    "13",13
    "14",14
    "15",15
    "UNKNOWN",65535

[SlotNumberChoices]
    "00",0
    "01",1
    "02",2
    "03",3
    "04",4
    "05",5
    "06",6
    "07",7
    "08",8
    "09",9
    "10",10
    "11",11
    "12",12
    "13",13
    "14",14
    "15",15
    "16",16
    "17",17
    "18",18
    "19",19
    "20",20
    "21",21
    "22",22
    "23",23
    "24",24
    "25",25
    "26",26
    "27",27
    "28",28
    "29",29
    "30",30
    "31",31
    "UNKNOWN",65535

[RxTxSlotsChoices]
    "Rx=02 Tx=02",0
    "Rx=03 Tx=03",1
    "Rx=04 Tx=04",2
    "Rx=06 Tx=06",3
    "Rx=08 Tx=08",4
    "Rx=10 Tx=10",5

[StatsChoices]
    "Disabled",0
    "Enabled",1

[MpChoices]
    "One",0
    "Multiple",1
    "UNKNOWN",65535
; ----------------------------------------------------------------------
; Language dependent constants specific to the driver.
; ----------------------------------------------------------------------

[FileConstantsENG]

;
; Product Info
;

FunctionTitle   = "MdgMPort v"$(ProductVersion)": Madge Smart Ringnode Setup"

;
; Software.
;

ProductSoftwareTitle       = "MdgMPort"
ProductSoftwareDescription = "MdgMPort: Madge Smart Ringnode NDIS3 Miniport Driver"

;
; Hardware.
;

ProductHardwareMSMDGMPISATitle   = "Madge Smart 16/4 AT Ringnode"
ProductHardwareMSMDGMPATPTitle   = "Madge Smart 16/4 AT Plus Ringnode"
ProductHardwareMSMDGMPISACTitle  = "Madge Smart 16/4 ISA Client Ringnode"
ProductHardwareMSMDGMPISACPTitle = "Madge Smart 16/4 ISA Client Plus Ringnode"
ProductHardwareMSMDGMPPCTitle    = "Madge Smart 16/4 PC Ringnode"
ProductHardwareMSMDGMPEISATitle  = "Madge Smart 16/4 EISA Ringnode"
ProductHardwareMSMDGMPMCATitle   = "Madge Smart 16/4 MC Ringnode"
ProductHardwareMSMDGMPMC32Title  = "Madge Smart 16/4 MC32 Ringnode"
ProductHardwareMSMDGMPSM16Title  = "Madge Smart 16 Ringnode"
ProductHardwareMSMDGMPPNPTitle   = "Madge Smart 16/4 ISA Client PnP Ringnode"
ProductHardwareMSMDGMPPCITitle   = "Madge Smart 16/4 PCI Ringnode"
ProductHardwareMSMDGMPPCIBMTitle = "Madge Smart 16/4 PCI Ringnode (BM)"
ProductHardwareMSMDGMPPCMCIATitle  = "Madge Smart 16/4 PCMCIA Ringnode"

ProductHardwareMSMDGMPISADescription   = "Madge Smart 16/4 AT Ringnode"
ProductHardwareMSMDGMPATPDescription   = "Madge Smart 16/4 AT Plus Ringnode"
ProductHardwareMSMDGMPISACDescription  = "Madge Smart 16/4 ISA Client Ringnode"
ProductHardwareMSMDGMPISACPDescription = "Madge Smart 16/4 ISA Client Plus Ringnode"
ProductHardwareMSMDGMPPCDescription    = "Madge Smart 16/4 PC Ringnode"
ProductHardwareMSMDGMPEISADescription  = "Madge Smart 16/4 EISA Ringnode"
ProductHardwareMSMDGMPMCADescription   = "Madge Smart 16/4 MC Ringnode"
ProductHardwareMSMDGMPMC32Description  = "Madge Smart 16/4 MC32 Ringnode"
ProductHardwareMSMDGMPSM16Description  = "Madge Smart 16 Ringnode"
ProductHardwareMSMDGMPPNPDescription   = "Madge Smart 16/4 ISA Client PnP Ringnode"
ProductHardwareMSMDGMPPCIDescription   = "Madge Smart 16/4 PCI Ringnode"
ProductHardwareMSMDGMPPCIBMDescription = "Madge Smart 16/4 PCI Ringnode (BM)"
ProductHardwareMSMDGMPPCMCIADescription   = "Madge Smart 16/4 PCMCIA Ringnode"

;
; Ring speed selection.
;

SpeedUserListMSMDGMPISA    = {"Set at adapter", "Force 16 MBit/s"}
SpeedRawListMSMDGMPISA     = {0, 2}

SpeedUserListMSMDGMPATP    = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPATP     = {0, 1, 2}

SpeedUserListMSMDGMPISAC   = {"Set at adapter", "Force 16 MBit/s"}
SpeedRawListMSMDGMPISAC    = {0, 2}

SpeedUserListMSMDGMPISACP  = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPISACP   = {0, 1, 2}

SpeedUserListMSMDGMPPC     = {"Set at adapter", "Force 16 MBit/s"}
SpeedRawListMSMDGMPPC      = {0, 2}

SpeedUserListMSMDGMPEISA   = {"Set at adapter"}
SpeedRawListMSMDGMPEISA    = {0}

SpeedUserListMSMDGMPMCA    = {"Set at adapter"}
SpeedRawListMSMDGMPMCA     = {0}

SpeedUserListMSMDGMPMC32   = {"Set at adapter"}
SpeedRawListMSMDGMPMC32    = {0}

SpeedUserListMSMDGMPSM16   = {"Always 16 MBit/s"}
SpeedRawListMSMDGMPSM16    = {0}

SpeedUserListMSMDGMPPNP    = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPPNP     = {0, 1, 2}

SpeedUserListMSMDGMPPCI    = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPPCI     = {0, 1, 2}

SpeedUserListMSMDGMPPCIBM  = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPPCIBM   = {0, 1, 2}

SpeedUserListMSMDGMPPCMCIA = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPPCMCIA  = {0, 1, 2}

;
; Adapter types.
;

AdapterTypeFlagMSMDGMPISA    = 100
AdapterTypeFlagMSMDGMPATP    = 100
AdapterTypeFlagMSMDGMPISAC   = 100
AdapterTypeFlagMSMDGMPISACP  = 100
AdapterTypeFlagMSMDGMPPC     = 100
AdapterTypeFlagMSMDGMPEISA   = 500
AdapterTypeFlagMSMDGMPMCA    = 600
AdapterTypeFlagMSMDGMPMC32   = 600
AdapterTypeFlagMSMDGMPSM16   = 400
AdapterTypeFlagMSMDGMPPNP    = 300
AdapterTypeFlagMSMDGMPPCI    = 700
AdapterTypeFlagMSMDGMPPCIBM  = 700
AdapterTypeFlagMSMDGMPPCMCIA = 200

;
; Messages.
;

CANNOT_FIND_ANY_CARD = "Cannot find a Madge Smart Ringnode in the machine. "+
                       "If you are certain that a Madge Smart Ringode is "+
                       "present then try choosing the adapter type "+
                       "instead of automatic installation. Please note "+
                       "that EISA and MCA adapters will only be found if "+
                       "the EISA configuration utility or PS/2 reference "+
                       "diskette respectively have been used to configure "+
                       "the adapter. Also not that automated installation "+
                       "will not find PCI adapters."

TRIMMED_MFS = "WARNING: The maximum frame size at 16Mbps is 17839 bytes"+
	      "  and you have specified a value greater than that. This"+
	      "  value has been reduced to 17839 for you. If you are in"+
	      "  fact running at 4Mbps, the maximum frame size is 4472,"+
	      "  but do not worry -  the driver will automatically  set"+
	      "  the correct value, and write it to the Event Log."

ShellCodeErrorTitle = "Error: "$(FunctionTitle)
ShellCodeErrorText  = "Shell Code Error"

ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

; ---------------------------------------------------------------------
; Language dependant general dialog constants.
; ---------------------------------------------------------------------

[DialogConstantsENG]

;
; Common button names, etc.
;

Help        = "&Help"
Exit        = "&Cancel"
OK          = "&OK"
Continue    = "C&ontinue"
Cancel      = "C&ancel"
HelpContext = ""

OldValueTitleInstall   = "Current hardware settings"
OldValueTitleConfigure = "Currently configured settings"

ConsultHelp = "Consult help before changing the settings below"

; -----------------------------------------------------------------------
; Language depentant input dialog constants.
; -----------------------------------------------------------------------

[FileDependentDlgENG]

DlgType     = "RadioCombination"
DlgTemplate = $(Option)

Caption = $(FunctionTitle)

Combo1Label = "&IRQ Level:"
Combo2Label = "I/O &Location:"
Combo3Label = "&Transfer method:"
Combo4Label = "Rx/Tx &Buffers:"
Combo5Label = "Traffic &Statistics Gathering:"
Combo6Label = "Please choose a Madge adapter to install"
Combo7Label = "Number of processors in &PC:"
Combo8Label = "Slot &Number:"
Combo9Label = "&Ring Speed:"

PciCombo8Label = "PCI &Device ID:"

Combo1List = $(IrqList)
Combo1Out  = $(IrqNumber)

Combo2List = $(IoList)
Combo2Out  = $(IoLocation)

Combo3List = $(DmaList)
Combo3Out  = $(DmaChannel)

Combo4List = $(RxTxUserList)
Combo4Out  = $(RxTxSlots)

Combo5List = $(StatsUserList)
Combo5Out  = $(StatsFlag)

Combo6List = $(AdapterDescList)
Combo6Out  = $(AdapterType)

Combo7List = $(MpList)
Combo7Out  = $(MpFlag)

Combo8List = $(SlotList)
Combo8Out  = $(SlotNumber)

Combo9List = $(SpeedUserList)
Combo9Out  = $(SpeedFlag)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List, Combo4List, Combo5List, Combo6List, Combo7List, Combo8List, Combo9List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out, Combo4Out, Combo5Out, Combo6Out, Combo7Out, Combo8Out, Combo9Out}

Edit1Label  = "Max&FrameSize:"
Edit2Label  = "&LAA:"
EditTextIn  = {$(MaxFrameSize), $(LAA)}
EditTextLim = {5,17}
EditTextOut = {}

CBOptionsGreyed = {}
NotifyFields = {NO, NO, NO, NO, NO, NO, NO, NO}

HelpContext = $(MadgeHelpId$(Option))

AdapterTitle = #(OptionsText$(!STF_LANGUAGE),$(Option),1)

#####oemnadam.inf i386
[LanguagesSupported]
    ENG
[OptionsTextENG]
    AM1500T = "Advanced Micro Devices AM2100/AM1500T Adapter"
    AM1500T1 = "Novell/Anthem NE1500T Adapter"
    AM1500T2 = "Novell/Anthem NE2100 Adapter"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionAM1500TTitle   = "AMD AM2100/AM1500T Adapter Setup"
FunctionAM1500T1Title   = "Novell/Anthem NE1500T Adapter Setup"
FunctionAM1500T2Title   = "Novell/Anthem NE2100 Adapter Setup"
ProductSoftwareAM1500TDescription       = "AMD AM2100/AM1500T Driver"
ProductSoftwareAM1500T1Description      = "Novell/Anthem NE1500T Driver"
ProductSoftwareAM1500T2Description      = "Novell/Anthem NE2100 Driver"
ProductHardwareAM1500TDescription       = "AMD AM2100/AM1500T Adapter"
ProductHardwareAM1500T1Description      = "Novell/Anthem NE1500T Adapter"
ProductHardwareAM1500T2Description      = "Novell/Anthem NE2100 Adapter"
ProductSoftwareAM1500TTitle     = "AMD Driver"
ProductSoftwareAM1500T1Title    = "Novell/Anthem NE1500T Driver"
ProductSoftwareAM1500T2Title    = "Novell/Anthem NE2100 Driver"
ProductHardwareAM1500TTitle     = "AMD AM2100/AM1500T Adapter"
ProductHardwareAM1500T1Title    = "Novell/Anthem NE1500T Adapter"
ProductHardwareAM1500T2Title    = "Novell/Anthem NE2100 Adapter"
ShellCodeErrorTitle     = "Error: "$(Function$(Option)Title)
ShellCodeErrorText      = "Shell Code Error."
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
DlgType = "MultiCombo"
DlgTemplate = "WD"
Caption = $(Function$(Option)Title)
Combo1Label = "&IRQ Level:"
Combo2Label = "&DMA Channel:"
Combo3Label = "I/&O Port Address:"
Combo1List = $(IRQ_List)
Combo1Out  = $(IRQLevel)
Combo2List = $(DMAChannelList)
Combo2Out  = $(DMAChannel)
Combo3List = $(IOBaseAddressHexList)
Combo3Out  = $(IOBaseAddress)
ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}
EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO, NO}
HelpContext = $(!IDH_DB_OEMNADAM_INS)

=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\inf\beta\kor_net.txt ===
#####oemnadso.inf mips
[LanguagesSupported]
    ENG


;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SONIC      = "ARC Built-in Ethernet Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "ARC Built-in Ethernet Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "ARC Built-in Ethernet Adapter Driver"
;
; Hardware
;
OptionList     = ^(Options, 1)
OptionTextList = ^(OptionsTextENG, 1)

ProductHardwareDescription      = *($(OptionTextList), ~($(OptionList), $(Option)))

ProductSoftwareTitle    = "ARC Built-in Ethernet Adapter Driver"
ProductHardwareSONICTitle       = "ARC Built-in Ethernet Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for sonic
;

[Warning1ENG]
Error = "No configuration is required for this adapter card."

#####oemnadim.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    EE16MC     = "Intel Ether Express MCA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Intel Ether Express MCA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Intel Ether Express MCA Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Intel Ether Express MCA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Intel Ether Express MCA Adapter Driver"
ProductHardwareTitle    = "Intel Ether Express MCA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;

#####oemnadem.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNKMC     = "3Com 3C523 Etherlink/MC Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "3Com 3C523 Etherlink/MC Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com 3C523 Etherlink/MC Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "3Com 3C523 Etherlink/MC Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "3Com 3C523 Etherlink/MC Adapter Driver"
ProductHardwareTitle    = "3Com 3C523 Etherlink/MC Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;
#####oemnadtm.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    IBMTOKMC     = "IBM Token Ring 4/16 Adapter /A"
    IBMTOKA      = "IBM Token Ring Adapter /A"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "IBM Token Ring Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "IBM Token Ring Adapter Driver"
;
; Hardware
;
ProductHardwareIBMTOKADescription      = "IBM Token Ring Adapter /A"
ProductHardwareIBMTOKMCDescription     = "IBM Token Ring 4/16 Adapter /A"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "IBM Token Ring Adapter Driver"
ProductHardwareIBMTOKATitle     = "IBM Token Ring Adapter /A"
ProductHardwareIBMTOKMCTitle    = "IBM Token Ring 4/16 Adapter /A"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Edit1Label = "&Network Address:"

;no translation needed after this

DlgType = "Edit"
DlgTemplate = "NETWORK_NUMBER"
Caption = $(FunctionTitle)

HelpContext = $(!IDH_DB_OEMNADTM_INS)

EditTextLim = 17
EditTextIn  = $(NetworkAddress)
EditFocus   = "ALL"
RCCtlFocusOn = 403

#####oemnadum.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    UBPS     = "Ungermann-Bass Ethernet NIUps Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Ungermann-Bass Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Ungermann-Bass Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Ungermann-Bass Ethernet NIUps Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Ungermann-Bass Driver"
ProductHardwareTitle    = "Ungermann-Bass Ethernet NIUps Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;

#####oemnadwm.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    WD8003EA = "SMC (WD) 8003E /A"
    WD8003WA = "SMC (WD) 8003W /A"
    WD8013WPA = "SMC (WD) 8013WP /A"
    WD8013EPA = "SMC (WD) 8013EP /A"

;  Disable options
;    WD8003EA = "SMC (WD) 8003E /A"
;    WD8003SA = "SMC (WD) 8003S /A"
;    WD8003WA = "SMC (WD) 8003W /A"
;    WD8013WA = "SMC (WD) 8013W /A"
;    WD8115TRA = "SMC (WD) 8115 /A"
;    BISTOR003EA = "SMC (WD) BISTOR003EA /A"
;    BISTOR013EA = "SMC (WD) BISTOR013EA /A"
;    BISTOR013WA = "SMC (WD) BISTOR013WA /A"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
; Product Info
;
FunctionTitle   = "SMC (WD) "$(Option)" Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "SMC (WD) Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "SMC (WD) "$(Option)" Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "SMC (WD) Adapter Driver"
ProductHardwareTitle    = "SMC (WD) "$(Option)" Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;

#####oemnxpxn.inf all
;------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
;       This lists the languages supported by this file.
;       If you add other languages to this list, you must
;       also add the appropriate text sections for the new
;       language
;------------------------------------------------------------------
[LanguagesSupported]
    ENG

;-------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
;
;       These are the text strings used to identify the options to
;       the user.  There should be a header and entry for every
;       language listed in the "LanguagesSupported" section.
;-------------------------------------------------------------------
[OptionsTextENG]
    MCSXNS     = "MCS XNS Network Transport"

;--------------------------------------------------------------------
;       Language Dependent Dialog Constants
;--------------------------------------------------------------------
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "MCS XNS Setup"
ProductMCSXNSDescription     = "MCS XNS System Driver"
ProductUBNBDescription   = "MCS Ungermann-Bass NetBIOS System Driver"
ProductMCSXNSDisplayName = "MCS XNS Network Transport"
ProductMCSXNSTitle      = "MCS XNS Network Transport"
ProductMCSXNSSYSDisplayName = "McsXnssys"
ProductMCSXNSSYSTitle   = "MCS XNS Network Transport Driver"
ProductUBNBDisplayName = "MCS Ungermann-Bass NetBIOS Transport"
ProductUBNBTitle        = "MCS Ungermann-Bass NetBIOS Transport"
ProductUBNBSYSDisplayName = "Ubnbsys"
ProductUBNBSYSTitle      = "MCS Ungermann-Bass NetBIOS Transport Driver"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[FileDependentDlgENG]
;
;--- No UI for McsXns
;

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlg]
STF_MB_TITLE = "Information Message"
; no translation needed for dlgtype
DlgType = "MessageBox"
STF_MB_TEXT  = $(InfoMsgText)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlgCantConfigure]
InfoMsgText = "The MCS XNS service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click  OK.  You will then have the opportunity to configure the adapters."

;--------------------------------------------------------------------
;       Get the string to use while doing the install
;--------------------------------------------------------------------
[Billboard1ENG]
Status = "Installing MCS XNS/UB and related services..."


#####oemnadnp.inf all
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NPEISA     = "Network Peripherals FDDI, EISA"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Network Peripherals FDDI EISA Setup"
;
; Software
;
ProductSoftwareDescription      = "Network Peripherals FDDI EISA Driver"
;
; Hardware
;
ProductHardwareDescription      = "Network Peripherals FDDI EISA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Network Peripherals FDDI, EISA Driver"
ProductHardwareTitle    = "Network Peripherals FDDI Eisa Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for EISA
;

#####nbinfo.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NETBIOS     = "NETBIOS provider"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


ShellCodeErrorTitle     = "Error: NETBIOS Provider"
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]


#####ncpashel.inf all
;**************************************************************************
;  Language Support
;**************************************************************************
[LanguageID]
   ENG

[LanguageTextENG]
   "English (United States)"

;**************************************************************************
; PROGRESS GUAGE VARIABLES: to support file copy operations.
;**************************************************************************

[ProgressCopyENG]
    ProCaption   = "Windows NT Networking Setup"
    ProCancel    = "Cancel"
    ProCancelMsg = "Windows NT is not correctly installed.  Are you sure you want "+
                   "to cancel copying files?"
    ProCancelCap = "Setup Message"
    ProText1     = "Copying:"
    ProText2     = "To:"

    PlatformID_I386 = I386
    PlatformID_Mips = Mips
    PlatformID_PPC  = ppc

;----------------------------------------------
; FATAL ERROR DIALOG
;----------------------------------------------
[FatalDlgENG]
STF_MB_TITLE = "Setup Message"
; no translation needed after this
DlgType = "MessageBox"
STF_MB_TEXT  = $(Error)
STF_MB_TYPE  = 1
STF_MB_ICON  = 3
STF_MB_DEF   = 1

;----------------------------------------------
; FATAL ERRORS
;----------------------------------------------

[FatalError1ENG]
Error = "Initialization failed"

[FatalError2ENG]
Error = "No INF file name given (NTN_Infname)"

[FatalError3ENG]
Error = "Invocation of INF file "$(!NTN_Infname)" failed"

;
;  These values are based upon SHELL_CODE_OK, SHELL_CODE_NO_SUCH_INF, etc.
;
[ShellError1ENG]
Error = "INF file "$(!NTN_Infname)" does not exist"

[ShellError2ENG]
Error = "INF file "$(!NTN_Infname)" does not have a section named "$(!NTN_InfSection)

[ShellError3ENG]
Error = "INF file "$(!NTN_Infname)", section "$(!NTN_InfSection)" has syntax errors"


;-----------------------------------------------------------------------
;
; ROUTINE:      DoAskOemsetupSource
;
; DESCRIPTION:  This routine prompts the source of OEMSETUP.INF
;
; INPUTS:       $0:  Current Src
;
; OUTPUTS:      $R0: STATUS:   STATUS_SUCCESSFUL |
;                              STATUS_USERCANCEL |
;                              STATUS_FAILED
;
;               $R1: Diskette Src
;
;               $R2: Drive to Free or "" if none
;
;               $R3: Actual string returned from dialog
;
;------------------------------------------------------------------------

[DoAskUpgradeSrcDlgTextENG]
    DlgText        = "Please enter the full path for the upgrade/update "+
                     "OEMSETUP.INF file. Then choose Continue."

[IncorrectOemsetupDiskENG]
    ErrorText      = "Update aborted. The OEMSETUP.INF does not support upgrade for the specified component."


#####netdtect.inf all
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NCDETECT = "Netcard Auto-detection Driver and DLLs"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Netcard Auto-detection Driver Setup"
;
; Software
;
ProductSoftwareTitle = "Netcard Auto-detection Driver"
ProductVersion = "1.0"
ServiceDisplayName = "NetDetect"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI; sigh.
;

#####oemnadd1.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DEC100     = "DEC EtherWORKS LC Adapter"
    DEC101     = "DEC EtherWORKS Turbo/LC Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitleDEC100   = "DEC EtherWORKS LC Adapter Card Setup"
FunctionTitleDEC101   = "DEC EtherWORKS Turbo/LC Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "DEC Lance Adapter Driver"
;
; Hardware
;
ProductHardwareDEC100Description        = "DEC EtherWORKS LC Adapter"
ProductHardwareDEC101Description        = "DEC EtherWORKS Turbo/LC Adapter"
ProductSoftwareTitle    = "DEC Lance Adapter Driver"
ProductHardwareDEC100Title      = "DEC EtherWORKS LC Adapter"
ProductHardwareDEC101Title      = "DEC EtherWORKS Turbo/LC Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle$(Option))
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Label1 = "&IRQ Level:"
Label2 = "&Memory Base Address:"
Group1 = "I/O Port Base Address"

Radio1 = "&Primary"
Radio2 = "&Secondary"

; no translation need after this
DlgType = "RadioCombination"
DlgTemplate = "DEC_SETUP"
Caption = $(FunctionTitle$(Option))

CBOptionGreyed = {}
RadioOptionGreyed = {}

RadioIn = {$(IOBaseChoice)}

Combo1List = $(IRQ_List)
Combo1Out  = $(IRQLevel)

Combo2List = $(MemBaseAddrHexList)
Combo2Out  = $(MemBaseAddrHex)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADD1_INS)

#####oemnadd2.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DECETHERWORKSTURBO     = "DEC EtherWORKS Turbo Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

;
; Product Info
;
FunctionTitle   = "DEC EtherWORKS Turbo Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "DEC Lance Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "DEC EtherWORKS Turbo Adapter"
ProductSoftwareTitle    = "DEC Lance Adapter Driver"
ProductHardwareTitle    = "DEC EtherWORKS Turbo Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Label1 = "&IRQ Level:"
Label2 = "&Memory Base Address:"
Group1 = "I/O Port Base Address"

Radio1 = "&Primary"
Radio2 = "&Secondary"

; no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "DEC_SETUP"
Caption = $(FunctionTitle)

CBOptionGreyed = {}
RadioOptionGreyed = {}

RadioIn = {$(IOBaseChoice)}

Combo1List = $(IRQ_List)
Combo1Out  = $(IRQLevel)

Combo2List = $(MemBaseAddrHexList)
Combo2Out  = $(MemBaseAddrHex)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADD2_INS)

#####oemnadd4.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DEC422     = "DEC EtherWORKS Turbo EISA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "DEC EtherWORKS Turbo EISA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "DEC Lance Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "DEC EtherWORKS Turbo EISA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ProductSoftwareTitle    = "DEC Lance Adapter Driver"
ProductHardwareTitle    = "DEC EtherWORKS Turbo EISA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for EISA
;

#####oemnadde.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DECSTAT     = "DEC Turbo Channel Ethernet Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "DEC Turbo Channel Setup"
;
; Software
;
ProductSoftwareDescription      = "DEC Lance Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "DEC Turbo Channel Ethernet Adapter"

ProductSoftwareTitle    = "DEC Lance Adapter Driver"
ProductHardwareTitle    = "DEC Turbo Channel Ethernet Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[DecstationDlgENG]
Label1 = "&Slot Number:"

;no translation needed after this

DlgType = "MultiCombo"
DlgTemplate = "SINGLE_COMBO"
Caption = $(FunctionTitle)

Combo1List = $(SlotList)
Combo1Out  = $(SlotNum)

ComboListItemsIn  = {Combo1List}
ComboListItemsOut = {Combo1Out}

HelpContext = $(!IDH_DB_OEMNADDE_INS)

#####oemnaddi.inf all

[OptionsTextENG]
    DATAFIREU     = "Digi DataFire - ISA1U Adapter"
    DATAFIREST    = "Digi DataFire - ISA1S/T Adapter"
    DATAFIRE4ST   = "Digi DataFire - ISA4S/T Adapter"
    PCIMACISA     = "Digi PCIMAC - ISA Adapter"
    PCIMAC4       = "Digi PCIMAC/4 Adapter"

[OptionsTextMCAENG]
    PCIMACMC      = "Digi PCIMAC - MC Adapter"

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

;
; Product Info
;
FunctionTitle   = "Digi ISDN Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Digi ISDN Adapter Driver"
;
; Hardware
;
ProductHardwarePCIMACDescription        = "Digi ISDN Adapter"

[InvokeRasDlgENG]
InvokeRasSetupMsg = "Digi ISDN setup is complete. "+
                    "Remote Access Services (RAS) will now be installed. "+
                    "Please configure one or more ISDN ports in RAS setup "+
                    "to enable you to use RAS over ISDN."
InvokeRasConfigMsg = "Digi ISDN setup is complete. "+
                     "Remote Access Services (RAS) setup will now be invoked. "+
                     "Please configure one or more ISDN ports in RAS setup "+
                     "to enable you to use RAS over ISDN."
InvokeRasError =  "Digi ISDN setup encountered an error while invoking "+
                  "the RAS setup INF file (OEMNSVRA.INF). "+
                  "Please make sure that the file is present in the system32 "+
                  "directory and is the proper file."
InvokeUserInstallRasMsg = "Digi ISDN setup is complete. "+
                    "Remote Access Services (RAS) should be installed and "+
                    "one or more ISDN ports configured in RAS setup. "

#####oemnaddp.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DECPC     = "DEC EtherWORKS DEPCA"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "DEC EtherWORKS DEPCA Setup"
;
; Software
;
ProductSoftwareDescription      = "DEC Lance Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "DEC EtherWORKS DEPCA"
ProductSoftwareTitle    = "DEC Lance Adapter Driver"
ProductHardwareTitle    = "DEC EtherWORKS DEPCA"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

#####oemnadds.inf all

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DigiBoardCX     = "Digi C/X Adapter"
    DigiBoardXem    = "Digi PC/Xem Adapter"
    DigiBoard8r     = "Digi AccelePort 8 Adapter"
    IBM8r           = "IBM 8-Port Async, EIA-232 (ISA) Adapter"
    DigiBoard8i     = "Digi PC/8i Adapter"
    DigiBoard16i    = "Digi PC/16i Adapter"
    DigiBoard2Port  = "Digi PC/2e (8K) Adapter"
    DigiBoard4Port  = "Digi PC/4e (8K) Adapter"
    DigiBoard8Port  = "Digi PC/8e (8K) Adapter"
    DigiBoard4e     = "Digi PC/4e Adapter"
    DigiBoard8e     = "Digi PC/8e Adapter"
    DigiBoard16e    = "Digi PC/16e Adapter"
    DigiBoardEPC    = "Digi EPC Adapter"
    StarGateClusStar = "Digi/StarGate ClusStar Adapter"

[OptionsTextMCAENG]
    DigiBoardCX     = "Digi MC C/X Adapter"
    DigiBoardXem    = "Digi MC/Xem Adapter"
    DigiBoard8r     = "Digi MC AccelePort 8 Adapter"
    DigiBoard4i     = "Digi MC/4i Adapter"
    DigiBoard8i     = "Digi MC/8i Adapter"
    DigiBoard16i    = "Digi MC/16i Adapter"
    DigiBoard2Port  = "Digi MC/2e (8K) Adapter"
    DigiBoard4Port  = "Digi MC/4e (8K) Adapter"
    DigiBoard8Port  = "Digi MC/8e (8K) Adapter"
    DigiBoardEPC    = "Digi MC EPC Adapter"
    StarGateClusStar = "Digi/StarGate MC ClusStar Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
    ProCaption   = $(ManufacturerDisplayName)" "$(AdapterTitle)" Adapter Setup"
    ProCancel    = "Cance&l"
    ProCancelMsg = $(ManufacturerDisplayName)" Adapters and/or Drivers are not correctly installed. "+
                   "Are you sure you want to cancel copying files?"
    ProCancelCap = $(ProCaption)
    ProText1     = "Copying:"
    ProText2     = "To:"
    Error         = "Unable to determine proper source disk location; copy cannot be performed."
;
; Product Info
;
    FunctionTitle = $(ProCaption)
;
; Software
;
    ProductSoftwareDescription          = $(ManufacturerDisplayName)" FEP 5 Adapter Driver"
    ProductSoftwareDescriptionHdwDriver = $(ManufacturerDisplayName)" "$(AdapterTitle)" Miniport Driver"
    ProductSoftwareTitle    = $(ManufacturerDisplayName)" FEP 5 Driver"
    ProductSoftwareTitleHdwDriver = $(ManufacturerDisplayName)" "$(AdapterTitle)" Miniport Driver"

;
; Configuration Information
;
   ConfigurationTitle = $(ProCaption)
   IRQDisableLabel = "Disabled"

;
; Hardware
;
    ProductHardwareDescription      = $(ManufacturerDisplayName)" "$(AdapterTitle)" Adapter"
    ProductHardwareTitle        = $(ManufacturerDisplayName)" "$(AdapterTitle)" Adapter"

[DialogConstantsENG]
;
; Common button names, etc.
;
    Help        = "&Help"
    Exit        = "E&xit"
    OK          = "OK"
    HelpContext = ""
    Continue    = "C&ontinue"
    Cancel      = "C&ancel"

[UpdatingConfigurationENG]
    UpdatingConfiguration      = "Updating new configuration..."

[AbortMessageENG]
  AbortText  =  "Aborting "$(ManufacturerDisplayName)" Setup. Please reboot the system "+
                "to fix the problem."


#####oemnade1.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNK16     = "3Com Etherlink16/EtherLink16 TP Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "3Com Etherlink 16 Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com Etherlink16/Etherlink16 TP Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "3Com Etherlink16/Etherlink16 TP Adapter"
ProductSoftwareTitle    = "3Com Etherlink16/Etherlink16 TP Adapter Driver"
ProductHardwareTitle    = "3Com Etherlink16/Etherlink16 TP Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Caption = $(FunctionTitle)

Combo1Label = "&IRQ Level:"
Combo2Label = "I/O &Port Address:"
Label1 = "Transceiver Type"
Radio1 = "&External"
Radio2 = "O&n Board"
CheckBox1 = "&Zero Wait State"
Combo3Label = "&Memory Address:"
Combo4Label = "Memo&ry Size:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "ELNK_16"

Combo1Out  = $(IRQ_Level)
Combo1List = $(IRQ_List)
Combo2List = $(IOADDR_Hex_List)
Combo2Out  = $(IOADDR_Hex_Value)
Combo3List = $(MemAddrHexList)
Combo3Out  = $(MemAddrHexValue)
Combo4List = $(MemAddrLengthList)
Combo4Out  = $(MemAddrLength)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List, Combo4List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out, Combo4Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO, NO, NO}

HelpContext = $(!IDH_DB_OEMNADE1_INS)

#####oemnade2.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNKII     = "3Com Etherlink II Adapter (also II/16 and II/16 TP)"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "3Com Etherlink II Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com Etherlink II Adapter Driver"
;
; Hardware
;
ProductHardwareELNKIIDescription        = "3Com Etherlink II Adapter"
ProductSoftwareTitle    = "3Com Etherlink II Adapter Driver"
ProductHardwareELNKIITitle = "3Com Etherlink II Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[MemoryMappedChoicesENG]

Map_1 = 1, "ON"
Map_2 = 0, "OFF"


[FileDependentDlgENG]

DlgText = "Please select values for the following fields:"

Combo1Label = "&IRQ Level:"
Combo2Label = "I/O &Port Address:"
CheckBox1   = "&Memory Mapped"
Label1 = "Transceiver Type"

Radio1 = "&External"
Radio2 = "O&n Board"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "ELNK_II"
Caption = $(FunctionTitle)

Combo1List = $(IRQ_List)
Combo1Out  = $(IRQ_Level)
Combo2List = $(IOADDR_Hex_List)
Combo2Out  = $(IOADDR_Hex_Value)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADE2_INS)

#####oemnadin.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    EE16     = "Intel Ether Express 16 LAN Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Intel Ether Express 16 LAN Adapter Setup"
;
; Software
;
ProductSoftwareDescription      = "Intel Ether Express 16 LAN Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Intel Ether Express 16 LAN Adapter"
ProductSoftwareTitle    = "Intel Ether Express 16 LAN Adapter Driver"
ProductHardwareTitle    = "Intel Ether Express 16 LAN Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

IOReadyListShort = { "Late", "Never" }
IOReadyList      = { "Early", "Late", "Never" }
TransceiverList  = {"Thick Net (AUI/DIX)","Thin Net (BNC/COAX)","Twisted-Pair (TPE)"}

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------

[FileDependentDlgENG]
Combo1Label = "&IRQ Level:"
Combo2Label = "I/&O Port Address:"
Combo3Label = "I/O &Channel Ready:"
Combo4Label = "&Transceiver Type:"

EarlyWarning = "Use of the Early setting may cause system failure in some machines. "+
               "Are you sure you wish to continue?"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "EE_16"
Caption = $(FunctionTitle)

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOBaseAddrHexList)
Combo2Out  = $(IOBaseAddress)
Combo3List = $(IOReadyListDisplay)
Combo3Out  = $(IOReadyValue)
Combo4List = $(TransceiverList)
Combo4Out  = $(TransceiverValue)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List, Combo4List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out, Combo4Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADIN_INS)


#####oemnadep.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    IEEPRO = "Intel EtherExpress PRO Ethernet Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle = "Intel EtherExpress PRO Ethernet Adapter Setup"
;
; Software
;
ProductSoftwareDescription = "Intel EtherExpress PRO Ethernet Driver"
;
; Hardware
;
ProductHardwareDescription = "Intel EtherExpress PRO Ethernet Adapter"

;
; Dialog Message Information
;
IRQList = {"3", "5", "9", "10", "11"}
IOReadyList = { "Early", "Late", "Never", "Auto Detect" }
IOReadyListExt = { "Early", "Late", "Never", "Auto Detect" }
TransceiverList = {"Thick Net (AUI/DIX)","Thin Net (BNC/COAX)","Twisted-Pair (TPE)","Auto Connect"}

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------

[FileDependentDlgENG]

DlgType = "RadioCombination"
DlgTemplate = "EE_16"
Caption = $(FunctionTitle)

DlgText = "Please select values for the following fields:"

Combo1Label = "&Interrupt Number:"
Combo2Label = "I/O &Port Address:"
Combo3Label = "I/O &Channel Ready:"
Combo4Label = "&Transceiver Type:"

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOAddrList)
Combo2Out  = $(IOAddrValue)
Combo3List = $(IOReadyList)
Combo3Out  = $(IOReadyValue)
Combo4List = $(TransceiverList)
Combo4Out  = $(TransceiverValue)
ComboListItemsIn  = {Combo1List, Combo2List, Combo3List, Combo4List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out, Combo4Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADEP_INS)

#####oemnadn2.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NE2000              = "Novell NE2000 Compatible Adapter"
    NE2000SOCKETEA      = "Novell NE2000 Socket EA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitleNE2000   = "Novell NE2000 Compatible Network Card Setup"
FunctionTitleNE2000SOCKETEA   = "Novell NE2000 Socket EA Network Card Setup"


;
; Software
;
ProductSoftwareNE2000Description      = "Novell NE2000 Adapter Driver"
ProductSoftwareNE2000SOCKETEADescription      = "Novell NE2000 Socket EA Adapter Driver"
;
; Hardware
;
ProductHardwareNE2000Description        = "Novell NE2000 Adapter"
ProductHardwareNE2000SOCKETEADescription        = "Novell NE2000 Socket EA Adapter"
ProductSoftwareNE2000Title    = "Novell NE2000 Adapter Driver"
ProductSoftwareNE2000SOCKETEATitle    = "Novell NE2000 Socket EA Adapter Driver"
ProductHardwareNE2000Title      = "Novell NE2000 Adapter"
ProductHardwareNE2000SOCKETEATitle      = "Novell NE2000 Socket EA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------

[FileDependentDlgENG]
Label1 = "&IRQ Level:"
Label2 = "I/O &Port Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "NE2000"
Caption =  $(FunctionTitle$(Option))

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOBaseAddrHexList)
Combo2Out  = $(IOBaseAddress)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADN2_INS)

#####oemnadne.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NE3200     = "Novell NE3200 EISA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Novell 3200 EISA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Novell 3200 Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Novell NE3200 EISA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Novell 3200 Adapter Driver"
ProductHardwareTitle    = "Novell NE3200 EISA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for EISA
;

#####oemnads1.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SONICEISA     = "Sonic, EISA"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Sonic EISA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Sonic EISA Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Sonic, EISA"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Sonic EISA Adapter Driver"
ProductHardwareTitle    = "Sonic, EISA"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for EISA
;

#####oemnadnf.inf all
[LanguagesSupported]
    ENG
[OptionsTextENG]
    CPQTOK     = "<this option is no longer supported for install>"
    BONSAI     = "COMPAQ NetFlex-2 DualPort ENET Controller"
    RODAN      = "COMPAQ NetFlex-2 DualPort TR Controller"
    NETFLX     = "COMPAQ NetFlex/NetFlex-2 ENET-TR Controller"
    DURANGO    = "COMPAQ NetFlex-2 TR Controller"
    MAPLE      = "COMPAQ 32-Bit DualSpeed Token-Ring Controller"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cance&l"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "COMPAQ NetFlex Adapter Card Setup"
ProductSoftwareDescription        = "COMPAQ ENET-TR EISA Driver"
ProductHardwareBONSAIDescription  = "COMPAQ NetFlex-2 DualPort ENET Controller"
ProductHardwareRODANDescription   = "COMPAQ NetFlex-2 DualPort TR Controller"
ProductHardwareNETFLXDescription  = "COMPAQ NetFlex/NetFlex-2 ENET-TR Controller"
ProductHardwareDURANGODescription = "COMPAQ Token-Ring Controllers"
ProductHardwareCPQTOKDescription        = "COMPAQ 32-Bit DualSpeed Token-Ring Controller (ns)"
ProductHardwareMAPLEDescription        = "COMPAQ 32-Bit DualSpeed Token-Ring Controller"
CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ProductSoftwareTitle            = "COMPAQ ENET-TR Driver"
ProductHardwareBONSAITitle      = "COMPAQ NetFlex-2 DualPort ENET Controller"
ProductHardwareRODANTitle       = "COMPAQ NetFlex-2 DualPort TR Controller"
ProductHardwareNETFLXTitle      = "COMPAQ NetFlex/NetFlex-2 ENET-TR Controller"
ProductHardwareDURANGOTitle     = "COMPAQ NetFlex-2 TR Controller"
ProductHardwareCPQTOKTitle      = "COMPAQ 32-Bit Token-Ring Controller (ns)"
ProductHardwareMAPLETitle      = "COMPAQ 32-Bit Token-Ring Controller"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
Edit1Label = "&Network Address:"

;no translation needed after this

DlgType = "Edit"
DlgTemplate = "NETWORK_NUMBER"
Caption = $(FunctionTitle)

HelpContext = $(!IDH_DB_OEMNADNF_INS)

EditTextLim = 17
EditTextIn  = $(NetworkAddress)
EditFocus   = "ALL"
RCCtlFocusOn = 403


#####oemnadp3.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    P1390     = "Proteon p139X Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Proteon p139X Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Proteon Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Proteon p139X Adapter"

ProductSoftwareTitle    = "Proteon Adapter Driver"
ProductHardwareTitle    = "Proteon p139X Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Label1 = "&IRQ Level:"
Label2 = "I/O &Port Base Address:"
Label3 = "&DMA Channel:"
Group1 = "Cable &Type"
Group2 = "Card Sp&eed"

Radio1 = "&UTP"
Radio2 = "&STP"
Edit1Label = "&Network Address:"

;no translation needed after this

Radio3 = "&4"
Radio4 = "&16"

DlgType = "RadioCombination"
DlgTemplate = "PROTEON"
Caption = $(FunctionTitle)

CBOptionGreyed = {}
RadioOptionGreyed = {}

Combo1List = $(IRQ_List)
Combo1Out  = $(IRQLevel)

Combo2List = $(IOBaseAddressList)
Combo2Out  = $(IOBaseAddress)

Combo3List = $(DMA_List)
Combo3Out  = $(DMAChannel)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}


EditTextIn = $(NetworkAddress)
EditTextLim = 17
NotifyFields = {NO, NO, NO}
RCCtlFocusOn = 403

HelpContext = $(!IDH_DB_OEMNADP3_INS)

#####oemnadp9.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    P1990     = "Proteon p199X Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Proteon p199X Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Proteon Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Proteon p199X Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductHardwareTitle    = "Proteon p199X Adapter"
ProductSoftwareTitle    = "Proteon Adapter Driver"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Group1 = "Card Speed"
Radio1 = "&4"
Radio2 = "&16"
Edit1Label = "&Network Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "IBM_TOKEN"
Caption = $(FunctionTitle)
ComboListItemsIn = {}
ComboListItemsOut = {}
EditTextLim = 17
EditTextIn = $(NetworkAddress)
Edit1Label = "&Network Address:"

HelpContext = $(!IDH_DB_OEMNADP9_INS)

EditTextLim = 17
EditTextIn  = $(NetworkAddress)
EditFocus   = "ALL"
RCCtlFocusOn = 403

#####oemnadtk.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    IBMTOK     = "IBM Token Ring (ISA/PCMCIA) Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "IBM Token Ring Adapter Card Setup"
FunctionTitle1   = "IBM Token Ring PCMCIA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "IBM Token Ring (ISA/PCMCIA) Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "IBM Token Ring (ISA/PCMCIA) Adapter"

ProductSoftwareTitle    = "IBM Token Ring Adapter (ISA/PCMCIA) Driver"
ProductHardwareTitle    = "IBM Token Ring (ISA/PCMCIA) Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Group1 = "I/O Port Base Address"
Radio1 = "&Primary"
Radio2 = "&Secondary"
Edit1Label = "&Network Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "IBM_TOKEN"
Caption = $(FunctionTitle)
ComboListItemsIn = {}
ComboListItemsOut = {}
EditTextLim = 17
EditTextIn = $(NetworkAddress)

OptionsGreyed = {}

HelpContext = $(!IDH_DB_OEMNADTK_INS)
RCCtlFocusOn = 403

[SecondDlgENG]
Group1 = "Network Speed"
HelpContext = 1
Caption = $(FunctionTitle1)
Combo1Label = "Network &Speed:"
Combo2Label = "Card &IRQ Level:"
Combo3Label = "Memory &Base:"
Combo1List = $(SpeedList)
Combo1Out = $(Token1Speed)
Combo2List = $(IRQList)
Combo2Out = $(Token1IRQVal)
Combo3List = $(MMIOList)
Combo3Out = $(Token1MMIO)
DlgType = Combination
DlgTemplate = "WD"
ComboListItemsIn = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}
CBOptionsGreyed = {}
EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO, NO}
HelpContext = 1

#####oemnadub.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    UBPC     = "Ungermann-Bass Ethernet NIUpc Adapter"
    UBPCEOTP = "Ungermann-Bass Ethernet NIUpc/EOTP Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Ungermann-Bass Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Ungermann-Bass Adapter Driver"
;
; Hardware
;
ProductHardwareUBPCDescription          = "Ungermann-Bass Ethernet NIUpc Adapter"
ProductHardwareUBPCEOTPDescription      = "Ungermann-Bass Ethernet NIUpc/EOTP Adapter"
ProductHardwareUBPSDescription          = "Ungermann-Bass Ethernet NIUps Adapter"

ProductSoftwareTitle    = "Ungermann-Bass Driver"
ProductHardwareUBPCTitle        = "Ungermann-Bass Ethernet NIUpc Adapter"
ProductHardwareUBPCEOTPTitle    = "Ungermann-Bass Ethernet NIUpc/EOTP Adapter"
ProductHardwareUBPSTitle        = "Ungermann-Bass Ethernet NIUps Adapter"

IRQList  = ^(IRQChoices$(Option), 1)
IRQValues = ^(IRQChoices$(Option), 2)
IOBaseAddrList = ^(IOBaseAddrChoices, 1)
IOBaseAddrValues = ^(IOBaseAddrChoices, 2)
MemMappedWndAddrList = ^(MemMappedWndBaseAddrChoices$(Option), 1)
MemMappedWndAddrValues = ^(MemMappedWndBaseAddrChoices$(Option), 2)

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Label1 = "&Interrupt Number:"
Label2 = "I/O &Port Base Addr:"
Label3 = "&Memory Address:"

;no translation needed after this

DlgType = "Combination"
DlgTemplate = "UBNDIS"
Caption = $(FunctionTitle)

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOBaseAddrList)
Combo2Out  = $(IOBaseAddrValue)
Combo3List = $(MemMappedWndAddrList)
Combo3Out  = $(MemMappedWndAddrValue)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}

EditTextLim = ""
CBOptionsGreyed = {}

HelpContext = $(!IDH_DB_OEMNADUB_INS)

#####oemnadwd.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SMCISA = "SMC (WD) EtherCard"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "SMC (WD) ISA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "SMC (WD) Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "SMC (WD) ISA Adapter"

ProductSoftwareTitle    = "SMC (WD) Adapter Driver"
ProductHardwareTitle    = "SMC (WD) ISA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Combo1Label = "&IRQ Level:"
Combo2Label = "&Memory Base Address:"
Combo3Label = "I/&O Port Address:"

;no translation needed after this

DlgType = "MultiCombo"
DlgTemplate = "WD"
Caption = $(FunctionTitle)

Combo1List = $(IRQ_List)
Combo1Out  = $(IRQLevel)

Combo2List = $(WinBaseAddressHexList)
Combo2Out  = $(WinBaseAddress)

Combo3List = $(IOBaseAddressHexList)
Combo3Out  = $(IOBaseAddress)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}

EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO, NO}

HelpContext = $(!IDH_DB_OEMNADWD_INS)

#####oemnsvf1.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG
;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    FTPD     = "FTP Server"
;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "FTP Setup"
;
; Software
;
ProductSoftwareDescription      = "FTP Server"
;
; The user needs to install Microsoft TCP/IP before install FTP.
; If TCPIP does not exist in the registry, the inf file will popup this
; message and exit.
;
ProductSoftwareDisplayName      = "FTP Server"
ProductSoftwareTitle            = "FTP Server"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DefaultsENG]
AnonymousUsername = "guest"

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for FTP
;

#####oemnsvir.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    IPRIP = "RIP for Internet Protocol"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductIPRIPTitle       = "RIP for Internet Protocol"
ProductIPRIPDescription = "Routing Information Protocol. Enables a router to exchange routing information with other routers on an IP LAN."
ProductIPRIPDisplayName = "RIP for Internet Protocol"

[VerExistsENG]
    Ver   = " version "
    Text1 = " is already installed."

[InUseENG]
Error = "RIP for Internet Protocol is currently in use by other network protocols. Please remove all related services first."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"


#####oemnsvrr.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NWLNKRIP = "RIP for NwLink IPX/SPX compatible transport"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductNWLNKRIPTitle       = "RIP for NWLink IPX"
ProductNWLNKRIPDescription = "RIP for NWLink IPX"
ProductNWLNKRIPDisplayName = "RIP for NWLink IPX"

[VerExistsENG]
    Ver   = " version "
    Text1 = " is already installed. "

[InUseENG]
Error = "RIP for NWLink IPX is currently in use by other network protocols. Please remove all related services first."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[EnableNetbiosRoutingDlgENG]
DlgType = "MessageBox"
STF_MB_TITLE = "RIP for NWLink IPX Configuration"
STF_MB_TYPE  = 3
STF_MB_ICON  = 2
STF_MB_DEF   = 2

Enabled  = "NetBIOS Broadcast Propagation (broadcast of type 20 packets) is currently enabled. "$(!LF)+
           "If any Microsoft Windows clients use NwLink IPX to connect to this server, you must "+
           "enable this option to allow NwLink IPX to function correctly."$(!LF)+
           "Enable this option only if you understand the routing implications because it might "+
           "affect your network performance."$(!LF)$(!LF)+
           "Do you want to disable NetBIOS Broadcast Propagation?"

Disabled = "NetBIOS Broadcast Propagation (broadcast of type 20 packets) is currently disabled. "$(!LF)+
           "If any Microsoft Windows clients use NwLink IPX to connect to this server, you must "+
           "enable this option to allow NwLink IPX to function correctly."$(!LF)+
           "Enable this option only if you understand the routing implications because it might "+
           "affect your network performance."$(!LF)$(!LF)+
           "Do you want to enable NetBIOS Broadcast Propagation?"

[ConfigErrorTxtENG]
Error = "Could not open the NWLNKRIP\Parameters registry key."

#####oemnsvnb.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NETBIOS     = "NetBIOS Interface"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "NetBIOS Interface Setup"
;
; Software
;
ProductSoftwareDescription      = "Defines a software interface and naming convention for Microsoft networking."
ProductSoftwareDisplayName = "NetBIOS Interface"
ProductSoftwareTitle    = "NetBIOS Interface"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for NETBIOS
;
[InfoDlgCantConfigure]
InfoMsgTitle = "Information Message"
InfoMsgText = "The NETBIOS service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click OK."

#####oemnsvrp.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    RPCLOCATE   = "RPC Configuration"
    RPCBANYAN   = "RPC support for Banyan"

[LocatorNamesENG]
LocName1 = "Windows NT Locator"
LocName2 = "DCE Cell Directory Service"

[SecurityNamesENG]
SecName1 = "Windows NT Security Service"
SecName2 = "DCE Security Service"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Software
;
ProductSoftwareDescription      = "Remote Procedure Call service enables RPC-written programs to perform procedures on multiple computers. Includes the endpoint mapper and other RPC services."
ProductRPCTitle   = "RPC Configuration"
ProductRPCBanyanTitle   = "RPC support for Banyan"
ProductRPCBaynanSoftDescription      = "RPC support for Banyan"

RpcSrvDisplayNameRpcss   = "Remote Procedure Call (RPC) Service"
RpcSrvDisplayNameLocator = "Remote Procedure Call (RPC) Locator"
RpcSrvDisplayNameSSP     = "NT LM Security Support Provider"
RpcSuiteDisplayName      = "Remote Procedure Call Configuration"

[RPCLOCATEConstantsENG]
;
; Product Info
;
FunctionTitle   = "RPC Configuration"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[RPCBANYANConstantsENG]
;
; Product Info
;
FunctionTitle   = "RPC support for Banyan"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[RpcProviderDlgENG]
Caption = "RPC Configuration"

Edit1Label = "Network &Address:"

Combo1Label = "&Name Service Provider:"
Combo2Label = "&Security Service Provider:"
Help        = "&Help"
Continue    = "OK"
Cancel      = "Cancel"

;no translation needed after this

DlgType = Combination
DlgTemplate = "RPCPROVIDE"
EditTextIn = $(NetworkAddress)

EditFocus = "ALL"
EditTextLim = 50

Combo1List  = $(LocatorListboxNames)
Combo1Out   = $(LocatorChosenName)

Combo2List  = $(SecurityListboxNames)
Combo2Out   = $(SecurityChosenName)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

HelpContext = $(!IDH_DB_RPCLOCATE_INS)
ExitState   = "Active"
NotifyFields = { YES }

[NonFatalError1ENG]
NonFatal = "No network address was entered."

[NonFatalError2ENG]
NonFatal = "Network address ignored for Windows NT Locator."

[NonFatalError3ENG]
NonFatal = "The DCE Security Service is not installed on this computer."

#####oemnsvsv.inf all

;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SRV         = "Server"
;   XACTSRV     = "LAN Manager Translator"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Server"
;
; Software
;
ProductSRVDescription           = "Installs support for the SMB (Server Message Block) protocol, the core of Microsoft networking."
ProductXACTSRVDescription       = "Microsoft LAN Manager Translator Service"
ProductSRVDisplayName   = "Server"
ProductSRVTitle         = "Server"
ProductXACTDisplayName  = "XactSrv"
ProductSRVSRVDisplayName       = "Srv"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
GroupLabel = "Optimization:"

Radio1 = "&Minimize Memory Used"
Radio2 = "&Balance"
Radio3 = "M&aximize Throughput for File Sharing"
Radio4 = "Ma&ximize Throughput for Network Applications"

CheckBox1 = "Ma&ke Browser Broadcasts to LAN Manager 2.x Clients"

;no translation needed after this

DlgType = "RadioCombination"               ; DON'T NATIONALIZE
DlgTemplate = "LMSERVER"       ; DON'T NATIONALIZE
Caption = $(FunctionTitle)

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
ComboListItemsOut = {}

OptionsGreyed = {}

HelpContext = $(!IDH_DB_OEMNSVSV_INS)

#####oemnsvwk.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    WKSTA       = "Workstation"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

;
; Error Message
;
RemoveBrowserError = "The Browser may not be removed. Please remove the Workstation service first."
UpdateBrowserError = "You must update the Windows Workstation in order to update the Browser."

;
; Product Info
;
FunctionTitle   = "Workstation Services Setup"
;
; Software
;
ProductWKSTADescription         = "Installs the client for the SMB (Server Message Block) protocol, the core of Microsoft networking."
ProductNETLOGONDescription      = "Microsoft Network Authentication Service"
ProductALERTERDescription       = "Microsoft Alerter Service"
ProductBROWSERDescription       = "Distributed protocol required for running the Computer Browser service."
ProductMESSENGERDescription     = "Microsoft Messenger Service"
ProductRDRDescription           = "Microsoft Redirector Service"
ProductREPLDescription          = "Microsoft Directory Replicator Service"
ProductMUPDescription           = "Microsoft MUP Service"
ProviderRDRName                 = "NT Lan Manager"

ProductWKSTADisplayName = "Workstation"
ProductWKSTATitle       = "Workstation"
ProductNETLOGONDisplayName = "Net Logon"
ProductNETLOGONTitle    = "Net Logon"
ProductALERTERDisplayName = "Alerter"
ProductALERTERTitle     = "Alerter"
ProductBROWSERDisplayName = "Computer Browser"
ProductBROWSERTitle     = "Computer Browser"
ProductMESSENGERDisplayName = "Messenger"
ProductMESSENGERTitle   = "Messenger"
ProductRDRDisplayName   = "MRXSMB"
ProductRDRTitle         = "Redirector"
PruductRDRBSSDisplayName = "RDBSS"
ProductProviderName = "Microsoft Windows Network"
ProductREPLDisplayName  = "Directory Replicator"
ProductREPLTitle        = "Directory Replicator"
ProductMUPDisplayName   = "Mup"
ProductMUPTitle         = "Mup"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for workstation
;
#####oemnxpdl.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    DLC     = "DLC Protocol"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "DLC Setup"
;
; Software
;
ProductSoftwareDescription      = "Data Link Control enables this computer to connect to an IBM mainframe and set up printers attached directly to network control."

ProductSoftwareDisplayName      = "DLC Protocol"
ProductSoftwareTitle    = "DLC Protocol"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for DLC
;

#####oemnxpnb.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NBF     = "NetBEUI Protocol"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "NetBEUI Protocol"
;
; Software
;
ProductSoftwareDescription      = "A nonroutable protocol designed for use in small LANs."
;
ProductSoftwareDisplayName = "NetBEUI Protocol"
ProductSoftwareTitle    = "NetBEUI Protocol"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
GroupLabel = "Optimization:"

Radio1 = "&Minimize Memory Used"
Radio2 = "&Balance"
Radio3 = "M&aximize Throughput && Connections"

;no translation needed after this

DlgType = "Radio"               ; DON'T NATIONALIZE
DlgTemplate = "NBF"             ; DON'T NATIONALIZE
Caption = $(FunctionTitle)

OptionsGreyed = {}

HelpContext = $(!IDH_DB_OEMNXPNB_INS)


#####oemnxpst.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    STREAMS = "Streams Environment"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductSTREAMSDescription       = "Enables transport drivers developed in STREAMS environments (popular on UNIX platforms) to port easily to Windows NT."
ProductSTREAMSDisplayName       = "Streams Environment"
ProductSTREAMSTitle     = "Streams Environment"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

StreamsAlreadyInstalled  = "Streams Environment is already installed in the system."
RefCountNotZeroMsg = "The Streams Environment is currently in use by other network protocols. Please removed all streams-based protocols first."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for STREAMS
;

;**************************************************************************
;
; BILLBOARD DIALOG SECTIONS
;
;**************************************************************************
[Billboard1ENG]
Status = "Installing STREAMS and related services..."

#####oemnxpnn.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    TCPIP     = "Old TCP/IP Protocol"
;   TELNET    = "Telnet"
;   NBT       = "RFC NetBIOS"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "TCP/IP Setup"
;
; Software
;
ProductTCPIPDescription         = "TCP/IP System Driver"
ProductNBTDescription           = "NBT System Driver"

ProductTCPIPDisplayName = "TCP/IP Protocol"
ProductTCPIPTitle       = "TCP/IP Protocol"

ProductTCPIPSYSDisplayName = "Tcpipsys"
ProductTCPIPSYSTitle    = "TCP/IP Network Transport Driver"

ProductNBTDisplayName   = "TCP/IP NetBIOS"
ProductNBTTitle         = "TCP/IP NetBIOS"

ProductNBTSYSDisplayName = "Nbtsys"
ProductNBTSYSTitle      = "RFC NetBIOS Driver"

ProductTELNETDisplayName = "Telnet"
ProductTELNETTitle      = "Telnet Networking Support Environment"

ProductTELNETSYSDisplayName = "Telnetsys"
ProductTELNETSYSTitle     = "Telnet Driver"

ProductLOOPDisplayName  = "Loop"
ProductLOOPTitle        = "Loop Support Environment"

ProductLMHOSTSDisplayName = "TCP/IP NetBIOS Helper"
ProductLMHOSTSTitle     = "TCP/IP NetBIOS Helper"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for TCPIP
;
;----------------------------------------------
; INFO DIALOG
;----------------------------------------------
[InfoDlg]
STF_MB_TITLE = "Information Message"

;no translation needed after this

DlgType = "MessageBox"
STF_MB_TEXT  = $(InfoMsgText)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

[InfoDlgCantConfigure]
InfoMsgText = "The TCP/IP service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click  OK.  You will then have the opportunity to configure the adapters."

;----------------------------------------------
; WARNING DIALOG
;----------------------------------------------
[WarningDlgENG]
STF_MB_TITLE = "TCP/IP Setup Warning"

;no translation needed after this

DlgType = "MessageBox"
STF_MB_TEXT  = $(Error)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

;**************************************************************************
;
; BILLBOARD DIALOG SECTIONS
;
;**************************************************************************
[Billboard1ENG]
Status = "Installing TCP/IP and related services..."

[LMHOSTDlgENG]

Caption = "Import LMHOSTS File"
Import = "&Import"

DlgText = "If you want to import an existing LMHOSTS file, enter the directory path where the file is located and choose Import. Otherwise, choose Continue."

;no translation needed after this

DlgType = "Edit"
DlgTemplate = "LMHOST"
EditTextIn = ""

HelpContext = $(!IDH_DB_LMHOST_INS)

[LMHOSTAskSourceStringsENG]
String1 = "Error processing path entered.  Please reenter the path."

String2 = "Setup requires a full path of the Windows NT distribution files.  "+
          "Please reenter the path."

String3 = "Setup failed to find a free drive to use to connect to the "+
          "server specified.  Please free up some drives and try again."

String4 = "Setup failed to connect to the server specified.  Please reenter "+
          "the path."

String5 = "You just typed in a new LMHOSTS file path. Are you sure that you want to use the default LMHOSTS file?"

#####utility.inf all
[AFDVars]
;
; AFD Software data
;
ProductAFDTitle         = "AFD Networking Support Environment"
;
; don't localize the next 3 lines
;
ProductAFDName          = "Afd"
ProductAFDImagePath     = "\SystemRoot\System32\drivers\afd.sys"
ProductAFDSvcType       = "kernelautostart"

;---------------------------------------------
;
;  Section used to build RegistryErrorList$(STF_LANGUAGE)
;
[RegistryErrorsENG]
UNABLE_ACCESS_SOFTWARE_REG,"Unable to access SOFTWARE subtree in Registry"
UNABLE_CREATE_MANUFACTURER_KEY,"Unable to create Manufacturer key in Registry"
UNABLE_OPEN_MICROSOFT_KEY,"Unable to open Microsoft subkey in Registry"
UNABLE_CREATE_PRODUCT_KEY,"Unable to create subkey in Registry for Windows NT"
UNABLE_CREATE_PRODUCT_VERSION,"Unable to create version subkey in Registry for Windows NT"
UNABLE_CREATE_NETRULES_KEY,"Unable to create a NetRules subkey in Registry"
UNABLE_OPEN_HARDWARE_SECTION,"Unable to open HARDWARE subkey in Registry"
UNABLE_OPEN_NETWORKCARD_SECTION,"Unable to open NetworkCards subkey in Registry"
UNABLE_OPEN_EVENTLOG_SUBKEY,"Unable to open Eventlog subkey in Registry"
UNABLE_CREATE_NETCARD_CONFIGURATION,"Unable to create entry for network adapter in Registry"
UNABLE_ACCESS_CONFIGURE_SERVICE,"Unable to access Services subkey in Registry"
UNABLE_CREATE_CONFIGURE_SERVICE,"Unable to create Services subkey in Registry"
UNABLE_CREATE_SERVICE_SUBKEY,"Unable to create Services subkey in Registry"
INVALID_DATA_PASSED,"Invalid data passed to Registry utility routine"
SERVICE_ALREADY_EXISTS,"Registry Service subkey already exists"
OPERATION_UNIMPLEMENTED,"Registry operation UNIMPLEMENTED"
CANNOT_FIND_COMPONENT_SERVICE,"Component service name not found or non-existent"
CANNOT_CONFIGURE_HARDWARE,"Cannot configure the hardware component"
CANNOT_CONFIGURE_SOFTWARE,"Cannot configure the software component"
UNABLE_WRITE_REGISTRY, "Cannot write to registry"
UNABLE_INSTALL, "Installation Error"
PROVIDER_ALREADY_EXISTED, "Provider already exists in Registry"
PROVIDER_ORDER_DOES_NOT_EXIST, "Provider order does not exist in Registry."
TCPIP_NONEXIST_ERROR, "Please install Microsoft TCP/IP before installing SNMP."
TCPIP_NONEXIST_ERROR_FTPD, "Please install Microsoft TCP/IP before installing FTP Server."
NO_BINDING_INFO, "Missing Binding Information. Please click BINDINGS button first."
CANNOT_OPEN_EVENTLOG_KEY, "Cannot open Eventlog subkey in Registry."
CANNOT_CREATE_SNMPPROXYKEY, "Cannot create SNMP Proxy subkey in Registry."
REF_COUNT_NOT_ZERO, "Please remove all related network adapter cards before removing the software driver."
UNABLE_REMOVE_CONFIGURE_SERVICE,"Unable to remove Services subkey for a software driver in Registry"
UNABLE_ACCESS_WINSOCK_MAP_INFO,"Unable to access WinSock mapping information in DLL"
VERIFY_WARNING,"The current netcard parameters are not verifiably correct and may result in usage problems or system failure.  Use them anyway?"
CANNOT_DETECT,"Setup is unable to obtain network adapter information from the associated network adapter DLL files.  Operation cannot continue."
UNABLE_COPY_FILE,"File copy operation failed."
ASK_SOURCE_FAIL,"Failed to obtain source file location."
SETUP_FAIL,"Setup operation failed."
SERVICE_MARKED_FOR_DELETE,"This network component has recently been removed. Please restart your computer before installing it again."
REBOOT_MACHINE_BEFORE_ADD_ADAPTER,"This network component has recently been removed. Please restart your computer before installing it again."
CANT_REMOVE_WKSTA_NTAS,"The Workstation cannot be removed on a Windows NT Domain Controller."
CANT_REMOVE_SERVER_NTAS,"The Server cannot be removed on a Windows NT Domain Controller."
NO_ERROR, ""
DLC_NONEXIST_ERROR, "Please install Microsoft DLC before installing Remoteboot."
NBF_NONEXIST_ERROR, "Please install the NetBEUI protocol before installing Remoteboot."
UNABLE_ADD_NAMESPACE_PROVIDER, "Unable to add software component as a Name Space Provider"
UNABLE_REMOVE_NAMESPACE_PROVIDER, "Unable to remove Name Space Provider"

[RegistryErrorUnknownENG]
Error_Bogus = "UNKNOWN REGISTRY FAILURE"

;
;---------------------------------------------
;
; Section used for version already exists dialog
;

[VerExistedENG]
ver = " ver "
Text = " already exists on the system. Please use [Update] to update the software."

[CardExistedENG]
Text = "A network card of this type is already installed in the system. Do you want to continue?"

;---------------------------------------------

;*************************************************************************
;  end of section  RemoveNetworkProvider
;*************************************************************************

[ProgressCopyENG]
    ProCaption   = "Windows NT Networking Setup"
    ProCancel    = "Cancel"
    ProCancelMsg = "Windows NT is not correctly installed.  Are you sure you want "+
                   "to cancel copying files?"
    ProCancelCap = "Setup Message"
    ProText1     = "Copying:"
    ProText2     = "To:"
    Error        = "Unable to determine proper source disk location; copy cannot be performed."

#####oemnxpi1.inf all
;------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
;       This lists the languages supported by this file.
;       If you add other languages to this list, you must
;       also add the appropriate text sections for the new
;       language
;------------------------------------------------------------------
[LanguagesSupported]
    ENG

;-------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
;
;       These are the text strings used to identify the options to
;       the user.  There should be a header and entry for every
;       language listed in the "LanguagesSupported" section.
;-------------------------------------------------------------------
[OptionsTextENG]
    NWLINK     = "Old NWLink IPX/SPX Compatible Transport"

;--------------------------------------------------------------------
;       Language Dependent Dialog Constants
;--------------------------------------------------------------------
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle            = "NWLink Setup"
ProductNWLINKDescription  = "NWLink Transport Driver"
ProductNWNBLINKDescription   = "NWLink NetBIOS Driver"
ProductNWLINKDisplayName = "NWLink"
ProductNWLINKTitle       = "NWLink Transport"
ProductNWLINKSYSDisplayName = "NWLinksys"
ProductNWLINKSYSTitle    = "NWLINK Transport Driver"
ProductNWNBLINKDisplayName  = "NWNBLink"
ProductNWNBLINKTitle        = "NWLink NetBIOS"
ProductNWNBLINKSYSDisplayName = "NWNBLinksys"
ProductNWNBLINKSYSTitle     = "NWLINK NetBIOS Driver"

CompetitorDisplayName = "Novell IPX/SPX II Transport"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[FileDependentDlgENG]
;
;--- No UI for NWLINK
;

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlg]
STF_MB_TITLE = "Information Message"

;
; don't need to localize the dialog type
;
DlgType      = "MessageBox"
STF_MB_TEXT  = $(InfoMsgText)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlgCantConfigure]
InfoMsgText = "The NWLINK service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click  OK.  You will then have the opportunity to configure the adapters."

;--------------------------------------------------------------------
;       Get the string to use while doing the install
;--------------------------------------------------------------------
[Billboard1ENG]
Status = "Installing NWLINK and related services..."

[FatalError1ENG]
Error = "Another IPX/SPX protocol driver is currently installed in this machine, "+
        "and the network interface cannot operate properly with both drivers installed. "+
        "If you still wish to install the NWLINK protocol driver, you must first "+
        "remove the "$(CompetitorDisplayName)" component and reboot your machine."

#####oemnadn1.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NE1000     = "Novell NE1000 Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Novell NE1000 Network Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Novell NE1000 Adapter Driver"
;
; Hardware
;
ProductHardwareNE1000Description        = "Novell NE1000 Adapter"
ProductSoftwareTitle    = "Novell NE1000 Adapter Driver"
ProductHardwareNE1000Title      = "Novell NE1000 Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------

[FileDependentDlgENG]
Label1 = "&IRQ Level:"
Label2 = "I/O &Port Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "NE2000"
Caption = $(FunctionTitle)

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOBaseAddrHexList)
Combo2Out  = $(IOBaseAddress)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADN2_INS)

#####oemnadlb.inf all
[LanguagesSupported]
    ENG

[OptionsTextENG]
    LOOP     = "MS Loopback Adapter"

[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "MS Loopback Adapter Card Setup"
ProductSoftwareDescription = "MS Loopback Adapter Driver"
ProductHardwareDescription = "MS Loopback Adapter"
ProductSoftwareTitle    = "MS Loopback Adapter Driver"
ProductHardwareTitle    = "MS Loopback Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[FileDependentDlgENG]
DlgType = "MultiCombo"
DlgTemplate = "SINGLE_COMBO"
Label1 = "&Frame Type:"
Caption = $(FunctionTitle)
Combo1List = $(MediaList)
Combo1Out  = $(MediaChoice)
ComboListItemsIn  = {Combo1List}
ComboListItemsOut = {Combo1Out}
HelpContext = $(!IDH_DB_OEMNADLB_INS)


#####oemnade3.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNK3ISA509     = "3Com Etherlink III ISA/PCMCIA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "3Com Etherlink III Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com Etherlink III Adapter Driver"
;
; Hardware
;
ProductHardwareELNK3ISA509Description        = "3Com Etherlink III Adapter"
ProductSoftwareTitle    = "3Com Etherlink III Adapter Driver"
ProductHardwareELNK3ISA509Title = "3Com Etherlink III Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

TransceiverList  = {"10 Base T", "Thick Net (AUI/DIX)","","Thin Net (BNC/COAX)"}
TransceiverDisplayList  = {"10 Base T", "Thick Net (AUI/DIX)","Thin Net (BNC/COAX)"}

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Label1 = "I/O &Port Address:"
Label2 = "&Interrupt Number:"
Label3 = "&Transceiver Type:"

;no translation needed after this

DlgType = "Combination"
DlgTemplate = "UBNDIS"
Caption = $(FunctionTitle)

Combo1List = $(IOADDR_Hex_List)
Combo1Out  = $(IOADDR_Hex_Value)
Combo2List = $(IRQList)
Combo2Out  = $(IRQValue)
Combo3List = $(TransceiverDisplayList)
Combo3Out  = $(TransceiverValue)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO, NO}

HelpContext = $(!IDH_DB_OEMNADE3_INS)

#####oemnadee.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNK3EISA     = "3Com Etherlink III EISA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;                             a
; Product Info
;
FunctionTitle   = "3Com Etherlink III EISA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com Etherlink III Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "3Com Etherlink III EISA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "3Com Etherlink III Adapter Driver"
ProductHardwareTitle    = "3Com Etherlink III EISA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for EISA
;

#####oemnaden.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    ELNK3MCA     = "3Com Etherlink III MCA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "3Com Etherlink III MCA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "3Com Etherlink III MCA Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "3Com Etherlink III MCA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "3Com Etherlink III MCA Adapter Driver"
ProductHardwareTitle    = "3Com Etherlink III MCA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;

#####oemnadnm.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NE2000MCA     = "NE/2 and compatible MC Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "NE/2 and compatible MC Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "NE/2 and compatible MC Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "NE/2 and compatible MC Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "NE/2 and compatible MC Adapter Driver"
ProductHardwareTitle    = "NE/2 and compatible MC Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Label1 = "&IRQ Level:"
Label2 = "I/O &Port Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "NE2000"
Caption = $(FunctionTitle)

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)
Combo2List = $(IOBaseAddrHexList)
Combo2Out  = $(IOBaseAddress)

ComboListItemsIn  = {Combo1List, Combo2List}
ComboListItemsOut = {Combo1Out, Combo2Out}

EditTextIn = ""
EditTextLim = ""
CBOptionsGreyed = {}
NotifyFields = {NO, NO}

HelpContext = $(!IDH_DB_OEMNADN2_INS)


#####oemnadfd.inf i386
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NPMCA     = "Network Peripherals FDDI, MCA"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Network Peripherals FDDI, MCA Adapter Card Setup"
;
; Software
;
ProductSoftwareDescription      = "Network Peripherals FDDI, MCA Adapter Driver"
;
; Hardware
;
ProductHardwareDescription      = "Network Peripherals FDDI, MCA Adapter"

CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"

ProductSoftwareTitle    = "Network Peripherals FDDI, MCA Adapter Driver"
ProductHardwareTitle    = "Network Peripherals FDDI, MCA Adapter"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for micro channel
;

#####oemnsvsn.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SNMP     = "SNMP Service"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "SNMP Setup"
;
; Software
;
ProductSoftwareDescription      = "Simple Network Management Protocol service that enables a Windows NT computer to be administered remotely with an SNMP management tool."
;
; The user needs to install Microsoft TCP/IP before install SNMP.
; If TCPIP does not exist in the registry, the inf file will popup this
; message and exit.
;
ProductSoftwareDisplayName      = "SNMP Service"
ProductSoftwareTitle    = "SNMP Service"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for SNMP
;

#####oemnsvcu.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    TCPIPCU = "TCP/IP Utilities"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProductTCPIPCUTitle = "TCP/IP Utilities"
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

GroupName    = "Accessories"
IconName     = "Telnet"

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
;


#####oemnsvsa.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    SAP = "SAP Agent"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductSAPTitle       = "SAP Agent"
ProductSAPDescription = "Service Advertising Protocol advertises servers and addresses on a network."
ProductSAPDisplayName = "SAP Agent"

[InUsed]
Error = "SAP Agent is currently in use by other network protocols. Please remove all related services first."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
;


#####oemnsvwi.inf
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG
;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    WINS     = "Windows Internet Name Service"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Windows Internet Name Service Setup"
;
; Software
;
ProductSoftwareDescription      = "Dynamic name registration and resolution service that maps NetBIOS computer names to IP addresses."
ProductSoftwareDisplayName      = "Windows Internet Name Service"
ProductSoftwareTitle            = "Windows Internet Name Service"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

OldGroupName    = "Network Administration"
GroupName    = "Administrative Tools"
IconName     = "WINS Manager"

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for WINS
;

#####oemnsvdh.inf
[LanguagesSupported]
    ENG
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

[FileConstantsENG]
ProductDHCPDisplayName  = "Microsoft DHCP Server"
ProductDHCPTitle        = "Microsoft DHCP Server"
ProductDHCPDescription  = "Automatically assigns IP addresses to other computers running the DHCP (Dynamic Hose Configuration Protocol) Client Service."
OldGroupName    = "Network Administration"
GroupName    = "Administrative Tools"
IconName     = "DHCP Manager"

[OptionsTextENG]
        DHCP = "Microsoft DHCP Server"

[DHCPServerDialog]
DHCPTxt = "If any adapters are using DHCP to obtain an IP address, they are now "+
           "required to use a static IP address.  Press Close on the Network Control Panel "+
           "and the TCP/IP Property Sheet will be displayed allowing you to enter an address."
STF_MB_TITLE = $(DHCP)
DlgType = "MessageBox"
STF_MB_TEXT  = $(DHCPTxt)
STF_MB_TYPE  = 1
STF_MB_ICON  = 2
STF_MB_DEF   = 1

#####oemnsvdn.inf
[LanguagesSupported]
    ENG
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

[FileConstantsENG]
ProductDNSDisplayName  = "Microsoft DNS Server"
ProductDNSTitle        = "Microsoft DNS Server"
ProductDNSDescription  = "The Domain Name System maps DNS domain names to IP addresses."

OldGroupName = "Network Administration"
GroupName = "Administrative Tools"
IconName  = "DNS Manager"


[OptionsTextENG]
        DNS = "Microsoft DNS Server"

#####oemnsvsp.inf
[LanguagesSupported]
    ENG
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductSTCPIPDisplayName        = "Simple TCP/IP Services"
ProductSTCPIPTitle              = "Simple TCP/IP Services"
ProductSTCPIPDescription        = "Client programs for simple network protocols, including Character Generator, Daytime, Echo and Quote of the Day."

[OptionsTextENG]
    STCPIP = "Simple TCP/IP Services"

#####oemnsvtp.inf
[LanguagesSupported]
    ENG
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductLPDDisplayName = "TCP/IP Print Server"
ProductLPDTitle = "Microsoft TCP/IP Printing"
ProductLPDDescription = "Enables Windows NT to print to TCP/IP-connected printers or to printers that are physically attached to UNIX computers."

[OptionsTextENG]
        TCPPRINT = "Microsoft TCP/IP Printing"

#####oemnxptc.inf
[LanguagesSupported]
    ENG
[OptionsTextENG]
    TC     = "TCP/IP Protocol"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
NoNewComponents = "No New Components to Install."
FunctionTitle   = "TCP/IP Setup"
ProductNETBTDescription           = "NetBT System Driver"
ProductNETBTDisplayName   = "WINS Client(TCP/IP)"
ProductNETBTTitle         = "WINS Client(TCP/IP)"
ProductTELNETDisplayName = "Telnet"
ProductTELNETTitle      = "Telnet Networking Support Environment"
ProductTELNETSYSDisplayName = "Telnetsys"
ProductTELNETSYSTitle     = "Telnet Driver"
ProductLMHOSTSDisplayName = "TCP/IP NetBIOS Helper"
ProductLMHOSTSTitle     = "TCP/IP NetBIOS Helper"
ProductDHCPDisplayName = "DHCP Client"
ProductDHCPTitle     = "DHCP Client"
ProductTCDisplayName = "TCP/IP Service"
ProductTCTitle     = "TCP/IP Protocol"
ProductTCDescription         = "Transport Control Protocol/Internet Protocol. The default wide area network protocol that provides communication across diverse interconnected networks."
ProviderDisplayName     = "TCP/IP"
LDAPProviderDisplayName = "NTDS"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
RASRebindError = "Setup has discovered that you have Remote Access Services installed. Do you want to configure RAS to support the TCP/IP protocol?"

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
[InfoDlg]
STF_MB_TITLE = "Information Message"
DlgType = "MessageBox"
STF_MB_TEXT  = $(InfoMsgText)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

[DHCPDialog]
DHCPText = "If there is a DHCP server on your network, TCP/IP can be configured to dynamically provide"+
                 " an IP address.  If you are not sure, ask your system administrator.  Do you wish to use DHCP?"
STF_MB_TITLE = "TCP/IP Setup"
DlgType = "MessageBox"
STF_MB_TEXT  = $(DHCPText)
STF_MB_TYPE  = 3
STF_MB_ICON  = 5
STF_MB_DEF   = 2

[InfoDlgCantConfigure]
InfoMsgText = "The TCP/IP service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click  OK or CLOSE.  You will then have the opportunity to configure the adapters."
[WarningDlgENG]
STF_MB_TITLE = "TCP/IP Setup Warning"
DlgType = "MessageBox"
STF_MB_TEXT  = $(Error)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1
[Billboard1ENG]
Status = "Installing TCP/IP and related services..."

#####oemnxpip.inf all
;------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
;       This lists the languages supported by this file.
;       If you add other languages to this list, you must
;       also add the appropriate text sections for the new
;       language
;------------------------------------------------------------------
[LanguagesSupported]
    ENG

;-------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
;
;       These are the text strings used to identify the options to
;       the user.  There should be a header and entry for every
;       language listed in the "LanguagesSupported" section.
;-------------------------------------------------------------------
[OptionsTextENG]
    NWLNKIPX     = "NWLink IPX/SPX Compatible Transport"

;--------------------------------------------------------------------
;       Language Dependent Dialog Constants
;--------------------------------------------------------------------
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle            = "NWLink IPX/SPX Compatible Transport Setup"
ProductNWLNKIPXDescription  = "An implementation of the IPX and SPX protocols, which are used by the NetWare networks."
ProductNWLNKIPXDisplayName = "NWLink IPX/SPX Compatible Transport Protocol"
ProductNWLNKIPXTitle       = "NWLink IPX/SPX Compatible Transport"

ProductNWLNKNBDescription   = "Enables Novell NetBIOS packets to be sent between a NetWare server running Novell NetBIOS and a Windows NT computer, or between two Windows NT computers."
ProductNWLNKNBDisplayName  = "NWLink NetBIOS"
ProductNWLNKNBTitle        = "NWLink NetBIOS"
ProductNWLNKNBSYSDisplayName = "NWLinkNBsys"
ProductNWLNKNBSYSTitle     = "NWLINK NetBIOS Driver"

ProductNWLNKSPXDescription  = "NWLink SPX Protocol Driver"
ProductNWLNKSPXDisplayName = "NWLink SPX/SPXII Protocol"
ProductNWLNKSPXTitle       = "NWLink SPX Protocol"

CompetitorDisplayName = "NWLink IPX/SPX II Transport"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

RASRebindError = "Setup has discovered that you have Remote Access Services installed. Do you want to configure RAS to support the NWLINK protocol?"
InstallRip     = "Do you want to install the IPX Rip Router?"

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[FileDependentDlgENG]
;
;--- No UI for NWLNK
;

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlg]
STF_MB_TITLE = "Information Message"

;
; don't need to localize the dialog type
;
DlgType      = "MessageBox"
STF_MB_TEXT  = $(InfoMsgText)
STF_MB_TYPE  = 1
STF_MB_ICON  = 5
STF_MB_DEF   = 1

;--------------------------------------------------------------------
;       Input DIALOGS
;--------------------------------------------------------------------
[InfoDlgCantConfigure]
InfoMsgText = "The IPX Protocol service is not currently configured to use any adapters."+
    "  If you have just installed it, return to the Networks dialog and "+
    "click  OK.  You will then have the opportunity to configure the adapters."

[InUseENG]
InfoMsgText = "The IPX Protocol service is being used by another service(s). "+
    "Please remove other related components before removing IPX Protocol."

;--------------------------------------------------------------------
;       Get the string to use while doing the install
;--------------------------------------------------------------------
[Billboard1ENG]
Status = "Installing IPX Protocol and related services..."

[FatalError1ENG]
Error = "Another IPX/SPX protocol driver is currently installed in this machine, "+
        "and the network interface cannot operate properly with both drivers installed. "+
        "If you still wish to install the NWLNK protocol driver, you must first "+
        "remove the "$(CompetitorDisplayName)" component and reboot your machine."

#####oemnsvnw.inf
[LanguagesSupported]
    ENG
;
; Language depended section
;
[WorkstationENG]
    NWType = "Client Service for NetWare"
    NWDescription = "Enables this computer to log on to NetWare servers and access their resources."
[GatewayENG]
    NWType = "Gateway Service for NetWare"
    NWDescription = "Enables other Windows NT computers to access NetWare servers without running NetWare Client software."
[OptionsWINNTTextENG]
    NWWKSTA       = "Client Service for NetWare"
[OptionsLANMANNTTextENG]
    NWWKSTA       = "Gateway (and Client) Services for NetWare"

[FileConstantsENG]
NotEnoughSpace = "Out of disk space. Please remove some files before install "$(NWType)"."
UpgradeBetaOnTopOfDaytona = "You cannot update the beta version of "$(NWType)" over Windows NT 3.51's "$(NWType)"."
InstallNWLINKFirst = "Please install the NWLINK IPX/SPX Compatible Transport before you install the "$(NWType)"."
InstallNTWKSTAFirst = "Please install the Windows NT Workstation service before you install the "$(NWType)"."
RemoveAndReboot    = "Please remove any existing "$(NWType)" component and reboot your machine before installing the latest version of "$(NWType)"."
UpgradeFirst = "Please install the Windows NT patch before installing the "$(NWType)"."
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = $(NWType)" Setup"
ProductNWWKSTADescription         = $(NWDescription)
ProductNWRDRDescription           = "NetWare Redirector Compatible Service"
ProviderRDRName                 = "NetWare Compatible Redirector"
ProductNWWKSTATitle       = $(NWType)
ProductNWWKSTADisplayName = $(NWType)
ProductNWRDRDisplayName   = "NetWare Rdr"
ProductNWRDRTitle         = "NetWare Redirector"
ProductProviderName = "NetWare Network"
ProductProviderDisplayName = "NetWare or Compatible Network"
ProductPrintProviderName = "NetWare or Compatible Network"
OldPrintProviderName = "Netware(R) Network"
OldPrintProviderName2 = "NetWare Network"
REM1 = "REM Install network redirector"

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
ShellCodeErrorText = "Shell Code Error"

[FileDependentDlgENG]
; nothing



#####oemnsvbh.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NETMON      = "Network Monitor Agent"
    NETMONTOOLS = "Network Monitor Tools and Agent"


;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
;
; Software
;
ProductNMAgentDisplayName  = "Network Monitor Agent"

;
; Software Tools
;
NETMONTOOLSSoftwareTitle  = "Network Monitor Tools and Agent"
NETMONSoftwareTitle       = "Network Monitor Agent"


[NETMONConstantsENG]
;
; Product Info
;
ProductSoftwareTitle       = $(NETMONSoftwareTitle)
ProductSoftwareDescription = "Informs monitoring programs, such as Performance Monitor and Network Monitor, of network transactions for this computer."
ProductSoftwareDisplayName = $(ProductSoftwareTitle)" Driver"

FunctionTitle   =  $(ProductSoftwareTitle)

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[NETMONTOOLSConstantsENG]
;
; Product Info
;
ProductSoftwareTitle       = $(NETMONTOOLSSoftwareTitle)
ProductSoftwareDescription = "A software package for monitoring and troubleshooting network transactions"
ProductSoftwareDisplayName = $(ProductSoftwareTitle)" Drivers"

FunctionTitle   = $(ProductSoftwareTitle)

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[IconInfoENG]
    OldNetAdminGroupName = "Network Administration"
    NetAdminGroupName = "Administrative Tools"
    NetMonitor = "Network Monitor"



#####oemnsvri.inf
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    REMOTEBOOT     = "Remoteboot Service"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionTitle   = "Remoteboot Setup"
;
; Software
;
ProductSoftwareDescription      = "Starts MS-DOS and Microsoft Windows workstations over the network."
ProductSoftwareDisplayName      = "Remoteboot Service"
ProductSoftwareTitle    = "Remoteboot Service"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
;
; Program group information
;
OldRplGroup    = "Network Administration"
RplGroup    = "Administrative Tools"
RplMgr    = "Remoteboot Manager"


[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Edit1Label = "&Remoteboot directory:"
CheckBox1 = "&Migrate Remoteboot directory from LAN Manager 2.2"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "QUERY_RPL_PATH"
Caption = $(FunctionTitle)
CBOptionsGreyed = {}
ComboListItemsIn = {}
ComboListItemsOut = {}

HelpContext = $(!IDH_DB_OEMNSVRI_INS)

EditTextLim = 256
EditTextIn  = $(RPLDIR)
EditFocus   = "ALL"
RCCtlFocusOn = 403

[NonFatalError1ENG]
Error = "The Remoteboot directory must be an absolute path."

[DoAskSourceDlgTextENG]
    DlgText = "Setup needs to copy Remoteboot Client files. These files are located "+
              "in the \CLIENTS\RPL directory of the Windows NT Server CD."$(!LF)$(!LF)+
              "If you want Setup to look in a different place, type the new location below. "+
              "When the location is correct, click Continue."

#####oemnadt2.inf all
[LanguagesSupported]
    ENG
[OptionsTextENG]
    IBMTOK2ISA     = "IBM Token-Ring Network 16/4 ISA Adapter II"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "IBM Token-Ring 16/4 Adapter II Card Setup"
ProductSoftwareDescription      = "IBM Token-Ring 16/4 ISA Adapter II Driver"
ProductHardwareIBMTOK2ISADescription        = "IBM Token-Ring 16/4 ISA Adapter II"
ProductSoftwareTitle    = "IBM Token-Ring 16/4 ISA Adapter II Driver"
ProductHardwareIBMTOK2ISATitle = "IBM Token-Ring 16/4 ISA Adapter II"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
Combo1Label = "I/O &Port Address:"
DlgType = "RadioCombination"
DlgTemplate = "IBMTOK2"
Caption = $(FunctionTitle)
Combo1List = $(IOADDR_Hex_List)
Combo1Out  = $(IOADDR_Hex_Value)
ComboListItemsIn  = {Combo1List}
ComboListItemsOut = {Combo1Out}
EditTextLim = 17
EditTextIn = $(NetworkAddress)
Edit1Label = "&NetworkAddress"
HelpContext = $(!IDH_DB_OEMNADT2_INS)

#####oemnadte.inf all
[LanguagesSupported]
    ENG
[OptionsTextENG]
    IBMTOK2E     = "IBM Token Ring EISA Adapter"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "IBM Token Ring EISA Adapter Card Setup"
ProductSoftwareDescription      = "IBM Token Ring EISA Adapter Driver"
ProductHardwareDescription      = "IBM Token Ring EISA Adapter"
CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ProductHardwareTitle    = "IBM Token Ring EISA Adapter"
ProductSoftwareTitle    = "IBM Token Ring EISA Adapter Driver"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
Edit1Label = "&Network Address:"
DlgType = "Edit"
DlgTemplate = "NETWORK_NUMBER"
Caption = $(FunctionTitle)
HelpContext = $(!IDH_DB_OEMNADTE_INS)
EditTextLim = 17
EditTextIn  = $(NetworkAddress)
EditFocus   = "ALL"
RCCtlFocusOn = 403



#####oemnsvrc.inf
[LanguagesSupported]
    ENG
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

#####oemnadpm.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    P189X     = "ProNET-4/16 p189X NIC"

[PacketChoices]
Packet1="4Kb",4210
Packet2="18Kb",17986

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

FunctionTitle   = "Proteon p189X Adapter Card Setup"
ProductSoftwareDescription      = "Proteon RapiDriver"
ProductHardwareDescription      = "Proteon p189X ProNET-4/16 NIC"
CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ProductHardwareTitle    = "Proteon p189X ProNET-4/16 NIC"
ProductSoftwareTitle    = "Proteon RapiDriver"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
Group1 = "CardSpeed"
Radio1 = "&4"
Radio2 = "&16"
Edit1Label = "&Network Address:"

;no translation needed after this

DlgType = "RadioCombination"
DlgTemplate = "IBM_TOKEN"
Caption = $(FunctionTitle)
ComboListItemsIn = {}
ComboListItemsOut = {}
EditTextLim = 17
EditTextIn = $(NetworkAddress)

OptionsGreyed = {}

HelpContext = $(!IDH_DB_OEMNADP9_INS)
RCCtlFocusOn = 403

#####oemnadar.inf all
[OptListENG]
OptList_1 = tc$arcnet "Arcnet/TCNS (All Types)",     "tcarc", "ARCNET/TCNS Adapter", "ARCNET or Thomas-Conrad TCNS Adapter"
OptList_2 = tc$tcns,  "Thomas-Conrad TCNS",          "tcarc", "TCNS Adapter",        "Thomas-Conrad 100Mbps TCNS"

[FileConstantsENG]
   ProCaption              = "Windows NT Setup"
   ProCancel               = "Cancel"
   ProCancelMsg            = "Your ARCNET/TCNS Windows NT Networking "+
                             "Adapter is not correctly installed.  Are "+
                             "you sure you want to cancel copying files?"
   ProCancelCap            = "Network Setup Message"
   ProText1                = "Copying:"
   ProText2                = "To:"
   SoftwareTitle           = "ARCNET/TCNS Driver"
   SoftwareDescription     = "ARCNET/TCNS Adapter Driver"

[DialogConstantsENG]
   Help                    = "&Help"
   Exit                    = "Cancel"
   OK                      = "OK"
   HelpContext             = ""
   Continue                = "Continue"
   Cancel                  = "Cancel"
   FunctionTitle           = "ARCNET/TCNS Adapter Setup"
   InterruptLabel          = "&Interrupt Number:"
   BaseIoLabel             = "I/O &Port Base Addr:"
   MemoryLabel             = "&Memory Address:"
   TcnsCaption             = "Thomas-Conrad TCNS Adapter Setup"
   TcnsEISACaption         = "Thomas-Conrad TCNS (TC3147) Adapter Setup"
   SlotNumberLabel         = "&Slot Number:"

[LanguagesSupported]
   ENG



#####oemnaddt.inf all
[LanguagesSupported]
    ENG
[OptionsTextENG]
    DC21040  = "DEC PCI Ethernet DECchip 21040"
    DC21041  = "DEC PCI Ethernet DECchip 21041"
    DC21140  = "DEC PCI Fast Ethernet DECchip 21140"
    DC21142  = "DEC PCI Fast Ethernet DECchip 21142"
    DE434    = "DEC DE434 EtherWORKS Turbo PCI TP Adapter"
    DE435    = "DEC DE435 EtherWORKS Turbo PCI Adapter"
;    DE436    = "DEC DE436 EtherWORKS Turbo PCI Quad Adapter"
    MULTIA   = "DEC multia's Ethernet Controller"
    DE425    = "DEC DE425 EtherWORKS Turbo EISA Adapter"
    DE450    = "DEC DE450 EtherWORKS Turbo PCI Adapter"
    DE500    = "DEC DE500 Fast Ethernet PCI Adapter"

[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

ProductSoftwareDescription = "DEC DC21x4 Driver"

FunctionDC21040Title = "DEC DECchip 21040 Based Adapter Setup"
ProductHardwareDC21040Description = "DEC PCI Ethernet DECchip 21040"
ProductHardwareDC21040Title = "DEC PCI Ethernet DECchip 21040"

FunctionDC21041Title = "DEC DECchip 21041 Based Adapter Setup"
ProductHardwareDC21041Description = "DEC PCI Ethernet DECchip 21041"
ProductHardwareDC21041Title = "DEC PCI Ethernet DECchip 21041"

FunctionDC21140Title = "DEC DECchip 21140 Based Adapter Setup"
ProductHardwareDC21140Description = "DEC PCI Fast Ethernet DECchip 21140"
ProductHardwareDC21140Title = "DEC PCI Fast Ethernet DECchip 21140"

FunctionDC21142Title = "DEC DECchip 21142 Based Adapter Setup"
ProductHardwareDC21142Title = "DEC PCI Ethernet DC21142"
ProductHardwareDC21142Description = "DEC PCI Fast Ethernet DECchip 21142"

FunctionDE434Title   = "DEC DE434 PCI Adapter Card Setup"
ProductHardwareDE434Description   = "DEC DE434 EtherWORKS Turbo PCI TP Adapter"
ProductHardwareDE434Title   = "DEC DE434 EtherWORKS Turbo PCI TP Adapter"

FunctionDE435Title   = "DEC DE435 PCI Adapter Card Setup"
ProductHardwareDE435Description   = "DEC DE435 EtherWORKS Turbo PCI Adapter"
ProductHardwareDE435Title   = "DEC DE435 EtherWORKS Turbo PCI Adapter"

FunctionMULTIATitle = "DEC multia's Ethernet Controller Setup"
ProductHardwareMULTIADescription = "DEC multia's Ethernet Controller"
ProductHardwareMULTIATitle = "DEC multia's Ethernet Controller"

FunctionDE425Title   = "DEC DE425 EISA Adapter Card Setup"
ProductHardwareDE425Description   = "DEC DE425 EtherWORKS Turbo EISA Adapter"
ProductHardwareDE425Title   = "DEC DE425 EtherWORKS Turbo EISA Adapter"

FunctionDE450Title   = "DEC DE450 PCI Adapter Card Setup"
ProductHardwareDE450Description   = "DEC DE450 EtherWORKS Turbo PCI Adapter"
ProductHardwareDE450Title   = "DEC DE450 EtherWORKS Turbo PCI Adapter"

FunctionDE500Title   = "DEC DE500 PCI Adapter Card Setup"
ProductHardwareDE500Description   = "DEC DE500 Fast Ethernet PCI Adapter"
ProductHardwareDE500Title   = "DEC DE500 Fast Ethernet PCI Adapter"

ConnectionList  = ^(ConnectionChoices$(Option), 1)
ConnectionValues = ^(ConnectionChoices$(Option), 2)
NoList  = ^(NoChoices, 1)
NoValues = ^(NoChoices, 2)
ShellCodeErrorTitle     = "Error: "$(Function$(Option)Title)
ShellCodeErrorText      = "Shell Code Error."
CANNOT_FIND_ANY_CARD    = "Network card is not present in the system"

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[FileDependentDlgENG]

DlgText = "Choose the proper cable type for the "+
          "network adapter. Select [Help] for a detailed "+
          "description of the available options of the list."

Combo1Label = "&Connection Type:"

;
; don't localize anything below this
;
DlgTemplate = "ADAP_PROTO_COMBO"
DlgType = "Combination"

Caption = $(Function$(Option)Title)
Combo1List = $(ConnectionList)
Combo1Out  = $(ConnectionValue)
ComboListItemsIn  = {Combo1List}
ComboListItemsOut = {Combo1Out}

EditTextLim = ""
CBOptionsGreyed = {}
MinHelpId = 10
MaxHelpId = 1130
HelpContext = $(Help$(Option)Id)

[ConnectionChoicesDC21040]
    Connect_0 = "AutoDetect", 0
    Connect_1 = "10BaseT (Twisted_Pair) ", 2
    Connect_2 = "10BaseT Full_Duplex ", 3
    Connect_3 = "10BaseT No_Link_Test", 4
    Connect_4 = "10Base2 (BNC)", 1
    Connect_5 = "10Base5 (AUI)", 5
[ConnectionChoicesDC21041]
    Connect_0 = "AutoSense", 0
    Connect_1 = "AutoSense No_Nway", 6
    Connect_2 = "10BaseT (Twisted_Pair) ", 2
    Connect_3 = "10BaseT Full_Duplex ", 3
    Connect_5 = "10BaseT No_Link_Test", 4
    Connect_6 = "10Base2 (BNC)", 1
    Connect_7 = "10Base5 (AUI)", 5
[ConnectionChoicesDC21140]
    Connect_0 = "AutoSense", 0
    Connect_1 = "AutoSense No_Nway", 6
    Connect_2 = "100BaseTx", 8
    Connect_3 = "100BaseTx Full_Duplex", 9
    Connect_4 = "100BaseT4", 10
    Connect_5 = "100BaseFx", 11
    Connect_6 = "100BaseFx Full_Duplex", 12
    Connect_7 = "10BaseT (Twisted Pair)", 2
    Connect_8 = "10BaseT Full_Duplex", 3
[ConnectionChoicesDC21142]
    Connect_0 = "AutoSense", 0
    Connect_1 = "100BaseTx", 8
    Connect_2 = "100BaseTx Full_Duplex", 9
    Connect_3 = "100BaseT4", 10
    Connect_4 = "100BaseFx", 11
    Connect_5 = "100BaseFx Full_Duplex", 12
    Connect_6 = "10BaseT (Twisted_Pair) ", 2
    Connect_7 = "10BaseT Full_Duplex", 3
    Connect_8 = "10BaseT No_Link_Test", 4
    Connect_9 = "10Base2 (BNC)", 1
    Connect_10= "10Base5 (AUI)", 5
[ConnectionChoicesMULTIA]
    Connect_0 = "AutoDetect", 0
    Connect_1 = "10BaseT (Twisted_Pair) ", 2
    Connect_2 = "10BaseT Full_Duplex ", 3
    Connect_3 = "10BaseT No_Link_Test", 4
    Connect_4 = "10Base2 (BNC)", 1
    Connect_5 = "10Base5 (AUI)", 5
[ConnectionChoicesDE434]
    Connect_0 = "10BaseT (Twisted_Pair) ", 2
    Connect_1 = "10BaseT Full_Duplex ", 3
    Connect_2 = "10BaseT No_Link_Test", 4
[ConnectionChoicesDE435]
    Connect_0 = "AutoDetect", 0
    Connect_1 = "10BaseT (Twisted_Pair) ", 2
    Connect_2 = "10BaseT Full_Duplex ", 3
    Connect_3 = "10BaseT No_Link_Test", 4
    Connect_4 = "10Base2 (BNC)", 1
    Connect_5 = "10Base5 (AUI)", 5
[ConnectionChoicesDE450]
    Connect_0 = "AutoSense", 0
    Connect_1 = "AutoSense No_Nway", 6
    Connect_2 = "10BaseT (Twisted_Pair) ", 2
    Connect_3 = "10BaseT Full_Duplex ", 3
    Connect_4 = "10BaseT No_Link_Test", 4
    Connect_5 = "10Base2 (BNC)", 1
    Connect_6 = "10Base5 (AUI)", 5
[ConnectionChoicesDE500]
    Connect_0 = "AutoSense", 0
    Connect_1 = "100BaseTx", 8
    Connect_2 = "100BaseTx Full_Duplex", 9
    Connect_3 = "10BaseT", 2
    Connect_4 = "10BaseT Full_Duplex", 3


#####oemnadzz.inf all
[LanguagesSupported]
    ENG

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


ShellCodeErrorTitle     = "Error: "
ShellCodeErrorText      = "Shell Code Error."

[ErrorMsgENG]
CannotFindOemsetup = "Setup cannot find "$(File1)", "$(File2)", "$(File3)", or "$(File4)". Please make sure your input path is correct."

#####oemnadap.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

[OptionsTextENG]
    AMDPCI     = "AMD PCNET Family Ethernet Adapter"

[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


GenericAdapterName = "AMD PCNET ISA/VESA Ethernet Adapter"
GenericPCIAdapterName = "AMD PCNET PCI Ethernet Adapter"
GenericDriverName  = "AMD PCNET Family Ethernet Adapter Driver"

ProductSoftwareDescription = $(GenericDriverName)
ProductHardwareDescription = $(GenericAdapterName)
ProductHardwarePCNTN3Description="AMD PCnet Family Driver"

ProductSoftwareTitle =       $(GenericDriverName)
ProductHardwarePCNTN3Title = $(GenericAdapterName)

;
; no localization until [DialogConstantsENG]
;

DialogDllName   = "amddlg.dll"

IRQList  = ^(IRQChoices, 1)
IRQValues = ^(IRQChoices, 2)

IOBaseAddrList = ^(IOBaseAddrChoices, 1)
IOBaseAddrValues = ^(IOBaseAddrChoices, 2)

DMAChannelList = ^(DMAChannelChoices,1)
DMAChannelValues = ^(DMAChannelChoices,2)

LEDList = ^(LEDChoices,1)
LEDValues = ^(LEDChoices,2)

FullDuplexList = ^(FullDuplexChoices,1)
FullDuplexValues = ^(FullDuplexChoices,2)

BusTimerList = ^(BusTimerChoices,1)
BusTimerValues = ^(BusTimerChoices,2)

[DialogConstantsENG]
FunctionTitle   = $(GenericDriverName)$(GenericInfVersion)
Help        = "&Help"
Exit        = "Cance&l"
OK          = "&OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "&Cancel"

[MemoryMappedChoicesENG]
Map_1 = 1, "ON"
Map_2 = 0, "OFF"

[FileDependentDlgENG]
FunctionTitle   = $(GenericAdapterName)$(GenericInfVersion)
DlgText = "Please select values for the following fields:"

Combo1Label = "&I/O Port:"
Combo2Label = "IRQ &Number:"
Combo3Label = "&DMA Number:"
Combo4Label = "&Full Duplex:"
Combo5Label = "&Bus Timer:"

BigButton   = "&More options >>"

CheckBox1 = "10Base-&T port"

Group1 = "&Bus to scan"

Radio1 = "&PNP"
Radio2 = "&VESA"
Radio3 = "&ISA"
Radio4 = "&ALL"

;
; no localization until IRQChoices
;

DlgType = "RadioCombination"
DlgTemplate = "PCNTN3"
Caption = $(FunctionTitle)

CBOptionsGreyed = {}
NotifyFields = {NO, NO}
HelpContext = 1

Combo1List = $(IOBaseAddrList)
Combo1Out  = $(IOBaseAddrValue)

Combo2List = $(IRQList)
Combo2Out  = $(IRQValue)

Combo3List = $(DMAChannelList)
Combo3Out  = $(DMAChannelValue)

Combo4List = $(FullDuplexList)
Combo4Out  = $(FullDuplexValue)

Combo5List = $(BusTimerList)
Combo5Out  = $(BusTimerValue)

ComboListItemsIn  = {Combo1List,Combo2List,Combo3List,Combo4List,Combo5List}
ComboListItemsOut = {Combo1Out,Combo2Out,Combo3Out,Combo4Out,Combo5Out}

EditTextIn = ""
EditTextLim = ""

[IRQChoices]
IRQ_1 = "3",3
IRQ_2 = "4",4
IRQ_3 = "5",5
IRQ_4 = "9",9
IRQ_5 = "10",10
IRQ_6 = "11",11
IRQ_7 = "12",12
IRQ_8 = "15",15
IRQ_9 = "Auto_Scan",0

[IOBaseAddrChoices]
IOBase_1  = "0x200",512
IOBase_2  = "0x220",544
IOBase_3  = "0x240",576
IOBase_4  = "0x260",608
IOBase_5  = "0x280",640
IOBase_6  = "0x2a0",672
IOBase_7  = "0x2c0",714
IOBase_8  = "0x2e0",746
IOBase_9  = "0x300",768
IOBase_10 = "0x320",800
IOBase_11 = "0x340",832
IOBase_12 = "0x360",864
IOBase_13 = "0x380",896
IOBase_14 = "0x3a0",928
IOBase_15 = "0x3c0",960
IOBase_16 = "0x3e0",992
IOBase_17 = "Auto_Scan",0

[DMAChannelChoices]
DMAChannel_1 = "3",3
DMAChannel_2 = "5",5
DMAChannel_3 = "6",6
DMAChannel_4 = "7",7
DMAChannel_5 = "Auto_Scan",0

[LEDChoices]
LED_1 = "Default",65536
LED_2 = "0x0",0
LED_3 = "0x2",2
LED_4 = "0x4",4
LED_5 = "0x8",8
LED_6 = "0x10",16
LED_7 = "0x20",32
LED_8 = "0x30",48
LED_9 = "0x34",52
LED_10 = "0x40",64
LED_11 = "0xc0",192
LED_12 = "0x4088",16520
LED_13 = "0xb0",176
LED_14 = "0x21",129

[FullDuplexChoices]
FULLDUPLEX_1 = "OFF",1
FULLDUPLEX_2 = "AUI",2
FULLDUPLEX_3 = "UTP",3
FULLDUPLEX_4 = "Default",0

[BusTimerChoices]
BUSTIMER_1 = "5",5
BUSTIMER_2 = "6",6
BUSTIMER_3 = "7",7
BUSTIMER_4 = "8",8
BUSTIMER_5 = "9",9
BUSTIMER_6 = "10",10
BUSTIMER_7 = "11",11
BUSTIMER_8 = "12",12
BUSTIMER_9 = "13",13
BUSTIMER_10 = "Default",0

[FileDependentDlgPCIENG]
FunctionTitle   = $(GenericPCIAdapterName)$(GenericInfVersion)
DlgText = "Please select values for the following fields:"

Combo1Label = "&Full Duplex:"
BigButton   = "&More options >>"
CheckBox1 = "10Base-&T port"

;
; no locationization until LEDChoices
;

DlgType = "RadioCombination"
DlgTemplate = "PCNTN3PCI"
Caption = $(FunctionTitle)

CBOptionsGreyed = {}
NotifyFields = {NO, NO}
HelpContext = 1

Combo1List = $(FullDuplexList)
Combo1Out  = $(FullDuplexValue)

Combo3List = $(LEDList)
Combo3Out  = $(LED0Value)

Combo4List = $(LEDList)
Combo4Out  = $(LED1Value)

Combo5List = $(LEDList)
Combo5Out  = $(LED2Value)

Combo6List = $(LEDList)
Combo6Out  = $(LED3Value)

ComboListItemsIn  = {Combo1List}
ComboListItemsOut = {Combo1Out}

EditTextIn = ""
EditTextLim = ""

[LEDChoices]
LED_1 = "Default",65536
LED_2 = "0x0",0
LED_3 = "0x2",2
LED_4 = "0x4",4
LED_5 = "0x8",8
LED_6 = "0x10",16
LED_7 = "0x20",32
LED_8 = "0x30",48
LED_9 = "0x34",52
LED_10 = "0x40",64
LED_11 = "0xc0",192
LED_12 = "0x4088",16520
LED_13 = "0xb0",176
LED_14 = "0x21",129

[FullDuplexChoices]
FULLDUPLEX_1 = "OFF",1
FULLDUPLEX_2 = "AUI",2
FULLDUPLEX_3 = "UTP",3
FULLDUPLEX_4 = "Default",0

[BusTimerChoices]
BUSTIMER_1 = "5",5
BUSTIMER_2 = "6",6
BUSTIMER_3 = "7",7
BUSTIMER_4 = "8",8
BUSTIMER_5 = "9",9
BUSTIMER_6 = "10",10
BUSTIMER_7 = "11",11
BUSTIMER_8 = "12",12
BUSTIMER_9 = "13",13
BUSTIMER_10 = "Default",0

#####oemnaddf.inf all

[LanguagesSupported]
        ENG
[OptionsTextENG]
        DEFPA     = "DEC FDDIcontroller/PCI"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "DEC FDDIcontroller/PCI Card Setup"
ProductSoftwareDescription      = "DEC FDDIcontroller/PCI Driver"
ProductHardwareDescription      = "DEC FDDIcontroller/PCI"
CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
ReceiveBuffList = ^(ReceiveBuffChoices,1)
ReceiveBuffValues = ^(ReceiveBuffChoices,2)
TransmitBuffList = ^(TransmitBuffChoices,1)
TransmitBuffValues = ^(TransmitBuffChoices,2)
BurstSizeList = ^(BurstSizeChoices,1)
BurstSizeValues = ^(BurstSizeChoices,2)
DialogDllName = "defpa.dll"
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = 1
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
DlgType = "RadioCombination"
DlgTemplate = "DEFPA"
Combo1 = "Receive Buffers:"
Combo2 = "Transmit Buffers:"
Combo3 = "Burst Size:"
Edit1 = "Requested TTRT(ms):"
Edit2 = "Bus Number:"
Edit3 = "Card Instance:"
Group = "Full Duplex Enable"
Combo1List = $(ReceiveBuffList)
Combo1Out = $(ReceiveBuffValue)
Combo2List = $(TransmitBuffList)
Combo2Out = $(TransmitBuffValue)
Combo3List = $(BurstSizeList)
Combo3Out = $(BurstSizeValue)
; Burst size is not included in dialog box, for now
ComboListItemsIn = {Combo1List,Combo2List}
ComboListItemsOut = {Combo1Out,Combo2Out}
EditTextLim = {3,3,1}
EditTextIn = {$(EditText1),$(EditText2),$(EditText3)}
EditTextOut = {$(EditText1),$(EditText2),$(EditText3)}
[ReceiveBuffChoices]
Receive_1 = "2",2
Receive_2 = "4",4
Receive_3 = "8",8
[TransmitBuffChoices]
Transmit_1 = "8",8
Transmit_2 = "16",16
Transmit_3 = "32",32
Transmit_4 = "64",64
Transmit_5 = "128",128
[BurstSizeChoices]
Burst_1 = "4",0
Burst_2 = "8",1
Burst_3 = "16",2

#####oemnadd3.inf all
[LanguagesSupported]
        ENG
[OptionsTextENG]
        DEC300     = "DEC FDDIcontroller/EISA"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
                           "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionTitle   = "DEC FDDIcontroller/EISA Card Setup"
ProductSoftwareDescription      = "DEC FDDIcontroller/EISA Driver"
ProductHardwareDescription      = "DEC FDDIcontroller/EISA"
CANNOT_FIND_ANY_CARD            = "Network card is not present in the system"
ProductSoftwareTitle    = "DEC FDDIcontroller/EISA Driver"
ProductHardwareTitle    = "DEC FDDIcontroller/EISA Adapter"
ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."
BurstSizeList = ^(BurstSizeChoices,1)
BurstSizeValues = ^(BurstSizeChoices,2)
ReceiveBuffList = ^(ReceiveBuffChoices,1)
ReceiveBuffValues = ^(ReceiveBuffChoices,2)
TransmitBuffList = ^(TransmitBuffChoices,1)
TransmitBuffValues = ^(TransmitBuffChoices,2)
DialogDllName = "defea.dll"
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = 1
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
DlgType = "RadioCombination"
DlgTemplate = "DEFEA"
Combo1 = "Burst Size:"
Combo2 = "Receive Buffers:"
Combo3 = "Transmit Buffers:"
Group = "Full Duplex Enable"
Edit1 = "Requested TTRT(ms):"
Combo1List = $(BurstSizeList)
Combo1Out = $(BurstSizeValue)
Combo2List = $(ReceiveBuffList)
Combo2Out = $(ReceiveBuffValue)
Combo3List = $(TransmitBuffList)
Combo3Out = $(TransmitBuffValue)
ComboListItemsIn = {Combo2List,Combo3List}
ComboListItemsOut = {Combo2Out,Combo3Out}
EditTextLim = {3}
[BurstSizeChoices]
Burst_1 = "4",0
Burst_2 = "8",1
Burst_3 = "16",2
[ReceiveBuffChoices]
Receive_1 = "2",2
Receive_2 = "4",4
Receive_3 = "8",8
[TransmitBuffChoices]
Transmit_1 = "8",8
Transmit_2 = "16",16
Transmit_3 = "32",32
Transmit_4 = "64",64
Transmit_5 = "128",128

#####oemnadni.inf all
;-----------------------------------------------------------------------
; LANGUAGES SUPPORTED
; -------------------
;
; The languages supported by the OEM INF, For every language supported
; we need to have a separate text section for every displayable text
; section.
;
;-----------------------------------------------------------------------

[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsTextENG]
    NE2000IBMCOMPAT = "IBM Ethernet PCMCIA and Compatible Adapter"
    NE4000PCMCIA    = "Novell NE4000 PCMCIA Adapter"
    MICRODYNEPCMCIA = "Microdyne NE4000 PCMCIA Adapter"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
;
; Software
;
ProductSoftwareNE2000IBMCOMPATDescription = "IBM Ethernet PCMCIA and Compatible Adapter Driver"
ProductSoftwareNE2000IBMCOMPATTitle       = "IBM Ethernet PCMCIA and Compatible Adapter Driver"
ProductSoftwareNE4000PCMCIADescription = "Novell NE4000 PCMCIA Adapter Driver"
ProductSoftwareNE4000PCMCIATitle       = "Novell NE4000 PCMCIA Adapter Driver"
ProductSoftwareMICRODYNEPCMCIADescription      = "Microdyne NE4000 PCMCIA Adapter Driver"
ProductSoftwareMICRODYNEPCMCIATitle    = "Microdyne NE4000 PCMCIA Adapter Driver"

;
; Hardware
;

ProductHardwareNE2000IBMCOMPATDescription  = "IBM Ethernet PCMCIA and Compatible Adapter"
ProductHardwareNE2000IBMCOMPATTitle    = "IBM Ethernet PCMCIA and Compatible Adapter"
ProductHardwareNE4000PCMCIADescription = "Novell NE4000 PCMCIA Adapter"
ProductHardwareNE4000PCMCIATitle       = "Novell NE4000 PCMCIA Adapter"
ProductHardwareMICRODYNEPCMCIADescription = "Microdyne NE4000 PCMCIA Adapter"
ProductHardwareMICRODYNEPCMCIATitle       = "Microdyne NE4000 PCMCIA Adapter"

FunctionTitle   = $(ProductHardware$(Option)Title)" Card Setup"

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]

Combo1Label = "&IRQ Level:"
Combo2Label = "&Memory Base Address:"
Combo3Label = "I/&O Port Address:"

;no translation needed after this

DlgType = "MultiCombo"
DlgTemplate = "WD"
Caption = $(FunctionTitle)

Combo1List = $(IRQList)
Combo1Out  = $(IRQValue)

Combo2List = $(PcCardAddressHexList)
Combo2Out  = $(PcCardBaseAddress)

Combo3List = $(IOBaseAddrHexList)
Combo3Out  = $(IOBaseAddress)


ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}


EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO, NO}

HelpContext = $(!IDH_DB_OEMNADWD_INS)

#####oemnxppp.inf all
[LanguagesSupported]
    ENG

[OptionsTextENG]
    RASPPTP             = "Point To Point Tunneling Protocol"

;***********************************************************************
;
;***********************************************************************
[FileConstantsENG]
    ProCaption          = "Windows NT Setup"
    ProCancel           = "Cancel"
    ProCancelMsg        = "Windows NT Networking is not correctly installed.  "+
                          "Are you sure you want to cancel copying files?"
    ProCancelCap        = "Network Setup Message"
    ProText1            = "Copying:"
    ProText2            = "To:"

    FunctionTitleRASPPTP                = "PPTP Card Setup"
    ProductSoftwareDescription          = "PPTP Miniport Driver"
    ProductHardwareRASPPTPDescription   = "PPTP Adapter"
    ProductSoftwareTitle                = "PPTP Miniport Driver"
    ProductHardwareRASPPTPTitle         = "PPTP Adapter"

    ProductRASPPTPDescription           = "This is a protocol for tunneling secure remote network communications across Point to Point (PPP) connections to the Internet. "+
                                          "It will allow remote and mobile users to dial into the Internet, using local points of presence and Internet service providers (ISPs) to gain access to corporate networks."
    ProductRASPPTPTitle                 = "Point To Point Tunneling Protocol"

    ShellCodeErrorTitle                 = "Error: "$(FunctionTitle)$(Option))
    ShellCodeErrorText                  = "Shell Code Error."

;RASPPTP_SPECIFIC_START
;***********************************************************************
; These constants are specific to the RASPPTP.sys driver for SMAN
;***********************************************************************
[SMANFileConstantsENG]
    PPTPFunctionTitleRASPPTP                = "PPTP Card Setup"
    PPTPProductSoftwareDescription          = "PPTP Protocol Driver"
    PPTPProductHardwareRASPPTPDescription   = "PPTP Adapter"
    PPTPProductSoftwareTitle                = "PPTP Protocol Driver"
    PPTPProductHardwareRASPPTPTitle         = "PPTP Adapter"

;RASPPTP_SPECIFIC_END

;***********************************************************************
;
;***********************************************************************
[DialogConstantsENG]
    Help                = "&Help"
    Exit                = "Cancel"
    OK                  = "OK"
    HelpContext         = ""
    Continue            = "Continue"
    Cancel              = "Cancel"

;***********************************************************************
;
;***********************************************************************
[FileDependentDlgENG]
    ;Label1              = "&IRQ Level:"
    ;Label2              = "&RAM Base Address:"
    DlgType             = "RadioCombination"
    DlgTemplate         = "NE2000"
    Caption             = $(FunctionTitle)$(Option)
    ;Combo1List          = $(IRQ_List)
    ;Combo1Out           = $(InterruptNumber)
    ;Combo2List          = $(RAM_Hex_List)
    ;Combo2Out           = $(RAM_Hex_Value)
    ;ComboListItemsIn    = {Combo1List, Combo2List}
    ;ComboListItemsOut   = {Combo1Out, Combo2Out}
    EditTextIn          = ""
    EditTextLim         = ""
    CBOptionsGreyed     = {}
    NotifyFields        = {NO, NO}
;    HelpContext         = $(!IDH_DB_OEMNADN2_INS)

;***********************************************************************
;
;***********************************************************************
[InvokeRasDlgENG]
    InvokeRasSetupMsg   = "Remote Access Services (RAS) will now be installed. "+
                          "Please configure the PPTP ports in RAS "+
                          "setup to enable you to use RAS over PPTP."
    InvokeRasConfigMsg  = "Remote Access Services (RAS) setup will now be invoked. "+
                          "Please configure the PPTP ports in RAS "+
                          "setup to enable you to use RAS over PPTP."
    InvokeRasConfigMsg2 = "Remote Access Services (RAS) setup will now be invoked. "+
                          "Please remove the PPTP ports in RAS configuration."

    InvokeRasError      = "PPTP setup encountered an error "+
                          "while invoking the RAS setup INF file (OEMNSVRA.INF). "+
                          "Please make sure that the file is present in the "+
                          "System32 directory and is the proper file."

[InvokeRasSetupDlgENG]
    DlgType      = "MessageBox"
    STF_MB_TEXT  = "Remote Access Services (RAS) is not installed. "+
                   "Do you want to install RAS "+
                   "and add the PPTP ports in RAS setup to enable "+
                   "you to use RAS over PPTP?"$(!LF)$(!LF)+
                   "NOTE: if you are going to install Routing and "+
                   "Remote Access Services beta, choose NO"

    STF_MB_TITLE = "PPTP setup"
    STF_MB_TYPE  = 3
    STF_MB_ICON  = 4
    STF_MB_DEF   = 2

[InvokeRasConfigDlgENG]
    DlgType      = "MessageBox"
    STF_MB_TEXT  = "Do you want to configure Remote Access Services (RAS) "+
                   "and add the PPTP ports in RAS setup to enable "+
                   "you to use RAS over PPTP?"

    STF_MB_TITLE = "PPTP setup"
    STF_MB_TYPE  = 3
    STF_MB_ICON  = 4
    STF_MB_DEF   = 2

;***********************************************************************
;
;***********************************************************************
[InvokeTCPIPDlgENG]
    InvokeTCPSetupMsg   = "TCP/IP is not installed. It will now be installed."
    InvokeTCPError      = "PPTP setup encountered an error "+
                          "while invoking the TCP/IP setup INF file (OEMNXPTC.INF). "+
                          "Please make sure that the file is present in the "+
                          "System32 directory and is the proper file."

;***********************************************************************
;
;***********************************************************************
[InvokeCancelDlgENG]
    InvokeCancelMsg = "PPTP setup is incomplete. "+
                       "Please rerun the Setup Program if you want "+
                       "to install PPTP."

;***********************************************************************
;
;***********************************************************************
[InvokeConfigureDlgENG]
    InvokeConfigureMsg = "Please reboot for the new changes to take effect."

#####oemnsvbr.inf all
[LanguagesSupported]
    ENG

[OptionsTextENG]
    RelayAgent = "DHCP Relay Agent"

[FileConstantsENG]
FunctionTitle                   = "Relay Agent Setup"
ProductSoftwareDescription      = "Enables the Windows NT Server to forward DHCP (Dynamic Host Configuration Protocol) broadcasts across a router to a remote DHCP server."
ProductSoftwareDisplayName      = "DHCP Relay Agent"
ProductSoftwareTitle            = "DHCP Relay Agent"
ErrorTCPIPNotInstalled          = "TCP/IP is not installed. Please install TCP/IP and retry this installation."
ShellCodeErrorTitle             = "Error: "$(FunctionTitle)
ShellCodeErrorText              = "Shell Code Error."
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"

[DefaultsENG]

[DialogConstantsENG]
Help            = "&Help"
Exit            = "Cancel"
OK              = "OK"
HelpContext     = ""
Continue        = "Continue"
Cancel          = "Cancel"

[FileDependentDlgENG]

#####oemnsvsm.inf all
[LanguagesSupported]
ENG
[OptionsTextENG]
SFM      = "Services for Macintosh"

[FileConstantsENG]

FunctionTitle                   =  "Services for Macintosh Setup"
ProductATALKDescription         =  "Enables a Macintosh computer to access shared disk space on your computer."
ProductAFPSVCDescription        =  "AppleTalk File Server"
ProductMACPRINTDescription      =  "AppleTalk Print Server"
ProductSFMDescription           =  "Enables a Windows NT Server to act as an AppleTalk router, allowing PC and Macintosh clients to share files and printers."


ProCaption      = $(FunctionTitle)
ProCancel       = "Cancel"
ProCancelMsg    = "Services for Macintosh is not correctly installed. "+
                  "Are you sure you want to cancel copying files ?"
ProCancelCap    = "Services for Macintosh Setup"
ProText1        = "Copying:"
ProText2        = "To:"
Error           = "User has cancelled copying files. Copied files will be removed."

MajorVersion    = "MajorVersion"
MinorVersion    = "MinorVersion"
Version         =  "Version "

AskLocationText = "Setup needs to copy Services for Macintosh files."$(!LF)$(!LF)+
                  "Setup will look for the files in the location specified below. If you want "+
                  "Setup to look in a different place, type the new location. When the location "+
                  "is correct, click Continue."

ProductSFMTitle                 = "Services for Macintosh"
ProductATALKDisplayName         = "AppleTalk Protocol"
ProductATALKTitle               = "AppleTalk Protocol"
ProductAFPSVCDisplayName        = "File Server for Macintosh"
ProductAFPSVCTitle              = "File Server for Macintosh"
ProductAFPSRVRDisplayName       = "SFM Kernel Driver"
ProductMACPRINTDisplayName      = "Print Server for Macintosh"
ProductMACPRINTTitle            = "Print Server for Macintosh"


!UAMVolumeName                  = "Microsoft UAM Volume"
!AtalkMonName                   = "AppleTalk Printing Devices"
!AtalkMonEventLogName           = "AppleTalk Print Monitor"

!AppleShareFolder                       = "AppleShare Folder"
!UamReadMeDestFile                      = "ReadMe.UAM"

GroupName    = "Administrative Tools"
IconName     = "File Manager"


[DialogConstantsENG]

Help        = "&Help"
Exit        = "E&xit Setup"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[UAMVarsENG]
UAMDirName     =       "Microsoft UAM Volume"
UAMPath        =       $(UAMDrive)"\"$(UAMDirName)

[TCCommentsENG]

!XCEL1COMMENT   = "Comment=MS Excel 3.0 Chart"
!XCEL2COMMENT   = "Comment=MS Excel 3.0 Spreadsheet"
!XCEL3COMMENT   = "Comment=MS Excel 3.0 Macrosheet"
!XCEL4COMMENT   = "Comment=MS Excel 3.0 Workspace"
!XCEL5COMMENT   = "Comment=MS Excel 3.0 Add-in MacroFile"
!XCEL6COMMENT   = "Comment=MS Excel 3.0 Template File"
!XCEL7COMMENT   = "Comment=MS Excel 3.0"
!XCEL8COMMENT   = "Comment=MS Excel 4.0 Chart"
!XCEL9COMMENT   = "Comment=MS Excel 4.0 Spreadsheet"
!XCEL10COMMENT  = "Comment=MS Excel 4.0 Macrosheet"
!XCEL11COMMENT  = "Comment=MS Excel 4.0 WorkSpace"
!XCEL12COMMENT  = "Comment=MS Excel 4.0 Add-in MacroFile"
!XCEL13COMMENT  = "Comment=MS Excel 4.0 Template File"
!MSWD1COMMENT   = "Comment=MS Word 5.1 Document"
!MSWD2COMMENT   = "Comment=MS Word 5.1 Document"
!MSWD3COMMENT   = "Comment=MS Word 6.0 Document"
!MSWD4COMMENT   = "Comment=MS Word 6.0 Template"
!MSPJ1COMMENT   = "Comment=MS Project 4.0"
!MSPJ2COMMENT   = "Comment=MS Project 4.0 Exchange File"
!MSPJ3COMMENT   = "Comment=MS Project 4.0 Calendar"
!MSPJ4COMMENT   = "Comment=MS Project 4.0 View"
!MSPJ5COMMENT   = "Comment=MS Project 4.0 WorkSpace"
!MSPJ6COMMENT   = "Comment=MS Project 4.0 Template"
!ALD31COMMENT   = "Comment=Pagemaker 3.0  Publication"
!ALD32COMMENT   = "Comment=Pagemaker 3.0 Template"
!ALD33COMMENT   = "Comment=Pagemaker 3.0 Tiff Graphics"
!ALD41COMMENT   = "Comment=Pagemaker 4.0 Publication"
!ALD42COMMENT   = "Comment=Pagemaker 4.0 Template"
!ALD43COMMENT   = "Comment=Pagemaker 4.0 Tiff Graphics"
!MORECOMMENT    = "Comment=Symantec More File"
!FOX+COMMENT    = "Comment=FoxBase Plus"
!ARTZCOMMENT    = "Comment=Adobe Illustrator"
!SIT!COMMENT    = "Comment=Aladdin Stuffit"
!PPT2COMMENT    = "Comment=MS PowerPoint 2.0"
!PPT3COMMENT    = "Comment=MS PowerPoint 3.0"
!L123COMMENT    = "Comment=Lotus 1-2-3"
!LMANCOMMENT    = "Comment=LMAN Executables"
!TTXTCOMMENT    = "Comment=Teach Text Document"
!FOXX1COMMENT   = "Comment=FoxPro 2.0 Table"
!FOXX2COMMENT   = "Comment=FoxPro 2.0 Memo"
!FOXX3COMMENT   = "Comment=FoxPro 2.0 Index"
!FOXX4COMMENT   = "Comment=FoxPro 2.0 Compound Index"
!FOXX5COMMENT   = "Comment=FoxPro 2.0 Program"
!FOXX6COMMENT   = "Comment=FoxPro 2.0 Report"
!FOXX7COMMENT   = "Comment=FoxPro 2.0 Report Memo"
!FOXX8COMMENT   = "Comment=FoxPro 2.0 Label"
!FOXX9COMMENT   = "Comment=FoxPro 2.0 Label Memo"
!FOXX10COMMENT   = "Comment=FoxPro 2.0 Screen"
!FOXX11COMMENT   = "Comment=FoxPro 2.0 Screen Memo"
!FOXX12COMMENT   = "Comment=FoxPro 2.0 Menu"
!FOXX13COMMENT   = "Comment=FoxPro 2.0 Menu Memo"
!FOXX14COMMENT   = "Comment=FoxPro 2.0 Gen. Query Program"
!FOXX15COMMENT   = "Comment=FoxPro 2.0 Project"
!FOXX16COMMENT   = "Comment=FoxPro 2.0 Project Memo"

;------------------------------------------------------------------
; Express /Custom Mode Install Dialog - Used In Initial Setup Only
;------------------------------------------------------------------

[SetupSpaceDlgENG]
STF_MB_TEXT = +
"Setup could not find enough space on your Windows NT Server system partition. "+
"Setup requires at least 2 MB for installing Services for Macintosh. "+
"You can retry installation after freeing up disk space on your system partition."


;no translation needed after this

DlgType         = "MessageBox"
STF_MB_TYPE     = 5
STF_MB_ICON     = 3
STF_MB_DEF      = 3
STF_MB_TITLE    = $(FunctionTitle)

;no translation needed after this

[ExitWarningDlgENG]
STF_MB_TITLE    = "Services for Macintosh Setup"
STF_MB_TEXT     = "Services for Macintosh is not correctly installed. Are you "+
                  "sure you want to exit Setup?"

;no translation needed after this

DlgType         = "MessageBox"
STF_MB_TYPE     = 3
STF_MB_ICON     = 5
STF_MB_DEF      = 2

;------------------------------------------------------------------
; Error Strings
;------------------------------------------------------------------

;------------------------------------------------------------------
; Miscellaneous Errors
;------------------------------------------------------------------

[MiscErrorString1ENG]
ErrorString = +
" of Services for Macintosh is already installed on your system. "+
"Use [Update] to update to newer versions."


[MiscErrorString2ENG]
ErrorString = +
"Sufficient memory is not available on your system to run  "+
"Services for Macintosh. Services for Macintosh requires "+
"a minimum of 8 MB to function."


[MiscErrorString3ENG]
ErrorString = +
"Setup encountered the following error during installation. Try installing "+
"Services for Macintosh after rebooting your system. "$(LF)

[ShellingErrorENG]
ErrorString  = +
"An internal error occurred. Contact Technical Support."

[NTFSFormatHappeningENG]
ErrorString = +
"Setup could not find any NTFS partitions in your system. You could be "+
"reformatting or converting your existing NTFS partition. The Microsoft UAM "+
"volume cannot be installed at this time. Setup will proceed with installation. "+
"Use the command SETUP /i OEMNSVSM.INF /c UAMINSTALL to install the UAM volume "+
"after Windows NT Server installation."


[UamFileNotCopiedENG]
ErrorString  = +
"Setup cannot copy Microsoft user authentication files to the Microsoft UAM "+
"volume. Macintosh workstations will be unable to download these files. There "+
"may not be enough disk space on your NTFS partition or the UAM files might be "+
"missing from your Windows NT Server distribution disks. Refer to your Administrator's guide "+
"on how to create this volume after installation."

[UamFileNotCopied1ENG]
ErrorString  = +
"Setup cannot copy Microsoft user authentication files to the Microsoft UAM "+
"volume. Macintosh workstations will be unable to download these files. There "+
"may not be enough disk space on your NTFS partition or the UAM files might be "+
"missing from your Windows NT Server distribution disks. Refer to your Administrator's guide "+
"on how to create this volume after installation."

[UamSecurityNotSetENG]
ErrorString = +
"Setup cannot set the default security settings for the UAM volume. "+
"Security for the UAM volume can also be set from the User Manager "+
"after installation."

[CannotStartAtalkENG]
ErrorSuffix = +
"Setup was unable to start the AppleTalk Protocol. You will be unable to choose "+
"a desired zone at this time."

[CannotStartAfdENG]
ErrorSuffix = +
"Setup was unable to start the AFD Driver. You will be unable to choose "+
"a desired zone at this time."

;------------------------------------------------------------------
; Status Strings
;------------------------------------------------------------------


[StatusInstallSfmENG]
Status = "Installing Services for Macintosh..."

[StatusRemoveSfmENG]
Status = "Removing Services for Macintosh files..."

[StatusStartingAppleTalkENG]
Status = "Starting AppleTalk Protocol..."



;------------------------------------------------------------------
; AppleTalk Transport Error Strings
;------------------------------------------------------------------

[AtalkString1ENG]
ErrorString  = +
"Setup cannot add Windows sockets support for the AppleTalk protocol. "+
"Windows sockets applications will be unable to use the AppleTalk Protocol. "+
"Remove Services for Macintosh after installation and re-install. If the problem "+
"persists, contact Microsoft support."

[AtalkString2ENG]
ErrorString  = +
"Setup cannot remove Windows Sockets support for the AppleTalk protocol."


[AtalkString3ENG]
ErrorString  = +
"Services for Macintosh has just been installed. Services will be "+
"available to Macintosh workstations in the default network. If you would like "+
"the services to appear in a different zone or to configure routing, close "+
"the Control Panel, reboot, start AppleTalk and use the Control Panel "+
"to configure Services for Macintosh."

[AtalkString5ENG]
ErrorString = +
"Setup cannot remove the monitor for the Print Server for Macintosh."

[AFPString1ENG]
ErrorString = +
"Setup cannot find an NTFS partition on your system. "+
"Services for Macintosh requires an NTFS partition for "+
"Macintosh workstations to share files. You can create "+
"the NTFS partition after installing Services for Macintosh. "+
"To format a partition to NTFS, use the command, format [drive] /fs:NTFS. "+
"Setup will proceed with installation."


[AFPString2ENG]
ErrorString = +
"Setup cannot add the Macintosh File Server to the File Manager. "+
"You will be unable to work with Macintosh accessible volumes from "+
"File Manager."


[AFPString3ENG]
ErrorString  = +
"Setup cannot add the Macintosh File Server to the Server Manager. "+
"You will be unable to work with Services for Macintosh servers from "+
"Server Manager."

[AFPString11ENG]
ErrorString  = +
"Setup can not find the volumes key in the MacFile section in registry. "+
"The UAM volume cannot be built."

[AFPString12ENG]
ErrorString  = +
"Setup can not find any NTFS volumes in your system. The UAM volume can not be installed."


[MacPrintString2ENG]
ErrorString = +
"Setup cannot create the eventlog entries for the Print Server for Macintosh. "+
"You will be unable to use the event viewer to see the log for Print Server "+
"for Macintosh."

[MacPrintString3ENG]
ErrorString = +
"Setup cannot add the print processor for the Print Server for Macintosh. "+
"Macintosh workstations will be unable to print postscript jobs to a "+
"non-postscript printer on the Windows NT Server network."

[MacPrintString4ENG]
ErrorString = +
"Setup cannot add the print monitor for the Print Server for Macintosh. "+
"Macintosh workstations will be unable to use print services on this "+
"Windows NT Server."

[MacPrintString5ENG]
ErrorString = +
"Setup cannot remove the print processor for the Print Server for Macintosh."

[MacPrintString6ENG]
ErrorString = +
"Setup can not find the directory to install the Macintosh print processor. "+
"The Macintosh print processor will not be installed."

[MacPrintString7ENG]
ErrorString = +
"Setup cannot remove the monitor for the Print Server for Macintosh."


[MacPrintString10ENG]
ErrorString = +
"Setup cannot create the eventlog entries for the Print Server for Macintosh monitor. "+
"You will be unable to use the event viewer to see the log for Print Server "+
"for Macintosh."


[NoAdaptersFoundENG]

ErrorString = +
"Setup cannot find any network adapter for Services for Macintosh. You will "+
"be unable to use Services for Macintosh. Try adding a network adapter or "+
"enable the bindings for AppleTalk Protocol."

[RemoveDefaultPortENG]
ErrorString  = +
"Setup has detected that the default network adapter used by Services "+
"for Macintosh has been removed. Setup will change the default network, if "+
"one is available. This may cause Macintosh workstations to no longer "+
"see Services for Macintosh on their current zone."

#####oemnxpsm.inf all

[LanguagesSupported]
   ENG
[OptionsTextENG]
   ATALK           = "AppleTalk Protocol"

[FileConstantsENG]
ProductSFMADMTitle              = "Macintosh Administrator Tools"
ProductSFMADMDescription        = "Macintosh Administrator Tools"
ProductATALKTitle               = "AppleTalk Protocol"
ProductSFMADMName               = "SFMADM"
FunctionTitle               = "AppleTalk Protocol Setup"
ProductATALKDescription     = "Enables a Macintosh computer to access shared disk space on your computer."


ProCaption      = $(FunctionTitle)
ProCancel       = "Cancel"
ProCancelMsg    = "AppleTalk Protocol is not correctly installed. "+
                  "Are you sure you want to cancel copying files ?"
ProCancelCap    = "AppleTalk Protocol Setup"
ProText1        = "Copying:"
ProText2        = "To:"
Error           = "User has cancelled copying files. Copied files will be removed."

MajorVersion    = "MajorVersion"
MinorVersion    = "MinorVersion"
Version         =  "Version "
OF              = " of "

!AtalkMonName                   = "AppleTalk Printing Devices"
!AtalkMonEventLogName   = "AppleTalk Print Monitor"

AskLocationText = "Setup needs to copy AppleTalk Protocol files."$(!LF)$(!LF)+
                  "Setup will look for the files in the location specified below. If you want "+
                  "Setup to look in a different place, type the new location. When the location "+
                  "is correct, click Continue."

[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"

[ExitWarningDlgENG]
STF_MB_TITLE    = "AppleTalk Protocol Setup"
STF_MB_TEXT     = "AppleTalk Protocol is not correctly installed. Are you "+
                  "sure you want to exit Setup?"

;no translation needed after this

DlgType         = "MessageBox"
STF_MB_TYPE     = 3
STF_MB_ICON     = 5
STF_MB_DEF      = 2

;------------------------------------------------------------------
; Error Strings
;------------------------------------------------------------------

;------------------------------------------------------------------
; Miscellaneous Errors
;------------------------------------------------------------------

[MiscErrorString1ENG]
ErrorString = +
" is already installed on your system. "+
"Use [Update] to update to newer versions."

[SfmAlreadyInstalledENG]
ErrorString = +
" of Services for Macintosh is already installed on your system. "+
"You have to remove Services for Macintosh before installing the "+
"AppleTalk Protocol."

[MiscErrorString3ENG]
ErrorString = +
"Setup encountered the following error during installation. Try installing "+
"after rebooting your system. "$(LF)

[ShellingErrorENG]
ErrorString  = +
"An internal error occurred. Contact Technical Support."

[CannotStartAtalkENG]
ErrorSuffix = +
"Setup was unable to start the AppleTalk Protocol. You will be unable to choose "+
"a desired zone at this time."

[CannotStartAfdENG]
ErrorSuffix = +
"Setup was unable to start the AFD Driver. You will be unable to choose "+
"a desired zone at this time."

[StatusStartingAppleTalkENG]
Status = "Starting AppleTalk Protocol..."

;------------------------------------------------------------------
; AppleTalk Transport Error Strings
;------------------------------------------------------------------

[AtalkString1ENG]
ErrorString  = +
"Setup cannot add Windows sockets support for the AppleTalk protocol. "+
"Windows sockets applications will be unable to use the AppleTalk Protocol. "+
"Remove Services for Macintosh after installation and re-install. If the problem "+
"persists, contact Microsoft support."

[AtalkString2ENG]
ErrorString  = +
"Setup cannot remove Windows Sockets support for the AppleTalk protocol."


[AtalkString3ENG]
ErrorString  = +
"AppleTalk has just been installed. "+
"If you would like to configure AppleTalk, close "+
"the Control Panel, reboot, start AppleTalk and use the Control Panel "+
"to configure."

[AtalkString4ENG]
ErrorString = +
"Setup cannot add the print monitor for the Print Server for Macintosh. "+
"Macintosh workstations will be unable to use print services on this "+
"Windows NT workstation."

[AtalkString5ENG]
ErrorString = +
"Setup cannot remove the monitor for the Print Server for Macintosh."

[AtalkString6ENG]
"Setup cannot create the eventlog entries for the Print Server for Macintosh monitor. "+
"You will be unable to use the event viewer to see the log for Print Server "+
"for Macintosh."

[AtalkString7ENG]
ErrorString = +
"Services for Macintosh is installed on your system and it requires "+
"AppleTalk Protocol for proper operation."+
"You have to remove Services for Macintosh if you desire to remove "+
"AppleTalk Protocol."

[AFPString2ENG]
ErrorString = +
"Setup cannot add the Macintosh File Server to the File Manager. "+
"You will be unable to work with Macintosh accessible volumes from "+
"File Manager."


[AFPString3ENG]
ErrorString  = +
"Setup cannot add the Macintosh File Server to the Server Manager. "+
"You will be unable to work with Services for Macintosh servers from "+
"Server Manager."

[NoAdaptersFoundENG]

ErrorString = +
"Setup cannot find any network adapter for the AppleTalk Protocol. You will "+
"be unable to use AppleTalk Protocol. Try adding a network adapter or "+
"enable the bindings for AppleTalk Protocol."

[RemoveDefaultPortENG]
ErrorString  = +
"Setup has detected that the default network adapter used by AppleTalk "+
"Protocol has been removed. Setup will change the default network, if "+
"one is available."

[CantConfigureADMENG]
ErrorString = +
"You cannot configure this software component."

[RemovingSFMENG]
Message = "You have Services for Macintosh (SFM) installed on your "+
          "Windows NT Workstation. "+
          "SFM is only supported on the Windows NT Server. "+
          "Your SFM installation will be removed since this is not a "+
          "supported configuration. "+
          "Please install the Windows NT Server if you want to run SFM."


#####netbond.inf all
[MessageTextENG]
ProCaption   = "Windows NT Networking Installation"
ProCancel    = "Cancel"
MPreInstall1 = "Setup is installing the "
MPreInstall2 = "..."
MPostInstall = " has been installed."
ProCancelMsg = "Windows NT is not correctly installed.  Are you sure you want "+
                   "to cancel copying files?"
ProCancelCap = "Setup Message"
MPreUpgrade1 = "Setup is upgrading the "
MPostUpgrade = " has been upgraded."

MPreRemove1 = "Setup is removing the "
MPreRemove2 = "..."
MPostRemove = " has been removed."

[FatalErrorENG]
; do not translate the string on the left of the '='
Error = "Setup was unable to process the INF file "$(FailedInfFile)" which is required "+
        "for network installation."

[ErrorMsgENG]
CannotFindNtFiles = "The Windows NT files were not found in "$(Path1)", "$(Path2)", or "$(Path3)". Please make sure your input path is correct."

[FatalDlgENG]
STF_MB_TITLE = "Setup Message"
; no translation starting now
DlgType = "MessageBox"
STF_MB_TEXT  = $(Error)
STF_MB_TYPE  = 1
STF_MB_ICON  = 3
STF_MB_DEF   = 1
; end of no translation zone

[UpgradeWarnings]
; do not translate the string on the left of the '='
Warning = "You have the following product installed on your computer:  "$(ServiceTitle)".  Windows NT cannot upgrade this component.  Please contact your system administrator  or look through your product documentation to make sure that this product is compatible with this version of Windows NT."

[UpgradeNetCardWarnings]
; do not translate the string on the left of the '='
Warning = "The following non-Microsoft networking component is installed on this computer:  "$(ServiceTitle)".  Although your network connection may function properly after the upgrade is completed,  the component should be removed and replaced with a newer version."

[WarningDlg]
STF_MB_TITLE = "Network Setup Information"

; no translation starting now
DlgType = "MessageBox"
STF_MB_TEXT  = $(Warning)
STF_MB_TYPE  = 1
STF_MB_ICON  = 2
STF_MB_DEF   = 1
; end of no translation zone

[UpgradeDialogENG]
    ProCaption   = "Windows NT Networking Upgrade"
    ProCancel    = "Cancel"
    ProCancelMsg = "Windows NT is not correctly upgraded.  Are you sure you want "+
                   "to cancel copying files?"
    ProCancelCap = "Network Upgrade Message"
    ProText1     = "Copying:"
    ProText2     = "To:"

#####oemnsvin.inf all
[LanguagesSupported]
    ENG


;-----------------------------------------------------------------------
; OPTION TEXT SECTION
; -------------------
; These are text strings used to identify the option to the user.  There
; are separate sections for each language supported.  The format of the
; section name is "OptionsText" concatenated with the Language represented
; by the section.
;
;-----------------------------------------------------------------------

[OptionsWINNTTextENG]
    INETSRV      = "Microsoft Peer Web Services"

[OptionsLANMANNTTextENG]
    INETSRV      = "Microsoft Internet Information Server 2.0"

;***********************************************************************
; Language-Dependent Dialog Constants
;***********************************************************************
[FileConstantsENG]
;
;  Variables to support thermometer gauge and error dialogs
;
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"

ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"


;
; Product Info
;
FunctionLANMANNTTitle    = "Microsoft Internet Information Server 2.0"
FunctionWINNTTitle = "Microsoft Peer Web Services"
;
; Software
;
ProductSoftwareWINNTDescription      = "Microsoft Peer Web Services"
ProductSoftwareLANMANNTDescription   = "Microsoft Internet Information Server 2.0"
;
; Hardware
;
OptionList     = ^(Options, 1)
OptionTextList = ^(OptionsTextENG, 1)

ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
ShellCodeErrorText      = "Shell Code Error."

Warning1 = "Please use Internet Manager to configure the software."
Warning2Winnt = "Microsoft Peer Web Services may be deleted by another process. Please restart your Network Control Panel applet."
Warning2LanmanNt = "Microsoft Internet Information Server may be deleted by another process. Please restart your Network Control Panel applet."
Warning3Winnt = "Microsoft Peer Web Services may be installed by another process. Please restart your Network Control Panel applet."
Warning3LanmanNt = "Microsoft Internet Information Server may be installed by another process. Please restart your Network Control Panel applet."
Warning4Winnt = "Microsoft Peer Web Services cannot be installed without proper network protocol setup. Please make sure your network protocol is installed."
Warning4LanmanNt = "Microsoft Internet Information Server cannot be installed without proper network protocol setup. Please make sure your network protocl is installed."

[DialogConstantsENG]
;
; Common button names, etc.
;
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "C&ontinue"
Cancel      = "C&ancel"

;-----------------------------------------------
; Input DIALOGS
;-----------------------------------------------
[FileDependentDlgENG]
;
; No UI for sonic
;

#####oemnadsn.inf all
[LanguagesSupported]
    ENG

[OptionsTextENG]
    SNIMAC      = "SNI RM400/RM200 Driver for onboard Ethernet Adapter"

[FileConstantsENG]
    ProCaption   = "Windows NT Setup"
    ProCancel    = "Cancel"
    ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
                   "Are you sure you want to cancel copying files?"
    ProCancelCap = "Network Setup Message"
    ProText1     = "Copying:"
    ProText2     = "To:"
    FunctionTitle                   = "SNI RM400/RM200 onboard Ethernet Adapter Card Setup"
    ProductSoftwareDescription      = "SNI RM400/RM200 onboard Ethernet Adapter Driver"
    OptionList     = ^(Options, 1)
    OptionTextList = ^(OptionsTextENG, 1)
    ProductHardwareDescription      = *($(OptionTextList), ~($(OptionList), $(Option)))
    ProductSoftwareTitle            = "SNI RM400/RM200 onboard Ethernet Adapter Driver"
    ProductHardwareSNIMACx00Title      = "SNI RM400/RM200 onboard Ethernet Adapter"
    ShellCodeErrorTitle     = "Error: "$(FunctionTitle)
    ShellCodeErrorText      = "Shell Code Error."

[DialogConstantsENG]
    Help        = "&Help"
    Exit        = "Cancel"
    OK          = "OK"
    HelpContext = ""
    Continue    = "C&ontinue"
    Cancel      = "C&ancel"

[FileDependentDlgENG]

[Warning1ENG]
    Error = "No configuration is required for this adapter card."



#####oemnadma.inf all
[LanguagesSupported]
    ENG

;-----------------------------------------------------------------------
; Text strings to identify adapter options.
;-----------------------------------------------------------------------

[OptionsTextENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPISA   = "Madge Smart 16/4 AT Ringnode"
    MSMDGMPATP   = "Madge Smart 16/4 AT Plus Ringnode"
    MSMDGMPISAC  = "Madge Smart 16/4 ISA Client Ringnode"
    MSMDGMPISACP = "Madge Smart 16/4 ISA Client Plus Ringnode"
    MSMDGMPPC    = "Madge Smart 16/4 PC Ringnode"
    MSMDGMPSM16  = "Madge Smart 16 Ringnode"
    MSMDGMPPNP   = "Madge Smart 16/4 ISA Client PnP Ringnode"
    MSMDGMPMCA   = "Madge Smart 16/4 MC Ringnode"
    MSMDGMPMC32  = "Madge Smart 16/4 MC32 Ringnode"
    MSMDGMPEISA  = "Madge Smart 16/4 EISA Ringnode"
    MSMDGMPPCI   = "Madge Smart 16/4 PCI Ringnode"
    MSMDGMPPCIBM = "Madge Smart 16/4 PCI Ringnode (BM)"
    MSMDGMPPCMCIA = "Madge Smart 16/4 PCMCIA Ringnode"

[OptionsTextISAENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPISA   = "Madge Smart 16/4 AT Ringnode"
    MSMDGMPATP   = "Madge Smart 16/4 AT Plus Ringnode"
    MSMDGMPISAC  = "Madge Smart 16/4 ISA Client Ringnode"
    MSMDGMPISACP = "Madge Smart 16/4 ISA Client Plus Ringnode"
    MSMDGMPPC    = "Madge Smart 16/4 PC Ringnode"
    MSMDGMPSM16  = "Madge Smart 16 Ringnode"
    MSMDGMPPNP   = "Madge Smart 16/4 ISA Client PnP Ringnode"

[OptionsTextMCAENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPMCA   = "Madge Smart 16/4 MC Ringnode"
    MSMDGMPMC32  = "Madge Smart 16/4 MC32 Ringnode"

[OptionsTextEISAENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPEISA  = "Madge Smart 16/4 EISA Ringnode"
    MSMDGMPISA   = "Madge Smart 16/4 AT Ringnode"
    MSMDGMPATP   = "Madge Smart 16/4 AT Plus Ringnode"
    MSMDGMPISAC  = "Madge Smart 16/4 ISA Client Ringnode"
    MSMDGMPISACP = "Madge Smart 16/4 ISA Client Plus Ringnode"
    MSMDGMPPC    = "Madge Smart 16/4 PC Ringnode"
    MSMDGMPSM16  = "Madge Smart 16 Ringnode"
    MSMDGMPPNP   = "Madge Smart 16/4 ISA Client PnP Ringnode"

[OptionsTextPCIENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPPCI   = "Madge Smart 16/4 PCI Ringnode"
    MSMDGMPPCIBM = "Madge Smart 16/4 PCI Ringnode (BM)"

[OptionsTextPCMCIAENG]
;    MSMDGMPAUTO  = "Madge Automated Smart Ringnode Installation"
    MSMDGMPPCMCIA = "Madge Smart 16/4 PCMCIA Ringnode"


; ----------------------------------------------------------------------
; Miscellaneous declarations for initialsing lists.
; ----------------------------------------------------------------------

[IoLocationChoices]
    "0x0300",768
    "0x0a20",2592
    "0x1a20",6688
    "0x2a20",10784
    "0x3a20",14880
    "0x4a20",18976
    "0x4e20",20000
    "0x5a20",23072
    "0x5e20",24096
    "0x6a20",27168
    "0x6e20",28192
    "0x7a20",31264
    "0x7e20",32288
    "0x0140",320
    "0x0920",2336
    "0x0940",2368
    "0x0960",2400
    "0x0980",2432
    "0x0a40",2624
    "0x0a60",2656
    "0x0a80",2688
    "0x0aa0",2720
    "0x0b20",2848
    "0x0b40",2880
    "0x0b60",2912
    "0x0b80",2944
    "UNKNOWN",65535

[DmaChannelChoices]
    "PIO",0
    "DMA Channel 01",1
    "DMA Channel 02",2
    "DMA Channel 03",3
    "DMA Channel 04",4
    "DMA Channel 05",5
    "DMA Channel 06",6
    "DMA Channel 07",7
    "DMA Channel 08",8
    "DMA Channel 09",9
    "DMA Channel 10",10
    "DMA Channel 11",11
    "DMA Channel 12",12
    "DMA Channel 13",13
    "DMA Channel 14",14
    "DMA Channel 15",15
    "DMA",500
    "MMIO",501
    "UNKNOWN",65535

[IrqNumberChoices]
    "01",1
    "02",2
    "03",3
    "04",4
    "05",5
    "06",6
    "07",7
    "08",8
    "09",9
    "10",10
    "11",11
    "12",12
    "13",13
    "14",14
    "15",15
    "UNKNOWN",65535

[SlotNumberChoices]
    "00",0
    "01",1
    "02",2
    "03",3
    "04",4
    "05",5
    "06",6
    "07",7
    "08",8
    "09",9
    "10",10
    "11",11
    "12",12
    "13",13
    "14",14
    "15",15
    "16",16
    "17",17
    "18",18
    "19",19
    "20",20
    "21",21
    "22",22
    "23",23
    "24",24
    "25",25
    "26",26
    "27",27
    "28",28
    "29",29
    "30",30
    "31",31
    "UNKNOWN",65535

[RxTxSlotsChoices]
    "Rx=02 Tx=02",0
    "Rx=03 Tx=03",1
    "Rx=04 Tx=04",2
    "Rx=06 Tx=06",3
    "Rx=08 Tx=08",4
    "Rx=10 Tx=10",5

[StatsChoices]
    "Disabled",0
    "Enabled",1

[MpChoices]
    "One",0
    "Multiple",1
    "UNKNOWN",65535
; ----------------------------------------------------------------------
; Language dependent constants specific to the driver.
; ----------------------------------------------------------------------

[FileConstantsENG]

;
; Product Info
;

FunctionTitle   = "MdgMPort v"$(ProductVersion)": Madge Smart Ringnode Setup"

;
; Software.
;

ProductSoftwareTitle       = "MdgMPort"
ProductSoftwareDescription = "MdgMPort: Madge Smart Ringnode NDIS3 Miniport Driver"

;
; Hardware.
;

ProductHardwareMSMDGMPISATitle   = "Madge Smart 16/4 AT Ringnode"
ProductHardwareMSMDGMPATPTitle   = "Madge Smart 16/4 AT Plus Ringnode"
ProductHardwareMSMDGMPISACTitle  = "Madge Smart 16/4 ISA Client Ringnode"
ProductHardwareMSMDGMPISACPTitle = "Madge Smart 16/4 ISA Client Plus Ringnode"
ProductHardwareMSMDGMPPCTitle    = "Madge Smart 16/4 PC Ringnode"
ProductHardwareMSMDGMPEISATitle  = "Madge Smart 16/4 EISA Ringnode"
ProductHardwareMSMDGMPMCATitle   = "Madge Smart 16/4 MC Ringnode"
ProductHardwareMSMDGMPMC32Title  = "Madge Smart 16/4 MC32 Ringnode"
ProductHardwareMSMDGMPSM16Title  = "Madge Smart 16 Ringnode"
ProductHardwareMSMDGMPPNPTitle   = "Madge Smart 16/4 ISA Client PnP Ringnode"
ProductHardwareMSMDGMPPCITitle   = "Madge Smart 16/4 PCI Ringnode"
ProductHardwareMSMDGMPPCIBMTitle = "Madge Smart 16/4 PCI Ringnode (BM)"
ProductHardwareMSMDGMPPCMCIATitle  = "Madge Smart 16/4 PCMCIA Ringnode"

ProductHardwareMSMDGMPISADescription   = "Madge Smart 16/4 AT Ringnode"
ProductHardwareMSMDGMPATPDescription   = "Madge Smart 16/4 AT Plus Ringnode"
ProductHardwareMSMDGMPISACDescription  = "Madge Smart 16/4 ISA Client Ringnode"
ProductHardwareMSMDGMPISACPDescription = "Madge Smart 16/4 ISA Client Plus Ringnode"
ProductHardwareMSMDGMPPCDescription    = "Madge Smart 16/4 PC Ringnode"
ProductHardwareMSMDGMPEISADescription  = "Madge Smart 16/4 EISA Ringnode"
ProductHardwareMSMDGMPMCADescription   = "Madge Smart 16/4 MC Ringnode"
ProductHardwareMSMDGMPMC32Description  = "Madge Smart 16/4 MC32 Ringnode"
ProductHardwareMSMDGMPSM16Description  = "Madge Smart 16 Ringnode"
ProductHardwareMSMDGMPPNPDescription   = "Madge Smart 16/4 ISA Client PnP Ringnode"
ProductHardwareMSMDGMPPCIDescription   = "Madge Smart 16/4 PCI Ringnode"
ProductHardwareMSMDGMPPCIBMDescription = "Madge Smart 16/4 PCI Ringnode (BM)"
ProductHardwareMSMDGMPPCMCIADescription   = "Madge Smart 16/4 PCMCIA Ringnode"

;
; Ring speed selection.
;

SpeedUserListMSMDGMPISA    = {"Set at adapter", "Force 16 MBit/s"}
SpeedRawListMSMDGMPISA     = {0, 2}

SpeedUserListMSMDGMPATP    = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPATP     = {0, 1, 2}

SpeedUserListMSMDGMPISAC   = {"Set at adapter", "Force 16 MBit/s"}
SpeedRawListMSMDGMPISAC    = {0, 2}

SpeedUserListMSMDGMPISACP  = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPISACP   = {0, 1, 2}

SpeedUserListMSMDGMPPC     = {"Set at adapter", "Force 16 MBit/s"}
SpeedRawListMSMDGMPPC      = {0, 2}

SpeedUserListMSMDGMPEISA   = {"Set at adapter"}
SpeedRawListMSMDGMPEISA    = {0}

SpeedUserListMSMDGMPMCA    = {"Set at adapter"}
SpeedRawListMSMDGMPMCA     = {0}

SpeedUserListMSMDGMPMC32   = {"Set at adapter"}
SpeedRawListMSMDGMPMC32    = {0}

SpeedUserListMSMDGMPSM16   = {"Always 16 MBit/s"}
SpeedRawListMSMDGMPSM16    = {0}

SpeedUserListMSMDGMPPNP    = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPPNP     = {0, 1, 2}

SpeedUserListMSMDGMPPCI    = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPPCI     = {0, 1, 2}

SpeedUserListMSMDGMPPCIBM  = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPPCIBM   = {0, 1, 2}

SpeedUserListMSMDGMPPCMCIA = {"Set at adapter", "Force 4 MBit/s", "Force 16 MBit/s"}
SpeedRawListMSMDGMPPCMCIA  = {0, 1, 2}

;
; Adapter types.
;

AdapterTypeFlagMSMDGMPISA    = 100
AdapterTypeFlagMSMDGMPATP    = 100
AdapterTypeFlagMSMDGMPISAC   = 100
AdapterTypeFlagMSMDGMPISACP  = 100
AdapterTypeFlagMSMDGMPPC     = 100
AdapterTypeFlagMSMDGMPEISA   = 500
AdapterTypeFlagMSMDGMPMCA    = 600
AdapterTypeFlagMSMDGMPMC32   = 600
AdapterTypeFlagMSMDGMPSM16   = 400
AdapterTypeFlagMSMDGMPPNP    = 300
AdapterTypeFlagMSMDGMPPCI    = 700
AdapterTypeFlagMSMDGMPPCIBM  = 700
AdapterTypeFlagMSMDGMPPCMCIA = 200

;
; Messages.
;

CANNOT_FIND_ANY_CARD = "Cannot find a Madge Smart Ringnode in the machine. "+
                       "If you are certain that a Madge Smart Ringode is "+
                       "present then try choosing the adapter type "+
                       "instead of automatic installation. Please note "+
                       "that EISA and MCA adapters will only be found if "+
                       "the EISA configuration utility or PS/2 reference "+
                       "diskette respectively have been used to configure "+
                       "the adapter. Also not that automated installation "+
                       "will not find PCI adapters."

TRIMMED_MFS = "WARNING: The maximum frame size at 16Mbps is 17839 bytes"+
	      "  and you have specified a value greater than that. This"+
	      "  value has been reduced to 17839 for you. If you are in"+
	      "  fact running at 4Mbps, the maximum frame size is 4472,"+
	      "  but do not worry -  the driver will automatically  set"+
	      "  the correct value, and write it to the Event Log."

ShellCodeErrorTitle = "Error: "$(FunctionTitle)
ShellCodeErrorText  = "Shell Code Error"

ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"

; ---------------------------------------------------------------------
; Language dependant general dialog constants.
; ---------------------------------------------------------------------

[DialogConstantsENG]

;
; Common button names, etc.
;

Help        = "&Help"
Exit        = "&Cancel"
OK          = "&OK"
Continue    = "C&ontinue"
Cancel      = "C&ancel"
HelpContext = ""

OldValueTitleInstall   = "Current hardware settings"
OldValueTitleConfigure = "Currently configured settings"

ConsultHelp = "Consult help before changing the settings below"

; -----------------------------------------------------------------------
; Language depentant input dialog constants.
; -----------------------------------------------------------------------

[FileDependentDlgENG]

DlgType     = "RadioCombination"
DlgTemplate = $(Option)

Caption = $(FunctionTitle)

Combo1Label = "&IRQ Level:"
Combo2Label = "I/O &Location:"
Combo3Label = "&Transfer method:"
Combo4Label = "Rx/Tx &Buffers:"
Combo5Label = "Traffic &Statistics Gathering:"
Combo6Label = "Please choose a Madge adapter to install"
Combo7Label = "Number of processors in &PC:"
Combo8Label = "Slot &Number:"
Combo9Label = "&Ring Speed:"

PciCombo8Label = "PCI &Device ID:"

Combo1List = $(IrqList)
Combo1Out  = $(IrqNumber)

Combo2List = $(IoList)
Combo2Out  = $(IoLocation)

Combo3List = $(DmaList)
Combo3Out  = $(DmaChannel)

Combo4List = $(RxTxUserList)
Combo4Out  = $(RxTxSlots)

Combo5List = $(StatsUserList)
Combo5Out  = $(StatsFlag)

Combo6List = $(AdapterDescList)
Combo6Out  = $(AdapterType)

Combo7List = $(MpList)
Combo7Out  = $(MpFlag)

Combo8List = $(SlotList)
Combo8Out  = $(SlotNumber)

Combo9List = $(SpeedUserList)
Combo9Out  = $(SpeedFlag)

ComboListItemsIn  = {Combo1List, Combo2List, Combo3List, Combo4List, Combo5List, Combo6List, Combo7List, Combo8List, Combo9List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out, Combo4Out, Combo5Out, Combo6Out, Combo7Out, Combo8Out, Combo9Out}

Edit1Label  = "Max&FrameSize:"
Edit2Label  = "&LAA:"
EditTextIn  = {$(MaxFrameSize), $(LAA)}
EditTextLim = {5,17}
EditTextOut = {}

CBOptionsGreyed = {}
NotifyFields = {NO, NO, NO, NO, NO, NO, NO, NO}

HelpContext = $(MadgeHelpId$(Option))

AdapterTitle = #(OptionsText$(!STF_LANGUAGE),$(Option),1)

#####oemnadam.inf i386
[LanguagesSupported]
    ENG
[OptionsTextENG]
    AM1500T = "Advanced Micro Devices AM2100/AM1500T Adapter"
    AM1500T1 = "Novell/Anthem NE1500T Adapter"
    AM1500T2 = "Novell/Anthem NE2100 Adapter"
[FileConstantsENG]
ProCaption   = "Windows NT Setup"
ProCancel    = "Cancel"
ProCancelMsg = "Windows NT Networking is not correctly installed.  "+
               "Are you sure you want to cancel copying files?"
ProCancelCap = "Network Setup Message"
ProText1     = "Copying:"
ProText2     = "To:"
FunctionAM1500TTitle   = "AMD AM2100/AM1500T Adapter Setup"
FunctionAM1500T1Title   = "Novell/Anthem NE1500T Adapter Setup"
FunctionAM1500T2Title   = "Novell/Anthem NE2100 Adapter Setup"
ProductSoftwareAM1500TDescription       = "AMD AM2100/AM1500T Driver"
ProductSoftwareAM1500T1Description      = "Novell/Anthem NE1500T Driver"
ProductSoftwareAM1500T2Description      = "Novell/Anthem NE2100 Driver"
ProductHardwareAM1500TDescription       = "AMD AM2100/AM1500T Adapter"
ProductHardwareAM1500T1Description      = "Novell/Anthem NE1500T Adapter"
ProductHardwareAM1500T2Description      = "Novell/Anthem NE2100 Adapter"
ProductSoftwareAM1500TTitle     = "AMD Driver"
ProductSoftwareAM1500T1Title    = "Novell/Anthem NE1500T Driver"
ProductSoftwareAM1500T2Title    = "Novell/Anthem NE2100 Driver"
ProductHardwareAM1500TTitle     = "AMD AM2100/AM1500T Adapter"
ProductHardwareAM1500T1Title    = "Novell/Anthem NE1500T Adapter"
ProductHardwareAM1500T2Title    = "Novell/Anthem NE2100 Adapter"
ShellCodeErrorTitle     = "Error: "$(Function$(Option)Title)
ShellCodeErrorText      = "Shell Code Error."
[DialogConstantsENG]
Help        = "&Help"
Exit        = "Cancel"
OK          = "OK"
HelpContext = ""
Continue    = "Continue"
Cancel      = "Cancel"
[FileDependentDlgENG]
DlgType = "MultiCombo"
DlgTemplate = "WD"
Caption = $(Function$(Option)Title)
Combo1Label = "&IRQ Level:"
Combo2Label = "&DMA Channel:"
Combo3Label = "I/&O Port Address:"
Combo1List = $(IRQ_List)
Combo1Out  = $(IRQLevel)
Combo2List = $(DMAChannelList)
Combo2Out  = $(DMAChannel)
Combo3List = $(IOBaseAddressHexList)
Combo3Out  = $(IOBaseAddress)
ComboListItemsIn  = {Combo1List, Combo2List, Combo3List}
ComboListItemsOut = {Combo1Out, Combo2Out, Combo3Out}
EditTextIn = ""
EditTextLim = ""
NotifyFields = {NO, NO, NO}
HelpContext = $(!IDH_DB_OEMNADAM_INS)

=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\migdlls\src\miglib\dll\placefil.txt ===
; This file is used to specify where every file built by the NT build lab is
; binplaced relative to the root of the distribution point.  If a file is not
; listed, it will end up in the dump directory.
;
; The format is like this:
;
; <imagename>    <class name>
;
; where <imagename> is the filename.ext and <class name> is the directory off
; the root of the distribution point (retail is a placeholder for the root).
; If there are multiple class names for a single image, use a colon to separate
; each.
;
; All bits that ship in the NT base product and are installed with winnt32,
; must have a class name of retail.
;

    miglibnt.dll        retail
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\mpk\doc\spec.doc ===
Microsoft Word  MSWordDoc Word.Document.8Cairo Setup Application Programming Interface Title _PID_GUIDCairo Setup Application Programming Interface Spec for Setup APIs available in Cairo Lonny McMichael Setup, API This spec details the APIs exposed in the setupnt.dll. Normal.dot Ted Miller Microsoft Word 8.0er0/r ?XY\S .uGE, dqrPX9 j"]QR Ne00: winspool Windows NT Fax Driver  0 2 3 er0/r ?XY\S .uGE, dqrPX9 j"]QR Ne00: winspool Windows NT Fax Driver  0 2 3  er0/r ?XY\S .uGE, dqrPX9 j"]QR Ne00: winspool Windows NT Fax Driver  0 2 3 Windows NT Group Mutli-OS Preinstallation Toolkit Author:  Ted Miller Revision 0.3,  TIME \@ "MMMM d, yyyy"  July 20, 1997  TOC \o "1-3"  Introduction  PAGEREF _Toc395091670 \h  Operating System and File System Independence  PAGEREF _Toc395091671 \h  Straightforward Operation for OEMs  PAGEREF _Toc395091672 \h  Simple, Fast, and Recoverable End-User Experience  PAGEREF _Toc395091673 \h  Easy Localization/Internationalization  PAGEREF _Toc395091674 \h  Reasonable Security  PAGEREF _Toc395091675 \h  Recoverability  PAGEREF _Toc395091676 \h  Non-Goals  PAGEREF _Toc395091677 \h  The Tools  PAGEREF _Toc395091678 \h  Usage Overview  PAGEREF _Toc395091679 \h  Imagpart.exe  PAGEREF _Toc395091680 \h  Makemast.exe  PAGEREF _Toc395091681 \h  2.3.1 Program Operation  PAGEREF _Toc395091682 \h  2.3.2 Command-Line Arguments  PAGEREF _Toc395091683 \h  2.3.3 Configuring the Bootstrap Partition  PAGEREF _Toc395091684 \h  Diskstat.exe  PAGEREF _Toc395091685 \h  Enduser.exe  PAGEREF _Toc395091686 \h  Text Handling  PAGEREF _Toc395091687 \h  OEM MPK Scenarios  PAGEREF _Toc395091688 \h  Technical Information  PAGEREF _Toc395091689 \h  Revision History  PAGEREF _Toc395091690 \h  Introduction This document discusses a toolset that enables OEMs to preinstall more than one operating system on a single computer, with the end-user making the ultimate choice of the single operating system he wants. The operating systems preinstalled for user selection can be any combination of separate OS products, different language versions, or different versions or variations of the same product. After the user has made and confirmed his selection, the computer behaves as if the selected operating system is the only one that had been preinstalled. The toolset is referred to in this document as the Multi-OS Preinstallation Toolkit, or MPK for short. The MPK consists of a set of tools for use by the OEM at their factory to generate multi-OS preinstallation masters, and an end-user component that guides the end-user in his choice of OS and puts that OS in place. This document does not include information about the Windows NT and Windows 9x OPKs. It is assumed that the target audience has sufficient familiarity with preinstallation procedures for the operating systems they wish to preinstall using the MPK. Operating System and File System Independence The MPK is not tied to any particular operating system. The OEM performs the usual preinstallation steps for each operating system to be shipped, and then uses the MPK to aggregate the results into shippable form, such that the end-user can select a single OS from among them. No files or file system structures are shared among the preinstalled operating systems. No changes to any OPK are required. In addition, the MPK works with file systems currently used by Microsoft OS products (FAT, FAT32, NTFS). It is possible to ship a computer preinstalled with Windows NT on an NTFS partition, and Memphis on a FAT32 partition. Requirements dealing with drive state are minimized; drives may be in an almost arbitrarily fragmented state so OEMs will not need to perform special disk zeroing or defragmentation steps when using the MPK. Straightforward Operation for OEMs The MPK neither interferes with nor requires changes to existing OPKs. The disruption to the OEM s current preinstallation methodology is minimized to the extent possible and the toolset provides reasonable flexibility in managing the pieces involved in creating a multi-OS preinstall master. The tools will be DOS- and BIOS- based to ensure maximum flexibility and compactness. Also note that the MPK is independent of any particular disk geometry to the extent possible. This allows the OEMs to switch hard drive parts and suppliers at their convenience without having to redo all the preinstallation steps.  Simple, Fast, and Recoverable End-User Experience When the end-user turns on the computer for the first time, he will be presented with a series of simple and straightforward screens that request selection of the user s preferred operating system. The presentation is such that the user s choice is confident and non-accidental. After the end-user has made his OS selection, the MPK s end-user component will restore the hard drive to make it appear that the selected OS was the only one that had been preinstalled. At that point the computer is rebooted and that OS  regular end-user experience begins. This restoration time will be as minimal as possible, consisting of little more than the time it takes to move the data at a sector level from one point on the hard drive to another. It is expected that the time will be in the 5 minute range for a typical OS with preinstalled applications. Also, the MPK s end-user component will ensure a minimal to zero timing window where power outages, etc, could eliminate the ability for the end-user to recover by simply turning the machine back on.  Easy Localization/Internationalization The MPK tools will be easily localizable; no recompilation will be necessary. Given that the end-user component will specifically allow selection of different language versions of operating system products, that component will allow the language in which it itself is operating to be user-selectable.  Reasonable Security After the end-user has made his OS selection, the end-user component will remove all other preinstalled OS data from the hard drives so that it is not possible to retrieve another OS image from the hard drive for installation to another machine. Recoverability /TBD. It is possible that if we can get the OEMs to ship a bootable DOS floppy with CD support, that the toolset could restore a partition image to the hard drive, or it could restore the entire image of the multi-OS master to the hard drive and let the user start over. The tools really don t care too much whether they are reading the partition image for the selected partition from disk sectors or from a file on a CD./ Non-Goals The following items are explicitly declared to not be goals for the first implementation of MPK due to technical reasons or time or testing constraints. We may revisit some or all of these in future MPK revisions. Support for RISC platforms The MPK is DOS-based and works with a single OS partition. Both factors preclude support for RISC platforms at present. In the future it may be possible to port the tools to the ARC environment. GUI end-user component Accomplishing this would require a significant amount of work in the MPK implementation for questionable end-user benefit, since the time the user interacts with that component is minimal. Besides the obvious need to manipulate more files to install a GUI environment such as mini-Win3.1, there are technical constraints, such as the fact that the DOS extender for mini-Win3.1 is not compatible with BIOS extended int13 services. Additionally, the OEMs  use of the MPK would be considerably complicated. Extreme security measures, encryption The end-user could conceivably duplicate his computer s hard drive at the sector level before ever allowing it to boot, and thus steal several OS images. This is little different however, from the standard single preinstalled-OS case. Measures to prevent this would require significant implementation time, add only marginally more security, and might interfere with the end-user experience for the honest user. Use of non-int13 devices The MPK does all disk I/O via int13 (standard and, where available, extended). There is no support for disk devices that are not visible through the BIOS under DOS. The primary reasoning for this is technical: there is simply no reliable way to read and write to such devices at the sector level independent of a partition, and the partition-based I/O that is available for such devices (int 25/26) will work only on partitions that are recognized by DOS (i.e., no NTFS). Multiple partition scenarios It is not possible to have a small C: partition with the operating system installed on D:. The operating system in its entirety must be installed on a single partition. Dynamic volume expansion at end-user time If the OEM preinstalls, for example, Windows NT on a 2.5 GB partition, the MPK tools will not grow the resulting partition if the machine is actually shipped with a 4 GB drive. The user will end up with a 2.5GB partition with Windows NT as the OEM preinstalled it, and 1.5GB of unpartitioned disk space. The Tools The MPK consists of the following tools: IMAGPART.EXE   image an operating system s partition to a file MAKEMAST.EXE   prepare a multi-OS preinstall master disk ENDUSER.EXE   get user s OS selection and fix up hard disk so only selected OS is present DISKSTAT.EXE   dump disk information (geometry, preinstall master, etc) The tools share a common text-handling/localization model (described in section   REF _Ref394029991 \r \h   REF _Ref394029991 \h  Text Handling ). Also, there is one command-line argument accepted by all the tools: /x[:int13unit]   disable use of extended int13 services on the given int13 unit, expressed as a decimal number such as 128, or a 0x-prefixed hex number such as 0x80. If the int13 unit is not given, or is 0, extended int13 is disabled for all units. Multiple /x parameters may be given. Note that if some of the drive is not accessible via conventional int13, use of this switch essentially shrinks the drive. Because of this, this switch should be used consistently by the OEM to avoid situations where one tool can t access part of a disk written to by an OS or another tool, etc. Note that the sector size of all disks used with the MPK must be 512 bytes.  Usage Overview The general sequence of events for use of these tools is described below. (More detailed information is provided in section   REF _Ref392919626 \r \h   REF _Ref392919626 \h  OEM MPK Scenarios Perform usual preinstallation steps for an operating system using its OPK. Boot DOS (such as from a floppy disk with network support) and run imagpart.exe to create a partition image file for the operating system, which is stored elsewhere, such as on a server. Clean off the machine and repeat from step 1 for each desired operating system. Boot DOS and use makemast.exe to make a physical disk into a multi-OS preinstall master, specifying the partition image file for each desired operating system. This transfers the partition images to the disk and creates a tiny bootstrap partition. Reboot DOS and set up the bootstrap partition by formatting it and copying enduser.exe and associated files onto it. Duplicate the preinstall master as required (the MPK does not supply tools for this). Note that with a simple batch file, steps 4 and 5 could be performed on each individual machine in the factory, which would provide an alternate method for OEMs who do not wish to use a disk-duplication method. The MPK tools are described in detail in the sections that follow. Imagpart.exe Imagpart.exe processes a partition and generates an output file for later application to a multi-OS preinstall master. The partition must be formatted with FAT, FAT32, or NTFS. For NTFS drives, there are some restrictions: The volume must not have more than 2^32 sectors. This  limits  the size of the drive to something around 2 terabytes. There must be 32 or fewer sectors (16K) per cluster. A 4GB NTFS drive uses 4K clusters by default, so this is not believed to be a problem in real-world applications. There must be 32 or fewer sectors (16K) per file record segment. The current maximum used by the file system is 4K, so this is not problematic. Attribute list attribute streams (if present) for the MFT and volume bitmap must be 8K or less, whether resident or non-resident. Exceeding this would require an extraordinarily fragmented drive. If the file system is not recognized, or if any of the above assumptions are violated, imagpart displays a message and aborts. The only command-line argument accepted by imagpart is /x, which was described in section   REF _Ref394031334 \r \h   \* MERGEFORMAT  When invoked, imagpart displays a list of all partitions on all (int13-addressable) drives and requests selection of one of them. In most cases the selected partition will be the first one on the list, since the MPK only works with a single OS partition. However there are scenarios where other possibilities arise, e.g., install an operating system on a drive which is then detached and imaged on a different computer.  A:\>imagpart  1)  DISK 80     NTFS      2047 MB  2)  DISK 81    FAT32      2030 MB Select a source partition from the list above: 1 Imagpart then requests the name of the output file. The output file can be any legal DOS filename, but the user must take care not to put the output file on the drive being imaged; imagpart does not check for this case. The filename will often be on an OEM s server, but for example could also be on second hard drive attached temporarily to the machine for this purpose. Enter filename for output partition image file: \\mpk\images\ntfs01.img The source partition is processed and the output file created.  For FAT/FAT32: Scanning FAT: 100% Transferring file system structures to output file: 100% Transferring file data to output file: 100% Processing output file: 100% For NTFS: Reading NTFS data structures...... Reading NTFS volume bitmap: 100% Generating cluster bitmap: 100% Transferring file data to output file: 100% Processing output file: 100% Imagpart does not precalculate required space; to avoid errors the user should ensure that sufficient space exists for the output file. The size of the output file will vary, but will be somewhat more than the amount of space used on the source. Makemast.exe Mastmast.exe creates or adds partition images to a multi-OS preinstallation master disk. A multi-OS preinstallation master disk consists of a small bootstrap partition, partition images for operating systems selectable by the user, and some additional data, all laid out in the format enduser.exe expects and will make use of when the end-user turns a new machine on for the first time.  Program Operation When invoked, the program presents a menu of (int13-addressable) disks found on the system and allows the user to select one of them. The disk selected may already be a multi-OS preinstallation master, in which case the user has the option of adding more images to it or starting over. The maximum number of partition images on any master disk is 10. The case where there s a disk attached to the machine that s already a master disk and the user selects it: A:\>makemast  1)  DISK 80     NTFS      2047 MB  2)  DISK 81    FAT32      2030 MB   (master) Select a disk from the above list to be made a multi-os preinstall master: 2 This disk is already a master disk. You can reinitialize it or preserve it and add partition images to it. If you elect to reinitialize it, ALL data on the disk (including partitions and partition images) will be lost. Reinitialize the disk (y/n)? The case where there is no master disk attached to the machine or the user doesn t select a disk that is already a master disk: A:\>makemast  1)  DISK 80     NTFS      2047 MB  2)  DISK 81    FAT32      2030 MB   (master) Select a disk from the above list to be made a multi-os preinstall master: 1 Making the disk a master disk will remove all partitions currently on it. Continue (y/n)? Once the operation has been confirmed, makemast prompts the user to enter filenames for each partition image to be placed on or added to the selected disk, and then creates transfers the images to the master disk and creates the bootstrap partition. Up to 20 more partition images allowed.  Enter filename for image 1 or ENTER to end list: x:\image01.bin Enter filename for image 2 or ENTER to end list: x:\image02.bin Enter filename for image 3 or ENTER to end list: Transferring x:\image01.bin (100%) Transferring x:\image02.bin (100%) Note: the partition images placed on the master disk by makemast.exe are not part of any partition. They exist in unpartitioned space on the disk and are therefore not accessible as files.  Command-Line Arguments  This section describes command-line arguments to makemast.exe. Note that by specifying /f, /m, /q, and optionally /r, totally automated operation can be achieved. /f:<filename>   instructs makemast to read the names of the image files from the given file instead of prompting the user to enter them. Each line in the file must be a valid DOS path specification without leading or trailing whitespace. /m:<int13unit>   specifies that the target is to be the master disk with the given int13 unit number (specified as a decimal number such as 128 or a 0x-prefixed hex number such as 0x80). If this switch is specified, the drive selection menu is suppressed.  specifies quiet operation; confirmations are suppressed.   if the selected disk is already a master disk and quiet operation has been specified via /q, this flag indicates that the disk is to be reinitialized as a master disk, throwing out the existing bootstrap partition and partition images. If the selected disk is already a master disk and quiet operation has been specified but /r has not been specified, partition images will be added to the existing master disk. If the selected disk is not a master disk or quiet operation has not been specified, this flag is ignored. /x[:int13unit]   disable use of extended int13 services on a disk or all disks. Configuring the Bootstrap Partition The bootstrap partition makemast.exe creates will be approximately 2 MB (larger in cases where a cylinder on the disk is larger than 2MB) and will be marked  active  in the partition table. The user is responsible for formatting it with MS-DOS, placing the end-user component files on it, and creating an autoexec.bat that invokes enduser.exe with the appropriate arguments.  Diskstat.exe /x[:int13unit]   disable use of extended int13 services on a disk or all disks Enduser.exe Note: In order to prevent generation of errors from which the end-user would have little chance of recovering, invalid arguments to enduser.exe are simply ignored. The OEM should take care to ensure that enduser.exe is invoked with the correct arguments.  specifies the number of languages that should be presented to the user as choices for operation the rest of enduser.exe. Enduser.exe expects to find the names of the languages (which will be presented to the user in a menu) in messages [10000] through [10000+count-1] in enduser.msg. After the user makes a language selection, enduser.exe will reload messages from n.msg (0.msg, 1.msg, etc), where n is a number from 0 through count-1 and represents the ordinal value of user s selection. If this switch is not supplied, the end-user will not be presented with the language menu and the program will continue to operate with the messages originally loaded from enduser.msg. /m:<int13unit>   specifies the int13 unit number of the master disk, expressed as a decimal number such as 129 or a 0x-prefixed hex number such as 0x81. Note that this switch cannot be used to restore from the master disk to a different disk; the partition image selected by the user will be restored to the disk specified with /m to the disk specified by /m. This switch may be omitted; the default value is 0x80.  specifies that operation is to be non-destructive, for testing purposes. Write operations are not performed and the final reboot is suppressed.  /x[:int13unit]   disable use of extended int13 services on a disk or all disks Text Handling When run, each tool in the MPK requires the presence of a text file containing all localizable text for the program. The text file must be in the same directory as the tool itself, with a filename whose base part is the same as the tool s filename and whose extension is .msg. For example, if the tool is a:\imagpart.exe, the message file is a:\imagpart.msg. Localization or message customization is accomplished by editing the text file; recompilation is not needed. The format of the text file is similar to a Windows   file. The name of each section is a decimal representation of a message number. The body of each section contains the message. The order of the sections is not significant. The following rules apply: Lines before the first section are ignored. This provides a mechanism for comments at the start of the file. Lines with [ as the first character on the line are interpreted as section name lines. The next characters must represent a valid base-10 number in the range 0-65535, followed by a terminating ]. Spaces are not allowed. Characters following the terminating ] are ignored and thus provide another means for introducing comments into the file. Trailing space on lines in the text file is ignored. Leading space is preserved. The line formatting used in the text file is preserved. This means that where text is broken into lines in the text file, newlines will be introduced in the internal representation of the message. This includes blank lines within a message (but not at the end of a message). The final newline(s) of a message are ignored. This means that the final line in the message is not newline-terminated. Following is a simple example message file. Sample message file, this is a comment [1] This is another comment This is message 1. It is one line long, with no terminating newline. This is message 2. It has 4 lines (2 are empty). There are a total of 3 newlines. [100] This is message 100. It has one newline.     This second line of message 100 has 4 spaces at the beginning. Note that the message numbers are meaningful only to the program using the text message file. They should simply be left alone when localization or customization is performed. Also note that no character set conversions or other interpretations are performed on the text. In general the text is simply manipulated as a byte stream and passed as necessary to printf(), poked into the video buffer, etc. OEM MPK Scenarios Technical Information Revision History Original Draft, Revision 0.3, June 9, 1997 Revision 0.4 Month Day, Year (tedm) Added different stuff. Microsoft Corporation Company Confidential Microsoft Corporation Company Confidential Document Name Microsoft Corporation Company Confidential Microsoft Corporation Company Confidential Document Name Microsoft Corporation Company Confidential Microsoft Corporation Company Confidential }xupma^XPH olida\YT {xuog_WOL
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\mpk\misclib\compress.txt ===
On a sample NTFS partition with around 420MB of stuff on it,
the uncompressed image file (after running imagpart) was
435993088 bytes. Using mrci1, it was 225156096 bytes.
Using mrci2 it was 224907264 bytes. Compression seems to slow
things down *significantly*.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\msoobci\placefil.txt ===
; This file is used to specify where every file built by the NT build lab is
; binplaced relative to the root of the distribution point.  If a file is not
; listed, it will end up in the dump directory.
;
; The format is like this:
;
; <imagename>    <class name>
;
; where <imagename> is the filename.ext and <class name> is the directory off
; the root of the distribution point (retail is a placeholder for the root).
; If there are multiple class names for a single image, use a colon to separate
; each.
;
; All bits that ship in the NT base product and are installed with winnt32,
; must have a class name of retail.
;

;
; migration dll.
;
msoobci.dll     dump
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\ocmanage\testoc\checkinf\checkinf.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corp. Program Description Title _PID_GUIDProgram Description Dapeng Zhu Normal Dapeng Zhu Microsoft Word 8.0Program Description This program checks against INF files that are used by an optional component.  During the test of Optional Component Manager, many document bugs were found.  The main purpose of the program is to check for such bugs in the INF file. Program Usage The program gets its input from the command line.  The input is either a master INF file or a component s INF file for use with Optional Component Manager. If it is a master INF file, the program checks all the INF files that it points to in the [Components] section.  If the input is a single component s INF file, certain errors are not checked since information may be incomplete.  Command line switches can t be viewed by typing checkinf without any argument. Program Structure The program is written in C++.  Various classes are used to represent optional component and their relations.  The class definitions can be found in component.h.  All the member functions that are not inline are implemented in component.cpp.  Checkinf.cpp is the main program that utilizes the classes to for errors in the INF files. Source code location %_NTDRIVE%\nt\private\windows\setup\ocmanage\testoc\checkinf Errors checked The program builds a link list of all the components.  It checks for the validity of Inf files during the process.  E.g. there should be at least one component listed in the [Components] section; there should be at least two fields in a "Needs =" line, etc. The program checks the validity of the IconIndex key.  It should have at least two fields.  If the second field is a number, its value should be between 0 and 66. (There are three bad numbers that will confuse the user).  If it is not a number, it should be a "*" The program checks the need relationship among the components.   A component that has children can't need a another component A component can't need a component with children There should not be any cycle, e.g. a needs b, b needs a Need and Exclude relationship should not exist at the same time between two components A component can t need a non-existent component if a master INF file is given. The program checks the exclude relationship among the components. A component that has children can t need another component A component can t need a component with children A component can t exclude a non-existent component Component that has children should not have Copyfiles section.  In fact, it will give out a warning if there is any suspicious section for such a component. The program checks if there are two components with same IDs. The program checks for components with same description The number in "Modes" line should be valid (0-3) Each component INF file must have a LayoutFile = Layout.inf line No Component INF file should have [SourceDisksNames] and [SourceDisksFiles] section. Sample Output The output was generated by the running the program on the optional components that come with 1859 fre.wks sysoc.inf opened H:\work\checkinf\i386\netoc.inf opened H:\work\checkinf\i386\rsoptwks.inf opened H:\work\checkinf\i386\iis.inf opened H:\work\checkinf\i386\mtsnt5.inf opened H:\work\checkinf\i386\setupqry.inf opened H:\work\checkinf\i386\msmqocm.inf opened H:\work\checkinf\i386\ims.inf opened H:\work\checkinf\i386\imagevue.inf opened IconIndex not present for component msmq mts_core needs mdac, which is not in the list LayoutFile not found in file rsoptwks.inf LayoutFile not found in file iis.inf LayoutFile not found in file setupqry.inf LayoutFile not found in file msmqocm.inf LayoutFile not found in file ims.inf
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\ocmanage\testoc\hctlib\hctlib.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft HCT Common Library Routines Title _PID_GUIDHCT Common Library Routines Jason Allor Normal Jazon Allor Microsoft Word 8.0HCT Common Library Routines By: Jason Allor (JasonAll) Needed Files All files are located in testapps\hct\hctlib hctlib.lib: This file must be linked into the program via the sources file. It is located under testapps\hct\hctlib\lib\*\hctlib.lib hcttools.h, logutils.h, ntlog.h: must be included by your program NOTE: if you add any new functions to this library, please update this file accordingly. Interface HctTools.c Memory Management Routines: NOTE: All memory management and assert functionality can be turned off by compiling the library without the  Debug flag. VOID InitializeMemoryManager() Call this function at the very beginning of the test, before any memory allocations are made. VOID CheckAllocs() Call this function at the very end of the test, just before the test exits. This function will verify that all memory has been freed. If any memory is left unfreed, the function will create a MessageBox pointing to the malloc locations of the memory that is unfreed, and the program will exit abnormally. BOOL _Malloc(void **ppv, size_t size) Use this routine anytime you wish to allocate memory. The routine will allocate the memory, shred the contents of the memory, and keep a record of this memory allocation. The function will return TRUE if the memory allocation succeeded, and FALSE if the memory allocation failed. The interface to this function is different from that of the standard malloc function. Following is an example of how to call this function: PSAMPLE_STRUCT pSampleStruct; BOOL bResult; Old Malloc: pSampleStruct = (PSAMPLE_STRUCT)malloc(sizeof(SAMPLE_STRUCT)); New Malloc: bResult = Malloc(&pSampleStruct, sizeof(SAMPLE_STRUCT)); VOID _Free(void **ppv) Use this routine anytime you wish to free previously allocated memory. The routine will check to make sure that ppv points to memory that was actually allocated, free the memory, and set the value of ppv to NULL. Example of how to call the function: Old Free: free(pSampleStruct); New Free: _Free(&pSampleStruct); Other Routines: VOID _ASSERT(BOOL bExpression) This function will assert if bExpression is FALSE. If the function asserts, it will create a MessageBox containing the line number and file name of the _ASSERT call, and the program will exit abnormally. PTCHAR ErrorMsg(IN          ULONG  ulError,                      IN OUT PTCHAR tszBuffer) Converts a standard windows error number (of the type returned by GetLastError()) into a word description of the error. If a word description of the error cannot be found, the number stored in ulError is converted into a string and this string is returned. ulError is the error number to convert. tszBuffer is a buffer in which to store the word description. This buffer will be returned from the function. PWCHAR AnsiToUnicode(IN      PCHAR     cszAnsi,                                             OUT  PWCHAR  wszUnicode,                                            IN      ULONG    ulSize) Converts an ANSI string to a UNICODE string, and returns the new Unicode string.  cszAnsi points to the ANSI string to convert.  wszUnicode points to a buffer large enough to store the new Unicode string. ulSize must be equal to the length of the wszUnicode string. PCHAR UnicodeToAnsi(IN     PWCHAR wszUnicode,                                        OUT  PCHAR    cszAnsi,                                        IN     ULONG    ulSize) Converts a Unicode string to an ANSI string, and returns the new ANSI string. wszUnicode points to the Unicode string to convert.  cszAnsi points to a buffer large enough to store the new ANSI string.  ulSize must be equal to the length of the cszAnsi string. PTCHAR ConvertAnsi(IN     PCHAR     cszAnsi,                                      OUT PWCHAR  wszUnicode,                                      IN    ULONG     ulSize) Receives an ANSI string, and returns the same string in either its ANSI or Unicode version, depending on whether the program was compiled as ANSI or Unicode.  cszAnsi points to the ANSI string to (possibly) convert.  wszUnicode points to a buffer large enough to hold the new Unicode string, if needed.  ulSize must be equal to the length of the wszUnicode string.   The function will either return cszAnsi or wszUnicode depending on whether the ANSI version or the Unicode version must be returned. PTCHAR ConvertUnicode(IN    PWCHAR  wszUnicode,                                            OUT PCHAR     cszAnsi,                                            IN    ULONG     ulSize) Receives a Unicode string, and returns the same string in either its ANSI or Unicode version, depending on whether the program was compiled as ANSI or Unicode.  wszUnicode points to the Unicode string to (possibly) convert.  cszAnsi points to a buffer large enough to hold the new ANSI string, if needed. ulSize must be equal to the length of the cszAnsi string.  The function will either return cszAnsi or wszUnicode depending on whether the ANSI version or the Unicode version must be returned.                                             LogUtils.c Logging Routines: HANDLE InitLog(IN PTCHAR tszLogName,                              IN PTCHAR tszTitle,                             IN BOOL      bConsole) Initializes a log. If ntlog.dll is present on the system, the log will be in ntlog format. If not, the log will be in a format that resembles ntlog.  tszLogName specifies the name of the log, such as  program.log tszTitle specifies the title of the console window in which the log output will be displayed. bConsole specifies whether or not a console window must be created. If the program is a windows program, a console should probably be created. If the program is a console program, a console might not need to be created. VOID ExitLog() Closes the log file. VOID Log(IN double       dFunctionNumber,                   IN DWORD   dwLogLevel,                   IN PTCHAR  tszLogString,                   IN  Prints out a line of output to the log. This function will automatically format the log output so that it will not run past the end of the line. If the string is longer than one log line, the string will be broken up into multiple log outputs, each printed on a new line. This gives the appearance of word wrap formatting. If the log is being run without ntlog.dll installed, TLS_INFO log lines will be printed to the console in gray, PASS lines will be printed in green, and SEV lines will be printed in red. dFunctionNumber can be any number. This is used to record where in the program the log line originated. One possible format is to give each function its own function number, so that every log line in that function would begin with that unique number.  dwLogLevel may be either TLS_INFO, TLS_SEV2, TLS_PASS, etc. Or you may use the shorter versions, INFO, SEV2, and PASS. tszLogString is a printf style string that will be printed to the log.  is the arguments to the tszLogString, if any. VOID LogBlankLine() Prints a blank line to the log. VOID AddLogParticipant(IN HANDLE hLog) Adds a new thread or process to the log. This is only necessary if the log is using ntlog.dll. hLog must be equal to the value returned from the InitLog function. VOID RemoveLogParticipant(IN HANDLE hLog) Removes a thread or process from the log. This is only necessary if the log is using ntlog.dll. hLog must be equal to the value returned from the InitLog function }xsni
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\ocmanage\testoc\octest\file1.txt ===
file4
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\ocmanage\testoc\octest\file2.txt ===
file4
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\ocmanage\testoc\octest\file3.txt ===
file4
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\ocmanage\testoc\octest\file7.txt ===
file4
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\ocmanage\testoc\octest\file4.txt ===
file4
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\ocmanage\testoc\octest\file5.txt ===
file4
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\ocmanage\testoc\octest\file6.txt ===
file4
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\ocmanage\testoc\octest\file8.txt ===
file4
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\ocmanage\testoc\octest\hugefile.txt ===
file4
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\ocmanage\testoc\octest\coverage.txt ===
This document describes the functionality tested in each of the various 
OC Manager test scenario groups.

------------------------------------------------------------------------------

'octest 1' tests the following:

-- Skip Pages

The welcome page contains a checkbox that will enable the user to skip page 2. 
If the checkbox is left unchecked, page 2 will appear as normal. If the 
checkbox is checked, page 2 should be skipped when the user clicks the 'Next' 
and 'Back' buttons.


-- Change Mode

The modes page will allow the user to change the installation mode between 
the four mode choices: Minimal, Typical, Laptop, and Custom. The user may 
change the mode and click the 'Next' or 'Back' buttons. The new mode should 
be reflected on the new wizard page.


-- If all children are disabled, parent should be disabled

On the components selection page, unselect all children of a component and 
hit ok. The component should now be unselected.


-- If some but not all children are enabled, parent should be enabled but greyed

On the components selection page, select some children of a component and 
unselect others. Verify that the component is checked but the checkbox is 
greyed out. Change the selection configuration of the component's children. 
Leave only one child selected, etc., and verify that the component's checkbox 
is checked and greyed accordingly.


-- Force OC Manager to prompt for files

Run the test so that the copy files are not in the current directory or 
any system path directory. When OC Manager prepares to copy the files, 
it should prompt for the location of the files. Attempt to answer with 
invalid locations. Finally, direct OC Manager to the correct location. 
The files should be copied. This may also be attempted with the files 
scattered across multiple directories.


-- Check component dependencies

Some subcomponents depend upon other subcomponents. If one subcomponent is 
not selected, another subcomponent may not be selected without also 
selecting the first. If the first subcomponent is deselected, both 
subcomponents must be deselected. The following procedure will test this:

- Select master Unicode component so that it is checked and not greyed.

- Verify that Unicode component_2_1_1 is checked and not greyed

- Uncheck Unicode component_2_1_1 and verify that Unicode_2_1_2 also 
  becomes unselected.

- Select Unicode component_2_1_2 and verify that Unicode component_2_1_1 
  also becomes selected.

- Unselect Unicode component_2_1_2 and verify that Unicode component_2_1_1 
  is not affected.

- Click OK and verify that Unicode component_2_1 is greyed.

- If Unicode component_2_2 is checked, uncheck it.

- Verify that ANSI component_2 is not checked.

- Check ANSi component_2 and verify that Unicode component_2_2 is now checked.

- Uncheck ANSI component_2 and Unicode component_2_2.

- Verify that ANSI component_1 is not checked.

- Check ANSI component_1 and verify that ANSI component_2 and Unicode 
  component_2_2 are now checked.


-- If a component has multiple children and one or some of them refuse to 
   be selected, but others can be selected, verify that the component may 
   be selected.

- Select master ANSI component so that it is checked and not greyed. 

- Unselect all ANSI components.

- Select ANSI component_2.

- Select ANSI component_1_1.

- Select ANSI component_1_2.

- Verify that ANSI component_1 is checked but greyed.

- Verify that the master ANSI component is checked but greyed.


-- Verify that needs dependencies and components that refuse to be 
   selected work together.

- Make sure that ANSI component_1 and ANSI component_2 are both unchecked.

- Check ANSI component_1_1 and click OK.

- Verify that ANSI component_1 is checked and greyed.

- Verify that ANSI component_2 is now checked.


------------------------------------------------------------------------------

'octest 2' tests the following:

-- Nonexistent component INF

The oc2.inf file points to component INF files that do not exist. 
The OC Manager should respond with an error message. If the test is
running from the command line, it should exit. If the test is running
during system setup, this compoment should be skipped but setup should
continue.


------------------------------------------------------------------------------

'octest 3' tests the following:


------------------------------------------------------------------------------

'octest 4' tests the following:

-- Nonexistent components in PageAdd and PageReplace sections

The oc4.inf lists nonexistent components in the PageAdd and PageReplace
sections. OC Manager should pop up windows complaining about these 
invalid components, but it should continue to install the valid
component, unicomp.

Unicomp.inf also contains links to these nonexistent components and 
their nonexistent subcompoments.


------------------------------------------------------------------------------

'octest 5' tests the following:

-- Multiple compoments in same compoment INF file

There are two components, unicomp and ansicomp. Both share the same INF
file, comp.inf. This is not standard procedure. Each component is supposed
to have its own INF file. However, this procedure works in most instances,
although not in every way. 


------------------------------------------------------------------------------

'octest 6' tests the following:
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\ocmanage\testoc\octest\inf\i7\unicomp.log ===
INFO  (3.10) -----------------------------------
INFO   
INFO  (3.10) [11:22:40]  OC_SET_LANGUAGE
INFO  (3.10) Component = unicomp   Subcomponent = (null)
INFO  (3.10) Primary = 9 Secondary = 1
INFO   
INFO  (3.10) -----------------------------------
INFO   
INFO  (3.10) [11:22:40]  OC_QUERY_STATE
INFO  (3.10) Component = unicomp   Subcomponent = unicomp_1_1
INFO   
INFO  (3.10) -----------------------------------
INFO   
INFO  (3.10) [11:22:40]  OC_QUERY_STATE
INFO  (3.10) Component = unicomp   Subcomponent = unicomp_1_2
INFO   
INFO  (3.10) -----------------------------------
INFO   
INFO  (3.10) [11:22:40]  OC_QUERY_STATE
INFO  (3.10) Component = unicomp   Subcomponent = unicomp_2
INFO   
INFO  (3.10) -----------------------------------
INFO   
INFO  (3.10) [11:22:40]  OC_CALC_DISK_SPACE
INFO  (3.10) Component = unicomp   Subcomponent = unicomp_1_1
INFO   
INFO  (3.10) -----------------------------------
INFO   
INFO  (3.10) [11:22:40]  OC_CALC_DISK_SPACE
INFO  (3.10) Component = unicomp   Subcomponent = unicomp_1_2
INFO   
INFO  (3.10) -----------------------------------
INFO   
INFO  (3.10) [11:22:40]  OC_CALC_DISK_SPACE
INFO  (3.10) Component = unicomp   Subcomponent = unicomp_2
INFO   
INFO  (3.10) -----------------------------------
INFO   
INFO  (3.10) [11:22:40]  OC_REQUEST_PAGES
INFO  (3.10) Component = unicomp   Subcomponent = (null)
INFO  (3.10) Maximum Welcome Pages  = 10
INFO   
INFO  (3.10) -----------------------------------
INFO   
INFO  (3.10) [11:22:40]  OC_REQUEST_PAGES
INFO  (3.10) Component = unicomp   Subcomponent = (null)
INFO  (3.10) Maximum Mode Pages = 10
INFO   
INFO  (3.10) -----------------------------------
INFO   
INFO  (3.10) [11:22:40]  OC_REQUEST_PAGES
INFO  (3.10) Component = unicomp   Subcomponent = (null)
INFO  (3.10) Maximum Early Pages = 10
INFO   
INFO  (3.10) -----------------------------------
INFO   
INFO  (3.10) [11:22:40]  OC_REQUEST_PAGES
INFO  (3.10) Component = unicomp   Subcomponent = (null)
INFO  (3.10) Maximum Early Pages = 11
INFO   
INFO  (3.10) -----------------------------------
INFO   
INFO  (3.10) [11:22:40]  OC_REQUEST_PAGES
INFO  (3.10) Component = unicomp   Subcomponent = (null)
INFO  (3.10) Maximum Prenet Pages = 10
INFO   
INFO  (3.10) -----------------------------------
INFO   
INFO  (3.10) [11:22:40]  OC_REQUEST_PAGES
INFO  (3.10) Component = unicomp   Subcomponent = (null)
INFO  (3.10) Maximum Postnet Pages = 10
INFO   
INFO  (3.10) -----------------------------------
INFO   
INFO  (3.10) [11:22:40]  OC_REQUEST_PAGES
INFO  (3.10) Component = unicomp   Subcomponent = (null)
INFO  (3.10) Maximum Late Pages = 10
INFO   
INFO  (3.10) -----------------------------------
INFO   
INFO  (3.10) [11:22:40]  OC_REQUEST_PAGES
INFO  (3.10) Component = unicomp   Subcomponent = (null)
INFO  (3.10) Maximum Late Pages = 11
INFO   
INFO  (3.10) -----------------------------------
INFO   
INFO  (3.10) [11:22:40]  OC_REQUEST_PAGES
INFO  (3.10) Component = unicomp   Subcomponent = (null)
INFO  (3.10) Maximum Final Pages = 10
INFO   
INFO  (3.10) -----------------------------------
INFO   
INFO  (3.10) [11:22:40]  OC_WIZARD_CREATED
INFO  (3.10) Component = unicomp   Subcomponent = (null)
INFO   
INFO  (3.10) -----------------------------------
INFO   
INFO  (3.10) [11:22:43]  OC_CLEANUP
INFO  (3.10) Component = unicomp   Subcomponent = (null)
INFO   
INFO   
INFO   
INFO  (0.00) Log Statistics:
INFO   
INFO  (0.00) Pass:  0	0%
INFO  (0.00) Fail:  0	0%
INFO  (0.00) Total: 0
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\oobe\changes.txt ===
This file details changes made to files in this directory to port the code from
the Win9x tree to the Whistler tree.

* Added dirs file.  
* Added sources.inc for macros that apply to all oobe directories.  
* Removed oobe.mk and Win9x makefile.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\oobe\issues.txt ===
This file contains a list of open issues for porting the files in this
directory from the Millenium source tree to the Whistler source tree.

* Where should OOBE bins and data be binplaced?  retail\winnt32?
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\oobe\common\changes.txt ===
This file details changes made to files in this directory to port the code from
the Win9x tree to the Whistler tree.

* Added sources file and standard NT makefile.  Removed obcommon.mk, depend.mk, 
  and Win9x makefile.
* util.cpp:Add PumpMessageQueue( )
* util.cpp: Added IsThreadActive( )
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\oobe\data\changes.txt ===
This file details changes made to files in this directory to port the code from
the Win9x tree to the Whistler tree.

* Added sources file and standard NT makefile.  
* Removed Win9x makefile. 
* Files are binplaced in retail\winnt32\oobe
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\oobe\data\oobeinfo.ini ===
[StartupOptions]
StartUrl=

[options]
MouseTutorial=0
JoinDomain=1
AdminPw=1

[OEMRegistrationPage]
OEMAddRegPage=0
PostToOEM=0
RegPostURL=

[Signup]
ISPSignup=MSN
OfferCode=0
Locales=1,81
IDLocales=1,81,33,49,107,61,44
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\oobe\data\placefil.txt ===
migip.dun       retail
migrate.isp     retail
migrate.obe     retail
migx25a.dun     retail
migx25b.dun     retail
migx25c.dun     retail
msobe.isp       retail
obeip.dun       retail
oobeinfo.ini    retail
phone.inf       retail
phone.obe       retail
reg.isp         retail
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\oobe\html\issues.txt ===
This file contains a list of open issues for porting the files in this
directory from the Millenium source tree to the XP source tree.

* Where should these files be binplaced?
* no imetut1.htm or ime directory
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\oobe\html\changes.txt ===
This file details changes made to files in this directory to port the code from
the Win9x tree to the XP tree.

* Added sources file and standard NT makefile.
* Added placefil.txt.  Binplace root is retail\winnt32\oobe.
* Removed Win9x makefile. 
* dskshell.htm, migrate.js, setup\msobshel.js: 
  changed calls to Dial[Ex]\ReDial[Ex] to use two parameters: connection type
  and isp file.  For changes to Dial[Ex]\ReDial[Ex] handling in CObMain::Invoke.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\oobe\html\placefil.txt ===
act_plcy.htm                        retail
    acterror.htm                        retail
    actdone.htm                         retail
    activ.htm                           retail
    activerr.htm                        retail
    activsvc.htm                        retail
    activate.htm                        retail
    actshell.htm                        retail
    adeskerr.htm                        retail
    adrdyreg.htm                        retail
    actlan.htm                          retail
    actconn.htm                         retail
    agtcore.js                          retail
    agtscrpt.js                         retail
    apolicy.htm                         retail
    aprvcyms.htm                        retail
    areg1.htm                           retail
    aregdial.htm                        retail
    aregdone.htm                        retail
    aregsty2.css                        retail
    aregstyl.css                        retail
    arrow.gif                           retail
    ausrinfo.htm                        retail
    backdown.jpg                        retail
    backoff.jpg                         retail
    backover.jpg                        retail
    backup.jpg                          retail
    badeula.htm                         retail
    badpkey.htm                         retail
    btn1.gif                            retail
    btn2.gif                            retail
    btn3.gif                            retail
    bullet1.gif                         retail
    bulzano.jpg                         retail
    bulzanom.jpg                        retail
    but1_dwn.gif                        retail
    but1_idl.gif                        retail
    but1_up.gif                         retail
    but2_dwn.gif                        retail
    but2_idl.gif                        retail
    but2_up.gif                         retail
    but3_dwn.gif                        retail
    but3_idl.gif                        retail
    but3_up.gif                         retail
    but4_dwn.gif                        retail
    but4_idl.gif                        retail
    but4_up.gif                         retail
    clicking.gif                        retail
    clickhr.gif                         retail
    clickerx.wav                        retail
    cnncterr.htm                        retail
    compname.htm                        retail
    desktop3.gif                        retail
    dialmgr.js                          retail
    dialtone.gif                        retail
    dialtone.htm                        retail
    dialup.gif                          retail
    dialup.htm                          retail
    drdyisp.htm                         retail
    drdymig.htm                         retail
    drdyoem.htm                         retail
    drdyref.htm                         retail
    dslmain.htm                         retail
    dslmain.js                          retail
    dsl_a.htm                           retail
    dsl_b.htm                           retail
    dtiwait.htm                         retail
    dtsgnup.htm                         retail
    error.js                            retail
    eula.jpg                            retail
    fini.htm                            retail
    grn_btn.gif                         retail
    hand1.gif                           retail
    hand2.gif                           retail
    heidelb.jpg                         retail
    heidelbm.jpg                        retail
    hndshake.htm                        retail
    hnwprmpt.htm                        retail
    iconn.htm                           retail
    iconnect.htm                        retail
    iconnect.js                         retail
    icntlast.htm                        retail
    ics.htm                             retail
    icsdc.htm                           retail
    icsmgr.js                           retail
    ident1.htm                          retail
    ident2.htm                          retail
    intro.wmv                           retail
    isp.htm                             retail
    isptype.htm                         retail
    isptype.js                          retail
    isp2busy.htm                        retail
    ispcnerr.htm                        retail
    ispcnfg.ins                         opk\samples\oobe
    ispdtone.htm                        retail
    isppberr.htm                        retail
    isphdshk.htm                        retail
    ispins.htm                          retail
    ispnoanw.htm                        retail
    ispphbsy.htm                        retail
    ispsbusy.htm                        retail
    ispsgnup.htm                        opk\samples\oobe
    ispwait.htm                         retail
    jndomain.htm                        retail
    jndom_a.htm                         retail
    keybd.htm                           retail
    keybdcmt.htm                        retail
    magnify.gif                         retail
    merlin.gif                          retail
    migdial.htm                         retail
    miglist.htm                         retail
    migpage.htm                         retail
    migrate.js                          retail
    monitor.gif                         retail
    monitor2.gif                        retail
    mouse.gif                           retail
    mousewn1.gif                        retail
    mslogo.jpg                          retail
    newbtm1.jpg                         retail
    newbtm8.jpg                         retail
    newmark1.jpg                        retail
    newmark8.jpg                        retail
    newtop1.jpg                         retail
    newtop8.jpg                         retail
    mousetut.js                         retail
    mouse.htm                           retail
    mouse_a.htm                         retail
    mouse_b.htm                         retail
    mouse_c.htm                         retail
    mouse_d.htm                         retail
    mouse_e.htm                         retail
    mouse_f.htm                         retail
    mouse_g.htm                         retail
    mouse_h.htm                         retail
    mouse_i.htm                         retail
    mouse_j.htm                         retail
    mouse_k.htm                         retail
    mouse4.gif                          retail
    mouseimg.gif                        retail
    msobshel.htm                        retail
    neweula.htm                         retail
    neweula2.htm                        retail
    nextdown.jpg                        retail
    nextoff.jpg                         retail
    nextover.jpg                        retail
    nextup.jpg                          retail
    noanswer.htm                        retail
    nousbkbd.htm                        opk\samples\oobe
    nousbkm.htm                         opk\samples\oobe
    nousbms.htm                         opk\samples\oobe
    oemcoa.jpg                          retail
    oemhw.htm                           opk\samples\oobe
    oemisp.htm                          opk\samples\oobe
    oemlogo.gif                         retail
    oempriv.htm                         retail
    oemsgnup1.htm                       opk\samples\oobe
    oemsgnupoff.htm                     opk\samples\oobe
    oemsgnupon.htm                      opk\samples\oobe
    oobestyl.css                        retail
    oobeutil.js                         retail
    paris.jpg                           retail
    parism.jpg                          retail
    pisa.jpg                            retail
    pisam.jpg                           retail
    prague.jpg                          retail
    praguem.jpg                         retail
    prodkey.gif                         retail
    progress.gif                        retail
    pberr.htm                           retail
    prodkey.htm                         retail
    prvcyms.htm                         retail
    pulse.htm                           retail
    qmark.acs                           retail
    qmark.gif                           retail
    rcnterr.htm                         retail
    rdrdyreg.htm                        opk\samples\oobe
    rdtone.htm                          retail
    refdial.htm                         retail
    reg1.htm                            retail
    reg3.htm                            retail
    regdial.htm                         retail
    regconn.htm                         opk\samples\oobe
    regdone.htm                         opk\samples\oobe
    reglan.htm                          opk\samples\oobe
    regrmnd.htm                         opk\samples\oobe
    regshell.htm                        opk\samples\oobe
    regstyl.css                         opk\samples\oobe
    rdeskerr.htm                        opk\samples\oobe
    rhndshk.htm                         retail
    rnoansw.htm                         retail
    rnomdm.htm                          retail
    roempriv.htm                        opk\samples\oobe
    rprvcyms.htm                        opk\samples\oobe
    rpberr.htm                          retail
    rpulse.htm                          retail
    rregdial.htm                        opk\samples\oobe
    rtoobusy.htm                        retail
    rusrinfo.htm                        opk\samples\oobe
    sconnect.htm                        retail
    sconnect.js                         retail
    scntlast.htm                        retail
    security.htm                        retail
    skipdown.jpg                        retail
    skipoff.jpg                         retail
    skipover.jpg                        retail
    skipup.jpg                          retail
    thanks10.png                        retail
    thanks8.png                         retail
    timezone.htm                        retail
    title.wma                           retail
    toobusy.htm                         retail
    tyrol.jpg                           retail
    tyrolm.jpg                          retail
    username.htm                        retail
    venice.jpg                          retail
    venicem.jpg                         retail
    verona.jpg                          retail
    veronam.jpg                         retail
    welcome.htm                         retail
    wpaback.jpg                         retail
    wpabtm.jpg                          retail
    wpaflag.jpg                         retail
    wpakey.jpg                          retail
    wpatop.jpg                          retail
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\oobe\idl\changes.txt ===
This file details changes made to files in this directory to port the code from
the Win9x tree to the Whistler tree.

* Added sources file and standard NT makefile.  
* Removed idl.mk and Win9x makefile. 
* Removed include <basetsd.h> from obcomm.idl.  It is included via
  unknwn.idl.
* obcomm.idl
    * Added OnDialEvent method to IObCommunicationManager
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\oobe\docs\external_module.txt ===
INTRODUCTION
-------------------
This document details how to add an external module, such as a tutorial, to
OOBE.  The information here is based on the mouse tutorial in ME OOBE.

Goals for adding external modules:
* Look and feel remains the same
* OOBE navigation system is used
* External module can be developed and tested with little help from OOBE
  development

TEMPLATES
-----------------
To address all three of these issues a set of template HTML and script files
have been developed. These can be found in
%SDXROOT%\ADMIN\NTSETUP\OOBE\HTML\TEMPLATE: 
    * external.htm is the template for HTML files
    * external.js for script modules
    * testshel.htm is the OOBE shell to use for testing

  %SDXROOT%\ADMIN\NTSETUP\OOBE\HTML
    |
    |-- mymodule.js
    |
    |-- TEMPLATES
          |
          |-- testshel.htm
          |-- external.htm
          |-- external.js

There can be as many HTML pages as are required.  There should be exactly on
script module and one test shell.

When working with these templates, replace _MODULE_ with the name of
your module and _MODULEDIR_ with the name of the directory
containing your modules HTML files.

ADDING FILES TO THE NT SOURCE TREE
------------------------------------
HTML pages should be added to a subdirectory of
%SDXROOT%\ADMIN\NTSETUP\OOBE\HTML\HTML.  Images should be in an IMAGES
subdirectory below this directory.  Script modules should be added to
%SDXROOT%\ADMIN\NTSETUP\OOBE\HTML.

  %SDXROOT%\ADMIN\NTSETUP\OOBE\HTML
    |
    |-- mymod.js
    |
    |-- HTML
          |
          |-- MYMODULE
                |
                |-- mymod_a.htm
                |-- mymod_b.htm
                |--   ...
                |-- mymod_n.htm
                |
                |-- IMAGES
                      |
                      |-- mymod.jpg

FILE NAMING
-----------------
The name of your module subdirectory, the first page of your module, and your
script file should be the same as the name of your module. For example, if your
module is named MyMod, then your module subdirectory would be named MyMod, the
first page of the module should be named MyMod.htm and your scripts should be
in MyMod.js.  This will allow the shell scripts to find your first page and
scripts files.  Other files may be named as you wish. All files should have 8.3
names.

VARIABLE AND FUNCTION NAMING
--------------------------------
Since your module will be dropped into a public name space it is a good idea to
prepend all global variable and function names with the name of your module.

TEST INSTALLATION
-----------------
For testing purposes:
* copy the test shell to %windir%\system32\oobe\msobshel.htm.  This replaces
  the real OOBE shell with one that references your module.
* copy your script file to %windir%\system32\oobe.
* copy your HTML files to %windir%\system32\oobe\html\MyMod
* copy your image files to %windir%\system32\oobe\html\MyMod\images

  %WINDIR%\SYSTEM32\OOBE
    |
    |-- msobshel.htm (renamed from testshel.htm)
    |-- mymod.js
    |
    |-- HTML
          |
          |-- MYMOD
                |
                |-- mymod_a.htm
                |-- mymod_b.htm
                |--   ...
                |-- mymod_n.htm
                |
                |-- IMAGES
                      |
                      |-- mymod.jpg


WHISTLER INSTALLATION
-----------------------
For installation by Whistler setup OOBE development will need the following
information:
* name of the directory your module is enlisted in
* name of all HTML files
* name of all image files
* name of the script file

SCRIPT MODULES
---------------------
Scripts should be written in JScript.

The script module will be included in the appropriate shell modules
(msobshel.htm, dskshell.htm, ispshell.htm, regshell.htm) via a script tag.

  <SCRIPT LANGUAGE=jscript SRC="MyMod.js"></SCRIPT>.  

If you named your script file per the naming convention suggestions this will
be done automatically.

Scripting docs can be found at http://msdn.microsoft.com/scripting.

OOBE NAVIGATION
----------------
Navigation within your module is accomplished by creating a mapping between
each file and the one that is to follow it.  These mappings are stored in a
Scripting.Dictionary object.  The initialization should occur in the
MyMod_InitSimpleNavMap function.  

For each page except the last add a line
like the following:
  g_SimpleNavMap.Add("MyMod.htm", 
                      MyModDir+"MyMod_a.htm"
                     );
The function called in response to the ONLOAD event will call
InitButtons("DoMyModButtons").  This will set the ONCLICK handlers for the
Back and Next buttons to window.parent.SimpleNavBack and
window.parent.SimpleNavNext respectively.  SimpleNavNext looks up the current
page in g_SimpleNavMap, retrieves the path to the next page, and navigates to
it.  SimpleNavBack simply calls window.parent.history.back.  

The last page must call window.parent.GoNext();  This will cause
OOBE to navigate to the page that should follow the external module.


DEBUGGING
--------------
* Install the Script Debugger from Control Panel\Add/Remove Programs\Add/Remove
  Windows Components.
* ALWAYS set HKLM\Software\Microsoft\Windows\CurrentVersion\Setup\OOBE
    * OemDebug = 1 to turn on error popups and allow switching between OOBE and
      other tasks (such as ntsd and regedit)
    * MsDebug = 1 to allow tracing to the debugger from script.
* To send trace output to the debugger use the window.parent.trace(str)
  function in testshel.htm.  See the GoNavigate function in testshel.htm for
  examples.
* Occasionally an error popup will be activated but not displayed.  This will
  appear to you as if OOBE has hung.  Try pressing the Enter or Esc keys to
  dismiss the popup and continue.  If this happens continually, try putting a
  try...catch block around the suspect code and write the exception info to the
  debugger using trace( ).  For example,
    
    try
    {
        // suspect code
    }
    catch (err)
    {
        window.parent.trace("ERROR: " + err.number + ":" + err.description);
    }
* While OOBE is running you can press Shift+F10 to bring up a console window.
  This is especially helpful when something breaks in system context.
                    
RUNNING OOBE IN SYSTEM CONTEXT
---------------------------------
OOBE runs in the system context (prior to any user logon).  This can present
problems if subsystems that we rely on assume a user is logged in.  To run OOBE
in this context do the following:
* Set HKLM\System\Setup\
    * CmdLine = %windir%\system32\oobe\msoobe.exe /f
    * SetupType = 2 (no reboot)
    * MiniSetupInProgress = 1
* Reboot the system

The system will initialize, verify that the disks are okay, then run OOBE.


EXTERNAL DEV TASKS
--------------------------
Developers of external modules will need to perform the following tasks:
* Develop pages and scripts based on template files.
* Test pages and scripts using testshel.htm.  Ideally this should be done in
  system context (ie. prior to logon).  See the RUNNING OOBE IN SYSTEM CONTEXT
  section for more details.
* Supply OOBE development with the following information:
    * Module name
    * Name of first HTML file (for checkpoint)
    * Name of script file (so it can be included in shell scripts)
    * Where module fits in OOBE flow

EXTERNAL DEV INFO
-----------------------
* window.external methods
    These are methods provided by OOBE via the window.external object in the
    Browser object.
  * InfoObj.get_FirstName
    Retrieves the user's first name.

  * InfoObj.get_LastName
    Retrieves the user's last name.

  * ApiObj.get_SystemDirectory
    Retrieves the path to the system directory.

  * DebugObj.Trace
    Output trace statements to the debugger from script.

  * DebugObj.get_MsDebugMode
    Is MsDebugMode on?  If it is not, Trace does not work.

  * DebugObj.get_OemDebugMode
    Is OemDebugMode on?  If it is not, you won't see error popups or be able to
    switch from OOBE to other apps.

* Registry entries
  * Main OOBE reg key
    * HKLM\Software\Microsoft\Windows\CurrentVersion\Setup\OOBE
      * CKPT (Key)
        This is the checkpoint stack that tracks where the user has been.
        Whack this to restart OOBE.
      * Temp (Key)
        Temporary data store.  We keep information here until OOBE has been
        successfully completed.
      * OemDebug (REG_DWORD)
        Set this to 1 turns on error notification and allow focus to shift away
        from OOBE.
        shift focus away from OOBE.
      * MsDebug (REG_DWORD)
        Set this to 1 to turn on tracing to the debugger from script
        (DebugObj.Trace).
  * System setup key
    * HKLM\System\Setup
      This key controls the way the way that setup apps are run.
      * CmdLine (REG_SZ)
        Command line to be run by winlogon at startup.  For OOBE set this to
        %windir%\system32\oobe\msoobe.exe /f
      * SetupType (REG_DWORD)
        Set this to 0x00000002 to run the CmdLine.
      * MiniSetupInProgress (REG_DWORD)
        Set this to 0x00000001.  OOBE mimics the state of mini-setup.
* Template HTML and script files

OOBE DEV TASKS
-------------------
OOBE development will need to perform the following tasks to hook an external
module into OOBE:
* Add checkpoint for external module
* Add case for external module to GoNext, GoBack, GoCancel, GoNavigate as
  appropriate
* Add entry for checkpoint to status menus
* Call MyMod_InitSimpleNavMap( ) in InitCKPT() 
* Call g_MyModLastPage = MyModGetLastPage() from InitCKPT()
* Create a temporary msobshel.htm with above items for testing purposes.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\oobe\docs\mileston.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft OOBE 1.0 Milestone Definition Title _PID_GUIDOOBE 1.0 Milestone Definition Won Joo Park Normal.dot Won Joo Park Microsoft Word 8.0-Yb;` J48[`OOBE 1.0 Milestone Definitions Milestone 1: 2/5/99 (Provide co-working environment for MSN)  Definition:  Provide co-working environment for MSN. Finish the design and framework. Tasks to complete:  Initial design back from UI designers UI Spec hand off to dev/test PnP resolved Screen resolution resolved Specs hand off to dev/test for - dialing,  - error cases,  - pre-configuration  Private Daily builds Finish interface design for each module. WebHost environment  Configurable URL through INI file so that msn can hit any corp test server. Issues:  None. After milestone 1, we will start to deliver our daily build to MSN.  Milestone 2: 2/12/99 (Provide the testable platform)  Definition:  Provide basic navigation through steps, external interface will be available (not fully functional). Fully functional left pane. OPK tool development start. HTML developments start (UI). Dialup checking (Modem, TCP/IP, RAS, tone detection). Tasks to complete:  Test plan  Revised screens back from designers, handoff to dev Revised text back from UA, handoff to dev Initial usability feedback (based on screenshots) Flesh out exact wording for error cases Sync up ScotJohn error cases with Autumn actual UI screens (Tues AM - PM get OOBE INI format from DEV) EOD Weds -- OPK Spec due + understand how it's integrated with existing OPK tools EOD  Fri - OPK screenshots Communication manager (Dialing services/ISP file parsing) Dialup checks (Modem, TCP/IP, RAS, tone detection).  Back end ready (EULA, PID, USERINFO, etc)  Finish left pane HTML development/Interface function.  Partially functional navigation manager  OOBEINFO.INI file processing.  Start OPK tool development.  Provide external interfaces.  Functional offline HTMLs for each page.  Functional right pane.  Button pane.  Testing can start as a standalone app. Msgsvr32, setupx integration. Open setupx backend for retail/international case.  MSGSRV / SETUPX should happen by M2 2/12 rather than waiting  until 2/19 since it is a high risk item  PnP should get fixed or punted by M2- 2/12 Daily build by Win98 buildlab Critical OSR changes (setupx hook) Build API service layer in setupx. HTML parser for external interface. Issues:  Need to find a HTML developer. Based on what we need to do in oobe, we won't need any system developer level of HTML experts. Web developer who can do DHTML/Scripts should be able to do the job. I am going to meet one candidate tomorrow and will get some more info from other resources (Microcrafts)  Whether to use existing phonebook or not. If it is simply US/Canada and Japan, we will just extend existing ISP file format.  OPK tool spec. Resolve PNP issues.  Drop the build to MSN/Passport and Localization team. We will release external interface spec for MSN or Passport to use.  Milestone 3: 2/19/99 (Feature complete)  Definition:  External interface will be fully functional. Integration into Windows bootup process.  Error handling. Tasks to complete:  Product Key follow-up / close Usability testing with MSN Feb 17-18 Revise OPK screenshots IE5 customization for OPK OEM and ISP docs for external release INS processing/Webgate.  Fully functional navigation manager.  Fully functional right pane and button pane.  Complete offline HTMLs.  Error handling/HTMLs  Finish back end implementation.  ICWCONN1.EXE for after oobe (?)  MSN integration testing starts.  Windows bootup testing starts.  Complete OPK tool. Pre-configuration support OSR changes complete Welcome changes Issues:  MSN test server should be ready at this moment.  Spec for after-oobe when user didn't signup.  Need the complete scenario for retail/int l case. Localization starts. Windows setup will include our binaries and oobe will be part of win98 OSR official build.  Milestone 4: 3/5/99 (Beta RC0)  Definition:  UI freeze. Majors bug fixes and stabilize the product. Fully merge with Win98 OSR1. Tasks to complete:  Bug fix. No more feature work for beta.  Minimum UI changes OPK tool  OEM bootcamp starts Using OPK tool, we should be able to complete OEM production scenario. Issues:  MSN real production server ready. Milestone 5: 3/12/99 (Beta RTM)
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\oobe\inc\changes.txt ===
This file details changes made to files in this directory to port the code from
the Win9x tree to the Whistler tree.

* Added setupx32.h from Millenium setup project for msobmain\auditmd.cpp.
* Add Bool2VarBool inline function to util.h.  Maps BOOL values to VARIANT_BOOL
  values appropriately: zero values remain zero, non-zero values become -1.
* Changed MSOBMAIN_ENRTY to MSOBMAIN_ENTRY.
* changed _DEBUG to DBG.
* Added ValidateEula stub to map eula validation to setupx.dll (Win9x) or
  syssetup.dll (Winnt)
  * added msobstub.h to depot for exported function declarations, typedefs, etc.
  * msobstub.h: added ValidateEula declaration
* util.h: added prototype for PumpMessageQueue( )
* appdefs.h: defined WM_OBCOMM_DIAL_DONE
* util.h: added prototype for IsThreadActive( )
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\oobe\msobcomm\changes.txt ===
This file details changes made to files in this directory to port the code from
the Win9x tree to the Whistler tree.

* Added sources file and standard NT makefile.  
* Removed msobcomm.mk and Win9x makefile. 
* Changed condition of #if in rnaapi.cpp\RasGetEntryProperties from WINVER !=
  0x400 to WINVER < 0x400.  This is potentially dangerous because the code was
  hand tuned to windows ver 4.  In fact, ChrisK said that there is a security
  hole here somewhere that was not fixed because the cost was higher than the
  risk.
* Removed definition of RASAUTODIALENTRY from inshdlr.h.  It is defined in
  ras.h.
* Removed definition for RASDT_Atm obcomglb.h.  Already defined in ras.h.
* Moved msobcomm.rc and resources.h from messages\usa to root.  Removed all
  references to messages\usa.
* Moved version info from msobcomm.rcv to msobcomm.rc.
* Removed msobcomm.rcv and msobcomm.aps.
* Included tchar.h in obcomglb.h for TCHAR and related macros.
* Removed include <netmpr.h> from ienews.cpp.  Not needed in NT build.
* Changed return value of Sz2W from int to WORD since that is what it is really
  returning.
* Changed parameter of GetSz from WORD to DWORD.  This was causing a data
  conversion error when GetSz was called with a resource ID.
* Cast return value from Sz2W in StrToSubip to BYTE to resolve data conversion
  error.
* Mapped symbols in DEF file exports table to actual symbol names in
  obcommon.lib to resolve unresolved externals.
* Commented out DESCRIPTION in msobcomm.def to resolve LNK4017 (DESCRIPTION
  statement not supported for the target platform; ignored)
* Included shellapi.h for ShellExecute
* changed _DEBUG to DBG.
* Fixed invalid handle exception during shutdown.
    * refdial.cpp: initialized m_hDialThread to NULL in constructor.
* import.cpp: CISPImport::ImportConnection
    * call to Rnaapi.InetConfigClientEx now takes szDefPhoneBook as second
      parameter instead of NULL.  
        * NT: szDefPhoneBook points to an null-terminated
          string containing the fully qualified path to the default phone.  
        * Win9x: szDefPhoneBook is NULL.
* misc.cpp
    * include shlobj.h, assert.h
    * added GetCommonAppDataDirectory( ): wrapper around 
      SHGetFolderPath(CSIDL_COMMON_APPDATA)
    * added GetDefaultPhoneBook( ): returns fully qualified path to rasphone.pbk
* obcomglb.h
    * added prototypes for
        * GetCommonAppDataDirectory
        * GetDefaultPhoneBook
* sources
    * added shfolder.lib to TARGETLIBS for SHGetFolderPath
* refdial.cpp
    * CRefDial::CRefDial: initialized BSTRs.  Fixed AV due to freeing
      uninitialized memory.
    * CRefDial::~CRefDial: wait for threads to finish before exiting
      destructor.  Fixed AV due to closing invalid thread handle.
* msobcomm.cpp, msobcomm.h, refdial.cpp, refdial.h
    Added OnDialEvent method.  This creates a way to notify the communication
    manager of dialing thread state: particularly that the thread is exiting.
    This fixes an AV that occurred because CRefDial was trying to close the
    handle of a non-existent thread (m_hDialThread) in the destructor.
* refdial.cpp, msobcomm.cpp, import.cpp,rnaapi.cpp
    * changed _NT_ to WINNT
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\oobe\msobdl\changes.txt ===
This file details changes made to files in this directory to port the code from
the Win9x tree to the Whistler tree.

* Added sources file and standard NT makefile.  
* Removed msobdl.mk and Win9x makefile. 
* Moved files from messages\usa to root.
* Moved version info from msobdl.rcv to msobdl.rc.
* Removed msobdl.rcv.
* Commented out DESCRIPTION line in msobdl.def to fix: warning LNK4017:
  DESCRIPTION statement not supported for the target platform; ignored
* changed _DEBUG to DBG.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\oobe\msobmain\changes.txt ===
This file details changes made to files in this directory to port the code from
the Win9x tree to the Whistler tree.

* Added sources file and standard NT makefile.  
* Removed msobmain.mk and Win9x makefile. 
* Moved files from messages\usa to root.
* Moved version info from msobmain.rcv to msobmain.rc.
* Removed msobmain.rcv.
* Commented out DESCRIPTION line in msobmain.def to fix: warning LNK4017:
  DESCRIPTION statement not supported for the target platform; ignored
* Mapped symbols in DEF file exports table to actual symbol names in
  obcommon.lib to resolve unresolved externals.
* Removed definitions for cszEqual, cszAmpersand, cszPlus, and cszQuestion from
  htmparse.cpp.  They are already defined in appdefs.h.
* Included shellapi.h in main.cpp and msobmain.cpp for ShellExecute.
* Added void return type to CProductID::SaveState in pid.h and pid.cpp.
* Moved icon resources from messages\usa to res.
* Where BOOL values are mapped to VARIANT_BOOLs use Bool2VarBool to map 0 to 0
  and non-zero to -1.
* #if 0'd all calls to 16-bit code.
* changed _DEBUG to DBG.
* eula.cpp: CEula::ValidateEULA now calls the ValidateEula stub in msobstub.lib
  instead of calling setupx directly to get the path to a valid eula file.
* sources: added msobstub.lib to TARGETLIBS
* msobmain.cpp: 
    * Fixed bug in CObMain::Invoke(DISPID_EXTERNAL_DIAL).  Scripts
      sometimes called window.external.dial with a BSTR as the first parameter,
      sometimes with an integer.  Handler code tried to convert parameter from
      wide chars to ascii in both cases.

      Solution: Rewrote the code for
      DISPID_EXTERNAL_DIAL/REDIAL/DIALEX/REDIALEX. 
      * For DIAL/REDIAL: Changed parameter passing so that two params are
        required
        * first param is always connection type 
        * second param is always isp file name
      * For DIALEX/REDIALEX: Changed parameter passing so that three parameters
        are required:
        * first param is always connection type, second param is always isp file
        * name, optional third param is migration isp index. 
      * Moved common code to CObMain;:OnDial method.
* msobmain.h:
    * Added prototype for CObMain::OnDial( )
* sysclock.h:
    * definition of TIME_ZONE_REGKEY depends on platform
* msobmain.cpp
    * CObMain::Invoke(DISPID_EXTERNAL_FINISH)
        * Set fFinish to TRUE if WINNT.  This will change when PID validation
          is available for syssetup.
    * MainWndProc
        * Added case for WM_OBCOMM_DIAL_DONE
* pid.cpp
    * CProductID::ValidatePID
        * ifdef WINNT set m_dwPidState to PID_STATE_VALID
        * set *pbIsValid to TRUE
    * CProductID::get_PIDAcceptance
        * ifdef WINNT always return TRUE
* msobmain.cpp, pid.cpp, userinfo.cpp, language.cpp, tapiloc.cpp,
  tapiloc.h sysclock.h
  * changed _NT_ to WINNT
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\oobe\msobmain\issues.txt ===
This file contains a list of open issues for porting the files in this
directory from the Millenium source tree to the Whistler source tree.

* Need to add platform independent layer for NT\Win9x.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\oobe\msobshel\changes.txt ===
This file details changes made to files in this directory to port the code from
the Win9x tree to the Whistler tree.

* Added sources file and standard NT makefile.  
* Removed msobshel.mk and Win9x makefile. 
* Moved resource files from messages\usa to root.
* Moved version info from msobshel.rcv to msobshel.rc.
* Removed msobshel.rcv.
* Commented out DESCRIPTION line in msobshel.def to fix: warning LNK4017:
  DESCRIPTION statement not supported for the target platform; ignored
* Mapped symbols in DEF file exports table to actual symbol names in
  obcommon.lib to resolve unresolved externals.
* Included comdef.h in statpane.h, btnpane.h, statuspn.h, and mainpane.h for
  basic COM interface declarations.
* Moved image resources from messages\usa\images to res
* Moved html resources from messages\usa to res
* Modified all references to messages\usa and messages\usa\images
* The following files contained dead code and were not ported: 
    btnpane.cpp, btnpane.h, statpane.cpp, statpane.h
* Standardized API used to find html files to GetSystemDir
    * mainpane.cpp: changed GetModuleFileName to GetOOBEDir (which calls
      GetSystemDir)
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\oobe\msobweb\changes.txt ===
This file details changes made to files in this directory to port the code from
the Win9x tree to the Whistler tree.

* Added sources file and standard NT makefile.  
* Removed msobweb.mk and Win9x makefile. 
* Moved files from messages\usa to root.
* Moved version info from msobweb.rcv to msobweb.rc.
* Removed msobweb.rcv.
* Commented out DESCRIPTION line in msobweb.def to fix: warning LNK4017:
  DESCRIPTION statement not supported for the target platform; ignored
* Mapped symbols in DEF file exports table to actual symbol names in
  obcommon.lib to resolve unresolved externals.
* Included mshtml.h in msobweb.cpp for IHTMLElement, IHTMLDocument2,
  IHTMLWindow2 declarations.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\oobe\msoobe\changes.txt ===
This file details changes made to files in this directory to port the code from
the Win9x tree to the Whistler tree.

* Added sources file and standard NT makefile.  
* Removed msoobe.mk and Win9x makefile. 
* Moved files from messages\usa to root.
* Moved version info from msoobe.rcv to msoobe.rc.
* Removed msoobe.rcv.
* Pass Unicode version of command line (returned by GetCommandLine( )) to
  LaunchOOBE( ) instead of ANSI lpCmdLine.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\opktools\placefil.txt ===
;
; This is a private placefil used by the OPK project for most of the tools.
;
; Some tools need to go into architecture specific directorys.  See
; admin\ntsetup\opktools\$(TARGET_DIRECTORY)\placefil.txt for these files.
;
; See public\sdk\lib\placefil.txt for info about placefil's in general.
;
; *** Please keep this alphabetical  ***
;


autorun.inf                     opk
install.ins                     opk\wizard
langinst.exe                    opk\wizard
oem.tag                         opk\wizard
oeminfo.ini                     opk\wizard
oobeinfo.ini                    opk\wizard
opk.msi                         opk
opkinput.inf                    opk\wizard
setup.exe                       opk
setupmgr.exe                    opk\wizard
unattend.txt                    opk\wizard
winbom.ini                      opk\wizard


;
; WinPE binaries
;
bldhives.exe                    opk\winpe
BuildOptionalComponents.vbs     opk\winpe
depend.exe                      opk\winpe
dskimage.exe                    opk\winpe
etfsboot.com                    opk\winpe
oemmint.exe                     opk\winpe
oscdimg.exe                     opk\winpe
sam                             opk\winpe
sam.log                         opk\winpe
security                        opk\winpe
security.log                    opk\winpe
software.log                    opk\winpe
winpe.bmp                       opk\winpe
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\opktools\amd64\placefil.txt ===
;
; This is a private placefil used by the OPK project for the tools
; that need to be placed in an arch specific (amd64) directory.
;
; Any files added here need to be also added to the placex86 file.
;
; See public\sdk\lib\placefil.txt for info about placefil's in general.
;
; *** Please keep this alphabetical  ***
;

factory.exe             opk\tools\amd64
setupcl.exe             retail:opk\tools\amd64
setupmgr.exe            opk\tools\amd64
sysprep.exe             opk\tools\amd64

;
; WinPE files
;

netcfg.exe              opk\tools\amd64
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\opktools\bioslock\readme.txt ===
For more information see 

1) "%sdxroot%\base\ntsetup\docs\Microsoft System Locked Media Whitepaper.doc".

It is a white paper which details how to create BIOS locked solution.
This doc was shared with OEMs for NT4 + W2K BIOS locked solution.


*****
This is dead code for XP and future versions of the OS
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\opktools\cvtarea\readme.txt ===
PM Owner: DGolds

Tool for OEM injection of files into FAT images under DOS.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\opktools\deploycb\placedep.txt ===
makefile.deploy			dump\deploytools
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\opktools\docs\booting_winpe_from_ris_servers.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corporation Windows Platform White Paper TitleMicrosoft Corporation Normal Microsoft Corporation Microsoft Word 9.0$\.*^ SbF0bWindows XP  OEM Preinstallation Kit Design Notes Microsoft( Windows( Family of Operating Systems Booting Windows Preinstallation Environment (WinPE) from Remote Installation Services (RIS) Servers MICROSOFT CONFIDENTIAL - PROVIDED UNDER NDA DO NOT REDISTRIBUTE ABSTRACT:  This document is for OEMs only. It describes the prerequisites and procedures for creating an image and booting Windows Preinstallation Environment (WinPE) remotely from Remote Installation Services (RIS) servers.  The information contained in this document represents the current view of Microsoft Corporation on the issues discussed as of the date of publication.  Because Microsoft must respond to changing market conditions, it should not be interpreted to be a commitment on the part of Microsoft, and Microsoft cannot guarantee the accuracy of any information presented after the date of publication. This White Paper is for informational purposes only.  MICROSOFT MAKES NO WARRANTIES, EXPRESS OR IMPLIED, AS TO THE INFORMATION IN THIS DOCUMENT. Complying with all applicable copyright laws is the responsibility of the user.  Without limiting the rights under copyright, no part of this document may be reproduced, stored in or introduced into a retrieval system, or transmitted in any form or by any means (electronic, mechanical, photocopying, recording, or otherwise), or for any purpose, without the express written permission of Microsoft Corporation.  Microsoft may have patents, patent applications, trademarks, copyrights, or other intellectual property rights covering subject matter in this document.  Except as expressly provided in any written license agreement from Microsoft, the furnishing of this document does not give you any license to these patents, trademarks, copyrights, or other intellectual property.  2001 Microsoft Corporation.  All rights reserved. Microsoft, Win32, Windows, and Windows NT are either registered trademarks or trademarks of Microsoft Corporation in the United States or other countries or regions. The names of actual companies and products mentioned herein may be the trademarks of their respective owners. Introduction To speed production, OEMs can boot destination computers with the Windows Preinstallation Environment (WinPE) by using Remote Installation Services (RIS) servers. RIS is an optional component of Windows 2000 Server and Windows .NET Server operating systems. By booting WinPE remotely, the destination computers do not have to be manually booted. This method is only available for the 32-bit version of WinPE. The 64-bit version of WinPE does not support this method. Using WinPE over any other Preboot eXecution Environment (PXE) server or network boot medium is untested. RIS is the supported method of launching WinPE over the network. Prerequisites The following items are required: A Windows XP product CD and a WinPE CD of the same build number. A properly configured Windows 2000 (SP2) or Windows .NET RIS server. Your destination computers must have a PXE-enabled network interface card (NIC), or have a NIC that is supported by the RIS boot disk. Windows 2000 RIS Server  To install on a Windows 2000 RIS server, deploy the hotfix referenced in KB article Q287546. Contact your technical account manager (TAM) or Product Support Services (PSS) to obtain this hotfix. To fully automate the installation on a Windows 2000 RIS server, use Startrom.n12 and Oschoice.exe from Windows .NET Server. Add the tag <META ACTION=AUTOENTER> at the beginning of Startrom.n12 to simulate the pressing of the ENTER key on the client running the Installation Wizard.  Creating a RIS image and booting from it On the RIS server, open a command prompt and run RISetup.exe  add.  When prompted for a source, point RISetup to your Windows XP product CD.  Browse to the location where RISetup installed the image.  For example, \\Server_name\Share_name\REMINST\Setup\Language\Images. Open the I386 folder in the folder of the image you just created. Browse to the CD or network share containing your WinPE files, and open its I386 folder. Copy the contents of the WinPE I386 folder into the Remote Install I386 folder you just opened, overwriting all files if prompted. Open the Templates folder in the I386 folder you just copied WinPE into. Open the RIStndrd.sif file in a text editor, and on the line that starts with OSLoadOptions, add the switch /minint. Start a RIS client, and select the operating system image you created in Step 1. WinPE starts.  STYLEREF "Print Division Title" \* MERGEFORMAT  Booting Windows Preinstallation Environment (WinPE) from Remote Installation Services (RIS) Servers  PAGE  Microsoft Corporation. All rights reserved.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\opktools\docs\acpi_docking_for_windows.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corporation ACPI Docking for Windows Operating Systems TitleMicrosoft Corporation Normal Microsoft Corporation Microsoft Word 9.0SbF0b X*ed- QsYh| flpYl j^j:$HR @gx : dxJf$  Op<vKWindows Platform Design Notes Designing Hardware for the Microsoft( Windows( Family of Operating Systems ACPI Docking for Windows Operating Systems Abstract: This paper describes how to implement ACPI-based docking in the BIOS for machines running Windows operating systems. The information in this paper applies to Microsoft  Windows  98, Windows Millennium Edition (Me), Windows 2000, and the next release of Microsoft Windows, codenamed Windows  Whistler. Contents Contents Introduction to ACPI Expansion Units Identifying Expansion Units in an ACPI Namespace Minimum Hardware Requirements for Expansion Units Pass-through Devices and Ports Describing Pass-through Devices and Ports in ACPI Electrical Isolation and Pass-Through Devices Multiple Expansion Units on a Single System Supporting Different Expansion Units Supporting Stacked Expansion Units Handling Serial Numbers Physical Security Physical Keylock Software-Controlled Locking Mechanism Suppressing the Safe Removal Message for Windows 98/Windows Me Use of PCI-to-PCI Bridges in Docking Stations Undocking Warm Undocking Surprise Undocking Windows Logo Program Requirements for Docking Stations Call to Action Related Resources Disclaimer: The information contained in this document represents the current view of Microsoft Corporation on the issues discussed as of the date of publication. Because Microsoft must respond to changing market conditions, it should not be interpreted to be a commitment on the part of Microsoft, and Microsoft cannot guarantee the accuracy of any information presented. This document is for informational purposes only. MICROSOFT MAKES NO WARRANTIES, EXPRESS OR IMPLIED, IN THIS DOCUMENT. Microsoft Corporation may have patents or pending patent applications, trademarks, copyrights, or other intellectual property rights covering subject matter in this document. The furnishing of this document does not give you any license to the patents, trademarks, copyrights, or other intellectual property rights except as expressly provided in any written license agreement from Microsoft Corporation.  Microsoft does not make any representation or warranty regarding specifications in this document or any product or item developed based on these specifications. Microsoft disclaims all express and implied warranties, including but not limited to the implied warranties or mer chantability, Fitness for a particular purpose and freedom from infringement. Without limiting the generality of the foregoing, Microsoft does not make any warranty of any kind that any item developed based on these specifications, or any portion of a specification, will not infringe any copyright, patent, trade secret or other intellectual property right of any person or entity in any country. It is your responsibility to seek licenses for such intellectual property rights where appropriate. Microsoft shall not be liable for any damages arising out of or in connection with the use of these specifications, including liability for lost profit, business interruption, or any other damages whatsoever. Some states do not allow the exclusion or limitation of liability or consequential or incidental damages; the above limitation may not apply to you.  Microsoft, Win32, Windows, and Windows NT are trademarks or registered trademarks of Microsoft Corporation in the United States and/or other countries. Other product and company names mentioned herein may be the trademarks of their respective owners. Microsoft Corporation. All rights reserved. Introduction to ACPI  The Advanced Configuration and Power Interface (ACPI) Specification is an open industry specification that was developed to establish industry common interfaces enabling robust operating system (OS)-directed motherboard device configuration and power management of both devices and entire systems. ACPI is the key element in Operating System-directed configuration and Power Management (OSPM).  ACPI evolves the existing collection of power management BIOS code, Advanced Power Management (APM) application programming interfaces (APIs), PNPBIOS APIs, Multiprocessor Specification (MPS) tables, and so on into a well-defined power management and configuration interface specification. ACPI provides the means for an orderly transition from existing (legacy) hardware to ACPI hardware, and it allows for both ACPI and legacy mechanisms to exist in a single machine and to be used as needed. Further, new system architectures are being built that stretch the limits of current Plug and Play interfaces. ACPI evolves the existing motherboard configuration interfaces to support these advanced architectures in a more robust and potentially more efficient manner. ACPI run-time components.  ACPI is neither a software specification nor a hardware specification. Rather, ACPI is an interface specification that comprises both software and hardware elements. ACPI has three run-time components: ACPI system description tables describe the interfaces to the hardware. Some descriptions limit what can be build, but most descriptions allow the hardware to be built in arbitrary ways and can describe arbitrary operation sequences needed to make the hardware function. ACPI tables that contain definition blocks can use ACPI Machine Language (AML), a type of pseudocode that is interpreted by OSPM. ACPI registers represent the constrained part of the hardware interface. Their locations are described by ACPI description tables. ACPI system firmware refers to the portion of the firmware that is compatible with the ACPI specification. Typically, this is the code that boots the machine and implements interfaces for sleep, wake, and some restart operations. Device Descriptions. Devices are described in a hierarchical ACPI namespace in which devices are arranged according to their bus topology. Because this namespace comes from the BIOS, only devices that are built into the machine (motherboard devices) or the docking station can be described in the namespace. Further, the namespace only lists devices that have some feature not controlled by an industry standard specification. For example, COM ports are always listed in the namespace because there is no other mechanism for setting an ISA COM port's hardware resources. However, a device that is fully compliant with Peripheral Component Interconnect (PCI) 2.2, such as a network adapter chip soldered onto the motherboard, does not need to be listed in the namespace, because its power management and Plug and Play functions can be controlled entirely by the PCI bus. Control methods. A control method defines how the OS can perform a simple hardware task. For example, the OS invokes control methods to read the temperature of a thermal zone. Control methods are written in AML and are interpreted and executed by the ACPI-compatible OS. An ACPI compatible system must provide a minimal set of control methods in the ACPI tables. The OS provides a set of well-defined control methods that ACPI table developers can reference in their control methods. Control methods are also used for system-wide tasks such as event handling. Events. ACPI includes a general event model used for Plug and Play, Thermal, and Power Management events. The event model consists of two registers: an event status register and an event enable register. When an event occurs, the core logic sets a bit in the status register to indicate the event. If the corresponding bit in the enable register is set, the core logic asserts the system control interrupt (SCI) to signal the OS. When the OS receives this interrupt it runs the control methods that correspond to any bits set in the event status register. These control methods use AML commands to tell the OS which event occurred. For example, when a mobile PC is docked, the core logic sets the status bit and signals the SCI. The OS checks the status bit and runs the control method for that bit. The control method checks the hardware and determines that the event was a docking event. It then signals to the OS that a docking event has occurred, and can tell the OS specifically where in the device hierarchy the new devices will appear. ACPI events are either fixed events or general-purpose events. When OSPM receives a fixed event, it directly reads and handles the event registers itself. When OSPM receives a general-purpose event (GPE), it either passes control to an ACPI-aware driver or it uses an OEM-supplied control method to handle the event. An OEM can implement up to 128 general-event inputs in hardware per GPE block, each as either a level-triggered or edge-triggered event. It is also possible to implement a single 256-pin block if it is the only block defined in the system.  The OEM AML code can perform OEM-specific functions that are customized to each event the particular platform might generate by executing a control method that matches the event. For GPE events, OSPM will execute the control method of the following name: \_GPE._TXX where XX is the hexadecimal value of the event to be handled T indicates the event handling type:   for an edge-triggered event or   for a level-triggered event The _LXX or _EXX control method determines what happened and calls the Notify function to tell the operating system what to do. Notify takes two parameters: the name of the device in the ACPI namespace that is affected by this event, and a notification code that tells the operating system which action to take. Some standard event notifications are:  0 - Enumerate this bus  1 - Check device (a specific device has been added or removed)  2 - Device is asserting Wake  3 - Request Eject Dock event notifications are:  Dock attached 1 or 3   Eject dock Expansion Units This paper uses the term  expansion unit  to refer to docking stations, port replicators, and similar devices such as hardware slices (units that typically add one or two capabilities to a portable computer, such as storage and battery). ACPI docking treats all such devices in the same way.  Identifying Expansion Units in an ACPI Namespace The ACPI specification describes a device as having docking station capabilities if it implements a _DCK method. System manufacturers might implement _DCK methods for several different types of expansion units (including port replicators and slices) because a _DCK method causes the Windows Start menu to display an Eject PC command. A _DCK method also supports profile-specific settings, such as video resolutions, for the expansion unit. As originally envisioned by the authors of the ACPI specification, devices such as network controllers and PCI-to-PCI bridges were augmented in the ACPI namespace to include the necessary support code for isolation (_DCK), identification (_UID), and ejection (_EJx). Unfortunately, this design does not allow the expansion unit to be  branded" by the operating system. The Windows 98, Windows Me, and Windows 2000 operating systems always identify a _DCK device as a generic  Docking Station  in messages and dialog boxes, rather than using the name of the _DCK device. This spares the user from messages that are accurate to the operating system but meaningless to users, such as  It is now safe to detach your laptop from the  Intel 82380PB PCI to PCI Docking bridge. However, system manufacturers might want to customize the name of the expansion unit displayed to the user for several reasons. For example:  If a mobile PC can be attached to a slice and a full docking station at the same time, the message that is displayed during a successful Eject PC request ( It is now safe to detach your mobile PC from the Docking Station ) is ambiguous, because both units are called  Docking Stations  in the message.  A port replicator is also labeled as a  Docking Station  by default. A system manufacturer might prefer to reserve the name  Docking Station  for a higher-end expansion unit in its product line.   Windows Whistler provides support for branding _DCK devices only for namespace objects that are dedicated entirely to controlling the expansion unit. A BIOS indicates this by using a device with *PNP0C15 for the _CID and a manufacturer-defined ID for a _HID for the expansion unit. The following example shows the ACPI source language (ASL) code from an ACPI BIOS for a dock that contains a PCI-to-PCI bridge. In this example, the _HID is *OEM1234. Example 1.  An ACPI Namespace Object Dedicated to Controlling an Expansion Unit Device(_SB)     // Replicator device, replace *OEM1234      // with a vendor specific ID     Device(DOCK)         _HID    *OEM1234         _CID    *PNP0C15         _DCK    {...}         _STA    {...}         _EJ0    {...}         _EJ3    {...}         _EJ4    {...}     Device(PCI0)         ...         Device(P2PB)             //              // PCI to PCI bridge, d = Device, f = function             // EJD associates this device with the              // docking station.             _ADR    0xddddffff             _EJD    \_SB.DOCK When a signed vendor-supplied INF that matches the _HID identifier is found, the operating system will display the description specified in the INF in any messages about the expansion unit. A vendor-supplied INF can also be used to add features to a dock, such as keylock support as described in  Physical Security  later in this paper.  If a vendor-supplied INF that matches the identifier specified in the _HID method is not found, Windows 2000 and Windows Whistler will use system-supplied INFs that identify *PNP0C15 as a Docking Station.  Neither Windows 98 nor Windows Me supply default INF entries for the *PNP0C15 ID. If a vendor-supplied INF is not present on those operating systems, devices in the dock may not start. The following sample INF shows device-specific strings in italic. A manufacturer would substitute strings specific to the expansion unit. Example 2.  A Sample INF Showing Device-Specific Strings [Version] Signature="$WINDOWS NT$" Class=System ClassGuid={4D36E97D-E325-11CE-BFC1-08002BE10318} Provider=%OEMName% DriverVer=01/15/2001,1.0.0.0 [ControlFlags] ExcludeFromSelect=* [Manufacturer] %OEMName%=OemSection [OemSection] %DockModel.DeviceDesc% = DockModelSection, *OEM1234 [DockModelSection] [DockModelSection.NT] [DockModelSection.NT.Services] AddService = , 0x00000002   ; null service install [Strings] OEMName=OEM company name DockModel.DeviceDesc=Dock Model Description for user Minimum Hardware Requirements for Expansion Units An expansion unit that is described by a _DCK method must support the following features: Presence Notification. The BIOS must be able to determine whether the expansion unit was physically attached or detached. Specifically, the BIOS must be able to do the following: Call Notify(,0) when an expansion unit is attached Call Notify(,1) when an expansion unit is detached Be able to provide correct presence information through the _STA method if the expansion unit was detached while the machine was asleep Electrical Isolation. Windows 2000 and Windows Whistler require electrical isolation only for PCI and IDE pass-through devices and ports. Windows 98 and Windows Me require electrical isolation for all pass-through devices and ports. For more information, see  Pass-Through Devices and Ports  later in this paper.  Serial Numbers. The Windows Logo Program for hardware requires unique serial numbers on all docking stations. The serial number can be supplied in any number of ways as long as there is no chance another identical docking station will supply the same number. Common sources for serial numbers include MAC addresses from network adapters, EUI64 identifiers from IEEE 1394 controllers, and EPROMs burned in the factory. Port replicators and slices do not need to supply unique serial numbers. However, the BIOS for such devices must supply a false serial number if the replicator or slice has a _DCK method. For information, see  Handling Serial Numbers  later in this paper. Windows Logo Program requirements for docking stations are summarized at the end of this paper. The most current Windows Logo Program requirements are available online at http://www.microsoft.com/hwdev/winlogo  Pass-through Devices and Ports This section discusses issues related to pass-through devices and ports. Describing Pass-through Devices and Ports in ACPI Most pass-through devices and ports require the BIOS to implement an _EJD method that associates the device with the dock in the ACPI namespace, as described in this section. Exceptions are PS/2 ports and video ports:  PS/2 ports. Nothing needs to be done in the BIOS for PS/2 ports. All PS/2 port devices can be removed safely, and the operating system automatically rescans PS/2 ports during any dock or undock event. Video ports. VGA ports need not be described in the ACPI namespace. Display-specific settings such as gamma adjustments and refresh rates are tied to the Plug and Play ID returned by modern monitors. The operating system automatically switches to the correct settings if a monitor appears or disappears during a docking or undocking operation, or at any other time. The portion of the ACPI specification that describes the _ADR method documents the values appropriate for devices on particular buses (PCI, USB, and so on). For additional information, see  Implementing Hot-Swapping Device Support in ACPI  at http://www.microsoft.com/hwdev/onnow/HotSwap.htm.  PCI Devices A PCI device that disappears when the expansion unit is detached must be described in the ACPI namespace unless its parent device is already associated with an expansion unit. Failure to do so may cause the system to hang when the expansion units is detached.  Example 3.  A PCI to PCI docking bridge Device(P2PB)             // PCI to PCI bridge     _ADR    0xddddffff   // Device dddd, function ffff     _EJD    \_SB.DOCK    // Expansion unit in namespace USB Ports A USB port that is passed through a mobile PC to an expansion unit must be described in the ACPI namespace. Failure to do so may result in data corruption when the user undocks a hard drive attached to the USB port. Corruption occurs when applications or the operating system fail to flush cached changes to the volume. Example 4.  USB port 1 Passed Through a Mobile PC to a Port Replicator Device(USBC)             // PCI USB controller     _ADR    0xddddffff   // Device dddd, function ffff     Device(RHUB)         // USB root hub         _ADR    0        // Root hub is always 0         Device(USBA)                _ADR    1          // Port 1 on USB controller             _EJD    \_SB.REPL  // Expansion unit in namespace The following example shows how a mobile PC with an integrated hub passes USB port 2 through the hub to a docking station.  Example 5.  USB Port 2 Passed Through an Integrated Hub to a Docking Station Device(USBC)             // PCI USB controller     _ADR    0xddddffff   // Device dddd, function ffff     Device(RHUB)         // USB root hub         _ADR    0        //  (Root hub is always 0)         Device(IHUB)                _ADR    1    // Internal hub on USB ctrl port 1             _RMV    { return 0; } // Let OS know hub is internal             Device(UPST) // Hub port #2                 _ADR    2                 _EJD    \_SB.DOCK COM Ports A COM port that is passed through a mobile PC to the expansion unit must be described in the ACPI namespace. Failure to do so may result in surprise removal warnings when the expansion unit is detached if an enumerable serial device such as an older digital camera is attached to the expansion unit through the COM port.  It is not possible to describe a device behind a COM port in ASL, so the BIOS must associate the COM port itself with the expansion unit in the ACPI namespace. During an eject operation, the operating system shuts down the COM port and the device behind it. When the eject operation is complete, the BIOS reports the COM port as present, so the operating system restarts the COM port. Example 6.  A Mobile PC with a Pass-Through Serial Port Device(ISA0)             // PCI to ISA bridge     _ADR    0xddddffff   // Device dddd, function ffff     Device(COM1)         // Com port 1         _HID    *PNP0501         _STA    {...}         _EJD    \_SB.DOCK         ... IEEE 1394 Controller The ACPI specification currently does not define a mechanism for describing a device or port behind an IEEE 1394 controller. If an IEEE 1394 port is passed through a mobile PC to an expansion unit, the IEEE 1394 controller must be associated with the expansion unit in the ACPI namespace. Failure to do so can definitely lead to data corruption if an IEEE 1394 storage unit is attached to the expansion unit.  Describing the IEEE 1394 controller in the namespace means every IEEE 1394 device, even internal ones, must be shut down during an undocking operation. If a system uses an internal IEEE 1394 hard drive for operating system installation, the mobile PC cannot pass an IEEE 1394 port through to the docking station, because the boot drive can never be shut down. Describing a device or port behind an IEEE 1394 controller would require an amendment to the ACPI 2.0 specification. Operating system support would be included in a future release of the operating system after such an amendment was approved. Example 7.  A Mobile PC with a Pass-Through IEEE 1394 Port Device(1394)             // 1394 controller     _ADR    0xddddffff   // Device dddd, function ffff     _EJD    \_SB.RPLR    // Port replicator LPT Port An LPT port that is passed through a mobile PC to an expansion unit must be described in the ACPI namespace. Failure to do so may result in data corruption when the user undocks the expansion unit if a storage device such as a ZIP drive is attached to the expansion unit.  As with COM ports, there is no way in ASL to describe the device behind the LPT ports, so the BIOS must associate the LPT port itself with the docking station. Windows 2000 will sometimes block an undocking operation if a printer is attached to the parallel port. This issue is fixed in Windows Whistler, so the BIOS should explicitly test for Windows 2000 and  disable  the _EJD for that version of Windows. For information about detecting the version of the operating system, see the list of resources at the end of this paper. Windows 2000 will bugcheck the system with a Bad BIOS error if the _EJD points to a node that does not exist, so the ASL code should be written as shown in the following example.  Example 8.  A Mobile PC with a Pass-Through LPT Port Device(ISA0)             // PCI to ISA bridge     _ADR    0xddddffff   // Device dddd, function ffff     Device(LPT1)         // LPT port 1         _HID    *PNP0401         _STA    {...}         Method(_EJD)         {             Store (\_OS,local0) // SCMP (string compare function), implementation // dependent. Takes two inputs and returns 0 if  // true, one or ones if false                         Store (SCMP(local0,"Microsoft Windows NT"),local1)             If (local1)             {                  // Windows 9x, ME, or other.                  return \_SB.DOCK             }              // It is Windows 2000 or better. Check _OSI             // against Windows 2001 in case _OSI support             // was added to Windows 2000 in a service pack.          If (CondRefOf(_OSI,Local0))           {              if (\_OSI("Windows 2001"))              {                  // Windows Whistler or better.                     return \_SB.DOCK              }             }             // Win2K - Point to never present device.             return  \_SB.PCI0.ISA0.DMMY         }     Device(DMMY)         // Dummy device for Win2K printer _EJD         _HID    *PNP0C02         _STA    0 Electrical Isolation and Pass-Through Devices Version 1.0 of the ACPI specification assumes that all hot-removable expansion units provide full electrical isolation between the mobile PC and any devices. For both Windows 2000/Windows Whistler and Windows 98/Windows Me, a BIOS should perform full electrical isolation in the _DCK method for buses that require it (PCI and IDE). Pass-through devices that are not electrically isolated are handled differently by Windows 98/Windows Me and Windows 2000/Windows Whistler: Windows 98/Windows Me do not support pass-through devices without electrical isolation, so there is no way to prevent  surprise removal  notifications or storage removal notifications when non-isolated pass-through devices are detached on these operating systems. Full electrical isolation is necessary to prevent these messages from appearing. Windows 2000/Windows Whistler do support hot removal of pass-through devices that are not electrically isolated. However, proper support requires the system manufacturer to pend the _EJ0 method for Windows 2000/Windows Whistler but not for Windows 98/Windows Me, because the hot-undocking sequence differs between the two operating systems. Pending the _EJ0 method on Windows 98/Windows Me would cause the OS to display a  safe to detach  message after the user had physically detached the mobile PC. This section describes differences between the hot-undocking sequence for Windows 2000/Windows Whistler and Windows 98/Windows Me, and it provides guidelines for adjusting an _EJ0 method based on operating system version. Hot-Undocking Sequence for Windows 2000 and Windows Whistler The hot undocking sequence for Windows 2000/Windows Whistler is as follows: The OS unloads drivers for devices in the expansion unit. The OS calls _DCK(0) method. The OS displays the safe removal notification to the user: Windows has finished undocking the system. If you need to remove the system from the Docking Station, please do so now. The OS begins asynchronous execution of the _EJ0 method. The BIOS pends the _EJ0 method until the user detaches the mobile PC from the expansion unit. The BIOS completes the _EJ0 method.  The OS restarts any devices that did not disappear during the undocking operation. Windows 2000 and Windows Whistler display the safe removal notification message after the _DCK method finishes, because the _DCK method should have electrically isolated all pass-through devices on buses that require it (such as PCI or IDE).  The BIOS pends the _EJ0 method until after the expansion unit is detached to prevent the operating system from prematurely restarting any devices that are still visible via the pass-through ports. It is possible that the user may request an eject operation and subsequently forget to detach the notebook. If the expansion bay has a physical interlock, the BIOS could optionally "redock" the mobile PC if no user activity occurs after 30 seconds.  This solution has two disadvantages that BIOS writers should be aware of: Windows 2000/Windows Whistler display the safe removal dialog before running _EJ0, so it is not possible to fail an undocking attempt on a physically locked system. The hot-undocking sequence for Windows 98 and Windows Me does not support pass-through devices without electrical isolation, so the _EJ0 method must operate differently for Windows 98/Windows Me and Windows 2000/Windows Whistler, as described later in this section. Hot-Undocking Sequence for Windows 98 and Windows Me Windows 98 and Windows Me use the following hot undock sequence: The OS unloads drivers for devices in the expansion unit. The OS calls the _DCK(0) method. The OS calls the _EJ0 method and waits for it to finish. The OS displays the safe removal notification to the user: Windows told the computer to undock. If you need to eject the system by hand, please do so now. The OS restarts any devices that did not disappear during the undocking operation. If a BIOS pends the _EJ0 method until the dock is detached from the expansion unit on Windows 98/Windows Me, the user will not be told that it is safe to detach the expansion unit until after the expansion unit is already physically detached, making the notification message meaningless.  Adjusting an _EJ0 Method Based on the Operating System Version A BIOS that is intended for both Windows 2000/ Whistler and Windows 98/Windows Me should adjust the _EJ0 method's behavior based on the operating system, as shown in the following example: Example 9.  Adjusting an _EJ0 Method Based on the Operating System Version Method(_EJ0)     //     // Set lights or other indicators     //     Store (_OS, local0)     // SCMP (string compare function), implementation     // dependent. Takes two inputs and returns 0 if      // true, one or ones if false                 if (Not(SCMP(local0, "Microsoft Windows NT")))     {         //         // Windows 2000, Windows Whistler, or later version.          // Wait for physical detach of expansion unit.         //      } Multiple Expansion Units on a Single System This section provides guidelines for supporting multiple expansion units on a single system. Supporting Different Expansion Units Pass-through devices present special difficulties for a BIOS that exposes more than one expansion unit. Consider the following three objects in an ACPI namespace: Example 10a.  Full Docking Station Device(FDCK)     _HID    *OEM1234     _CID    *PNP0C15     _DCK    {...}     _STA    {...}     _UID    {...}     _EJ0    {...} Example 10b.  Mini-Dock Device(MDCK)     _HID    *OEM1235     _CID    *PNP0C15     _DCK    {...}     _STA    {...}     _UID    {...}     _EJ0    {...} Example 10c.  COM Port 1 Device(COM1)     _HID    *PNP0C15     _EJD    \_SB.GDCK        In the above example, both the full dock and the mini-dock pass through the COM port. However, the ACPI specification allows _EJD to point to only one namespace object. Furthermore, there is no defined mechanism to tell an OS to reevaluate an _EJD method. Windows 98 and Windows Me would read the value when the COM port was started. Windows 2000 and Windows Whistler both read the _EJD once during table load and never evaluate it again. As a consequence, the BIOS must collapse the code for both docking stations into one global dock. Example 11a.  A  Global  Docking Station That Combines a Full Docking Station with a Mini-Dock Device(GDCK)     _HID    *OEM1236     _CID    *PNP0C15     _DCK    {...}     _STA    {...}     _UID    {...}     _EJ0    {...} Example 11b.  COM Port 1 Device(COM1)     _HID    *PNP0C15     _EJD    \_SB.GDCK        Unfortunately, this solution makes branding the expansion unit very difficult. Turning _HID into a method is not sufficient, because Windows 2000 and Windows Whistler evaluate the _HID method as soon as the namespace table for the device is loaded. To brand a dock, the BIOS would have to load the table containing the GDCK object before it notifies the OS that a docking event has occurred, and then unload the table after undocking. However, unloading a table is likely to expose problems with Windows 98 and is not recommended. Microsoft is actively investigating ways to solve the issues related to pass-through devices as described in this section.  Supporting Stacked Expansion Units Some mobile PCs can support more than one expansion unit at the same time. A common example is a mobile PC attached to a slice, which is in turn attached to a full docking station (both with _DCK methods). The proper ASL to support such a scenario is shown in the following example. Example 12.  ASL for Stacked Expansion Units Device(_SB)     Device(SLCE)         //         // Slice          //         _HID    *OEM1234         _CID    *PNP0C15         _DCK    {...}         _STA    {...}         _UID    {...}         _EJ0    {...}         Device(DOCK)             //             // Full dock that attaches only to             // slice             //             _HID    *OEM1235             _CID    *PNP0C15             _DCK    {...}             _STA    {...}             _UID    {...}             _EJ0    {...} If the DOCK object is not placed under the SLCE object, Windows 2000 and Windows Whistler create an extraneous hardware profile. This can happen because during boot the OS may find the DOCK before the SLCE. The resulting four profiles would be Undocked, SLCE, SLCE+DOCK, and DOCK.  If the Eject PC option on the Start menu is invoked in a system with more than one expansion unit, Windows 2000 and Windows Whistler will always select the deepest device in the namespace. There is currently no way to specify different behavior. Note that stacked expansion units require extra PNPBIOS serial number code. For more information, see  Handling Serial Numbers  later in this paper. Handling Serial Numbers  All of the ACPI-enabled versions of Windows retrieve the PNPBIOS docking serial number during the real-mode loader phase of boot. This allows the OS to select the correct hardware profile and boot with its settings without having to first load the HAL and the ACPI driver. As a consequence, Windows operating systems must be able to correlate the PNPBIOS serial number with the ACPI serial numbers returned by one or more docking stations. The algorithm used to match these two numbers depends on the operating system. Windows 98/Windows Me. These versions of Windows ignore the serial number specified by the _UID method and instead execute the _BDN method. The _BDN method must return an integer that exactly matches the serial number returned by PNPBIOS. If two expansion units are attached, the BIOS must ensure the PNPBIOS number uniquely represents the combination of the two units. Furthermore, each _BDN must return that number.  Windows 2000/Windows Whistler. These versions of Windows ignore the _BDN method and rely solely on the _UID method. The _UID method can return any string as long as the characters belong to the ASCII set 0x21 ( ) to 0x7F ( ) except 0x2C ( ). As with Windows 98 and Windows Me, the serial number returned by PNPBIOS must be a unique combination of the two units. The strings returned in the _UID method do not need to be identical and should be different strings. Slice/Port Replicator. Although neither slices or port replicators are required to have unique serial numbers, the BIOS must still present the appearance of a serial number to the OS if the slice or replicator has a _DCK method. For example, consider a mobile PC that can be attached individually to a replicator, a slice, a dock, or the combination of a replicator and dock. The BIOS for such a mobile PC might calculate serial numbers as shown in the following tables. Table 1.  PNPBIOS Serial Number Calculated by _BDN Method for Windows 98/Windows Me Value Returned by _BDN Method  Nothing attached to mobile PC Fail PNPBIOS serial number request Replicator present Return 1 Slice alone present Return 2 Slice and dock present Return 2 + Serial number Table 2.  PNPBIOS Serial Number Calculated by ACPI _UID Method for Windows 2000/Windows Whistler Value Returned by _UID Method  Nothing attached to mobile PC Replicator present Replicator _UID returns 1 Slice alone present Slice _UID returns 2 Slice and dock present Slice _UID returns 2 Dock _UID returns Serial number Physical Security Physical security refers to the ability to prevent the removal of a mobile PC from a docking station. An expansion unit can be secured with a physical keylock or with a software-controlled locking mechanism. If an expansion unit is physically locked, the BIOS should fail attempts to undock the unit through software and, if possible, suppress safe removal messages that might confuse users. Physical Keylock If the mobile PC is physically locked into the docking station, BIOS designers might want the BIOS to fail any attempts to undock the mobile PC, because the safe removal dialog might tempt users to apply excessive force to their hardware. Failing _EJ0 on dock devices has no effect on Windows 2000 and Windows Whistler for reasons described earlier in this paper.   To present the proper user interface, the manufacturer might supply a driver that loads against the docking station. Such a driver would run a method to determine whether the station is locked, and if so, fail the undocking operation. For information about writing drivers for Windows operating systems, see the Windows DDK. Availability of the DDK is listed at the end of this paper. Software-Controlled Locking Mechanism If the docking station has a non-defeatable locking mechanism (that is, a locking mechanism that a user cannot overcome with physical force), the mobile PC can be secured by operating system software. The BIOS on such a system should ignore any requests to undock the mobile PC while the machine is off, and it should wake the machine if a request is registered to physically undock the mobile PC. By default, Windows 2000 and Windows Whistler allow any user to eject the mobile PC via the Start menu. The Local Security Policy editor  User Rights/Remove computer from docking station  option in the Control Panel can be used to restrict which users are allowed to eject the mobile PC. Windows 2000 does not block any undocking attempt that is initiated from a physical eject button. A manufacturer who also wants to restrict this option must write a service or application that registers for hardware profile changes and vetoes any changes that are initiated from an unqualified user. For information about registering for hardware-related notifications, see the Microsoft Platform SDK, which is available through Microsoft MSDN Professional subscription.  Windows Whistler provides a built-in option to restrict undocking attempts that are initialized from a physical eject button. The Local Security Policy editor  Security Options/Allow undock without having to log on  option in the Control Panel blocks undocking attempts that are initiated from a physical eject button unless the user who is currently logged onto the console has the  Remove computer from docking station  privilege. Suppressing the Safe Removal Message for Windows 98/Windows Me For the sake of usability, a BIOS on a locked system should fail attempts to undock a mobile PC that is physically locked, because the safe removal message might mislead a user into attempting to forcibly undock the mobile PC, which might damage the hardware.  It is not possible for the BIOS to fail the _LCK and _DCK methods or to retrieve the current locked state of a device. For Windows 98/Windows Me, the BIOS can suppress the safe removal message for a physically locked mobile PC by failing the _EJ0 method during a hot undocking operation.  This technique does not work for Windows 2000/Windows Whistler because those operating systems display the safe removal message before running _EJ0, so the message appears even if the BIOS fails _EJ0.  For information about implementing an _EJ0 method that works differently on different operating systems, see  Adjusting an _EJ0 Method Based on the Operating System Version  earlier in this paper. Use of PCI-to-PCI Bridges in Docking Stations Issues concerning PCI bridges are covered in detail in a separate paper,  PCI-to-PCI Bridges and CardBus Controllers on Windows 2000 and Windows Whistler,  listed at the end of this document. This section summarizes two areas of special concern to docking. Positive Decode versus Subtractive Decode. A PCI-to-PCI bridge can be configured for positive decode or subtractive decode.  Subtractive decode has significant disadvantages for the system as a whole because of the restrictions it places on memory allocation. However, if a docking station has no PCI slots but does have PC Card slots, the bridge should be configured for subtractive decode. This ensures that the small minority of PCMCIA cards that require legacy addresses will work.  If the docking station has PCI slots, it should be configured for positive decode. This maximizes performance for devices in the PCI slot and allows peer-to-peer DMA for devices behind the bridge, which is not possible when the bridge is configured for subtractive decode.  Bridge in Dock versus Bridge in Mobile PC. A PCI-to-PCI docking bridge should either always be visible or should only be visible based on the _DCK method. It is up to the manufacturer to decide whether to install a bridge in the docking station or in the mobile PC.  One advantage of having the bridge always present in the mobile PC is that it allows the BIOS to preconfigure the bridge with a large resource window. By default, Windows 2000 and Windows Whistler will configure newly detected bridges with only 4K of I/O space, which sometimes prevents devices behind the bridge from starting due to insufficient hardware resources.  Undocking This section provides guidelines for support of warm undocking and surprise undocking. Warm Undocking Warm undocking refers to the ability to simultaneously undock and put a machine to sleep. The ACPI specification identifies warm undocking support through the presence of _EJ1-_EJ4 methods in the namespace of a _DCK object. Windows can support docking stations with both hot and warm undock capabilities. Windows 2000 and Windows Whistler choose the appropriate _EJx method based on the following algorithm: Windows first attempts a hot eject (S0).  This state is disallowed if the BIOS does not supply an _EJ0 method or if the total battery power available in the mobile PC is less than the hot undock threshold. If the hot eject is not possible, Windows next attempts to undock into a sleep state (S1 - S3, in that order).  These states are disallowed if the BIOS does not supply any _EJ1 - _EJ3 methods or if the total battery power available is less than the sleep undock threshold. If undocking into a sleep state is not possible, Windows attempts to undock into hibernation (S4) if the BIOS supports it through the presence of an _EJ4 method. Windows 2000 and Windows Whistler can support any combination of _EJx methods on the same ACPI object (for example, _EJ0, _EJ3 and _EJ4). The defaults for the undocking power thresholds are: Hot undock threshold: Minimum 10% remaining battery power Sleep undock threshold: Minimum 0% remaining battery power Windows uses a minimum sleep threshold of 0% because many systems have hidden power reserves that can sustain a machine in S3 for long periods of time. Manufacturers can change the power thresholds for the entire system by creating the following binary value key: HKLM\CurrentControlSet\Control\Session Manager\Power\UndockPowerPolicy The binary data contains the following 16-byte structure: typedef struct _UNDOCK_POWER_RESTRICTIONS {     ULONG Version;    //    1 (Version 1.0)     ULONG Size;                       // 0x10 (16 bytes)     ULONG HotUndockMinimumCapacity;   // In percent     ULONG SleepUndockMinimumCapacity; // In percent } UNDOCK_POWER_RESTRICTIONS, *PUNDOCK_POWER_RESTRICTIONS A machine set to sleep before 15% and hibernate below 5% would supply an _EJ0 method, _EJ1   3 methods, and an _EJ4 method. The binary registry value would contain the following 16 bytes: [ 01 00 00 00 10 00 00 00 15 00 00 00 05 00 00 00 ] Surprise Undocking Surprise undocking refers to the action of removing a mobile PC from a docking station while the system is asleep. Surprise undocking is not supported for Windows 2000 or Windows Whistler. Whenever possible, manufacturers should design systems that wake the operating system if the eject button is pressed while the machine is in a sleep state. Surprise undock is not supported for the following reasons.  The Windows Driver Model currently doesn t have a mechanism to make a device  safe for removal  other than shutting the device down. Shutting down all removable hardware prior to sleeping can add several seconds to both suspend and resume times.  Shutting down all removable hardware prevents devices in the dock from waking the system.  Some devices may not shut down when they are in use, which would block suspend. A common example is a hard drive, CD drive, or floppy disk drive with an open file. Microsoft is investigating ways to support surprise removal of docking stations in future versions of Windows operating systems. Windows Logo Program Requirements for Docking Stations This section lists the Windows Logo Program requirements for docking stations or docked mobile PCs. For purposes of these requirements, a docking station includes the functionality of a port replicator along with additional expansion in the form of enumerable devices or slots and connects to the mobile PC s PCI bus. Complete current Windows Logo Program requirements are available at  http://www.microsoft.com/hwdev/winlogo.  0073. Docked mobile PC has the ability to identify the specific model of the dock and to uniquely identify the dock itself 0074. Docked mobile PC combination meets PC 2001 Mobile requirements 0075. Docking station includes driver support 0076. Docked mobile PC meets PC 2001 BIOS requirements 0077. Pre PC 2001 docking station requirements  The user cannot experience resource conflicts.  All drivers for earlier docking stations must be made available as necessary to support the preinstalled operating system.  0078. Mobile/docking station interface uses ACPI-defined mechanisms 0079. Docking station supports warm docking 0080. Docking system supports fail-safe docking Call to Action Manufacturers should implement ACPI-based docking in the BIOS for Windows 2000 and Windows Whistler as described in this paper. In particular: Implement a _DCK method for each supported expansion unit to customize the name of the expansion unit that is displayed to the user.  Support the minimum hardware requirements described in this paper for expansion units: Presence notification Electrical isolation Serial numbers Implement an _EJD method that associates a pass-through device or port with the dock in the ACPI namespace for all types of devices or ports except PS/2 ports or video ports. Design an _EJ0 method to adjust for differences between Windows 98/Windows Me and Windows 2000/Windows Whistler in handling electrical isolation of pass-through devices.  Calculate PNPBIOS serial numbers for slices or port replicators that have _DCK methods, as described in this paper. Design the BIOS to prevent the user from attempting to undock a mobile PC that is physically locked to the docking station, as described in this paper. Configure a PCI-to-PCI bridge for positive decode unless the docking station has PC Card slots. Design systems that wake the operating system if the physical eject button is pressed while the machine is in a sleep state. To provide feedback to Microsoft about the technology described in this DRAFT article, please send your comments by e-mail to ihv@microsoft.com with ACPI Docking in the Subject line. Please include your name, title, company name, and phone and fax numbers. Related Resources Implementing Hot-Swapping Device Support in ACPI  http://www.microsoft.com/hwdev/onnow/HotSwap.htm Identifying Windows  Whistler  in ASL Using _OSI  http://www.microsoft.com/hwdev/onnow/_OSI-method.htm  PCI-to-PCI Bridges and CardBus Controllers on Windows 2000 and Windows Whistler  http://www.microsoft.com/hwdev/pci/pcibridge-cardbus.htm  Windows Logo Program for Hardware  http://www.microsoft.com/hwdev/winlogo Windows DDK  http://www.microsoft.com/ddk  Windows Platform SDK  http://msdn.microsoft.com/subscriptions/prodinfo/overview.asp ACPI specifications, Revisions 1.0b and 2.0  http://www.teleport.com/~acpi/   STYLEREF "Print Division Title,pdt" \* MERGEFORMAT  ACPI Docking for Windows Operating Systems  PAGE
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\opktools\docs\fast_system_startup_for_pcs_running_windows_xp.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corporation Windows Platform Design Notes TitleWindows Platform Design Notes Microsoft Corporation Normal Microsoft Corporation Microsoft Word 10.0@! +0 @! +0 @! +0 @Y +0 @Y +0 @Y +0 @Y +0 @Y +0 @Y +0 @Y +0 @Y +0 @Y +0 @Y +0 @Y +0 @Y +0 @Y +0 @Y +0 @Y +0 @Y +0 @: +0 c !0  c !0! c !0" c !0# c !0$ c !0% c !0& c !0' c !0( c !0) c !0* c !0+ c !0, c !0- c !0. c !0/ c !00 c !01 c !02 c !03 c !04 c !05 c !06 c !07 c !08 c !09 c !0: c !0; c !0< c !0= c !0> c !0? c !0@ c !0A c !0B c !0C c !0D c !0E c !0F c !0G c !0H c !0I c !0J c !0K c !0L c !0M c !0N c !0O c !0  c !0! c !0" c !0# c !0$ c !0% c !0& c !0' c !0( c !0) c !0* c !0+ c !0, c !0- c !0. c !0/ c !00 c !01 c !02 c !03 c !04 c !05 c !06 c !07 c !08 c !09 c !0: c !0; c !0< c !0= c !0> c !0? c !0@ c !0A c !0B c !0C c !0D c !0E c !0F c !0G c !0H c !0I c !0J c !0K c !0L c !0M c !0N c !0O urn:schemas-microsoft-com:office:smarttags PostalCode urn:schemas-microsoft-com:office:smarttags PlaceType urn:schemas-microsoft-com:office:smarttags stockticker http://www.microsoft.com8 urn:schemas-microsoft-com:office:smarttags urn:schemas-microsoft-com:office:smarttags urn:schemas-microsoft-com:office:smarttags country-region urn:schemas-microsoft-com:office:smarttags place Month ~aHnN sYQkD @HP LaserJet 5P/5MP PostScript LPT1: winspool HP LaserJet 5P/5MP PostScript96+2] LjW+f !QNhU >*3 N G=tNb gjD7F hD7^O rT#\S^XW g(\!s 6-l"' $}L.|lj <ZHU% h# 31 NZV_N fz24. c\U?M ]F|$/ ]F|3/ wq9pu! PN&z9[ O,}S= X/VK%y ^~%/# 5[oJ- 0}4wC Un6yD ~#?49^ ]F\{|w]_ E96/VueK MIUuk |VQRO U+s9c m{8n| 5/k]6 b'|=/ko! m[7=ai 8C cEx a.A!{ u]F~? .oYI7 ~tsW[ xy|^F@ tDUwP ImuYJ D6EaDY N"HsfiF NM%n- yZ?5C Ia-/' Q={kO $?V:q= kgGk7Nq HmEYj 47[B: T+kiV >eU9JjUUv$ jyVs7- 6R:_I3 x0pu8> ^?+J[ Cx>Ts ZJ!'Ax deB9^Pl IM=\6 ~NWcY Ezps]O) @]>&Y j[%=O S{(/K /[^~tO U%M~?V o-sn+ 4}+kZ djxyy 28;EU7 <~:J!= ,$a(Y ~15gyN BYpQV ydny94.~ |6= e" :GT(Z Iduy2 HSVlq eer+ei Ux[0RY Tij#Z O[(9'q n]R{#y ;8Jt$ fjayY{ uYK^gLBJ `\j#|W ~`ncj kj~tM deB9^Pl ?;wMeyn Q#n?mo q)N_M Qf,cE K;~2/ _f]jV% ,]V2!x7 \S5Uf TPPPTPP o'k]_ !V-z=K$; MH/kIzy .]]sO <haiF x>_Lz f.m:5f %NZ*?S Ev_UU (4Zy{$K q/^~] hR'IF 64yt? QJ[.& tjT[j /koO1 vf\RJ 6}?PB )F}Yk& /TNB6 K4JD{  TgA% 1Lk57 4RN&A U6++m N;D^*) 4[,_- >bA8( j(R=vbhF@ 5vJ2cuX 5{!xQ 1$+8* GE6y<;f MrUd& 6"O`H Z)x.&0 01fxvd 7*ZfPl jw|5@q *_Fe2 'n%ZLH fRCaE snp9b F7Qza &+MgZ qinclGCV B`l2/ +#2K"18y f\I9Wi 2[%4@ snG{`r F`V2d `"!x@ ROxTr K,(^q ?Y|TL (V!]PR l4uyT LX3G{ kV;I<o zJaC{ uMd#? Q&h7" X`,0J PVN@a HcKny 29*h1 ,O{Tzw/ "2/K+J 3aJ7; odp 0 nC/@T ,[:f] 0iWx.h ae#|u t4-P& n<]{\ .K)'x 3cDPk G`Q+; +RV%# USr>h WLQmG V"+k++ $MiNNNr U]6u)* wQdx^_ %f]M]25 g@7eM '.O=t 4Osl[I nC`hE ua<P{ yZi]W5_ $M]s_ K3[rLD "\giT #Iv0], T8?fm 7e:tB v+,7z  xY^z _-EGW H%t96 pO(Iz) ,ljt=9 dE-'^ 8!{qjj^ 9]nqT ({a}T yh=jY |.{s= 5QJw] bT,9* F4RRrU }+Ns$* Bu-%] s4>G] (GYdD[ uO?g! p}2oo ITe#SN ,GIhI StgY0 U5=Kx XrLREP )J&8T ^gU]U 1M{Ik:>k =o?@d e9ASG RQrI| 5O!U> [/:):] G}Ys0w 8p7'[ ]S7UQ 6uY5O VfYr| ,MD]>J (3R\i= sCyIn 8&6Et J<y-. G}3L1AZ p&88DW ugfMf Q65/Li C$M05 *"6E C 3Z{~Eq w1JJ) n+e]; zQ)Y)Qj b<yv@ Jyr^, ^dYrz VN1D0; XN576 _LMAG <<$Kj i:J@GM GAGMp RB6Bn7 GAGMp 4^)QK)9_/ G@)AG /}|>MG 0GAGMp ~D?VU |uJbB 0FG1^ ]qmtT4RY X4(13 ^ *>8 JCS(?[ !.*e!W jxMLE (5q>JH"  udi$ 4Mi|b'j GE6d_ ^KGYR"2i :ba&M jFr|F `QUuQp >`>\G 8Uz8#( @bDMC QDIi^ w;RVR GGq^r- j&VqR G]*$& Y>(!k J5}~^ {aEdg ,%o|/ QGRJRJ RG5z5 Z!d|1[)j nL{[3 ocmsoE Dad9ukDHC KrTt\ QPPPPP g[{o_ m*[S6 _+}h| _PPPPP :-44v-iWk%S cag~2+ RcJ61OE taj%dq F#eH# De6Fl Qz>4="% Uf;b, $^?7l zn\`. a^47V 2xV6mV 3Rdy] ?H`!^ |'>GQLwV m'#z4f} /R*Q2Q 37G~5JA Hi<w^E /"rfK e0]g[L*B }qVq8 FtV:2 $MT&M ]w4t! )Hq@& bhU+x Fg+5e zVGB}! VOYC6v cXA#L df$Cj mUrlE EdIYee a0g;t ;7zj[ CzF7- ,TC}pn iUsx/# jbO':5Lb_ ]5ND{F /~n3Zr- SKNGdk q{<w@ bvA98Q C N'( *&sfQ ;\c{o =x]^w (2RK{+ mMF!U 0+MO- T:&j7 ohd${ k`f^% ~;N9Rg F;qM8 Glk?f] 3[A^= D~S>_} oGRD, Xk8tpWdV ?,]h> QOkmmL$ N!V5% vEY:|~> wY8ke \]wF6 @6*Ki EQegUDm~ <Sd}Cc Y67t~ mSM9yk 3DKz7| wq5]b ^s"u' oy=:n e>\]p [p>d~8 XEsz4> ^j@ha t'D?Mz @hW|~8 wm>:C (%:GM F]L}3 ^&.j" z7')ucB ]Vh|7 Gu<V' 8>?3E6 #{=%M| 8@MOZc I>__[ W!OjF _"CPb V"+k++ H$2622 |TX'%~ z>fJai< L>w%h' 4r9xv01 q N)8 5yFjK |0Mo%:F _kJ\@ %ienE V!RxO !m;94 8.+0"x (g: Q& ushT^ $n4:f |MNq[ A^F]'Y Kc6]\W -iZl_UQY 5;&"  "pC%)s/ 6J~k:Q a1p7a? +Poh!> VIzJo( yNiH~ 0iLmc CJv|:})04^ |;GcQ lc8s{J y~K3) o`&k= P|>%* ~p_W1 fgy&> O\%8, k8\]- P3gz> 8~?+/T+ EN@-DV Vq;.( xx,_< w>nG-< ~~'>? /bk6[ mt4ahE2: D{8<B ~s/>_& l;[0j1 O&l8=X7 1Qi#y $O7px <6(`E Q##lp 6'e58 SIyU> (mw4E3 Z+;[7 `ceme ;xgU_T6+ RRoj\} kX(Y6] -@1KEZ ygM&`BZz 38?oe h)s0mUqb ih{#j 8Wq!v 2)9A%x<3$ yJ!p9 ]o:eM =.dJ| {bBfp CPRl^# {y]}<I8 uGzvg 8tE{z ~+^E# %;~Xt 18*DV oFE~( "`6.h  0\o6I eD6rZ YH5.x e$9<N :_0~l ~~:O? eDV+VI 1+Kqb O_ogV~>1 v"oIe cDv0S P~>}@ 3]o6t =oKG{ u~ u{ZpN D?=q# ]zT:CR g1]xD |p{~! a{H(DY tG/;? }?[.3 cBz;Ue[& '5Bzc \4?|n gu~f8 gR<q= $KNiX ~>pD' s>t>p s>t>p 82OV#x t>p.v ]S5yRS rzV+_zrY #F|k,9\ eKO)RzV 8ipx4 |Y|}4 PlZ6cB~ L_[~vN% A{U}Vf /mp5V /x.$E i,6rq &u~%7 _(g9o }o-(` k-s=? ~>t>07 MOH{G R>k~> >t>t>0C _7:CJ  ~v,> v_,Lc YP/S1 d~>q~ 5M7Nb tbGzM *U5^_ \U>zkN d+)=Mv L1|vn| &O$Uf_j *Z+j]s XTicb KF%jm ^ZwLr8 ?WY(I Yk{&- #~J<e ]SWFp ]SWFp Y[h\E 93sv3g 86krl r,G96L86L86 gF[dF r(j<;- ~rU>0 ]v["oW j;8>v %Odk$ yvss# B\S<! %?>%zo.k r58N= bqd}N 5: 0p\j9' 5;K/6 aIUK: <eUlF+G c98fi r_3nC JqYBA P?LW}] a:F|ll V(EA5/ +FX1KWx ,IDATx^ EM4$h 1rUj*` J_\v7nV kc$4: ef X^ #5B;; B#0<-` 3QJyB&% PPwSs m<k1V_ZB &m$r$\ VN)Hg% V_-|\ u9"`e &$=UD ^uD pJ 8n9p[e Rtffdi ^gfMaf -_U:v/ DP6@X =H>/4 e/7%f &Ye$@ {@NHhu ad"q8Bf/% f02[>?o Z5t<<1 _~A_s tD,c' %O,:Q ;W:SJ EWny( c RQ5 C@)7\ |PZWc *Q}Nu5u +c4fSC `j1f! NRv>v @hXx3E 9F,Ue ED6>B  O8fCc lGhUG ^/WjK /9<Nu .@2NL3N [TF8D sJxRM fV!1fF9 jd)~AC`j .@yhb 5Q0mH ;*4=r$ _rvA  HEzwMI$c<O  ]b[_ ^w<'p b/N0y w.|ig ODodK &$^zJ =&O#^ `kN8c =v"9g }!P,8r{ ~?m4P lc ^D qE|{t {]reg 6.@F' nb*++ /9}b* G4x=I` %P]^A Lq6dV ^1@QS DW|NC{PGY 2Fc654 *F|xZ }vi1p  ZSAt YT|}'F S>g3z% .@jWP5 _t}9mI "I>y! #GUI?\%G .@#AM $f$U< /%"F\-N,  V:C-X+ -~RX+ kjdog LQcSU -O|$^k {'e8? K4[;7 jUh<Ub oeHd,T <V?r48 q?1m[ "`u$X +Y*z[ 5qJ@[ F/'ri"*D AsP_>( Xdk s IWc%@o U/<^%4 (cjoFu z%@{l s3I$+ zcR@O LyMuk u%4.@]a .O|<d oZdg0 KG>Fb iW'Ly _~DUH vU@dE $BHl2 5Q0mH v]Ank= LQcSU LQcSU LQcSU }# ^+ v?`gw Us!l> LQcSU ^m;q+.@ 6qJ@[ AsP_>( ;v^Sw f<gFu; H*} @ >~aA~6 Ye!D. !|s}rgC i&'S{- nurp# ]}lu6 :" kf" `d:"> o#_~; hM qD/ ==Nw6@ Rq6{|bB 7\ty\[ 1K(n? JEe_j_ =9V!P J!(Jh 2d.*}] $1$d9 %,Ht5D/ p<iF2 DPLTE qodkx bIDATx 4)Nj& \Msh":D in!CN _|)5]q $ %4YGj aEdgR swww] wucl5 Bj*v" ah"k5i 4@SWS MhBSR Gh""4 MDh""4 &5}BDy$5 IDATx^ QzfT~g % v3" W/_$s, *o[.o fogk{scmm pEfag y!<<XQ }wCzQ !7|?TW .aFDK 2g$W' e^I^r .pA-7R >t9ZL \xxBP CO$Ir$L /2S$7y #Mf>8Z 7i1nX Lxitx :dvIR/ !L*#b%v6 Nxi)P) (gw-, tw[r0 5]w{08 VDZ-+ 0ad8U xG.{T 1>^>3?4 2[L)P 1"fr/ :3k(dRf jjoA- ;E]+q yz76L 1hZy@5-" X;sG! #gX]  C2)e~ q3~Hf%) )]sD< 560qYPH( }A""# 'Si\v 7vHR$Hc OgFp% h&{Jp ZC@$K '0R,d_ |q3nX |q3nX }q/fX |q/fX |q/fX |q/fX |q/fX bitV! mB{V[ |sk&l ]G;P_ ,td9KxA]' $mWT*< T2kc/g <jTh0 K6#J@ $xbCD 0qR.3 '^2s0 T _Lv J#3uf ](g?k_ Wu9%f 1&>35 Cof[9 L4y4GLp 0yTkO WROc+ 03mSs@S (}B)} zPLTE IDATx IZHIM p|xxp` FuM:$-} kKcc#c NLLLjL mIFYR 4&Ii||BEU& gff<N aiifz -%JV'G Wt}x+BJ 8?44{ d`ll*8~H Jc]]K g?J=K xBXc<a J-T=j %,u#X* *Zb-  %,%Yd ],mo7 dYb-  \,u3X* ?D+l] IDATx^ TUWWWWwWw peG}tK gJ33S -g`u+S\ =3k6*GA& jbr7[g -mD-5 {`f++X k^pD( g@loG& N`eY"D +JusJ _ii'_| +V[}3*$6 2h?J  "y(BbA i!!b' T-M$- HG@}iSe >ppI- Q]jRm k$TFI mkW=2T :e7:= !!S,% f}h.u mQ&i[ @L3=h o;S_| SsmGL J(nzQ# /Xh0R ue5$( E#:pME &p4n(| +h{UfU P\-;6 +N:T<U 9M,#S_t EH7>B  Zk,.= Ni]I<NY kC_O2 J)6y\S rjrG99 SR)9~ <_\y} W.@`!, YW.m? O^_?lV &Bg_+hW ~(/Fy p=9-Sdc wJNW6 DN}?0O X%6r_ I6B#y LH%}9 iHTlF G!Q"_ eK0ej v6N;k Xvfd" d9/%< &47@} ({5hGY LE@S] TC{si X#dE'oi ~?L93R 4zvL1 VO#m; YcmgK:a\P dm{Qu LO 4l=} L(#)u )Ov>q *3d"B`2 abA`T @2whg3 d#P.; 6&:*P 26n(; K{`_F *}U,} C4|Hr sg/]bD *cg-M G+CJz {'8O> /z[Z4 w]#.X y?fnb FB?m# C.TCB _|FE+ sNs3;  3:"B A9e_N T7s:p /fN5X KM)Jz v}9s*&" KM)Jz ^P;?!! }F-G? nRUG@KT Cfg6m +vzp6]W f04(/ *@j359 \9nYn N_?dg K2o 8Je his{w +GL;K ({K/y A}hY9 jv:gP ,(+Z_ Moj-#% i4!L/ 3=zo} c[y28 frjK9 3~!M; MSO?~ )/{Cz &svCszu? W&~)b eO`Eh Ss?*- kK+8+ ~d Op d^8S%9W< (D zG BnO^> (B.Yz uzAPD Q.5g7 }3/er #E=(< rt`}? >vHcvg H.~=nj >c#te pBr!W' x>)U%  t?Vrl F`E/) 7xCPR4g WZ>9L OCS:j Vl/p2 ($Dx0 Pf|QS8 lv%6s )f[`) |^|C'j 2g^pWu 3e0sj rLb,3 q^JA3 N'@Qi !@'@q ^~mat Q.5g7 )4oxb -\9%* kKNYV V+~`S- PC<9! @!ML/! 8)e@> .pG[Z %gZU;e jT~iy xHgCYn MS[6O <L6ou "Fs}3 b;d^e Y:dcE Zk8~=Xn >z)Y9 kK_LUJ 2tzH' fvKSm oQa3~ bJ&31+A H6D1A ji0Bh6 #JnGEl C+O}rS NYxxh j/=Oi &/V#S -'ke2f& \cDr!^3 ;)=wR~ SOZ^7n m^Skm[ a{}L} e;|'') `E7\3e g7twY MGe78 JUTIF '^?vQ Ls+XfQ 0Uu[< 7VO~\ gx])ogj `^?lh +VTUU -IDAT [8Yu{ ER{,t OpuD` z%R}t$ AA^M5m*)KI "8?bnb Zf/>4 :H0zjO. 'DB#d 0}*0u /50p& pns-=9 "6!x( w{vr| >K-}W:su >t9xN FG(!M g14E<6R tEXtSoftware Microsoft Office 33333f33 3f33ff3f f33f3ff3 ff3fffff cmPPJCmp0712 IDAT(S} FUEUqWindows Platform Design Notes Designing Hardware for the Microsoft( Windows( Family of Operating Systems Fast System Startup for PCs Running Windows XP Abstract: This paper describes issues and solutions for achieving fast system start up on PC systems running the Microsoft  Windows  XP operating system. The current version of this paper is available at http://www.microsoft.com/hwdev/platform/performance/fastboot/fastboot-winxp.asp. January 31, 2002 Disclaimer: The information contained in this document represents the current view of Microsoft Corporation on the issues discussed as of the date of publication. Because Microsoft must respond to changing market conditions, it should not be interpreted to be a commitment on the part of Microsoft, and Microsoft cannot guarantee the accuracy of any information presented. This document is for informational purposes only. MICROSOFT MAKES NO WARRANTIES, EXPRESS OR IMPLIED, IN THIS DOCUMENT. Microsoft Corporation may have patents or pending patent applications, trademarks, copyrights, or other intellectual property rights covering subject matter in this document. The furnishing of this document does not give you any license to the patents, trademarks, copyrights, or other intellectual property rights except as expressly provided in any written license agreement from Microsoft Corporation.  Microsoft does not make any representation or warranty regarding specifications in this document or any product or item developed based on these specifications. Microsoft disclaims all express and implied warranties, including but not limited to the implied warranties or merchantability, fitness for a particular purpose and freedom from infringement. Without limiting the generality of the foregoing, Microsoft does not make any warranty of any kind that any item developed based on these specifications, or any portion of a specification, will not infringe any copyright, patent, trade secret or other intellectual property right of any person or entity in any country. It is your responsibility to seek licenses for such intellectual property rights where appropriate. Microsoft shall not be liable for any damages arising out of or in connection with the use of these specifications, including liability for lost profit, business interruption, or any other damages whatsoever. Some states do not allow the exclusion or limitation of liability or consequential or incidental damages; the above limitation may not apply to you.  Microsoft, Win32, Windows, and Windows NT are trademarks or registered trademarks of Microsoft Corporation in the United States and/or other countries. Other product and company names mentioned herein may be the trademarks of their respective owners. Microsoft Corporation. All rights reserved. Contents Windows XP and Fast Boot/Fast Resume Operating System Boot Improvements Windows XP Support for BIOS Improvements: Boot Loader Improvements Operating System Boot Improvements Overlapping Device Initialization Prefetching Operating System Hibernation Improvements Operating System Standby Resume Improvements Measuring Boot Time Preparing System for Fast Boot Factors Effecting Boot Time Windows XP Fast Boot/Fast Resume Tools Using Bootvis.exe CPU Usage Graph Disk I/O Graph Driver Delays Graph Process Creates Graph Using Bootvis.exe to Measure Resume Performance Measuring Resume from Standby (S3) Resume Activity Window Resume Summary Window Measuring Resume from Hibernation (S4) Time Actions for Achieving Fast Boot/Fast Resume Actions for BIOS Fast Boot Improvements Actions for BIOS Wake Improvements Actions for Driver Fast Boot/Fast Resume Improvements Actions for OEM Pre-load Fast Boot Improvements Hardware Fast Boot/Fast Resume Improvements Resources Windows XP and Fast Boot/Fast Resume Customer research has shown that one of the most frequently requested features that users want from their PCs is fast system startup, whether from cold boot or when resuming from standby or hibernation. The Windows development team at Microsoft has taken bold steps in making quickly available PCs a reality with the release of the Windows XP operating system.  This article provides guidelines for system manufacturers to improve boot and resume times for new PCs. This article also briefly summarizes several of the changes in Windows XP that promote quick system availability. The design goals for the consumer version of Windows XP on a  typical  consumer desktop are as follows: Resume from Standby (S3) in SI systems will boot slowly due to expansion ROMs on SCSI adapters and sequentially powering up disk drives. Microsoft has several OEM notebooks resuming from S3 Standby in less than 2 total seconds. This is approximately the time it takes to fully open the lid of the notebook, delivering a PDA-like experience in availability. Although the Windows XP design goal was 5 seconds, we fully expect OEMs to compete on this with the measure of good equaling the time to open the lid. End-users will shop and make purchase decisions based on this performance similar to other criteria such as battery life, CPU speed, RAM size, and so on. Boot and resume times are measured from the time the power switch is pressed to the display of the desktop shortcuts. This paper assumes that the reader has a background in the related OnNow technologies, which are described at http://www.microsoft.com/hwdev/onnow/.  System power state terminology used in this paper is based on definitions in the Advanced Configuration and Power Interface (ACPI) specification, available at http://www.acpi.info/index.html. Operating System Boot Improvements Operating system startup consists of these basic challenges: Move operating system footprint from the disk drive to memory. Initialize devices. Start Winlogon, services, and the shell. Start value-added software. Figure 1 shows the major phases of operating system boot in more detail. Time at Zero seconds corresponds to the start of kernel instrumentation shortly after the kernel starts. The vertical bars for BIOS and NT Loader can not be measured by kernel instrumentation because the kernel is not running at that time.  Do not attempt to hand time boot and correlate to a boot trace by using the boot done mark + boot loader time + BIOS POST time. The overhead of tracing will skew the results. Start by hand timing, then use a boot trace to view what happened during the hand timed boot. Figure 1   Windows XP Boot Activity Summary Disk time is the time to enumerate all the devices in the non-page able device path. This is everything from the CPU to the boot disk drive; multiple IDE devices and slow IDE devices can affect this time. Typical disk time in Windows XP is 2 seconds, which is 4 times faster than Windows 2000. Driver time is the time to initialize devices. Prefetching time is the time spent reading pages in from disk used later as devices initialize, and Winlogon, services, the shell, and other applications start during boot. Registry+Page file is time spent to read the registry and initialize the page file. Video is the time spent as the display mode is set for the final resolution and refresh rate. Video driver and Video BIOS affect this time. Logon+Services and Shell are the times to start Winlogon, services, the shell, and so on. This is mostly the operating system. However, value added components such as anti-virus software can affect this time. Windows XP accelerates all portions of operating system boot starting with NT Loader. The most significant changes include the following items: Prefetching pages from disk to avoid page faults during boot. As device drivers are loaded, services started, and so on, then pages will be needed from the disk drive. Prefetching these pages means reading ahead before the pages are needed so that they are already in memory thereby eliminating disk I/O delays. Device initialization is overlapped where possible and overlapped with Disk I/Os. Windows overlaps the initialization of devices such as serial and network thereby shortening the overall device init time. It is crucially important that device drivers not spin writing/reading registers at 100% CPU since that will lengthen boot. De-serialization of the boot process, elimination of processes, deferment of services, footprint reduction.  Windows XP has been scrutinized to remove any item from the boot path that does not need to be there. In some cases there were optional items not needed at all, in others services can be deferred to run later after boot.  An example of De-serialization is Winlogon no longer waiting for network initialization to complete.  Several services are now combined under common processes (Svchost) to reduce the overall number of processes. This reduces memory footprint by approximately 1.5 MB per process eliminated. Windows XP Support for BIOS Improvements: Windows XP supports the Simple Boot Flag specification. Implementation of this specification can result in reduced time spent in BIOS self tests if the previous operating system boot was successful. This optimizes the  good boot path  in the BIOS. For information about the Simple Boot Flag specification, see http://www.microsoft.com/hwdev/resources/specs/simp_bios.asp. BIOS time on the good boot path should be approximately 7-10 seconds. A PC with a multi-platter hard drive may take as long as 14-15 seconds due to additional mass to spin up in the drive. This includes both BIOS POST and the time taken to spin up the hard drive. Boot Loader Improvements A key boost to boot loader performance is through optimizing disk reads. The Windows XP boot loader (NTLDR) caches file and directory metadata in a  most recently used  manner. This dramatically reduces time spent finding data on the hard disk (disk seeks). Each system file is now read with a single I/O operation. The resulting improvement in Windows XP is that the boot loader is approximately four-to-five times faster than in Windows 2000. If a system is configured for multi-booting both Windows XP and Windows 2000, even the Windows 2000 boot time will benefit from the Windows XP boot loader improvements. Boot loader enhancements also provide similar improvements in hibernation resume times. The primary reason for this is streamlining the I/O paths used by NTLDR to read the hibernation image. The hibernation file is compressed as it is written and, for efficiency, the compression algorithm overlaps with the file I/O. However, when resuming from hibernation, NTLDR is using the BIOS to perform the Disk I/O; therefore, it is not feasible to overlap the disk I/O reads with the decompression. For best hibernation resume times, scrutinize the performance of the BIOS INT13 routine used by the boot loader to read the hibernation file. If resume from S4 is slower than cold boot, look at INT13. Operating System Boot Improvements After the boot loader reads the necessary files, the kernel starts. This is the beginning of the operating system starting to run. Optimizing the time for loading the operating system is achieved by overlapping device initialization with the required disk I/Os, and removing or delaying the loading all other processes and services from boot that are unnecessary at boot time. In tuning a system for fast booting, it is crucial to look at both the efficiency of device initialization and the disk I/Os. Overlapping Device Initialization Windows XP initializes device drivers in parallel to improve boot time where possible. Instead of waiting for each device sequentially, many can now be brought up in parallel. The slowest device has the greatest effect on boot time. Overlapped device initialization can be viewed using the Bootvis.exe tool. (For information about obtaining tools, see  Resources  at the end of this paper.) In Figure 2, a delay of immediate interest is highlighted in red. The NIC driver is delaying boot, but this PC has no network cable attached to it. This is a good indication to look at the media-sense support in the hardware and driver. The result is the CPU is at 100%, all Disk I/O has stopped, and there is no parallelism in device initialization at that time. Although the boot activity graph shows prefetching overlapped with the network card delay, it is misleading in the graph. All disk I/O is stalled. This could be seen by looking at the disk activity graph. Figure 2 - Example of Overlapped Device Initialization and Broken Parallelism due to Net Driver Device drivers should only do what is required to initialize the device during boot, and defer all else to post-boot. The goal is that the device is usable after boot, but does not unnecessarily delay boot. Device drivers should never spin writing/reading registers at 100% CPU since that will lengthen boot.  When taking boot traces, unplug any network cables to avoid external network delays. If unplugged, no entry for network should show in Bootvis that is blocking boot. Examples of Boot-Time Savings Several examples of boot time savings include the following: Network initialization is now done in parallel to boot. Winlogon does not wait for network initialization. Serial Plug and Play is now overlapped. Serial PNP detects attached serial devices. This used to take 2.5 to 3 seconds for typical PCs, and could take several minutes in large servers with many ports. Previously, NDIS caused boot delays while binding protocols to adapters, due to the adapter negotiating link speed with hubs and switches. This also affects PCs that have network adapters but no network cables attached. Protocol binding is now done in parallel to boot. ATAPI boot disk enumeration has been improved to take about two seconds (it previously took approximately 6 seconds). Boot disk enumeration delays all disk I/O during boot.  Delays to detect PS/2 keyboards on USB keyboard based systems are reduced. Reduction in processes and grouping of services under common Svchost processes Prefetching In versions of Windows earlier than Windows XP, while device drivers, system services and the shell load, the required memory pages will not be in memory until loaded from the disk drive on demand. Another key improvement in Windows XP is prefetching these pages before they are required, which avoids page faults. Page faults delay boot to perform the needed disk I/Os.  The Windows XP Prefetcher accelerates both boot and application launch. It does this by monitoring the pages required during boot and the pages required after an executable is started. These pages are logged in scenario files in %windir%\prefetch. On the next application launch or boot, the scenario file is referenced for which pages to prefetch. Periodically, the scenario files are parsed and a list built in %windir%\layout.ini that defrag will reference to lay these pages out contiguously on disk. Although the pages are prefetched, the disk I/Os used to prefetch them will be more efficient after a disk layout occurs. Looking at Disk Efficiency with and without Prefetching Bootvis.exe can be used to view the efficiency gains of prefetching during boot. The goal is to minimize any random seeking that initiates after 2 to 3 seconds into the boot trace, depending on the detection of IDE devices, and continuing for several seconds. The duration of prefetching is dependant on the performance of the disk drive, available memory and anything that might stall a disk I/O. Efficiency in prefetching is important; disk I/O delays could stall the operating system boot. To disable prefetching for the next boot and take a boot trace with Bootvis.exe, delete the boot prefetch scenario file: %windir%\prefetch\ntosboot-b00dfaad.pf and then take a boot trace. Prefetching can also be disabled with the following registry key and value: HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management\PrefetchParameters EnablePrefetcher set to 0 Figure 3   Example of Boot with Prefetching Overall boot time several seconds faster with prefetching due to fewer seeks. The red bars are reads and blue writes. In this trace, most of the disk reads needed to boot the system are done between 2-7seconds in the graph. Figure 4   Example of Boot without Prefetching Longer boot time overall, much more seeking. The disk I/O s are very inefficient. Looking at Disk Performance To measure the efficiency of the disk I/O during boot Using Bootvis.exe, select a region of the Disk I/O graph by dragging a rectangle or by entering the times in the Select Time boxes on the menu bar. Within the selected area, right-click and select Show Summary Table.  At the bottom of the summary table is the number for the total of data read in KB during the selection. Dividing the data read within the selection by the time width of the selection gives the data rate per second. Disks can be compared for performance in this manner. The sector offset graph is displayed by right clicking on the selected area and selecting  Show Detailed Graph . The detailed graph shows the disk seek patterns within the selection. Figure 4 shows excessive seeking without prefetching, while Figure 3 shows efficient seeking with prefetching due to contiguous page layout. Boot Monitoring  Pages accessed during boot are logged in  %windir%\prefetch\notosboot-B00DFAAD.pf. This file logs the previous 8 boots and is created or updated 1 minute after every boot. This is not idle time dependant.  The prefetcher uses this file to know which pages to prefetch. The .pf file extension is referred to as a scenario file. Notosboot-B00DFAAD.pf is the boot prefetch scenario file. In a lab environment, be sure to allow this file to be created or updated before rebooting To disable prefetching momentarily, delete this file and no prefetching will occur on the next boot. Application Launch Monitoring Pages accessed during application launch are logged in %windir%\prefetch\ appname-xxxxxx .pf. The prefetcher uses this file to know which pages to prefetch the next time this application is launched.  Optimizing Disk Layout Prefetching reads pages into memory ahead of demand based on a learned scenario. It is also important for efficient disk I/O for these pages to be contiguous on the hard disk to eliminate excessive seeking. Prefetching and optimized layout result in reduced page faults and efficient disk I/O Periodically pages used in boot and application launch are laid out contiguously on disk during idle time. This occurs transparently for end-users but can be confusing in a lab environment if the system is not allowed to idle or meet the other rules for a layout. The prefetcher service parses both the boot and application launch scenario files, determines what pages to be prefetched, and builds a file named %windir%\prefetch\layout.ini. Layout.ini is used for defrag to lay these pages out contiguously on disk for improved disk I/O. Layout.ini is built after 32 application starts. It is also built periodically after boots excluding the first boot which runs the out of box experience. Layout.ini is generated and a defrag initiated by the prefetcher service after an idle timeout of approximately 5 to 30 minutes after boot. Predicting exactly when a system will have optimized itself in the lab is difficult since it requires idle time. If Windows XP is installed, booted two times while allowing for the update of the boot prefetch scenario file, and then allowed to idle, the timeline for the layout would look similar to the following:  Figure 5   Disk Layout Timeline (will vary) Boot Done notosboot-B00DFAAD.pf created Boot Done notosboot-B00DFAAD.pf updated Idle Time Layout.ini Created & Defrag Note timeline observed may vary based on activity For boot, idle time layout is scheduled using the following criteria: Has not been done previously Has not been done in the last 3 days The following registry keys can be monitored for status as well as the timestamps on the layout.ini and boot prefetch scenario files. [HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Prefetcher] "LastDiskLayoutTime"=hex:30,cb,3d,2b,34,ed,c0,01 "LastDiskLayoutTimeString"="2001/06/04-13:23:08" (should match time on layout.ini) [HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Dfrg\BootOptimizeFunction] "FileTimeStamp"=hex(b):30,cb,3d,2b,34,ed,c0,01 "OptimizeComplete"="Yes" (yes = layout completed successfully) Boot Optimization vs. Normal Defrag The Windows XP defrag utility does not undo the boot and application launch optimizations. These files are laid out contiguously on disk with the starting and ending logical block locations logged in the registry.  A normal file system defrag optimizes the system for application launch or fast boot in addition to defragging the file system. However, it will not optimize for boot of app launch if layout.ini does not yet exist. [HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Dfrg\BootOptimizeFunction] "Enable"="Y" (Y = defrag will optimize for boot and app launch) "LcnStartLocation"="1396416" (these numbers will vary, do not edit) "LcnEndLocation"="1443782" (these numbers will vary, do not edit) Operating System Hibernation Improvements During hibernation, all devices are powered off, and the system s physical memory is written to disk in the system hibernation file, \Hiberfil.sys. Before Windows XP writes to the hibernation file, all memory pages on the zero, free, and standby lists are freed; these pages do not need to be written to disk. Memory pages are also compressed before being written.  To optimize the hibernation process in Windows XP, the following improvements have been implemented. The compression algorithm has been optimized to compress and decompress large blocks (64K) of data. The hibernation file is written using IDE DMA instead of PIO mode. Most modern IDE controllers and disks achieve their best performance only in DMA mode. As the current data block is being transferred to the disk, the next block of data is being compressed. Overlapping the compression with disk writes makes the compression time virtually free. Operating System Standby Resume Improvements During resume from standby, the operating system sends S0 IRPs to devices to indicate the change in system power state. Device drivers then typically request D0 IRPs to change their device power state. The operating system is responsible for notifying each device in the correct order. There are two key ordering rules that must be followed to prevent deadlocks: A device cannot be turned on until its parent is turned on. All non-paged devices must be turned on before any paged device is turned on.  Because many devices may take significant time to go from D3 to D0 state, the key to good resume performance is to overlap device initialization as much as possible. Therefore, the ordering chosen by the operating system is important in maximizing parallelism. The following changes have been made to optimize the resume performance in Windows XP. The Sx IRP dispatching engine has been rewritten to maximize potential parallelism. USER has been changed to dispatch power events asynchronously instead of tying up a worker thread waiting for them to complete. Ndis.sys has been changed to complete S0 IRPs immediately (instead of waiting for D0 to complete) and to initialize on a lower priority thread. Worker thread stacks are locked in memory before starting power operations, and unlocked when resume is complete. The kernel Plug and Play manager has been changed so it does not tie up a worker thread with an enumerate operation while waiting for power operations to complete. Pcmcia.sys, Kbdclass.sys, and Mouclass.sys have been changed to initialize in the background.  Measuring Boot Time  From an end-user perspective, what is important to measure is the time from the moment the power switch is depressed to the time the desktop accepts user input. In order to correlate more meaningful numbers with the Windows product team, cold boot time is divided into three phases:  BIOS POST. The time for the POST to run and spin up the hard disk drive and for the reading of the operating system boot loader.  This ends with the display of the boot menu in the boot loader. Pre-Logon. The time from the boot menu to the Windows Logon screen.  Post-Logon. The time from clicking on an account in the Logon screen to the Windows Desktop. This measurement is helpful in assessing delays introduced by items in the Startup group, Run key, and so on. To measure boot time Follow the  Preparing System for Fastboot  instructions later in this document. After completing step 1, the system is ready for hand timing or tracing. Time from pressing the power switch to the display of the boot menu from the boot loader. Log this time as POST. Time from the boot menu to the display of the welcome logon screen user accounts. Log this time as Pre-Log. Time from clicking on a user account to the display of the desktop icons. Log this time as Post-Log. The sum of the times from steps 2 4 is the total boot time. In working with the Windows product team, it is important to report all three numbers. Wherever a problem is suspected due to resulting times, use the Bootvis.exe tool to get a trace of boot. When taking traces, ensure the system auto-logs on by deleting any extra user accounts. There should be only one user account in addition to the guest account for auto-logon to occur. Because the number of platters in a disk drive, the memory type, and other factors effect POST time, it helps to isolate these factors away from operating system time by breaking into three numbers. Driver issues tend to show in the pre-log number. Value added software issues normally show during post-log. Use a single disk partition.  Use NTFS on hard disk drives. The FAT on FAT32 file systems get large on partitions larger than 8 GB because the whole FAT is read during boot. Do not convert FAT32 to NTFS unless you are using the OPK tools. If doing an install from a retail CD, delete any FAT partitions and build NTFS; do not convert. Be sure to allow the disk to fully spin down between measurements. A delay of 20secs is recommended before booting again. Make sure you have fully booted the operating system and performed a typical shutdown before timing POST on a system where the BIOS implements the Simple Boot Flag specification. The BIOS implementation of the Simple Boot Flag specification may interpret a shut down from the boot menu as a failed boot, affecting subsequent BIOS POST timing.  To avoid external network boot delays, unplug network cables. If boot times increase when cables are unplugged, look at the media-sense support in the network adapter and its driver. Preparing System for Fast Boot Because the disk optimizations occur after idle timeouts, it is easy in a lab to install Windows and not let the correct events occur, which leads to inconsistent timings and invalid data. To solve this, Bootvis.exe now supports an Optimize System option to force all these events to occur.  To prepare a system for boot timings or tracing Use a single NTFS partition. (Do not convert from FAT32 to NTFS unless using OPK tools for conversion). Build pre-load or install Windows. Boot, complete OOBE. Configure internet connection. Activate Windows if Windows was installed from a retail CD. Enable 2 user accounts either in OOBE or in the user accounts control panel (in addition to the guest account). Cancel Windows XP Tour when it pops up. Cancel Passport Configuration when it pops up (after next boot). Finalize all settings. Enable a boot menu in Boot.ini. Start Bootvis. Select Optimize System in the Trace Menu (this will take approximately 5 minutes to complete and will reboot once). Take hand timings or traces. Factors Effecting Boot Time There are several tips lists at the end of this document for improving boot time. The biggest influencers in achieving a fast boot time are to have enough RAM and a fast disk drive. In order to prefetch, there needs to be sufficient RAM to prefetch into. 64 MB systems will suffer due to insufficient RAM reducing Windows XP s prefetching benefits. 128 MB is a much better scenario. More than 128 MB helps performance overall but boot performance gains are minimal after 128 MB. The best improvement for 64 MB systems is to add another 64 MB. Although prefetching helps, the operating system image has to move from the disk to memory. The faster the bits come off the heads of the disk drive and into memory, the faster boot will be. Moving from a 5400 RPM disk to a 7200 RPM disk can save several seconds in boot time. Larger buffers on disk drives can also help. When comparing disk speeds, make sure to compare disks with the same number of platters for a direct comparison of spindle speed effects. CPU performance has little effect in the first half of boot but does help in the Winlogon phase of boot if the CPU is faster. CPU is often at 100% utilization in this portion of boot. Use the Bootvis.exe tool if your hand timings seem to be too long. Bootvis.exe will expose areas that warrant deeper investigation. Most commonly these are in device drivers.  Value added software can also slow boot. Bootvis.exe will show you the start of these processes, the CPU load, the disk I/O s caused by them. Evaluate the software you bundle for good boot time. The Windows XP prefetcher stops monitoring boot 10secs after the start of the explorer process so the software you add to boot is likely to be loaded faster due to prefetching. Figure 6 shows the effects on boot time as the hard drive motor speed and memory configurations are varied. It is important to note that 128 MB with 5400 RPM is a better overall experience than a small memory configuration with a faster disk. Small memory means more paging and even with a fast disk that is not a great experience. Therefore choose more ram before a fast disk and always start with 128 MB minimum for a reasonable end user experience. Figure 6   Effects of Disk Speed and Memory on Boot Time These numbers taken on Dell Dimension model 4100 with Windows XP Home Edition build #2458. For a fair comparison, make sure when comparing disk speeds that both disks have the same number of platters. Far eastern languages also are longer to boot since there are three additional processes that must be loaded to handle the far eastern input methods. This can be as little as 1.5 seconds on a fast disk with 128 MB to several seconds on slower disks or memory constrained systems. The worst configuration for performance is a notebook (4200 RPM disk), 64 MB and a far eastern language such as Japanese and a lot of value added software being started in boot. This machine will boot very slow and also respond very slowly after booting. If placed next to a 128 MB system of the same configuration, the 128 MB machine will be noticeably faster. Windows XP Fast Boot/Fast Resume Tools  Windows XP has the ability to trace boot and resume metrics and dump the resulting information to a binary file for viewing and analysis.  Bootvis.exe displays several time-interlocked graphs showing CPU Usage, Disk I/O, and Driver Delays, Boot Activity overall, Process Starts, and Resume Activity.  The traces that can be taken using Bootvis.exe are: Next Boot Next Boot with Driver Delays Next Standby/Resume Next Hibernate/Resume Bootvis.exe can show many types of useful details, so the best way to start is by dragging an area on the graph and then either double-clicking it or right-clicking to view the options available on a context menu. Overall boot activity is shown in the Boot Activity graph in Figure 7.  IMPORTANT The Bootvis tool is provided to help you develop a general idea of where there may be issues or problems with boot or resume. They graphs may provide information that will help identify where to use more specific development tools. Bootvis.exe will not specify the exact fixes that need to be made; it should only be used as a tool to help locate or identify potential problem areas.  Figure 7   Boot Activity Graph The boot activity graph shows BIOS and NT Loader bars as place holders prior to the start of the boot trace. Times are offset from BIOS and NT Loader indicating the need to add BIOS+NTLoader to any boot timings being taken. The boot activity graph clearly shows the overlap of prefetching and device initialization. Remember to look in more depth at the prefetching disk I/Os to check for sequential I/O and note the disk throughput by viewing the summary table for this time window. The boot activity graph shows a mark for boot done. This corresponds to the Start Menu being available for use. Taking boot traces with Driver Delays will lengthen boot by 2 to 5 seconds. The resulting binary file will be several megabytes in size. Bootvis.exe has the ability to loop, taking the number of traces specified and storing them in files automatically incrementing the file name. This is very convenient in taking a batch of timings. In taking boot timings, it is a good practice to take 5 timings per configuration to ensure there are no unusual deviations. If the repetition option in Bootvis.exe is used, there is an option for shutdown or restart. If shutdown is chosen, the system will be turned off between boots such that a hand timing can be taken capturing the BIOS POST and NTLoader times to correlate to the boot trace. Using Bootvis.exe To use Bootvis.exe Create a directory named Ptools. Copy Bootvis.exe to Ptools.  Start Bootvis.exe. From the Trace Menu, the following traces are available: Next Boot  Next Boot with Driver Delays  Next Standby/Resume  Next Hibernate/Resume  Tracing Driver Delays during boot will add several seconds of boot time delay. Select the desired trace Bootvis will prompt with a couple questions for file naming and looping and reboot the system to take the trace. You have the option of setting a repetition count if taking multiple traces. The file name will be named after the trace type with an incrementing number on the end of the file for each trace. Bootvis_sleep will be created in the folder containing Bootvis.exe. This is a small stub used to start bootivs.exe after a delay after boot to keep Bootvis.exe from effecting the trace. Bootvis.exe is a large MFC application.  Bootvis.exe will restart and save the trace to the last folder used by Bootvis.exe. It will then open and display the trace. CPU Usage Graph The top-level CPU usage graph shows the percentage of time the CPU is busy over time.  Drill downs: A summary table shows a breakdown of the time spent in each process during the selected time.  Double-clicking a process line in the summary table will display a table that breaks the time within a process by module.  Disk I/O Graph The top-level disk I/O graph shows the number of reads and writes recorded for each second of the trace.  Drill downs: A summary table shows the breakdown of I/Os by file for the selected time region.  A Details Graph shows the sequence of I/Os and illustrates disk seeks between I/Os.  Detailed Disk I/O Graph This graph allows the examination of the I/O pattern for a particular disk. By default, I/O completion times are charted, but optionally I/O initiation times can be charted as well. The I/Os for each process can be included or excluded by selecting the process from the panel on the left. Marks within the trace can optionally be displayed. Drill downs: A Summary chart shows the logged information for the selected I/Os. Driver Delays Graph This display shows all calls into drivers that return after exceeding a particular delay threshold, specified when the trace was created. The delays are labeled with the name of the driver within which the delay occurred. Note that this driver can be recursive, so a long delay in one driver may produce a long delay in calling drivers.  A time range can be selected. In addition, by right-clicking to display a context menu, the user can select an individual delay or all delays in the entire trace for the same driver.  Drill downs: A Summary chart displays the delays experienced for the selected time region or driver. Process Creates Graph This display shows the start of processes, beginning with Explorer.exe. This information can be useful when looking at the pre-load and analyzing the effect of software added beyond an operating system clean install. The prefetcher attempts to optimize boot speed by monitoring files accessed during boot, ending 10 seconds after the start of Explorer.exe. If the added software is large, the optimizations gained by using prefetching will diminish late in boot. Using Bootvis.exe to Measure Resume Performance When evaluating a system s resume-from-sleep (S3) performance, key elements to observe are the BIOS wake time and the delays introduced by device drivers during initialization. Bootvis.exe opens resume traces with initial views that display this important data.  Measuring Resume from Standby (S3) The following steps describe how to measure system resume times from standby (S3). Start Bootvis.exe For the purpose of measuring the best resume performance, turn off "Prompt for password when computer resumes from standby" from Control Panel >Power Options >Advanced.  From the Trace menu, choose Next Standby & Resume. Select the number of trace repetitions to run. Enter the desired number of repetitions; selecting OK will use the default setting of 1 standby trace. The countdown timer indicates the time remaining until system shutdown. You may shutdown immediately by clicking the Standby Now button, or stop the trace by clicking Cancel.  The Shutdown Time and Sleep Time periods can be configured using the Options dialog box. To access this dialog, from the Tools menu, choose Options, or press the Alt-F7 accelerator key combination. The system will awaken automatically after the Sleep Time period has elapsed. After the system resumes from Standby, Bootvis.exe will automatically open and display the resume trace file, as shown in Figure 8. Figure 8. Bootvis.exe Resume Trace If you have selected to collect multiple traces Bootvis.exe will not automatically open the resume trace file when the last trace is complete. Use the File menu to open the desired trace file for viewing. Resume Activity Window The top level Resume Activity window displays a graphical summary view of the resume trace.  Figure 9: Top Level Resume Activity Window Drill downs: The vertical marker lines indicate the various phases of the resume process. Placing the mouse cursor over the square boxes at the top of the marker lines will present a tool tip with additional information. The green horizontal graph bars graphically illustrate the resume phases in time. Placing the mouse cursor over the graph bars will present a tool tip with the bar title and time elapsed. Resume Summary Window The Resume Summary window displays a tabular summary of the resume trace information. Refer to Figure 10. To display the Resume Summary window, select Show Resume from the Tools menu, use the Ctrl-R accelerator key combination, or right click in the Resume Activity window to display the context menu. Drill downs: The following summary information is displayed:  BIOS wake time Device initialization time Application initialization time Total resume time A tabular view lists those device drivers taking longer than the Driver Delay Threshold to complete their S0 IRPs. The Driver Delay Threshold time is specified in the Options dialog box. Clicking on the Save Table button will export this summary date in either .CSV or .TXT file formats for use with other application software. Figure 10: Resume Summary Window Driver Delay Window The Driver Delay window displays a graphical depiction of device drivers as they are sent system power IRPs (Sx and Dx) versus time. Refer to Figure 11. Figure 11: Driver Delay Window Drill downs: The green horizontal graph bars show device drivers taking longer than the Driver Delay Threshold to complete their S0 IRPs. The Driver Delay Threshold time is specified in the Options dialog box. The Driver Delay window is initially displayed with Device (Dx) IRPs hidden. To display Device IRPs, right click on the driver delay window to bring up the context menu, and click on Show Device IRPs. Placing the mouse cursor above a driver delay bar will display a tooltip with further information about the driver. Double-clicking on a driver delay bar will open a tabular summary window of information about the driver. Measuring Resume from Hibernation (S4) Time From an end-user perspective, what is important to measure is the time from the moment the power switch is pressed to the time the desktop accepts user input. Hibernation resume time is divided into two phases:  BIOS POST   the time needed for the POST to run and spin up the hard disk drive, and the time needed to read the operating system hibernation file.  Device Initialization   the time needed for devices to process system power notifications and restore their context. The sum of these two phases is the total hibernation resume time for a PC. To measure hibernation resume time: Start Bootvis.exe From the Trace menu, choose Next Hibernate & Resume. Select the number of trace repetitions to run. Enter the desired number of repetitions; selecting OK will use the default setting of 1 hibernate trace. The countdown timer indicates the time remaining until system shutdown. You may shutdown immediately by clicking the Hibernate Now button, or stop the trace by clicking on Cancel.  The Shutdown Time period can be configured using the Options dialog box. To access this dialog, select Tools > Options, or press the Alt+F7 accelerator key combination. Windows will write the hibernation file and shut down. Use a stopwatch to complete the next step. Measure the time from pressing the power switch to the completion of the  Resuming Windows  screen; this provides a close measure of BIOS POST and hibernation file read time. After the system resumes from Hibernate, Bootvis.exe will automatically open and display the hibernate resume trace file, as shown in Figure 12. Hibernation resume time is the total of the BIOS POST and hibernation file read time measured in step 6 above, plus the Device Initialization time shown in Bootvis.exe. Figure 12: Resume Trace Display  Actions for Achieving Fast Boot/Fast Resume The following areas should be considered for designing systems to support fast startup for systems that run the Windows XP operating system. Actions for BIOS Fast Boot Improvements Implement support for the Simple Boot Flag in the system BIOS. Reduce all possible delays in POST if the last boot is known to be good. Set hard drive first in the boot order in a good boot path. CD-ROM or floppy drives are more meaningful in the boot path if the last boot failed. On systems with CD-ROM boot order set as first on normal boot, if media is in the tray, the CD-ROM must be spun up to see if the CD drive is bootable. This can delay boot by several seconds when media is in the tray which is a common end-user scenario. If drive lock is not enabled, don t check the disk. Drive lock is used to secure the content of disks such that they cannot be removed from one PC and accessed on another for security purposes. Windows does not expect memory to have been cleared. BIOS POST does not need to clear memory on systems without hardware requirements such as ECC, Parity, or RDRAM.  Optimize system BIOS logo splash screens or eliminate them. This includes optimizing the display time, the size of display coming out of ROM, and the time to decompress before displaying the screen. Remove advertisements from expansion ROMs. The video BIOS often includes such advertisements. If the PC does not support IDE expansion past a single hard drive and CD/DVD drive, configure the BIOS to not look for other devices on the primary and secondary IDE channels. For the Windows XP operating system, there is no need to restore drive timing on secondary IDE channels. For systems implementing PXE boot, do not run POST on a network adapter ROM if the user did not initiate a PXE boot. Actions for BIOS Wake Improvements On mobile systems, send IDE power-on and reset commands as soon as possible in the BIOS resume path to start disk spin up early. Make sure the BIOS applies the latest processor microcode update, if one exists.  This will reduce or eliminate time spent by a processor update driver during the device initialization phase of resume. Do not configure IDE drives in BIOS; use the _GTF method in your ASL code. Only initialize devices required to hand off to the operating system. Do not enumerate the USB bus Do not save and restore the entire PCI configuration space. Do not touch PS/2 devices, only enable the ports. Work with your BIOS developers or vendors to reduce BIOS WAKE times to 500mS or less. Your S3 resume path should not look like the APM resume path. If S4 resume is slow, optimize the INT13 performance in the BIOS. BIOS INT13 calls are used during resume from S4 for the disk I/Os that read the hiberfile.  Actions for Driver Fast Boot/Fast Resume Improvements Device drivers should only do what is required to initialize the device during boot and defer all else to after boot is complete. The goal is that the device is usable after boot without unnecessarily delaying boot. Drivers should use high-priority worker threads and critical queue work items if they are on the critical path of resume and have to do a small task. Otherwise, they will be starved for CPI by unrelated threads and the system won't resume quickly. Functional device drivers should complete S0 IRPs immediately, then request a D0 IRP. This allows the system to complete resuming while your driver performs device-specific re-initialization in the background. Device drivers should never hold spin locks except for very short durations, especially during boot, because this defeats any efforts toward parallel device initialization. Use Bootvis.exe to examine the resulting effect on overlapped driver initialization and disk I/O when developing a new device driver. Use Bootvis.exe to identify and correct any device drivers that don t complete S0 IRPs quickly, or otherwise block the system from continuing on the resume path. Actions for OEM Pre-load Fast Boot Improvements Having several programs loading at boot will slow down boot times.  Use as much built-in Windows functionality as possible. Avoid adding extra schedulers to the system. Use the scheduler built into Windows for reminders, anti-virus programs, scheduled anti-virus pattern file updates, and so on. Use standard HID key mappings on your keyboards. Adding an extra keyboard filter driver can slow boot. Windows XP has built-in support for a large variety of  special  keyboard buttons for launching web browsers, volume control, CD controls, and so on. Leverage Windows XP PC-Health support services such as Auto-update, Help Center, System Restore, and Assisted Support. If you need to load other functionality at startup, consider delay loading rather than loading everything when the system starts. Only load what is critical for the end user. Use a single NTFS partition when building hard disk images.  NTFS is more efficient in boot for disks larger than 8 GB. FAT reads the entire FAT during boot. NTFS reads only required metadata. Optimize OEM branded wallpapers. If you don t need the color depth, reduce it and stretch where possible. Hardware Fast Boot/Fast Resume Improvements Ship 128 MB of memory at a minimum Typically, a faster disk means a faster boot.  Use Bootvis.exe in the hardware qualification process in your company to compare hardware and to identify boot and resume delays. Work with your development team or your suppliers to understand and eliminate these delays. This applies to devices in the PC and devices connected to it, such as the keyboard, mice, hubs, and so on. Resources Related tools and information about optimizing for fast system startup on PCs running Windows XP can be found at:  http://www.microsoft.com/hwdev/onnow/  For questions, please send e mail to OnNow@microsoft.com. Please be sure to include your name, title, company name, company type (IHV, ISV, ISP, or OEM), and phone number.  When sending data or reporting issues, please include the build number of Windows XP you are using and explicit details about the hardware configuration.  STYLEREF Ch \* MERGEFORMAT  Fast System Startup for PCs Running Windows XP                                                                                                                      gdBRw gdy5O rk}g}gc gd]o  gd]o  gd]o  gd$*% gd$*% gdrE= gdZXA gdZXA gd_gp                                                                                                                                                                                                                                           PAGE  PAGE    2001 Microsoft Corporation. All rights reserved.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\opktools\docs\building_custom_windows_welcome_pages.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corporation Windows XP TitleWindows XP Microsoft Corporation Normal Microsoft Corporation Microsoft Word 10.0urn:schemas-microsoft-com:office:smarttags PlaceType urn:schemas-microsoft-com:office:smarttags PlaceName urn:schemas-microsoft-com:office:smarttags country-region urn:schemas-microsoft-com:office:smarttags place SbF0b vob|} .[ s4: v-Xt@Adobe 7GWgw 8HXhx )9IYiy *:JZjz 'dtU7 8HXhx 9IYiy *:JZjz LX2N' 7n@?`v'g` _jW** $9:M>]NN AK)Lh5[ K{Q{? A~Ej~i G{okc:=] uoaak5 NgHcG $q,ric ghv7h d}b2< \wT1J N]nAr  3h48/i %II#, 1<'`h ;_^;": }f$u2 Q*Kr- @}2=w O0iZL r>?/M1M? tz/f4[y J}/ZH e}K-6k .13"v :~6sa ;_N1K ]Y]M{ \Eycw% X|1Ee }I`KX'g /+~ky Em5[;; >amGL U~b~J Mnh_? ~@$|c m{4v6Q F=KhG o;',;W ++{Ho MujD^  <lj+ ,bm_N n.e5aQ DD|J_ l=!:K* \wDmD _V_-jw- zHG[K $1Y\6 c>lP9`a ^$888 u?;~^ Kqweog}yn c 1d& e)O1vF; ??li] 2S|UC 3mY1E !O+Ko (~?jy ]gkCI Tqi*] 6~\\~fh 1~_/# yROJH MRYu' yyg==_ svn=& o:yam$ E~GyC #==~9 uJ=9c ^O.yoL 1ZzvWQ 76Iaqsr> y~9/n &`}3H Z].Ls S]ZoF ~(x~S~\ o(~KA Dh/s} #M0Z[ d"j\1 ,t\CA L"")  M?bj! bD~?S ~l~ny Z][_z Y2bH>W Y>!26 R3q~9" }_iJc D5]KK 9DHV4 H~MygH V7&ib ?,yFK .ya5Xt ?Fy1--  K{kYlmb u[Io$ {ZZQ_ h{jDr FQ*x1 %>y)C IN1vJ 57|Uf- S|UNLYcS~ #wWUWg D tO,k k;k__ (=_V_ q<yfn \ q_x mmm/& &K/m@K /fgGG ?;<Vs P}v)e [I}O[ $+lB$ T$lzv  6?Q4b6 wywte l3:2Ra l&KK6 }JO3y ~R~`i 0}cEa l8!)F \ZKCY~Z q,Iwm% uuu`e |mgm~VR .-D#W +IR"g {3.Yf I8||? _J[]W jr\F< Ggsog Y=OB/R9$W }?NOO YF-t]2 gxZ)i }~;kOF ON_N; Lyyl{ 7_#[| /tM#A .+ZK6 j@*:w cgckqov OR/NO 91j%M \cJx[ Av-*ys 1]Kck (;/%y i4[_0 R\[G{= +oTz1~ _N9=L r"O>S t;o2. )r?L9 9{sHNI ?bH5; m-R;h Q4qA,^ OB?S7K cH>No0 yz;Hmb ^)*[,v +1j%O  Uf.9. &<-`! T|UfM A*ysS 1WrLUO G|UO& UNlUS h%O.jv* +uq[uq[uq[uq[uq[j Zv+J8 h%O.jv* ?|[@Db iQ2N: ri{CE 29+>Z .rqN[ (v|.w[ zmn9F 6 O> >D 6Q[K,~ 1D"eiT /VIe;G 4lJXz -ZO;i G,WQ^ nt:lq S(iv* .-5Ho< isjCX 9}99? auodml b,|>%OO!) 8MI36 Fehv* &k{K_ ]>1 = >[YI} u+{KhPG wV70^ ukiomml /.oui ^I:Esm$vQ\ UQ1U> TB&TD ~%D_||U Z!5]9 r~ay; {e|(v {e|(v o%Hv4 o%Hv4 ,J_0[ yvMGS /0y67 K,r[zQ~ Y#f_g :+Ym= JK8lyWindows OEM Preinstallation Kit  Design Notes Microsoft( Windows( Family of Operating Systems Building Custom Windows Welcome Pages in Microsoft Windows XP Important OEMs may redistribute this document to third-party ISP partners who are building custom HTML pages to integrate into the OEM s customized version of Windows Welcome. OEMs may also redistribute sample files located in the \Samples\Oobe\Isp.zip file on the Windows XP OEM Preinstallation Kit (OPK) CD. While OEMs may share this document with third-party ISP partners, the Windows OPK User s Guide (Opk.chm) is confidential between the OEMs and Microsoft and cannot be redistributed to third parties. Contact your Microsoft account manager if you have any questions regarding what information OEMs may share with third parties. Abstract: Windows Welcome is a series of HTML-based pages that make up the end user's first experience of the Microsoft Windows operating system on a new computer. Original equipment manufacturers (OEMs) can create custom pages for Windows Welcome. This document describes how OEMs can create custom hardware, mouse, and IME tutorials. In addition, it offers a detailed description of how to create an Internet service provider (ISP) sign-up offer that can be incorporated into an OEM s customized version of Windows Welcome. ISP sign-up offers may also be included in applicable locations in the Windows Start menu such as the Most Frequently Used (MFU) list of programs, the OEM link, the Online Services folder, or All Programs. The information contained in this document represents the current view of Microsoft Corporation on the issues discussed as of the date of publication. Because Microsoft must respond to changing market conditions, it should not be interpreted to be a commitment on the part of Microsoft, and Microsoft cannot guarantee the accuracy of any information presented after the date of publication. This white paper is for informational purposes only. MICROSOFT MAKES NO WARRANTIES, EXPRESS OR IMPLIED, AS TO THE INFORMATION IN THIS DOCUMENT. Complying with all applicable copyright laws is the responsibility of the user. Without limiting the rights under copyright, no part of this document may be reproduced, stored in or introduced into a retrieval system, or transmitted in any form or by any means (electronic, mechanical, photocopying, recording, or otherwise), or for any purpose, without the express written permission of Microsoft Corporation. Microsoft may have patents, patent applications, trademarks, copyrights, or other intellectual property rights covering subject matter in this document. Except as expressly provided in any written license agreement from Microsoft, the furnishing of this document does not give you any license to these patents, trademarks, copyrights, or other intellectual property. Unless otherwise noted, the example companies, organizations, products, domain names, e-mail addresses, logos, people, places, and events depicted herein are fictitious, and no association with any real company, organization, product, domain name, e-mail address, logo, person, place or event is intended or should be inferred.  2001 Microsoft Corporation. All rights reserved. Microsoft, MS-DOS, ActiveX, JScript, Outlook, Windows, Windows NT, and Windows XP are either registered trademarks or trademarks of Microsoft Corporation in the U.S.A. and/or other countries/regions. The names of actual companies and products mentioned herein may be the trademarks of their respective owners. Contents Contents Introduction Page Order in Windows Welcome Modifications You Can Make to Windows Welcome Overview of Windows Welcome Customization Process Customization Guidelines and Requirements General Coding Requirements Using the Windows Welcome Default Style Sheet OEM Branding in Windows Welcome Using Appropriate Web-Related Controls and Scripting Using Windows Welcome APIs Creating Custom Tutorials Adding a Custom Hardware Tutorial Oemhw.htm Oobeinfo.ini Adding a Custom Mouse Tutorial Adding a Custom IME Tutorial (Far Eastern Languages Only) Modifying USB Error Messages in Windows Welcome Creating ISP Sign-up Offers How a Windows Welcome ISP Sign-up Offer Works How a Start Menu ISP Sign-up Offer Works Developing an ISP Sign-up Offer Privacy Policy Sample Privacy Statement Technology Requirements Format and Dimensions File Names and Locations Contents of \Oobe Contents of \Oobe\Html Contents of \Oobe\Html\Ispsgnup Contents of \Oobe\Html\Oemcust Contents of \Oobe\Html\Oemhw Contents of \Oobe\Html\Oemreg Contents of \Oobe\Regsetup Contents of \Oobe\Setup Function Calls General Navigation Navigation on the First ISP Offer Page Navigation on the Second ISP Offer Page Navigation on the Last ISP Offer Page Navigation to the User-Selected ISP Developing ISP Offers for the Start Menu Location of the Shortcut Dimensions Enhanced Dialing Services Starting the Desktop ISP Offers Manually Creating Reminders for ISP Sign-up Internet Access Through the New Connection Wizard OEM/ISP Collaboration for Configuring ISP Sign-up Servers Connecting from the .isp File to the ISP s Sign-up Server Proper Functioning and Navigation of the ISP Sign-up Server Format and Dimensions General Navigation Navigation on the First Page of the ISP Sign-up Server Navigation on the Last Page of the ISP Sign-up Server Implementing the Desktop Registration Wizard Implementing Extended End-User Registration Extended End-User Registration Providing Extended End-User Registration Obtaining a DUN User Name from Microsoft Obtaining a Digital Certificate for Your Registration Server Determining What Kind of End-User Information That You Want Preparing Your Extended End-User Registration Pages Requirements Required Tools Privacy Statement Desktop Registration Privacy Statement Creating Your Extended End-User Registration Pages Extended End-User Registration Pages for use in Desktop Registration Modifying Oobeinfo.ini to Enable End-User Registration Testing End-User Registration OEM EULA Animated Screen Characters in Windows Welcome Requirements and Guidelines for Adding Your Own Custom Agent Character Adding the Qmark Character to Your Pages Customizing the Support Telephone Number Used in Agent Incorporating Custom Pages into Windows Welcome Navigation Architecture of Windows Welcome The Checkpoint Stack The Current Checkpoint Code for Navigating Within a Checkpoint Code for Navigating from One Checkpoint to Another Code for Checkpoint Stack Manipulation Testing and Debugging Windows Welcome Skipping Windows Welcome Testing and Resetting User Accounts Resetting Windows Welcome Preconfiguring Telephony Settings for Testing Starting Reminders Manually Appendix A: Configuring an Internet Access Account at the Factory OEM/ISP Collaboration to Create Custom .ins Files Creating the Internet Settings File Ispcnfg.ins Processing Ispcnfg.ins Successfully Customizing the Internet Welcome Page Preparing for Internet Account Failures Appendix B: Enhanced Dialing Services for ISP Sign-up Customizing the .ins File to Support a Connection Manager Service Profile Placing All Connection Manager Settings in the Internet Explorer .ins File Appendix C: Troubleshooting Windows Welcome Errors ISP Connection Errors .ins File Processing Errors .isp File Processing Failures in an ISP Sign-up Offer Introduction Windows Welcome, also called the Windows  out-of-box experience  or OOBE, is a series of HTML-based pages that make up the end user's first experience of the Microsoft Windows operating system on a new computer. Original equipment manufacturers (OEMs) can create custom pages for Windows Welcome. This document describes how OEMs can create custom hardware, mouse, and IME tutorials. In addition, it offers a detailed description of how to create an Internet service provider (ISP) sign-up offer that can be incorporated into an OEM s customized version of Windows Welcome. ISP sign-up offers may also be included in applicable locations in the Windows Start menu such as the Most Frequently Used (MFU) list of programs, the OEM link, the Online Services folder, or All Programs. Page Order in Windows Welcome Windows Welcome sections appear in this table. Each of these sections can consist of multiple pages. Note that some of these sections are optional. Table 1: Windows Welcome Pages Section Connection Notes Welcome Offline Tutorials: Mouse, Hardware, and IME  Offline Optional Regional settings and keyboard layout Offline Optional Time zone Offline Offline Product key Offline Telephony (network settings) Offline End-user registration and activation Online OEM ISP offers Offline Optional Connect to Internet Online Finish Offline Modifications You Can Make to Windows Welcome You may modify some parts of Windows Welcome by writing your own Windows Welcome pages. You can add or customize the following pages in Windows Welcome: End User License Agreement (EULA)   add an OEM EULA in addition to the Windows EULA Mouse tutorial Hardware tutorials Input Method Editor (IME) (for Far Eastern languages) ISP sign-up offers Additional registration screens (up to two)   See  Implementing Extended End-User Registration  later in this document. In addition, you can modify the \System32\Oobe\Images\Title.wma file so that it plays the Windows Welcome music in a continuous loop. As a resource to help you in your customizations, a variety of sample files, from complete Windows Welcome pages to button graphics, are located in the \Samples\Oobe folder and in the Isp.zip file, both on the Windows OPK CD. Overview of Windows Welcome Customization Process The overall process of modifying these pages consists of: Designing and coding custom Windows Welcome pages Incorporating custom pages into the Windows Welcome navigation checkpoint architecture Testing and debugging Windows Welcome Customization Guidelines and Requirements Requirements for adding or customizing Windows Welcome pages are discussed in  Customization Guidelines: First-Run Experience  in the Windows OPK User s Guide and are summarized here for your convenience. Use the following items to create custom pages that are consistent with the existing Windows Welcome pages: Style sheets Sample files Windows Welcome APIs Appropriate Web-related controls and scripting In addition to designing and coding the content of the Windows Welcome pages that you customize, make sure that the pages are added to the navigation structure of Windows Welcome. For more information, see  Incorporating Custom Pages into Windows Welcome  later in this document. General Coding Requirements For any page that you customize, make sure that: It is written in HTML. It does not start any programs or download code for execution. The last page contains a call that returns control back to Windows Welcome. Using the Windows Welcome Default Style Sheet Windows Welcome files ship with a default style sheet, Oobestyl.css, located in the %WINDIR%\System32\Oobe\Setup folder. To use this style sheet, add the following line to the heading in your HTML pages: <LINK REL=stylesheet TYPE="text/css" HREF="oobestyl.css"> The HREF attribute that points to Oobestyl.css must be relative to the location of the HTML page. Using the default style sheet in your own pages speeds up development time and provides a consistent look and feel. You can create and reference your own style sheets to customize the look and feel of your desktop offers. However, the layout and design should be consistent with that of Windows Welcome. OEM Branding in Windows Welcome You can brand Windows Welcome in two ways: Incorporate the OEM corporate name into the text in certain areas of Windows Welcome. Add a logo in the upper-right corner of all Windows Welcome pages. A sample first page of Windows Welcome Standard Windows Welcome elements are the Windows logo, the OEM logo, and navigation elements. These elements are always present, even during ISP sign-up. Using Appropriate Web-Related Controls and Scripting To provide a clean and positive end-user experience during Windows Welcome, the Internet-related confirmation dialog boxes on security settings do not display. Instead, Windows Welcome performs essential Web-related tasks invisibly, and does not require end-user confirmation. This includes: Submitting unencrypted FORM data over HTTP Applying default Java security settings Enabling the creation and use of Microsoft JScript  run-time ActiveX controls Enabling cross-frame scripting Navigating from one HTTP address to another, and back again Enabling ActiveX to run Important Make sure that all ActiveX controls are signed and marked safe for scripting, or the container will not run them. These exceptions apply only to content displaying within Windows Welcome. They do not affect or supercede security settings outside of Windows Welcome. Using Windows Welcome APIs Windows Welcome exposes many objects and interface services through the set of Windows Welcome APIs. Each HTML page can access these services through HTML script. For a complete reference, see the Windows XP Preinstallation Reference, available on the Windows OPK CD or in the Deploy.cab file located in the \Support\Tools folder of the Windows XP product CD. Creating Custom Tutorials OEMs can provide their own hardware, mouse, or IME tutorials. A variety of sample files, from complete Windows Welcome pages to button graphics, are located in the \Samples\Oobe folder and in the Isp.zip file, both on the Windows OPK CD. A custom tutorial must fulfill the following requirements: Any trade names, trademarks, logos, or brands displayed in connection with such tutorials are limited to those owned by the OEM and under which the computer is manufactured and distributed. It is written in HTML. It does not start any programs or download code for execution except as necessary to operate the hardware relevant to the content of the tutorial. The last page in the tutorial contains a call that returns control back to Windows Welcome. Adding a Custom Hardware Tutorial The HTML files that comprise your tutorial give the user the opportunity to verify that various hardware components operate as expected. For example, clicking a sound-check button can play an audio file. After hearing the sound, the user continues. However, if the user does not hear the sound, you can guide the user through a path that explains how to assemble the speakers and connect them to the computer. Do not use a custom hardware tutorial as a diagnostic tool. The Windows OPK CD includes a sample hardware check (a sound check) that you can use as a basis for creating your own: \Samples\Oobe\Oemhw.htm on the Windows OPK CD. If you include a sound check, do not use the Windows XP startup or logoff sounds (C:\Windows\Media\Windows XP Start.wav or Windows XP Logoff Sound.wav).  You can customize the OEM hardware tutorial to resemble the actual customer experience associated with your products. The following three files control this functionality: Oemhw.htm Agtscrpt.js Oobeinfo.ini To include an OEM hardware tutorial in Windows Welcome Customize one or more HTML files for the tutorial. Name the first file Oemhw.htm. You may want to name any succeeding files similarly, as part of a series (for example, Oemhw2.htm, Oemhw3.htm, and so on). For every page that calls an external navigation function such as GoBack or GoNext, make sure that the onload handler calls the following function: window.external.ExecScriptFn("InitFrameRef();"); This function sets up a state within the JScript navigation code that enables you to make the calls documented in the next step. Make sure that the onclick handler for the Back button on the initial page calls the following function: window.external.ExecScriptFn("GoBack();"); This function enables Windows Welcome to navigate the user to the correct previous screen in the Windows Welcome experience. Without this call, the user is unable to return to any previous screen. The following is an example of how this code might look on your page: <SCRIPT> function MyBackFunction() //Do something meaningful //The final call must be  window.external.ExecScriptFn("GoBack();"); </SCRIPT> <BUTTON onclick="MyBackFunction();">Back Button</BUTTON> Make sure that the onclick handler for the Next button on the last of your tutorial pages calls the following function: window.external.ExecScriptFn("GoNext();"); This function enables Windows Welcome to navigate the user to the correct next screen in the Windows Welcome experience. Without this call, the user is unable to move forward to the next screen. The following is an example of how this code might look on your page: <SCRIPT> function MyNextFunction() //Do something meaningful //The final call must be  window.external.ExecScriptFn("GoNext();"); </SCRIPT> <BUTTON onclick="MyNextFunction();">Next Button</BUTTON> Select these files in Setup Manager to ensure that the files are copied to the correct location during the preinstallation process, or modify the Oobeinfo.ini file by following the instructions described later. Setup Manager sets a value for OEMHWTutorial in the [OEMHardwareTutorial] section of the Oobeinfo.ini file: [OEMHardwareTutorial] OEMHWTutorial = X X can be one of two values: Includes a custom OEM hardware tutorial page in Windows Welcome. Does not include a custom OEM hardware tutorial page in Windows Welcome. Oemhw.htm %WINDIR%\System32\Oobe\html\Oemhw\Oemhw.htm is the actual HTML layout control page. Make UI layout alterations in the <BODY> section of the page, or more specifically, in the  maincell  cell of the main layout table: <TABLE BORDER=0 cellpadding=0 cellspacing=0 width=100% height=100%> <TD ID=leftmargincell width=7%></TD> <TD ID=maincell valign=middle class="text-primary"> [Add custom HTML here] </TD> </TR> </TABLE> It is highly recommended that you make a backup of the original file before altering this page. Oobeinfo.ini The second page to change is %WINDIR%\System32\Oobe\Oobeinfo.ini, which you can edit with any text editor, such as Notepad. You can also modify Oobeinfo.ini by using Setup Manager. This page enables you to customize the Windows Welcome experience for your customers. To include the OEM hardware tutorial in your particular version of OOBE, add the following lines to the Oobeinfo.ini code: [OEMHardwareTutorial] OEMHWTutorial = 1 To turn off the OEM hardware tutorial, set the variable to 0: [OEMHardwareTutorial] OEMHWTutorial = 0 Adding a Custom Mouse Tutorial The Windows OPK CD includes a sample mouse tutorial that you can use as a basis for creating your own. You will find it located in the \Samples\Oobe folder of the Windows OPK CD. To add a custom mouse tutorial Customize one or more HTML files for the tutorial. After creating or modifying a mouse tutorial, name the first file Mouse.htm. You may want to name any succeeding files similarly, as part of a series (for example, Mouse_a.htm, Mouse_b.htm, and so on). For every page that calls an external navigation function such as GoBack or GoNext, make sure the onload handler calls the following function: window.external.ExecScriptFn("InitFrameRef();"); This sets up state within the JScript navigation code that enables you to make the calls documented in the next step. Make sure that the onclick handler for the Back button on the first page calls the following function: window.external.ExecScriptFn("GoBack();"); This function enables Windows Welcome to navigate the user to the correct previous screen in the Windows Welcome experience. Without this call, the user is unable to return to any previous screen. The following is an example of how this might look on your page: <SCRIPT> function MyBackFunction() //Do something meaningful //The final call must be  window.external.ExecScriptFn("GoBack();"); </SCRIPT> <BUTTON onclick="MyBackFunction();">Back Button</BUTTON> Make sure that the onclick handler for the Next button on the last of your miscellaneous pages calls the following function: window.external.ExecScriptFn("GoNext();"); This function enables Windows Welcome to navigate the user to the correct next screen in the Windows Welcome experience. Without this call, the user is unable to move forward to the next screen. The following is an example of how this might look on your page: <SCRIPT> function MyNextFunction() //Do something meaningful //The final call must be  window.external.ExecScriptFn("GoNext();"); </SCRIPT> <BUTTON onclick="MyNextFunction();">Next Button</BUTTON> Select these files in Setup Manager to ensure that the files are copied to the correct location during the preinstallation process, or modify the Oobeinfo.ini file by following the instructions described later. Setup Manager sets a value for MouseTutorial in the [Options] section of the Oobeinfo.ini file: [Options] MouseTutorial = X X can be one of two values: Indicates that Windows Welcome does not include the mouse tutorial. Indicates that Windows Welcome includes the sample HTML-based mouse tutorial. Adding a Custom IME Tutorial (Far Eastern Languages Only) The Input Method Editor (IME) tutorial is available only for the Japanese, Traditional Chinese, Simplified Chinese, and Korean versions of Windows. To add a custom IME tutorial Customize one or more HTML files for the tutorial. After creating or modifying the sample IME tutorial file, name the initial file Imetut1.htm. You may want to name any succeeding files similarly, as part of a series for example, Imetut2.htm, Imetut3.htm, and so on. For every page that calls an external navigation function, such as GoBack or GoNext, make sure that the onload handler calls the following function: window.external.ExecScriptFn("InitFrameRef();"); This sets up state within the JScript navigation code that enables you to make the calls documented in the next step. Make sure that the onclick handler for the Back button on the initial page calls the following function: window.external.ExecScriptFn("GoBack();"); This function enables Windows Welcome to navigate the user to the correct previous screen in the Windows Welcome experience. Without this call, the user is unable to return to any previous screen. The following is an example of how this might look on your page: <SCRIPT> function MyBackFunction() //Do something meaningful //The final call must be  window.external.ExecScriptFn("GoBack();"); </SCRIPT> <BUTTON onclick="MyBackFunction();">Back Button</BUTTON> Make sure that the onclick handler for the Next button on the last of your tutorial pages calls the following function: window.external.ExecScriptFn("GoNext();"); This function enables Windows Welcome to navigate the user to the next screen in the Windows Welcome experience. Without this call, the user is unable to move forward to the next screen. The following is an example of how this might look on your page: <SCRIPT> function MyNextFunction() //Do something meaningful //The final call must be  window.external.ExecScriptFn("GoNext();"); </SCRIPT> <BUTTON onclick="MyNextFunction();">Next Button</BUTTON> Select these files in Setup Manager to ensure that the files are copied to the correct location during the preinstallation process, or modify the Oobeinfo.ini file by following the instructions described later. If default Microsoft files are present with the same name, you can overwrite these files with your own.  Setup Manager writes the following value to Oobeinfo.ini: IMETutorial = 1 Modifying USB Error Messages in Windows Welcome Windows Welcome enables computer manufacturers to check for the presence of a USB keyboard or mouse. (Windows Welcome does not check for PS/2 and serial mouse devices/keyboards.) This check is important because without a mouse or keyboard attached, the user will not be able to complete Windows Welcome. You can also enhance the error message files for when the check for a USB mouse, USB keyboard, or both, fail. By providing your own graphics for the error messages, you can enhance the error text with visual representations of the hardware or object involved. For example, if the check for a USB mouse fails, you can give the user some visual instruction, with a graphic in GIF format, illustrating what the mouse looks like and where it plugs into the back of the user's computer. All sample error files are located in the \Samples\Oobe folder on the Windows OPK CD. Important Do not change the error text in the error files. To modify USB error messages Create your own error-screen graphics, in GIF format and based on the Windows 256-color palette. They must not, in any way, obscure the Windows Welcome text, error text, or buttons. Place the graphics in the master installation at %WINDIR%\System32\Oobe\Images\. Modify the appropriate HTML error files to point to your graphics: Nousbkbd.htm when the USB keyboard check fails Nousbms.htm when the USB mouse check fails Nousbkm.htm when both the USB mouse and keyboard checks fail Creating ISP Sign-up Offers You can specify the types of ISP sign-up offers that the end user will see. The main steps of this process are to create your offer files, and then to run Setup Manager. In Setup Manager, the following ISP sign-up options are available: MSN sign-up Skip ISP sign-up OEM ISP sign-up Preconfigure Internet access accounts in the factory When you select Display a list of OEM ISP sign-up offers, the following value is added to the [Signup] entry of the Oobeinfo.ini file: [Signup] ISPsignup = Offline You can integrate ISP sign-up offers into Windows Welcome, add them to the Windows Start menu, or do both. To use the OEM ISP sign-up option, the OEM places a set of ISP offers on the end user s computer for display during Windows Welcome. Each OEM ISP sign-up offer can consist of as many HTML pages as desired. The OEM can display one ISP offer per page, multiple ISP offers on a single page, or other appropriate layouts and designs. The first page of the OEM custom offer must fulfill the requirements outlined in the  Navigation on the First ISP Offer Page  section in this document. The OEM ISP offer pages must also call the APIs necessary to connect end users with the sign-up services of the ISP that they select. After ISP sign-up is complete, the user finishes Windows Welcome. Important If the user chooses an ISP offer other than MSN, then Microsoft is not responsible for any long-distance charges incurred during ISP sign-up. If the computer is already connected to the Internet through a telephone modem to enable registration or activation, then the ISP sign-up code must terminate that connection and initiate a new telephone call to the ISP sign-up server. How a Windows Welcome ISP Sign-up Offer Works ISP sign-up occurs after the registration and activation phases of Windows Welcome. On the ISP sign-up page (Isp.htm), the user selects an ISP offer. This choice initiates the Windows Welcome DialEx function, which connects the user online with that provider s ISP sign-up server. The server displays an HTML page or set of pages that request information and provide options relevant to creating an ISP account. Such information may include the end user s name, address, credit card information, billing preference, choice of user name and password, POP selection, the Terms and Conditions section, and so on. After the user enters all of the necessary information and then clicks Next, the ISP sign-up server creates an .ins file and uses the ProcessINS function to download it to the computer. The downloaded .ins file configures the end user s computer with an ISP account. The computer terminates the telephone connection, disconnects from the ISP sign-up server, and continues to the next portion of the Windows Welcome experience. Because the OEM s ISP offer connects to the ISP sign-up server, the OEM and ISP must collaborate in building the ISP offer. How a Start Menu ISP Sign-up Offer Works s important to remember that some users will skip Internet sign-up during Windows Welcome. At some point after Windows Welcome finishes, these users may start Internet Explorer or Outlook Express from the Start menu. If you configured Windows Welcome to include MSN Internet Access or OEM ISP sign-up offers, then users can choose to view these OEM ISP offers or to use the New Connection Wizard to configure Internet access using a local area network, VPN, or other existing connection. If users elect to view the OEM ISP sign-up offers, then the desktop ISP sign-up starts and displays Isp.htm, the same file used for the OEM ISP sign-up offer(s) in Windows Welcome. You can set your OEM ISP sign-up offer as the default in desktop ISP sign-up, but you must provide a way for users to access the New Connection Wizard if they decline the offer. You can also include ISP sign-up offers in applicable locations in the Windows Start menu, such as the Most Frequently Used (MFU) list of programs, the OEM link, the Online Services folder, and All Programs. You can also locate a shortcut to one or more ISP sign-up offers on the Windows desktop. The Online Services folder is available in the Windows user interface through the New Connection Wizard or by navigating to %SYSTEMDRIVE%\Program Files\Online Services. By default, this folder contains shortcuts to the Microsoft Internet Referral Service and to MSN Internet Access. You may place shortcuts to any additional Internet sign-up programs in this location. Developing an ISP Sign-up Offer Your ISP sign-up offer consists of an unlimited number of HTML pages, designed and formatted to your needs and specifications. The offer must contain the APIs necessary to connect users to the sign-up server for the ISP that they select. As a resource to help you in your customizations, a variety of sample files, from complete Windows Welcome pages to button graphics, is located in the \Samples\Oobe folder of the Windows OPK CD. A subset of these files is located in the Isp.zip file: Oemisp.htm (first page) This is a sample Isp.htm file that is customized for OEMs. This file should replace the Isp.htm file in the retail version of Windows Welcome. Oemsgnup1.htm (second page) Oemsgnupoff.htm (offline offer page) Oemsgnupon.htm (online offer page) Ispsgnup.htm (used only to preconfigure an ISP account for a customer) Regshell.htm (registration file that contains additional code to enable a customer to enter a telephone number optionally) Rusrinfo.htm (registration file that contains additional code to transmit a customer s telephone number automatically, if one is provided) Your ISP sign-up offer: Navigates either backward or forward in Windows Welcome. Navigates within the pages of the ISP offer itself (if it consists of multiple pages). Meets the requirements outlined in  Customization Guidelines: Internet Access and ISP Offers. Prompts the user for information related to ISP sign-up. Calls the ISP sign-up server of the ISP that the user selects. For non-MSN offers, this call must be placed separately from the one provided with the default registration and MSN sign-up. The default call must end and a new call to a non-Microsoft telephone number must be placed to enable ISP signup. Declares that the user has successfully completed ISP sign-up. Privacy Policy Users will need to provide private information during the ISP sign-up process. Safeguarding personal information on the Internet is a major customer concern. If you collect registration information from your customers during Windows Welcome, it is recommended that you inform users about how you will manage and protect the security of that data. The following privacy statement provides sample text. Sample Privacy Statement Thank you for buying and installing Microsoft Windows. We invite you to register your purchase with Microsoft so that we may provide you with better product services, alert you to product upgrades, special offers, and updated information, and make it easier for you to use our Web site at www.microsoft.com. Your registration will be stored on secure Microsoft servers in the United States. The information may also be stored on secure Microsoft servers in your country or region, or other countries or regions. If you've already registered, we will use your personal identification number in your cookie file to merge this registration information with any information that you may have already left with us. If you have not registered previously on our Web site, we will create a new personal identification number (PIN) for your new profile. We will then send this PIN number back to your hard disk in the form of a cookie, a very small bit of code. This code is uniquely yours and helps you travel across the Microsoft Web site, enabling you to download free software, order free newsletters, and visit premium sites without having to fill out registration forms with information you've already provided. When you come to the site for the first time, we will invite you to create a Registration ID. Then, even if you switch computers, you won't have to register again   just use your Registration ID to identify yourself. At any time, you can visit the Profile Center on our Web site. Click Update Profile, and edit any of the personal information in your profile. If you haven't previously created a Registration ID, we will ask you to do so to ensure that only you gain access to your information. On the Microsoft Web site, tell us what kinds of communications you want to receive from us. For example, we occasionally allow other companies to offer our customers information about their products and services, using postal mail only. If you provide us your mailing address and you do not want to receive these offers, you may select the option indicating that you do not want to receive marketing materials from third parties. Thank you for registering your Microsoft product. Visit our Web site at www.microsoft.com for the most current information about this and our other products. Technology Requirements The Windows Welcome process exposes many objects and interface services through the external interfaces of the Windows Welcome process. Each HTML page can access these services through HTML script as desired. In some instances, OEMs may wish to enable ISP offers that may be updated online. The first page of the OEM ISP sign-up offer must be stored locally on the hard disk of the user s computer. Important If the end user chooses to sign up for Internet access from an OEM custom offer, Windows Welcome must disconnect from any existing connection to the Microsoft Global Network and then dial out to an OEM-hosted telephone call. In addition, your ISP offer must include specific characteristics for: Format and dimensions File names and locations Function calls General navigation Navigation on the first ISP offer page Navigation on the second ISP offer page Navigation on the last ISP offer page Navigation to the ISP that users select These characteristics are described next. Format and Dimensions Like other custom pages in Windows Welcome, an ISP sign-up offer can use only HTML, DHTML, ActiveX, or other Internet technologies. It cannot run executable files. File Names and Locations Name the first file in your ISP sign-up offer Isp.htm. You may want to name any succeeding files similarly, as part of a series (for example, Isp2.htm, Isp3.htm, and so on). Place these files in %WINDIR%\System32\Oobe\Html\Ispsgnup\. The main JScript control and HTML  shell  control pages are located in the Oobe folder, while the individual HTML user-interface structure control and associated pages are located in the subfolders within the Oobe folder. To use the sample files located in the \Samples\Oobe folder of the Windows OPK CD (or in the Isp.zip file), place them in the following locations: Oemisp.htm - Rename this sample file to Isp.htm and replace the existing Isp.htm file in the System32\Oobe\Setup folder. Oemsgnup1.htm - This sample file should be in the System32\Oobe\Html\Oemcust folder, but you can modify this location. Oemsgnupoff.htm - This sample file should be in the System32\Oobe\Html\Oemcust folder, but you can modify this location. Oemsgnupon.htm - This sample file should be in the System32\Oobe\Html\Oemcust folder, but you can modify this location. For your reference, the following list shows the locations of the various folders and files used in Oobe. This structure exists in %WINDIR%\System32\Oobe. Contents of \Oobe Folders: Regsetup Setup Files: Ispshell.htm Regshell.htm Regstyl.css Contents of \Oobe\Html Folders: Ispsgnup Oemcust Oemhw Oemreg Contents of \Oobe\Html\Ispsgnup Files: Ispcnfg.ins Ispsgnup.htm Contents of \Oobe\Html\Oemcust Files: Oemcust.htm Oemsgnup1.htm Oemsgnupoff.htm Contents of \Oobe\Html\Oemhw Files: Oemhw.htm Contents of \Oobe\Html\Oemreg Files: Oemadd.htm Contents of \Oobe\Regsetup Files: Rdrdyreg.htm Regdone.htm Regrmnd.htm Roempriv.htm Rprvcyms.htm Rregdial.htm Rusrinfo.htm Contents of \Oobe\Setup Files: Isp.htm Nousbkbd.htm Nousbkm.htm Nousbms.htm Oemisp.htm Function Calls All function calls are in Microsoft JScript. General Navigation Generally, you control navigation within your ISP offer, however, you must follow a few rules to ensure a positive end-user experience. The onload handler for your HTML pages must call the following function: window.external.ExecScriptFn("InitFrameRef();"); This sets up a state within the JScript navigation code that enables you to make other external navigation calls. Include a Back button and a Next button on each page of your ISP sign-up offer. Navigation from page to page uses standard hyperlinks. The Back and Next buttons on the first page, the Back button on the second page, and the Next button on the last page of your ISP offer are all handled differently. For more information, refer to the following sections on navigation. If you want to have a Cancel button and go offline, use the GoCancel function. For example: window.external.ExecScriptFn("GoCancel();"); Navigation on the First ISP Offer Page The first page of the ISP offer (Isp.htm) must provide sign-up options for a new Internet account through one of the following methods: The included MSN Internet Access sign-up offer Your custom OEM ISP sign-up offer(s) Both MSN and OEM ISP sign-up offer(s) Re-establishing an existing Internet account Connecting to the Internet at a later time Important Each of these options must be presented in the same manner with identical selection controls and fonts. The first page must contain a Next button or equivalent, and the onclick handler of the button must call the following: window.external.ExecScriptFn("GoNext();"); To control the navigation behavior of the GoNext function on Isp.htm (which varies based on the option the user selects), modify the CKPT_ISPsignup case in the GoNext function in Msobshel.htm. For detailed information about the Windows Welcome architecture and checkpoints, see  Navigation Architecture of Windows Welcome  later in this document. For example, if you want the user to navigate to a page called Isp1.htm to create a new Internet account with ISP X, add the following to Msobshel.htm: case CKPT_ISPsignup:    else if (g.OEMISPXRadioButton.checked)       PushCKPT(CKPT_ISPDIAL);  // add this to the Windows Welcome checkpoint system       g.navigate("isp1.htm");  // navigate to Isp1.htm in the same folder    break; The first page should contain a Back button or equivalent, and the onclick handler of the button should call the following: window.external.ExecScriptFn("GoBack();"); This function lets Windows Welcome navigate to the previous step. Without this call, the user is unable to exit the ISP offer stage. The following is an example of how this function might look on the first page of your ISP offer: <SCRIPT> function MyBackFunction() window.external.ExecScriptFn("GoBack();"); //or window.parent.GoBack() if the pages are local </SCRIPT> <BUTTON onclick="MyBackFunction();">Back Button</BUTTON> Navigation on the Second ISP Offer Page The onclick handler for the Back button or equivalent must also call the GoBack function as described previously. This function lets Windows Welcome navigate back to the first ISP offer page (Isp.htm). Without this call, the user is unable to return to Isp.htm. Navigation on the Last ISP Offer Page The onclick handler of the Next button or equivalent must call the following functions: window.external.API.set_RegValue(HKEY_LOCAL_MACHINE, OOBE_MAIN_REG_KEY + "\\TEMP", "ISPSignup", 1); window.external.ExecScriptFn("GoNext();"); For example: <SCRIPT> window.external.API.set_RegValue(HKEY_LOCAL_MACHINE, OOBE_MAIN_REG_KEY + "\\TEMP", "ISPSignup", 1);    window.external.ExecScriptFn("GoNext()"); </SCRIPT> <BUTTON onclick="MyNextFunction();">Next Button</BUTTON> The statement should be window.external.API.set_RegValue(HKEY_LOCAL_MACHINE, OOBE_MAIN_REG_KEY + "\\TEMP", "ISPSignup", 1);. If OOBE reads the value at the end (FinishPage_LoadMe( ) in Msobshel.htm), it will display the  ISP signup was successful  message and prevent the wizard from launching when IE is launched. ISP reminders will be disabled as well. This statement can be called in any HTML pages run in OOBE before the Finish page (Fini.htm). Calling GoNext enables the user to complete the ISP sign-up process and eventually proceed to the Windows desktop. If the GoNext call is not made, the user is unable to complete Windows Welcome. In addition, include the following code to indicate that ISP sign-up completed, so that the status is shown on the Finish page: var HKEY_LOCAL_MACHINE = 0x80000002; var OOBE_MAIN_REG_KEY = "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Setup\\OOBE"; ApiObj.set_RegValue(HKEY_LOCAL_MACHINE, OOBE_MAIN_REG_KEY + "\\TEMP", "ISPSignup", 1); Navigation to the User-Selected ISP Within your ISP offer, you can access any of Windows Welcome s native APIs. These are exposed through the Document Object Model (DOM) of the browser in the following form: window.external.SomeAPI where SomeAPI refers to a particular API accessible in script from window.external. In addition to many other APIs, Windows Welcome provides several APIs that are specifically designed to support the needs for providing ISP offers and sign-up capability to end users. This is the minimal API to call for successful ISP sign-up: window.external.Dial([Path to ISP file]); When called from script, this API takes a path to a standard ISP file. If the file path is not absolute, the API searches for the relative path based on the current folder. To see a sample ISP file, edit %WINDIR%\System32\Oobe\Msobe.isp. The following is an example of how to call this API: // Set the ISP name window.parent.SetCustomISPName("ACME"); // Set the OEM dialup settings window.parent.SetCustomDialing("oemobe.isp"); if (window.external.CheckOnlineStatus && window.external.CheckStayConnected("oemobe.isp"))     // dialup connection already available     window.parent.PushCKPT(window.parent.CKPT_ISPDIAL);     window.parent.g_IgnoreDialErr = false;     window.external.Connect(window.parent.CONNECTED_ISP_SIGNUP, "oemobe.isp");     // dialup connection is not available     window.external.Hangup();     window.parent.GoNavigate(window.parent.CKPT_ISPDIAL);  Developing ISP Offers for the Start Menu At some point after Windows Welcome finishes, users who skip Internet account sign-up during Windows Welcome may start Internet Explorer or Outlook Express from the Start menu. If you configured Windows Welcome to include MSN Internet Access or OEM ISP sign-up offers, then users can choose to view these OEM ISP offers or to use the New Connection Wizard to configure Internet access using a local area network, VPN, or other existing connection. If users select to view the OEM ISP offers, then the desktop ISP sign-up starts and displays Isp.htm, the same file used for the OEM ISP offer(s) in Windows Welcome. Location of the Shortcut You can place the shortcut to the ISP offer in one of the following locations: The Most Frequently Used (MFU) list of programs on the Start menu. The Program_shortcuts folder on the Start menu. The .htm page or .exe associated with the OEM link. The Windows desktop. The Online Services folder. Use the same files for your desktop ISP sign-up offer(s) as you used in the Windows Welcome full-screen OEM ISP sign-up offer. Name the first file in your ISP sign-up offer Isp.htm. You may want to name any succeeding files similarly, as part of a series (for example, Isp2.htm, Isp3.htm, and so on). Place these files in %WINDIR%\System32\Oobe\Html\Ispsgnup\. The differences between Windows Welcome ISP offers and desktop ISP offers are: Dimensions Enhanced dialing services Dimensions Desktop ISP sign-up is displayed in a window that is at most 800 600 pixels, including the title bar and the task bar. The HTML pages that you create for the ISP sign-up offer display in the area between the two horizontal dark blue bars. If the computer's display resolution is greater than 800 600 pixels, the desktop ISP sign-up pages display in an 800 600 pixel window. If the display resolution is less than 800 600 pixels and the text is otherwise hidden, scroll bars enable the user to view the offer text and buttons. Important To ensure the consistency and quality of any custom ISP sign-up pages that you create, test your ISP sign-up pages at different resolutions in both full-screen Windows Welcome and from other access points such as the sign-up reminders and the Windows Start menu. Enhanced Dialing Services Your partner ISPs can use enhanced dialing services to set up an ISP account. ISPs can take advantage of enhanced dialing services using Connection Manager, which is included in Microsoft Windows XP. For more information, see Appendix Enhanced Dialing Services for ISP Sign-Up. Starting the Desktop ISP Offers Manually For testing purposes, you can manually start the desktop ISP offers shown to users who skip Internet sign-up during initial startup by running Msoobe.exe with the /offline option. Desktop ISP offers are available only when using the /offline option for ISP offers. To start the desktop ISP offers manually On the computer you are testing, click the Start button, and then click Run. Type: [drive]:\Windows\System32\Oobe\Msoobe.exe /offline, and then click OK. Creating Reminders for ISP Sign-up  For users who do not configure an ISP account during Windows Welcome, you can specify up to three ISP sign-up reminders. By default, no ISP reminders are configured. To activate ISP sign-up reminders for users who do not complete ISP sign-up during Windows Welcome, you must manually add the entry ISPRemind1 (and optionally, ISPRemind2 and ISPRemind3) to the [DesktopReminders] section of %SYSTEMDRIVE%\Windows\System32\Oobe\Oobeinfo.ini. For example, the following entries in Oobeinfo.ini enable the ISP sign-up reminders and schedule them to occur five, ten, and fifteen days after the user completes Windows Welcome. [DesktopReminders] ISPRemind1 = 5 ISPRemind2 = 10 ISPRemind3 = 15 When Windows Welcome detects these entries in Oobeinfo.ini, it creates tasks in Task Scheduler that display a balloon reminder to the user after the specified number of days. When the end user clicks the balloon, Windows Welcome displays the file %SYSTEMDRIVE%\Windows\System32\Oobe\Html\Ispsgnup\Isp.htm. This page must also include a Cancel button and an option that offers to users the option of receiving any future reminders. When the user clicks Cancel, close the desktop sign-up screen. Because Isp.htm displays in full-screen Windows Welcome and is used for ISP sign-up offers available from the reminder notifications, make sure to implement the option not to be reminded again in such a way that it is visible only to the user when viewing the sign-up offers outside of Windows Welcome. To do this, call window.external.Directions.get_AppMode( ). If the returned value is 0, the computer is in Windows Welcome mode. Use window.external.DeleteRemind(1) and window.external.Finish to delete reminders and close the desktop sign-up screen. For full-screen Windows Welcome, window.external.StopRemind(1) prevents the ISP sign-up reminder from being created on successful ISP sign-up. After the desktop ISP sign-up completes, the user navigates to the file %WINDIR%\System32\Oobe\Setup\Fini.htm. To ensure the consistency and quality of any custom ISP sign-up pages that you create, test your ISP sign-up pages at different resolutions in both full-screen Windows Welcome and from other access points such as the sign-up reminders and the Windows Start menu. Internet Access Through the New Connection Wizard If you include custom OEM Internet sign-up offers in Windows Welcome, users who skipped sign-up during Windows Welcome can view your offer(s) when they access the Internet the first time. The options available to users are: View the ISP offer(s) provided by your computer manufacturer See other ways to connect to the Internet When users choose to view your offer, Isp.htm appears. If users choose to see other ways to connect to the Internet, the New Connection Wizard appears. You may select your offer as the default choice for end users. Your offer must provide a clear and conspicuous way for end users to exit and view the New Connection Wizard if they decide not to complete signup. If you do not create custom OEM Internet sign-up offers, the New Connection Wizard appears automatically when users access the Internet for the first time. To cause the New Connection Wizard to start when Internet Explorer or Outlook Express starts, the [Signup] section of Oobeinfo.ini must have the following entry: ISPSignup = none To cause the OEM ISP sign-up offer (that you created) to display when Internet Explorer or Outlook Express starts, the [Signup] section of Oobeinfo.ini must have the following entry: ISPSignup = offline Windows then displays the OEM ISP sign-up offer page (Isp.htm) to the user in a browser window. OEM/ISP Collaboration for Configuring ISP Sign-up Servers Establishing an Internet account for the end user is a coordinated effort between the ISP and the OEM. For the sake of the end user, it is important that connecting from the OEM ISP sign-up offer on the computer to the end user s ISP of choice goes smoothly. This exchange involves the following elements: Connecting from the OEM s ISP sign-up offer on the computer to the .isp file of the ISP of choice. Connecting from the .isp file to the ISP s sign-up server. Proper functioning and navigation of the ISP sign-up server for moving the end user through the offer, and generating and downloading the .ins file to the end user s computer. Proper execution of the downloaded .ins file to create an ISP account on the end user s computer. When the end user selects a service as the ISP of choice on the OEM ISP sign-up offer, Windows Welcome connects to the service, and it calls an .isp file that the ISP has created. The .isp file then connects Windows Welcome to the ISP s sign-up server, appending important information in the URL, which the ISP sign-up server can then process. The ISP sign-up server leads the end user through the process of setting up an account, and then generates the .ins file. The .ins file is then downloaded to the end user s computer. The ISP sign-up server then disconnects, and Windows Welcome runs the .ins file, setting up the new account on the computer. The .isp and .ins file formats are extensions of the Windows dial-up networking (.dun) file format. These formats conform to standard Windows .ini file conventions. For detailed information on these file formats, see the Microsoft Windows XP Preinstallation Reference (Ref.chm), available in Deploy.cab, located in the \Support\Tools folder on the Windows XP product CD. For a list of Windows .ini files characteristics, see the section  Creating the Internet Settings File Ispcnfg.ins  in this document. The .isp file contains the information that a computer requires to dial up and connect to your ISP sign-up server. The ISP is responsible for providing its own .isp file and ISP sign-up server. The OEM and ISP must collaborate to ensure that the .isp files are correctly configured to work with the OEM ISP sign-up offer. Connecting from the .isp File to the ISP s Sign-up Server The .isp file must provide sufficient information to dial into and log onto the ISP sign-up server. After a successful connection is established, the browser window of Windows Welcome automatically navigates to the URL specified in the [URL] section of the .isp file as follows: [URL] Signup = https://www.fabrikam.com/default.asp? Notes For security reasons, it is recommended that you use HTTPS, SSL, or another secure method to connect to the ISP server. The question mark at the end of the URL is required. The browser window appends a query string in name/value pairs to the specified URL. This query string contains additional information that you may find helpful in signing up the end user. The complete URL might look as follows: https://www.fabrikam.com/default.asp?LCID=1033&TCID=1&ISPSignup=     MSN&OfferCode=0&OS=1&BUILD=2156&DT=0&OEMName=     FABRIKAM&BroadbandDeviceName=devicename&BroadbandDevicePnpid=deviceid LCID is the User Language and Country ID from the Regional Settings in the registry. TCID is the TAPI Country ID in the registry. OfferCode, which comes from the [Signup] section of the Oobeinfo.ini file, may be used as an additional piece of information for OEM customization. If relevant, the OEM must identify the offer code(s) for the ISP. OS is the Windows operating system, identified in the registry: 1 = Windows 98 Second Edition or Windows Millennium Edition 2 = Windows NT, Windows 2000, or Windows XP BUILD is the build number of the operating system, and comes from the registry. ISPSignup is from the [Signup] section of the Oobeinfo.ini file. OEMName is from the [Branding] section of the Oobeinfo.ini file. DT tells the ISP whether the query comes from the full-screen Windows Welcome or from the desktop (windowed) version of OOBE. DT 1 indicates the desktop version; DT 0 indicates the full-screen version. BroadbandDeviceName and BroadbandDevicePnpid are from the [Options] section of Oobeinfo.ini. You can modify the Oobeinfo.ini file to change the value of BroadbandDeviceName and BroadbandDevicePnpid. This is required if you intend to support broadband providers in Windows Welcome. The ISP sign-up server must parse this data out of the URL request and use the information to determine which pages to show to the end user. Proper Functioning and Navigation of the ISP Sign-up Server The ISP sign-up server that you create must fulfill requirements in the following areas: Format and dimensions General navigation Navigation on the first page of the ISP sign-up server Navigation on the last page of the ISP sign-up server For an example, see the Oemsgnupon.htm file in the \Samples\Oobe folder of the Windows OPK CD. Format and Dimensions An ISP sign-up server displays using HTML, DHTML, ActiveX, or other Internet technologies. It cannot run executable files. It must fit within the Display pane of the Windows Welcome full-screen window. General Navigation You fully control navigation, but you must follow a few rules to ensure a positive end-user Windows Welcome experience. Include a Back button and a Next button on each page of the ISP offer except the last page, and include Back and Finish buttons on the last page. Use standard hyperlinks for navigation from page to page. The Back button on the first page and the Finish button on the final ISP sign-up page are handled differently, as described in the following sections. Navigation on the First Page of the ISP Sign-up Server The first page of the ISP sign-up server must have a Back button in addition to a Next button. The Back button calls the Windows Welcome function window.external.ExecScriptFn( GoBack( ). This returns the ISP offer page from the cache. Navigation on the Last Page of the ISP Sign-up Server The last page of the ISP sign-up server must create an .ins file and then call the window.external.processINS(url) function to download and process the .ins file. After the .ins file downloads, Windows Welcome automatically disconnects from the ISP sign-up server. If you do not want to disconnect the end user automatically after the .ins file downloads and processes, you can add the entry Keep_Connection = Yes in the [Custom] section of the .ins file. To close the connection, use window.external.Disconnect. To end ISP sign-up, the Finish button on the last page of the ISP sign-up server calls the Windows Welcome function window.parent.GoNext. This ends the ISP sign-up phase and takes the end user to the final Windows Welcome settings. For information regarding error handling when connecting to the ISP or processing the .ins file, see Appendix Troubleshooting Windows Welcome Errors  in this document. Lastly, when the OEM has finished all aspects of coordinating the ISP sign-up offer with the ISPs, the OEM selects the OEM ISP sign-up offer when building the Oobeinfo.ini file using Setup Manager. Doing this adds the following value to the [Signup] section of the Oobeinfo.ini file: [Signup] ISPSignup = Offline If you developed a secondary ISP sign-up offer as well, place these files in the same folder. All file names must be unique because both the primary and secondary ISP sign-up offers reside in the same folder on the master installation. If a default Microsoft file is present with the same name, you can overwrite it with yours. Implementing the Desktop Registration Wizard The \Samples\Oobe folder of the Windows OPK CD includes a set of HTML files to help you implement the desktop Registration Wizard. To use these files, place them in the locations listed in this table. The Oobe folder noted in the table is located in %WINDIR%\System32. Table 2: Registration File Names and Locations Registration Wizard Page Description Destination Corresponding Full-Screen Page Corresponding Activation Wizard Page Rdeskerr.htm Registration error page \Oobe\Regsetup Adeskerr.htm Rdrdyreg.htm Dialing preparation page \Oobe\Regsetup Drdyoem.htm Adrdyreg.htm Regconn.htm Proxy configuration page \Oobe\Regsetup Actconn.htm Regdone.htm Finish page \Oobe\Regsetup Actdone.htm Reglan.htm Prompts user to choose LAN or modem connection \Oobe\Regsetup Actlan.htm Regrmnd.htm Registration start page \Oobe\Regsetup Regshell.htm Defines the frame and script functions for all pages \Oobe Msobshel.htm Actshell.htm Regstyl.css Defines the global style of all registration pages \Oobe\Regsetup Oobestyl.css Aregstyl1.css Roempriv.htm OEM Privacy Statement page \Oobe\Regsetup Oempriv.htm Rprvcyms.htm Microsoft Privacy Statement page \Oobe\Regsetup Prvcyms.htm Aprvcyms.htm Rregdial.htm Dialing progress page \Oobe\Regsetup Regdial.htm Aregdial.htm Rusrinfo.htm Registration form \Oobe\Regsetup Reg3.htm Ausrinfo.htm Additional code in Rusrinfo.htm and Regshell.htm enables OEMs to collect a user telephone number optionally. To find the additional code, compare the current versions of these files with the corresponding full-screen or activation pages that were released with Windows XP. To collect a user telephone number in full-screen Windows Welcome, add similar code to Reg3.htm and Msobshel.htm. To collect a user telephone number in an Activation Wizard page, add similar code to Ausrinfo.htm and Actshell.htm. Implementing Extended End-User Registration OEMs can set up one or two extended end-user registration pages. This registration is an optional part of the Microsoft Windows Welcome process. Windows Welcome uses a series of full-screen, HTML-based pages that offers the end user an easy and streamlined way of setting up a computer and connecting to the World Wide Web during first run. Extended End-User Registration Extended end-user registration is a part of the Windows Welcome experience. With it, you can collect information beyond the core registration data collected by Windows Welcome. The core registration page appears during Windows Welcome when the new computer dials out on a call hosted by Microsoft, connecting to a Microsoft server. This online registration page collects such basic data as first and last name, address, telephone number, and so on. When the end user clicks Next, Windows Welcome sends the core data to Microsoft, and then displays your extended end-user registration pages. These pages, which you create, prompt the end user for the additional information that you want to collect. These pages can reside either online or on the new computer. When the end user clicks Next on the last page of your extended end-user registration pages, a script within that last page retrieves the core registration data from the new computer s registry. The script then appends that core data plus your extended end-user data into a URL in name/value pairs. The destination of this URL is your registration server. When the data arrives, your registration server parses the data and processes it into your database. Table 3: Where extended end-user registration fits in a typical Windows Welcome process Section Connection Notes Welcome Offline Tutorial: Mouse or OEM Offline Optional Regional settings and keyboard layout Offline Optional Time zone Offline Optional Offline Product key Offline Telephony (network settings) Offline Core end-user registration: Microsoft Offline Extended end-user registration: OEM Offline/online Optional Privacy statement Offline OEM ISP offers Offline Optional Connect to the Internet Offline Finish Offline When Windows Welcome dials out and contacts Microsoft, it accesses the Microsoft Global Network. Because this is a private network, it limits the Web addresses that can be visited and the users who can access them. To make it possible for the Microsoft Global Network to be used as a resource for collecting registration data from the end user, Microsoft has developed a system for granting limited access. You obtain this access by sending e-mail to Microsoft providing a specific set of information, which is discussed later. When Microsoft receives your e-mail, the IP address of your registration server is added to the access list on the private Microsoft Global Network used for Windows Welcome. Microsoft then assigns to you a custom dial-up networking (DUN) user name and sends it to you in an e-mail within five business days of receiving your e-mail. You then add the DUN user name to Oobeinfo.ini. During first run, when Windows Welcome dials out, it consults Oobeinfo.ini to determine your DUN user name, granting the new computer access to only that portion of the Microsoft Global Network necessary for transmitting the core registration page, and handling the transfer of extended end-user registration data to your registration server. For example, an end user connecting with an OEM1 user name will receive access to the OEM1 registration IP address but not the OEM2 registration IP address. Anyone connecting with the default Windows XP DUN user name will have access to only Microsoft sites through the Microsoft Global Network. Important Do not change the DUN user name value to any value that was not assigned by Microsoft. Changing the value will prevent your customers from connecting to the online portion of Windows Welcome and will prevent Windows Welcome from completing properly. Providing Extended End-User Registration To make it possible for you to receive end-user registration data, you must do the following: Obtain a DUN user name from Microsoft. Obtain a digital certificate for your registration server. Determine what kind of end-user information that you want. Prepare your extended end-user registration page or pages (one or two pages are permitted). Modify Oobeinfo.ini to enable end-user registration. Test end-user registration. Each of these topics is covered in detail in the following sections. Obtaining a DUN User Name from Microsoft The following procedure describes the steps to take to receive a DUN user name from Microsoft. To obtain a DUN user name from Microsoft Send an e-mail request to regpost@microsoft.com. The e-mail must contain the following information: OEM company name. The following information for a primary contact: name, address, telephone number, fax number, and e-mail address. The following information for a secondary contact: name, address, telephone number, fax number, and e-mail address. Internet IP address of your OEM registration server. Name of your Microsoft Account Manager. Name of your Microsoft Pre-sales Engineer. When Microsoft receives your e-mail, your IP address is added to the access list on the private Microsoft Global Network used for Windows Welcome. Microsoft then assigns you a custom DUN user name and sends it to you in e-mail within five business days of receiving your e-mail. Information regarding how your DUN user name interfaces with your registration server will also be sent to you. Windows Welcome processes this user name during first run. Obtaining a Digital Certificate for Your Registration Server You must obtain a digital certificate for your registration server to facilitate secure communication between end users  computers and your registration server, protecting the registration data. A server certificate identifies servers that participate in secure communications with other computers by using communication protocols such as Secure Sockets Layer (SSL). In this case, a certificate enables your registration server to verify its identity to an end user by using Windows Welcome. You can obtain a server certificate from a certificate authority, such as VeriSign (http://www.verisign.com). Determining What Kind of End-User Information That You Want Your own business objectives will determine the kind of extended end-user information that you want to collect. Preparing Your Extended End-User Registration Pages This section describes how to prepare your extended end-user registration page or pages. Requirements End-user registration pages have the following requirements: The pages are written in HTML. All function calls must be in Microsoft JScript. The pages do not launch any programs or applications. For every page that calls an external navigation function such as GoBack() or GoNext(), make sure that the onload handler calls the following function:  window.external.ExecScriptFn("InitFrameRef();"); This sets up a state within the JScript navigation code that enables the page to make the calls documented in the next step. If you do not include this function, the other external navigation functions will not operate. The Back button on the first page and the Next or Finish button on the last page needs to use the Windows Welcome calls that take the process to the previous or next portion of Windows Welcome, respectively. As noted in the Windows OPK User s Guide, OEMs must provide the end user with the option not to provide personal information during extended registration. Any customer who does not want to provide data in the extended end-user registration screens should have the opportunity to decline, and this option should be made clear to the user. Required Tools For preparing your end-user registration page(s), you can use a text editor, such as Notepad, or an HTML editor. Privacy Statement If your company collects the core registration data and/or any additional personal information on an extended end-user registration page, then you must provide a privacy statement as part of your end-user registration.  Your privacy statement must include a description of: What information is being collected   this includes making it clear to users that your company may, with the user s consent, collect the core registration data, in addition to the data requested on the extended end-user registration pages How your company will use the information collected Whether users have control over how the collected information is used (e.g. for marketing purposes) and whether users can decline any or all such uses Whether and how user can access, amend, or update the collected information  How the information will be kept secure Contact information that the customer can use to contact your company with any questions or concerns regarding the collection and use of their personal information Place the text for your privacy statement in the file Oempriv.htm, located in %WINDIR%\System32\Oobe\setup. Note that many countries require you to provide a privacy statement. On your end-user registration page(s), include a link to the privacy statement file. See the sample privacy statement earlier in this document. Desktop Registration Privacy Statement If you will use desktop registration and reminders, your OEM privacy statement must also be added to Roempriv.htm. This is the desktop registration equivalent to Oempriv.htm mentioned in the previous section. A sample Roempriv.htm is located on the Windows OPK CD in the \Samples\Oobe folder. After you have added your privacy statement, place the file in %WINDIR%\System32\Oobe\Regsetup. Desktop registration is discussed later in the Extended End-User Registration Pages for use in the Desktop Registration section. Creating Your Extended End-User Registration Pages The following procedure explains how to create extended end-user registration pages To create extended end-user registration pages First page: For every page that calls an external navigation function such as GoBack() or GoNext(), make sure the onload handler calls the following function: window.external.ExecScriptFn("InitFrameRef();"); This sets up a state within the JScript navigation code that enables you to make the calls documented in the next step. Make sure that the onclick handler for the Back button on the first page calls the following function: window.external.ExecScriptFn("GoBack();"); This function enables Windows Welcome to navigate the end user to the correct previous screen in the Windows Welcome experience. Without this call, the end user will be unable to return to any previous screen. The following is an example of how this might look on your page: <SCRIPT> function MyBackFunction()     //Do something meaningful     //The final call must be      window.external.ExecScriptFn("GoBack();"); </SCRIPT> <BUTTON onclick="MyBackFunction();">Back Button</BUTTON> Use a standard hyperlink to navigate to your next registration page. Save the initial file as Oemadd.htm. You may want to name any succeeding files similarly, as part of a series (for example, Oemadd2.htm, Oemadd3.htm, and so on). Last page: Before calling the GoNext() function, create a script on the last page that gathers the following: Your registration server URL, which resides in Oobeinfo.ini. The script gets this data by calling the get_RegPostURL() function. The core end-user registration data, which resides in the registry of the new computer. The script gets this data by calling the various get_ functions of the UserInfo object. Note: This information can be collected only if the user has consented to your company collecting it. The extended end-user registration data, which the pages have just collected. The data needs to be organized into name/value pairs. Using secure http (https) helps to ensure secure transactions. Posting uses name/value pairs attached to the end of the URL. The following is a sample excerpt of the resulting https request: https://register.microsoft.com/register.asp?FirstName=John&LastName= Smith& Before the end user continues with Windows Welcome, the Microsoft registration server returns a result code: 1 = The post was successful. 0 = The post was not successful. Retry. Make sure that the onclick handler for the Next button on the last page calls the following function: window.external.ExecScriptFn("GoNext();"); This function enables Windows Welcome to navigate the end user to the correct next screen in the Windows Welcome experience. Without this call, the end user will be unable to move forward to the next screen. The following is an example of how this might look on your page: <SCRIPT> function MyNextFunction()     //Do something meaningful     //The final call must be      window.external.ExecScriptFn("GoNext();"); </SCRIPT> <BUTTON onclick="MyNextFunction();">Next Button</BUTTON> If you modify the script, use caution. Place the files on the master installation at the following location: %WINDIR%\System32\Oobe\Html\Oemreg\ Extended End-User Registration Pages for use in Desktop Registration If you use Windows Welcome desktop registration along with registration reminders, follow the steps outlined in the previous section, with the exception that the extended desktop registration pages should be called Roemadd.htm instead of Oemadd.htm. The Roemadd files must be placed in the same directory as Oemadd.htm: %WINDIR%\System32\Oobe\Html\Oemreg\ Modifying Oobeinfo.ini to Enable End-User Registration By default, the extended end-user registration described in this document is not available in the Windows OPK. To use end-user registration, you must add the following sections and entries in the Oobeinfo.ini file. These entries create registry settings. In the [DUN] section, set up a unique dial-up networking (DUN) user name. This name was assigned to you by Microsoft. The entries are as follows: [OEMRegistrationPage] OEMAddRegPage=1 [DUN] UserName=DialUpNetworkingUserName Where: 1 indicates that extended end-user registration is enabled in Windows Welcome. DialUpNetworkingUserName indicates the DUN user name assigned to you by Microsoft. Important Do not change the DUN user name value that was assigned by Microsoft. Changing the value will prevent your customers from connecting to the online portion of Windows Welcome and will prevent Windows Welcome from completing properly. Testing End-User Registration To ensure that end-user registration is set up correctly, it is recommended that you test registration end-to-end by using a live telephone connection and a modem during the course of a complete Windows Welcome audit. Afterward, check that your test end-user registration data posted successfully to your registration server. When entering test registration user information, use your assigned DUN username@oobebeta.com in the e-mail address field (for example, PatC@oobebeta.com). OEM EULA You may include an OEM-specific End-User License Agreement (EULA), in addition to the Microsoft EULA. The Windows XP EULA appears first.  The OEM EULA clearly states that it applies only to the additional OEM or third-party software or hardware provided by the OEM, and that it does not apply to the Windows software.  The end user must be able to accept or reject each EULA separately.  Nothing in the OEM EULA supersedes or conflicts with the Windows XP EULA.  The OEM EULA must be only text. The EULA cannot automatically start any software or provide links to any other content.  The OEM agrees to indemnify and defend the Microsoft Corporation from and against any and all actions, causes of action, damages, or costs and expenses, including reasonable attorneys' fees, for any claims that arise from the inclusion of the OEM EULA. To add an OEM EULA, modify the Neweula.htm file, located in %WINDIR%\System32\Oobe\Setup. Animated Screen Characters in Windows Welcome Windows Welcome includes a Microsoft Agent character to assist novice users through the one-time process of configuring the new computer. The Qmark agent character is present in all of the pages in the default Windows Welcome experience. To ensure the uniformity of Windows Welcome, Microsoft encourages computer manufacturers to add this Microsoft Agent character to any custom pages that they add to Windows Welcome. There are many advantages to using the Qmark character. The visual design integrates with Help and Support Center and is not offensive to international customers. The Qmark character is exclusively for use in Windows Welcome: It is not available for use in other Windows programs that use Microsoft Agent, and you may not use other Windows-installed Microsoft Agent characters in Windows Welcome. If you want to add your own Agent character, see the requirements and guidelines at the end of this topic. The Agent files for Windows Welcome are located in the \Oobe directory on the end user's computer. The animated screen character appears only in full-screen Windows Welcome. Requirements and Guidelines for Adding Your Own Custom Agent Character OEMs may use a different Agent character with prior approval from Microsoft. Submit requests to oobebeta@microsoft.com. Approval is based on the following criteria. The character must: Use the animations that already exist in Windows Welcome. Closely match the look and feel of the new visual style of the Windows shell. Add to the user experience, not subtract. OEMs may not delete existing Agent scripts, unless the scripts are obviously irrelevant. Follow the existing menu model. Identify itself as a custom character. Any trade names, trademarks, logos, or brands used in connection with the Agent shall be limited to those under which the PC model is manufactured and marketed. For example, "I'm charactername from OEM name." Adding the Qmark Character to Your Pages The best way to understand how to enable the Qmark character in your customized pages is to look at how it is enabled in existing pages. You enable the character in the Windows Welcome .htm file for your page, and add the Agent content for that page in Agtscrpt.js. For example, Microsoft Agent is enabled in the body style tag with the onload and onunload parameters in Reg1.htm, one of the default registration pages: <body style="background-Color: transparent; background-repeat: no-repeat;"       tabindex=-1       onload="window.parent.Reg1_LoadMe(); window.parent.Agent_Activate('Reg1');"       onunload="window.parent.Agent_Deactivate();"> In addition, you must add the corresponding content for the page in Agtscrpt.js. For example, you can find the entries for Reg1.htm in Agtscrpt.js, starting at: function Agent_Reg1AddCommands() Customizing the Support Telephone Number Used in Agent The Qmark agent character includes a default menu item for every authored Windows Welcome page called "Tell me where to get assistance." You can customize the character s response to this entry by adding or setting the value of SupportPhoneNumber in the [Options] section of Oobeinfo.ini. For example: [Options] SupportPhoneNumber=1234567 This causes the character to speak "1234567." However, if the character speaks this number using a text-to-speech (TTS) engine, the way the number is pronounced may be different. To get the number pronounced more appropriately, you may need to format the number by using the Microsoft Agent speech output tags. For example, most engines support the \Ctx tag, which generally causes numbers to be recognized as a telephone number when set using the Address parameter. For example: SupportPhoneNumber = \Ctx="Address"\ 1 800 555 0100 This causes most engines to recognize the numbers as a telephone number and include the words "area code" automatically. Note that the \Ctx= "Address"\ tag only goes to the TTS engine and does not appear in the character s word balloon. However, because support for this tag may vary with a specific speech engine, it may be safer to use the \Map tag. This tag enables you to specify text to be spoken by the engine independently of what appears in the character s word balloon. For example: SupportPhoneNumber = \Map= "one eight hundred five five five zero one zero zero" = "1 800 555 0100" This sends the first parameter to the TTS engine and the second to the character s word balloon. You can also add text to the beginning or end of the number provided. For example: SupportPhoneNumber=For assistance, call \Map= "one eight hundred five five five zero one zero zero" = "1 800 555 0100". Other Agent speech output tags can also be used. For more information about these tags, see the Microsoft Agent Web site at: http://msdn.microsoft.com/workshop/imedia/agent/default.asp Incorporating Custom Pages into Windows Welcome Windows Welcome consists of a number of discrete stages, such as the End-User License Agreement (EULA), the hardware check, and ISP sign-up. Each of these sections can consist of multiple pages. When you add or remove pages in Windows Welcome, it affects how the user navigates back and forth through the sections and pages. If you do not modify the navigation and checkpoint coding, the Back and Next buttons may not work correctly, or may not work at all. An OEM s custom ISP sign-up section must integrate seamlessly with the other pages in Windows Welcome. Navigation Architecture of Windows Welcome The first time a user runs Windows on a new computer, Windows Welcome displays a series of HTML pages located on the hard disk. Each on-disk URL (or set of URLs) is associated with a numerical identifier called a checkpoint. The following table lists the checkpoints and the files associated with each checkpoint. Table 4: Checkpoints and Associated Files Checkpoint CKPT_ANIMATION Images\Intro.avi CKPT_HWCHK See note on this file. CKPT_WELCOME Setup\Welcome.htm CKPT_MOUSETUT1 Html\Mouse\Mouse.htm CKPT_IMETUTORIAL Html\Ime\Imetut1.htm CKPT_OEMHW Html\Oemhw\Oemhw.htm CKPT_REGION_KEYBD Setup\Keybd.htm CKPT_TIMEZONE Setup\Timezone.htm CKPT_EULA Setup\Neweula.htm CKPT_EULA_DECLINE Setup\Badeula.htm CKPT_PRODUCTKEY Setup\Prodkey.htm CKPT_BADPRODUCTKEY Setup\Badpkey.htm CKPT_COMPNAME Setup\Compname.htm CKPT_SECPASS Setup\Security.htm CKPT_JNDOMAIN Setup\Jndomain.htm CKPT_ICSCHOICE Setup\Ics.htm CKPT_SCONNECT Html\Sconnect\Sconnect.htm CKPT_HOMENETWIZPROMPT Setup\Hnwprmpt.htm CKPT_DSLMAIN Html\Dslmain\Dslmain.htm CKPT_DSLPPPOE Html\Dslmain\Dsl_a.htm CKPT_DSLBROADBAND Html\Dslmain\Dsl_b.htm CKPT_CONGRATS Html\Dslmain\Dsllast.htm CKPT_ACTIVATION Setup\Activate.htm CKPT_REGISTER1 Setup\Reg1.htm CKPT_REGISTER3 Setup\Reg3.htm CKPT_ACT_MSG Setup\Acterror.htm CKPT_ICONN Setup\Iconn.htm CKPT_REGDIAL Setup\Drdyoem.htm CKPT_ISPSIGNUP Setup\Isp.htm CKPT_MIGLIST Setup\Miglist.htm CKPT_ISPDIAL Setup\Drdyisp.htm CKPT_REFDIAL Setup\Drdyref.htm CKPT_MIGDIAL Setup\Drdymig.htm CKPT_ISPTYPE Html\Isptype\Isptype.htm CKPT_ICONNECT Html\Iconnect\Iconnect.htm CKPT_OEMISP Html\Ispsgnup\Ispsgnup.htm CKPT_IDENTITIES2 Setup\Ident2.htm CKPT_DONE Setup\Fini.htm For CKPT_HWCHK, the associated file is dependent on whether you check for a USB keyboard, mouse, both, or none at all. The file can be Setup\Nousbkb.htm, Setup\Nousbkbd.htm, or Setup\Nousbms.htm. The following code assigns the checkpoints. When Microsoft adds or removes a checkpoint, then it changes the index number for all checkpoints that follow. var curCKPT                 = 1; var CKPT_ANIMATION          = curCKPT++; var CKPT_HWCHK              = curCKPT++; var CKPT_WELCOME            = curCKPT++; var CKPT_MOUSETUT1          = curCKPT++; var CKPT_IMETUTORIAL        = curCKPT++; var CKPT_OEMHW              = curCKPT++; var CKPT_REGION_KEYBD       = curCKPT++; var CKPT_REGKB_COMMIT       = curCKPT++; var CKPT_TIMEZONE           = curCKPT++; var CKPT_EULA               = curCKPT++; var CKPT_EULA_DECLINE       = curCKPT++; var CKPT_PRODUCTKEY         = curCKPT++; var CKPT_BADPRODUCTKEY      = curCKPT++; var CKPT_COMPNAME           = curCKPT++; var CKPT_SECPASS            = curCKPT++; var CKPT_JNDOMAIN           = curCKPT++; var CKPT_ICSCHOICE          = curCKPT++; var CKPT_HOMENETWIZPROMPT   = curCKPT++; var CKPT_DSLMAIN            = curCKPT++; var CKPT_DSLPPPOE           = curCKPT++; var CKPT_DSLBROADBAND       = curCKPT++; var CKPT_CONGRATS           = curCKPT++; var CKPT_ACTIVATION         = curCKPT++; var CKPT_REGISTER1          = curCKPT++; var CKPT_REGISTER3          = curCKPT++; var CKPT_ACT_MSG            = curCKPT++; var CKPT_ICONN              = curCKPT++; var CKPT_ISPSIGNUP          = curCKPT++; var CKPT_MIGLIST            = curCKPT++; var CKPT_ISPDIAL            = curCKPT++; var CKPT_REFDIAL            = curCKPT++; var CKPT_MIGDIAL            = curCKPT++; var CKPT_REGDIAL            = curCKPT++; var CKPT_ISPTYPE            = curCKPT++; var CKPT_ICONNECT           = curCKPT++; var CKPT_SCONNECT           = curCKPT++; var CKPT_OEMISP             = curCKPT++; var CKPT_IDENTITIES2        = curCKPT++; var CKPT_DONE               = curCKPT++; var CKPT_MAX                = curCKPT; The Checkpoint Stack This navigation architecture, written in JScript, resides in the %WINDIR%\System32\Oobe\Msobshel.htm file. It consists of the checkpoint stack and current checkpoint. The checkpoint stack identifies the on-disk URL that Windows Welcome uses when the user clicks the Back button. When a user completes a given checkpoint, Windows Welcome adds an item to the checkpoint stack. When the user clicks the Back button, the GoBack JScript function removes the checkpoint for that page off the stack, and navigates to its associated page. For example, for the flow of Animation->Hardware Check->Welcome->EULA page, when the user reaches the page for the End-User License Agreement (EULA), the stack looks like this (zero is the bottom of the stack): The mouse tutorial is turned off by default. The stack numbers start at zero and increase. These stack numbers become the names of the registry keys under HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Setup\OOBE\CKPT (checkpoint). In addition, Windows Welcome writes the stack number for the top of the stack to the following registry key: HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Setup\OOBE\CKPT\TopOfStack. In the previous example, TopOfStack is 3. To find out which checkpoint indexes are associated with which URLs, use the InitCKPT function in the Msobshel.htm file. InitCKPT loads the checkpoint table, which associates each checkpoint index with its URL. It also initializes the current checkpoint g_CurrentCKPT from the top of the stack, if the stack exists in the registry. See the next section for more details. Notes If the computer restarts for whatever reason during Windows Welcome, the user returns to the last major page, which is always on the top of the stack.  The Window.history method is inadequate to keep track of navigation because, at various points within Windows Welcome, the user does not return to the previously viewed page when clicking the Back button. Instead, the user returns to the first page of that particular sequence of pages. In addition, some pages drop out of the navigation flow after the user completes the information requested by that page. The Current Checkpoint The current checkpoint (the JScript variable g_CurrentCKPT) is set whenever Windows Welcome navigates to a new page. This assignment happens when a checkpoint is placed on or removed from the stack. Not all checkpoints get placed on the stack, either because not all pages are important enough to view after a restart, or it is not appropriate to place a page into the normal Back/Next navigation flow of Windows Welcome. For instance, error pages are not placed on the stack. In these cases, g_CurrentCKPT is still set during navigation, eliminating the previous checkpoint, which may or may not have been the top of the checkpoint stack. Code for Navigating Within a Checkpoint Navigating within a checkpoint can also be viewed as navigating within a section of the Windows Welcome experience, such as navigating from one page to another within the IME tutorial or a custom hardware tutorial. For such navigation, you can use standard HTML hyperlink navigation tags. Code for Navigating from One Checkpoint to Another Similarly, navigating from one checkpoint to another can also be viewed as navigating to another section of the Windows Welcome experience, such as going from the Welcome page to the EULA page. The functions are as follows: InitFrameRef Initializes the state within the navigation code in Msobshel.htm that is necessary before calling the following navigation functions. If this function is not included, the other navigation functions do not operate. GoNext, GoBack, and GoCancel These three related functions work in conjunction with GoNavigate, and in general contain the functionality for jumping to a different page. For example, calling GoNext from the TAPI page saves the TAPI settings and then calls GoNavigate to get to the Connect page. GoNavigate Contains the checks that are required before navigating to a different page. For instance, when Windows Welcome uses GoNavigate to navigate to the End-User License Agreement (EULA) page, Windows Welcome checks if the user has already accepted the EULA, then Windows Welcome automatically goes to the Product Key page. Windows Welcome uses JScript to handle switching from one checkpoint (and its associated URL) to another. Intra-checkpoint (within a checkpoint) navigation is handled by standard HTML hyperlinks. Code for Checkpoint Stack Manipulation The code used to manipulate the checkpoint stack is: InitCKPT Loads the checkpoint table, which associates each checkpoint index with its URL. It also initializes the current checkpoint g_CurrentCKPT from the top of the stack, if the stack exists in the registry. PushCKPT Places a checkpoint onto the stack, changes the registry, and sets the value for the current checkpoint, g_CurrentCKPT. PopCKPT Removes a checkpoint from the stack, changes the registry, and sets the value for the current checkpoint, g_CurrentCKPT. Testing and Debugging Windows Welcome The information in the next section is useful for testing Windows Welcome. You can test Windows Welcome in debug mode, reset it so that it runs in its first-run state, check telephone settings, and manually start the ISP and registration portions of Windows Welcome. Skipping Windows Welcome You can skip Windows Welcome, except for the EULA, and then go directly to the desktop by pressing the key combination CTRL+SHIFT+F3 when Windows Welcome starts. This enables you to audit the computer, or if you are a value added reseller, to do additional configuration on the computer before shipping it to the customer. Testing and Resetting User Accounts Important If there is an existing user account named "Owner," Windows Welcome removes it. If you create additional user accounts with the Windows XP User Accounts in Control Panel during your testing, Sysprep and Windows Welcome do not remove these accounts when you reseal the computer. Before resealing the computer, remove any additional test User Accounts that you created by using the Windows XP User Accounts in Control Panel. You can also add or remove user accounts by clicking the Start button, right-clicking My Computer, clicking Properties, clicking the Advanced tab, and then clicking Settings in the User Profiles section. Resetting Windows Welcome To reset Windows Welcome for testing, run Sysprep -reseal on the installation, and then use a third-party tool to create an image of the installation. Every time you wish to test Windows Welcome, reinstall that base image on the destination computer, place an updated Oobeinfo.ini file on that destination computer, and then start the computer. Preconfiguring Telephony Settings for Testing You can preconfigure Telephony API (TAPI) settings for testing purposes. If you do this, remember to remove the telephony settings before shipping the computer. To preconfigure telephony settings in Windows Welcome, include the following entries in the [Options] section in Oobeinfo.ini: [Options] TonePulse = [1 for tone, 0 for pulse] OutsideLine = [string, number dialed to reach an outside line] DisableCallWaiting = [string, number dialed to turn off call waiting] AreaCode = [string, area code] Starting Reminders Manually You can start both the registration reminder and the ISP reminder manually by running Msoobe.exe with a flag. To start the registration reminder manually On the computer that you are testing, click the Start button, and then click Run. Type: [drive]:\%WINDIR%\system32\oobe\msoobe.exe /r, and then click OK. To start the ISP sign-up reminder manually On the computer that you are testing, click the Start button, and then click Run. Type: [drive]:\%WINDIR%\system32\oobe\msoobe.exe /xicw, and then click OK. Appendix A: Configuring an Internet Access Account at the Factory If an OEM provides build-to-order computers, it can offer Internet access to its customers when they order their computer. If an end user selects a specific ISP before or during the purchase process, the OEM can preconfigure that Internet access account. An end user can then use that specific account to access the Internet from the Windows desktop without any further sign-up or configuration. To preconfigure the user's Internet account, collect end-user information when the order is placed, such as their name and billing information. Use that information to determine an e-mail name and POP address, and then activate this unique account. Configure the settings for the new Internet account when the computer is built in the factory. Ultimately, this is the best Internet sign-up experience for your users   they turn on the computer and their Internet account is already active. Important If you collect end-user information through a Web site, the Web page must also contain a link to your company's privacy statement. For more information, see  Privacy Policy,  earlier in this document. If you populate your users' passwords for their ISP accounts, you must alert them to change their password the first time that they use the Internet. OEM/ISP Collaboration to Create Custom .ins Files Internet account information is stored in an Internet settings (.ins) file. The Internet settings file is used during Windows Welcome, or the first time users access Internet Explorer or Outlook Express, to open an Internet account. To place a custom .ins file on a build-to-order computer, the OEM must collaborate with the partner ISP(s) to create a process for generating .ins files and creating ISP accounts. For example, this process might involve a pool of accounts that the ISP allocates to the OEM, complete with unique Internet settings files. The OEM might connect to the ISP sign-up server, passing on the end-user information needed to create the .ins file, and then receiving a unique file from the ISP sign-up server for each user. Creating the Internet Settings File Ispcnfg.ins The OEM or the partner ISP must create a unique .ins file that contains the appropriate information for the specific Internet account. Name the file Ispcnfg.ins. The .ins file format is an extension of the Windows dial-up networking (.dun) file format. This format conforms to standard Windows .ini file conventions. Windows .ini files have the following characteristics: An .ini file is divided into sections. Section headers are enclosed in square brackets. For example, [Entry] is the Entry section header. Each entry is a line in the form EntryName = EntryValue. Each section can contain multiple entries. Sections are delimited by one blank line. The order of sections is not important. A particular section can be placed anywhere in the .ini file. Comments in an .ini file begin with a semicolon (;). For more information about the .ins file format, see the Microsoft Windows XP Preinstallation Reference (Ref.chm), available in Deploy.cab, located in the \Support\Tools folder on the Windows XP product CD. Processing Ispcnfg.ins Successfully To configure a computer to use this particular Internet account, include this unique Ispcnfg.ins in the %SYSTEMDRIVE%\Windows\System32\Oobe\Html\Ispsgnup\ folder on the build-to-order computer. During the first-run experience, Windows Welcome looks for the .ins file. If it is found, Windows Welcome configures the computer for Internet access automatically, according to the information provided in the Ispcnfg.ins file. The Internet Welcome page, Ispsgnup.htm, appears after Windows Welcome so that users know that the Internet service is fully configured and ready to use. Windows Welcome then skips the ISP sign-up user interface screens because the appropriate, completed status items for ISP sign-up have already been set. If Windows Welcome does not locate Ispcnfg.ins, it handles ISP sign-up based on the value of the Signup entry in the [Signup] section of the Oobeinfo.ini file. The Ispsgnup.htm file remains on the computer after the end user completes Windows Welcome. For security reasons, encourage the end user to change the preassigned password the first time they log on to their ISP. Customizing the Internet Welcome Page You may customize the title and text of Ispsgnup.htm based on your customers' needs. Place the file in the following folder: %SYSTEMDRIVE%\Windows\System32\Oobe\Html\Ispsgnup\. The page size should be: 800 x 600 pixels minimum 1024 x 768 pixels maximum If you prefer to process the .ins file without displaying a welcome message to users, add the following setting to Oobeinfo.ini: [Options] NoIspPreconfig = 1 Preparing for Internet Account Failures Both the OEM and the ISP should thoroughly test the Ispcnfg.ins file, to ensure that it is error-free. However, if an Internet account failure occurs during the first-run experience, Windows Welcome sets an .ins failure flag in the registry as follows: HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Internet Connection Wizard\INS Processing\ Windows Welcome also records the ISP name and support telephone number from the .ins file in the registry. The  Internet Connection Wizard completed  bit is not set. Windows Welcome then proceeds to the ISP sign-up, and a Windows Welcome error message appears. This error message informs the user that the factory-configured Internet account failed to operate, and asks them to call the ISP support telephone number. When the user clicks Next on the error message, the Internet sign-up phase of Windows Welcome ends. If users start Internet Explorer or Outlook Express after Windows Welcome finishes, an error message appears. After users click OK, the completed bit is set. If users start Internet Explorer or Outlook Express afterwards, the standard Internet Explorer or Outlook Express error message appears, stating that they cannot connect to the Internet. Appendix B: Enhanced Dialing Services for ISP Sign-up As an ISP, you may want to use enhanced dialing services not provided by dial-up networking. You can take advantage of enhanced dialing services by using Connection Manager, which is included in Windows If you want to use Connection Manager instead of dial-up networking, use one of these two solutions: Customize the .ins file to support a Connection Manager service profile. Place all Connection Manager settings in the Internet Explorer .ins file. Customizing the .ins File to Support a Connection Manager Service Profile The easiest way to use enhanced dialing services involves creating a Connection Manager service profile that you can distribute, and then incorporating support for that profile into the .ins file. This profile can be downloaded to the end user s computer just before the .ins file processing, by using the getFile function. After the service profile is saved to the appropriate location, you can use the ProcessINS function to download an .ins file. The following procedure describes the creation of the Connection Manager service profile, and the modifications that must be made to the .ins file to support the service profile. To customize the .ins file to support a Connection Manager service profile Use the Connection Manager Administration Kit (CMAK) that is distributed with Windows 2000 Server to recreate a Connection Manager profile that you can distribute. In the Connection Manager Customization dialog box in the Customizing Setup section of the Internet Explorer 6 Customization Wizard, include the service profile for the installation package. In the [Entry] section of the .ins file, specify a service name that is identical to the ServiceName entry specified in the [Connection Manager] section of the Connection Manager .cms file that was generated when you created the service profile. In the [Custom Dialer] section of the .ins file, type the following two entries, which enables Connection Manager to be used as the default dialer for Internet Explorer (although users must still set the default on their computers): Auto_Dial_DLL = cmdial32.dll Auto_Dial_Function = InetDialHandler@16 In the [Custom] section of the .ins file, type the following entries: Run = icwconn2.exe Keep_Connection = yes In the [ClientSetup] section of the .ins file, specify the following two entries: Done_Message = End of Signup Message Explore_Command = URL/Window to Launch for Initial CM Connection If you do not specify both entries, the end user might receive error messages. In the .ins file, to set the user data, create Connection Manager [Entry], [User], [Phone], and [Backup Phone] sections, and specify the following entries for each section: [Entry] Entry_Name = ServiceProfileServiceName [User] Name = UserName Password = UserPassword   ;(in plain text) Tunnel_Domain = LogonDomain   ;(for logon dialog box, if appropriate) Tunnel_Name = UserName   ;(for VPN, if appropriate) Tunnel_Password = UserPassword   ;(in plain text, for VPN, if appropriate) UserNamePrefix = RealmNameToBePrefixedToUserName UserNameSuffix = RealmNameToBeSuffixedToUserName [Phone] Phone_Number = PrimaryAccessNumber Dial_As_Is = Yes | No Country_ID = TAPICodeForCountry/Region   ;(use only if Dial_As_Is Area_Code = AreaCodeAppendedToNumber   ;(use only if Dial_As_Is [Backup Phone] Phone_Number = BackupAccessNumber Dial_As_Is = Yes | No Country_ID = TapiCodeForCountry/Region   ;(use only if Dial_As_Is Area_Code = AreaCodeAppendedToNumber   ;(use only if Dial_As_Is For more information about editing the .cms file for Connection Manager, see CMAK Help. For more information about editing the .ins file for Internet Explorer, see IEAK Help. Placing All Connection Manager Settings in the Internet Explorer .ins File If you do not want to download a Connection Manager profile during ISP sign-up, Windows Welcome does support incorporation of all Connection Manager service-profile information in the .ins file, which Windows Welcome then uses to create the service profile and install it on the end user s computer. After the initial Connection Manager service profile is installed, the end user can use it to connect and obtain another service profile (a full-service profile that includes all required attached files). To provide this support, create the initial Connection Manager service profile by using the CMAK, and then copy the information from the service-profile files directly into the appropriate sections in the .ins file by using the following procedure. The CMAK is available in Windows Server, Windows Administration Pack, and from other sources. When Windows Welcome downloads the .ins file, it recognizes information in these sections that belong to the .cmp, .cms, .pbk, .pbr, and .inf files normally used in a Connection Manager service profile, and uses them to create the appropriate service-profile files. Do not follow these steps if the end user already has the service profile. To update an existing service profile, see Step 1 of the procedure  To customize the .ins file to support a Connection Manager service profile  in this document. To download an initial Connection Manager service profile using the .ins file Use the latest version of the CMAK to create a Connection Manager service-profile (.cmp) file and, if appropriate, use advanced customization techniques to customize it further. Test the service profile on all supported platforms. In the Internet Explorer .ins file, create a [Connection Manager CMP] section, and then copy the information from the .cmp file (created in Step 1) into this section. Change all section titles from the .cmp file so that, instead of being enclosed with square brackets, they are enclosed with braces (curly brackets). For example, change [Profile Format] to {Profile Format}. The braces indicate that they are subsections, not sections, of the .ins file. For example: [Connection Manager CMP] {Profile Format} {Connection Manager} The [Connection Manager CMP] section contains user-configurable data such as the user name, domain, password, telephone numbers, and so on. Specify the appropriate entries in this section in order to populate a profile with this data. In the .ins file, create a [Connection Manager CMS 0] section, specify the name of the .cms file instead of the placeholder (ServiceProfileFileName), and then copy the information from the .cms file into this section. Remember to change the brackets in the .cms file to braces, as in the previous step. For example: [Connection Manager CMS 0] CMSFile = ServiceProfileFileName Contents from this .cms file If you have merged service profiles, you must create a section for the .cms file of each merged service profile. Specify the section name [Connection Manager CMS 1] for the first merged service profile, the name [Connection Manager CMS 2] for the second merged profile, and so on. In the .ins file, create a [Connection Manager PBK 0] section, specify the name of the .pbk file instead of the placeholder (PhoneBookFileName), and then copy the information from the .pbk file into this section. Remember to change the brackets in the .pbk file to braces, as covered earlier. For example: [Connection Manager PBK 0] PbkName = PhoneBookFileName Contents from this .pbk file If you have merged service profiles that contain telephone books, you must create a section for each additional telephone book (.pbk) file. Specify a section name of [Connection Manager PBK 1] for the first merged telephone book, [Connection Manager PBK 2] for the second one, and so on. In the .ins file, create a [Connection Manager PBR 0] section, specify the name of the .pbr file instead of the placeholder (PhoneBookRegionFileName), and then copy the information from the .pbr file into this section. Remember to change the brackets in the .pbr file to braces, as covered previously. For example:  [Connection Manager PBR 0] PbrName = PhoneBookRegionFileName Contents from this .pbr file If you have merged service profiles that contain telephone books, you must create a section for each additional telephone book region (.pbr) file. Specify the section name [Connection Manager PBR 1] for the first merged telephone book, the name [Connection Manager PBR 2] for the second one, and so on. Remember that each .pbk file must have a corresponding .pbr file of the same name. In the .ins file, create a [Connection Manager INF] section, and then copy the information from the .inf file into this section. Remember to change the brackets in the .inf file to braces, as discussed previously. For example:  [Connection Manager INF] Contents from the .inf file Before posting the .ins file to the ISP sign-up server, test it on all supported operating systems. Appendix C: Troubleshooting Windows Welcome Errors This appendix covers ISP connection errors and .ins file processing errors. In the event that an error occurs during Windows Welcome, the Internet settings file (.ins file) might fail. The following sections discuss ISP connection errors and .ins file processing errors. ISP Connection Errors When the browser window of Windows Welcome detects a server error or becomes disconnected, it automatically displays an error screen asking the end user to redial. If the end user chooses to redial, the .isp file redials and the user is connected to a backup URL specified in the same section of the .isp file: Reconnect = https://signup.isp_name.net/reconnect.asp? where: signup.isp_name.net/reconnect.asp is the URL of the ISP reconnect page. The question mark at the end of the Reconnect string is required. In order to navigate back to the page in the ISP sign-up offer immediately before the page that goes online, the Back button (or equivalent) must call the following function: window.external.ExecScriptFn("GoBack();"); When sending the end user to the reconnect URL, Windows Welcome appends data in name/value pairs to the end of the URL as it did on the first connection, but it appends one additional value that is not sent on the first connection: http://signup.fabrikam.com/reconnect.asp?LCID=1&TCID=1 (&ISPSignup=MSN&OfferCode=0&OS=1&BUILD=XXXX (&OEMName=FABRIKAM&Error=0 where Error is the type of error that occurred. A value of 0 indicates that a disconnect error occurred, and a value of 1 indicates that a server error occurred. Design the reconnect URL on the ISP sign-up server so that it displays an error message appropriate to the type of error that occurred. It should also check the registry to determine what items have been completed, and then redirect the end user to the appropriate sign-up server page when they click Next. You can track the number of times a server error has occurred by using the following function: HRESULT set_RegValue( hKey,BSTR bstruSubKey,BSTR bstrName,  VARIANT vValue The second time a server error occurs, Windows Welcome redirects the end user to the error message  The Internet service provider you selected is currently experiencing difficulties. The Reconnect URL can determine that this is the same user (by using cookies, for example), and navigate the user automatically to where he or she was when, or before, the error occurred. window.external.ProcessINS( local .ins File Processing Errors If the .ins file processing succeeds, this function returns the value TRUE. If it fails for any reason, it returns the value FALSE. The ISP sign-up server can provide the correct error handling by using script, based on this return value. For example: <SCRIPT> //Try to process the INS file if (window.external.ProcessINS("MyINSFile.INS") != true)    //An error has occurred, take the appropriate action   //Continue normally </SCRIPT> .isp File Processing Failures in an ISP Sign-up Offer If the OEM provides build-to-order computers to its customers, the OEM can offer Internet service to its customers when they order their computer. The OEM can collect end-user information, determine an e-mail name and POP, and turn on the account at order time. Then when the computer is built in the factory, the OEM can preconfigure it for this new Internet account. Ultimately, this is the best Internet sign-up experience that end users can have they turn on the computer and the Internet works. For more information about preconfiguring an Internet account on a build-to-order computer, see  Appendix A: Configuring an Internet Access Account at the Factory. If there is an error processing the .ins file, the end user is prompted with an error page. This error page informs the end user that the Internet connection was not properly configured, and it asks the end user to call his or her Internet service provider. The page is then populated with the ISP name and support telephone number from entries contained in the Ispcnfg.ins file. This information is also saved to the desktop as an HTML file for later reference. Because the OEM tests .ins files at the factory, Ispcnfg.ins errors should not occur on a computer that has a factory-set ISP sign-up offer. However, if an error occurs while Windows Welcome is processing the Ispcnfg.ins file, it sets an .ins failure flag in the registry: HKLM\SOFTWARE\Microsoft\Internet Connection Wizard\INS Processing Windows Welcome also records in the registry the ISP name and support telephone number from the .ins file. The  New Connection Wizard completed  bit is not set. Windows Welcome then proceeds to the user interface for ISP sign-up, and displays a Windows Welcome error page. This error page informs the end user that Internet preconfiguration failed and asks them to call the ISP support telephone number, which is derived from the just-set registry entry. When the end user clicks Next on the error page, the error page calls the  ISP Signup Complete  page that ends the ISP sign-up phase of Windows Welcome. If the user tries to start Internet Explorer or Outlook Express after Windows Welcome finishes, an existing New Connection Wizard error message is triggered that resembles the error message encountered during Windows Welcome. After the end user clicks OK in that error message, the  New Connection Wizard completed  bit is set. If the user starts Internet Explorer or Outlook Express afterwards, the standard Internet Explorer or Outlook Express error message appears, stating that they cannot connect to the Internet.  PAGE  Building Custom Windows Welcome Pages in Windows Building Custom Windows Welcome Pages in Microsoft Windows XP                          page  Building Custom Windows Welcome Pages in Microsoft Windows XP                         PAGE  Building Custom Windows Welcome Pages in Microsoft Windows XP                                  page  Microsoft Corporation. All rights reserved.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\opktools\docs\hd_recovery_solutions_for_sbs.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corporation Windows XP TitleWindows XP Microsoft Corporation Normal Microsoft Corporation Microsoft Word 10.0urn:schemas-microsoft-com:office:smarttags country-region urn:schemas-microsoft-com:office:smarttags place SbF0b jCg&jCg&Windows XP OEM Preinstallation Kit Design Notes Microsoft( Windows( Family of Operating Systems Hard Disk-based Recovery Solutions for System Builders This white paper describes a minimal hard disk-based recovery solution for system builders. This solution uses third-party imaging software, a recovery partition, a bootable floppy disk, and disk management during preinstallation using Diskpart.exe with Windows Preinstallation Environment (WinPE). The solution supports most versions of Windows, including Windows 98, Windows Millennium Edition, Windows 4.0, Windows 2000, and Windows Recovery solutions using removable media are not permitted under the terms of the Microsoft OEM System Builder Agreement. The information contained in this document represents the current view of Microsoft Corporation on the issues discussed as of the date of publication.  Because Microsoft must respond to changing market conditions, it should not be interpreted to be a commitment on the part of Microsoft, and Microsoft cannot guarantee the accuracy of any information presented after the date of publication. This White Paper is for informational purposes only.  MICROSOFT MAKES NO WARRANTIES, EXPRESS OR IMPLIED, AS TO THE INFORMATION IN THIS DOCUMENT. Complying with all applicable copyright laws is the responsibility of the user.  Without limiting the rights under copyright, no part of this document may be reproduced, stored in or introduced into a retrieval system, or transmitted in any form or by any means (electronic, mechanical, photocopying, recording, or otherwise), or for any purpose, without the express written permission of Microsoft Corporation. Microsoft may have patents, patent applications, trademarks, copyrights, or other intellectual property rights covering subject matter in this document.  Except as expressly provided in any written license agreement from Microsoft, the furnishing of this document does not give you any license to these patents, trademarks, copyrights, or other intellectual property. Unless otherwise noted, the example companies, organizations, products, domain names, e-mail addresses, logos, people, places and events depicted herein are fictitious, and no association with any real company, organization, product, domain name, email address, logo, person, place or event is intended or should be inferred.  2001 Microsoft Corporation.  All rights reserved. Microsoft, Win32, Windows, and Windows NT are either registered trademarks or trademarks of Microsoft Corporation in the United States or other countries or regions. The names of actual companies and products mentioned herein may be the trademarks of their respective owners. Contents Hard Disk-based Recovery Solution A Typical Recovery Scenario Requirements for the Hard Disk-based Recovery Solution Disk Partitions and the Recovery Solution Disk Management with Diskpart To Create the Minimal Hard Disk Recovery Solution Hard Disk-based Recovery Solution System builders have the option of offering their customers a hard disk-based recovery solution for most versions of Windows, including Windows 98, Windows Millennium Edition, Windows 4.0, Windows 2000, and Windows XP. Using this solution does not change any requirements of the Microsoft OEM System Builder Agreement, as detailed in the Windows OPK User s Guide. You must distribute the Microsoft-branded Windows CD-ROM media and manual with the computer and attach the Certificate of Authenticity (COA) label to the computer chassis. System builders are prohibited from creating recovery solutions that are stored on removable media, as this is a violation of the Microsoft OEM System Builder Agreement. The simplest and easiest solutions for you and your customers involve third-party disk imaging software, available from vendors such as PowerQuest, Symantec, or SoftThinks. The vendors supply scripting environments for you to create custom solutions that create an image of the version of Windows as you installed and customized it. You can then store that image on a hidden partition on the hard disk, which can be later accessed and restored to the primary partition if necessary. This white paper outlines the legal and technical requirements and basic steps of a minimal hard disk recovery solution using third-party imaging software. There are many possible solutions, depending upon the imaging software and your requirements. Working with the vendor that supplies the imaging software, you can build upon the basics presented here to best meet your customers  needs. Microsoft Licensing, Inc. does not endorse or recommend vendors that provide disk-imaging software. You are responsible for licensing this software from your vendor of choice. A Typical Recovery Scenario The computer s main operating system partition fails. End user inserts the recovery floppy disk or CD-ROM. Fdisk sets the recovery partition active and formats the operating system partition. Using a third-party image restoration utility, the end user restores the image on the recovery partition to the main operating system partition. If the bootable partition fails, the customer starts the computer with the recovery floppy disk, which performs at least these functions: Runs Fdisk to set the recovery partition active. Reformats the damaged operating system partition, if necessary. Restores the bootable image from the recovery partition to the operating system partition. Requirements for the Hard Disk-based Recovery Solution There are both licensing and technical requirements for providing a hard disk-based recovery solution. OEM Licensing Requirements You are not permitted to create recovery media for the purpose of hard disk recovery. The Microsoft OEM System Builder Agreement does not permit reproduction of Microsoft software. Any unauthorized reproduction of Microsoft software, including recovery media, infringes Microsoft s copyright, is illegal, and can result in civil and criminal liability. You must provide a bootable floppy disk for recovery with the computer at the time of sale. The imaging software uses this disk to initiate the recovery process. For more information about creating this bootable floppy disk, see the documentation included with the imaging software. The Microsoft operating system software on the Hard Disk-based Recovery System may be used only to restore the Microsoft product software preinstalled on the Customer System hard-disk drive. You must provide documentation to the end user indicating that the Windows product included in the Hard Disk-based Recovery System is provided for the purpose of restoring software on the hard disk of designated Customer Systems only. The Windows operating system software included in the Recovery Files of the Hard Disk-based Recovery System must be identical to the Windows object code preinstalled on the Customer System hard disk, including any initial end-user startup sequence and OEM support information. It is your option to determine if the Recovery Files include any OEM customization as allowed by the relevant OEM Preinstallation Kit (OPK) for that Windows operating system.  Alternatively, you may decide to provide a more generic installation as your Recovery Files, provided that those Recovery Files fulfill the requirements of the relevant OPK. You must ensure that the Hard Disk-based Recovery System works efficiently, providing a positive end-user experience. End-User Licensing Requirements For Windows operating system recovery, you must provide an online End-User License Agreement (EULA) identical to the original EULA, and the end user must be required to affirmatively accept the terms of such EULA in order to proceed with using the Hard Disk-based Recovery System prior to use of the product. Technical Requirements The use of a third-party disk imaging software product, which includes: The creation of a bootable floppy disk with a custom script for disk management. The restoration of the image. The integration of the imaging software into your manufacturing process. A computer with at least two partitions. The use of a WinPE-based preinstallation process for all computers shipping with recovery solutions. The use of DiskPart to create the partitions on all computers shipping with recovery solutions. For information on how to use DiskPart in a WinPE-based preinstallation, see the Windows OPK User s Guide. Disk Partitions and the Recovery Solution For the purposes of this paper, hard disk-based recovery requires at least two partitions, created in the following order: A recovery partition containing a disk image of the operating system partition. An operating system partition with a bootable version of Windows containing the OEM preinstalled image. A recovery partition is not assigned a drive letter, and is visible to the customer. The recovery partition is actually mounted and displayed as "EISA" but is protected from being deleted or formatted by the operating system. Some customers may notice the discrepancy between the stated size of the hard disk and the size reported by Windows. If you explain this as a feature of your recovery solution, you may prevent some customer support calls. To create the partitions, you must use WinPE in your preinstallation process. EISA partitions can be formatted only from WinPE.  For information on using WinPE in your preinstallation process, see the Windows OPK User s Guide. Disk Management with Diskpart During preinstallation, you must partition and format the hard disk. These operations and many other disk management functions can be scripted with the Diskpart.exe utility. Diskpart ships in the box with Windows XP and is available for download from the Web for Windows 2000. It can also be used in a WinPE preinstallation to automate disk management. Diskpart is well documented in Windows XP Help and Support. Here is the same script extended to create a recovery partition: REM select disk Select disk 0 REM create recovery partition (type 0x12) of size 1000 MB Create partition primary size = 1000 ID = 0x12 REM create primary OS partition for remainder of drive, bootable, assigned C: drive letter Create partition primary  Active Assign letter = C Setting the ID to 0x12 protects the recovery partition as the operating system starts. For more information, see the Diskpart.exe topic and the [DiskConfig] section of Winbom.ini in the Windows OPK User s Guide. To Create the Minimal Hard Disk Recovery Solution To create your recovery solution Choose an imaging software product. Design your recovery solution with the imaging software product. Decide how best to integrate the imaging product into your manufacturing process, in order to perform steps 6 and 7. For computers for which you will provide recovery solutions, use WinPE and DiskPart to create the two necessary partitions. Preinstall Windows to the primary operating system partition. Use the imaging product to create an image of the contents of the active partition. Write the recovery image to the recovery partition. Create the recovery floppy disk, as required by the third-party imaging software.  STYLEREF "Print Division Title" \* MERGEFORMAT  Hard Disk-based Recovery Solutions for System Builders                                                                PAGE  Microsoft Corporation. All rights reserved.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\opktools\docs\hot-plug_pci_for_windows.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Windows Platform Design Notes TitleWindows Platform Design Notes Normal Microsoft Word 10.0urn:schemas-microsoft-com:office:smarttags PlaceName urn:schemas-microsoft-com:office:smarttags PlaceType urn:schemas:contacts GivenName urn:schemas:contacts urn:schemas-microsoft-com:office:smarttags urn:schemas-microsoft-com:office:smarttags urn:schemas-microsoft-com:office:smarttags country-region urn:schemas-microsoft-com:office:smarttags place Month 4QZT$cmPPJCmp0712 cmPPJCmp0712 cmPPJCmp0712 cmPPJCmp0712Windows Platform Design Notes Design Information for the Microsoft  Windows  Family of Operating Systems Hot-Plug PCI and Windows  Abstract Hot-Plug PCI allows users to install and remove PCI devices while the computer is running. Microsoft  Windows 2000, Windows XP, and Windows .NET Server support Hot-Plug PCI through ACPI.  To take advantage of Hot-Plug PCI support on Windows operating systems, manufacturers of hot-pluggable PCI devices and Hot-Plug PCI controllers should develop standard Plug and Play drivers for their devices, and implement insertion and removal notifications as defined in ACPI 1.0b. Hot-Plug PCI controllers should also implement the _HPP object as defined in ACPI 2.0 for Windows XP and Windows .NET Server, and follow standard rules for implementing ACPI events when connecting to General Purpose Events (GPEs), as described in this article.  Support for Standard Hot Plug Controller (SHPC) as defined in the PCI Standard Hot-Plug Controller and Subsystem Specification, Revision 1.0, is planned for the next version of Windows, code named Windows "Longhorn." Manufactures of SHPCs should ensure that their devices comply with the specification, and with Microsoft Windows Logo Program requirements, as described in this paper. Windows "Longhorn" will include in-box support through a single SHPC driver. This driver will support all SHPCs that are designed to these requirements. SHPC implementations will not require ACPI insertion and removal notifications. Version 1.5 - March 20, 2002   Contents Windows Hot-Plug PCI Roadmap Preparing Drivers for Hot-Plug PCI Implementing ACPI-based Hot-Plug PCI in Systems Example Namespace for Hot-Plug PCI Connecting General Purpose Events Windows Logo Program Timeline Call to Action Related Information Microsoft Corporation may have patents or pending patent applications, trademarks, copyrights, or other intellectual property rights covering subject matter in this document. The furnishing of this document does not give you any license to the patents, trademarks, copyrights, or other intellectual property rights except as expressly provided in any written license agreement from Microsoft Corporation.  Portions of this document specify software that is still in development. Some of the information in this documentation may be inaccurate or may not be an accurate representation of the functionality of final documentation or software. Microsoft assumes no responsibility for any damages that might occur directly or indirectly from these inaccuracies. Microsoft does not make any representation or warranty regarding specifications in this document or any product or item developed based on these specifications. This document is provided to you on an AS IS basis.  Microsoft disclaims all express and implied warranties, including but not limited to the implied warranties or merchantability, fitness for a particular purpose and freedom from infringement. Without limiting the generality of the foregoing, Microsoft does not make any warranty of any kind that any item developed based on these specifications, or any portion of a specification, will not infringe any copyright, patent, trade secret or other intellectual property right of any person or entity in any country. It is your responsibility to seek licenses for such intellectual property rights where appropriate. Microsoft shall not be liable for any damages of any kind arising out of or in connection with the use of these specifications, including without limitation, any direct, indirect, incidental, consequential (including any lost profits), punitive or special damages, whether or not Microsoft has been advised of such damages. . Some states do not allow the exclusion or limitation of liability or consequential or incidental damages; the above limitation may not apply to you.  The information contained in this document represents the current view of Microsoft Corporation on the issues discussed as of the date of publication. Because Microsoft must respond to changing market conditions, it should not be interpreted to be a commitment on the part of Microsoft, and Microsoft cannot guarantee the accuracy of any information presented. This document is for informational purposes only. MICROSOFT MAKES NO WARRANTIES, EXPRESS OR IMPLIED, IN THIS DOCUMENT. Microsoft, Windows, and Windows NT are trademarks or registered trademarks of Microsoft Corporation in the United States and/or other countries. Other product and company names mentioned herein may be the trademarks of their respective owners.  2002 Microsoft Corporation. All rights reserved. Windows Hot-Plug PCI Roadmap  Hot-Plug PCI refers to the technology that allows users to install and remove PCI devices while the computer is running. Hot-Plug PCI should not be confused with fail-over functionality that allows automatic switching to a redundant device in the case of a failure. Hot-Plug PCI in this paper refers strictly to inserting and removing PCI devices in a running system. The information in this paper does not apply to CompactPCI, which is a different hardware technology that also provides hot-plug and fail-over functionality. The PCI Hot-Plug Specification describes the hardware requirements and interfaces to use when designing Hot-Plug PCI devices. This specification is published by the PCI Special Interest Group (PCI SIG) and is available online at http://www.pcisig.com Although the PCI Hot-Plug Specification describes hardware requirements, it currently does not define a complete software interface for handling insertion and removal events. Therefore, the software interface Windows 2000 supports for Hot-Plug PCI is the Advanced Configuration and Power Interface (ACPI) specification, Revision 1.0b. The software interface that Windows XP supports is ACPI 1.0b along with one additional object introduced in ACPI 2.0 (the _HPP object). All insert, eject, and removal events can be handled through ACPI 1.0b on Windows 2000 and Windows XP systems. Note that these are the same mechanisms Windows 2000 and Windows XP use for supporting hot-docking of mobile PCs. Hardware manufacturers who are familiar with hot-docking can use their knowledge to implement Hot-Plug PCI. The ACPI specification is available at http://www.acpi.info/ The PCI Standard Hot-Plug Controller and Subsystem Specification, Revision 1.0, defines standard hot-plug interfaces so that all SHPCs can use a single driver and usage model. This specification is available at http://www.pcisig.com. The rest of this section describes native Hot-Plug PCI support implemented in Windows 2000, Windows XP, and Windows .NET Server, and it describes planned support for SHPC in Windows "Longhorn." Windows Hot-Plug PCI support in Windows 2000 consists of the following:  Insertion and removal notifications as defined in the ACPI specification, Revision 1.0b  Single-level resource re-allocation The operating system can re-allocate hardware resources (I/O and memory apertures) at runtime on a single bus segment only. The operating system can start a device that is hot-plugged behind a bridge only if the resources allocated to the bridge are sufficient to accommodate the new device. If resources allocated to the bridge are not sufficient to accommodate the new device, the operating system cannot reconfigure PCI-to-PCI bridges at runtime to address the device resource requirements. For information about memory and I/O resource allocations for PCI-to-PCI bridges, see the resources listed at the end of this article.  Optional vendor-supplied filter driver Hardware manufacturers can supply an optional filter driver to support hot-plug features of a device, such as a proprietary LED display for providing output to users.  Windows XP ACPI hot-plug support provided in Windows XP is an incremental improvement over Windows 2000. The following hot-plug support is included in Windows XP (and Windows .NET Server):  Insertion and removal notifications as defined in the ACPI specification, Revision 1.0b Same as in Windows 2000  Single-level resource re-allocation Same as in Windows 2000  Optional vendor-supplied filter driver Same as Windows 2000  New _HPP object defined in the ACPI 2.0 specification  This object improves the operating system s ability to optimally configure devices inserted into hot-plug slots. The _HPP object in the ACPI BIOS must be associated with a PCI-PCI bridge. The object informs the operating system of the default settings that should be used for add-in cards inserted into hot-plug slots located behind the bridge. These parameters will also be used by the operating system to program hot-plugged devices and devices that are inserted before system boot but not configured by the BIOS. The default settings addressed by the _HPP object are:  Cache-line size configuration register  Latency timer configuration register  SERR ENABLE bit in the PCI configuration command register  PARITY ERROR RESPONSE bit in the PCI configuration command register  Although Windows XP supports the _HPP object from ACPI 2.0, it is not considered an ACPI 2.0-compliant operating system because it does not support all ACPI 2.0 enhancements. For example, Windows XP does not support the new event notifications defined in the ACPI 2.0 Specification. ACPI hot-plug support is consistent for both 32-bit and 64-bit versions of Windows Future Support Microsoft is investigating the following native support for Hot-Plug PCI in a future version of the operating system, code named Windows "Longhorn":  Operating system support for SHPC  For Windows "Longhorn," SHPCs must be designed to conform to the guidelines listed in PCI Standard Hot-Plug Controller and Subsystem Specification, Revision 1.0, and the Windows Logo Program requirements for the SHPC driver. SHPCs that have been designed to meet these requirements do not need any ACPI implementations or vendor-supplied filter drivers. SHPCs will be required for systems running Windows "Longhorn" that provide Hot-Plug PCI support.  Dynamic configuration of PCI-to-PCI bridges Support for dynamic configuration of PCI-to-PCI bridges is planned for Windows "Longhorn." This support will permit the operating system to reallocate resources among multiple bus segments and dynamically reconfigure resource allocations for PCI-to-PCI bridges at run time.  This means that, assuming sufficient resources are available system-wide, the operating system can reallocate resources as needed to any device that is hot-plugged into the system, whether or not that device is behind a bridge and whether or not the bridge has sufficient resources for the hot-plugged device. To support dynamic configuration of PCI-to-PCI bridges, drivers must respond correctly as specified in the Windows DDK to query stop, stop, and start IRPs. Dynamic configuration will exercise code paths that currently might not be exercised completely in Windows 2000 and Windows XP, so drivers that work on Windows 2000 and Windows XP might fail on later versions of Windows operating systems unless properly implemented.  Preparing Drivers for Hot-Plug PCI  Hot-Plug PCI is implemented through standard operating system Plug and Play mechanisms. Drivers for devices that can be hot-plugged have no additional requirements beyond the standard Plug and Play support that every Windows driver must have. At a minimum, a Windows Plug and Play driver must implement the following routines:  A DriverEntry routine that allocates memory and initializes driver data structures  An AddDevice routine that initializes a device  A DispatchPnP routine that must handle the following IRPs and may handle additional optional IRPs:  IRP_MN_START_DEVICE The operating system sends this IRP to initialize the hardware and begin using the device.  IRP_MN_QUERY_STOP_DEVICE IRP_MN_STOP_DEVICE IRP_MN_CANCEL_STOP_DEVICE The operating system sends these IRPs to stop the device temporarily for resource rebalancing.  IRP_MN_QUERY_REMOVE_DEVICE IRP_MN_REMOVE_DEVICE IRP_MN_CANCEL_REMOVE_DEVICE IRP_MN_SURPRISE_REMOVAL The operating system sends these IRPs to handle scenarios in which the device is removed. This is particularly necessary for any device on a hot-pluggable bus such as USB, any device capable of Hot-Plug PCI, and any device that may be found in a portable or docking station.  A DispatchPower routine that handles IRPs for power operations  An Unload routine that removes any driver-specific resources set up by DriverEntry For complete details about these and other aspects of Plug and Play and power support, see the Windows DDK.  Important Hot-plug PCI devices can be installed at runtime, after the system firmware has booted the computer. When these devices are installed at runtime, option ROMs on the card will not be executed. As a result, Hot-Plug PCI hardware and drivers must be able to function without having run any option ROMs. Therefore, in addition to implementing complete Plug and Play support, the designer for a hot-plug device must ensure support for completed device functionality without running an option ROM. Implementing ACPI-based Hot-Plug PCI in Systems  As previously stated, systems that support Hot-Plug PCI use ACPI to inform the operating system of insertion and removal events. ACPI handles Hot-Plug PCI devices the same way it handles any other type of removable device. The following checklist will help in designing systems:  Create device objects for each Hot-Plug PCI slot on its appropriate bus in the ACPI namespace. Because a PCI device might have eight functions on that device, the namespace must list eight device objects for each slot.  For each device object, include the following:  _ADR to identify the PCI address of the slot. As defined in the ACPI specification, the high WORD contains the PCI device number for the slot and the low WORD contains the function number of the device.  _EJ0 control method to indicate that the device is hot-ejectable. When run, this control method should eject the device: It should engage motors, release solenoids, set indicator lights, and so on. This method must not return until the hardware has been completely ejected and status bits have been updated accordingly.  _STA control method. This method indicates whether a device is present in the slot.  _SUN object to identify which physical slot the device is in as indicated on the back of the machine.  _PS0 and _PS3. These optional control methods turn on and off power to the slot if the hardware has power controls available.  Ensure that a pin that signals insertion and eject requests is wired to an ACPI GPE bit.  Create an _Lxx or _Exx control method to handle the GPE bits associated with Hot-Plug PCI.  Example Namespace for Hot-Plug PCI  The following ACPI Source Language (ASL) example describes two Hot-Plug PCI slots behind a PCI-to-PCI bridge. The insertion and removal events for both cards are wired to the same GPE (bit 0x0a) in the chip set. Proprietary status bits in the Hot-Plug PCI controller indicate to control methods the presence of devices in a given slot, whether an event is for device insertion or removal, and which slot the event is for. Scope(\_SB) {     Device(PCI0) {    // Root PCI Bus          Name(_HID, EISAID("PNP0A03"))    // _HID for root device         Name(_ADR,0)    // Device 0 on this bus         Method (_CRS,0){    // Need current resources for root dev             // Return current resources for root bridge 0         }         Name(_PRT, Package(){    // Need PCI IRQ routing for PCI bridge             // Package with PCI IRQ routing table information         })         // First PCI-to-PCI bridge (No Hot-Plug slots)         Device (P2P1) {                     Name(_ADR,0x000C0000)    // Device#Ch, Func#0 on bus PCI0             Name(_PRT, Package(){    // Need PCI IRQ routing for PCI bridge                 // Package with PCI IRQ routing table information             })         } // end P2P1         // Second PCI-to-PCI bridge (Bus contains Hot-Plug slots)         Device (P2P2) {                     Name(_ADR,0x000E0000)    // Device#Eh, Func#0 on bus PCI0             Name(_PRT, Package(){    // Need PCI IRQ routing for PCI bridge                 // Package with PCI IRQ routing table information             })             Name(_HPP, Package(){0x08,0x40, 0x01, 0x00})                     //_HPP only implemented in Windows             // Device definitions for Slot 1- HOT PLUG SLOT             Device (S1F0) {    // Slot 1, Func#0 on bus P2P2                 Name(_ADR,0x00020000)                 Method(_EJ0, 1) {                         //Code to eject device - remove all power to device                 }                 Name(_SUN,0x00000001)             }             Device (S1F1) {    // Slot 1, Func#1 on bus P2P2                 Name(_ADR,0x00020001)                 Method(_EJ0, 1) { S1F0._EJ0}                 Name(_SUN,0x00000001)             }             Device (S1F2) {    // Slot 1, Func#2 on bus P2P2                 Name(_ADR,0x00020002)                 Method(_EJ0, 1) { S1F0._EJ0}                 Name(_SUN,0x00000001)             }             Device (S1F3) {    // Slot 1, Func#3 on bus P2P2                 Name(_ADR,0x00020003)                 Method(_EJ0, 1) { S1F0._EJ0}                 Name(_SUN,0x00000000)             }             Device (S1F4) {    // Slot 1, Func#4 on bus P2P2                 Name(_ADR,0x00020004)                 Method(_EJ0, 1) { S1F0._EJ0}                 Name(_SUN,0x00000001)             }             Device (S1F5) {    // Slot 1, Func#5 on bus P2P2                 Name(_ADR,0x00020005)                 Method(_EJ0, 1) { S1F0._EJ0}                 Name(_SUN,0x00000001)             }             Device (S1F6) {    // Slot 1, Func#6 on bus P2P2                 Name(_ADR,0x00020006)                 Method(_EJ0, 1) { S1F0._EJ0}                 Name(_SUN,0x00000001)             }             Device (S1F7) {    // Slot 1, Func#7 on bus P2P2                 Name(_ADR,0x00020007)                 Method(_EJ0, 1) { S1F0._EJ0}                 Name(_SUN,0x00000001)             }             // Device definitions for Slot 2- HOT PLUG SLOT             Device (S2F0) {    // Slot 2, Func#0 on bus P2P2                 Name(_ADR,0x00030000)                 Method(_EJ0, 1) {                         //Code to eject device - remove all power to device                  }                 Name(_SUN,0x00000002)             }             Device (S2F1) {    // Slot 2, Func#1 on bus P2P2                 Name(_ADR,0x00030001)                 Method(_EJ0, 1) { S2F0._EJ0}                 Name(_SUN,0x00000002)             }             Device (S2F2) {    // Slot 2, Func#2 on bus P2P2                 Name(_ADR,0x00030002)                 Method(_EJ0, 1) { S2F0._EJ0}                 Name(_SUN,0x00000002)             }             Device (S2F3) {    // Slot 2, Func#3 on bus P2P2                 Name(_ADR,0x00030003)                 Method(_EJ0, 1) { S2F0._EJ0}                 Name(_SUN,0x00000002)             }             Device (S2F4) {    // Slot 2, Func#4 on bus P2P2                 Name(_ADR,0x00030004)                 Method(_EJ0, 1) { S2F0._EJ0}                 Name(_SUN,0x00000002)             }             Device (S2F5) {    // Slot 2, Func#5 on bus P2P2                 Name(_ADR,0x00030005)                 Method(_EJ0, 1) { S2F0._EJ0}                 Name(_SUN,0x00000002)             }             Device (S2F6) {    // Slot 2, Func#6 on bus P2P2                 Name(_ADR,0x00030006)                 Method(_EJ0, 1) { S2F0._EJ0}                 Name(_SUN,0x00000002)             }             Device (S2F7) {    // Slot 2, Func#7 on bus P2P2                 Name(_ADR,0x00030007)                 Method(_EJ0, 1) { S2F0._EJ0}                 Name(_SUN,0x00000002)             }         }    // end P2P2     }    // end PCI0 }    // end Scope (\_SB) Scope(\_GPE) {     Method(_L0A,0){         //Check proprietary bit in Hot-Plug controller         if(//insertion on slot 1){             Notify(\_SB.PCI0.P2P2,0)         }         if(//insertion on slot 2){             Notify(\_SB.PCI0.P2P2,0)         }         if(//ejection request on slot 1){             Notify(\_SB.PCI0.P2P2,3)         }         if(//ejection request on slot 2){             Notify(\_SB.PCI0.P2P2,3)         }     } //end Method (_L0A, 0) } //end Scope (\_GPE) Connecting General Purpose Events  ACPI discovers hardware events when a GPE is asserted and a System Control Interrupt (SCI) is raised. Hot-Plug PCI controllers must therefore be wired to the GPE bits of the core chip set. Because of the flexibility of GPEs, there are a number of implementations: a single GPE bit could be used for all Hot-Plug PCI events in the system; another implementation could wire up a GPE bit for each event on each slot.  Regardless of how the events are shared on GPEs, the standard rules for ACPI events must be followed. For more information, see the following sources:  Section 5.6.2.2 of the ACPI specification, Revision 1.0b.  GPE Routing for Microsoft Windows at  http://www.microsoft.com/ hwdev/ tech/ onnow/ GPE_routing.asp  Event Flow for Insertion. When a device is inserted into the system, the following takes place:  User: The user inserts the hardware in the slot.  Hot-Plug PCI controller (HPPC): Asserts a GPE.  Core chip set: Raises an SCI.  ACPI driver: Clears the GPE event and runs the _Lxx method associated with the GPE.  _Lxx method: Reads status bits from the HPPC to determine that the event was an insertion event and which slot the event took place on.  _Lxx method: Executes Notify(,0) on the PCI bus that the slot is on.  ACPI driver: Executes _STA methods for the devices specified in Notify() in the previous step.  _STA: Returns 0x0a; that is, the device is present but not enabled.  ACPI driver: Tells the PCI driver to enumerate the bus.  PCI driver: Reads configuration space to identify the device.  PCI driver/PNP subsystem: Loads and starts the drivers for all functions of the device.  Device drivers: Request the functions be turned on.  ACPI driver: Executes _PS0 methods, if present.  PCI driver: Writes to configuration space to turn on the device according to PCI Power Management specifications.  Device driver: Begins using the device normally.  Event Flow for Removal. When the user requests to eject a device, the following steps take place. These steps assume that the hardware has an eject button associated with each device. If it does not, then the user must use the Add/Remove Hardware Wizard to eject a device. In this case, the process would start at step 8 in this list:  User: The user presses the eject button for the slot.  HPPC: Asserts a GPE.  Core chip set: Raises an SCI.  ACPI driver: Clears the GPE event and runs the _Lxx method associated with the GPE.  _Lxx method: Reads status bits from the HPPC to determine that the event was an eject request and which slot the event took place on.  _Lxx method: Executes Notify(,3) function 0 of the slot that is requesting eject.  ACPI driver: Requests the Plug and Play system to eject the device.  PNP: Queries all drivers for all functions of the device, and if successful, tells the drivers to unload.  PCI driver: Writes to configuration space to turn off the device per PCI Power Management specifications.  ACPI driver: Executes _PS3 methods, if present.  ACPI driver: Executes _EJ0.  _EJ0: Engages motors, solenoids, lights, and so on to eject the device. When the device has been ejected and status bits updated accordingly, it returns.  ACPI driver: Executes _STA to verify the device ejected successfully.  _STA: Returns 0x00 (device not present). Had the device not ejected successfully, _STA would have returned 0x05 (that is, present but not functioning).  ACPI driver: Complete cleanup. Had _STA returned 0x05, the ACPI driver would have told the operating system that there was a problem and an error dialog would pop up on the user's screen.  Windows Logo Program Timeline If implemented, SHPCs must conform to the PCI Standard Hot-Plug Controller and Subsystem Specification, Revision 1.0, and to the Windows Logo requirements listed in this section, to take advantage of the built-in support planned for Windows "Longhorn" and future versions of Windows. This planned support will eliminate the need for ACPI implementations and vendor-supplied filter drivers. The Manual Retention Latch (MRL) Sensor is required by Windows Logo Requirements as described in section 2.2.3 of the SHPC Specification, Revision 1.0. The MRL Sensor is a switch, optical device or other type of sensor that reports the position of a slot s MRL to the SHPC. Section 2.3.2 of the SHPC Specification provides for alternatives to the MRL Sensor, such as documentation that describes the proper sequence for insertion and removal of Hot Plug cards. These alternatives do not meet Windows Logo requirements. Separate indicators that show the attention and power states of SHPC slots. Separate indicators are required by the Windows Logo Requirements as described in section 2.2.1 of the SHPC Specification. Section 2.3.1 of the SHPC specification allows for a single indicator under some circumstances. The alternative single indicator does not meet Windows Logo requirements. The Attention Button is required by Windows Logo Requirements as described in section 2.2.5 of the SHPC Specification.  Section 2.2.5 of the SHPC specification stipulates that this button is optional for the platform, however, it is a Windows Logo Requirement and support for it will be included in the SHPC driver. Call to Action  Manufacturers of hot-pluggable PCI devices and Hot-Plug PCI controllers should:  Develop standard Plug and Play drivers for hot-pluggable devices as specified in the Windows DDK.  Implement insertion and removal notifications as defined in the ACPI Specification Revision 1.0b.  Implement the _HPP object as defined in the ACPI Specification revision 2.0 for Windows Follow standard rules for implementing ACPI events when connecting to GPE events  Be aware of upcoming revisions to the PCI Hot-Plug Specification to include native support for insertion events, removal events and other hot-plug functionality required of standard Hot-Plug PCI controllers.  Be aware of resource rebalancing issues for hot-plug devices and PCI-to-PCI bridges. For information, see the list of resources at the end of this article.  Be aware of Windows Logo Program for Hardware requirements related to Hot-Plug PCI. For information, see the requirements at B2.5 PCI Controllers and Devices.  Plan to develop and support SHPCs for Windows "Longhorn" as defined in this white paper. Be aware of upcoming Windows Logo Program for Hardware requirements related to SHPCs. Related Information  PCI Hot-Plug Specification at  http://www.pcisig.com  ACPI Specifications, Revisions 1.0b and 2.0 at  http://www.acpi.info/  Windows DDK at  http://www.microsoft.com/ddk/  GPE Routing for Microsoft Windows at  http://www.microsoft.com/ hwdev/ tech/ onnow/ GPE_routing.asp  PCI-to-PCI Bridges and Cardbus Controllers on Windows at http://www.microsoft.com/ hwdev/ bus/ pci/ pcibridge-cardbus.asp   STYLEREF  Title  \* MERGEFORMAT  Hot-Plug PCI and Windows                                                                                                                          PAGE  PAGE    2002 Microsoft Corporation. All rights reserved.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\opktools\docs\benchmarking.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corporation TitleMicrosoft Corporation Normal Microsoft Corporation Microsoft Word 10.0urn:schemas-microsoft-com:office:smarttags PostalCode urn:schemas-microsoft-com:office:smarttags Street urn:schemas-microsoft-com:office:smarttags address urn:schemas-microsoft-com:office:smarttags State urn:schemas-microsoft-com:office:smarttags urn:schemas-microsoft-com:office:smarttags country-region urn:schemas-microsoft-com:office:smarttags place urn:schemas-microsoft-com:office:smarttags PersonName (|1&|& z2+(.fffff3ff f3ff33f3 3ff3f33f 33f33333 ```    cmPPJCmp0712 %eIDATx^ |L>M7q  o\?#d 8Ki"+ iz'yG@xS yn"w8Pg HBxSu B8~s+ ju'oP )L=\c ,w$R+ [z>?7 z}v}} .MNM}55 MHN]V6~ jdF~E Xb#!F wj&w*gw fM&-ld< `S1h7 F?M5R },av, HfjG3A +e6fg /F0y\ QGp(- s%B{Ir 6I%?3* 2gi%F _E7*= d:F>]7 oLN0; \NI#QO "1 XCy iw9;` w[:Lv IDATx^ ]U]m= e46LO LBjCH P+"5* 'lCt. Gl6tz 0m1.l =C&~C &}nd' 1CiWt pvhm6 R6&&` D"N " 4!@fj $FR5* mzETd% Ue@<% !^aIwJM XIm m xAg2R 9yKasG mJ`d!` ;jaOd M)>!t @YMZ, 9Dj)t "NHXT ;U2'v %ckRu Y]]g9j lmi<U 3a#Lq wv^w~o |[_\H |]92U6 !(*)" kYS%5 |]1rP 2id1> $shqQK|M3H R^ u8 R\h?tR '_q-f}b yu]K] gydoAG )K,VTNYH `A!u]H~pLs (4MUX D+&j3Z N,:z| .XbDB 2w"c)Y g>xw] 6GSV| DHvM[l ?@FL` `<AgI nD^D:{^ 2Z{I4 [Nue: `.voC` XWT[U e1H.Y5Pc`d  ;1kC- %&4!  W*<o6 ,'.ji/ dsMR$yA TM2f8b &*a2P "$Wbr exidz $'vr(j4 aYWAB& B&9bx dS!rx- eX]pMIL "d%1J$ D5'k#v iD]uw Yl.'M G,(5V%" i4%$P qL2 S< 20b;j O^{Ml] -(+IR w1%hH ?N;c  nsu%'5V2 v$Y8s[i 7Cch^ CI+!- 8o$U4 m+&I?Y  s~69 y'ZesDzE aC"j^ ubgOUN +W9kz khQEwrb !V+mb TWWWVn %Z'Y} JZJc[i ?,V5dI*CZ o_U&QZ kk+5M Hd5MY l%FMf w]]e< <`t*i oFmk: UM4k,< *iNCS J:,N$*; 'UG~J F\Ah%$ ViuSC ,UAtMQ aXxs9 HMTY7K }la01-2 'y6>6 ot6;" o<S(. d!1R]>l ]vLuM o-A:j BdnHY RI5[ / pEEucc HBTl< E0DtF ZU][_ 0?b+p$ {aSg%W t81Kb ^XL-^Wu 'sVU4 -*p9E  37ZJ 7d,(n/ r7-{H ^(@&h eKT$Z,[0 $P8D/ IU{-' &\E<ArE AjUH@" Vido<j <c]!m clVc{#R N*$d$8 ;\3K'Z3 ~11E  iK<;' sC1H! Gt5-1 j\Hz5JY iFG#O; "M&[4:iA o$wU\U 7%%%eeep- A:2}Q Zv=/  [_f&F o(;a. D3a32 N-@I2 /P!vF3" h*SD3 tMa^` Eu-3, XQQYS]WRRPS R\\fL !%jd+ p|l}} esMMmc bTF25 RVGb~$ -mJy|a o 51] VHM(B v^IpD#( |f1%Nu \2o&}n x|(+9NJ iDJ(!jF N`6)S  O2Nb `|h9y ll<f4 pP<PB ,?Z.z F9?F; Lm"9IGAF b]$:5 j2vG- Ky~&% $$fR; K+{#u. g{e }}eb 2W^+S I$6Fq 2a eTN`2 TEBlO vM$(2 sL$#ws T3-T8 qQ]I! v|7dr o%oAlY I8H<m} ;b@~I <gIm}c ?wY]UM %dJuf *~L}L BB|-)I \KRnl }w[yM gO9|u (II\e h4e]+ C}}=d< "s}t{Q BMsPf; p9X'wr o^#DJ ^dZ3f 'M4>+^ cQ=w^ ~{`pO )4'vf CE6FK7 UYd&D /-t~> 1V6k^8 pscjg bjb{@ XSS+j U8,N$ }VW[+E :XnIUQ :C-RL ,> wb[E ]Qb*{ d-,<iQ *Bu;B c=t", A'YU4 >"9o~8QW (BOs8 x5'*21 |Z+\@db ]we^V.f< 3 !L@V ,`$K6 8-sU*L oi8cD l)(R#dwa< | 1:o x/|hK &kig3 t|qaQ0 &E.nZ ^ldKzQO^ R&89f( 263"i vyUXX8v W\q9z yL}vm8 CTIb(n qI3G}> RFHE@ 5qlaO" p%U2v TXX:q  0!*..n ]~PUu} T/h{?m kOK)`= L6F!|A '!\;- pNSUU *S$A1 a1_rF M)`HvH 1Q,N  .He#4 njllD H|Em# '6V%0 p4x4u MPk`u kD#AL/ KHp6B 7>^q( Fpy/v +h}#> Z(p.N EuUG9ccc |ff6N PY(s0 ,]i<c )99y@ CZZJnn.> dDEAK {-Z4fcU f\8(g <*qjZv nTO2|+ i}gn> yioSn AGl;0 7Lq^W b1Bj2x 5"Fim p</og ".KWO kg3oUR rmq9p N4|S=x }6@D^O %ypV+ IDAT); Vn\A] ?^d(*t z^%'iRR 7_{34AEp ee,).kFO> 3==~hpm oAQQa 6nC'? z8H2D 'kg|| qg|ll %giq6 >88"A /_6?%% Ps))1} L1C&9 J%bHB }ojj5 X~3}1pW2 ,O1qV I~M_b $8Od6| s~:56x ,gvv6 qH`+O \;-E~ vbG2L+ 8*w\Zd q87;} hMf#Y })pzNi S#q:/ &>LAP {wa7Z mrrjQQ Gt\ltL CdMc5 [S7%F jzzzpk (ox rJ B(Sipq ?<pW=X wv?e[ :Dq4k0 +e=pL _~9,m ,lx;? +}oVf ~*_qJ c_|)%- egfA/ .Yx"([ wrI=X ![n.r 7.v(z/V9 ?J~JII ?D>5c olvvvbb" HHo E IvAfn <B1"M q.zhER wbv<rl8 Xm/Pb W49}Ir =P`uPp2 a1JHH K{ y8/ +rrQ  >5}oa!e;E [Iqx-m sVMQ>,  )**T [)NY_` &&&Dw[1 ys&6qNo FDcMLJ xv]1{b ebTnQ ()!z$)F vKvvnQ tcb|aQA 9D!:*'' -Zf>" -0rr8 k2L:f9# @((q`5 %gIq:G ,1.f1 z(%N~{ FPPPX ,&sQB |HeFF <)*7+} sHu4}g 72F|^ $y<q) VR7y< ^,FJ1 nXd'&; 6Uo.z HMM=t tfrkpB# \gl1U }1qG~~ P.85$^ ]%.yT6Q cS1KH( 5Qaa!'* a?d R RV"1% `-748 fUN:c| |2yrbR )Mv&M 25-q[ _w2~7b r)Wd0 \PP0o .<**==]j UXP@r F]h>( 1ZxRB\B Ip`P. #7/FM Sb\th- Y?:6v S{%$&e qkjRr tLl\l\B A_!mr q~uT?n :#$.> Tt)NXs >}z_r hzq:w LOGsz O=QTT /^,5' t8(Lp RP2F)k }(>^" |pTzR ^;w:^ iN.w[tT -6}c! =.k&jsV PCoZ: 8yiZd CyPkr 1/`8.<xh :wS6*a :'NM\07{ r0^Pq 4!>y5)F V \r= q- ]} {knNp bS>gG  B>OM BC5=j gE5k' qzQbf l#2\ib q:v)L- &5 Z, ^,Fr  /VY>FMY |z(5> iw0wF +'.90< ;+DAQ ,qU_\K )11)11y v=.:&u Y,ClC Dl["\ 0wxu1 VigrU^ P@t&9]8= cb}v(g! Bt?yQ y+-.y Plzb#TEW _V4|> e</+G +rs20 '7;#:& Y9p9] F?7E)Fb ; {XnaZ ccqH! Iwy8  z%jD0 ^qqXI{5 R42+r ~*3N+ JLMHq "1E|V b,>zp ml46a qKPT. zFJJU y'tj^?? #!'{tiA&e TNHC1" fffbk= S9!G#Gb+ &Opp6 (S\\^ z{\\r~  e@fRQ C"[9K ))1E8P zwb&" 8hZw(6 w1Q\L| 66:fs *$pIDK ~*s|8\{ %dq9 [ rMkTr 8nZR` j@&jQ >wydz-/\tm 4xOyB ()@I6 /_6?% X12_Z \u5CY aJBMP 8u8Qn +J%*a ;&&.6 (py*+% D5 #x /_971 3hHVv& 999))d gV$'' 8o$--M>C<< OyQUj f>f]A $AN>d \n8yi hKVG(o 1XJ&G 7\Hfn ;> f\ g*DT{ 9wu"s {1<u2 TG@8= d:uIk ;6j._ icJ*N=&b -]ZN{\ VbZ4Kz1 7Yx#x V&#q* h+1Q{ .|rwJZr csjj|JZ| =@jZB [qk@4 Xo`V# ;8z$7 4 '7395 :$\xZ BgaT, :'NM\0'{ 0hHNv& #S-oL (;+?)> zC_9x Ghfb| $_V|B =?/[M qO=Pk >|Xhp|  vj\\ cXZ:= \O;]` Q(`!r btUU= TUW?= 7N(6> 4s1Yg S+il?i& ,&bT] (W.~|~ 4V]Un KLp[d& m9-.fn5{  CK)  GFl"4 "0Qh% 'aiYx f1F@7 0hhUU%r6 @!^(d _{dJ2 O+7:/ M=sbM Y]|EJ J#WFf xe((,= "g1jAI jaU%' BMuySS /=_S[ =!VZi Z8>>Q` 5]]S;r d]M9^ o=>W?Q7 M%4xY 5VopL w)\i`^M} D}"=\[{O Zko0d WOyg< .(o<3,w bx~n( =#:i[ gVW,L t-)); U]m]] uhl@d QiW=Q7 <=1>Q=6ff]u &jmUU] L>uuuA C@.\Z RZ09: aIj&O qHh?M9  &];Y +\"O? 3OwiB cqqte9 FTlId ,ilia3g hq|4Mu^9Qk =#__~ TY>?7  !GSN l).&E ;\.Vj 8RvYca{ yA1#/t?*` '}91_ ,o#`` Yk`3P ( tD` ~b=94 FZ47a .*,).!;; A/^7=g /`&i  OgVV= b}}]}M 5`TQ>/ G@K03A IDATRi fuFy, ;s\K5B gZnjRs n4B9.lM8 )5d_nW 6!_,> XD7ZEuuEUEE% {A'@. +se[} |kd#1 2+x'(!MB _!iMx Y2=4kd"-A3 :c{i5 stEyyW #b#c  lK0,1 U++(c t_PT>7 %1DxG Xms~mm wau-S^d g<mGv SNq4c HBNEU FmMk9 zHdC  %SS>5 ,>L=+ LQb,o$5: 5[f juG &f~/)K IB CF g&Cw)|fC+ X0?,/B s9wl, =B5m% <F!H0 {"F"g] lNLVk  1`$f9q fexu$ 0GQfd ^|lnN gt5d4 /lHyyx%2 YJb(9 Tfv_d e'iJo MAD4# !4'ul)e ^t|#R a3"%[ z7Pl3d zd.5, O&#A% H7@Vc N,w-X w=7bP 7jrKdg u M8[ f;a&CE -POC=V n9Djx m2dX x QqAqq) sT$RR v'W=s WI~.: K=kBGH$ yF#b)B( |hnk~ n5!$8 >5&\C #@&IRZ W0fBgPr 1@9O+ }HI`= uH$K" 8q7\a ^^\\v &m'JKK_y FYDm*k Ayy1 $ RV[eU y/yf# tDiF #K %%=KK{ 0t(}X s s3{.ryJY@ w=7bP ,4C)e .i`KK{ >cE[n ;bn5' 3Q~7E |7`'( kb8=l/ YQqqiqIQ1S oGNhG z+W"% l+,dq Z|Qz5 |:;gX Z\R,K v'W={ _zt]]uC] G {`4 7j;2j W=Xr& r7Yx' hWiD@ qIsNC esiYYR ;G<TM1h Fj9"i .FmkoCB [P@*BI1 I"M+{ LMqsQ o6&'3 f8J'<h YFYH@ (AH@( Eg+;sb Kf*2+ rC5{! %T"Zb9 F$eWV H1'J*" 1sW}. <L!I6! L#5CT !_[NyU= oq8"H;J]O`%% YhLB4< a#c_sq! 1gl(G@W/,p &6"c| 82:6> :aIgG5 uFXEm qlr"*J Cb^5q %os>9v0 BlBAH k0/QW `8B4? ;o1JP 3BQMQ2 !l-H42 A63*N i'm'` {D:v, DG$cS ^CfY/b #mm'& P5fVc rZ,#M +UJ,E ,HX`: P8`/Z 7v`G,F % ;a7 %A`D[ Ev?|z #$c*Z .2sd< , !r} j\`B21 "Nf7IFp F ;`t h"n6}ut 9!0Z1 jt%hsc 0^M|1v 4CO('?B rdmC]50Q]= 2J@F` O(@_- $2 _*_ d),wa Zb+Z_ MSnXj 1GkSc _2XY, ^t5*ZZWZ 8dN0g~I :jD(: 0+i7^i Y L*.*(. ]P\RP\ ]KinC HJA$? 9I+Re :iwd6 ?qhd[ V**~)/_ /._4i .)svy AqAA18 ?aW6P 1'VV> 2ld9C "D1tY% @vAQ$ B@=(G f$`#D _Hx!7 XvG o NBP>,eh [_}Oc D{)i^e 9ncO4 DX]TI`D $PI`^ /'-]W w;a.npF [j!Q#H# @Euxa Js\=c #")1k TNie< y Y}d6 iNw|pV ,bwaTgT rW%HE )E>z. cR%O\ 1pG c T!(tq 6bh[xb D>3/r .# A! k%<}P7 Afz(  Rd^qw| P$,`^ `S#0j Ax0Z, _&0Zk3`me Jrov76 asPZp pG`$[ IuZO0 3guj% 7k3Xj r&v Z rF`hm)g- cd$l0$ Oc(~@ bDu.:$ -c#-2hx txV4d "UT,w Cl9t! :}8a@ mr2)E(I djsvl") .fgH4v ,ZA,) PS:S!P XI.iv r;m4A 1J^ZB )B4B/\L QU-1F"Q #i:rE `Dt'LV [d(j` FZlN&4 {>Ox7 Sg67{Ox }mq{f Q"#1P c3CvD W@1v> $v ]: !;6mjk P>y29 C<dP& 4:x+g X]~($pE Fo9"G ERGnR[ 87GI; 9AB2@" WhiOd 6f<Z] n+BRL jD9b* "e.jx d[s}"<* ,<3G> T(U1_I  A1uu xVI;\8 1T>9< i"[|t 19v`# o06+$  ^c$D 4OqMx' $1y~0x h># j $UstuK c-.+? fKBOrC6 3ckS5 lYSF& Dns6tBl%~ erKgS 6 &&^EI 673#6 K>G@E& IDAT% !Kwt` .vx<| YU3mc\  #zNDn 6041st aZkyx+ N.;>Q j`de? Q7Bm4 A5aPo` %;M_J |.(9>s T3c$W xJE*R+ p5",8 ZjU&18C @1,pBuJm ,G}e9 i?>[L -n\Z0 B-n$$ XU7Sv 6i4V5" Y1KTqQ p?5rG NV=AR NF!q2E h &TGy Me5Bv @gi}T NC#fz^ U!,_l ,CLSH ?z6c$ A')p8[ aW5rHm Xw/sn J<o[q W5{&1 d\FNV 4t4?& IRLjJ k&\h, ;lVs'Operating System Benchmarking On Windows XP  Home Edition and Professional By Stuart Sechrest and Michael Fortin; Microsoft Corporation Published: July 2001 Abstract Microsoft  Windows  XP offers excellent overall performance in part because it dynamically adjusts itself based upon individual use. This white paper addresses some of the dynamic tuning capabilities of Windows XP, and outlines steps you should take in order to get consistent benchmark results. It provides information on how to avoid System Restore checkpoint activity during benchmark runs.  This is a preliminary document and may be changed substantially prior to final commercial release of the software described herein. The information contained in this document represents the current view of Microsoft Corporation on the issues discussed as of the date of publication. Because Microsoft must respond to changing market conditions, it should not be interpreted to be a commitment on the part of Microsoft, and Microsoft cannot guarantee the accuracy of any information presented after the date of publication. This white paper is for informational purposes only. MICROSOFT MAKES NO WARRANTIES, EXPRESS OR IMPLIED, IN THIS DOCUMENT. Complying with all applicable copyright laws is the responsibility of the user. Without limiting the rights under copyright, no part of this document may be reproduced, stored in or introduced into a retrieval system, or transmitted in any form or by any means (electronic, mechanical, photocopying, recording, or otherwise), or for any purpose, without the express written permission of Microsoft Corporation. Microsoft may have patents, patent applications, trademarks, copyrights, or other intellectual property rights covering subject matter in this document. Except as expressly provided in any written license agreement from Microsoft, the furnishing of this document does not give you any license to these patents, trademarks, copyrights, or other intellectual property.  2001 Microsoft Corporation. All rights reserved. Microsoft, Windows, and Windows NT are either registered trademarks or trademarks of Microsoft Corporation in the United States and/or other countries. Other product and company names mentioned herein may be the trademarks of their respective owners. Microsoft Corporation   One Microsoft Way   Redmond, WA 98052-6399  Introduction The Microsoft  Windows  XP operating system achieves excellent performance in part by dynamic adjustments that it makes in response to how a system is utilized. In particular, many adjustments are made when the system first runs following setup and when newly installed applications are used for the first time. These adjustments greatly influence the performance of the system. Unfortunately, the dynamic nature of Windows XP can make benchmarking more of challenge than with previous Windows versions. The purpose of this document is to familiarize the reader with the dynamic tuning done on Windows XP, to explain why performance on Day 3 after installing the system and applications may be better than on Day 1, and to outline a testing methodology that is both representative of what real customers will experience and capable of producing consistent results from benchmark run to benchmark run. General Concepts: The Dynamic Nature of Windows XP Windows XP is a dynamic, self-tuning operating system, and has built in features that support this both at setup and during continued use. As a consequence, the system s performance after having the opportunity to tune itself will be different from its performance when it boots up for the first time or when it executes a particular application for the first time.  Operating System Setup There are two types of dynamic adjustments made during the setup of Windows XP: RAM based adjustments and video-based adjustments. The RAM-based adjustments are simple; if the system has 64MB of physical memory during setup, then:  No background bit map will used by default Fast user switching will be off by default  The video-based adjustments are determined by running a variety of atomic tests after the video resolution and color depth have been automatically determined. If a specific atomic test takes too long to complete, then the corresponding visual effect is turned off by default. Microsoft added the visual-based adjustments to ensure a responsive user experience with the new user interface and visuals. The majority of systems will have all of the visuals on by default; a few systems with video driver or video adapter performance issues will be configured with the effects off by default.  The following effects are dynamically configured during setup: Slide taskbar buttons Use drop shadows for icon labels on the desktop Smooth edges of screen fonts Fade or slide menus into view Fade out menu items after clicking Fade or slide ToolTips into view Show shadows under menus Show translucent selection rectangle These visual effects and others can have dramatic impact on benchmark scores. Although we strongly recommend using the defaults because that is what most users will use, the configuring of visual effects settings can be done quite easily on Windows XP. To display the full list of easily configurable visual effects settings, right-click My Computer, select Properties, select the Advanced tab, and select the Settings button under Performance. The Performance Options dialog box is shown below in Figure 1. Figure 1: Performance Options dialog box used to manually configure visual effects. Disk Efficiency Optimizations The physical placement, or layout, of files on the disk can have a considerable effect on performance, up to 10% for normal use. Windows XP observes file usage patterns as the system is used. If deemed necessary, Windows XP will adjust the file layout at three day intervals. By placing files that are referenced together near each other on the disk, and towards the more dense outer edge of the disk, seek distances are reduced which results in shorter seek times and improved performance. The performance benefit of placing files becomes increasing important as the size of the disk increases. The files moved for more efficient layout are also kept contiguous. Windows XP does not intentionally fragment files as was done by some earlier versions of Windows. Even though the disk layout optimization does insure some files will be defragmented, it is not a complete substitute for fully defragmenting the disk. Users should still defragment their drives regularly. The built-in Windows XP defragmentation program understands the file layout directives and will position the files if they aren t already placed properly. However, it will not update the layout file with new information gathered in the last three days. Without manual intervention, the layout file, %windir%\Prefetch\Layout.ini, will only be updated once every three days. The contents of the Layout.ini file can be viewed with Notepad. Boot Prefetching Windows XP speeds up system boot by observing the code and data needed each time the system is booted and prefetching the necessary file contents early in the boot process. This prefetching is not done until the third boot of the system, when sufficient information is available to make the prefetching most effective. The files observed during system boot will be used in the disk layout process mentioned above. Additional information on the prefetcher and the Windows XP boot process can be found on the Web at  http://www.microsoft.com/hwdev/fastboot. Application-Launch Prefetching Windows XP also uses prefetching when launching applications. The files and the contents of the files accessed by each new process are observed and recorded. No prefetching can be done for the first launch of an application, so first launches are often considerably slower than subsequent launches. About 85% to 90% of the improvement is realized after just one launch of an application, with the remaining speed improvement coming after the system has had an opportunity to adjust the disk layout with information specific to this application. Benchmarking on a Dynamic and Self-Tuning Windows XP Benchmarking an operating system that is attempting to improve itself over time based upon observed usage patterns can be difficult. It becomes ever more difficult to benchmark if the operating system is also attempting to create dynamic system restore points when large amounts of applications are installed. Fortunately, there is a methodology that provides consistent results, accurately reflects the performance that Windows XP systems will achieve, and is fairly easy to follow. The basics of the methodology are: Install Install the OS and benchmark as normal. Run the benchmark one or more times. Use the applications in the benchmark as real users would. Let Idle Tasks Run Leave the system for a bit after using it, (up to three days for disk layout optimizations). Call the ProcessIdleTask API from advapi32.dll. Run the benchmark as usual. Idle Task Scheduling: The ProcessIdleTask API The file placement optimization, which is done no more often than once every three days, is an example of a task that is carried out when the system is deemed to be idle. System Restore and other features of Windows XP also attempt to defer some work until the system is deemed to be idle. There are also some done-once-after-setup work items that also operate under the Idle Task Scheduling mechanisms.  All of these  idle tasks  are controllable by a system API in advapi32.dll, ProcessIdleTasks. The API s sole purpose is to allow benchmarks a simple way to force any pending idle tasks to be executed immediately, without having to wait a lengthy period of time. The API ProcessIdleTasks can be called in one of two ways, from the command line or synchronously from a program.  To call ProcessIdleTasks from the command line, use this syntax: Rundll32.exe advapi32.dll,ProcessIdleTasks When called from the command line, the ProcessIdleTasks work is done in the background asynchronously. It can take 10 to 15 minutes for idle tasks to complete. Task Manager will report processes running, and the disk will likely be active during this time. The ProcessIdleTasks API takes no arguments and returns a standard Win32 error code. The definition is: DWORD ProcessIdleTasks() The API itself is synchronous, so it won t return until the idle tasks have completed. Other Testing Issues Clean Installation Preferred When benchmarking Windows XP we strongly recommend a clean installation using NTFS. There are several reasons why performance for a clean installation will tend to be superior to that for upgraded systems. An upgraded system will constrain the placement of files and file system data. The old disk format may not use an optimal file system cluster size. In a clean installation, the placement of file system data on the disk and the internal organization of that data can be optimized, resulting in a smaller system footprint and fewer and faster I/Os when using the system.  When performing a clean install, we recommend that NTFS be used and that the system be installed in a single partition on each disk. Under Windows XP, big partitions are better managed than in previous versions of Windows. Forcing installed software into several partitions on the disk necessitates longer seeks when running the system and software.  If you do choose an upgrade from Windows 2000 or Windows 9x, you may be working with a FAT32 file system. Performance will generally be better if the file system is left as it is, rather than converted to NTFS. A partition converted from FAT32 to NTFS may have to use 512-byte clusters, rather than 4096-byte or 8192-byte clusters, which can result in a higher number of fragmented files. Installation in 64 MB Differs from Installation in 128 MB Windows XP determines at setup time which, if any, operating system features will be turned off by default. In 64 MB there will be no background bitmap on the desktop and Fast User Switching will be disabled by default. Thus, an installation in 128 MB or more which is then restricted to using 64 MB of memory (for example by setting the MAXMEM option in boot.ini) will behave differently than would a proper installation in 64 MB. First and Second Boots Following Installation As noted in the previous section, Windows XP s fast boot only begins to operate on the third boot following installation. For the first boot there is simply no information available that would indicate what code or data needs to be prefetched. The first boot, moreover, must perform a large number of initialization and other one-time-only tasks. Consequently, using information about this boot as a template for subsequent boots would be a mistake. It is this second boot, therefore, that is observed and information about this boot is used for subsequent prefetching and disk layout optimizations. By the third boot, appropriate information is available that will greatly improve boot speed. We have found that about 90% of the speed improvement in boot will occur for the third boot, with the remaining 10% coming after the system has had a chance to lay out the files to improve disk efficiency. Windows Activation and Windows Update We recommend that you activate your Windows XP installation before using it to measure performance, because the activation detection will impose a slight cost on the system at some times and no cost at other times. The variability is the issue. Also, because users need to activate within a short period of time after installation, the vast majority of system use will be done after activation, which makes measurements taken after activation more realistic. Similarly, Windows Updates should either be applied or disabled so that the system will not try to check whether updates are available in the middle of benchmark runs. We believe most consumers will apply the updates so it is best to apply the updates before testing. Video Resolution  The video resolution chosen for the system will have a strong impact upon the sizes of bitmaps and other data structure in the kernel. If the graphics subsystem can support it, the default pixel color depth for Windows XP is 32 bits per pixel. If you are comparing Windows XP with a different version of Windows, it is important to ensure that the color depth for the two systems is matched. It is also best to try to use the same drivers for both using the most recent versions of drivers from the web or to take the default, inbox drivers for each system and compare default to default. Summary Windows XP can deliver excellent performance, but because it is more sophisticated than previous versions of Windows, care must be taken to obtain valid results. Understanding the issues described in this paper can help you arrive at better benchmarking practices and save time and effort For More Information For the latest information on Windows XP, check out our Web site at http://www.microsoft.com/windowsxp. To learn more about how Microsoft and its OEM partners are working to improve boot and resume times, read the "Fast Boot/Fast Resume for the Windows Platform" white paper on http://www.microsoft.com/hwdev/fastboot/.  PAGE   PAGE  Benchmarking On Windows XP  PAGE                                             Benchmarking On Windows XP gd9U; gduoV
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\opktools\docs\msd_tool.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corporation Windows XP TitleWindows XP Microsoft Corporation Normal Microsoft Corporation Microsoft Word 10.0urn:schemas-microsoft-com:office:smarttags country-region urn:schemas-microsoft-com:office:smarttags place SbF0bbjbjk Windows XP OEM Preinstallation Kit  Design Notes Microsoft( Windows( Family of Operating Systems Using the Mass Storage Device Installation Tool (MSDInst.exe) This white paper describes how to use the new mass storage device installation tool (MSDInst.exe) to add mass storage device drivers to an offline image. MSDInst.exe can be used on images created for: Windows XP Home Edition Windows XP Professional Windows XP 64-Bit Edition Windows .NET Server family of operating systems (32-bit and 64-bit editions) This tool also allows Original Equipment Manufacturers (OEMs) to add mass storage device drivers to an offline image without rebooting the image or rebuilding the operating system. As a result, OEMs can reduce the number of images they maintain. The information contained in this document represents the current view of Microsoft Corporation on the issues discussed as of the date of publication. Because Microsoft must respond to changing market conditions, it should not be interpreted to be a commitment on the part of Microsoft, and Microsoft cannot guarantee the accuracy of any information presented after the date of publication.  This white paper is for informational purposes only. Microsoft makes no warranties, express or implied, as to the information in this document. Microsoft Corporation may have patents or pending patent applications, trademarks, copyrights, or other intellectual property rights covering subject matter in this document. The furnishing of this document does not give you any license to the patents, trademarks, copyrights, or other intellectual property rights except as expressly provided in any written license agreement from Microsoft Corporation.  Microsoft does not make any representation or warranty regarding specifications in this document or any product or item developed based on these specifications. Microsoft disclaims all express and implied warranties, including but not limited to the implied warranties or merchantability, fitness for a particular purpose and freedom from infringement. Without limiting the generality of the foregoing, Microsoft does not make any warranty of any kind that any item developed based on these specifications, or any portion of a specification, will not infringe any copyright, patent, trade secret or other intellectual property right of any person or entity in any country. It is your responsibility to seek licenses for such intellectual property rights where appropriate. Microsoft shall not be liable for any damages arising out of or in connection with the use of these specifications, including liability for lost profit, business interruption, or any other damages whatsoever. Some states do not allow the exclusion or limitation of liability or consequential or incidental damages; the above limitation may not apply to you.   2001 Microsoft Corporation.  All rights reserved. Microsoft, Windows(, Win32, and Windows NT are trademarks or registered trademarks of Microsoft Corporation in the United States or other countries or regions. Other product and company names mentioned herein may be the trademarks of their respective owners. The Mass Storage Device Installation Tool The MSDInst.exe tool allows OEMs to change their existing offline images without booting into or recreating those images. This tool works best on an offline image which: Is accessible through your network. Has been run through the System Preparation (Sysprep) tool, specifically Sysprep  reseal (or Sysprep  factory). Has not been booted into. Requires new Mass Storage device drivers.  MSDInst.exe also allows OEMs to update areas in the registry and can be used on images created for: Windows XP Home Edition Windows XP Professional Windows XP 64-bit Edition Windows .NET Server family of operating systems (32-bit and 64-bit editions) Important MSDInst.exe runs directly and only from the Windows Preinstallation Environment (WinPE). You cannot use MSDInst.exe to update drivers that already exist on the image. Instead use [PNPDrivers] in the Winbom.ini file. You cannot use MSDInst.exe on images that have been prepared for installation by using the remote installation preparation (RIPrep) tool. Using MSDInst.exe Create a Sysprep.inf file with only the [SysprepMassStorage] section. In the [SysprepMassStorage] section, list the new mass storage devices listed that need to be added. Install MSDInst.exe on a computer which is connected to your network and is running WinPE. Open a command window and start MSDInst.exe with: The path to the new Sysprep.inf file. See the Sysprep.inf section of Ref.chm for more information about this path.  The path to the Windows directory that contains the image you want to update. For example: D:\i386\system32> msdinst.exe A:\Sysprep.inf E:\OPKTools\Image1 After you type the file paths, MSDInst.exe: Will take the PNPId from the new Sysprep.inf and add it to the critical device database, enabling the mass storage device driver to boot the system. Will install the necessary driver files and configure those drivers to start as specified in the .inf file.  Will update the Sysprep-clean section with all the new and updated registry information. Will open Sysprep.inf. Will search for driver files in these locations and in this order: The regular and compressed versions of the driver s .inf files in the same directory as originally specified in the new Sysprep.inf. For example, supermsd.sys may be one of the driver s .inf file. MSDInst.exe looks for supermsd.sys first and also looks for supermsd.sy_ (a compressed version of supermsd.sys) if it exists. All the files in the offline image s driver.cab.  All the files in the offline image s driver.cab present in the source media. Offline image s sourcepath directory for the regular and compressed versions of each driver s .inf file.  Important MSDInst.exe completes steps 2 and 3 only if the driver file is found in the offline image s drvindex.inf file.  Contact Information If you are installing Windows XP Home Edition, Windows XP Professional, or Windows XP 64-Bit Edition, please send any feedback or questions on this process to your account manager, technical account manager, or system engineer. Your account manager is your main contact at Microsoft Corporation for any questions you may have about MSDInst.exe. If you are installing the Windows .NET Server family of operating systems, you may also send e mail to winopk@microsoft.com until the complete release of Windows .NET Server family of operating systems. Using the Mass Storage Device Installation Tool (MSDInst.exe)  PAGE
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\opktools\docs\ntfs_preinstall.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corporation Windows Platform Design Notes Introduction NTFS Features and Benefits     Features     Recoverability     Scalability NTFS Performance     Disk-Layout Optimizations for NTFS Volumes     MFT Optimization for NTFS Volumes     MFT and NTFS Conversion Optimizations     Cluster Alignment for NTFS vs. FAT     Disk Size/Partition Size Performance Implementing NTFS     WinPE and Disk Configuration     Legacy Methods     Notes on Preinstallation Tools and NTFS Title HeadingsWindows Platform Design Notes Microsoft Corporation Normal Microsoft Corporation Microsoft Word 10.0 "System "Franklin Gothic Medium Windows Platform Design Notes. "Arial Design Information for the Microsoft8  Windows  Family of Operating Systems "Arial NTFS Preinstallation  Windowss "Arial Abstract5 "Arial This paper describes the benefitso4  for system manufacturers  of using  the a WindowstQ NT File System (< NTFS<  on sw ystems with ' bit versions of . MicrosoftoE "Arial WindowstQ  XP operating systems. This paper replaces an earlier white  paper titled  Converting FAT32 to NTFS during Windows  Whistler  Preinstallation The most current version of this file is provided on the web at http://go.microsoft.com/fwlink/?LinkId=5896.. July w* , 2001 Contents6 Introduction ................................ ................................ ................................ ................................ ............. Times New Roman NTFS Features and Benefits0 ................................ ................................ ................................ .................. Features) ................................ ................................ ................................ ................................ ............ Recoverability0 ................................ ................................ ................................ ................................ Scalability ................................ ................................ ................................ ................................ .......... NTFS Performance0 ................................ ................................ ................................ ................................ Disk0 Layout Optimizations for NTFS Volumes ................................ ................................ ................... MFT Optimization for NTFS Volumesu7 ................................ ................................ ................................ FT and NTFS Conversion Optimizations) ................................ ................................ .......................... Cluster Alignment for NTFS vs. FAT0 ................................ ................................ ................................ Disk Size/Partition Size Performance0 ................................ ................................ ................................ Implementing NTFS ................................ ................................ ................................ ................................ WinPE and Disk ConfigurationA ................................ ................................ ................................ .......... Legacy Methods% ................................ ................................ ................................ ................................ Notes on Preinstallation Tools and NTFS ................................ ................................ ........................ Microsoft does not make any r.7 epresentation or warranty regarding specifications in this document or any  product or item developed based on these specifications. Microsoft disclaims all express and implied  warranties, including but not limited to the implied warranties or merchantabili/ ty, fitness for a particular . purpose and freedom from infringement. Without limiting the generality of the foregoing, Microsoft does % not make any warranty of any kind that any item developed based on these specifications, or any portion % of a specification,  will not infringe any copyright, patent, trade secret or other intellectual property right of  any person or entity in any country. It is your responsibility to seek licenses for such intellectual property  rights where appropriate. Microsoft shall not be l iable for any damages arising out of or in connection  with the use of these specifications, including liability for lost profit, business interruption, or any other  damages whatsoever. Some states do not allow the exclusion or limitation of liability or co % nsequential or  incidental damages; the above limitation may not apply to you.  The information contained in this document represents the current view of Microsoft Corporation on the  ) issues discussed as of the date of publication. Because Microsoft must ren spond to changing market l" conditions, it should not be interpreted to be a commitment on the part of Microsoft, and Microsoft cannot h" guarantee the accuracy of any information presented. This document is for informational purposes only.  % MICROSOFT MAKE7  NO WA RRANTIES, EXPRESS OR IMPLIED, IN THIS DOCUMENT. Microsoft,  DOS, Win32, 0 Windows, and Windows NT are trademarks or registered trademarks of  Microsoft Corporation in the United States and/or other countries. Other product and company names  mentioned herei n may be the trademarks of their respective owners.  2001 Microsoft Corporation. All rights reserved.1 "Arialurn:schemas-microsoft-com:office:smarttags Month 4QZT$T%*&J =Tc\"7z g&I3\q< C8'pA nr^39 xB,=Q tGCLa 0/gQ0 COV'1 Ja=9f %66dF X<6nn ibThd N^K_v mdS[x 3[dMvQ OiOh- 1pI>w 9>f3r 2V\ac N~=S(~ 4?>S` $j-Fb -3~8w ;~=K* |a}.HM ZhVk_ 6cNZk ^*|M)Qk{ c=F>V yF>~6/2 Q/%q!9Xbf%J 9X\<9 k+Qb- |#w?\p %o?T  rNNt? %~|Nu=7U ?~3~8 vi^]r #~3~8w 8um1U ){pJN ||3J> j]$F~b =EF?_/: ?~3~8 dc6i^] }8o&8 8um1U =.$_B {gy\H Q+pgN pGy=J .$-~$v h2rNh |f_.d |i^]bG yk V}J '-~$v i^]bH TG^KZ &-~r#*bjbjk Windows Platform Design Notes Design Information for the Microsoft  Windows  Family of Operating Systems NTFS Preinstallation and Windows Abstract This paper describes the benefits for system manufacturers of using the Windows NT File System (NTFS) on systems with 32-bit versions of Microsoft  Windows  XP operating systems. This paper replaces an earlier white paper titled  Converting FAT32 to NTFS during Windows  Whistler  Preinstallation. The most current version of this file is provided on the web at http://go.microsoft.com/fwlink/?LinkId=5896. July 9, 2001  Contents Introduction NTFS Features and Benefits Features Recoverability Scalability NTFS Performance Disk-Layout Optimizations for NTFS Volumes MFT Optimization for NTFS Volumes MFT and NTFS Conversion Optimizations Cluster Alignment for NTFS vs. FAT Disk Size/Partition Size Performance Implementing NTFS WinPE and Disk Configuration Legacy Methods Notes on Preinstallation Tools and NTFS Microsoft does not make any representation or warranty regarding specifications in this document or any product or item developed based on these specifications. Microsoft disclaims all express and implied warranties, including but not limited to the implied warranties or merchantability, fitness for a particular purpose and freedom from infringement. Without limiting the generality of the foregoing, Microsoft does not make any warranty of any kind that any item developed based on these specifications, or any portion of a specification, will not infringe any copyright, patent, trade secret or other intellectual property right of any person or entity in any country. It is your responsibility to seek licenses for such intellectual property rights where appropriate. Microsoft shall not be liable for any damages arising out of or in connection with the use of these specifications, including liability for lost profit, business interruption, or any other damages whatsoever. Some states do not allow the exclusion or limitation of liability or consequential or incidental damages; the above limitation may not apply to you.  The information contained in this document represents the current view of Microsoft Corporation on the issues discussed as of the date of publication. Because Microsoft must respond to changing market conditions, it should not be interpreted to be a commitment on the part of Microsoft, and Microsoft cannot guarantee the accuracy of any information presented. This document is for informational purposes only. MICROSOFT MAKES NO WARRANTIES, EXPRESS OR IMPLIED, IN THIS DOCUMENT. Microsoft, MS-DOS, Win32, Windows, and Windows NT are trademarks or registered trademarks of Microsoft Corporation in the United States and/or other countries. Other product and company names mentioned herein may be the trademarks of their respective owners.  2001 Microsoft Corporation. All rights reserved. Introduction NTFS is the recommended file system for computers running the Microsoft Windows XP operating systems. Microsoft strongly encourages system manufacturers to manufacture single NTFS volumes on all systems where a 32-bit version of Windows XP is preinstalled.  Benefits for end-users. Preinstallation of NTFS offers many end-user benefits related to functionality, security, stability, availability, reliability, and performance: Support for large hard drives. Hard-drive vendors expect to deliver drive-size capacities in excess of 127 GB in the near future. Windows XP and Windows 2000 provide native support for NTFS volumes on such large sizes, while a FAT32 volume is only supported for sizes only up to 32 Support for large file sizes. Under Windows XP and Windows 2000, NTFS supports a maximum file size of up to the disk size, while FAT32 supports a maximum file size of only 4 GB. Windows XP delivers new features (such as support for acquiring and editing video files) that frequently result in creation of files which exceed 4 GB in size. Simple management of single disk partitions. Feedback from customers and system manufacturers indicate that users want single volumes because they do not want to manage multiple volumes and do not understand multiple-volume usage scenarios. Improved performance. Feedback from customers and manufacturers indicates that users want systems optimized for general performance and boot times. New file system features, boot time improvements, and other performance improvements in Windows XP have been implemented only for NTFS, as described later in this paper. Benefits for system manufacturers. In addition to delivering the benefits listed here for end users, preinstalling systems with NTFS offers these benefits for the system manufacturer: No reboot is required between the volume creation and formatting steps in the preinstallation process. MFT size and location are optimal for the hard drive. DISKPART and FORMAT take approximately 90 seconds for large hard drives. Because NTFS can support volumes larger than 32 GB, the manufacturer can simplify disk formatting while ensuring customer satisfaction by delivering a single volume on disk drives that are larger than 32 GB. To help manufacturers gain the benefits of NTFS and also deliver the performance, security, and other benefits for end users, Microsoft has provided manufacturing tools (described later in this paper) that can be used to easily and correctly convert FAT32 volumes to NTFS as a late step in the preinstallation process. More information is provided at the end of this paper. NTFS Features and Benefits NTFS, which was originally introduced with Windows NT 3.1, has always provided advanced file system features such as security, transacted operations, large volumes, and better performance on large volumes. Such capabilities are not available on either FAT16 or FAT32. This section summarizes the basic features and the recoverability and scalability benefits for NTFS. The following section describes performance benefits. Features With Windows NT 4.0, Windows 2000, and Windows XP, Microsoft has continued to deliver new features and enhance performance for NTFS that are either unavailable or difficult to implement on FAT32. Following is a subset of NTFS features: Security and access control Distributed link tracking Hard links for files Symbolic links for directories More efficient context indexing File compression File encryption Volume shadow copy backup Flexible metadata support for attributes, properties, and streams Ability to mount a local drive to a folder on an NTFS volume Recoverability NTFS is a journaling file system. NTFS writes a log of changes being made, which offers significant benefit in cases where a system loses power, experiences an unexpected reset, or crashes. NTFS can quickly return the disk to a consistent state without running CHKDSK. This yields a better user experience and results in fewer support calls. In contrast, the FAT file system must always run CHKDSK to recover if a system outage occurs. With extremely large hard drives, CHKDSK can take a very long time to complete, and this lengthy time and other problems often results in customer support calls. Scalability Both FAT16 and FAT32 have scaling and compatibility limitations that NTFS does not. An NTFS volume is capable of scaling on very large disk sizes with a single partition. The theoretical limit of an NTFS volume using 4K cluster size is 264 * 4K.  NTFS also supports much larger file sizes in contrast to the 4-GB file size limitation under FAT. In many current usage scenarios, a 4-GB file-size limitation is unacceptably small. For example, 4 GB is the file size for approximately 18 minutes of video downloaded from a digital-video recorder, and a FAT volume cannot contain a full-length MPEG-encoded movie. The following tables describe the file and volume size constraints of NTFS, FAT16, and FAT32 file systems. Table 1. FAT16 and FAT32 Cluster Size1  Disk size Required cluster size for a FAT32 volume  16 GB  64 GB  128 GB 32K (the largest cluster size Windows 95/98 tools can handle)  256 GB 64K (not supported by Windows 95/98 or Windows Me) Clusters are an allocation unit of disk space for files. Cluster size is determined by the size of the disk. Large cluster sizes mean lower disk space efficiency.  For example, a 1-byte file requires 32K of disk space if the disk has 32K clusters. Table 2. Size Constraints for FAT16, FAT32, and NTFS Description FAT16 FAT32 Maximum file size   1 bytes  1 bytes  64K bytes (design to 264  Files per volume Minimum volume size 4085 clusters 65535 clusters Maximum volume size 65536  12 clusters  Maximum volume size: 2 GB Theoretical: 228 clusters. Actual:  Windows 2000: Can format to 32 GB; can mount and convert larger volumes Windows ME: Up  12 clusters Windows 95/98: 4,177,918 clusters Theoretical: 264 clusters Actual: 232 clusters Cluster size For all file systems: Windows NT/Windows 2000: A power of 2 between 512 bytes and 65536 bytes, inclusive Windows 95/98/ME: A power of 2 between 512 bytes and 32768 bytes, inclusive Directory size  2 physical directory entries; special limits on root directory  2 physical directory entries No limit  NTFS Performance Disk subsystem performance is a critically important factor in overall system performance, and NTFS is generally believed to be slower than FAT. However, with a correctly created NTFS volume, NTFS performance optimizations, and improved disk defragmentation; NTFS performance (including the extra  journaling ) is equivalent to FAT on small disks and is faster than FAT on large disks. Furthermore, NTFS performs well when reading, writing, and mounting large volume sizes. FAT32 performance is reduced for volumes larger than 32 GB in two areas: Boot time with FAT32 is increased because of the time required to read all of the FAT structure. This must be done to calculate the amount of free space when the volume is mounted. Read/write performance with FAT32 is affected because the file system must determine the free space on the disk through the small views of the massive FAT structure. This leads to inefficiencies in file allocation. The following sections describe optimizations in Windows XP for disk layout, Master File Table location, and cluster alignment for NTFS volumes. Disk-Layout Optimizations for NTFS Volumes Microsoft implemented certain disk-layout optimizations in Windows XP. To perform this optimization, during idle time Windows XP moves pages used for booting the system and launching frequently used applications to ensure these files are laid out contiguously on the hard disk. The contiguous disk layout of these pages results in reduced disk seeks and improved disk I/O, contributing to improved boot time and application launch time.  This optimization is implemented only for NTFS, and Windows XP does not perform these optimizations across volumes. Therefore, for this optimization to be available to users, the hard disk must be partitioned as a single NTFS volume. MFT Optimization for NTFS Volumes When a volume is formatted with NTFS, a Master File Table (MFT) and other special file system metadata files are created. The MFT is an important data structure for NTFS, consisting of many 1K MFT entries that define all items in the file system. All information about a file including its size, time and date stamps, permissions, and data content is stored within or described by MFT entries. In Windows 2000 and earlier versions of Windows NT, the MFT was typically placed at the start of the disk space available to the file system. In Windows XP, the NTFS format utilities place the MFT forward by 3 GB, which has been found to improve system performance by 5 to 10 percent. Windows XP optimizes boot performance on NTFS volumes by limiting the amount of MFT information read into memory. For example, consider a 71GB drive partitioned as indicated in the follows: Volume Contents Operating system and all files 25 GB Empty 25 GB Empty 13 GB Empty In this example, Windows XP reads ~200K of information at system boot time if E, F, and G are NTFS volumes; however, Windows XP reads ~19MB of information at boot if E, F, and G are FAT32 volumes. Implementation of an NTFS volume leaves more system memory available for user applications. MFT and NTFS Conversion Optimizations For best performance, it is also important that the MFT be stored in a contiguous location on disk. The new /cvtarea flag for the Windows XP version of CONVERT (described later in this paper) allows system manufacturers to implement a manufacturing process that results in a properly located contiguous MFT for NTFS volumes. The following illustration compares the location of the MFT before, during, and after conversion of a FAT32 to NTFS volume. Figure 1. Convert-friendly FAT32, ensuring the NTFS MFT is contiguous Cluster Alignment for NTFS vs. FAT On NTFS volumes, clusters start at sector zero; therefore, every cluster is aligned on the cluster boundary. For example, if the cluster size was 4K and the sector size was 512 bytes, clusters will always start at a sector number that is a multiple of 4096/512   for example, 8. However, FAT file system data clusters are located after the BIOS Parameter Blocks (BPB), reserved sectors, and two FAT structures. FAT formatting cannot guarantee that data clusters are aligned on a cluster boundary.  In Windows 2000, CONVERT handled this problem by forcing an NTFS cluster size of 512 bytes, which resulted in reduced performance and increased disk fragmentation. In Windows XP, CONVERT chooses the best cluster size (4K is the ideal). To maximize NTFS performance, Windows XP FORMAT and the new OFORMAT tool formats a new file system as FAT or FAT32, ensuring that the data clusters are aligned on at least a 4K boundary and that the FAT32 cluster size is 4K or larger.  Figure 2. FAT32 vs. NTFS cluster alignment Disk Size/Partition Size Performance Hard-disk performance benchmarks comparing Windows 2000 and Windows XP (after beta 2) show better performance under Windows XP for both large disks and large partitions.  For example, comparing performance under Windows 2000 for a 75-GB hard disk partitioned with multiple smaller volumes versus a single volume shows that disk performance drops by about five to ten percent for the single large volume. However, when comparing disk performance for the same small versus single large volume configuration under Windows XP, performance drops by only one to two percent for the single large volume.  This improved performance results from the combination of performance improvements described earlier, plus the improved ability under Windows XP to manage large disks and large partitions. Implementing NTFS This section describes two methods for implementing NTFS when preinstalling Windows XP on new systems. WinPE and Disk Configuration The best practice for creating an NTFS volume is to use DISKPART and FORMAT, which are provided to system manufacturers as part of the Windows Preinstallation Environment (WinPE) utilities. Complete documentation for DISKPART and FORMAT is provided in the Windows XP Help files. The following shows a sample command file and script for these utilities to create and format a single NTFS volume: CFGDISK.CMD ------------- DISKPART /s DISKSCR.TXT FORMAT C: /fs:ntfs /q /v: ------------- DISKSCR.TXT ------------- select disk 0 create partition primary assign letter c ------------- Legacy Methods Improved utilities are available to assist system manufacturers who are not able to transition immediately to the new Windows Preinstallation Environment. The basic process is as follows: Use the FDISK utility to create a single disk partition. Use the OFORMAT utility to format the disk and properly align FAT clusters. Use the CVTAREA utility to create a reserved contiguous file for use in the conversion from FAT32 to NTFS. Use the new Windows XP version of the CONVERT utility to convert the volume to NTFS. The following summarizes key information about these utilities and describes the actual steps in creating, formatting, and converting a disk partition to NTFS during the factory preinstallation process for Windows XP. OFORMAT. This utility is based upon the Windows 98 Second Edition FORMAT tool but has these important modifications to allows it to work efficiently in a system manufacturer s scripting environment: OFORMAT does not prompt for confirmation before formatting a disk.  OFORMAT does not perform verification of sectors. This makes it significantly faster than the conventional FORMAT utility. The new /A command-line option causes OFORMAT to align FAT data clusters at a specified sector. Specifically, the /A:8 option can be used to format the volume so that the FAT data clusters are aligned at 4K boundaries. Important: Because sectors are 512 bytes, the OFORMAT command must be used with the /A:8 option to create a FAT volume that can be efficiently converted to NTFS.  Complete documentation for OFORMAT is provided in the Opk.chm in the \Support\Tools\Deploy.Cab on the Windows XP distribution disk. CVTAREA. This is a new utility for creating files on FAT file systems. It allows explicit placement of the files it creates, and is intended for use in creating files for use later with the convert /cvtarea:<filename> command. If you are creating a file for use with the convert /cvtarea option, the CVTAREA file (Cvtarea.tmp) should be 500 MB in size starting at 3 GB on the disk. Note that the largest file that CVTAREA will create is 4 GB, because this is the largest file size that the FAT file system supports. Immediately after formatting the FAT32 volume in the preinstallation process, you should use the CVTAREA tool supplied in the OPK to create a reserved contiguous file that will be used later in the conversion from FAT32 to NTFS.  Complete documentation for CVTAREA is provided in the Opk.chm in the \Support\Tools\Deploy.Cab on the Windows XP distribution disk. CONVERT. This tool is included as part of Windows XP. The Windows XP version of the CONVERT utility has been enhanced from the Windows 2000 version in the following ways: Performance. CONVERT should complete in less than 90 seconds, regardless of hard drive size. This is significantly faster than the Windows 2000 version of the CONVERT utility. Cluster size. Windows XP CONVERT creates the best possible cluster size according to the existing FAT format. If you first use oformat /A:8, the Windows XP CONVERT process will result in an efficient 4K cluster size, providing better end-user performance than a 512-byte cluster size. (The CONVERT tool in Windows 2000 always created a volume with 512-byte cluster sizes.)  Use of a  convert-area  file. Using the /cvtarea option with Windows XP CONVERT allows you to explicitly reserve and place the Master File Table. This can result in a five to ten percent gain in system performance in desktop benchmarks. Application of security policy. By default, Windows XP CONVERT applies a security template to a converted NTFS volume to ensure the resulting volume has the same security as a natively created NTFS volume. If required, this can be prevented by using the /NoSecurity switch. Option to skip CHKDSK during conversion of a system volume. The /nochkdsk option is safe to use in OPK environments and can save about 30 seconds during conversion of a system volume. The following steps describe the process for correctly preparing a hard drive for an optimal conversion from FAT32 to NTFS.  To prepare a hard drive for an optimal conversion from FAT32 to NTFS Create an MS-DOS  startup disk on a machine running Windows XP.  Add the following utilities to startup disk: FDISK from Windows ME OFORMAT and CVTAREA from Deploy.cab in the Support subdirectory of the Windows XP product CD. Boot MS-DOS. Run FDISK and create a single partition for the entire drive. Reboot MS-DOS. Run oformat c: /a:8 /v:"" /q Run cvtarea c:\cvtarea.tmp 500 MB /contig /firstcluster xx gb where xx is the appropriate file size in relation to disk size, as listed in the following table. Disk size Recommended location  8 GB or smaller 8 GB or larger Start the regular OPK installation for Windows XP. You may now copy operating system and application files to the FAT32 volume and perform your usual MS-DOS-based OPK process. After Windows XP has been installed, convert the volume to NTFS using the procedure in the next step. Run convert c: /fs:ntfs /cvtarea:cvtarea.tmp /nochkdsk Notes on Preinstallation Tools and NTFS Microsoft strongly encourages system manufacturers to implement single NTFS volumes when preinstalling Windows XP. The following notes briefly summarize issues in relation to preinstallation tools and processes.  FAT32-based manufacturing tools can be used. For Windows XP preinstallations, you can continue to use current tools to manufacture FAT32 volumes, except the Windows ME version of FDISK must be used. This revised version of FDISK correctly calculates disk sizes on large drives. Microsoft also provides straight-forward methods for converting FAT32 volumes to NTFS, as described in the previous section  New tools reduce manufacturing time and optimize performance. With Windows XP, Microsoft is providing in new manufacturing tools (as described earlier in this paper) that will help minimize manufacturing time for preinstalling Windows and maximize the Windows preload performance for end users. New WinPE-based imaging tools are available that support NTFS. Third-party imaging utilities are being converted to the Windows Preinstallation Environment, replacing old MS-DOS-based tools. However, some MS-DOS-based versions do now support NTFS. Win32 -based recovery solutions can access NTFS volumes. Manufacturers may believe that implementation of a single NTFS volume will not work with their system recovery solutions. However, several manufacturers are now using WinPE to develop and deliver Win32-based recovery solutions that can access NTFS volumes.  NTFS can lead to decreased support calls. The temptation for the manufacturer may be to preinstall with FAT32 and let the end-user choose to convert to NTFS. However, typical users do not understand or may be unaware of the issues for such decisions. Microsoft encourages manufacturers to deliver systems with NTFS volumes to ensure that users receive the most secure, reliable, and stable Windows installation possible. The expected outcome of preinstalling NTFS for manufacturers will be decreased support calls for both the OEM and Microsoft.  STYLEREF  Title  \* MERGEFORMAT  NTFS Preinstallation and Windows XP  PAGE   2001 Microsoft Corporation. All rights reserved.   STYLEREF  Version  \* MERGEFORMAT  July 9, 2001 gd7O. gd7O. gd7O. gd7O. gd7O. gd7O. gd7O. vriciv gd7O. gd7O. gd7O. gd7O. gdM2O gdM2O gdM2O gdM2O
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\opktools\docs\kernel_enhancements_for_windows_xp.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Windows Platform Design Notes TitleWindows Platform Design Notes Normal Microsoft Word 10.0urn:schemas-microsoft-com:office:smarttags PlaceName urn:schemas-microsoft-com:office:smarttags PlaceType urn:schemas-microsoft-com:office:smarttags urn:schemas-microsoft-com:office:smarttags urn:schemas-microsoft-com:office:smarttags country-region urn:schemas-microsoft-com:office:smarttags place MonthWindows Platform Design Notes Designing Hardware for the Microsoft( Windows( Family of Operating Systems Kernel Enhancements for Windows Abstract: Microsoft has made many enhancements to the kernel of the Microsoft  Windows  XP and Windows .NET Server operating systems. This paper provides an overview of the new features and changes in the kernel for these versions of Windows, intended for system and peripheral designers, driver developers, and firmware developers who are creating products for these operating systems.  This paper assumes that the reader is familiar with related concepts and issues for Windows 2000. For information, see the Windows Driver Development Kit (DDK; http://www.microsoft.com/ddk/) and the Windows 2000 Resource Kit (available through MSDN Professional subscription or through Microsoft Press).  October 15, 2001 The information contained in this document represents the current view of Microsoft Corporation on the issues discussed as of the date of publication. Because Microsoft must respond to changing market conditions, it should not be interpreted to be a commitment on the part of Microsoft, and Microsoft cannot guarantee the accuracy of any information presented. This document is for informational purposes only. MICROSOFT MAKES NO WARRANTIES, EXPRESS OR IMPLIED, IN THIS DOCUMENT. Microsoft Corporation may have patents or pending patent applications, trademarks, copyrights, or other intellectual property rights covering subject matter in this document. The furnishing of this document does not give you any license to the patents, trademarks, copyrights, or other intellectual property rights except as expressly provided in any written license agreement from Microsoft Corporation.  Microsoft does not make any representation or warranty regarding specifications in this document or any product or item developed based on these specifications. Microsoft disclaims all express and implied warranties, including but not limited to the implied warranties or mer chantability, Fitness for a particular purpose and freedom from infringement. Without limiting the generality of the foregoing, Microsoft does not make any warranty of any kind that any item developed based on these specifications, or any portion of a specification, will not infringe any copyright, patent, trade secret or other intellectual property right of any person or entity in any country. It is your responsibility to seek licenses for such intellectual property rights where appropriate. Microsoft shall not be liable for any damages arising out of or in connection with the use of these specifications, including liability for lost profit, business interruption, or any other damages whatsoever. Some states do not allow the exclusion or limitation of liability or consequential or incidental damages; the above limitation may not apply to you.  Microsoft, MSN, Win32, Win64, Windows, and Windows NT are trademarks or registered trademarks of Microsoft Corporation in the United States and/or other countries. Other product and company names mentioned herein may be the trademarks of their respective owners. Microsoft Corporation. All rights reserved. Contents Introduction Registry Enhancements Larger Registries Faster Queries Windows Support Enhancements Kernel Changes for Improved Debugging Built-in User Heap Leak Detection Additional Heap Counters I/O Subsystem New Cancel Queue File System Filter Driver APIs Improved Low-Memory Performance I/O Throttling DMA Improvements WebDAV Redirector System Restore Volume Snapshot Service Changes in Existing I/O Features Read-Only Kernel and HAL Pages New APIs Memory Management Logical Prefetcher for Faster Boot and Application Launch Scalability Improvements Due to Reduced Lock Contention Improved Caching and Backup Due to Dynamic Paged Pool Usage Improved Server Scaling Due to Individual Page Charging Improved Terminal Server and Network Server Scaling Support of Giant Drivers Due to Increased Number of System PTEs Support of Direct Execution from ROM Power Management Improved Boot and Logon Performance Boot Loader Improvements Operating System Boot Improvements Operating System Hibernation Improvements Standby Resume Improvements Windows XP Boot and Resume Tools Headless Support Providing Out-of-Band Management Implementing Headless Support Designing Hardware and Firmware Hot-Add Memory and Memory Mirroring Support ccNUMA Support Per Node Memory Allocation Per Node Scheduling OEM Support for ccNUMA Static Resource Affinity Table How Windows Can Use SRAT Support for New Hardware Intel Itanium Support Benefiting from 64-bit Architecture Designing for 64-Bit Compatible Interfaces Components Removed Windows Logo Program Requirements References Acronyms Introduction The information in this article applies for the Microsoft  Windows  XP and Windows .NET Server operating systems. Where any reference states  Windows  the information also applies for Windows .NET Server, unless differences are stated explicitly. Microsoft has made substantial enhancements to the kernel at the core of Windows XP. Kernel improvements are significant because the kernel provides low-level operating system functions, including thread scheduling, interrupt and exception dispatching, multiprocessor synchronization, and a set of routines and basic objects used by the rest of the operating system to implement higher-level constructs.  This paper describes the kernel improvements for Windows XP, which include: Registry   Larger registries, limited only by available system disk space. Improved algorithms for faster queries. Support Enhancements   Cross-session debugging, new quit and detach command for debugging without killing the application, and built-in user mode heap-leak detection. I/O Subsystem   New input/output (I/O) interfaces for performance enhancement, while retaining compatibility with Windows 2000 drivers. File System Filter driver application programming interface (API) improvements. Support for performance measurements in retail code, and improved low-memory performance. Memory Management   Broad range of improvements, including logical prefetch to improve boot and logon performance, reduced paged pool usage, enhanced terminal server support, support of giant drivers, and Windows XP execution from ROM.  Power Management   Native support for processor performance control such including Intel SpeedStep Technology, AMD PowerNow!, and Transmeta LongRun for longer mobile PC battery life. Hibernate, standby, and resume performance have been greatly improved. Improved Boot and Logon Performance   When a Windows XP-based system is first booted, data is saved about all logical disk read operations. On later boots, this information is used to pre-fetch these files in parallel with other boot operations. Headless Support   For  lights-out  datacenter deployment and remote administration. ccNUMA Support   Provides better performance for Cache Coherent Non Uniform Memory Architecture (ccNUMA) computers, as well as an interface to let applications tailor their execution characteristics in the ccNUMA environment. The Windows XP kernel improvements provide new opportunities for independent software vendors (ISVs) and independent hardware vendors (IHVs), and other value-added providers working with Windows 2000. Windows XP provides compatibility with Windows 2000 devices and drivers, while providing new APIs, enhancements, and other features that can be leveraged into future products and services. Registry Enhancements As with Windows 2000, the registry plays a key role in the configuration and control of Windows XP. The registry, which resides on the disk as multiple files called hives, was originally designed as a repository for system configuration data. Although most people think of the registry as static data stored on the hard disk, it is also a window into various in-memory structures maintained by the Windows XP executive and kernel.  The registry code is redesigned for Windows XP, providing enhanced performance while remaining transparent to applications by using existing registry programming interfaces. Windows XP registry enhancements provide performance improvements, including the following areas: Converting a delayed close table to a Least Recently Used (LRU) list Reducing Kernel Control Block (KCB) lock contention with do not lock registry exclusive and do not touch volatile info Providing a security cache to eliminates duplicate security descriptors The new registry implementation delivers two key benefits: Larger registries Faster queries Larger Registries Windows XP supports larger registries than previous versions of the kernel, which were effectively limited to about 80 percent of the total size of paged pool. The new implementation is limited only by available system disk space. A tendency to use the registry more like a database developed among registry consumers, which increased demands on registry size. The original design of the registry kept all of the registry files in the paged-pool, which, in the 32-bit kernel, is effectively limited at approximately 160 MB because of the layout of the kernel virtual address space. A problem arose because, as larger registry consumers such as Terminal Services and COM appeared, a considerable amount of paged-pool was used for the registry alone, potentially leaving too little memory for other kernel-mode components.  Windows XP solves this problem by moving the registry out of paged pool and using the cache manager to do an in-house management of mapped views of the registry files. The mapped views are mapped in 256K chunks into system cache space instead of paged pool. Faster Queries Another issue that affected registry performance in earlier versions is the locality problem. Related cells are spread through the entire registry files. Accessing certain information, such as attributes of a key, could degenerate into page-faults, which lowers performance. The Windows XP registry uses an improved algorithm for allocating new cells that keeps related cells in closer proximity such as keeping cells on the same page or nearby pages, which solves the locality problem and reduces the page faults incurred when accessing related cells. A new hive structure member tracks freed cells instead of relying on linked freed cells. When future cells are allocated, the freed cell list and a vicinity argument are used to ensure the allocation is in the same bin as the hive. Windows XP improves the way the registry handles big data. In versions before Windows XP, if an inefficient application constantly increased a value with a small increment, it created a sparse and wasteful registry file. Windows XP solves this problem with a big cell implementation where cells larger than 16K are split into increments of 16K chunks. This reduces fragmentation when the data length of a value is increased within a certain threshold. Windows Support Enhancements Numerous product support enhancements have been built into Windows XP and Windows .NET Server, including enhancements to the kernel that improve the debugger shipped with Windows XP and the DDK. These enhancements include: Kernel changes for improved debugging Built-in heap leak detection New heap performance counters Kernel Changes for Improved Debugging The debuggers for Windows XP have been redesigned and include tools such as Windbg, Kd, and Cdb. Although the new debugger also works with Windows NT  4 and Windows 2000, some features are only available when debugging Windows XP. There is also a 64-bit version of all of the debuggers to debug Intel Itanium-based servers running Windows Kernel enhancements available only for debugging under Windows Cross-session debugging Quit and detach Debugging over an IEEE 1394 port  Dynamic control over debug-child flag Improved kd serial bandwidth usage Loading updated driver files through kd Control over whether terminating a debugger also terminates the debuggee The Windows XP debugger and debugger documentation are available at http://www.microsoft.com/ddk/debugging/ Cross Session Debugging Windows XP supports cross-session debugging. Previously, all debugging was done against the Microsoft Win32  environment subsystem (Csrss.exe) running on the computer. This caused potential problems, because on Terminal Services each client has its own Csrss process, so that debugging could not be done across terminal sessions. For example, if User1 logged in running Notepad, a second user, such as a system administrator, couldn t perform a terminal session into the same server and debug User1 s Notepad process. The debugger code for Windows XP, along with accompanying kernel changes, supports such cross session debugging scenario.  Quit and Detach Windows XP makes it possible to debug a user-mode application and then detach the debugger, without killing the application. This functionality is supported by a new debugger command, qd (quit and detach), which supports detaching the debugger from an application. The debugger command q has the default behavior of killing the application.  Example: Using Quit and Detach Using Windows XP, it is possible to investigate an application with a non-crashing problem without killing the application. To investigate the application, follow these steps: Attach to the process using the debugger. Debug the application. Detach the debugger using qd Example: Using QD and the Dump Command When debugging a production machine or other computer you don t want to block with debugging, you can take advantage of qd and .dump command; these commands let you generate a dump file for the file. The .dump command works on any version of Windows NT 4, Windows 2000, or Windows XP if you use the new Windows XP debugger. To use qd and .dump Attach to the process using the debugger. Generate a dump file for the application, using the .dump command. Detach the debugger using qd Analyze the dump file using the debugger (WinDBG -z <dumpfile>) without disturbing the original application. Debugging over an IEEE 1394 port The debugger and debuggee machines running Windows XP can be connected via IEEE 1394 ports. IEEE 1394 provides much better debugger performance than serial port debugging. For details about how to use IEEE 1394 debugging and other debugger features, see http://microsoft.com/ddk/debugging/ Dynamic Control over Debug-child Flag When a process is created for debugging, either the DEBUG_PROCESS or DEBUG_ONLY_THIS_PROCESS flag is used, indicating whether child processes should also be debugged. DebugActiveProcess always debugs with the DEBUG_ONLY_THIS_PROCESS flag. Prior to Windows XP, these flag settings were permanent, but system changes in Windows XP now allow the state of the flag to be changed. This allows debuggers more flexibility in whether child processes are debugged, because the flag can be changed at any time. Improved kd Serial Bandwidth Usage Improvements in the kernel debugger protocol reduce the amount of data sent back and forth between the target machine and the kernel debugger, improving debugging performance over slow kernel debugger links. Loading Updated Driver Files through kd Enhancements to the kernel debugger protocol and the kernel now allow the kernel to demand-load driver files from a properly configured kernel debugger. When the system loads a driver, it now queries the kernel debugger to see if the kernel debugger wants to provide the file for the driver in question. If so, the file content is downloaded from the kernel debugger and used. This avoids extra reboots just to copy driver files. Control over Whether Terminating a Debugger Also Terminates the Process Being Debugged Prior to Windows XP, terminating a debugger would always kill all processes being debugged by the debugger. The new DebugSetProcessKillOnExit API allows a debugger to control this behavior and select either a detach or the default kill. Built-in User Heap Leak Detection Windows XP provides built-in user mode heap-leak detection. Poorly written or miscoded applications can   heap memory. In earlier versions before Windows XP, when this situation arose, special tools were needed on the server to help identify the cause of the memory leak. User mode component heap allocation leaks can be seen in two ways: Leak detection when the process is exiting Using a debugger extension to investigate leaks Leak Detection when the Process Is Exiting Leak detection is made every time a process is cleanly exiting. It doesn't work if the process is terminated with TerminateProcess() or TerminateThread() / ExitThread() for the last thread in the process; but for most applications this is not a problem. To enable leak detection when the process is exiting, set the registry key as follows: [HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\ImageName] "ShutdownFlags"="3" Using a Debugger Extension to Investigate Leaks Windows XP allows you to use a debugger extension to investigate leaks. This is useful because using leak detection when the process is exiting doesn't work for processes such as Explorer.exe, Services.exe, and others that are not cleanly shut down. In such cases, you can attach an Ntsd to the process and use the new debugger extension !heap -l to create a similar list. If the size or contents of the block aren t enough to determine whether the program is leaking, you can enable the debug options to get stack traces for these blocks. !heap -l usage sample: 0:011>!heap -l Scanning VM ... Entry   User   Heap   Segment    Size PrevSize Flags -------------------------------------------------------------------- 00178908 00178910 00170000 00000000    258    258 busy extra   ....... << other 20 blocks >> 005278a8 005278b0 00520000 00000000    40    80 busy extra 22 leaks detected. 0:011> dc 178908 + 20 l1 00178928 002787bc 0:011> dds 002787bc 002787bc abcdaaaa 002787c0 00000001 002787c4 0000000b 002787c8 00000001 002787cc 0000021a 002787d0 00071000 002787d4 00000000 002787d8 002787dc 002787dc 6a252a35 ntdll!RtlAllocateHeapSlowly+0x5b 002787e0 6a2505a4 ntdll!RtlAllocateHeap+0xa26 002787e4 6a206b0f ntdll!RtlDosPathNameToNtPathName_U+0xd9 002787e8 6a20bc48 ntdll!hOpenFile+0x2e 002787ec 6a20bfff ntdll!bOpenAndMapDB+0x17 002787f0 6a20c1ab ntdll!pdbOpenDatabase+0x2d 002787f4 6a20e4e2 ntdll!trGetMatchingExe+0x1ec 002787f8 6a20b145 ntdll!LdrpInstallAppcompatBackend+0xa0 002787fc 6a2117c6 ntdll!LdrpInitializeProcess+0x9f6 00278800 6a2041a0 ntdll!LdrpInitialize+0x256 00278804 6a2180db ntdll!KiUserApcDispatcher+0x7 In this example, the bug is in hOpenFile, which didn't free the string returned by RtlDosPathNameToNtPathName_U. In all, 22 heap allocations were not freed when the application was exited. The heap address that was allocated is in the entry column, and the size is in the size column. If the GlobalFlag for Stack Backtrace was enabled, then analysis could show the actual functions that allocated the heap memory. This can be done several ways Use !heap  k <address>, using the address of the heap that is shown to be leaking.  As shown in the example, go to the end of the leaking heap allocation, find the stack number that allocated the heap, and dump the structure ntdll!RtlpStackTraceDataBase. This structure holds all of the stack back traces. The stack back traces will be in numerical order, so dump the structure until you get to the stack number you are looking for and then dds <address>, where <address> is the address in the RtlpStackTraceDataBase where your stack number resides. In some cases false positives are seen, such as applications that keep encoded pointers and blocks passed as contexts to local procedure call (LPC) ports. In addition, this doesn't work for an application that has its own heap, such as Microsoft Office applications, or for paged heap enabled with the /full option. Additional Heap Counters Another important new feature in Windows XP is heap performance monitoring. Performance Monitor (Perfmon) can display about 20 heap-related counters: amount of memory reserved and committed per heap, number of blocks allocated and freed for three class sizes, average allocated and free time, lock contention, and others. Perfmon will display these counters when the following registry key is set: [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\PerfProc\Performance] "DisplayHeapPerfObject"=dword:00000001 Only the process heap and the heaps with higher usage are monitored. I/O Subsystem The I/O subsystem consists of kernel components that provide an interface to hardware devices for applications and other mandatory system components. Windows XP enhances the I/O subsystem while retaining complete compatibility with drivers written for Windows 2000. This compatibility was essential because the I/O subsystem provides the interface to all devices, and too many changes to process I/O can break existing applications and drivers.  Enhancements were made by adding new APIs, available to drivers written to take advantage of the new Windows XP functionality. For this reason, while existing Windows 2000 drivers will work with Windows XP, they must be rewritten to take advantage of the new I/O improvements, including the following: New cancel queue File System Filter Driver APIs Improved low-memory performance I/O throttling Direct Memory Access (DMA) improvements WebDAV Redirector System Restore Volume Snapshot Service New Cancel Queue Rather than having drivers perform device queuing and handling the I/O request packet (IRP) cancellation race, Windows XP I/O automates this process. In Windows XP, drivers handle IRP queuing and do not have to handle IRP cancellations. Intelligence in the queuing process lets the I/O APIs handle requests rather than drivers in cases where the I/O is cancelled. A common problem with cancellation of IRPs in a driver is synchronization between the cancel lock or the InterlockedExchange in the I/O Manager with the driver's queue lock. Windows XP abstracts the cancel logic in the APIs while allowing the driver to implement the queue and associated synchronization. The driver provides routines to insert and remove IRPs from a queue, and it provides a lock to be held while calling these routines. The driver ensures that the memory for the queue comes from the correct pool. When the driver actually wants to insert something into the queue, it does not call its insertion routine, but instead calls IoCsqInsertIrp().  To remove an IRP from the queue, the driver can either specify an IRP to be retrieved, or pass NULL, and the first IRP in the queue will be retrieved. Once the IRP has been retrieved, it cannot be canceled; it is expected that the driver will process the IRP and complete it quickly.  File System Filter Driver APIs Several new APIs provide greater all-around reliability. Microsoft worked with third-party developers to test their filter drivers. If a driver crashed attempting to perform illegal functions, together we determined the functionality required, and provided APIs to let them accomplish what needed to be done without harming the rest of the system. These APIs are included in the Windows Installable File System Development (IFS) Kit for Windows Improved Low-Memory Performance Windows XP is more resilient during periods of low memory because  must succeed  allocations are no longer permitted. Earlier versions of the kernel and drivers contained memory allocation requests that had to succeed even when the memory pool was low. These allocations would crash the system if no memory were available. Two important I/O allocation routines used  must succeed,  with the first being for IRP allocation, and the other for Memory Descriptor List (MDL) allocations. If memory couldn t be allocated, the system would blue screen if these routines were used. For Windows XP, kernel components and drivers are no longer allowed to request  must succeed  allocations; memory allocation routines will not allocate memory if the pool is too low. These changes allow drivers and other components to take appropriate error actions, rather than an extreme approach such as bug checking a machine. I/O Throttling Another improvement for low-memory conditions is I/O throttling. If the system can t allocate memory, it throttles down to process one page at a time, if necessary, using freely allocated resources. This allows the system to continue at a slower pace until more resources are available. DMA Improvements Three new entries are added to the end of the DMA_OPERATIONS structure. These three entries will be accessible to any driver, which uses IoGetDmaAdapter(). To safely check whether the new functionality exists, the driver should set the version field of the DEVICE_DESCRIPTION structure provided to IoGetDmaAdapter() to DEVICE_DESCRIPTION_VERSION2.  The current Hardware Abstraction Layers (HALs), which don't support the new interface, will fail the operation because of the version number. HALs that support this feature will understand the new version and will succeed the request, assuming all the other parameters are in order. The driver should try to access these new function pointers only when the driver successfully gets the adapter using DEVICE_DESCRIPTION_VERSION2. WebDAV Redirector Windows XP includes a new component the WebDAV redirector. The WebDAV redirector allows applications on Windows XP to connect to the Internet, and to natively read and write data on the Internet. The WebDAV protocol is an extension to Hypertext Transfer Protocol (HTTP) that allows data to be written to HTTP targets such as the Microsoft MSN  Web Communities. The WebDAV redirector provides file system-level access to these servers in the same that the existing redirector provides access to SMB/CIFS servers. One way to access a WebDAV share is to use the net use command, for example:  NET USE * http://webserver/davscratch  To connect to an MSN Community, use http://www.msnusers.com/yourcommunityname/files/ as the target. The credentials you need in this case are your Passport credentials; enter these details in the Connect Using Different User Name dialog if you are using mapped network drive, or use the /u: switch with the net use command. For example: net use http://www.msnusers.com/fooname/files /u:yourpassportaccount@hotmail.com The simplest ways to create a WebDAV share are: Use Microsoft Internet Information Server (IIS). In IIS, you only need to make a directory browsable to access it through WebDAV and allow writes, and you can also save to it. Use MSN Communities. File Cabinets in MSN Communities are WebDAV shares. For details about how to use this MSN file cabinet, see http://communities.msn.com/filecabinets. System Restore System Restore is a combination of a file system filter driver and user-mode services that provide a way for user to unwind configuration operations and restore a system to an earlier configuration. System Restore includes a file system filter driver called Sr.sys, which helps to implement a copy-on-write process. System Restore is a feature only of Windows XP Home Edition and the 32-bit version of Windows XP Professional; and it is not a feature of the Windows .NET Server versions. Volume Snapshot Service A volume snapshot is a point-in-time copy of that volume. The snapshot is typically used by a backup application so that it may backup files in a consistent manner, even though the files may be changing during the backup. Windows XP includes a framework for orchestrating the timing for a snapshot, as well as a storage filter driver, not a file system filter driver, that uses a copy-on-write technique in order to create a snapshot. One important new snapshot-related I/O Control (IOCTL) that affects file systems is IOCTL_VOLSNAP_FLUSH_AND_HOLD_WRITES. This is actually intended for interpretation by file systems, even though it is an IOCTL. This is because all file systems should pass the IOCTL down to a lower-level driver that is waiting to process the IOCTL after the file system. The choice of an IOCTL instead of an FSCTL ensures that even legacy file system drivers will pass the IOCTL down. This IOCTL is sent by the Volume Snapshot Service. When a file system such as NTFS receives the IOCTL, it should flush the volume and hold all file resources to make sure that nothing more gets dirty. When the IRP completes or is cancelled, the file system then releases the resources and returns. Changes in Existing I/O Features Windows XP includes several changes in existing I/O features, including: FAT32 on DVD-RAM. DVD-RAM disks can appear as both CD/DVD devices and as rewriteable disks. Windows XP allows DVD-RAM media in DVD-RAM drives to be formatted and used with the FAT32 file system. Defragmentation APIs. Since the release of Windows NT 4.0, the NTFS file system has exposed APIs that allow a user-mode application to query the allocated ranges of files on disk, and optimize file arrangements in order to defragment (or carefully fragment) files in order to minimize seeks while processing file I/O. In Windows 2000, these APIs have a number of limitations; for example, they do not function on the master file table (MFT), the PageFile, or NTFS attributes. The feature set in Windows XP changes the behavior on NTFS as follows: The defragmentation APIs no longer defragment data using the system cache. This means Encrypted files no longer need to be opened with read access. NTFS now defragments at the cluster boundary for non-compressed files. In Windows 2000, this was limited to the page granularity for non-compressed files. NTFS now defragments the MFT. This was not allowed in Windows 2000. This is through the regular code path, so there is no limit to how much at once can be moved, and any part of it can be moved other than the first 0x10 clusters. If there is no available space in the MFT to describe the change, then it will be rejected. The API can move an MFT segment even if a file with its File Entry in that section is currently open. NTFS now defragements for cluster sizes greater than 4K. NTFS now defragments Reparse points, bitmaps, and attribute_lists. These can now be opened for file read attributes and synchronize. The files are named using the regular syntax (file:name:type); for example: foo:$i30:$INDEX_ALLOCATION foo::$DATA foo::$REPARSE_POINT foo::$ATTRIBUTE_LIST NTFS's QueryBitmap FSCTL now returns results on a byte boundary rather than page boundary. NTFS now defragments all parts of a stream, up to and including the allocation size. In Windows 2000, it was not possible to defragment the file tail between valid data length (VDL) and end of file (EOF). You can now defrag into or out of the MFT Zone. The MFT Zone is now just an NTFS-internal hint for the NTFS allocation engine. To defragment a file, the Win32 open mode needs only have FILE_READ_ATTRIBUTES SYNCHRONIZE. It is possible to Pin an NTFS file so that it may not be defragged using FSCTL_MOVE_FILE. This is done by calling FSCTL_MARK_HANDLE and passing MARK_HANDLE_PROTECT_CLUSTERS as an argument. This stays in effect until the handle is closed. Large Files. Windows XP and Windows 2000 Service Pack 2 are able to create sections on arbitrarily large mapped files. A constraint that had existed in earlier versions of the memory manager (creating Prototype Page Table entries for all pages in the section) does not apply, because the Windows XP memory manager can reuse prototype page table entries (PPTEs) for any parts of a section that do not have a mapped view. In fact, it only creates PPTEs for active views based on the view size (not the section size). Verifiers. There are new Verifier levels in addition to a new deadlock verifier.  Read-only NTFS. NTFS now mounts read-only on an underlying read-only volume. If the volume requires a log restart or a Chkdsk, the mount will fail. New flag: FILE_READ_ONLY_VOLUME. GetVolumeInformation() now returns a FILE_READ_ONLY_VOLUME for Read-only volumes. Remote Storage Service (RSS) on MO media.  Encrypting File System (EFS). The Client Side Caching database can now be encrypted. Default NTFS ACL. The default access control list (ACL) on NTFS volumes has been strengthened. Read-only flag on directories. The Read-only attribute has no defined effect on folders. However, in Windows XP, Windows Explorer is using this attribute on a folder to indicate that there is extra metadata in the folder that the shell should look at. This is a performance optimization. Write-through mode. On hot-plug media, the FAT file system will work in WriteThrough mode. This is to eliminate corruption that could occur on media such as CompactFlash when it is unplugged from the system without using the  Safely Remove Hardware  user interface Read-Only Kernel and HAL Pages On many Windows XP-based systems, the kernel and HAL pages will be marked read-only. This has affected drivers that were attempting to patch system code, dispatch tables, or data structures. The change to read-only kernel and HAL does not happen on all systems: On systems with less than 256 MB RAM, the read-only restriction is used.  On systems with 256 MB or more RAM, the read-only restriction isn t used because Windows XP uses large pages to map the kernel and HAL. On all systems, the read-only restriction is used for all driver code because drivers are never mapped with large pages. Driver Verifier disables large pages, so you can enable this on any machine of any size in order to test your code. New APIs Windows XP includes several new filter driver APIs, including: SetShortName(). This is a new Win32 API to set the short name of a file on NTFS. GetVolumePathNamesForVolumeName(). New API allows you to list all VolumePaths that a VolumeName may be mounted on.    GetVolumePathNamesForVolumeName(    LPCWSTR lpszVolumeName,        LPWSTR lpszVolumePathNames,    DWORD cchBufferLength,    PDWORD lpcchReturnLength This routine returns a Multi-Sz list of volume path names for the given volume name. The returned 'lpcchReturnLength' will include the extra tailing null characteristic of a Multi-Sz, unless ERROR_MORE_DATA is returned. In such a case, the list returned is as long as possible and may contain a part of a volume path. Arguments:        lpszVolumeName - Supplies the volume name.       lpszVolumePathNames  - Returns the volume path names.        cchBufferLength      - Supplies the size of the return buffer.        lpcchReturnLength    - Returns the number of characters    copied back to the return buffer on    success or the total number of    characters necessary for the buffer    on ERROR_MORE_DATA. Return Value:        FALSE    - Failure        TRUE     - Success FileIdBothDirectoryInformation() and FileIdFullDirectoryInformation(). These two new FileInfo changes have been added to the file information class enumeration. The new file information classes can be passed as FileInformationClass parameter values to ZwQueryInformationFile, ZwSetInformationFile, and IRP_MN_QUERY_DIRECTORY. SetValid(). NTFS has the concept of Valid Data Length on a file stream. This is a way to preserve the C2  Object Reuse  requirement but not force file systems to write zeroes into file-tails. Definitions: VDL =  Valid Data Length . Each stream has such a value.  EOF = Allocated file length. Each stream has such a value.  File Tail = the region from VDL to EOF. Clearly, each stream has such a region and may be zero length. By definition, VDL must be less than 0 and less than or equal to the EOF. Any reads from the file tail are implicitly returned as zeroes by NTFS. Any writes into the file tail cause VDL to be increased to equal the end of this write, and any data between the previous VDL and the start of this write are written to be zeroes. In Windows XP, we have added an NTFS-only API call to set the Valid Data Length on a file, available to administrative users with SeManageVolumePrivilege (described later in this section). Expected users include: Restore  application that has the ability to pour the raw clusters directly onto the disk through hardware channel. This provides a method for informing the file system that the range contains valid user data and it can be returned to the user. Multimedia/database tools that need to create large files, but not pay the zero-filling cost during the following times:  (a) file extend time (the cost here is to make the extend a synchronous      operation) (b) create time (the cost here is filling the file with zeroes) Served-metadata cluster file systems that need to remotely extend the file, then  pump in  the data directly to the disk device. SeManageVolumePrivilege. The SeManageVolume privilege lets non-administrators and remote users do administrative disk tasks on a machine. With Windows XP, this privilege is only used to allow non-administrators and remote users make the SetValidData call. In the future, it will allow validated users to perform actions on the disk currently restricted to administrators. IoAllocateWorkItem() and IoQueueWorkItem(). These APIs supersede ExInitializeWorkItem() and ExQueueWorkItem(), and are essential to support driver unloading. IoGetDiskDeviceObject(). Returns the disk device object associated with a file system volume device object. The disk device object need not be an actual disk but in general associated with storage. Memory Management Windows XP provides improved memory management. The memory manager provides the system services to allocate and free virtual memory, share memory between processes, map files into memory, flush virtual pages to disk, retrieve information about a range of virtual pages, change the protection of virtual pages, and lock the virtual pages into memory. The memory manager also provides a number of services, such as allocating and de-allocating physical memory and locking pages in physical memory for DMA transfers, to other kernel-mode components inside the executive as well as to device drivers. Memory management enhancements include the following: Logical prefetcher for faster boot and application launch Enhanced memory management for better scalability Reduced paged pool usage  Increased number of system Page Table Entries (PTEs)  Support of giant drivers  Logical Prefetcher for Faster Boot and Application Launch When a Windows XP-based system is booted, data is saved about all logical disk read operations. On later boots, this information is used to pre-fetch these files in parallel with other boot operations. During boot and application launch, a Windows system demands and pages a sizable amount of data in small chunks (4K to 64K), seeking between files, directories, and metadata. The Logical Prefetcher, which is new for Windows XP, brings much of this data into the system cache with efficient asynchronous disk I/Os that minimize seeks. During boot, the logical prefetcher finishes most of the disk I/Os that need to be done for starting the system in parallel to device initialization delays, providing faster boot and logon performance.  Logical prefetching is accomplished by tracing frequently accessed pages in supported scenarios and efficiently bringing them into memory when the scenario is launched again. When a supported scenario is started, the transition page faults from mapped files are traced, recording which page of a file is accessed. When the scenario has completed (either the machine has booted or the application started), the trace is picked up by a user-mode maintenance service, the Task Scheduler. The information in the trace is used to update or create a prefetch-instructions file that specifies which pages from which files should be prefetched at the next launch.  The user-mode service determines which pages to prefetch by looking at how successful prefetching has been for that scenario in the past, and which pages were accessed in the last several launches of the scenario. When the scenario is run again, the kernel opens the prefetch instructions file and asynchronously queues paging I/O for all of the frequently accessed pages. The actual disk I/Os are sorted by the disk drivers to go up the disk once to load all pages that are not already in memory. This minimizes seeks, cuts down on disk time, and increases performance. The kernel also prefetches the file system metadata for the scenario, for example, MFT entries and directory files. Because prefetching is useful only when the required data is not in memory, the applications that are launched frequently are not traced and prefetched each time. Settings for Logical Prefetch Registry setting: HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management\PrefetchParameters RootDirPath - Key Name Reg_SZ     _ Data Type Prefetch    - Value <default> Value Names: EnablePrefetcher (DWORD) 0x00000001= application launch prefetching 0x00000002= boot prefetching Parameters are ANDed, so if all were enabled, the setting would be 0x00000003. The setting takes effect immediately. In Windows .NET Server editions and later versions, only the boot prefetch is enabled by default. Application prefetch can be enabled by the registry setting cited here. The system boot prefetch file is in the %systemroot%\Prefetch directory. Although these prefetch-readable files can be opened using Notepad, they contain binary data that will not be recognized by Notepad. If you are going to view these file, make them read only or copy them to a different location before opening. Scalability Improvements Due to Reduced Lock Contention After significant analysis to identify the resource synchronizations incurring the highest contention, the memory management subsystem has gone through numerous changes for Windows XP to reduce Page Frame Number (PFN), address windowing, system PTE, and dispatcher lock contention. The changes removed numerous unnecessary locks and in many cases redesigned the type of locking done, improving both scalability and performance. Improved Caching and Backup Due to Dynamic Paged Pool Usage  A major redesign of some internal Memory Manager structures causes substantially less paged pool to be consumed, allowing for greater caching capacity and faster response.  Paged pool is now only allocated while a view is active and even then, only for an amount proportional to the actual view size. When a view is unmapped, that pool is then immediately available for reclaiming if the system detects that overall pool usage is high. This can be done because the pool can be dynamically reallocated and repopulated later if the caller requests the view again. Paged pool used to be allocated for an amount proportional to the section (file) size, regardless of the actual views that were ever used. File backup of any size can now be accomplished, from a machine of any size. File back up of any size is possible because prototype PTEs are dynamically constructed and trimmed. It is possible to back up a 500-GB file from a 32-MB client, whereas previously you couldn t back it up at all.  Much greater availability of paged pool for any component that needs it, since the major amount of it (prototype PTEs) can now automatically grow and shrink dynamically in response to how the system is being used. Improved Server Scaling Due to Individual Page Charging Greater scalability by reducing memory requirements for some operations. For example, a Web server that serves the same 4K page to 10,000 clients would require 40 MB, so that a lack of space could result in refusing requests. With Windows XP, only one page is charged, because the system knows that it s the same page, not 10,000 separate pages. This provides a substantial boost in scalability.  Improved Terminal Server and Network Server Scaling  The number of system Page Table Entries has been increased to a maximum of approximately 1.3 GB, of which just under 1 GB is virtually contiguous. This is approximately twice as many PTEs as were available in Windows 2000 and six times more than Windows NT 4.0. This is subject to system configuration, such as RAM, registry switches, and other factors. Currently, a system must: Be booted without the /3GB switch. Have 128 MB or more of RAM. Not have the registry key set that allows this RAM to be used for system cache (as it must be used for system PTEs instead). Not have registry keys set to make session space or system mapped views larger than the default 48 MB.  On an x86-based systems with 256 Mb, the changes made it possible to allocate a 960-MB contiguous mapping. The new mapping is made to keep the PTEs contiguous; by not freeing this second huge chunk of PTEs into the generally available pool until the initial (smaller) PTE pool cannot satisfy a request. Thus, the system will not fragment a big PTE before a driver can access it. Drivers should only experience contention for this resource from another driver that wants a huge chunk, instead of from small random system or driver allocations that happen to occur first.  These extra PTEs also greatly enhance any configuration where PTE usage is critical, for example Terminal Server scenarios, network servers with many concurrent I/Os, and so on. Support of Giant Drivers Due to Increased Number of System PTEs Windows XP supports giant driver mappings. Although video drivers are the most obvious benefactors, this also enables other specialized drivers that support large amounts of dedicated RAM. Windows XP supports nearly a gigabyte of virtual continuous space for a driver. This compares to support of about 220K for Windows 2000 and about 100K for Windows NT 4.0. Support of Direct Execution from ROM Windows XP supports executing applications directly from ROM. This enables products like Windows NT Embedded to ship on ROMs, allowing manufacturers to ship systems without disk drives for specific markets. Power Management Windows XP brings improvements to the Power Manager, while continuing to support legacy drivers. The Power Manager, which is responsible for managing power usage for the system, administers the system-wide power policy and tracks the path of power IRPs through the system. As with Windows 2000, the Power Manager requests power operations by sending IRP_MJ_POWER requests to drivers. A request can specify a new power state or can query whether a change in power state is feasible. When sleep, hibernation, or shut down is required, the Power Manager sends an IRP_MJ_POWER request to each leaf node in the device tree requesting the appropriate power action. The Power Manager considers the following in determining whether the system should sleep, hibernate, or shut down:  System activity level  System battery level  Shutdown, hibernate, or sleep requests from applications  User actions, such as pressing the power button  Control panel settings Power management works on two levels, one applying to individual devices and the other to the system as a whole. The Power Manager, part of the operating system kernel, manages the power level of the entire system. If all drivers in the system support power management, the Power Manager can manage power consumption on a system-wide basis, utilizing not only the fully-on and fully-off states, but also various intermediate system sleep states.  Legacy drivers that were written before the operating system included power management support will continue to work as they did previously. However, systems that include legacy drivers cannot enter any of the intermediate system sleep states; they can operate only in the fully on or fully off states as before. Device power management applies to individual devices. A driver that supports power management can turn its device on when it is needed, and off when it is not in use. Devices that have the hardware capability can enter intermediate device power states. The presence of legacy drivers in the system does not affect the ability of newer drivers to manage power for their devices.  Improved Boot and Logon Performance  Customer research has shown that one of the most frequently requested features that users want from their PCs is fast system startup, whether from cold boot or when resuming from standby or hibernation. When a Windows XP-based system is first booted, data is saved about all logical disk read operations. On later boots, this information is used to pre-fetch these files in parallel with other boot operations. The Windows XP operating system has improved PC startup times, which provides opportunities for system manufacturers who want to improve boot and resume times for new PCs. Windows XP has several improvements in the boot and resume processes, including: Boot loader improvements Operating system boot improvements Operating system hibernation improvements Operating system standby resume Improvements Boot Loader Improvements The key boost to boot loader performance is through optimizing the disk reads. The Windows XP boot loader (Ntldr) caches file and directory metadata in large chunks in a most-recently-used manner, which reduces disk seeking. Each system file is now read with a single I/O operation. The resulting improvement in Windows XP is that the boot loader is approximately four to five times faster than in Windows 2000. Additionally, redundant PS/2-compatible mouse checks were removed from Ntldr. Boot loader enhancements also provide similar improvements in hibernation resume times, mainly by streamlining the I/O paths used by Ntldr to read the hibernation image. The hibernation file is compressed as it is written, and for efficiency, the compression algorithm overlaps with the file I/O. However, when resuming from hibernation, Ntldr is using the BIOS to perform the I/O; therefore, it is not feasible to overlap the disk I/O reads with the decompression. Operating System Boot Improvements Optimizing operating system load in Windows XP is achieved by overlapping device initialization with the required disk I/Os, and by removing or delaying loading all other processes and services from boot that are unnecessary at boot time. When tuning a system for fast booting, it is crucial to look at both the efficiency of device initialization and the disk I/Os. Windows XP initializes device drivers in parallel to improve boot time. Instead of waiting for each device sequentially, many can now be brought up in parallel. The slowest device has the greatest effect on boot. Overlapped device initialization can be viewed with the Bootvis.exe tool.  For more information, see http://www.microsoft.com/hwdev/fastboot/ For optimizing boot time, device drivers should only do what is required to initialize the device during boot, and defer all else to post-boot. The goal is that the device is usable after boot, but does not delay boot unnecessarily. Device drivers should never hold spin locks except for very short durations, particularly during boot, as this defeats any parallelism. Examples of gains made by overlapping device initialization with disk I/O include: For PCs not in a domain, network initialization is now done in parallel to boot. Winlogon will not wait for network initialization for PCs in a workgroup; however, those PCs in a domain will still wait. Serial Plug and Play is now overlapped. Serial Plug and Play detects attached serial devices. This used to take 2.5 to 3 seconds for normal PCs, and could take several minutes in large servers with lots of ports. Protocol binding is now done in parallel to boot. Previously, NDIS caused boot delays while binding protocols to adapters, due to the adapter negotiating link speed with hubs and switches. This also affects PCs having network adapters without network cables attached.  ATAPI boot disk enumeration has been improved from approximately 6 seconds to 2 seconds. Boot disk enumeration stalls all disk I/O during boot.  In addition, several other services are now initialized in parallel to boot. Operating System Hibernation Improvements During hibernation, all devices are powered off, and the system s physical memory is written to disk in the system hibernation file, \Hiberfil.sys. Before Windows XP writes to the hibernation file, all memory pages on the zero, free, and standby lists are freed; these pages do not need to be written to disk. Memory pages are also compressed before being written.  To optimize the hibernation process in Windows XP, several improvements have been implemented. The compression algorithm has been optimized to compress and decompress large blocks (64K) of data. In addition, the compression is overlapped with the disk write. As the current data block is being transferred to the disk, the next block of data is being compressed. Overlapping the compression with disk writes makes the compression time virtually free. Also, the hibernation file is written using IDE DMA instead of PIO mode. Most modern IDE controllers and disks achieve their best performance only in DMA mode.  Standby Resume Improvements During resume from standby, the operating system sends S0 IRPs to devices to indicate the change in system power state. As noted in the Power Management section of this paper, device drivers typically request D0 IRPs to change their device power state. The operating system is responsible for notifying each device in the correct order. There are two key ordering rules that must be followed to prevent deadlocks: A device cannot be turned on until its parent is turned on. All non-paged devices must be turned on before any paged device is turned on.  Because many devices may take significant time to go from D3 to D0, the key to good resume performance is to overlap device initialization as much as possible. The ordering chosen by the operating system is important in maximizing parallelism. The following changes have been implemented to optimize the resume performance in Windows The Sx IRP dispatching engine has been rewritten to maximize potential parallelism. USER has been changed to dispatch power events asynchronously, instead of tying up a worker thread waiting for them to complete. NDIS.SYS has been changed to complete S0 IRPs immediately, instead of waiting for D0 to complete and then initializing on a lower priority thread. Worker thread stacks are locked in memory before starting power operations, and unlocked when resume is complete. The kernel Plug and Play manager has been changed so it does not tie up a worker thread with an enumerate operation while waiting for power operations to complete. Pcmcia.sys, Kbdclass.sys, and Mouclass.sys have been changed to initialize in the background. Windows XP Boot and Resume Tools Windows XP has the ability to trace boot and resume metrics, and to dump the resulting information to a binary file viewable through Bootvis.exe and other tools. Bootvis.exe displays various time-interlocked graphs showing such things as CPU Usage, Disk I/O, Driver Delays and resume activity. Bootvis.exe can show many types of useful details; the best way to start is by dragging an area on the graph and either double-clicking it or right-clicking to use the context menu to see what options are available. The operating system instrumentation starts about one second after the boot loader loads. Overall boot time shown in Bootvis.exe should add BIOS power-on self test (POST) time one second. Taking boot traces with Driver Delays will lengthen boot by two to three seconds. The resulting binary file will be several MBs in size. Information on using Bootvis.exe and improving boot and resume can be found at: http://www.microsoft.com/hwdev/fastboot/  Headless Support Windows .NET Server provides native support for "headless server" operation on server platforms that is, support for operating without a local display or input devices. Microsoft and Intel worked with the computer industry to define firmware and hardware requirements for server operations that include requirements for headless operation under Windows .NET Server as part of Hardware Design Guide Version 3.0 for Microsoft Windows 2000 Server, which is available for download at http://www.microsoft.com/hwdev/serverdg.htm. Additionally, Microsoft provides detailed documentation on how to design hardware and firmware that integrates well with headless server support included in Windows XP. For additional technical information about Windows support for headless operation, see http://www.microsoft.com/hwdev/headless/. Providing Out-of-Band Management Windows provides many mechanisms for remotely managing a system when the operating system is loaded, fully initialized, and the system is functioning. This type of system management is called  in-band  management, and it typically occurs over the network. However, a different solution is required for managing a system when Windows network software is unavailable. For example, when the system has failed, when Windows is not loaded, when the system is in the process of loading, or when Windows is fully loaded, but the Windows network software is not available. Remote management that does not rely on Windows network software is called  out of band  management. The goal for out-of-band management is to always return the system to a fully functioning state where in-band management is available. Making both in-band and out-of-band management available remotely are key components of headless functionality. With the exception of hardware replacement, all administrative functions that can be accomplished locally should be available remotely. For example, the following capabilities should be available for remote management:  Power on a system that is currently off  Change BIOS settings or view POST results  Choose the operating system and set operating system options Interact with specific diagnostic and recovery tools View system blue-screens  Reset a system To accommodate the many possible system operation states, careful thought must be given to hardware, firmware, and operating system functionality to ensure a comprehensive and complementary implementation of out-of-band management capabilities. Each system component must contribute to a coherent, complementary solution in order to avoid expensive, confusing administration. Implementing Headless Support A headless solution requires that local console I/O dependencies be removed from the operating system. Windows .NET Server supports operating without a keyboard, mouse, or monitor attached to the system. On an ACPI-enabled system, Windows .NET Server supports operating without a legacy 8042 keyboard controller. Windows .NET Server also includes support for systems without VGA/display hardware.  Based on built-in Windows support, a USB-capable system running Windows .NET Server (and Windows XP) can support hot plugging the mouse and keyboard while the operating system is running, and a system with a VGA card can support hot plugging a monitor.  In Windows .NET Server, out-of-band console I/O support is provided for all Windows kernel components the loader, setup, recovery console, operating system kernel, and blue-screens and for a text-mode management console available after Windows .NET Server has initialized, which is called the Special Administration Console. This functionality is called the Emergency Management Services (EMS). This I/O conforms to the following by default:  9600 baud  1 stop bit No parity 8 data bits Hardware flow control  Output conventions are defined in  Standardizing Out-of-Band Management Console Output and Terminal Emulation (VT-UTF8 and VT100+),  available at http://www.microsoft.com/hwdev/headless/. These settings were chosen because they are the current  standard  configuration in Unix administration and allow interoperability. However, additional settings are supported and may be passed via the Serial Port Console Redirection Table; documentation is available on the web at http://www.microsoft.com/hwdev/headless/. Designing Hardware and Firmware  There are three key areas that must be addressed to provide a high-quality headless platform that is cleanly integrated with Windows .NET Server EMS: Management port hardware: Windows .NET Server supports a standard legacy serial port. The headless functionality in Windows .NET Server supports a standard 16550 serial port at the legacy address of COM1, COM2, COM3, or COM4, 3F8, 2F8, 3E8, and 2E8, respectively, or a UART at well-known non-legacy address. A server must provide at least one UART interface capable of being used by Windows .NET Server EMS. See the item "Passing of the out-of-band communication channel configuration information from the firmware to Windows .NET Server" below for more information on making the location of the UART well known. A separate debug port must also be available and may not be the same port as used for EMS. When using a serial port connection to access Windows EMS support, all serial cables must be null modem cables that support the Carrier Detect (CD) signal. Windows will not provide console I/O if Carrier Detect is not active.  Cables with Carrier Detect shorted to Ready to Send (RTS) will work. Standardized firmware and service processor management console user interfaces: It is important the system firmware and out-of-band management service processor user interface be available via the same out-of-band communication channel as the EMS. The firmware must cleanly hand off the communication channel to the EMS during the boot process. The firmware must use the same terminal definition as Windows .NET Server EMS, which includes using the same keystrokes to represent not standardized keystrokes, such as F12. Passing of the out-of-band communication channel configuration information from the firmware to Windows .NET Server: This is achieved via the Serial Port Console Redirection Table or optionally, on 64-bit systems, the EFI Console Device Path. For more information, see: http://www.microsoft.com/hwdev/headless/. Hot-Add Memory and Memory Mirroring Support Windows .NET Server introduces hot-add memory support, which allows memory devices to be added to a machine and be made available to the operating system and applications as part of the normal memory pool without turning the machine off or rebooting.  Hot-add memory support will be especially appreciated by enterprise system administrators who need to add memory resources to keep up with production demands, but are working with systems that require continuous (24x7) availability. This action would typically require shutting down the system and interrupting service. With the hot-add feature, service performance can be increased without service interruption. Windows .NET does not support removal of memory regions or a memory upgrade that requires removing and then adding memory.  Memory mirroring (different from hot-add) is also introduced in Windows .NET Server, providing increased availability for extremely high-end systems (for example, Stratus, and so on). CAUTION This feature will operate only on servers that have hardware support for adding memory while the server is operating. Most existing servers do not have this type of hardware support and could be damaged if memory is installed while the power is on. Consult the server operator's manual for more information. A small number of new servers will offer the ability to add memory while the server is operating. For these servers, the act of installing memory will automatically invoke the hot-add memory feature in the operating system. ccNUMA Support Windows .NET Server supports ccNUMA and NUMA-"lite" designs. This provides for near:far memory access time ratios of 1:3 or less.  For optimal performance with Windows 2000 and later operating systems, it is recommended that system designers who are building platforms that present memories with different access times keep the ratio for access to "near" versus "far" memories relative to a given microprocessor at a 1:3 ratio or less, as seen by the operating system. As processor speeds relative to bus speeds and the number of processors in symmetric multi-processor (SMP) systems have increased, the system bus and main memory have become a significant bottleneck. The trend in High Performance Computing (HPC) over the last decade has been to reduce dependence on a single system bus or system memory by building smaller systems (nodes), each with their own processors and memory, then providing a high-speed cache coherent interconnect network to form a larger system. Access from a processor to node local memory is fast, as is the case with small SMP systems. Access to memory in another node is much slower. Earlier systems using this approach could result in as much as a 50x decrease in performance for remote versus local access.  Today, the difference has been reduced significantly, but is still (usually) in the range of two to three times as long to access remote memory (versus local). Operating systems such as Windows 2000, which have been designed for SMP systems, can work acceptably on these newer systems; but significant performance gains are possible if the operating system is aware of underlying architecture. Windows .NET Server contains code to take advantage of the memory available in both the current processor node as well as memory assigned to other processor nodes. Per Node Memory Allocation An effective method for improving performance on a ccNUMA machine is to ensure that the processors use the memory closest to them. This guideline includes continuously running threads on the same processor node. Page coloring is used in Windows 2000 to ensure that page allocation is spread as much as possible throughout the physical address space of the system. To achieve good page placement in a ccNUMA system, each node will have its own palette of colors. Page allocation is round-robin within the palette of the node containing the threads ideal processor. If no pages are available in the palette, then we will round-robin from all colors in all palettes. Per Node Scheduling The thread scheduler has been changed to examine and favor the following processor configurations: A thread s ideal processor Any real processor that is in the same node as the threads ideal processor Any logical processor that is in the same node as the threads ideal processor The highest numbered processor in the same node as the threads ideal processor If this prioritization fails, then Windows .NET Server will only consider other processor nodes if the average processor utilization of the other nodes is lower than the average utilization of the ideal node. OEM Support for ccNUMA For Windows .NET Server to utilize these additions for proper ccNUMA support, original equipment manufacturers (OEMs) must supply a HAL to identify and talk to the hardware in a way that Windows .NET Server can understand. There is a BIOS feature that, if used on the OEM hardware, can function properly out of the box with the Itanium-based HAL that ships with Windows .NET Server. This is the Static Resource Affinity Table (SRAT).  Static Resource Affinity Table  With the current Enterprise market trend to build large-scale systems out of  nodes  of smaller scale systems, the best performance is typically achieved when processors use memory that is physically located in the same smaller system node as the processor, rather than using memory located in other nodes.  SRAT, as described in the ACPI specification, can be used to describe the physical location of processors and memory in large-scale systems (such as ccNUMA) to Windows, allowing threads and memory to be grouped in an optimal manner. The SRAT contains topology information for all the processors and memory present in a system at system boot, including memory that can be hot removed. The topology information identifies the sets of processors and physical memory ranges in the system, enabling a tight coupling between the processors and memory ranges in a node.  The ACPI 2.0 specification introduces the concept of proximity domains within a system. Devices in a system that belong to a proximity domain are tightly coupled, or  closer,  to each other than to other devices in the system. For example, in a ccNUMA machine consisting of several nodes interconnected through a switch, the latency of memory accesses from a processor to memory on the same node would typically be shorter than the latency of memory accesses on other nodes. The operating system should use this affinity information to determine the allocation of memory resources and the scheduling of software threads, therefore improving performance on large systems.  Including the methods that provide affinity information in the ACPI Namespace enables a generic mechanism that provides topology information. This information can be used to resolve scenarios in which components such as processors and memory can be hot added and hot removed from the system.  The Proximity method (_PXM) included in the ACPI 2.0 specification enables the specification of affinity between various devices in the ACPI Namespace. The _PXM method associated with a device in the ACPI Namespace returns a domain number. All devices that return the same domain number belong to the same proximity domain. In addition, specifying memory, processor devices, and the methods for identifying and removing these devices, enables the infrastructure for supporting hot-plug memory. However, defining the proximity and hot-plug information in the ACPI Namespace (instead of static ACPI tables) makes it unavailable to the operating system until the ACPI components of the operating system load. Depending on the load order of the ACPI components with respect to the operating system construction of memory pools and processor startup, affinity and memory hot-plug information in the ACPI Namespace might not be available at the desired system startup phase. The SRAT addresses this problem and makes the affinity and hot-remove memory information available to the operating system in a static fashion before the ACPI components load. This information is needed only at boot time; only processors and memory present at boot time are represented. Unpopulated  slots  for memory and processors that can be hot added do not need to be represented.  The SRAT uses the concept of proximity domains to provide resource affinity information, similar to the domains used in the ACPI 2.0 specification. However, the domain numbers provided by the SRAT do not need to be identical to those used in the ACPI 2.0 Namespace. The SRAT is intended to enable operating system optimizations for the Windows Datacenter Server class of machines with multiple processors and ccNUMA characteristics. These machines must also support the APIC/SAPIC interrupt model. How Windows Can Use SRAT The SRAT is provided as an intermediate step to enable features such as ccNUMA optimizations on Windows Datacenter Server class machines until the capabilities of accessing the ACPI 2.0 Namespace are available at the desired startup phase. Until these capabilities are available, the operating system will scan and use the information provided in the SRAT at boot time. However, after these capabilities are integrated in the operating system, the operating system will no longer use the SRAT or the information provided in the ACPI namespace.  The SRAT provides data for the performance optimization of ccNUMA systems. The use of fine-grained interleaving, in which the memory is interleaved across the nodes at a small granularity, is mutually exclusive with respect to ccNUMA optimizations. The BIOS should not provide an SRAT if fine-grained interleaving is enabled. Fine-grained interleaving should be disabled if the SRAT is provided. It is expected that ccNUMA optimization will provide superior performance over fine-grained interleaving. Furthermore, the operating system will not support hot-plugging memory in the presence of interleaving.  The operating system will scan the SRAT only at boot time. The BIOS/system is expected to retain the proximity information used by the operating system at boot time across the lifetime of the operating system instance (until the next boot). This specifically implies that the BIOS/system retains the system topology across a system sleep state transition in which processor or memory context is lost (S2 S5), such that the proximity information provided by the SRAT at operating system boot time is valid across the transition. If the system topology is not retained, memory viewed as  local  to a set of processors could potentially become  non-local  memory on return from the sleep state and have an adverse impact on system performance.  The BIOS can use the Prepare to Sleep (_PTS) method to initiate the process of saving all information necessary to replicate the system topology. The BIOS can also use the sleep state argument that is provided by the operating system to the _PTS method to determine if the state save is required. If memory or processor hot-plug were not supported, providing a deterministic selection of boot processor/processor order in the Multiple APIC Description Table (MADT) and programming of the memory regions would be sufficient to ensure identical system topology on return from the sleep state.  The BIOS must reconstruct the SRAT on system reboot similar to the MADT. Support for New Hardware The 64-bit versions of Windows XP and Windows .NET Server support the Extensible Firmware Interface (EFI), a new standard for the interface provided by the firmware that boots PCs. Microsoft supports EFI as the only firmware interface to boot the 64-bit version of Windows for Itanium-based systems. Because the 64-bit version of Windows cannot boot with BIOS or with the system abstraction layer (SAL) alone, EFI is a requirement for all Itanium-based systems to boot Windows. The 64-bit versions of Windows also support the Globally Unique Identifier (GUID) Partition Table (GPT), which was introduced as part of the EFI initiative. GPT complements the older Master Boot Record (MBR) partitioning scheme that has been common to PCs. GPT allows use of very large disks. The number of partitions on a GPT disk is not constrained by temporary schemes such as container partitions, as defined by the MBR Extended Boot Record (EBR). The GPT disk partition format is well defined and fully self-identifying. Data critical to platform operation is located in partitions and not in unpartitioned or hidden sectors. GPT disks use primary and backup partition tables for redundancy and CRC32 fields for improved partition data structure integrity. The GPT partition format uses version number and size fields for future expansion. Each GPT partition has a GUID and a partition content type, so no coordination is necessary to prevent partition identifier collision. Each GPT partition has a 36-character Unicode name, which means that any software can present a human-readable name for the partition without any additional understanding of the partition. For information about the EFI standard, see http://www.microsoft.com/hwdev/efi/. Intel Itanium Support The 64-bit versions of Windows XP and Windows .NET Server for Intel Itanium-based systems is a fully featured operating system that is compatible with most existing 32-bit applications. The 64-bit Windows operating system provides high availability, advanced scalability, and large memory support based on the Intel Itanium chip with its extensive multiprocessing features, powerful floating-point arithmetic extensions, and multimedia-specific instructions. 64-bit Windows and the Itanium microprocessor are designed to address the most demanding business needs of today's Internet-based world including e commerce, data mining, online transaction-processing, memory-intensive high-end graphics, complex mathematics, and high-performance multimedia applications.  The Microsoft vision is to make a broad portfolio of applications available, including leading Microsoft applications on 64-bit Windows. To achieve this goal, Microsoft provides a rich set of development tools that make it easy to write new applications and port existing ones. The 64 bit Windows platform brings the following benefits to developers and end users:  The full advantage of Intel Itanium-based architecture for reliability, high performance, and high availability  Compatibility with Windows 2000-compatible applications and existing Win32-based applications API-level compatibility between the Microsoft Win64  API and the Win32 API  Scalability of virtual memory up to 16 terabytes (TB) Interoperability with systems based on existing 32-bit architectures Benefiting from 64-bit Architecture A 64-bit operating system supports far more virtual memory than a 32-bit operating system. For example, 32-bit Windows Whistler supports 4 GB of virtual memory, while 64-bit Windows supports 16 TB of virtual memory. Non-paged pool increases substantially, up to 128 GB for the 64-bit platform compared to 256 MB maximum for the 32-bit platform. With these new higher limits, the scalability that the 64-bit platform offers is enormous in terms of terminal server clients, page pools, network connections, and so on. Each application can support more users. All or part of each application must be replicated for each user, which requires additional memory.  Each application has access to larger amounts of memory, which can increase performance in some scenarios.  Each application has more memory for data storage and manipulation. Databases can store more of their data in the physical memory of the system. Data access is faster because disk reads are not necessary.  Applications can manipulate large amounts of data easily and more reliably. Video composition for motion picture work requires 64-bit Windows for this reason. Modeling for scientific and financial applications benefits greatly from memory-resident data structures that are not possible on 32-bit versions of Windows.  There are also important benefits for businesses:  Increased productivity. Knowledge workers can spend their time thinking and producing, rather than waiting for the software to finish its tasks.  Lower cost of ownership. Each server can support larger numbers of users and applications, so your business will require fewer servers. This translates directly into less management overhead one of the highest costs in any computing environment.  New application opportunities. New applications can be designed without the barriers imposed by 32-bit Windows. Data-intensive tasks that are impossible today can be done with 64-bit Windows. Designing for 64-Bit Compatible Interfaces Porting drivers or software created for 32-bit Windows to 64-bit Windows should not create any problems for distributed applications, whether they use Remote Procedure Calls (RPC) or DCOM. The RPC programming model specifies well-defined data sizes and integer types that are the same size on each end of the connection. In addition, in the LLP64 abstract data model developed for 64-bit Windows, only the pointers expand to 64 bits all other integer data types remain 32 bit. Because pointers are local to each side of the client/server connection and are usually transmitted as NULL or non-NULL markers, the marshaling engine can handle different pointer sizes on either end of a connection transparently. However, backward compatibility issues arise when you add new data types or methods to an interface, change old data types, or use data types inappropriately. For more information on developing for the 64-bit system, see: http://msdn.microsoft.com/library/default.asp?URL=/library/psdk/buildapp/64bitwin_410z.htm Components Removed Several Windows 2000 components are removed in Windows XP and Windows .NET Server: Posix subsystem OS/2 subsystem NEC PC98 support SGI 320 and SGI 540 support Windows Logo Program Requirements Requirements for the Windows Logo Program for hardware that apply specifically for systems or peripherals that will receive the "Designed for Windows XP" and  Designed for Windows .NET Server  are defined in Microsoft Windows Logo Program System and Device Requirements, Version 2.0, available on the web site at http://www.microsoft.com/winlogo/hardware. Windows Hardware Quality Labs (WHQL) is providing the Hardware Compatibility Tests (HCTs). For information, see http://www.microsoft.com/hwtest/. References For the Windows XP debugger, see:  http://www.microsoft.com/ddk/debugging/ For more information on improving boot and resume, see: http://www.microsoft.com/hwdev/fastboot/ For more information on headless support, see:  http://www.microsoft.com/hwdev/headless/ For more information on the PCI Hot-Plug Specification, see: http://www.pcisig.com For more information on the ACPI specification, see:  http://www.microsoft.com/hwdev/onnow For more information on developing for the 64-bit system, see: http://msdn.microsoft.com/library/default.asp?URL=/library/psdk/buildapp/64bitwin_410z.htm For information about memory and I/O resource allocations for PCI-to-PCI bridges, see  PCI-to-PCI Bridges and CardBus Controllers on Windows,  published at http://www.microsoft.com/hwdev/PCI. Acronyms  access control list ACPI   Advanced Configuration and Power Interface  application programming interface  Advanced Power Management BIOS   basic input/output system ccNUMA   Cache Coherent   Non Uniform Memory Architecture  Carrier Detect  Driver Development Kit  direct memory access DVD-RAM   Digital Video Disk Random Access Memory  Extended Boot Record  Extensible Firmware Interface  Encrypting File System  Emergency Management Services  end of file  file allocation table  GUID partition table GUID   globally unique identifier  hardware abstraction layer  Hardware Compatibility Test  high performance computing HTTP   Hypertext Transfer Protocol  Integrated Device Electronics  Installable File System  independent hardware vendors  Microsoft Internet Information Server  input/output IOCTL   I/O Control  I/O request packet  independent software vendor  kernel control block  light-emitting diode  local procedure call  least recently used MADT   multiple APIC description table  Master Boot Record  Memory Descriptor List  master file table  Microsoft Network NDIS   Network Driver Interface Specification NTFS   NT File System Ntldr   NT Loader  original equipment manufacturer  Peripheral Component Interconnect  page frame number  programmed I/O POST   power-on self test PPTE   prototype page table entries  page table entries  random access memory  remote procedure call  Remote Storage Service  Ready to Send  system abstraction layer  symmetric multi-processor SRAT   static resource affinity table  Terabyte  universal serial bus  valid data length  Windows Driver Model WHQL   Windows Hardware Quality Labs Kernel Enhancements for Windows XP                                                                         PAGE   STYLEREF "Print Division Title,pdt" \* MERGEFORMAT  Kernel Enhancements for Windows XP                                                                         PAGE   2001 Microsoft Corporation. All rights reserved.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\opktools\docs\readme.txt ===
Microsoft Windows XP Service Pack 1 (SP1)
                 OEM Preinstallation Kit (OPK)
                       Readme Document
                        July 31, 2002

Information in this document, including URL and other Internet Web
site references, is subject to change without notice and is provided
for informational purposes only. The entire risk of the use or 
results of the use of this document remain with the user, and 
Microsoft Corporation makes no warranties, either express or implied.
Unless otherwise noted, the example companies, organizations, 
products, people, and events depicted herein are fictitious. No 
association with any real company, organization, product, person, 
or event is intended or should be inferred. Complying with all 
applicable copyright laws is the responsibility of the user. Without 
limiting the rights under copyright, no part of this document may 
be reproduced, stored in or introduced into a retrieval system, or 
transmitted in any form or by any means (electronic, mechanical, 
photocopying, recording, or otherwise), or for any purpose, without 
the express written permission of Microsoft Corporation.

Microsoft may have patents, patent applications, trademarks,
copyrights, or other intellectual property rights covering subject
matter in this document. Except as expressly provided in any written
license agreement from Microsoft, the furnishing of this document 
does not give you any license to these patents, trademarks, 
copyrights, or other intellectual property.

(c) 2002 Microsoft Corporation. All rights reserved.

Microsoft, MS-DOS, Windows, and Windows NT are either registered
trademarks or trademarks of Microsoft Corporation in the United States
and/or other countries or regions.

The names of actual companies and products mentioned herein may be 
the trademarks of their respective owners.

========================
How to Use This Document
========================

To view the Readme file in Microsoft Windows Notepad, maximize 
the Notepad window. On the Format menu, click Word Wrap. 

To print the Readme file, open it in Notepad or another word 
processor, and then use the Print command on the File menu.

========
CONTENTS
========

1. INTRODUCTION

2. UPGRADING FROM PREVIOUS VERSIONS OF THE TOOLS

3. UPGRADING EXISTING CONFIGURATION SETS

4. KNOWN ISSUES

5. DOCUMENTATION CORRECTIONS

---------------

1. INTRODUCTION
---------------

This document provides current information about OEM preinstallation
of Microsoft Windows XP Service Pack 1 (SP1).

For a summary of new features in the Windows OPK, see the topic 
"New Features in the OEM Preinstallation Kit (OPK)" in the OPK 
User's Guide (Opk.chm).

For an introduction to the OEM preinstallation process, see the 
white paper "Step-by-Step Guide to OEM Preinstallation of Windows XP 
Service Pack 1 and Windows .NET Server 2003 Family," located in the 
\Docs\Whitepapers folder on the Windows OPK CD.

For more information about the issues and corrections listed in this 
white paper, consult your technical account manager or visit the 
Microsoft OEM Web site at: https://oem.microsoft.com/.

------------------------------------------------

2. UPGRADING FROM PREVIOUS VERSIONS OF THE TOOLS
------------------------------------------------

You can use either the Windows XP Service Pack 1 (SP1) OPK or the 
Windows .NET Server 2003 OPK to preinstall the following versions
of Windows:

	* Original "gold" release of Windows XP 
	* Windows XP SP1 
	* Windows .NET Server 2003 family 

Do not use the original "gold" release of Windows XP OPK to preinstall
Windows XP SP1 or the Windows .NET Server 2003 family.

You can upgrade from the original "gold" Windows XP OPK tools to the 
OPK tools for Windows XP SP1 or the Windows .NET Server 2003 family. 
Only one version of the OPK tools and documentation can be installed
on a technician computer. If you previously installed the OPK from
the original "gold" release of Windows XP, you must upgrade those
tools to the Windows XP SP1 OPK or the Windows .NET Server 2003 OPK;
OPK tools from the original "gold" release of Windows XP cannot
coexist on the technician computer with tools from either the
Windows XP SP1 OPK or the Windows .NET Server 2003 OPK.

To upgrade the OPK tools from the "gold" release of Windows XP to 
Windows XP SP1:

1. Run Opk.msi, located at the root of the Windows XP SP1 OPK CD.
   This is the autorun file, which automatically starts when you 
   insert the CD.

2. When the "Welcome to the Windows OEM Preinstallation Kit" page 
   appears, click Next.

If you set up a distribution share with OPK tools from the original 
"gold" Windows XP release, the Guest account is enabled. Setting up 
a new distribution share with the Windows XP SP1 OPK tools does not 
enable the Guest account. Upgrading the tools from the Windows XP
OPK to the Windows XP SP1 OPK or the Windows .NET Server 2003 OPK
does not change the properties of an existing distribution share.

----------------------------------------

3. UPGRADING EXISTING CONFIGURATION SETS
----------------------------------------

When you upgrade to the Windows XP SP1 OPK or the Windows .NET
Server 2003 OPK, no changes are made to any existing configuration
sets, located in the \Cfgsets folder. Also, when you upgrade to the
Windows XP SP1 OPK or the Windows .NET Server 2003 OPK, no changes
are made to any available Windows product files, located in the 
\Lang folder.

You must use the Product page in Setup Manager to load the 
Windows product files for the newer versions of Windows, such as 
Windows XP SP1 or members of the Windows .NET Server 2003 family.

Upgrading to the Windows XP SP1 OPK or the Windows .NET Server 2003
OPK updates the template files that Setup Manager uses when creating
a new configuration set. Any new configuration sets created with the
Windows XP SP1 or the Windows .NET Server 2003 Setup Manager will use
the new default values.

To migrate a Windows XP configuration set to preinstall
Windows XP SP1:

	* Open the configuration set in the Windows XP SP1 version
	  of Setup Manager, update the SKU (version), and save the
	  configuration set.
	  -OR-
	* Manually edit the Winbom.ini file to point to the $OEM$
	  folder for the new SKU.

The preferred method is to use Setup Manager.

You can also configure Windows XP SP1 as a separate product SKU on
the same technician computer that contains the files for your "gold"
release of the Windows XP product. When you use this method, you can
reapply your existing configuration sets to preinstall Windows XP SP1.

To incorporate Windows XP SP1 into a pre-existing Windows XP
configuration set:

1. Copy the contents of the Windows XP SP1 update CD to a subdirectory
on your technician computer.

	For example, create a folder under the OPKTools directory 
	called Updates. Place the files from the Windows XP SP1 CD 
	in the Updates folder.

2. Run Setup Manager.

3. Open an existing configuration set that you used to install
   the original "gold" release of Windows XP.

4. On the Product page, select the original "gold" release of
   Windows XP.

5. On the Preinstalled Applications page, add the following 
   command line:

	Executable: \\Technician_Computer\Opktools\Updates\Xpsp1.exe
	Parameters: /q /n /z

6. Save the configuration set and complete Setup Manager as you 
   normally would.

---------------

4. KNOWN ISSUES
---------------

This is a list of known issues for Windows XP SP 1 OPK.

*  If you install the OPK tools on a computer running Windows .NET
Server 2003, you might need to perform an additional step when
creating a distribution share. On a computer running Windows .NET
Server 2003, sharing a folder sets default permissions of read-only
for the group Everyone. If you intend to write to the distribution
share remotely, you must add additional permissions.

Workaround: Add read-write permissions for the user(s) who need
to write to the distribution share remotely.

*  If you preinstall the Multi-Language User Interface (MUI) Pack 
during Sysprep in Factory mode (Sysprep -factory) and then restart 
the computer into Mini-Setup, the user interface throughout Mini-Setup
is clipped. However, this does not occur if the default user interface
for MUI is set to English (ENG).

Workaround: Set the default user interface for MUI to English.

*  If you create a custom version of Windows PE from an East Asian
language version of Windows, you must ensure that the file
Bootfont.bin is located in the <buildlocation>\i386 folder (for
32-bit versions of Windows PE) or in the <buildlocation>\ia64 folder
(for 64-bit versions of Windows PE). Without Bootfont.bin, the loader
prompt displays invalid characters instead of double-byte character
sets.

*  To install the Microsoft .NET Framework Service Pack 2 (SP2),
you must first install the Microsoft .NET Framework Redistributable,
and then install the Microsoft .NET Framework Service Pack 2.

These instructions assume that you preinstall Windows XP SP1 over
a network, by using Windows PE.

To perform an unattended installation of the Microsoft .NET
Framework SP2:

1. Locate the \dotnetfx folder on the Windows product CD or on
the Windows XP SP1 CD.

For example, if your CD-ROM drive is drive D, the Microsoft .NET
Framework files are located in D:\dotnetfx.

2. In Setup Manager create or modify an existing Windows XP SP1
configuration set.

3. To install the Microsoft .NET Framework, add the following
command-line information to the Preinstalled Applications page
in Setup Manager:

   Executable: D:\dotnetfx\dotnetfx.exe

   Parameters: /q:a /c:"install /q /l"

4. To update these files to Microsoft .NET Framework SP2, add the
following additional command-line information to the Preinstalled
Applications page in Setup Manager:

   Executable: D:\dotnetfx\runprog.exe

   Parameters:	/copytemp"[apppath]NDPSP.msp" 
		[winsys]msiexec.exe|/qn /p
		"[temp]NDPSP.msp" /l*v "[temp]ndpsp.log"
		REBOOT=ReallySuppress

Runprog.exe automatically resolves the tokens [apppath], [winsys],
or [temp]; type these items exactly as specified. 

5. Save the configuration set.

6. Start the destination computer by using Windows PE and preinstall
Windows XP by using the command factory -winpe.
   
   The Microsoft .NET Framework is installed immediately after 
   Windows XP SP1 is installed, and then it will be enabled on 
   the next reboot of the computer.

*  The recommended location for your master installation is on 
drive C of your master computer.

The drive letter of the Windows installation is hard-coded by
Windows Setup at installation time. Sysprep does not modify these
settings or allow you to safely move an image from a drive or
volume by using one drive letter to another.

If you want to deploy an image of a Windows installation to a 
different drive, you must create the original Windows installation
on a disk that uses that drive letter. When you deploy that image,
you must ensure that Mount Manager uses that same drive letter for
%SYSTEMDRIVE%. For example, if you want to deploy the image to 
drive D, make sure that Mount Manager enumerates one logical drive
before the drive where you plan to deploy the image.

*  When the Sysprep.inf file is used as an answer file by Mini-Setup,
the Sysprep.inf file can be located on a floppy disk that you insert
into the disk drive before starting the computer and running 
Mini-Setup. However, if the manufacturer or model of the destination 
computer is different from the manufacturer or model of the master
computer, the Sysprep.inf file is not read from the floppy disk
during Mini-Setup.

Cause: To maintain unique disks and controllers on the system bus,
Plug and Play adds a value to the Plug and Play ID, for example: 

	FDC\Generic_Floppy_Drive\5&22768F6A&0&0

If you use a destination computer with hardware that is different from
the hardware on the master computer, the bus is different, and a new
number is assigned. Plug and Play recognizes this hardware as a new
drive and must install the driver before it can be used. However, 
the installation does not occur quickly enough, and the drive is not
accessible by the time Setup checks the drive for the Sysprep.inf 
file. 

Workaround: Complete the following procedure on the master computer
before running Sysprep: 

1. Locate and click the following registry subkey:

HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\CoDeviceInstallers

2. Add the following entries and values to this subkey:

Entry:	{4D36E969-E325-11CE-BFC1-08002BE10318}
Type:	Reg_Multi_Sz
Value:	Syssetup.Dll,CriticalDeviceCoInstaller

Entry:	{4D36E980-E325-11CE-BFC1-08002BE10318}
Type:	Reg_Multi_Sz
Value:	SysSetup.Dll,StorageCoInstaller
	SysSetup.Dll,CriticalDeviceCoInstaller

3. Open Sysprep.inf and add the following text to the
[SysprepMassStorage] section:

	*PNP0701 = "%WINDIR%\inf\flpydisk.inf"
	*PNP0702 = "%WINDIR%\inf\flpydisk.inf"
	*PNP0703 = "%WINDIR%\inf\flpydisk.inf"
	*PNP0704 = "%WINDIR%\inf\flpydisk.inf"
	GenFloppyDisk = "%WINDIR%\inf\flpydisk.inf"
	*PNP0700 = "%WINDIR%\inf\fdc.inf"

where %WINDIR% is the folder on the destination computer where you
installed Windows.

4. Run Sysprep on the computer.

*  Use Winbom.ini only to modify the Windows installation when you
run Sysprep -factory. Do not manually modify the Windows installation
during Sysprep in Factory mode. If you want to modify the Windows
installation manually, use the command Sysprep -audit instead.

----------------------------

5. DOCUMENTATION CORRECTIONS
----------------------------

*  Throughout the OPK documentation, the Windows Preinstallation
Environment is called "WinPE". The more proper abbreviation is
"Windows PE".

*  The Setup Manager tool no longer contains the "Program
Shortcuts Folder" page. This page is still listed on the topic "Setup Manager Settings" in the OPK User's Guide. This page is also included
in screenshots in the English version of the white paper "Step-by-Step
Guide to OEM Preinstallation of Windows XP Service Pack 1 and the
Windows .NET Server 2003 Family," found in the \Docs\Whitepapers
folder on the Windows OPK CD.

Although the "Program Shortcuts Folder" page is not included in the
Setup Manager user interface, the [DesktopShortcutsFolder] section and
the DesktopShortcutsFolderName entry are still valid in Winbom.ini.

*  In the OPK User's Guide, the topic "Using WinPE in Your
Manufacturing Process" contains the sentence:

	The default version of Startnet.cmd is located in 
	StartOPK.chm.

Replace this sentence with:

	The default version of Startnet.cmd is located in the 
	\Winpe folder on the Windows OPK CD.

*  In the OPK User's Guide, the topic "Structure and Content of
the Distribution Share" contains the sentence:

	File sharing is disabled by default in Windows XP 
	Service Pack 1. To connect to a distribution share, 
	you must first enable file sharing. 

Add this procedure to the topic:

	To enable file sharing:
	1. In Control Panel, double-click "Network Connections." 
	2. Right-click "Local Area Connections", and select 
	   "Properties."
	3. Select the "File and Printer Sharing for Microsoft 
	   Networks" check box. 

*  The topic "Preinstalling 64-Bit Editions of Windows" in the
OPK User's Guide does not include the following information:

	You cannot install the recovery console on the hard disk
	for 64-bit computers.

	To run the recovery console :
	1. Insert the Windows product CD for the 64-bit editions
	   of Windows in the CD-ROM.
	2. Start the computer from the CD-ROM drive.
	3. During text-mode Setup, press 'R' to start into the 
	   Recovery console.

*  The topic "Preinstalling Applications" in the OPK User's Guide
does not include the following information:

	If you add any applications to the Owner profile (in 
	Windows XP Home Edition) or the Administrator profile 
	(in other versions of Windows), Windows Welcome or Mini-Setup 
	copies these applications to the default user profile so that 
	the applications are available when the end user logs on. If
	you want to install applications to individual user accounts,
	you must install these applications after Windows Welcome or
	Mini-Setup is finished, or install them by using a user 
	account other than Owner or Administrator.

*  The topic "Preinstalling Applications Using Legacy Techniques"
in the OPK User's Guide does not specify that the commands listed
in [GUIRunOnce] and Cmdlines.txt are synchronous. Each command
finishes before the next command starts.

*  The topic "Using Signed Drivers" in the OPK User's Guide does
not discuss how to install unsigned drivers. To install unsigned
drivers during Sysprep, include the following lines in the 
Sysprep.inf file:

	[Unattended]
	UpdateInstalledDrivers = Yes

Only install unsigned drivers while testing your manufacturing tools
and processes. Do not install unsigned drivers in any computers
that you distribute to end users.

*  The topic "Limitations of WinPE" in the OPK User's Guide
incorrectly states that Distributed File System (DFS) name resolution
is not supported. This was true for Windows PE created from the "gold"
release of Windows XP; however, DFS file shares are accessible from
the Service Pack 1 version of Windows PE.

*  The topic "Using Sysprep" in the OPK User's Guide does not
include the sentence:

	When you run Sysprep.exe, the Sysprep.inf file is copied
	to %WINDIR%\System32\$winnt$.inf.

*  The topic "Using Sysprep" in the OPK User's Guide does not
include the paragraph:

	You can specify static IP addesses in the Sysprep.inf file. 
	When the destination computer starts, the network interface 
	card (NIC) information is removed, but Plug and Play
	reinstalls the NIC. Mini-Setup reads the static IP address
	information in Sysprep.inf and sets the static IP address 
	in the destination computer.

*  In several places, the OPK User's Guide states that Sysprep.inf
can be located on a floppy disk. However, a Sysprep.inf file located
on a floppy disk can only be used as an answer file for Mini-Setup.
Sysprep itself does not use a Sysprep.inf file located on a
floppy disk.

Plug and Play does not run until after Mini-Setup locates the 
Sysprep.inf file. If the floppy device does not use an in-box driver 
and the Sysprep.inf file is located on a floppy disk, then Mini-Setup 
will not detect the Sysprep.inf file.

The recommended location for the Sysprep.inf file is the C:\Sysprep
folder on the hard disk of the destination computer.

*  The information in the topic "Using the Registry to Control Sysprep
in Factory Mode" in the OPK User's Guide is incorrect. Do not use the
registry to control Sysprep.

*  In the OPK User's Guide, the topic "Oscdimg Command-Line Options"
does not include all of the possible command-line options for the
Oscdimg tool.

The complete command-line syntax is:
	oscdimg [-llabelname] [-tmm/dd/yyyy,hh:mm:ss [-g]] [-h]
	[-j1|-j2|[-n[-d|-nt]]] [-blocation] [-x] [-o[i][s]] sourceroot
	[image_file]

Additional command-line options are:
	-d	Does not force lowercase file names to uppercase.
	
	-j1	Encodes Joliet Unicode file names and generates 
		DOS-compatible 8.3 file names in the ISO-9660 name 
		space. These file names can be read by either Joliet 
		systems or conventional ISO-9660 systems, but Oscdimg 
		may change some of the file names in the ISO-9660
		name space to comply with DOS 8.3 and/or ISO-9660
		naming restrictions.
	
	-j2	Encodes Joliet Unicode file names without standard
		ISO-9660 names (requires a Joliet operating system
		to read files from the CD-ROM).

Note: When using the -j1 or -j2 options, the -d, -n, and -nt options
do not apply and cannot be used.

*  The "For More Information" topic in the OPK User's Guide does 
not include a link to the article "Key Benefits of the I/O APIC"
(http://www.microsoft.com/HWDEV/PLATFORM/proc/IO-APIC.asp). 
This article clarifies the Advanced Configuration and Power
Interface (ACPI) specification (http://www.acpi.info/index.html) 
and provides background information for the "Reducing the Number 
of Master Images for Computers with Multiprocessors" topic in the 
OPK User's Guide.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\opktools\docs\partial_address_decoding_final.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corporation Windows Platform Design Notes TitleMicrosoft Corporation Normal Microsoft Corporation Microsoft Word 9.0SbF0b[h\Up K_)bl m1`Zh 2;s^3s z~~~^ h~P%y{ =d.X' Oo+9pz A>JK' qM\RSC% X';t5 zu=3@K H`=HM cv_A_ l"N45;' c"BwI V<o/S Pb6Sj nj]rOc OWx|:X >UjA> ;>c"0 `hRLHb ?B&C+ 8Ayn8 qNI*vN z?H^< [cL7. ,c-]d zZk<G7 K.#GL 2-;OfS 7 +GT?z `hRLhb" l7>-& T[pT* |[wX) StIN)V zkLcH )ewL> l^<Bg| y1rF+ 7/yq!> I\'Ht3& 7&F9B /&E86 m/JK0 c0$)&4 UhAiB wa{ %7}Z (1PMl jZ{@Y sNI(NN f>O]p =2>MX 'Sz\\ {cjr! (Fo\[. 9j,_S g`a-dW "d_Tv%.*A 6.{GJ [Avk` g0c]e zO\rMM DEfK$rd JKV&7 PI!-&-iB ck'!v B;XJ< /XG/n ro+c@w@ !~w"b 6Ys{[ e`1Qs, >aHz, G`1^% yXLF`1i -`q?` 9juN- r'x-* 8tCqX S3)u; .c$]s^: <Q3)u+ p;fu=111! IuR1mx<O RXMz|sKJ Ym0lVO K,>a1 #>,FB oCd?hn -v(~(^j D+U+TWindows Platform Design Notes Designing Hardware for the Microsoft( Windows( Family of Operating Systems Partial Address Decoding and I/O Space in Windows Operating Systems Abstract: Hardware devices that decode only part of an address prevent the use of address space by other devices, because the operating system must block other devices from claiming any address that might potentially be claimed by the device that is decoding only part of the address. This paper describes how partial address decoding affects the allocation of I/O space to devices on Windows operating systems and recommends ways to avoid problems associated with partial address decoding. Disclaimer: The information contained in this document represents the current view of Microsoft Corporation on the issues discussed as of the date of publication. Because Microsoft must respond to changing market conditions, it should not be interpreted to be a commitment on the part of Microsoft, and Microsoft cannot guarantee the accuracy of any information presented. This document is for informational purposes only. MICROSOFT MAKES NO WARRANTIES, EXPRESS OR IMPLIED, IN THIS DOCUMENT. Microsoft Corporation may have patents or pending patent applications, trademarks, copyrights, or other intellectual property rights covering subject matter in this document. The furnishing of this document does not give you any license to the patents, trademarks, copyrights, or other intellectual property rights except as expressly provided in any written license agreement from Microsoft Corporation.  Microsoft does not make any representation or warranty regarding specifications in this document or any product or item developed based on these specifications. Microsoft disclaims all express and implied warranties, including but not limited to the implied warranties or mer chantability, Fitness for a particular purpose and freedom from infringement. Without limiting the generality of the foregoing, Microsoft does not make any warranty of any kind that any item developed based on these specifications, or any portion of a specification, will not infringe any copyright, patent, trade secret or other intellectual property right of any person or entity in any country. It is your responsibility to seek licenses for such intellectual property rights where appropriate. Microsoft shall not be liable for any damages arising out of or in connection with the use of these specifications, including liability for lost profit, business interruption, or any other damages whatsoever. Some states do not allow the exclusion or limitation of liability or consequential or incidental damages; the above limitation may not apply to you.  Microsoft, Win32, Windows, and Windows NT are trademarks or registered trademarks of Microsoft Corporation in the United States and/or other countries. Other product and company names mentioned herein may be the trademarks of their respective owners. Microsoft Corporation. All rights reserved. Contents Contents What is Partial Address Decoding? Why Does Partial Address Decoding Cause Problems? Address Lines and Total Address Space Allocating I/O Space to Devices Accounting for 16-Bit Aliases of 10-Bit I/O Addresses Call to Action What is Partial Address Decoding? Partial address decoding refers to hardware devices with decode logic that cannot decode all of the address lines on its bus.  The most common example is a legacy ISA device that decodes only 10-bit I/O addresses (that is, the device reads only 10 I/O address lines) on x86 systems that include 16 I/O address lines.  The examples in this paper use a 10-bit decode ISA device to show the problems related to partial address decoding. However, the information in this paper applies to any device that decodes only part of an address. As the industry transitions from systems based on a 32-bit memory address space to systems based on a 64-bit memory address space, it is extremely important for devices to decode full addresses to avoid the problems associated with partial address decoding. System manufacturers are strongly encouraged to move to legacy-free systems, which have no devices that consume legacy resources (such as 10-bit decode ISA devices and PCMCIA R2 cards that perform 10-bit decode in some cases). A legacy-free system identifies itself to the operating system through firmware, which allows the operating system to free I/O space that it would otherwise have to block to prevent conflicts among devices. Legacy-free systems have many other benefits for users. For information, see http://www.microsoft.com/hwdev/NewPC. Why Does Partial Address Decoding Cause Problems? Partial address decoding renders much of address space unusable, because the operating system must block other devices from claiming any address that might potentially be claimed by the device that is decoding only part of the address.  This is particularly a problem with I/O address space, which is already very constrained.   Address Lines and Total Address Space The PC/AT architecture implemented 10 address lines, which correspond to 1K (210) bytes of I/O space. Any address from 0-3ff can be expressed by asserting a pattern of 1s and 0s on 10 address lines. The I/O from 0-ff in PC/AT systems was reserved for use by devices on the motherboard. The remaining I/O space, from 100-3ff, was used for ISA devices in those systems. The x86 architecture implements 16 I/O address lines, which correspond to 64K (216) bytes of I/O space.  Any address from 0-ffff can be expressed by asserting a series of 1s and 0s on 16 address lines.   Although the PC industry long ago transitioned to x86, many legacy devices remain that only decode 10 address lines.  Therefore, the operating system must accommodate these devices when allocating I/O space to devices. Allocating I/O Space to Devices Windows assigns ranges of I/O to devices in the system as needed to allow the devices to work and to prevent I/O resource conflicts among devices.  For example, suppose Device A was assigned an I/O range 3f8-3fc. Figure 1 shows the entire 64K of I/O space and shows approximately where in I/O space the range assigned to Device A occurs.  Figure 1. I/O Range 3f8-3fc Assigned to a Device An address of 3f9 (for example) can be asserted to address Device A.  Figure 2 shows the bit values that would be asserted to express the value 3f9. The decode logic of Device A will interpret this value and determine that the address falls within its assigned I/O range. Figure 2. Bit Values for the Address 3f9 The address 3f9 asserted in this example can be accurately decoded using only the lower 10 bits (as can addresses for any ISA devices that requires I/O in the legacy range of ff-3ff).  However, the fact that these devices can be addressed using only 10 bits does not mean that they can afford to decode only 10 bits.  Devices that decode only 10 bits cannot distinguish between a 10-bit address and a 16-bit address. As a result, the device will claim cycles addressed to other devices.  The device will correctly claim addresses with all 0s in the top 6 bits, but it will also incorrectly claim any address that has any address line in the top 6 bits set to 1, because the device ignores the top 6 bits of the address.   Figures 3, 4, and 5 show examples of addresses that would all appear as 3f9 to a 10-bit decode device because the device cannot decode the top six bits (shown in gray in the figures). Figure 3.  Address 13f9 as it Appears to a 10-bit Decode Device Figure 4.  Address 53f9 as it Appears to a 10-bit Decode Device Figure 5.  Address fff9 as it Appears to a 10-bit Decode Device A 10-bit decode device cannot distinguish between 3f9, 13f9, 53f9, and fff9 addresses because they appear equivalent based solely on values in the lower 10 bits.  Therefore, the device will claim bus cycles addressed to it (resources in the range of 3f8-3fc) as described above.  It will also claim any other address that includes a 1 in any of the upper six bits.   Accounting for 16-Bit Aliases of 10-Bit I/O Addresses  Any address that matches the lower 10 bits decoded by a given device but has a 1 in any of the upper 6 bits is called an  alias  of the device s resources. Many ISA devices that implement 10-bit decode still exist in the installed base. Current operating systems must account for the fact that many legacy devices that claim I/O from 100-3ff will also claim the aliases of those resources.  Theoretically, Windows should only be required to reserve 100-3ff for legacy devices, but it must also reserve the aliases of these resources because many devices will claim the aliases as well.  (The aliases of 0-ff are not a problem because motherboard devices have always performed a full address decode.) The effect of this is to reserve far more resources for the 10-bit decode device than it actually needs to prevent conflicts with devices that might otherwise claim those addresses. Figure 6 shows I/O space consumption for a 10-bit decode device compared to the consumption for a strictly legacy device. When aliases of 10-bit decode devices are accounted for, approximately 75% of I/O space is consumed and cannot be used by other devices.    Figure 6.  I/O Space Consumption for 10-bit Decode Devices versus Legacy I/O Accounting for the aliases of 16-bit addresses leaves very little I/O space for other devices in the system. This is a particular problem for PCI-to-PCI bridges, which require a minimum of 4K of I/O space.  However, as shown in Figure 6, no 4K segment of I/O is available because so much I/O space is consumed by reserving the 16-bit aliases of 10-bit addresses. This would prevent the bridge from getting enough resources to start. To resolve this problem, the PCI Local Bus specification introduced the ISA Enable Bit for PCI-to-PCI bridges.  If this bit is set, it prevents 16-bit aliases of 10-bit addresses from passing through the bridge, preventing a resource conflict with ISA devices in the system.  This enables ISA devices to work in systems that include a PCI-to-PCI bridge. Figure 7 shows the effect of setting the ISA Enable bit for a PCI-to-PCI bridge. Figure 7.  A PCI-to-PCI Bridge with the ISA Enable Bit Set Microsoft is developing an article about configuring PCI-to-PCI bridges, which will be available at http://www.microsoft.com/hwdev/pci when it is published. Call to Action To avoid problems related to partial address decoding, hardware manufacturers are encouraged to do the following: Understand the impact that 10-bit decoding and the ISA Enable bit have on PCI-to-PCI bridge configuration.  For information, see PCI-to-PCI Bridges and CardBus Controllers on Windows Operating Systems, which will be available at http://www.microsoft.com/hwdev/pci when it is published. Conserve I/O space by using memory instead of I/O for addressing devices. Design all devices to decode complete addresses. Design true legacy-free systems as described at http://www.microsoft.com/hwdev/NewPC.  For additional guidelines related to designing systems and devices for Windows operating systems, download Guidelines for Bus and Device Class Specifications from  http://www.microsoft.com/hwdev/ISSUES/SpecGuide1.htm   STYLEREF "Print Division Title,pdt" \* MERGEFORMAT  Partial Address Decoding and I/O Space in Windows Operating Systems  PAGE
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ntsetup\opktools\docs\pci_to_pci_bridges_and_cardbuscontrollers.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corporation Windows Platform Design Notes TitleMicrosoft Corporation Normal Microsoft Corporation Microsoft Word 9.0"61({ ?OC$h u-*'V 'hF"4 {j/+0 ;=M,d \K-hF"4 ^2vc0 qK7(y '7(;:?d =<>rA6 C<m = f~G(@~s F!hNN NdFtF SbF0b XVWH+03 &/AZ0 cs*\0 @o],u cce${v *$jd' )3l6Bv lhF"4 Sssn>n *yj#jG ZJ:z~\[l\G E-B%jQx +(UzA ?.!'> 4s@5O> 8UO>&_* .z<1/ V~)yKuKi ){?=g J,GWv:BW a<3cV G+K9^1 ('*F9Y1 #1|st$; v%kgMl-ke `3Z7jWw _61ujY ~6,tq {,(WH r0]nw[ d3mcz ?%tu^ ;!tO# 7JEogF K^1E\} Q{w}9s oO_fy+s &,wmk *K`S%6[b YbOKl :B[]Gh <.}o,+W/9 ;lQ3n BLc}K M`gLd7 |Y<r:@ =$}H% 62}Pu@ F1v|WZ. a+(^# T4B|% 2.:d\t Hxu\| A>d/d yH}?0< Y_<C_Rv4 |;9-=`'w {QGkc mi%jK[ Vd[n2 [W6._Y8 Nngk[s{gs {QboI U`gKl [j]Up H:r]d ysJX7 ysJX7 IUjV- 8hJ|6 8<]Z2 }zX`8mLDK ^-!Wa8 iPQ=h L%[#+ eye.V 'fcQ;] 1;Wyl, $,MX?a' [EX#a 7%VCX=a m4P)r m4P)rhc X*V@x W8eJ? kX^\w *`s | JLW0}! &\+p3 C4]/] hmhoZ T1\G^ -#;AK a|O;m Hkubh oc<N}; cJ>;0 NX!:ayt O6g[l Xh15= 8Cv3q R]|SZo uC8S> pt)bl) 9%xb= [C'&SB' ['t0D2- .reTD. q*`sr Wkoxa Anuah 2GK&nI&ao. *ec5\6V 3939i 9oc;6A 1;1u+ ^y<v. em"@k7D L--2i>c {Lmw[# dsWD( 0oVr|  m`L  s^f4;6 ]Wh3QV h*DXA GQ[g: F&BZg -zGdn -p/)+cpd 32p,E R`W#a7 ]g!_+ tMW~G RnMPX hg4qO1 wn>vMm "%M[*A yfgvg +G`V` lr]o? A[cd} GzOOb= mn=j< \^^Y;7r xYf^L "o1d5 sh&_h tMg[{t M=nNJS -=egq(L cTf=I Y/p^F 8I6Z= 6MQ6q kjkUu b8!= %  D~7_M .%s!l2 gySQGy n.25,, q<z25 ;2}N1 qq{5yla U |1C >SX}v kmT})& F#EmT VZ[|p u9`(` ,h)da #)b3= jAt(&u  td2Fx 8}H = SX- wig 2^ NK *2<P^+R dlIR_ \i}f, S>WJ~ {r?8' heKC] MFq2Y tmlJ]s w]z"I |.HQv 2{48z uQK}ta}k G$K|x cmPPJCmp0712 FBX!\L0 Vom{+U sfwv2 *xl&\k>p ^mAKc 73!;$I w$?!5 =`tow [$?;m 1RM6^D 1b8\0 8N.1w/ `pp7l |'Pol 5u}7GT DT;l" L/2v{ wxF[sc*M \V)'$ H{xndMxA ==XFI0{ 9=zt} )6rd=FR 3s$13E JJ\z_ 8&Hnsq jeGM# ils|t] ^w"6; ,i!{@r uSit0 2Yc6L q;[Oag >NG#HOJ co2q?h~ w^'I&Z? fzO%M}F Tfr(k SDnWo t#7U0v ">PSe h;<r" [(_lW lxar+"^$ ( (cc x-%_O ),S)k /6Kw(gL srOrdp( 9SUpmbfAv ajx62 ]Yh;A d<52>F6 bgTpF:U>P $<D$r d>?m$d %)2@:I7Yo 7nX{3+ U6=Mk ?S}p1# 3|p13 QPN(m ps?\9 OQLGY? :hraog* }}s&}@ L%sI3 i3Ljd mt_mcd [CaZn >1??o &^{+l IOj.zR Rl4s, XV*;< .C2.3% sXvJc *]#OK^b |R^*u*A Rkgxn; \iCpUWindows Platform Design Notes Designing Hardware for the Microsoft( Windows( Family of Operating Systems PCI-to-PCI Bridges and CardBus Controllers on Windows 2000 and Windows Whistler  Abstract  This article describes issues hardware manufacturers should consider when designing hardware that includes PCI-to-PCI bridges or CardBus controllers for Windows operating systems. The information in this article applies to the Microsoft  Windows  2000 operating system and the next release of the Microsoft Windows operating system, codenamed Windows  Whistler. Contents to-PCI Bridges, CardBus Controllers, and Windows Operating Systems How the Operating System Configures PCI-to-PCI Bridges and CardBus Controllers Hardware Configuration and the Device Tree How PCI-to-PCI bridges and CardBus Controllers Provide Resources to Child Devices How PCI-to-PCI Bridges Are Configured when a Windows System Is Started Problem Scenarios for PCI-to-PCI Bridges How the Operating System Configures CardBus Controllers How the Operating System Allocates Resources to CardBus Controllers Problem Scenarios for CardBus Controllers Waking the System from a Device Behind a PCI-to-PCI Bridge Subsystem IDs and Subsystem Vendor IDs PCI-to-PCI Bridges with VGA Cards Using the VGA Enable and ISA Enable Bits BIOS Configuration of the VGA Enable and ISA Enable Bits Summary of Attributes of CardBus Controllers and PCI-to-PCI Bridges Call to Action Related Information Disclaimer: The information contained in this document represents the current view of Microsoft Corporation on the issues discussed as of the date of publication. Because Microsoft must respond to changing market conditions, it should not be interpreted to be a commitment on the part of Microsoft, and Microsoft cannot guarantee the accuracy of any information presented. This document is for informational purposes only. MICROSOFT MAKES NO WARRANTIES, EXPRESS OR IMPLIED, IN THIS DOCUMENT. Microsoft Corporation may have patents or pending patent applications, trademarks, copyrights, or other intellectual property rights covering subject matter in this document. The furnishing of this document does not give you any license to the patents, trademarks, copyrights, or other intellectual property rights except as expressly provided in any written license agreement from Microsoft Corporation.  Microsoft does not make any representation or warranty regarding specifications in this document or any product or item developed based on these specifications. Microsoft disclaims all express and implied warranties, including but not limited to the implied warranties or merchantability, fitness for a particular purpose and freedom from infringement. Without limiting the generality of the foregoing, Microsoft does not make any warranty of any kind that any item developed based on these specifications, or any portion of a specification, will not infringe any copyright, patent, trade secret or other intellectual property right of any person or entity in any country. It is your responsibility to seek licenses for such intellectual property rights where appropriate. Microsoft shall not be liable for any damages arising out of or in connection with the use of these specifications, including liability for lost profit, business interruption, or any other damages whatsoever. Some states do not allow the exclusion or limitation of liability or consequential or incidental damages; the above limitation may not apply to you.  Microsoft, Win32, Windows, and Windows NT are trademarks or registered trademarks of Microsoft Corporation in the United States and/or other countries. Other product and company names mentioned herein may be the trademarks of their respective owners. Microsoft Corporation. All rights reserved. to-PCI Bridges, CardBus Controllers, and Windows Operating Systems PCI-to-PCI bridges are defined as header type 1 in the PCI Local Bus Specification.  A PCI-to-PCI Bridge connects two PCI buses, increasing expansion capability beyond the limitations of a single bus.  A system can include more than one level of PCI buses connected by PCI-to-PCI bridges.   CardBus controllers are defined as header type 2.  CardBus controllers bridge between a PCI bus and CardBus bus for insertion of 32-bit CardBus cards or legacy 16-bit PCMCIA Revision 2 cards, sometimes called  R2 cards. This article describes issues hardware manufacturers should consider when designing hardware that includes PCI-to-PCI bridges or CardBus controllers, including resource allocation, problems associated with installing CardBus controllers behind PCI-to-PCI bridges, installing more than one device behind a CardBus controller, waking the system from a device behind a PCI-to-PCI bridge, the lack of subsystem IDs on PCI-to-PCI bridges and configuring PCI-to-PCI bridges with VGA cards. The information in this article applies to the Microsoft Windows 2000 operating system and Windows Whistler. This information does not apply to the Microsoft Windows 98 or Windows Millennium Edition (Windows Me) platforms. How the Operating System Configures PCI-to-PCI Bridges and CardBus Controllers  This section describes how Windows 2000 and Windows Whistler configure memory and I/O windows for CardBus controllers and PCI-to-PCI bridges.  It describes scenarios in which the operating system might not be able to start devices behind a bridge or controller and recommends ways to avoid problems associated with bridge or controller configuration in the Windows 2000 and Whistler timeframe.  Microsoft is investigating potential improvements to PCI-to-PCI bridge and CardBus controller resource allocation for a future release of the operating system. Hardware Configuration and the Device Tree  The fundamental information Windows requires for successful device configuration is the topological relationship of buses and devices in a system.  Windows discovers the physical topology of the system and models the topology in a software representation called the device tree.  The device tree describes the physical relationships of all hardware in the system. Based on topological information in the device tree, the operating system makes a wide range of assumptions about how to manage hardware, including the hardware resources that should be allocated to each device in the tree.   When a bridge or CardBus controller appears in the device tree, it is referred to as a  parent  of the devices that appear behind it.  The bus on the CPU side of the bridge is referred to as the  primary bus.   The bus behind the bridge is referred to as the  secondary bus.   The devices behind the bridge or controller (that is, on the secondary bus) are described as  children  of the bridge or controller.  Two or more devices that exist on the same bus segment are referred to as  peers peer devices. For more information about the device tree, see the following sources: Guidelines for Bus and Device Class Specifications available for download at  http://www.microsoft.com/hwdev/issues/SpecGuide1.htm Plug and Play, Power Management, and Setup Design Guide in the Windows 2000 DDK, available for download at http://www.microsoft.com/ddk/  Kernel-Mode Driver Architecture in the Windows Whistler DDK, which is available through the Windows Whistler DDK beta program at  http://www.hwdev.org/ddk/windowsddkbeta.asp How PCI-to-PCI bridges and CardBus Controllers Provide Resources to Child Devices On platforms that include PCI, hardware resource allocation is hierarchical.  For example, resources such as I/O and memory required by child devices behind a parent bridge or controller must be available to the parent so the resources can be passed to the children.   How a Parent Bridge Passes Resources. A parent bridge or controller can pass resources to its child devices in either of the following ways: Use explicit I/O and memory windows assigned by the operating system to the parent bridge or controller, and program the bridge or controller for positive decode of memory and I/O resources required by its children. A positive decode bridge or controller decodes only resources within the explicitly assigned I/O or memory window.  Note:  CardBus controllers utilize only positive decode to support both legacy and PCI child devices. Configure the bridge to subtractively decode resources.  In this case, the operating system does not assign explicit I/O and memory windows. Instead, any resources not first claimed by devices on the primary bus are passed, by default, through the bridge and made available to child devices.   If a PCI-to-PCI bridge has child devices that require legacy resources that cannot fit within a positive decode I/O or memory window, the bridge must be configured for subtractive decode unless the device has the VGA enable bit set (which will allow legacy VGA resources to pass through the bridge).  In all other cases, the child devices cannot receive the resources they require. For more information about the VGA Enable bit, see Configuring PCI-to-PCI Bridges with VGA cards later in this article.   A bridge indicates that it performs subtractive decode if its Programming Interface bit in the PCI Configuration Register is set to 01h.  Not all PCI-to-PCI bridges support subtractive decode.  Windows will not switch a bridge from positive decode to subtractive decode (or vice versa) because there is no standard method defined for this action.   Why Subtractive Decode Should Be Avoided.  Subtractive decode has significant disadvantages for the system as a whole. Microsoft discourages the use of subtractive decode for the following reasons: Subtractive decode degrades performance because it requires the bridge to wait for all peer devices to claim cycles before the bridge can claim the cycles that are not claimed by another device. Subtractive decode limits system design because a bridge can have only one subtractive decode child device.  Placing a bridge in subtractive decode can impact other functionality.  For example, if a bridge is in subtractive decode, DMA transfers cannot occur between peer devices on the secondary bus of the bridge.   System designers should avoid placing devices that consume legacy resources behind PCI-to-PCI bridges to avoid the significant tradeoffs associated with bridges configured for subtractive decode. How Resources Are Allocated to Positive-Decode PCI-to-PCI Bridges  Allocating resources to positive-decode PCI-to-PCI bridges is complex, especially in the case of allocating I/O windows, and can potentially cause problems in PCI systems.  The reasons for the complexity relative to I/O windows are as follows: Total I/O space is very constrained.  The total is only 64K in both 32-bit and 64-bit systems. Many devices that consume legacy resources require fixed I/O locations that cannot be made available to other devices. ISA devices that only perform a 10-bit decode consume most of I/O space and complicate bridge configuration. The PCI specification places significant limits on how I/O space can be allocated to PCI-to-PCI bridges. Limited I/O Space.  I/O space is far more limited than memory space (64K versus 4GB on an x86-based system and 64K versus 16 exabytes (16 x 260 bytes) on a 64-bit system).   Devices that consume legacy resources.  Windows assumes that the first 255 bytes of I/O space are allocated to legacy devices on the motherboard.  Other legacy devices also require fixed I/O locations.  For example, Com ports 1, 2, 3, and 4 require I/O port ranges based at 3f8, 2f8, 3e8, and 2e8.  Com ports do not support flexible resource allocation so they cannot be given I/O from any other location, which constrains options for assigning I/O to other devices.  10-bit decode ISA devices consume most of I/O space.  To avoid conflicts with aliases of 10-bit addresses, bridges must use the ISA Enable bit.  The ISA Enable bit must also be set on a bridge that has a peer bridge with the VGA Enable bit set, as described later in this paper. For general implications of partial address decoding, see the list of resources at the end of this paper.  Limitations on how bridge windows can be allocated.  The remaining I/O space in the system can be assigned to devices and PCI-to-PCI bridges, but the following significant restrictions apply when allocating I/O to bridges: The minimum I/O window that can be assigned to a bridge is 4K.   I/O windows are always multiples of 4K.  For example, 4K or 8K can be assigned to a bridge, but 6K or 7K cannot. I/O windows must be aligned on 4K boundaries in I/O space.  So windows must start and end at multiples of 4K within I/O space (4, 8, 12, 16, and so forth).  This is sometimes referred to as  natural alignment. These restrictions make it difficult for an operating system to efficiently allocate I/O space, an already scarce resource, to PCI-to-PCI bridges because it drastically reduces the potential configurations of I/O.  Consider the following: 64K of total I/O space divided by 4K (the minimum granularity of a PCI-to-PCI bridge window) leaves a total of 16 4K I/O  slots  that might be assigned to bridge windows.   The first 255 bytes of I/O space is reserved for legacy I/O devices, so the first 4K slot in its entirety is unavailable to PCI-to-PCI bridges because of the required 4K minimum size and boundary alignment. The remainder of free I/O space in the first 4K can be allocated to other devices, but it cannot be allocated to PCI-to-PCI bridges.   That leaves a total of only fifteen 4K I/O  slots  that might be assigned to PCI-to-PCI bridges. Figure 1 shows the configuration of I/O space available to PCI-to-PCI bridges. Figure 1.  I/O Space Configuration Available to PCI-to-PCI Bridges Allocation rules make I/O space allocation inefficient in cases where a device behind a bridge requires, for example, 6K of I/O.  Because of the I/O space allocation rules, the operating system must assign no less than 8K of I/O to the bridge for the use by that device. The remaining 2K is not used by the device but can still only be consumed by children of the bridge.  As a result, the bridge essentially consumes the unused 2K of I/O space.  Such inefficiencies, coupled with the limited amount of I/O, means that systems can quickly run out of I/O space, especially larger systems with more than one host bridge. If the system has VGA or ISA devices, I/O space is further constrained for reasons discussed later in this paper. Memory space is much less constrained than I/O space, so hardware manufacturers should design their devices and drivers to use memory space rather than I/O space as much as possible. Implications of Static Bridge Windows for Hardware Designers I/O and memory windows assigned to bridges are static.  That is, after a bridge has resources assigned to it and is started, it cannot be stopped and given different resources.  Microsoft is investigating dynamic reconfiguration of bridge resources for a release of the operating system after Windows Whistler.   Hardware manufacturers should be aware of the following implications of static bridge windows for their devices: The operating system might not be able to start devices that are hot-plugged into a configured bridge if the device requires more resources than were originally assigned to the bridge. The operating system might not be able to start all of the devices behind a bridge that is hot-plugged into the system (and therefore not configured by the BIOS), if the child devices require more than the default resources allocated to the bridge by the operating system.  The operating system cannot change the configuration of a bridge that was incorrectly configured by the BIOS, such as a bridge that was given invalid resources, insufficient resources, or inefficient resources. How PCI-to-PCI Bridges Are Configured when a Windows System Is Started This section outlines the process of starting a Windows 2000 or Windows Whistler system and allocating resources to PCI-to-PCI bridges according to the rules described earlier in this document.   The BIOS detects and configures bridges. The BIOS detects devices in the system and allocates I/O and memory windows as determined by the BIOS developer.  The BIOS will detect and configure more than one level of bridges.  If configuration code in the BIOS is implemented correctly, all bridges and devices behind bridges receive the resources required to start. When the BIOS code finishes, all bridges in the system should be configured. However, a bridge might be unconfigured for one of the following reasons: The BIOS was not designed to configure more than one level of PCI-to-PCI bridges, or an error occurs during configuration. The bridge was not present in the system while the BIOS code was running (that is, the bridge was hot-plugged after the BIOS handed off to the operating system). The operating system enumerates devices and assigns default resources to unconfigured bridges.  After the BIOS code finishes running and the BIOS hands off to the operating system, the operating system begins enumerating devices in the system.  The operating system enumerates devices on PCI buses that include bridges as follows:  The PCI bus driver scans a bus and finds a bridge.  The PCI bus driver determines whether the bridge has been configured by the BIOS by checking if the I/O Enable, Memory Enable, and Bus Master bits are set in the bridge s command register If the bridge was configured by the BIOS, the PCI bus driver defers to the BIOS and does not change the bridge configuration. If the bridge was not configured by the BIOS, either because of an error or because the bridge was not present when the BIOS code was running, the PCI bus driver assigns the following default resources. Windows 2000 Default Resources: 1 MB regular (non-cacheable) memory 1 MB prefetchable memory  4K I/O space Windows Whistler Default Resources: Because 1 MB of regular and prefetchable memory is not sufficient for bridges in many configurations, Windows Whistler allocates larger windows to PCI-to-PCI bridges where possible.  However, resource windows are still static.  Under Whistler, PCI-to-PCI bridges will be assigned the following resources: 64 MB regular (non-cacheable) memory, if that amount of memory is available. If 64 MB is not available the bridge will receive 32 MB; if 32 MB is not available, the bridge will receive 16 MB; if 16 MB is not available, the bridge will receive 8 MB; and so on down to a minimum assignment of 1 MB in configurations where memory is too constrained for the operating system to provide a larger window. Prefetchable memory is assigned in the same fashion as non-cacheable memory. 4K I/O space These allocations are the same on both 32-bit and 64-bit systems. The PCI bus driver starts the bridge and scans the bus behind the bridge.  If there are devices behind the bridge, the PCI bus driver assigns resources to those devices.  If the resources allocated to the bridge are sufficient for the devices behind the bridge, the driver assigns resources to all devices from the bridge resource allocation. All devices can start and operate correctly. If the resources allocated to the bridge are not sufficient for the devices behind the bridge, the driver assigns resources to devices from the bridge resource allocation until the allocation is used up.  Devices that do not receive resources from this allocation cannot be started because, as described earlier, bridge windows are static. The PCI bus driver will not attempt to allocate more resources to the bridge to meet the needs of child devices. Note:  The operating system also enumerates buses during runtime when it receives notification that a hot-plug event or other configuration change has occurred. For information about hot-plug notifications, see the Windows DDK. Problem Scenarios for PCI-to-PCI Bridges  This section describes example scenarios in which the operating system might not be able to start a hot-plugged device. Hot-Plugging a Device that Exceeds Bridge Resources  Assume the bridge is configured by the BIOS to provide resources sufficient only for the devices present behind the bridge when the system is started. After the system is running, the user hot-plugs a device that falls outside the bridge s memory window.  Figure 2 illustrates this scenario. Figure 2.  Hot-plugging a Device that Exceeds Resources Assigned to the Bridge As shown in Figure 2, the BIOS allocates only enough memory to the bridge to serve Device 1 through Device n, which were present on the system when the BIOS configured the bridge. When the user hot-plugs Device n+1, it requires resources that are outside the bridge window, so the device cannot start. Note:  This scenario would also occur if the bridge was not configured by the BIOS and the operating system allocated the default bridge window (1 MB for Windows 2000, or 1 MB   64 MB for Windows Whistler). In this case, any device that requires more resources than are allocated to the bridge cannot start, whether they are hot-plugged or present in the system at startup. BIOS developers can plan ahead for this scenario by assigning sufficient extra resources to the bridge to allow for the requirements of hot-plugged devices.  This is sometimes referred to as  padding the bridge window pre-allocating bridge windows.   The following illustrates how padding the bridge window allows hardware to be successfully hot-plugged behind the bridge.  In this example, the bridge is assigned a total of 2 MB of memory instead of the 1 MB shown in the previous example.  The memory window required by Device n+1 fits within the extra memory window allocated to the bridge. Figure 3.  Hot-plugging a Device that Fits Within the Bridge Window  Hot-Plugging a PCI-to-PCI Bridge with Devices Behind It The user hot-plugs an expansion card that contains a PCI-to-PCI bridge with devices, including PCI-to-PCI bridges, behind it. The BIOS is not involved with configuring a bridge after a hot-plug event. On Windows 2000, the operating system assigns the default 1 MB memory window to the bridge. On Windows Whistler, the operating system assigns a default 1 MB   64 MB window to the bridge.  In this scenario, the operating system can start devices that fit inside the default memory window, but it cannot start devices that fall outside the window due to insufficient resources (a circumstance that is much more likely for Windows 2000 than for Windows Whistler).  Devices that might trigger this scenario include the following: Any hot-pluggable card that includes a bridge, such as a CardBus card with an onboard bridge.  In this case, after the user hot-plugs the card, the operating system will assign default memory and I/O windows to the bridge, but the devices behind the bridge may not get sufficient resources. Hot docking a portable to a docking station that has one or more PCI-to-PCI bridges or CardBus controllers.  Docking can also be a problem if the PCI-to-PCI bridge is in the portable and devices in the dock appear behind that bridge. Any other configuration that allows hot-plugging a device behind a bridge can result in resource allocation problems, depending on the specific scenario. Troubleshooting Devices that cannot be Started  During installation of a device, the Windows Setup and Device Installer Services (also known as SetupAPI) create a log file that provides troubleshooting information for device installation problems.  If a device cannot be started due to insufficient resources, Setupapi.log contains an entry such as the following: Device required reboot: Device has problem: CM_PROB_NORMAL_CONFLICT (Code 12) Note:  The Device Manager also shows the reason a device cannot start. In the Device Manager window, right-click the device and choose Properties. The device status is shown on the General tab in the Properties dialog box.  Problem code 12 indicates that the device cannot find enough free resources to operate.  The user might find it necessary to disable another device to free resources needed by the device that cannot start.  Note that this problem code does not necessarily mean the parent bridge window is too small to accommodate the device. It might indicate that the BIOS did not give the device enough resources for another reason for example, the BIOS did not assign an interrupt to a USB controller due to a missing interrupt entry in an MPS table (Multiprocessor Specification table). If a hot-plugged device cannot be started due to insufficient memory or I/O windows, the user can trigger BIOS reconfiguration of the bridge by restarting the system with the device in place.  This should work for all scenarios except where the BIOS cannot configure the bridge for example, because it is incapable of configuring more than one level of PCI-to-PCI bridges.  In this case, the user must disable another device behind the bridge in order to use the desired device. How the Operating System Configures CardBus Controllers Although CardBus controllers are often considered just another type of PCI-to-PCI bridge, it is important to consider some of the differences between the two technologies to avoid interoperability problems.  This section provides basic information about CardBus technology to help understand the relevant differences.   CardBus (PCMCIA Revision 3) was preceded by the very popular legacy 16-bit technology, PCMCIA Revision 2 (R2).  CardBus was designed to leverage the strengths of R2, such as its large installed base, small form factor and hot-plug support, but move beyond its legacy-related limitations.  Hence, one of the primary design goals of CardBus was to provide backward compatibility with R2 cards and 32-bit PCI technology, all in the same PCMCIA form factor.  This allows use of both CardBus cards and R2 cards in the same slot.   How the Operating System Allocates Resources to CardBus Controllers One requirement that results from supporting both CardBus and R2 technologies in a CardBus slot means that both PCI resources and legacy ISA resources must be allocated to the CardBus controller.  In Windows, PCI resources are allocated to the controller by the PCI driver.  Legacy resources are allocated by the PCMCIA driver.  Each driver handles resources allocation very differently.  This section describes how the PCI and PCMCIA drivers allocate resource to CardBus controllers. BIOS interactions with CardBus controllers are described in detail at http://www.microsoft.com/hwdev/busbios/CardBus1.htm  Allocating PCI Resources to CardBus Controllers The PCI driver is responsible for allocating PCI resources to CardBus controllers in a process similar to allocation of resources to PCI-to-PCI bridges.  Differences in PCI resource allocation between bridges and CardBus controllers make CardBus controllers easier to configure. However, like PCI-to-PCI bridges, once a CardBus controller is started, its PCI resources cannot be reallocated.  When a Windows system starts, the operating system assigns the following PCI resources to CardBus controllers. Windows 2000 resource assignment: One 4K memory window One 2 MB memory window Two 256-byte I/O windows Windows Whistler resource assignment: Because one memory window of 4K and one memory window of 2 MB are not sufficient for CardBus controllers in many configurations, Windows Whistler allocates larger memory windows to CardBus controllers where possible.  However, resource windows are still static.  Under Whistler, CardBus controllers will be assigned the following resources: One 4K memory window, same as for Windows 2000 One 64 MB memory window, if that amount of memory is available. If 64 MB is not available, the bridge will receive 32 MB; if 32 MB is not available, the bridge will receive 16 MB; if 16 MB is not available, the bridge will receive 8 MB; and so on down to a minimum assignment of 1 MB in configurations where memory is too constrained for the operating system to provide a larger window. Two 256K I/O windows Limitations on how bridge windows can be allocated.  CardBus controllers have less rigid restrictions regarding how I/O can be allocated:   The minimum I/O window size for CardBus controllers is 4 bytes, rather than the 4K required by PCI-to-PCI bridges.   The minimum I/O window granularity for CardBus controllers is 4 bytes instead of the 4K required by PCI-to-PCI bridges.   I/O windows for CardBus controllers must be aligned on a 4-byte boundary, rather than a 4K boundary required by PCI-to-PCI bridges. Static I/O (and memory) windows.  As with PCI-to-PCI bridges, once started CardBus controllers cannot have their PCI resources reallocated.  If PCI devices that do not fit within the existing resource window appear behind the controller, the operating system cannot reallocate resources to address the problem. Allocating Legacy Resources to CardBus Controllers When an R2 card is inserted in a CardBus slot, a different process is followed because the PCMCIA driver, not the PCI driver, allocates legacy resources to the controller and device in question. As described earlier in this paper, if a device that consumes legacy resources is installed behind a PCI-to-PCI bridge, the bridge must be placed in subtractive decode (which has significant disadvantages) in order to serve the device.   CardBus was designed specifically for backward compatibility with R2, so it allows a more flexible method for supporting legacy child devices.  For CardBus, the PCMCIA driver can explicitly allocate a legacy resource window that is the exact size requested by a given R2 device.  For example, if an R2 modem inserted in a CardBus slot requests an I/O range of 2F8-2FF, the PCMCIA driver can open a window of that size in the CardBus controller in order to pass those resources to the R2 card.  This makes legacy resource allocation on CardBus efficient and avoids the need for subtractive decode. Problem Scenarios for CardBus Controllers This section describes potential problem scenarios related to hot-plugging devices into CardBus controllers. CardBus Controller Behind a PCI-to-PCI Bridge As described earlier in this paper, CardBus controllers can be configured with resources that cannot possibly fit within a PCI-to-PCI bridge window.  For example, I/O port ranges based at 3f8 can be allocated to a CardBus controller but not to a PCI-to-PCI bridge.   As a result, problems arise with devices that consume legacy resources if a CardBus controller is installed behind a PCI-to-PCI bridge.  This is due to the hierarchical nature of resource allocation.  The controller s parent (the PCI-to-PCI bridge) cannot be configured with legacy resources, so it cannot provide those resources to its child device (the CardBus controller).  Hence, if the CardBus controller s child device requires legacy resources, it cannot receive them. CardBus cards can receive resources from a CardBus controller that is installed behind a PCI-to-PCI bridge in the following cases: CardBus cards will work if the resources requested fit within the PCI-to-PCI bridge and CardBus controller windows. R2 cards that request I/O but do not request a specific range of legacy resources will work if the resource requested align with parent bridge windows. Windows cannot allocate fixed legacy resources to a PCMCIA R2 card in a CardBus slot behind a positive decode PCI-to-PCI bridge. R2 cards that request a specific range of legacy I/O will not work because the ranges cannot fit within the PCI-to-PCI bridge windows. Figure 5 shows an example scenario. Figure 5.  An R2 Modem that Requires Legacy Resources Figure 5 shows a positive decode PCI-to-PCI bridge with a CardBus controller on the secondary bridge and an R2 modem that requires fixed legacy resources in the CardBus slot: The modem requests legacy I/O port ranges based at 2F8. Due to configuration limitations of PCI-to-PCI bridges, legacy I/O ports cannot be assigned to the PCI-to-PCI bridge. Because the ports cannot be assigned to the PCI-to-PCI bridge, the resources cannot be passed to the CardBus controller, which is a child of the bridge. Because the ports cannot be passed to the CardBus controller, it cannot pass them to its child device, the R2 modem. The modem cannot start due to insufficient resources. A subtractive decode bridge could address the resource allocation problems, but would introduce other potential problems as discussed earlier in this paper (performance problems, no DMA among peer devices on the secondary bus, and so forth).  However, some systems designers have taken this approach.  For example, configurations exist that include a CardBus controller behind a subtractive decode PCI-to-PCI bridge in a docking station.  This allows R2 cards in the CardBus slot to receive legacy resources.  However, subtractive decode bridges present significant tradeoffs.  System designers should not place legacy resource consuming devices or CardBus controllers behind bridges to completely avoid this problem and its associated tradeoffs. More Than One Device or Function Behind a CardBus Controller In the past, hardware and software designers often incorrectly assumed that no more than one device would ever be installed behind a CardBus controller. However, as vendors design solutions that provide for more than one device behind a CardBus controller, such as a docking station that connects to a portable computer by way of CardBus, this simplifying assumption breaks down, resulting in configuration problems for devices behind CardBus controllers. As discussed earlier in this paper, the operating system allocates a relatively modest set of resources to CardBus controllers (two 256K I/O windows, a 2 MB memory window, and a 4K memory window).  Child devices present at boot time or that are hot-plugged, but do not fit within the default window the operating system assigns to CardBus controller, will not start. So, if more than one device appears behind the controller, some of them might not work.  Similarly, expansion systems such as docking stations that connect to the system by way of a CardBus controller might include some devices that fit within the CardBus controller s allocated window and some that do not. For example, any functions of a multifunction CardBus card that do not fit within the resource allocation of the controller would not work. Figure 6 shows such a device. Figure 6.  A Multifunction Device Behind a CardBus Controller In Figure 6, the CardBus controller has a 2 MB and a 4K memory window assigned to it by the operating system. Device A is present at system start or is hot-plugged. Function 1 through Function n require all of the memory allocated to the CardBus controller, so Function n+1 cannot start due to insufficient resources. In addition to these resource allocation issues, CardBus controllers must be designed to pass Type 1 (PCI-to-PCI bridge) configuration cycles through the controller so the operating system can configure PCI-to-PCI bridges behind the controller. A PCI-to-PCI bridge can appear on a CardBus card in order to connect from CardBus to more than one PCI device.  For example, a PCI-to-PCI bridge might connect to a universal docking station that includes more than one device. This design works only if the CardBus controller passes Type 1 configuration cycles correctly through the controller so the operating system can configure the bridge. Assuming that resource allocation issues do not cause problems for child devices behind the controller, devices behind the PCI-to-PCI bridge will start.  Windows testers have found CardBus controllers that do not pass Type 1 (PCI-to-PCI bridge) configuration cycles correctly through the controller, which prevents the operating system from configuring the bridge. Designs that assume that PCI-to-PCI bridges will not appear behind the CardBus controller will not work for this scenario. Waking the System from a Device Behind a PCI-to-PCI Bridge Like resource allocation, power management in general and wake in particular are managed through the hierarchical device tree. For a device to wake the system from a low power state, the device and all of its ancestors in the device tree must be wake-capable.  If any parent device in the device tree is not wake-capable, none of its child devices can wake the system, regardless of the devices  power management capabilities.  It is the responsibility of the operating system to determine the wake capabilities of the devices in question, based on industry-specified configuration registers for a given bus.   This fundamental rule of the OnNow archit