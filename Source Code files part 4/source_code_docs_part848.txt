/ Check Winsock2 sockets.
> 		//
> 		dwWaitReturn = WaitForMultipleObjectsEx( LENGTHOF( CoreData.hWaitHandles ),		// count of handles
> 												 CoreData.hWaitHandles,					// handles to wait on
> 												 FALSE,									// don't wait for all to be signalled
> 												 dwMaxWaitTime,							// wait timeout
> 												 TRUE									// we're alertable for APCs
> 												 );
> 		switch ( dwWaitReturn )
> 		{
> 			//
> 			// timeout, don't do anything, we'll probably process timer jobs on
> 			// the next loop
> 			//
> 			case WAIT_TIMEOUT:
> 			{
> 				break;
> 			}
> 			
> 			case ( WAIT_OBJECT_0 + EVENT_INDEX_PENDING_JOB ):
> 			case ( WAIT_OBJECT_0 + EVENT_INDEX_STOP_ALL_THREADS ):
> 			case ( WAIT_OBJECT_0 + EVENT_INDEX_WINSOCK_2_SEND_COMPLETE ):
> 			case ( WAIT_OBJECT_0 + EVENT_INDEX_WINSOCK_2_RECEIVE_COMPLETE ):
> 			{
> 				pThisThreadPool->ProcessWin9xEvents( &CoreData, TRUE );
> 				break;
> 			}
> 
> 			//
> 			// There are I/O completion routines scheduled on this thread.
> 			// This is not a good thing!
> 			//
> 			case WAIT_IO_COMPLETION:
> 			{
> 				DPF( 1, "WARNING: APC was serviced on the primary Win9x IO service thread!  What is the application doing??" );
> 				break;
> 			}
> 
> 			//
> 			// wait failed
> 			//
> 			case WAIT_FAILED:
> 			{
> 				DWORD	dwError;
> 
> 
> 				dwError = GetLastError();
> 				DPF( 0, "Primary Win9x thread wait failed!" );
> 				DisplayDNError( 0, dwError );
> 				break;
> 			}
> 
> 			//
> 			// problem
> 			//
> 			default:
> 			{
> 				DWORD	dwError;
> 
> 
> 				dwError = GetLastError();
> 				DPF( 0, "Primary Win9x thread unknown problem in wait!" );
> 				DisplayDNError( 0, dwError );
> 				DNASSERT( FALSE );
> 				break;
> 			}
> 		}
> 	}
> 
> 	pThisThreadPool->DecrementActiveThreadCount();
> 
> 	DNFree( pParam );
> 
> 	COM_CoUninitialize();
> 
> 	return	0;
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
> // CThreadPool::SecondaryWin9xThread - secondary thread to handle only Win9x
> //		I/O so developers get bit faster with multithreading issues if they're
> //		developing on Win9x.  This thread will only handle Winsock2 based TCP
> //		I/O.  Winsock 1 is not deemed important enough to hack the rest of the
> //		code to work with two threads.
> //
> // Entry:		Pointer to startup parameter
> //
> // Exit:		Error Code
> //
> // Note:	The startup parameter is allocated for this thread and must be
> //			deallocated by this thread when it exits
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME	"CThreadPool::SecondaryWin9xThread"
> 
> DWORD	WINAPI	CThreadPool::SecondaryWin9xThread( void *pParam )
> {
> 	WIN9X_CORE_DATA		CoreData;
> 
> 	CThreadPool		*const pThisThreadPool = static_cast<WIN9X_THREAD_DATA *>( pParam )->pThisThreadPool;
> 
> 	
> 	DNASSERT( pParam != NULL );
> 	DNASSERT( pThisThreadPool != NULL );
> 
> 	//
> 	// initialize
> 	//
> 	memset( &CoreData, 0x00, sizeof CoreData );
> 
> 	//
> 	// before we do anything we need to make sure COM is happy
> 	//
> 	switch ( COM_CoInitialize( NULL ) )
> 	{
> 		//
> 		// no problem
> 		//
> 		case S_OK:
> 		{
> 			break;
> 		}
> 
> 		//
> 		// COM already initialized, huh?
> 		//
> 		case S_FALSE:
> 		{
> 			INT3;
> 			break;
> 		}
> 
> 		//
> 		// COM init failed!
> 		//
> 		default:
> 		{
> 			DPF( 0, "Secondary Win9x thread failed to initialize COM!" );
> 			DNASSERT( FALSE );
> 			break;
> 		}
> 	}
> 
> 	//
> 	// set enums to happen infinitely in the future
> 	//
> 	DNASSERT( CoreData.fTimerJobsActive == FALSE );
> 	memset( &CoreData.NextTimerJobTime, 0xFF, sizeof( CoreData.NextTimerJobTime ) );
> 
> 	//
> 	// set wait handles
> 	//
> 	CoreData.hWaitHandles[ EVENT_INDEX_STOP_ALL_THREADS ] = pThisThreadPool->m_hStopAllThreads;
> 	CoreData.hWaitHandles[ EVENT_INDEX_PENDING_JOB ] = pThisThreadPool->m_JobQueue.GetPendingJobHandle();
> 	CoreData.hWaitHandles[ EVENT_INDEX_WINSOCK_2_SEND_COMPLETE ] = pThisThreadPool->GetWinsock2SendCompleteEvent();
> 	CoreData.hWaitHandles[ EVENT_INDEX_WINSOCK_2_RECEIVE_COMPLETE ] = pThisThreadPool->GetWinsock2ReceiveCompleteEvent();
> 	
> 	DNASSERT( CoreData.hWaitHandles[ EVENT_INDEX_STOP_ALL_THREADS ] != NULL );
> 	DNASSERT( CoreData.hWaitHandles[ EVENT_INDEX_PENDING_JOB ] != NULL );
> 	DNASSERT( CoreData.hWaitHandles[ EVENT_INDEX_WINSOCK_2_SEND_COMPLETE ] != NULL );
> 	DNASSERT( CoreData.hWaitHandles[ EVENT_INDEX_WINSOCK_2_RECEIVE_COMPLETE ] != NULL );
> 	
> 	//
> 	// go until we're told to stop
> 	//
> 	CoreData.fLooping = TRUE;
> 	while ( CoreData.fLooping != FALSE )
> 	{
> 		DWORD	dwWaitReturn;
> 
> 		
> 		//
> 		// Check Winsock2 sockets.
> 		//
> 		dwWaitReturn = WaitForMultipleObjectsEx( LENGTHOF( CoreData.hWaitHandles ),		// count of handles
> 												 CoreData.hWaitHandles,					// handles to wait on
> 												 FALSE,									// don't wait for all to be signalled
> 												 INFINITE,								// wait timeout (forever)
> 												 TRUE									// we're alertable for APCs
> 												 );
> 		switch ( dwWaitReturn )
> 		{
> 			//
> 			// timeout, shouldn't ever be here!!
> 			//
> 			case WAIT_TIMEOUT:
> 			{
> 				INT3;
> 				break;
> 			}
> 
> 			case ( WAIT_OBJECT_0 + EVENT_INDEX_PENDING_JOB ):
> 			case ( WAIT_OBJECT_0 + EVENT_INDEX_STOP_ALL_THREADS ):
> 			case ( WAIT_OBJECT_0 + EVENT_INDEX_WINSOCK_2_SEND_COMPLETE ):
> 			case ( WAIT_OBJECT_0 + EVENT_INDEX_WINSOCK_2_RECEIVE_COMPLETE ):
> 			{
> 				pThisThreadPool->ProcessWin9xEvents( &CoreData, FALSE );
> 				break;
> 			}
> 
> 			//
> 			// There are I/O completion routines scheduled on this thread.
> 			// This is not a good thing!
> 			//
> 			case WAIT_IO_COMPLETION:
> 			{
> 				DPF( 1, "WARNING: APC was serviced on the secondary Win9x IO service thread!  What is the application doing??" );
> 				break;
> 			}
> 
> 			//
> 			// wait failed
> 			//
> 			case WAIT_FAILED:
> 			{
> 				DWORD	dwError;
> 
> 
> 				dwError = GetLastError();
> 				DPF( 0, "Secondary Win9x thread wait failed!" );
> 				DisplayDNError( 0, dwError );
> 				break;
> 			}
> 
> 			//
> 			// problem
> 			//
> 			default:
> 			{
> 				DWORD	dwError;
> 
> 
> 				dwError = GetLastError();
> 				DPF( 0, "Secondary Win9x thread unknown problem in wait!" );
> 				DisplayDNError( 0, dwError );
> 				DNASSERT( FALSE );
> 				break;
> 			}
> 		}
> 	}
> 
> 	pThisThreadPool->DecrementActiveThreadCount();
> 
> 	DNFree( pParam );
> 
> 	COM_CoUninitialize();
> 
> 	return	0;
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
2366a3801,4337
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
> // CThreadPool::DialogThreadProc - thread proc for spawning dialogs
> //
> // Entry:		Pointer to startup parameter
> //
> // Exit:		Error Code
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME	"CThreadPool::DialogThreadProc"
> 
> DWORD WINAPI	CThreadPool::DialogThreadProc( void *pParam )
> {
> 	const DIALOG_THREAD_PARAM	*pThreadParam;
> 
> 
> 	//
> 	// Initialize COM.  If this fails, we'll have problems later.
> 	//
> 	switch ( COM_CoInitialize( NULL ) )
> 	{
> 		case S_OK:
> 		{
> 			break;
> 		}
> 
> 		case S_FALSE:
> 		{
> 			DNASSERT( FALSE );
> 			break;
> 		}
> 
> 		//
> 		// COM init failed!
> 		//
> 		default:
> 		{
> 			DPF( 0, "Failed to initialize COM!" );
> 			DNASSERT( FALSE );
> 			break;
> 		}
> 	}
> 	
> 	DNASSERT( pParam != NULL );
> 	pThreadParam = static_cast<DIALOG_THREAD_PARAM*>( pParam );
> 	
> 	pThreadParam->pDialogFunction( pThreadParam->pContext );
> 
> 	pThreadParam->pThisThreadPool->DecrementActiveThreadCount();
> 	DNFree( pParam );
> 	return	0;
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
> // CThreadPool::ProcessWin9xEvents - process Win9x events
> //
> // Entry:		Pointer to core data
> //				Boolean indicating whether to acknowledge jobs
> //
> // Exit:		Nothing
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME	"CThreadPool::ProcessWin9xEvents"
> 
> void	CThreadPool::ProcessWin9xEvents( WIN9X_CORE_DATA *const pCoreData, const BOOL fProcessDelayedJobs )
> {
> 	DNASSERT( pCoreData != NULL );
> 
> 	//
> 	// If delayed jobs are to be processed, process one.  Otherwise sleep and
> 	// let another thread pick up the jobs.
> 	//
> 	switch ( WaitForSingleObject( pCoreData->hWaitHandles[ EVENT_INDEX_PENDING_JOB ], 0 ) )
> 	{
> 		case WAIT_TIMEOUT:
> 		{
> 			break;
> 		}
> 
> 		case WAIT_OBJECT_0:
> 		{
> 			if ( fProcessDelayedJobs != FALSE )
> 			{
> 			    DPF( 8, "Primary Win9x thread has a pending job!" );
> 				ProcessWin9xJob( pCoreData );
> 			}
> 			else
> 			{
> 				SleepEx( 0, TRUE );
> 			}
> 
> 			break;
> 		}
> 
> 		default:
> 		{
> 			INT3;
> 			break;
> 		}
> 	}
> 
> 	//
> 	// send complete
> 	//
> 	switch ( WaitForSingleObject( pCoreData->hWaitHandles[ EVENT_INDEX_WINSOCK_2_SEND_COMPLETE ], 0 ) )
> 	{
> 		case WAIT_OBJECT_0:
> 		{
> 			//
> 			// reset the event so it will be signalled again if anything
> 			// completes while we're scanning the pending write list
> 			//
> 			if ( ResetEvent( pCoreData->hWaitHandles[ EVENT_INDEX_WINSOCK_2_SEND_COMPLETE ] ) == FALSE )
> 			{
> 				DWORD	dwError;
> 
> 
> 				dwError = GetLastError();
> 				DPF( 0, "Failed to reset Winsock2 send event!" );
> 				DisplayErrorCode( 0, dwError );
> 			}
> 
> 			CompleteOutstandingSends();
> 			
> 			break;
> 		}
> 
> 		case WAIT_TIMEOUT:
> 		{
> 			break;
> 		}
> 
> 		default:
> 		{
> 			INT3;
> 			break;
> 		}
> 	}
> 
> 	//
> 	// receive complete
> 	//
> 	switch ( WaitForSingleObject( pCoreData->hWaitHandles[ EVENT_INDEX_WINSOCK_2_RECEIVE_COMPLETE ], 0 ) )
> 	{
> 		case WAIT_OBJECT_0:
> 		{
> 			//
> 			// reset the event so it will be signalled again if anything
> 			// completes while we're scanning the pending read list
> 			//
> 			if ( ResetEvent( pCoreData->hWaitHandles[ EVENT_INDEX_WINSOCK_2_RECEIVE_COMPLETE ] ) == FALSE )
> 			{
> 				DWORD	dwError;
> 
> 
> 				dwError = GetLastError();
> 				DPF( 0, "Failed to reset Winsock2 receive event!" );
> 				DisplayErrorCode( 0, dwError );
> 			}
> 
> 			CompleteOutstandingReceives();
> 			
> 			break;
> 		}
> 
> 		case WAIT_TIMEOUT:
> 		{
> 			break;
> 		}
> 
> 		default:
> 		{
> 			INT3;
> 			break;
> 		}
> 	}
> 
> 	//
> 	// stop all threads
> 	//
> 	switch ( WaitForSingleObject( pCoreData->hWaitHandles[ EVENT_INDEX_STOP_ALL_THREADS ], 0 ) )
> 	{
> 		case WAIT_OBJECT_0:
> 		{
> 			DPF( 8, "Win9x thread exit because SP closing!" );
> 			pCoreData->fLooping = FALSE;
> 			break;
> 		}
> 	
> 		case WAIT_TIMEOUT:
> 		{
> 			break;
> 		}
> 
> 		default:
> 		{
> 			INT3;
> 			break;
> 		}
> 	}
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
> // CThreadPool::ProcessWin9xJob - process a Win9x job
> //
> // Entry:		Pointer core data
> //
> // Exit:		Nothing
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME	"CThreadPool::ProcessWin9xJob"
> 
> void	CThreadPool::ProcessWin9xJob( WIN9X_CORE_DATA *const pCoreData )
> {
> 	THREAD_POOL_JOB	*pJobInfo;
> 
> 
> 	//
> 	// Remove and process a single job from the list.  If there is no job, skip
> 	// to the end of the function.
> 	//
> 	pJobInfo = GetWorkItem();
> 
> 	if ( pJobInfo == NULL )
> 	{
> 		goto Exit;
> 	}
> 
> 	switch ( pJobInfo->JobType )
> 	{
> 		//
> 		// enum refresh
> 		//
> 		case JOB_REFRESH_TIMER_JOBS:
> 		{
> 			DPF( 8, "WorkThread job REFRESH_ENUM" );
> 			DNASSERT( pJobInfo->JobData.JobRefreshTimedJobs.uDummy == 0 );
> 			LockTimerData();
> 			pCoreData->fTimerJobsActive = ProcessTimerJobs( &m_TimerJobList, &pCoreData->NextTimerJobTime );
> 			UnlockTimerData();
> 
> 			if ( pCoreData->fTimerJobsActive != FALSE )
> 			{
> 				DPF( 8, "There are active timer jobs left after processing a Win9x REFRESH_TIMER_JOBS" );
> 			}
> 
> 			break;
> 		}
> 
> 		//
> 		// issue callback for this job
> 		//
> 		case JOB_DELAYED_COMMAND:
> 		{
> 			DPF( 8, "WorkThread job DELAYED_COMMAND" );
> 			DNASSERT( pJobInfo->JobData.JobDelayedCommand.pCommandFunction != NULL );
> 			pJobInfo->JobData.JobDelayedCommand.pCommandFunction( pJobInfo );
> 			break;
> 		}
> 
> 		//
> 		// other job
> 		//
> 		default:
> 		{
> 			DPF( 0, "WorkThread Win9x job unknown!" );
> 			DNASSERT( FALSE );
> 			break;
> 		}
> 	}
> 
> 	DEBUG_ONLY( pJobInfo->JobType = JOB_UNINITIALIZED );
> 	m_JobPool.Release( &m_JobPool, pJobInfo );
> 
> Exit:
> 	return;
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
> // CThreadPool::CheckWinsock1IO - check the IO status for Winsock1 sockets
> //
> // Entry:		Pointer to sockets to watch
> //
> // Exit:		Boolean indicating whether I/O was serviced
> //				TRUE = I/O serviced
> //				FALSE = I/O not serviced
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME	"CThreadPool::CheckWinsock1IO"
> 
> BOOL	CThreadPool::CheckWinsock1IO( FD_SET *const pWinsock1Sockets )
> {
> static	const TIMEVAL	SelectNoTime = { 0 };
> 	BOOL		fIOServiced;
> 	INT			iSelectReturn;
> 	FD_SET		ReadSocketSet;
> 	FD_SET		WriteSocketSet;
> 	FD_SET		ErrorSocketSet;
> 
> 
> 	//
> 	// Make a local copy of all of the sockets.  This isn't totally
> 	// efficient, but it works.  Multiplying by active socket count will
> 	// spend half the time in the integer multiply.
> 	//
> 	fIOServiced = FALSE;
> 	Lock();
> 	memcpy( &ReadSocketSet, pWinsock1Sockets, sizeof( ReadSocketSet ) );
> 	memcpy( &WriteSocketSet, pWinsock1Sockets, sizeof( WriteSocketSet ) );
> 	memcpy( &ErrorSocketSet, pWinsock1Sockets, sizeof( ErrorSocketSet ) );
> 	Unlock();
> 
> 	//
> 	// Don't check write sockets here because it's very likely that they're ready
> 	// for service but have no outgoing data and will thrash
> 	//
> 	iSelectReturn = p_select( 0,				// compatibility parameter (ignored)
> 							  &ReadSocketSet,	// sockets to check for read
> 							  NULL,				// sockets to check for write (none)
> 							  &ErrorSocketSet,	// sockets to check for error
> 							  &SelectNoTime		// wait timeout (zero, do an instant check)
> 							  );
> 	switch ( iSelectReturn )
> 	{
> 		//
> 		// timeout
> 		//
> 		case 0:
> 		{
> 			break;
> 		}
> 
> 		//
> 		// select got pissed
> 		//
> 		case SOCKET_ERROR:
> 		{
> 			DWORD	dwWSAError;
> 
> 
> 			dwWSAError = p_WSAGetLastError();
> 			switch ( dwWSAError )
> 			{
> 				//
> 				// WSAENOTSOCK = This socket was probably closed
> 				//
> 				case WSAENOTSOCK:
> 				{
> 					DPF( 1, "Winsock1 reporting 'Not a socket' when selecting read or error sockets!" );
> 					break;
> 				}
> 
> 				//
> 				// WSAEINTR = this operation was interrupted
> 				//
> 				case WSAEINTR:
> 				{
> 					DPF( 1, "Winsock1 reporting interrupted operation when selecting read or error sockets!" );
> 					break;
> 				}
> 
> 				//
> 				// other
> 				//
> 				default:
> 				{
> 					DPF( 0, "Problem selecting read or error sockets for service!" );
> 					DisplayWinsockError( 0, dwWSAError );
> 					INT3;
> 					break;
> 				}
> 			}
> 
> 			break;
> 		}
> 
> 		//
> 		// Check for sockets needing read service and error service.
> 		//
> 		default:
> 		{
> 			fIOServiced |= ServiceWinsock1Sockets( &ReadSocketSet, CSocketPort::Winsock1ReadService );
> 			fIOServiced |= ServiceWinsock1Sockets( &ErrorSocketSet, CSocketPort::Winsock1ErrorService );
> 			break;
> 		}
> 	}
> 
> 	//
> 	// Since writes are likely to be ready, check for them separately
> 	//
> 	iSelectReturn = p_select( 0,				// compatibility parameter (ignored)
> 							  NULL,				// sockets to check for read (don't check reads)
> 							  &WriteSocketSet,	// sockets to check for write
> 							  NULL,				// sockets to check for error (don't check errors)
> 							  &SelectNoTime		// wait timeout (zero, do an instant check)
> 							  );
> 	switch ( iSelectReturn )
> 	{
> 		//
> 		// timeout, no write sockets are ready for service
> 		//
> 		case 0:
> 		{
> 			break;
> 		}
> 
> 		//
> 		// select failed
> 		//
> 		case SOCKET_ERROR:
> 		{
> 			DWORD	dwWSAError;
> 
> 
> 			dwWSAError = p_WSAGetLastError();
> 			switch ( dwWSAError )
> 			{
> 				//
> 				// this socket was probably closed
> 				//
> 				case WSAENOTSOCK:
> 				{
> 					DPF( 1, "Winsock1 reporting 'Not a socket' when selecting write sockets!" );
> 					break;
> 				}
> 
> 				//
> 				// other
> 				//
> 				default:
> 				{
> 					DPF( 0, "Problem selecting write sockets for service!" );
> 					DisplayWinsockError( 0, dwWSAError );
> 					INT3;
> 
> 					break;
> 				}
> 			}
> 
> 			break;
> 		}
> 
> 		//
> 		// Check for sockets needing write service
> 		//
> 		default:
> 		{
> 			fIOServiced |= ServiceWinsock1Sockets( &WriteSocketSet, CSocketPort::Winsock1WriteService );
> 			break;
> 		}
> 	}
> 
> 	return	fIOServiced;
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
> // CThreadPool::ServiceWinsock1Sockets - service requests on Winsock1 sockets ports
> //
> // Entry:		Pointer to set of sockets
> //				Pointer to service function
> //
> // Exit:		Boolean indicating whether I/O was serviced
> //				TRUE = I/O serviced
> //				FALSE = I/O not serviced
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME	"CThreadPool::ServiceWinsock1Sockets"
> 
> BOOL	CThreadPool::ServiceWinsock1Sockets( FD_SET *pSocketSet, PSOCKET_SERVICE_FUNCTION pServiceFunction )
> {
> 	BOOL		fReturn;
> 	UINT_PTR	uWaitingSocketCount;
> 	UINT_PTR	uSocketPortCount;
> 	CSocketPort	*pSocketPorts[ FD_SETSIZE ];
> 
> 
> 	//
> 	// initialize
> 	//
> 	fReturn = FALSE;
> 	uSocketPortCount = 0;
> 	uWaitingSocketCount = pSocketSet->fd_count;
> 	
> 	Lock();
> 	while ( uWaitingSocketCount > 0 )
> 	{
> 		UINT_PTR	uIdx;
> 
> 
> 		uWaitingSocketCount--;
> 		uIdx = m_SocketSet.fd_count;
> 		while ( uIdx != 0 )
> 		{
> 			uIdx--;
> 			if ( p___WSAFDIsSet( m_SocketSet.fd_array[ uIdx ], pSocketSet ) != FALSE )
> 			{
> 				//
> 				// this socket is still available, add a reference to the socket
> 				// port and keep it around to be processed outside of the lock
> 				//
> 				pSocketPorts[ uSocketPortCount ] = m_pSocketPorts[ uIdx ];
> 				pSocketPorts[ uSocketPortCount ]->AddRef();
> 				uSocketPortCount++;
> 				uIdx = 0;
> 			}
> 		}
> 	}
> 	Unlock();
> 
> 	while ( uSocketPortCount != 0 )
> 	{
> 		uSocketPortCount--;
> 		
> 		//
> 		// call the service function and remove the reference
> 		//
> 		fReturn |= (pSocketPorts[ uSocketPortCount ]->*pServiceFunction)();
> 		pSocketPorts[ uSocketPortCount ]->DecRef();
> 	}
> 
> 	return	fReturn;
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\threadpool.h)---()---()---()---()---()---()---()---()---()---()  
.  
.  
50a51
> typedef	struct	_WIN9X_CORE_DATA		WIN9X_CORE_DATA;
63a65
> typedef	void	DIALOG_FUNCTION( void *const pDialogContext );
103c105,106
< 			DNASSERT( m_hIOCompletionPort != NULL );
---
> 			DNASSERT( ( ( OSType() == VER_PLATFORM_WIN32_NT ) && ( m_hIOCompletionPort != NULL ) ) ||
> 					  ( ( OSType() == VER_PLATFORM_WIN32_WINDOWS ) && ( m_hIOCompletionPort == NULL ) ) );
155a159
> 			DNASSERT( ( m_hWinsock2SendComplete != NULL ) || ( OSType() == VER_PLATFORM_WIN32_NT ) );
162a167
> 			DNASSERT( ( m_hWinsock2ReceiveComplete != NULL ) || ( OSType() == VER_PLATFORM_WIN32_NT ) );
170a176,178
> 		HRESULT	AddSocketPort( CSocketPort *const pSocketPort );
> 		void	RemoveSocketPort( CSocketPort *const pSocketPort );
> 
181a190,193
> 		HRESULT	SpawnDialogThread( DIALOG_FUNCTION *const pDialogFunction,
> 								   void *const pDialogContext );
> 
> 		
233a246
> 		CContextFixedPool< CReadIOData, READ_IO_DATA_POOL_CONTEXT >	m_IPXReadIODataPool;	// pool for IPX read data
287a301
> 		HRESULT	Win9xInit( void );
297a312,313
> 		void	CompleteOutstandingSends( void );
> 		void	CompleteOutstandingReceives( void );
298a315,316
> 		static	DWORD WINAPI	PrimaryWin9xThread( void *pParam );
> 		static	DWORD WINAPI	SecondaryWin9xThread( void *pParam );
300a319
> 		static	DWORD WINAPI	DialogThreadProc( void *pParam );
305a325,329
> 		void	ProcessWin9xEvents( WIN9X_CORE_DATA *const pCoreData, const BOOL fProcessDelayedJobs );
> 		void	ProcessWin9xJob( WIN9X_CORE_DATA *const pCoreData );
> 
> 		BOOL	CheckWinsock1IO( FD_SET *const pWinsock1Sockets );
> 		BOOL	ServiceWinsock1Sockets( FD_SET *pSocketSet, PSOCKET_SERVICE_FUNCTION pServiceFunction );
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\unk.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
14a15,16
> #include <WSIPX.h>
> 
38a41
> #include	"Creg.h"
39a43,46
> #include	"strutils.h"
> 
> #include	"resource.h"
> 
52a60,68
> #define DN_REG_LOCAL_SP_ROOT				L"Software\\Microsoft\\DirectPlay8"
> #define DN_REG_LOCAL_SP_SUB					L"\\Service Providers"
> #define DN_REG_LOCAL_SP_SUBKEY				DN_REG_LOCAL_SP_ROOT DN_REG_LOCAL_SP_SUB
> #define DN_REG_LOCAL_WSOCK_IPX_ROOT			L"\\DPNSPWinsockIPX"
> #define DN_REG_LOCAL_WSOCK_TCPIP_ROOT		L"\\DPNSPWinsockTCP"
> #define	DN_REG_KEYNAME_ALL_APPLICATIONS		L"All Applications"
> #define	DN_REG_KEYNAME_FRIENDLY_NAME		L"Friendly Name"
> #define DN_REG_KEYNAME_GUID					L"GUID"
> 
75c91,120
< // this is the vtable for IP.
---
> // these are the vtables for IPX and IP.  One or the other is used depending on
> // what is passed to DoCreateInstance.  The interfaces are presently the same,
> // but are different structures to facilitate potential future changes.
> static IDP8ServiceProviderVtbl	ipxInterface =
> {
> 	DNSP_QueryInterface,
> 	DNSP_AddRef,
> 	DNSP_Release,
> 	DNSP_Initialize,
> 	DNSP_Close,
> 	DNSP_Connect,
> 	DNSP_Disconnect,
> 	DNSP_Listen,
> 	DNSP_SendData,
> 	DNSP_EnumQuery,
> 	DNSP_EnumRespond,
> 	DNSP_CancelCommand,
> 	DNSP_CreateGroup,
> 	DNSP_DeleteGroup,
> 	DNSP_AddToGroup,
> 	DNSP_RemoveFromGroup,
> 	DNSP_GetCaps,
> 	DNSP_SetCaps,
> 	DNSP_ReturnReceiveBuffers,
> 	DNSP_GetAddressInfo,
> 	DNSP_IsApplicationSupported,
> 	DNSP_EnumAdapters,
> 	DNSP_ProxyEnumQuery
> };
> 
139a185,244
> // CreateIPXInterface - create an IPX interface
> //
> // Entry:		Pointer to pointer to SP interface
> //				Pointer to pointer to associated SP data
> //
> // Exit:		Error code
> // ------------------------------
> #undef DPF_MODNAME
> #define DPF_MODNAME "CreateIPXInterface"
> 
> static	HRESULT CreateIPXInterface( IDP8ServiceProvider **const ppiDNSP, CSPData **const ppSPData )
> {
> 	HRESULT 	hr;
> 	CSPData		*pSPData;
> 
> 
> 	DNASSERT( ppiDNSP != NULL );
> 	DNASSERT( ppSPData != NULL );
> 
> 	//
> 	// initialize
> 	//
> 	hr = DPN_OK;
> 	pSPData = NULL;
> 	*ppiDNSP = NULL;
> 	*ppSPData = NULL;
> 
> 	//
> 	// create main data class
> 	//
> 	hr = CreateSPData( &pSPData, &CLSID_DP8SP_IPX, TYPE_IPX, &ipxInterface );
> 	if ( hr != DPN_OK )
> 	{
> 		DNASSERT( pSPData == NULL );
> 		DPF( 0, "Problem creating SPData!" );
> 		DisplayDNError( 0, hr );
> 		goto Failure;
> 	}
> 
> 	DNASSERT( pSPData != NULL );
> 	*ppiDNSP = pSPData->COMInterface();
> 	*ppSPData = pSPData;
> 
> Exit:
> 	return hr;
> 
> Failure:
> 	if ( pSPData != NULL )
> 	{
> 		pSPData->DecRef();
> 		pSPData = NULL;
> 	}
> 
> 	goto Exit;
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
232a338,340
> 	//
> 	// we can either create an IPX instance or an IP instance
> 	//
238a347,350
> 	else if (IsEqualCLSID(rclsid, CLSID_DP8SP_IPX))
> 	{
> 		hr = CreateIPXInterface( ppIDNSP, &pSPData );
> 	}
282c394
< 	return (IsEqualCLSID(rclsid, CLSID_DP8SP_TCPIP));
---
> 	return ( IsEqualCLSID( rclsid, CLSID_DP8SP_TCPIP ) || IsEqualCLSID( rclsid, CLSID_DP8SP_IPX ) );
376a489,740
> #define MAX_RESOURCE_STRING_LENGTH		_MAX_PATH
> 
> #undef DPF_MODNAME
> #define DPF_MODNAME "LoadAndAllocString"
> 
> HRESULT LoadAndAllocString( UINT uiResourceID, wchar_t **lpswzString )
> {
> 	int length;
> 	HRESULT hr;
> 
> 	if( DNGetOSType() == VER_PLATFORM_WIN32_NT )
> 	{
> 		wchar_t wszTmpBuffer[MAX_RESOURCE_STRING_LENGTH];	
> 		
> 		length = LoadStringW( g_hDLLInstance, uiResourceID, wszTmpBuffer, MAX_RESOURCE_STRING_LENGTH );
> 
> 		if( length == 0 )
> 		{
> 			hr = GetLastError();		
> 			
> 			DPF( 0, "Unable to load resource ID %d error 0x%x", uiResourceID, hr );
> 			*lpswzString = NULL;
> 
> 			return hr;
> 		}
> 		else
> 		{
> 			*lpswzString = new wchar_t[length+1];
> 
> 			if( *lpswzString == NULL )
> 			{
> 				DPF( 0, "Alloc failure" );
> 				return DPNERR_OUTOFMEMORY;
> 			}
> 
> 			wcscpy( *lpswzString, wszTmpBuffer );
> 
> 			return DPN_OK;
> 		}
> 	}
> 	else
> 	{
> 		char szTmpBuffer[MAX_RESOURCE_STRING_LENGTH];
> 		
> 		length = LoadStringA( g_hDLLInstance, uiResourceID, szTmpBuffer, MAX_RESOURCE_STRING_LENGTH );
> 
> 		if( length == 0 )
> 		{
> 			hr = GetLastError();		
> 			
> 			DPF( 0, "Unable to load resource ID %d error 0x%x", uiResourceID, hr );
> 			*lpswzString = NULL;
> 
> 			return hr;
> 		}
> 		else
> 		{
> 			*lpswzString = new wchar_t[length+1];
> 
> 			if( *lpswzString == NULL )
> 			{
> 				DPF( 0, "Alloc failure" );
> 				return DPNERR_OUTOFMEMORY;
> 			}
> 
> 			if( STR_jkAnsiToWide( *lpswzString, szTmpBuffer, length+1 ) == 0 )
> 			{
> 				hr = GetLastError();
> 				
> 				DPF( 0, "Unable to upconvert from ansi to unicode hr=0x%x", hr );
> 				return hr;
> 			}
> 
> 			return DPN_OK;
> 		}
> 		
> 	}
> }
> 
> #undef DPF_MODNAME
> #define DPF_MODNAME "RegisterDefaultSettings"
> //
> // RegisterDefaultSettings
> //
> // This function registers the default settings for this module.
> //
> // For DPVOICE.DLL this is making sure the compression provider sub-key is created.
> //
> HRESULT RegisterDefaultSettings()
> {
> 	CRegistry creg;
> 	WCHAR *wszFriendlyName = NULL;
> 	HRESULT hr;
> 
> 	if( !creg.Open( HKEY_LOCAL_MACHINE, DN_REG_LOCAL_SP_ROOT DN_REG_LOCAL_SP_SUB DN_REG_LOCAL_WSOCK_IPX_ROOT, FALSE, TRUE ) )
> 	{
> 		DPFERR( "Cannot create IPX sub-aread" );
> 		return DPNERR_GENERIC;
> 	}
> 
> 	creg.WriteString( DN_REG_KEYNAME_ALL_APPLICATIONS, L"Y" );
> 
> 	hr = LoadAndAllocString( IDS_FRIENDLYNAME_IPX, &wszFriendlyName );
> 
> 	if( FAILED( hr ) )
> 	{
> 		DPF( 0, "Could not load IPX name hr=0x%x", hr );
> 		return hr;
> 	}
> 
> 	// Load from resource file
> 	creg.WriteString( DN_REG_KEYNAME_FRIENDLY_NAME, wszFriendlyName );
> 
> 	delete [] wszFriendlyName;
> 
> 	creg.WriteGUID( DN_REG_KEYNAME_GUID, CLSID_DP8SP_IPX );
> 
> 	creg.Close();
> 
> 	if( !creg.Open( HKEY_LOCAL_MACHINE, DN_REG_LOCAL_SP_ROOT DN_REG_LOCAL_SP_SUB DN_REG_LOCAL_WSOCK_TCPIP_ROOT, FALSE, TRUE ) )
> 	{
> 		DPFERR( "Cannot create TCPIP sub-aread" );
> 		return DPNERR_GENERIC;
> 	}
> 
> 	creg.WriteString( DN_REG_KEYNAME_ALL_APPLICATIONS, L"Y" );
> 
> 	hr = LoadAndAllocString( IDS_FRIENDLYNAME_TCPIP, &wszFriendlyName );
> 
> 	if( FAILED( hr ) )
> 	{
> 		DPF( 0, "Could not load IPX name hr=0x%x", hr );
> 		return hr;
> 	}
> 
> 	// Load from resource file
> 	creg.WriteString( DN_REG_KEYNAME_FRIENDLY_NAME, wszFriendlyName );
> 
> 	delete [] wszFriendlyName;
> 
> 	creg.WriteGUID( DN_REG_KEYNAME_GUID, CLSID_DP8SP_TCPIP );
> 
> 	creg.Close();
> 
> 	return DPN_OK;
> }
> 
> #undef DPF_MODNAME
> #define DPF_MODNAME "UnRegisterDefaultSettings"
> //
> // UnRegisterDefaultSettings
> //
> // This function registers the default settings for this module.
> //
> // For DPVOICE.DLL this is making sure the compression provider sub-key is created.
> //
> HRESULT UnRegisterDefaultSettings()
> {
> 	CRegistry creg;
> 
> 	if( !creg.Open( HKEY_LOCAL_MACHINE, DN_REG_LOCAL_SP_ROOT DN_REG_LOCAL_SP_SUB, FALSE, TRUE ) )
> 	{
> 		DPFERR( "Cannot remove app, does not exist" );
> 	}
> 	else
> 	{
> 		if( !creg.DeleteSubKey( &(DN_REG_LOCAL_WSOCK_IPX_ROOT)[1] ) )
> 		{
> 			DPFERR( "Cannot remove IPX sub-key, could have elements" );
> 		}
> 
> 		if( !creg.DeleteSubKey( &(DN_REG_LOCAL_WSOCK_TCPIP_ROOT)[1] ) )
> 		{
> 			DPFERR( "Cannot remove TCPIP sub-key, could have elements" );
> 		}
> 
> 	}
> 
> 	return DPN_OK;
> }
> 
> #undef DPF_MODNAME
> #define DPF_MODNAME "DllRegisterServer"
> HRESULT WINAPI DllRegisterServer()
> {
> 	HRESULT hr = S_OK;
> 	BOOL fFailed = FALSE;
> 
> 	if( !CRegistry::Register( L"DirectPlay8SPWSock.IPX.1", L"DirectPlay8 WSock IPX Provider Object",
> 							  L"dpnwsock.dll", CLSID_DP8SP_IPX, L"DirectPlay8SPWSock.IPX") )
> 	{
> 		DPFERR( "Could not register dp8 IPX object" );
> 		fFailed = TRUE;
> 	}
> 
> 	if( !CRegistry::Register( L"DirectPlay8SPWSock.TCPIP.1", L"DirectPlay8 WSock TCPIP Provider Object",
> 							  L"dpnwsock.dll", CLSID_DP8SP_TCPIP, L"DirectPlay8SPWSock.TCPIP") )
> 	{
> 		DPFERR( "Could not register dp8 IP object" );
> 		fFailed = TRUE;
> 	}
> 
> 	if( FAILED( hr = RegisterDefaultSettings() ) )
> 	{
> 		DPF( 0, "Could not register default settings hr = 0x%x", hr );
> 		fFailed = TRUE;
> 	}
> 	
> 	if( fFailed )
> 	{
> 		return E_FAIL;
> 	}
> 	else
> 	{
> 		return S_OK;
> 	}
> }
> 
> #undef DPF_MODNAME
> #define DPF_MODNAME "DllUnregisterServer"
> STDAPI DllUnregisterServer()
> {
> 	HRESULT hr = S_OK;
> 	BOOL fFailed = FALSE;
> 
> 	if( !CRegistry::UnRegister(CLSID_DP8SP_IPX) )
> 	{
> 		DPF( 0, "Failed to unregister IPX object" );
> 		fFailed = TRUE;
> 	}
> 
> 	if( !CRegistry::UnRegister(CLSID_DP8SP_TCPIP) )
> 	{
> 		DPF( 0, "Failed to unregister IP object" );
> 		fFailed = TRUE;
> 	}
> 
> 	if( FAILED( hr = UnRegisterDefaultSettings() ) )
> 	{
> 		DPF( 0, "Failed to remove default settings hr=0x%x", hr );
> 	}
> 
> 	if( fFailed )
> 	{
> 		return E_FAIL;
> 	}
> 	else
> 	{
> 		return S_OK;
> 	}
> 
> }
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\utils.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
16a17,18
> #include <WSIPX.h>
> 
19a22
> #include	"DWinsock.h"
48,51d50
< // provides us winsock1/2 support
< #include "dwnsock1.inc"
< #include "dwnsock2.inc"
< 
81a81,82
> static	DWSSTATE	g_dwsState;		// state info for the WS1/2 glue lib
> 
84a86
> static DWORD_PTR	OverrideWinsockVersion( void );
92a95,165
> // OverrideWinsockVersion - override the Winsock version used by the SP
> //
> // Entry:		Nothing
> //
> // Exit:		Max Winsock version to ask for
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME "OverrideWinsockVersion"
> 
> static DWORD_PTR	OverrideWinsockVersion( void )
> {
> 	DWORD_PTR	WinsockVersion;
> 
> 
> 	//
> 	// check for override for OS version and Winsock version
> 	//
> 	g_uOSType = DNGetOSType();
> 	WinsockVersion = 2;
> 
> 	switch ( GetProfileInt( "DirectPlay8", "WinsockVersion", 0 ) )
> 	{
> 		//
> 		// Use Winsock1.  If this is an NT machine, fake it into
> 		// thinking it's Win9x.
> 		//
> 		case 1:
> 		{
> 			DPF( 0, "Winsock overridden to Winsock1 support!" );
> 			if ( g_uOSType == VER_PLATFORM_WIN32_NT )
> 			{
> 				g_uOSType = VER_PLATFORM_WIN32_WINDOWS;
> 			}
> 			WinsockVersion = 1;
> 				
> 			break;
> 		}
> 
> 		//
> 		// Use Winsock2.  If this is an NT machine, fake it into
> 		// thinking it's Win9x.
> 		//
> 		case 2:
> 		{
> 			DPF( 0, "Winsock overridden to Win9x Winsock2 support!" );
> 			if ( g_uOSType == VER_PLATFORM_WIN32_NT )
> 			{
> 				g_uOSType = VER_PLATFORM_WIN32_WINDOWS;
> 			}
> 			DNASSERT( WinsockVersion == 2 );
> 
> 			break;
> 		}
> 
> 		//
> 		// OS default
> 		//
> 		default:
> 		{
> 			DNASSERT( WinsockVersion == 2 );
> 			break;
> 		}
> 	}
> 
> 	return	WinsockVersion;
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
109a183,184
> 	INT			iVersion;
> 	DWORD_PTR	MaxWinsockVersion;
119a195,196
> 	MaxWinsockVersion = OverrideWinsockVersion();
> 
135c212
< 	// initialize Winsock
---
> 	// initialize the bindings to Winsock
137,143c214,215
< 	WORD wVersionRequested;
< 	WSADATA wsaData;
< 	int nRet;
< 
< 	wVersionRequested = MAKEWORD(2,2);
< 	nRet = p_WSAStartup(wVersionRequested, &wsaData);
< 	if (nRet || wVersionRequested != wsaData.wVersion)
---
> 	iVersion = DWSInitWinSock( &g_dwsState, MaxWinsockVersion );
> 	if ( iVersion == 0 )	// failure
145,147c217,219
< 		DPF( 0, "Problem starting winsock!" );
< 	    fReturn = FALSE;
< 	    goto Failure;
---
> 		DPF( 0, "Problem binding dynamic winsock functions!" );
> 		fReturn = FALSE;
> 		goto Failure;
149d220
< 
151a223,224
> 	DPF( 8, "Detected WinSock version %d.%d\n", LOBYTE( iVersion ), HIBYTE( iVersion ) );	
> 
161c234,242
< 		p_WSACleanup();
---
> 		BOOL	fFreeReturn;
> 
> 
> 		fFreeReturn = DWSFreeWinSock( &g_dwsState );
> 		if ( fFreeReturn == FALSE )
> 		{
> 			DPF( 0, "Problem unbinding dynamic winsock functions!" );
> 		}
> 
194a276,278
> 	BOOL	fFreeReturn;
> 
> 
198c282,286
< 	p_WSACleanup();
---
> 	fFreeReturn = DWSFreeWinSock( &g_dwsState );
> 	if ( fFreeReturn == FALSE )
> 	{
> 		DPF( 0, "Problem unbinding dynamic winsock functions!" );
> 	}
205a294,303
> //**********************************************************************
> // ------------------------------
> // GetWinsockVersion - get the version of Winsock
> //
> // Entry:		Nothing
> //
> // Exit:		Winsock version
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME "GetWinsockVersion"
206a305,308
> INT	GetWinsockVersion( void )
> {
> 	return	g_dwsState.nVersion;
> }
207a310,312
> 
> 
> //**********************************************************************
298a404
> 	INT_PTR iWinsockVersion;
308a415
> 	iWinsockVersion = GetWinsockVersion();
610c717
< /* BUGBUG: [mgere] [xbox] Removed -- multiple adapters not supported on xbox
---
> 
645c752
< */
---
> 
655c762
< /*	AdapterInfo.guid = *pAdapterGUID;
---
> 	AdapterInfo.guid = *pAdapterGUID;
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\utils.h)---()---()---()---()---()---()---()---()---()---()  
.  
.  
48a49,50
> INT		GetWinsockVersion( void );
> 
60c62
< /* BUGBUG: [mgere] [xbox] Removed -- multiple adapters not supported on xbox
---
> 
64d65
< */
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\wsocksp.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
22a23
> #include	<WSIPX.h>
169a171,174
>  	switch ( pSPData->GetType() )
> 	{
> 		case TYPE_IP:
> 		{
171a177,192
> 			break;
> 		}
> 
> 		case TYPE_IPX:
> 		{
> 			DPF( 9, "Attempting to create IPX datagram socket." );
> 			TestSocket = p_socket( AF_IPX, SOCK_DGRAM, NSPROTO_IPX );
> 			break;
> 		}
> 
> 		default:
> 		{
> 			DNASSERT( FALSE );
> 			break;
> 		}
> 	}
239a261
> 		case TYPE_IPX:
334a357
> 	IDirectPlay8Address		*pSPOnlyAddress;
342c365
< 	DNASSERT( ( pEnumQueryData->dwFlags & ~( DPNSPF_OKTOSHOWSTATUS | DPNSPF_NOBROADCASTFALLBACK ) ) == 0 );
---
> 	DNASSERT( ( pEnumQueryData->dwFlags & ~( DPNSPF_OKTOSHOWSTATUS | DPNSPF_OKTOQUERY | DPNSPF_NOBROADCASTFALLBACK ) ) == 0 );
357a381
> 	pSPOnlyAddress = NULL;
407a432,479
> 		HRESULT	hTempResult;
> 		GUID	SPGuid;
> 
> 
> 		//
> 		// get the SP
> 		//
> 		hTempResult = IDirectPlay8Address_GetSP( pEnumQueryData->pAddressDeviceInfo, &SPGuid );
> 		switch ( hTempResult )
> 		{
> 			//
> 			// no problem
> 			//
> 			case DPN_OK:
> 			{
> 				DNASSERT( hr == DPNERR_PENDING );
> 				break;
> 			}
> 
> 			//
> 			// pass these errors throug
> 			//
> 			case DPNERR_OUTOFMEMORY:
> 			{
> 				hr = hTempResult;
> 				goto Failure;
> 				break;
> 			}
> 
> 			//
> 			// remap other errors to addressing errors
> 			//
> 			default:
> 			{
> 				hr = DPNERR_ADDRESSING;
> 				goto Failure;
> 				break;
> 			}
> 		}
> 
> 		//
> 		// The host address is NULL, if we're using TCPIP and we're not allowed to query,
> 		// use the broadcast address.  If we're on IPX, use the broadcast address.
> 		//
> 		if ( ( ( ( pEnumQueryData->dwFlags & DPNSPF_OKTOQUERY ) == 0 ) &&
> 			   ( IsEqualCLSID( SPGuid, CLSID_DP8SP_TCPIP ) != FALSE ) ) ||
> 			 ( IsEqualCLSID( SPGuid, CLSID_DP8SP_IPX ) != FALSE ) )
> 		{
409a482,529
> 		}
>         else
>         {
> 			HRESULT	hTempResult;
> 
> 
> 			//
> 			// Need to build address with just the SP guid.  Get it from the
> 			// device address.
> 			//
> 			DNASSERT( pSPOnlyAddress == NULL );
> 			hTempResult = COM_CoCreateInstance( CLSID_DirectPlay8Address,
> 											NULL,
> 											CLSCTX_INPROC_SERVER,
> 											IID_IDirectPlay8Address,
> 											reinterpret_cast<void**>( &pSPOnlyAddress ) );
> 			if ( hTempResult != S_OK )
> 			{
> 				DPF( 0, "Failed to create SP-Only address when non was supplied!" );
> 				hr = DPNERR_OUTOFMEMORY;
> 				goto Failure;
> 			}
> 
> 			hTempResult = IDirectPlay8Address_SetSP( pSPOnlyAddress, &SPGuid );
> 			switch ( hTempResult )
> 			{
> 				//
> 				// set SP, no problem
> 				//
> 				case DPN_OK:
> 				{
> 					break;
> 				}
> 
> 				//
> 				// failed to set SP, map error to an addressing error
> 				//
> 				default:
> 				{
> 					hr = DPNERR_ADDRESSING;
> 					goto Failure;
> 
> 					break;
> 				}
> 			}
> 
> 			pHostAddress = pSPOnlyAddress;
> 		}
541a662,693
> 			if ( ( ( pEnumQueryData->dwFlags & DPNSPF_OKTOQUERY ) != 0 ) &&
> 				 ( pSPData->GetType() == TYPE_IP ) )
> 			{
> 				//
> 				// Copy the connect data locally and start the dialog.  When the
> 				// dialog completes, the connection will attempt to complete.
> 				// Since the dialog is being popped, this command is in progress,
> 				// not pending.
> 				//
> 				DNASSERT( pSPData != NULL );
> 
> 				pCommand->SetState( COMMAND_STATE_INPROGRESS );
> 				pEndpoint->CopyEnumQueryData( pEnumQueryData, pDeviceAddress );
> 				hr = pEndpoint->ShowSettingsDialog( pSPData->GetThreadPool() );
> 				if ( hr != DPN_OK )
> 				{
> 					DPF( 0, "Problem showing settings dialog for enum query!" );
> 					DisplayDNError( 0, hr );
> 
> 					goto Failure;
> 				}
> 
> 				//
> 				// this endpoint has been handed off, remove our reference to it
> 				//
> 				pEndpoint = NULL;
> 				hr = DPNERR_PENDING;
> 
> 				goto Exit;
> 			}
> 			else
> 			{
555a708,709
> 			}
> 
633a788,793
> 	if ( pSPOnlyAddress != NULL )
> 	{
> 		IDirectPlay8Address_Release( pSPOnlyAddress );
> 		pSPOnlyAddress = NULL;
> 	}
> 
832c992
< 	DNASSERT( ( pConnectData->dwFlags & ~( DPNSPF_OKTOSHOWSTATUS | DPNSPF_RELIABLE | DPNSPF_UNRELIABLE ) ) == 0 );
---
> 	DNASSERT( ( pConnectData->dwFlags & ~( DPNSPF_OKTOSHOWSTATUS | DPNSPF_OKTOQUERY | DPNSPF_RELIABLE | DPNSPF_UNRELIABLE ) ) == 0 );
1044a1205,1233
> 			if ( ( pConnectData->dwFlags & DPNSPF_OKTOQUERY ) != 0 )
> 			{
> 				//
> 				// Copy the connect data locally and start the dialog.  When the
> 				// dialog completes, the connection will attempt to complete.
> 				// Since a dialog is being displayed, the command is in-progress,
> 				// not pending.
> 				//
> 				pCommand->SetState( COMMAND_STATE_INPROGRESS );
> 				pEndpoint->CopyConnectData( pConnectData, pDeviceAddress );
> 				hr = pEndpoint->ShowSettingsDialog( pSPData->GetThreadPool() );
> 				if ( hr != DPN_OK )
> 				{
> 					DPF( 0, "Problem showing settings dialog for connect!" );
> 					DisplayDNError( 0, hr );
> 
> 					goto Failure;
> 				}
> 
> 				//
> 				// this endpoint has been handed off, remove our reference to it
> 				//
> 				pEndpoint = NULL;
> 				hr = DPNERR_PENDING;
> 
> 				goto Exit;
> 			}
> 			else
> 			{
1045a1235,1236
> 			}
> 
1322a1514
> 										  DPNSPF_OKTOQUERY |
1538a1731,1762
> 			if ( ( pListenData->dwFlags & DPNSPF_OKTOQUERY ) != 0 )
> 			{
> 				//
> 				// Copy the listen data locally and start the dialog.  When the
> 				// dialog completes, the connection will attempt to complete.
> 				// Since this endpoint is being handed off to another thread,
> 				// make sure it's in the unbound list.  Since a dialog is being
> 				// displayed, the command state is in progress, not pending.
> 				//
> 				DNASSERT( pSPData != NULL );
> 
> 				pEndpoint->CopyListenData( pListenData, pDeviceAddress );
> 				pCommand->SetState( COMMAND_STATE_INPROGRESS );
> 				hr = pEndpoint->ShowSettingsDialog( pSPData->GetThreadPool() );
> 				if ( hr != DPN_OK )
> 				{
> 					DPF( 0, "Problem showing settings dialog for listen!" );
> 					DisplayDNError( 0, hr );
> 
> 					goto Failure;
> 				}
> 
> 				//
> 				// this endpoint has been handed off, remove out reference to it
> 				//
> 				pEndpoint = NULL;
> 				hr = DPNERR_PENDING;
> 
> 				goto Exit;
> 			}
> 			else
> 			{
1539a1764,1765
> 			}
> 
2457a2684,2695
> 		// Multicast groups are unsupported on IPX.
> 		//
> 		case TYPE_IPX:
> 		{
> 			hr = DPNERR_UNSUPPORTED;
> 			DPF( 0, "Attempted to AddToGroup on IPX!" );
> 			goto Failure;
> 
> 			break;
> 		}
> 
> 		//
2650a2889,2900
> 		//
> 		// multicast groups are unsupported on IPX
> 		//
> 		case TYPE_IPX:
> 		{
> 			hr = DPNERR_UNSUPPORTED;
> 			DPF( 0, "Attempted to AddToGroup on IPX!" );
> 			goto Failure;
> 
> 			break;
> 		}
> 
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\wsocksp.def)---()---()---()---()---()---()---()---()---()---()  
.  
.  
6a7,8
>   DllRegisterServer PRIVATE
>   DllUnregisterServer PRIVATE
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\wsocksp.h)---()---()---()---()---()---()---()---()---()---()  
.  
.  
28a29,30
> 	TYPE_IPX			// IPX type
> 
.  
.  
()---()---()---()---()---()---()---()---()---(--)---()---()---()---()---()---()---()---()---()---()  
.  
.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dplay\diff\09061330.txt ===
-- D:\xbox\private\windows\directx\dplay : D:\nt\MULTIM~1\DirectX\dplay\dnet -- includes differing files
.\dirs	different (D:\nt\MULTIM~1\DirectX\dplay\dnet is more recent)	????????	????????
.\common\comutil.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\common\comutil.h	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\common\dneterrors.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\common\guidutil.cpp	different (D:\nt\MULTIM~1\DirectX\dplay\dnet is more recent)	1ece02cc	6bb05875
.\common\osind.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\common\osind.h	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\common\packbuff.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\common\packbuff.h	different (D:\nt\MULTIM~1\DirectX\dplay\dnet is more recent)	????????	????????
.\common\sources	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\common\strutils.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\common\strutils.h	different (D:\nt\MULTIM~1\DirectX\dplay\dnet is more recent)	????????	????????
.\core\appdesc.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\core\appdesc.h	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\core\async.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\core\async.h	different (D:\nt\MULTIM~1\DirectX\dplay\dnet is more recent)	????????	????????
.\core\classfac.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\core\client.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\core\common.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\core\common.h	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\core\connect.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\core\dirs	different (D:\nt\MULTIM~1\DirectX\dplay\dnet is more recent)	????????	????????
.\core\dllmain.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\core\dncore.h	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\core\dnet.def	different (D:\nt\MULTIM~1\DirectX\dplay\dnet is more recent)	????????	????????
.\core\dnet.rc	different (D:\nt\MULTIM~1\DirectX\dplay\dnet is more recent)	????????	????????
.\core\enum_sp.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\core\migration.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\core\msghandler.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\core\ntentry.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\core\paramval.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\core\paramval.h	different (D:\nt\MULTIM~1\DirectX\dplay\dnet is more recent)	????????	????????
.\core\peer.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\core\server.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\core\sources.inc	different (D:\nt\MULTIM~1\DirectX\dplay\dnet is more recent)	????????	????????
.\dnaddress\addbase.cpp	different (D:\nt\MULTIM~1\DirectX\dplay\dnet is more recent)	????????	????????
.\dnaddress\addcore.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\dnaddress\addcore.h	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\dnaddress\addparse.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\dnaddress\dirs	different (D:\nt\MULTIM~1\DirectX\dplay\dnet is more recent)	????????	????????
.\dnaddress\dllmain.cpp	different (D:\nt\MULTIM~1\DirectX\dplay\dnet is more recent)	????????	????????
.\dnaddress\dnadd.def	different (D:\nt\MULTIM~1\DirectX\dplay\dnet is more recent)	????????	????????
.\dnaddress\dnadd.rc	different (D:\nt\MULTIM~1\DirectX\dplay\dnet is more recent)	????????	????????
.\dnaddress\sources.inc	different (D:\nt\MULTIM~1\DirectX\dplay\dnet is more recent)	????????	????????
.\inc\dpaddr.h	different (D:\nt\MULTIM~1\DirectX\dplay\dnet is more recent)	????????	????????
.\inc\dplay8.h	different (D:\nt\MULTIM~1\DirectX\dplay\dnet is more recent)	????????	????????
.\inc\dpsp8.h	different (D:\nt\MULTIM~1\DirectX\dplay\dnet is more recent)	????????	????????
.\protocol\connect.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\protocol\enum.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\protocol\initialize.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\protocol\sources	different (D:\nt\MULTIM~1\DirectX\dplay\dnet is more recent)	????????	????????
.\protocol\timer.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\sp\dirs	different (D:\nt\MULTIM~1\DirectX\dplay\dnet is more recent)	????????	????????
.\sp\wsock\classfac.cpp	different (D:\nt\MULTIM~1\DirectX\dplay\dnet is more recent)	????????	????????
.\sp\wsock\cmddata.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\sp\wsock\debugutils.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\sp\wsock\dirs	different (D:\nt\MULTIM~1\DirectX\dplay\dnet is more recent)	????????	????????
.\sp\wsock\dnwsock.rc	different (D:\nt\MULTIM~1\DirectX\dplay\dnet is more recent)	????????	????????
.\sp\wsock\dwnsock1.inc	different (D:\nt\MULTIM~1\DirectX\dplay\dnet is more recent)	????????	????????
.\sp\wsock\dwnsock2.inc	different (D:\nt\MULTIM~1\DirectX\dplay\dnet is more recent)	????????	????????
.\sp\wsock\endpoint.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\sp\wsock\endpoint.h	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\sp\wsock\iodata.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\sp\wsock\iodata.h	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\sp\wsock\ipaddress.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\sp\wsock\ipendpt.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\sp\wsock\ipendpt.h	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\sp\wsock\locals.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\sp\wsock\locals.h	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\sp\wsock\pools.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\sp\wsock\pools.h	different (D:\nt\MULTIM~1\DirectX\dplay\dnet is more recent)	????????	????????
.\sp\wsock\rsip.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\sp\wsock\sendqueue.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\sp\wsock\socketport.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\sp\wsock\socketport.h	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\sp\wsock\sources.inc	different (D:\nt\MULTIM~1\DirectX\dplay\dnet is more recent)	????????	????????
.\sp\wsock\spaddress.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\sp\wsock\spaddress.h	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\sp\wsock\spdata.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\sp\wsock\spdata.h	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\sp\wsock\threadpool.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\sp\wsock\threadpool.h	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\sp\wsock\unk.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\sp\wsock\utils.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\sp\wsock\utils.h	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\sp\wsock\wsocksp.cpp	different (D:\xbox\private\windows\directx\dplay is more recent)	????????	????????
.\sp\wsock\wsocksp.def	different (D:\nt\MULTIM~1\DirectX\dplay\dnet is more recent)	????????	????????
.\sp\wsock\wsocksp.h	different (D:\nt\MULTIM~1\DirectX\dplay\dnet is more recent)	????????	????????
-- 88 files listed
-- D:\xbox\private\windows\directx\dplay : D:\nt\MULTIM~1\DirectX\dplay\dnet -- includes left-only,right-only, files
.\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\common\callstack.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\common\creg.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\common\creg.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\common\memlog.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\common\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\core\dnmisc.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\core\dpguid.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\core\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\core\bchecker\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\core\daytona\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\core\win9x\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\04041115.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\04061145.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\04101330.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\04121430.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\04181430.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\04201700.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\04211500.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\04241015.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\04261045.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\05010945.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\05021600.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\05031030.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\05081300.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\05091400.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\05111530.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\05121300.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\05151130.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\05161345.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\05221345.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\05231030.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\06021030.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\06121345.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\06121445.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\06141200.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\06191100.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\07171100.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\07261030.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\07281500.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\07311100.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\08071630.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\08091615.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\08091700.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\08141000.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\08141630.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\08151200.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\08241230.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\diff.lst	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\diff.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\dxdiff.cmd	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\lastsync.bat	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\diff\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dnaddress\dplegacy.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\dnaddress\dplegacy.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\dnaddress\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dnaddress\bchecker\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dnaddress\daytona\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dnaddress\win9x\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\doc\connect.vsd	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\doc\directnet.doc	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\doc\directplay8core.doc	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\doc\dnaddress.doc	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\doc\dndbg.txt	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\doc\dnregister.doc	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\doc\dp8context.doc	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\doc\dp8protocol.doc	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\doc\dpaddress.doc	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\doc\dpclassinfo.xls	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\doc\dpcustombuild.doc	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\doc\dplay8.doc	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\doc\dplay8.xls	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\doc\dplobby8.doc	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\doc\dpnsvr.doc	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\doc\dpv8dmo.doc	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\doc\dpvoice.doc	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\doc\dpvoice.mpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\doc\dpvoicenote.doc	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\doc\hostmigration.vsd	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\doc\lobby8update.doc	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\doc\nametable.vsd	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\doc\nametbl.doc	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\doc\rfc1738.txt	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\doc\spintf.doc	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\doc\usercb.doc	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\doc\winsockspwireprotocol.doc	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\dpnsvr\dirs	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\dpnsvr\dpnsvlib\dpnsvlib.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\dpnsvr\dpnsvlib\dpnsvlib.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\dpnsvr\dpnsvlib\dpnsvrq.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\dpnsvr\dpnsvlib\dpnsvrq.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\dpnsvr\dpnsvlib\makefile	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\dpnsvr\dpnsvlib\sources	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\dpnsvr\dpnsvr\dirs	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\dpnsvr\dpnsvr\dpnsvr.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\dpnsvr\dpnsvr\dpnsvr.rc	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\dpnsvr\dpnsvr\dpsvr8.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\dpnsvr\dpnsvr\dpsvr8.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\dpnsvr\dpnsvr\proctbl.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\dpnsvr\dpnsvr\proctbl.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\dpnsvr\dpnsvr\resource.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\dpnsvr\dpnsvr\sources.inc	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\dpnsvr\dpnsvr\daytona\makefile	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\dpnsvr\dpnsvr\daytona\sources	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\dpnsvr\dpnsvr\win9x\makefile	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\dpnsvr\dpnsvr\win9x\sources	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\dpnsvr\inc\dpnsdef.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\dpnsvr\inc\dpnsvmsg.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\dvoice\dirs	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dirs	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvacm\classfac.c	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvacm\createin.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvacm\dirs	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvacm\dllmain.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvacm\dpvacm.def	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvacm\dpvacm.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvacm\dpvacm.rc	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvacm\dpvacmi.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvacm\dpvacmi.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvacm\dpvaconv.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvacm\dpvaconv.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvacm\dpvautil.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvacm\dpvautil.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvacm\msgvacm.def	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvacm\msrgacm.def	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvacm\resource.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvacm\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvacm\sources.inc	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvacm\unk.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvacm\daytona\makefile	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvacm\daytona\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvacm\daytona\sources	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvacm\win9x\makefile	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvacm\win9x\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvacm\win9x\sources	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvcplib\dpvcpi.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvcplib\dpvcpi.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvcplib\makefile	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvcplib\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvcplib\sources	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvvox\classfac.c	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvvox\createin.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvvox\dirs	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvvox\dllmain.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvvox\dpvvconv.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvvox\dpvvconv.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvvox\dpvvox.def	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvvox\dpvvox.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvvox\dpvvox.rc	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvvox\dpvvoxi.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvvox\dpvvoxi.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvvox\msgvvox.def	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvvox\msrgvox.def	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvvox\resource.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvvox\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvvox\sources.inc	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvvox\unk.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvvox\daytona\makefile	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvvox\daytona\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvvox\daytona\sources	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvvox\win9x\makefile	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvvox\win9x\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\dpvvox\win9x\sources	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\voxlib\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\voxlib\vci.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\voxlib\vcierror.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\voxlib\vcisc3.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\voxlib\vcisc6.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\voxlib\vcivr12.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\voxlib\obj\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\voxlib\obj\i386\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\voxlib\obj\i386\voxlib.lib	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\voxlib\obj\ia64\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\codecs\voxlib\obj\ia64\voxlib.lib	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\common\callstack.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\common\classhash.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\common\dbginfo.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\common\dbgtopic.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\common\dndbg.c	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\common\dndbg.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\common\dvcslock.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\common\fpm.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\common\fpm.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\common\in_def.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\common\lockedcfpm.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\common\makefile	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\common\memlog.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\common\newdpf.c	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\common\newdpf.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\common\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\common\sources	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dpvxlib\dpvxchar.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dpvxlib\dpvxchar.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dpvxlib\dpvxdplay.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dpvxlib\dpvxdplay.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dpvxlib\dpvxdump.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dpvxlib\dpvxdump.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dpvxlib\dpvxerr.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dpvxlib\dpvxerr.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dpvxlib\dpvxlib.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dpvxlib\dpvxmisc.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dpvxlib\dpvxmisc.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dpvxlib\makefile	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dpvxlib\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dpvxlib\sources	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvhelp\conndlg.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvhelp\conndlg.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvhelp\directx.ico	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvhelp\dirs	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvhelp\dxvhelp.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvhelp\dxvhelp.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvhelp\dxvhelp.rc	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvhelp\hostdlg.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvhelp\hostdlg.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvhelp\maindlg.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvhelp\maindlg.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvhelp\misc.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvhelp\misc.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvhelp\resource.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvhelp\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvhelp\small.ico	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvhelp\snddlg.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvhelp\snddlg.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvhelp\sources.inc	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvhelp\testwin.ico	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvhelp\voice.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvhelp\voice.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvhelp\daytona\makefile	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvhelp\daytona\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvhelp\daytona\sources	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvhelp\win9x\makefile	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvhelp\win9x\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvhelp\win9x\sources	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\dirs	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\dpvoice.def	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\dvbase.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\dvcleng.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\dvcleng.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\dvclient.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\dvclient.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\dvdxtran.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\dvdxtran.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\dvengine.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\dvengine.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\dvoice.def	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\dvprot.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\dvrecsub.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\dvrecsub.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\dvsereng.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\dvsereng.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\dvserver.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\dvserver.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\dvshared.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\dvshared.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\dvsndt.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\dvsndt.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\dvtran.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\in_core.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\in_core.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\mixutils.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\mixutils.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\msgvve.def	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\msrgve.def	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\resource.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\resource.rc	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\sources.inc	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\statdef.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\trnotify.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\trnotify.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\vnametbl.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\vnametbl.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\vplayer.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\vplayer.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\daytona\makefile	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\daytona\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\daytona\sources	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\win9x\makefile	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\win9x\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvoice\win9x\sources	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvt\directx.ico	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvt\dirs	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvt\dxvt.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvt\dxvt.rc	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvt\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvt\sources.inc	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvt\daytona\makefile	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvt\daytona\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvt\daytona\sources	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvt\win9x\makefile	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvt\win9x\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvt\win9x\sources	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvtlib\fdtcfg.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvtlib\fdtcfg.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvtlib\fdtglob.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvtlib\fdtglob.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvtlib\fdtipc.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvtlib\fdtipc.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvtlib\fulldup.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvtlib\fulldup.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvtlib\loopback.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvtlib\loopback.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvtlib\makefile	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvtlib\peakmetr.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvtlib\peakmetr.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvtlib\priority.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvtlib\priority.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvtlib\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvtlib\sources	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvtlib\supervis.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvtlib\supervis.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\aconv.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\aconv.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\aconv2.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\aconv2.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\aconvs.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\aconvs.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\agcva.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\agcva1.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\agcva1.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\aplayb.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\aplayb.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\aplayd.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\aplayd.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\aplays.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\aplays.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\arecs.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\astypes.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\decibels.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\decibels.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\diagnos.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\diagnos.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\dputils.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\dputils.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\dsplayb.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\dsplayb.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\dsplayd.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\dsplayd.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\dsplays.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\dsplays.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\dvcdb.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\dvcdb.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\dverror.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\dverror.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\dvsildet.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\dvsildet.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\frame.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\frame.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\innerque.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\innerque.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\inqueue2.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\inqueue2.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\makefile	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\sndutils.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\sndutils.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\dxvutils\sources	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\inc\dpvcp.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\inc\dvoice.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\dvoice\inc\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\inc\dplobby8.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\inc\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\lobby\classfac.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\classfac.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\comstuff.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\dirs	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\dllmain.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\dnlobby.rc	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\dplapp.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\dplapp.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\dplclient.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\dplclient.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\dplcommon.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\dplcommon.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\dplconnect.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\dplconnect.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\dplconset.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\dplconset.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\dplmsgq.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\dplmsgq.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\dplobby.def	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\dplobby.rc	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\dplobby8int.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\dplparam.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\dplparam.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\dplproc.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\dplproc.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\dplreg.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\dplreg.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\globals.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\handles.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\handles.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\sources.inc	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\daytona\makefile	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\daytona\sources	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\win9x\makefile	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\lobby\win9x\sources	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\protocol\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\protocol\bchecker\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\sp\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\sp\serial\classfac.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\comendpoint.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\comendpoint.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\commanddata.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\commanddata.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\comport.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\comport.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\comportdata.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\comportdata.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\comportui.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\comportui.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\contextfixedpool.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\crc.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\crc.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\dataport.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\dataport.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\dirs	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\dnserial.rc	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\dpnmodem.def	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\endpoint.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\endpoint.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\handletable.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\handletable.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\iodata.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\iodata.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\jobqueue.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\jobqueue.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\locals.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\locals.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\modemendpoint.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\modemendpoint.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\modemport.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\modemport.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\modemui.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\modemui.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\modemutils.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\modemutils.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\parseclass.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\parseclass.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\pools.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\pools.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\resource.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\sendqueue.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\sendqueue.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\serialsp.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\serialsp.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\sources.inc	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\spdata.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\spdata.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\threadpool.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\threadpool.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\unk.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\utils.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\utils.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\workthread.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\workthread.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\daytona\makefile	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\daytona\sources	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\win9x\makefile	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\serial\win9x\sources	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\wsock\dwinsock.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\wsock\dwinsock.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\wsock\ipui.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\wsock\ipui.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\wsock\ipxaddress.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\wsock\ipxaddress.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\wsock\ipxendpt.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\wsock\ipxendpt.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\wsock\registry.cpp	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\wsock\registry.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\wsock\resource.h	only in D:\nt\MULTIM~1\DirectX\dplay\dnet	--------	????????
.\sp\wsock\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\sp\wsock\bchecker\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\sp\wsock\daytona\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\sp\wsock\win9x\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\test\dirs	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\test\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\test\simplepeer\makefile	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\test\simplepeer\netconnect.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\test\simplepeer\netconnect.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\test\simplepeer\netconnectres.h	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\test\simplepeer\readme.txt	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\test\simplepeer\simplepeer.cpp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\test\simplepeer\simplepeer.dsp	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\test\simplepeer\slm.ini	only in D:\xbox\private\windows\directx\dplay	????????	--------
.\test\simplepeer\sources	only in D:\xbox\private\windows\directx\dplay	????????	--------
-- 488 files listed
.  
.  
()---()---()---()---()---()---()---()---()---(.\dirs)---()---()---()---()---()---()---()---()---()---()  
.  
.  
3a4
>       lobby \
5c6,7
<       core
---
>       core \
>       dpnsvr 
.  
.  
()---()---()---()---()---()---()---()---()---(.\common\comutil.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
21a22
> #include "creg.h"
24a26
> #include <stdlib.h>
43c45
<     WCHAR                   wszFileName[_MAX_PATH];
---
>     CHAR                    szFileName[_MAX_PATH];
137c139
<     hr = COM_GetDLLName( clsid, pEntry->wszFileName, &dwSize );
---
>     hr = COM_GetDLLName( clsid, pEntry->szFileName, &dwSize );
145c147
<     pEntry->hDLL = LoadLibraryW( pEntry->wszFileName );
---
>     pEntry->hDLL = LoadLibraryA( pEntry->szFileName );
181c183
< HRESULT COM_GetDLLName( GUID guidCLSID, WCHAR *wszPath, DWORD *pdwSize )
---
> HRESULT COM_GetDLLName( GUID guidCLSID, CHAR *szPath, DWORD *pdwSize )
183,187c185,187
< // BUGBUG: [mgere] [xbox] These com wrapper functions will only be called to
< // retrieve the wsock com object, so I hard coded the dpwsock.dll to always
< // return from this function.
< //
<     WCHAR wszDLL[] = L"dpnwsock.dll";
---
>     CRegistry cregRoot;
>     CRegistry cregCLSID;
>     CRegistry cregInProc;
189c189,194
<     wcscpy( wszPath, wszDLL);
---
>     HRESULT hr;
>     BOOL fSuccess;
>     WCHAR *wszTmpPath = NULL;
>     DWORD dwTmpSize = 0;
>     int res;
>     BOOL fDefault;
191c196
<     return S_OK;
---
>     fSuccess = cregRoot.Open( HKEY_CLASSES_ROOT, L"CLSID", TRUE, FALSE );
192a198,281
>     if( !fSuccess )
>     {
>         DPF( 0, "Error opening HKEY_CLASSES_ROOT\\CLSID" );
>         hr = E_FAIL;
>         goto COM_GETDLLNAME_ERROR;
>     }
> 
>     fSuccess = cregCLSID.Open( cregRoot, &guidCLSID, TRUE, FALSE );
> 
>     if( !fSuccess )
>     {
>         DPF( 0, "Error opening specified CLSID" );
>         hr = E_FAIL;
>         goto COM_GETDLLNAME_ERROR;
>     }
> 
>     fSuccess = cregInProc.Open( cregCLSID, L"InprocServer32", TRUE, FALSE );
> 
>     if( !fSuccess )
>     {
>         DPF( 0, "Error opening inprocserver key" );
>         hr = E_FAIL;
>         goto COM_GETDLLNAME_ERROR;
>     }
> 
>     cregCLSID.Close();
>     cregRoot.Close();
> 
>     fSuccess = cregInProc.ReadString( L"", wszTmpPath, &dwTmpSize );
> 
>     if( !dwTmpSize )
>     {
>         DPF( 0, "Error opening default key" );
>         hr = E_FAIL;
>         goto COM_GETDLLNAME_ERROR;
>     }
> 
>     if( dwTmpSize > *pdwSize )
>     {
>     	DPF( 0, "Buffer too small" );
>     	hr = DPNERR_BUFFERTOOSMALL;
>     	*pdwSize = dwTmpSize;
>     	goto COM_GETDLLNAME_ERROR;
>     }
> 
>     *pdwSize = dwTmpSize;
> 
>     wszTmpPath = new WCHAR[dwTmpSize];
> 
> 	if( !wszTmpPath )
> 	{
> 		DPF( 0, "Error allocating memory" );
> 		hr = DPNERR_OUTOFMEMORY;
> 		goto COM_GETDLLNAME_ERROR;
> 	}
> 
>     fSuccess = cregInProc.ReadString( L"", wszTmpPath, &dwTmpSize );
> 
>     if( !fSuccess )
>     {
>         DPF( 0, "Error opening default key" );
>         hr = E_FAIL;
>         goto COM_GETDLLNAME_ERROR;
>     }
> 
>     if( FAILED( hr = STR_jkWideToAnsi(szPath,wszTmpPath, *pdwSize ) ) )
>     {
>         DPF( 0, "Error converting path to DLL to ANSI hr=0x%x", hr );
>         hr = E_FAIL;
>     }
> 
>     
> 
>     delete [] wszTmpPath;
> 
>     return hr;
> 
> COM_GETDLLNAME_ERROR:
> 
>     if( wszTmpPath )
>         delete [] wszTmpPath;
> 
>     return hr;
> 
210a300,303
>     hr = CoCreateInstance( rclsid, pUnkOuter, dwClsContext, riid, ppv );
> 
>     if( hr == CO_E_NOTINITIALIZED )
>     {
232a326,329
> 
>         return hr;
> 
>     }
.  
.  
()---()---()---()---()---()---()---()---()---(.\common\comutil.h)---()---()---()---()---()---()---()---()---()---()  
.  
.  
21c21
< HRESULT COM_GetDLLName( GUID guidCLSID, WCHAR *szPath, DWORD *pdwSize );
---
> HRESULT COM_GetDLLName( GUID guidCLSID, CHAR *szPath, DWORD *pdwSize );
.  
.  
()---()---()---()---()---()---()---()---()---(.\common\dneterrors.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
19a20,23
> // vanceo - changed to stdio for printf
> //#include	<iostream.h>
> #include	<stdio.h>
> 
83a88,97
> 			// output to console
> 			case DPNERR_OUT_CONSOLE:
> 			{
> 				// Also see the change from <iostream.h> to <stdio.h> above
> 				#pragma TODO(vanceo, "Changed cout to printf so NT build environment will work, figure this out.")
> 				//cout << endl << pString << endl;
> 				printf("\n%s\n", pString);
> 				break;
> 			}
> 
.  
.  
()---()---()---()---()---()---()---()---()---(.\common\guidutil.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
15c15
< #include <wchar.h>
---
> #include "stdio.h"
.  
.  
()---()---()---()---()---()---()---()---()---(.\common\osind.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
37a38,41
> #ifdef	_WIN64
> #define	MEMORY_CRC			0X5AA55AA55AA55AA5
> #define	GUARD_SIGNATURE		0x0F1E2D3C4B5A6978
> #else
39a44
> #endif	// _WIN64
44a50,56
> //
> // enumerated values to indicate how to report memory leaks
> //
> #define	MEMORY_LEAK_REPORT_NONE		0x00000000
> #define	MEMORY_LEAK_REPORT_DPF		0x00000001
> #define	MEMORY_LEAK_REPORT_DIALOG	0x00000002
> 
64a77
> #ifdef	_X86_
65a79,81
> #else
> #define	ASSERT( arg )	if ( arg == FALSE ) { DebugBreak(); }
> #endif
98a115,120
> // OS items
> //
> static	UINT_PTR			g_OSVersion;
> static	HINSTANCE			g_hApplicationInstance;
> 
> //
107a130,132
> static int	DisplayCallStack( const char *const pszMsg,
> 							  const char *const pszTitle,
> 							  const char *const pCallStack );
128a154
> 	OSVERSIONINFO	OSVersionInfo;
129a156
> 
137a165,193
> 	// note OS version
> 	//
> 	memset( &OSVersionInfo, 0x00, sizeof( OSVersionInfo ) );
> 	OSVersionInfo.dwOSVersionInfoSize = sizeof( OSVersionInfo );
> 	if ( GetVersionEx( &OSVersionInfo ) == FALSE )
> 	{
> 		goto Failure;
> 	}
> 	g_OSVersion = OSVersionInfo.dwPlatformId;
> 
> 	//
> 	// note application instance
> 	//
> 	g_hApplicationInstance = GetModuleHandle( NULL );
> 	if ( g_hApplicationInstance == NULL )
> 	{
> 		DWORD	dwError;
> 
> 
> 		dwError = GetLastError();
> 		DPF( 0, "Failed to GetModuleHandle: 0x%x", dwError );
> 		goto Failure;
> 	}
> 
> //#pragma	BUGBUG( johnkan, "---->  Hard-coded Win9x emulation!!  <----" )
> //	g_OSVersion = VER_PLATFORM_WIN32_WINDOWS;
> 
> 
> 	//
239a296,297
> 		switch ( DNGetOSType() )
> 		{
242a301,302
> 			case VER_PLATFORM_WIN32_NT:
> 			{
267a328,338
> 				break;
> 			}
> 
> 			//
> 			// other OS, heap checking not available
> 			//
> 			default:
> 			{
> 				break;
> 			}
> 		}
300a372,409
> // DNGetOSType - get OS type
> //
> // Entry:		Nothing
> //
> // Exit:		OS type
> // ------------------------------
> #undef DPF_MODNAME
> #define DPF_MODNAME "DNGetOSType"
> 
> UINT_PTR	DNGetOSType( void )
> {
> 	DNASSERT( g_fOSIndirectionLayerInitialized != FALSE );
> 	return	g_OSVersion;
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
> // DNGetApplcationInstance - application instance
> //
> // Entry:		Nothing
> //
> // Exit:		Application instance
> // ------------------------------
> #undef DPF_MODNAME
> #define DPF_MODNAME "DNGetApplicationInstance"
> 
> HINSTANCE	DNGetApplicationInstance( void )
> {
> 	DNASSERT( g_fOSIndirectionLayerInitialized != FALSE );
> 	return	g_hApplicationInstance;
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
377a487
> //#ifdef	_WIN32
406a517
> //#endif	// _WIN32
407a519,540
> 
> //#ifdef	_WIN64
> //	// debug me!
> //	DNASSERT( FALSE );
> //
> //	if ( pTime1->Time < pTime2->Time )
> //	{
> //		iReturnValue = -1;
> //	}
> //	else
> //	{
> //		if ( pTime1->Time == pTime2->Time )
> //		{
> //			iReturnValue = 0;
> //		}
> //		else
> //		{
> //			iReturnValue = 1;
> //		}
> //	}
> //#endif	// _WIN64
> 
436a570
> #ifdef	_X86_
448a583,633
> 
> #else	// _X86_
> 
> /*
> #ifdef	_ALPHA_
> 	// debug me
> 	DebugBreak();
> 
> 	__asm{ mov	$t0, *pTime1
> 		   mov	$t1, *pTime2
> 		   addq	$t0, $t1
> 		   mov	*pTimeResult, $t0
> 	};
> #else	// _ALPHA_
> */
> 
> //#ifdef	_WIN32
> 	DWORD	dwTempLowTime;
> 
> 
> 	dwTempLowTime = pTime1->Time32.TimeLow;
> 	pTimeResult->Time32.TimeLow = pTime1->Time32.TimeLow + pTime2->Time32.TimeLow;
> 	pTimeResult->Time32.TimeHigh = pTime1->Time32.TimeHigh + pTime2->Time32.TimeHigh;
> 
> 	//
> 	// check for overflow in low 32-bits and increment high value if applicable
> 	//
> 	if ( pTimeResult->Time32.TimeLow < dwTempLowTime )
> 	{
> #pragma	BUGBUG( johnkan, "Test this!" )
> 		// debug me
> 		DebugBreak();
> 		pTimeResult->Time32.TimeHigh++;
> 	}
> //#endif	// _WIN32
> 
> //#ifdef	_WIN64
> //	DEBUG_ONLY( UINT_PTR	ReferenceTime );
> //
> //	// debug me!
> //	DNASSERT( FALSE );
> //
> //	DEBUG_ONLY( ReferenceTime = pTime1->Time );
> //	*pTimeResult = pTime1->Time + pTime2->Time;
> //	DNASSERT( *pTimeResult >= ReferenceTime );
> //
> //#endif	// _WIN64
> 
> // #endif	// _ALPHA_
> 
> #endif	// _X86_
477a663,664
> #ifdef	_X86_
> 
489a677,723
> 
> #else	// _X86_
> 
> /*
> #ifdef	_ALPHA_
> 	// debug me
> 	DebugBreak();
> 
> 	mov		$t0, *pTime1
> 	mov		$t1, *pTime2
> 	addq	$t0, $t1
> 	mov		*pTimeResult, $t0
> #else	// _ALPHA_
> */
> 
> //#ifdef	_WIN32
> 	DWORD	dwTempLowTime;
> 
> 
> 	dwTempLowTime = pTime1->Time32.TimeLow;
> 	pTimeResult->Time32.TimeLow = pTime1->Time32.TimeLow - pTime2->Time32.TimeLow;
> 	pTimeResult->Time32.TimeHigh = pTime1->Time32.TimeHigh - pTime2->Time32.TimeHigh;
> 
> 	//
> 	// check for underflow in low 32-bits and decrement high value if applicable
> 	//
> 	if ( pTimeResult->Time32.TimeLow > dwTempLowTime )
> 	{
> #pragma	BUGBUG( johnkan, "Test this!" )
> 		// debug me
> 		DebugBreak();
> 
> 		pTimeResult->Time32.TimeHigh--;
> 	}
> //#endif	// _WIN32
> 
> //#ifdef	_WIN64
> //	// debug me!
> //	DNASSERT( FALSE );
> //
> //	DNASSERT( pTime1->Time > pTime2->Time );
> //	pTimeResult = pTime1->Time - pTime2->Time;
> //#endif	// _WIN64
> 
> // #endif	// _ALPHA_
> 
> #endif	// _X86_
714a949,951
> 		void	NoteCurrentCallStack( void ) { m_CallStack.NoteCurrentCallStack(); }
> 		void	GetCallStack( char *const pBuffer ) const { m_CallStack.GetCallStackString( pBuffer ); }
> 
733a971
> 		CCallStack<DN_MEMORY_CALL_STACK_DEPTH>	m_CallStack;
833a1072
> 		pMemoryLink->NoteCurrentCallStack();
952a1192
> 	char	CallStackBuffer[ CALLSTACK_BUFFER_SIZE ];
969a1210,1213
> #ifdef _IA64_
>                       // 8/05/2000(RichGr) - IA64: GetSize() returns UINT_PTR (64-bit), so we may as well handle in hex as %d expects a DWORD.
> 					  "Memory block: 0x%p\tAllocated size: 0x%p bytes\nCorruption Type: ",
> #else
970a1215
> #endif
987,988c1232,1243
< 			DPF( 0, "%s%s\n", "Memory Corruption!", MessageString );
< //					DNASSERT( FALSE );
---
> 			pMemoryLink->GetCallStack( CallStackBuffer );
> 			MessageReturn = DisplayCallStack( MessageString, "Memory Corruption!", CallStackBuffer );
> 			switch ( MessageReturn )
> 			{
> 				case IDABORT:
> 				{
> 					DNASSERT( FALSE );
> 					break;
> 				}
> 
> 				case IDIGNORE:
> 				{
992a1248,1256
> 					break;
> 				}
> 
> 				case IDRETRY:
> 				{
> 					DNASSERT( FALSE );
> 					break;
> 				}
> 			}
1026a1291
> 	DWORD		dwDisplayFlags;
1027a1293
> 
1030a1297
> 	fDisplayLeaks = TRUE;
1033a1301,1302
> 	dwDisplayFlags = GetProfileIntA( PROF_SECT, "MemoryLeakOutput", MEMORY_LEAK_REPORT_DPF );
> 	
1040a1310
> 		char		CallStackBuffer[ CALLSTACK_BUFFER_SIZE ];
1048a1319,1322
> #ifdef _IA64_
>         // 8/05/2000(RichGr) - IA64: GetSize() returns UINT_PTR (64-bit), so we may as well handle in hex as %d expects a DWORD.
> 		wsprintf( LeakSizeString, "0x%p bytes leaked at address 0x%p!\n", pTemp->GetSize(), pTemp->GetDataPointer() );
> #else
1049a1324
> #endif
1054,1055c1329
< 			DPF( 0, "%s%s\n", DialogTitle, LeakSizeString );
< //						DNASSERT( FALSE );
---
> 		pTemp->GetCallStack( CallStackBuffer );
1056a1331,1381
> 
> 		if ( ( dwDisplayFlags & MEMORY_LEAK_REPORT_DPF ) != 0 )
> 		{
> 			DPF( 0, "%s%s%s\n", DialogTitle, LeakSizeString, CallStackBuffer );
> 		}
> 
> 		if ( ( dwDisplayFlags & MEMORY_LEAK_REPORT_DIALOG ) != 0  )
> 		{
> 			if ( fDisplayLeaks != FALSE )
> 			{
> 				MessageReturn = DisplayCallStack( LeakSizeString, DialogTitle, CallStackBuffer );
> 				switch ( MessageReturn )
> 				{	
> 					//
> 					// stop application now
> 					//
> 					case IDABORT:
> 					{
> 						fDisplayLeaks = FALSE;
> 						break;
> 					}
> 
> 					//
> 					// display next leak
> 					//
> 					case IDIGNORE:
> 					{
> 						break;
> 					}
> 
> 					//
> 					// stop in the debugger
> 					//
> 					case IDRETRY:
> 					{
> 						DNASSERT( FALSE );
> 						break;
> 					}
> 
> 					//
> 					// unknown
> 					//
> 					default:
> 					{
> 						DNASSERT( FALSE );
> 						break;
> 					}
> 				}
> 			}
> 		}
> 
1069a1395,1541
> 
> 
> #if	defined( DN_MEMORY_TRACKING ) || defined( DN_CRITICAL_SECTION_TRACKING )
> //**********************************************************************
> //**
> //** THIS IS THE STACK TRACKING SECTION.  ONLY ADD FUNCTIONS HERE THAT ARE
> //** RELATED TO TRACKING THE CALL STACK!!
> //**
> //**********************************************************************
> 
> 
> ////**********************************************************************
> //// ------------------------------
> //// DNGetStackTop - return pointer to top of stack
> ////
> //// Entry:		Nothing
> ////
> //// Exit:		Pointer to top of stack
> //// ------------------------------
> //static void	*DNGetStackTop( void )
> //{
> //	void	*pReturn;
> //
> //	_asm	mov eax,dword ptr fs:[4]
> //	_asm	mov pReturn, eax
> //	return	pReturn;
> //}
> ////**********************************************************************
> //
> //
> ////**********************************************************************
> //// ------------------------------
> //// DNGetStackBottom - return pointer to bottom of call stack
> ////
> //// Entry:		Nothing
> ////
> //// Exit:		Pointer to bottom of call stack
> //// ------------------------------
> //static void	*DNGetStackBottom( void )
> //{
> //	void	*pReturn;
> //
> //	_asm	mov eax,dword ptr fs:[8]
> //	_asm	mov pReturn, eax
> //	return	pReturn;
> //}
> ////**********************************************************************
> 
> 
> ////**********************************************************************
> //// ------------------------------
> //// DNGetCallStack - get a call stack
> ////
> //// Entry:		Pointer to call stack array
> ////				Number of calls to report
> ////
> //// Exit:		Nothing
> //// ------------------------------
> //static	void	DNGetCallStack( const void **const pCallStack, const UINT_PTR Depth )
> //{
> //	void		**CallersEBP;
> //	void		*ReturnAddr;
> //	UINT_PTR	i,iCount;
> //	void		*StackTop;
> //	void		*StackBottom;
> //	static const	void	*min_dll_base = NULL;
> //
> //
> //	StackTop = DNGetStackTop();
> //	StackBottom = DNGetStackBottom();
> //	memset(	pCallStack, 0x00, sizeof( *pCallStack ) * Depth );
> //
> //	_asm
> //	{
> //		mov eax,[ebp]
> //		mov CallersEBP,eax
> //	}
> //
> //	__try
> //	{
> //		//
> //		// this code can generate exception if it steps back too far...
> //		//
> //		for ( i = 0, iCount = 0; i < Depth; iCount++ )
> //		{
> //			if ( ( CallersEBP < StackBottom ) || ( CallersEBP >= StackTop ) )
> //				break;
> //			ReturnAddr = CallersEBP[ 1 ];
> //			if ( ( iCount > 0 ) || ( ReturnAddr >= min_dll_base ) ) // iCount check skips memory_alloc_debug
> //				pCallStack[ i++ ] = ReturnAddr;
> //			CallersEBP = reinterpret_cast<void**>( *CallersEBP ); // get callers callers ebp
> //		}
> //	}
> //	__except( 1 )  // went too far back on the stack, fill up rest of array with zeros
> //	{
> //		DPF( 0, "Benign access violation creating return address stack." );
> //	}
> //}
> ////**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
> // DisplayCallStack - display a call stack message box
> //
> // Entry:		Pointer to information string
> //				Pointer to title string
> //				Pointer to call stack string
> //
> // Exit:		Dialog return code
> // ------------------------------
> #undef DPF_MODNAME
> #define DPF_MODNAME "DisplayCallStack"
> 
> static int	DisplayCallStack( const char *const pszMsg, const char *const pszTitle, const char *const pCallStackString )
> {
> 	MSGBOXPARAMS	MessageBoxParams;
> 	char 			szStackTraceMsg[ CALLSTACK_BUFFER_SIZE ];
> 
> 
>     strcpy( szStackTraceMsg, pszMsg );
> 	strcat( szStackTraceMsg, pCallStackString );
> 
> 	//
> 	// display message box
> 	//
> 	memset( &MessageBoxParams, 0x00, sizeof( MessageBoxParams ) );
> 	MessageBoxParams.cbSize = sizeof( MessageBoxParams );
> 	MessageBoxParams.lpszText = szStackTraceMsg;
> 	MessageBoxParams.lpszCaption = pszTitle;
> 	MessageBoxParams.dwStyle = MB_ABORTRETRYIGNORE | MB_SETFOREGROUND | MB_TOPMOST | MB_DEFBUTTON2;
> 	MessageBoxParams.hInstance = NULL;
> 
> 	return MessageBoxIndirect( &MessageBoxParams );
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> //**
> //** END OF CALL STACK TRACKING SECTION.
> //**
> //**********************************************************************
> #endif	// defined( DN_MEMORY_TRACKING ) || defined( DN_CRITICAL_SECTION_TRACKING )
> 
> 
> 
1176a1649
> 	static	BOOL	fDisplayCallStacks = TRUE;
1194a1668,1671
> 	if ( pCriticalSection->LockCount == 0 )
> 	{
> 		pCriticalSection->CallStack.NoteCurrentCallStack();
> 	}
1200a1678,1682
> 			if ( fDisplayCallStacks != FALSE )
> 			{
> 				char	CallStackBuffer[ CALLSTACK_BUFFER_SIZE ];
> 
> 
1205,1206c1687,1719
< 			    DPF( 0, "%s%s\n", "DNCritical section has been reentered!", "Check stack trace for function that originally held the lock." );
< //						DNASSERT( FALSE );
---
> 				pCriticalSection->CallStack.GetCallStackString( CallStackBuffer );
> 				switch ( DisplayCallStack( "Stack trace of function that originally held the lock:",
> 										   "DNCritical section has been reentered!",
> 										   CallStackBuffer ) )
> 				{
> 					//
> 					// don't display any more critical section warnings!
> 					//
> 					case IDABORT:
> 					{
> 						fDisplayCallStacks = FALSE;
> 						break;
> 					}
> 
> 					//
> 					// acknowledged
> 					//
> 					case IDIGNORE:
> 					{
> 						break;
> 					}
> 
> 					//
> 					// stop in debugger
> 					//
> 					case IDRETRY:
> 					{
> 						DNASSERT( FALSE );
> 						break;
> 					}
> 				}
> 			}
> 
1242a1756
> 		memset( &pCriticalSection->CallStack, 0x00, sizeof( pCriticalSection->CallStack ) );
.  
.  
()---()---()---()---()---()---()---()---()---(.\common\osind.h)---()---()---()---()---()---()---()---()---()---()  
.  
.  
20a21,22
> #include	"CallStack.h"
> 
46a49,51
> #define	DN_MEMORY_CALL_STACK_DEPTH				12
> #define	DN_CRITICAL_SECTION_CALL_STACK_DEPTH	10
> 
70a76
> 	CCallStack< DN_CRITICAL_SECTION_CALL_STACK_DEPTH > 	CallStack;
93d98
< DEFINE_GUID(GUID_NULL, 0L, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
103a109,120
> 
> //
> // Function to get OS version.  Supported returns:
> //	VER_PLATFORM_WIN32_WINDOWS
> //	VER_PLATFORM_WIN32_NT
> //	VER_PLATFORM_WIN32s
> //	
> //
> UINT_PTR	DNGetOSType( void );
> HINSTANCE	DNGetApplicationInstance( void );
> 
> #define		IsUnicodePlatform (DNGetOSType() == VER_PLATFORM_WIN32_NT)
.  
.  
()---()---()---()---()---()---()---()---()---(.\common\packbuff.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
145a146,218
> // CPackedBuffer::AddStringToBack
> //
> // Entry:		Pointer to source string
> //
> // Exit:		Error Code:	DPN_OK					if able to add
> //							DPNERR_BUFFERTOOSMALL	if buffer is full
> // ------------------------------
> 
> #undef DPF_MODNAME
> #define DPF_MODNAME "CPackedBuffer::AddStringToBack"
> HRESULT CPackedBuffer::AddStringToBack( const char *const pszString )
> {
> 	HRESULT	hr;
> 	DWORD	dwStringSize;
> 	DWORD	dwBufferSize;
> 
> 
> 	DNASSERT( pszString != NULL );
> 	
> 	//
> 	// initialize
> 	//
> 	hr = DPN_OK;
> 
> 	dwStringSize = 0;
> 	hr = STR_AnsiToWide( pszString,
> 						 -1,
> 						 NULL,
> 						 &dwStringSize );
> 	if ( hr != DPNERR_BUFFERTOOSMALL )
> 	{
> 		DNASSERT( hr != DPN_OK );
> 		goto Failure;
> 	}
> 	
> 	dwBufferSize = dwStringSize * sizeof( WCHAR );
> 	m_dwRequired += dwBufferSize;
> 	if ( !m_bBufferTooSmall )
> 	{
> 		if (m_dwRemaining >= dwBufferSize)
> 		{
> 			m_pTail -= dwBufferSize;
> 			m_dwRemaining -= dwBufferSize;
> 			hr = STR_AnsiToWide( pszString,
> 								 -1,
> 								 reinterpret_cast<WCHAR*>( m_pTail ),
> 								 &dwStringSize );
> 			if ( hr != DPN_OK )
> 			{
> 				goto Failure;
> 			}
> 
> 			DNASSERT( ( dwStringSize * sizeof( WCHAR ) ) == dwBufferSize );
> 		}
> 		else
> 		{
> 			m_bBufferTooSmall = TRUE;
> 		}
> 	}
> 
> 	if ( m_bBufferTooSmall )
> 	{
> 		hr = DPNERR_BUFFERTOOSMALL;
> 	}
> 
> Exit:
> 	return	hr;
> 
> Failure:
> 	goto Exit;
> }
> //**********************************************************************
> // ------------------------------
.  
.  
()---()---()---()---()---()---()---()---()---(.\common\packbuff.h)---()---()---()---()---()---()---()---()---()---()  
.  
.  
62a63
> 	HRESULT	AddStringToBack( const char *const pszString );
.  
.  
()---()---()---()---()---()---()---()---()---(.\common\sources)---()---()---()---()---()---()---()---()---()---()  
.  
.  
0a1,15
> #
> # The MAJORCOMP and MINORCOMP variables are defined
> # so that $(MAJORCOMP)$(MINORCOMP)filename can be used in
> # cross compiling to provide unique filenames in a flat namespace.
> #
> 
> MAJORCOMP=windows
> MINORCOMP=media
> 
> #
> # The TARGETNAME variable is defined by the developer.  It is the name of
> # the target (component) that is being built by this makefile.  It
> # should NOT include any path or file extension information.
> #
> 
2c17,26
< TARGETTYPE=LIBRARY
---
> 
> 
> #
> # The TARGETPATH and TARGETTYPE variables are defined by the developer.
> # The first specifies where the target is to be build.  The second specifies
> # the type of target (either PROGRAM, DYNLINK, LIBRARY, DRIVER, etc
> # UMAPPL_NOLIB is used when you're only building user-mode
> # apps and don't need to build a library.
> #
> 
3a28
> TARGETTYPE=LIBRARY
5,9d29
< !ifdef _BUILD_FOR_WIN2000
< C_DEFINES=$(C_DEFINES) -D_BUILD_FOR_WIN2000
< !else
< LINKER_FLAGS=-align:32
< !endif
11c31,35
< INCLUDES=..\inc
---
> #
> # The TARGETLIBS specifies additional libraries to link with you target
> # image.  Each library path specification should contain an asterisk (*)
> # where the machine specific subdirectory name should go.
> #
13c37,41
< C_DEFINES=$(C_DEFINES) -D_UNICODE -DUNICODE -DCINTERFACE
---
> #
> # 04/10/2000 - allows for addition of BoundsChecker, etc 
> #  libs specified in the OS environment
> #
> TARGETLIBS=$(TARGETLIBS)
15c43,47
< USER_C_FLAGS=$(USER_C_FLAGS) /FAcs
---
> #
> # The INCLUDES variable specifies any include paths that are specific to
> # this source directory.  Separate multiple directory paths with single
> # semicolons.  Relative path specifications are okay.
> #
17,18c49,52
< !if "$(NTDEBUG)" == "ntsd" || "$(NTDEBUG)" == "ntsdnodbg" || "$(NTDEBUG)" == "cvp" || "$(NTDEBUG)" == "sym"
< USER_C_FLAGS=$(USER_C_FLAGS) /Od
---
> INCLUDES=$(DXROOT)\inc;..\inc
> 
> !if "$(NTDEBUG)" == "ntsd" || "$(NTDEBUG)" == "cvp" || "$(NTDEBUG)" == "sym"
> C_DEFINES=$(C_DEFINES) /DDEBUG /D_DEBUG
21d54
< MSC_WARNING_LEVEL=/W3 /WX
22a56,62
> #
> # The SOURCES variable is defined by the developer.  It is a list of all the
> # source files for this component.  Each source file should be on a separate
> # line using the line continuation character.  This will minimize merge
> # conflicts if two developers adding source files to the same component.
> #
> 
29a70
>         creg.cpp \
35c76,87
< TARGETLIBS=
---
> #
> # Next specify options for the compiler.
> #
> 
> C_DEFINES= $(C_DEFINES) /D_LIB /D_MBCS /DWIN32 /D_MT /DCINTERFACE
> MSC_OPTIMIZATION=/Odi /Zi
> NTDEBUGTYPE=both
> 
> USER_C_FLAGS=-nologo -W3
> 
> 
> 
.  
.  
()---()---()---()---()---()---()---()---()---(.\common\strutils.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
26a27,28
> #undef DPF_MODNAME
> #define DPF_MODNAME "STR_WideToAnsi"
28c30,53
< // BUGBUG: [mgere] [xbox] UnicodeToMultiByteN and MultiByteToUnicodeN were Taken from nlsxlat.c
---
> //**********************************************************************
> // ------------------------------
> // WideToANSI - convert a wide string to an ANSI string
> //
> // Entry:		Pointer to source wide string
> //				Size of source string (in WCHAR units, -1 implies NULL-terminated)
> //				Pointer to ANSI string destination
> //				Pointer to size of ANSI destination
> //
> // Exit:		Error code:
> //				DPNERR_GENERIC = operation failed
> //				DPN_OK = operation succeded
> //				DPNERR_BUFFERTOOSMALL = destination buffer too small
> // ------------------------------
> HRESULT	STR_WideToAnsi( const WCHAR *const pWCHARString,
> 						const DWORD dwWCHARStringLength,
> 						char *const pString,
> 						DWORD *const pdwStringLength )
> {
> 	HRESULT	hr;
> 	int		iReturn;
> 	BOOL	fDefault;
> 	char	cMilleniumHackBuffer;	
> 	char	*pMilleniumHackBuffer;
30,35d54
< HRESULT
< UnicodeToMultiByteN(
<     OUT PCH MultiByteString,
<     IN ULONG MaxBytesInMultiByteString,
<     IN PWCH UnicodeString,
<     IN ULONG BytesInUnicodeString)
37c56,58
< /*++
---
> 	DNASSERT( pWCHARString != NULL );
> 	DNASSERT( pdwStringLength != NULL );
> 	DNASSERT( ( pString != NULL ) || ( *pdwStringLength == 0 ) );
39c60,65
< Routine Description:
---
> 	//
> 	// Initialize.  A hack needs to be implemented because their paramter
> 	// validation is screwed and when you pass zero for a destination size, you
> 	// MUST have a valid pointer.  Works on Win95, 98, NT4, Win2K, etc.....
> 	//
> 	hr = DPN_OK;
41,43c67,74
<     This functions converts the specified unicode source string into an
<     ansi string. The translation is done with respect to the
<     ANSI Code Page (ACP) loaded at boot time.
---
> 	if ( *pdwStringLength == 0 )
> 	{
> 		pMilleniumHackBuffer = &cMilleniumHackBuffer;
> 	}
> 	else
> 	{
> 		pMilleniumHackBuffer = pString;
> 	}
45c76,88
< Arguments:
---
> 	fDefault = FALSE;
> 	iReturn = WideCharToMultiByte( CP_ACP,					// code page (default ANSI)
> 								   0,						// flags (none)
> 								   pWCHARString,			// pointer to WCHAR string
> 								   dwWCHARStringLength,		// size of WCHAR string
> 								   pMilleniumHackBuffer,	// pointer to destination ANSI string
> 								   *pdwStringLength,		// size of destination string
> 								   NULL,					// pointer to default for unmappable characters (none)
> 								   &fDefault				// pointer to flag indicating that default was used
> 								   );
> 	if ( iReturn == 0 )
> 	{
> 		DWORD	dwError;
47,49d89
<     MultiByteString - Returns an ansi string that is equivalent to the
<         unicode source string.  If the translation can not be done,
<         an error is returned.
51,53c91,105
<     MaxBytesInMultiByteString - Supplies the maximum number of bytes to be
<         written to MultiByteString.  If this causes MultiByteString to be a
<         truncated equivalent of UnicodeString, no error condition results.
---
> 		dwError = GetLastError();
> 		DPF( 0, "Failed to convert WCHAR to multi-byte!" );
> 		DisplayDNError( 0, dwError );
> 		hr = DPNERR_GENERIC;
> 	}
> 	else
> 	{
> 		if ( *pdwStringLength == 0 )
> 		{
> 			hr = DPNERR_BUFFERTOOSMALL;
> 		}
> 		else
> 		{
> 			DNASSERT( hr == DPN_OK );
> 		}
55,56c107,108
<     BytesInMultiByteString - Returns the number of bytes in the returned
<         ansi string pointed to by MultiByteString.
---
> 		*pdwStringLength = iReturn;
> 	}
58,59c110,114
<     UnicodeString - Supplies the unicode source string that is to be
<         converted to ansi.
---
> 	//
> 	// if you hit this ASSERT it's because you've probably got ASCII text as your
> 	// input WCHAR string.  Double-check your input!!
> 	//
> 	DNASSERT( fDefault == FALSE );
61,62c116,118
<     BytesInUnicodeString - The number of bytes in the the string pointed to by
<         UnicodeString.
---
> 	return	hr;
> }
> //**********************************************************************
64d119
< Return Value:
66,69c121,140
<     SUCCESS - The conversion was successful
< 
< --*/
< 
---
> //**********************************************************************
> // ------------------------------
> // ANSIToWide - convert an ANSI string to a wide string
> //
> // Entry:		Pointer to source multi-byte (ANSI) string
> //				Size of source string (-1 imples NULL-terminated)
> //				Pointer to multi-byte string destination
> //				Pointer to size of multi-byte destination (in WCHAR units)
> //
> // Exit:		Error code:
> //				DPNERR_GENERIC = operation failed
> //				DPN_OK = operation succeded
> //				DPNERR_BUFFERTOOSMALL = destination buffer too small
> // ------------------------------
> #undef DPF_MODNAME
> #define DPF_MODNAME "STR_AnsiToWide"
> HRESULT	STR_AnsiToWide( const char *const pString,
> 						const DWORD dwStringLength,
> 						WCHAR *const pWCHARString,
> 						DWORD *const pdwWCHARStringLength )
71,72c142,145
<     ULONG LoopCount;
<     ULONG CharsInUnicodeString;
---
> 	HRESULT	hr;
> 	int		iReturn;
> 	WCHAR	MilleniumHackBuffer;
> 	WCHAR	*pMilleniumHackBuffer;
74d146
<     CharsInUnicodeString = BytesInUnicodeString / sizeof(WCHAR);
76,77c148,150
<     LoopCount = (CharsInUnicodeString < MaxBytesInMultiByteString) ?
<                  CharsInUnicodeString : MaxBytesInMultiByteString;
---
> 	DNASSERT( pString != NULL );
> 	DNASSERT( pdwWCHARStringLength != NULL );
> 	DNASSERT( ( pWCHARString != NULL ) || ( *pdwWCHARStringLength == 0 ) );
79c152,157
<     while (LoopCount) {
---
> 	//
> 	// Initialize.  A hack needs to be implemented because their paramter
> 	// validation is screwed and when you pass zero for a destination size, you
> 	// MUST have a valid pointer.  Works on Win95, 98, NT4, Win2K, etc.....
> 	//
> 	hr = DPN_OK;
81c159,177
<         *MultiByteString = (*UnicodeString < 256) ? (UCHAR)*UnicodeString : '?';
---
> 	if ( *pdwWCHARStringLength == 0 )
> 	{
> 		pMilleniumHackBuffer = &MilleniumHackBuffer;
> 	}
> 	else
> 	{
> 		pMilleniumHackBuffer = pWCHARString;
> 	}
> 	
> 	iReturn = MultiByteToWideChar( CP_ACP,					// code page (default ANSI)
> 								   0,						// flags (none)
> 								   pString,					// pointer to multi-byte string			
> 								   dwStringLength,			// size of string (assume null-terminated)
> 								   pMilleniumHackBuffer,	// pointer to destination wide-char string
> 								   *pdwWCHARStringLength	// size of destination in WCHARs
> 								   );
> 	if ( iReturn == 0 )
> 	{
> 		DWORD	dwError;
83,86d178
<         UnicodeString++;
<         MultiByteString++;
<         LoopCount--;
<     }
88,89c180,194
<     return DPN_OK;
< }
---
> 		dwError = GetLastError();
> 		DPF( 0, "Failed to convert multi-byte to WCHAR!" );
> 		DisplayDNError( 0, dwError );
> 		hr = DPNERR_GENERIC;
> 	}
> 	else
> 	{
> 		if ( *pdwWCHARStringLength == 0 )
> 		{
> 			hr = DPNERR_BUFFERTOOSMALL;
> 		}
> 		else
> 		{
> 			DNASSERT( hr == DPN_OK );
> 		}
90a196,197
> 		*pdwWCHARStringLength = iReturn;
> 	}
92,157c199
< HRESULT
< MultiByteToUnicodeN(
<     OUT PWCH UnicodeString,
<     IN ULONG MaxBytesInUnicodeString,
<     IN PCH MultiByteString,
<     IN ULONG BytesInMultiByteString)
< 
< /*++
< 
< Routine Description:
< 
<     This functions converts the specified ansi source string into a
<     Unicode string. The translation is done with respect to the
<     ANSI Code Page (ACP) installed at boot time.  Single byte characters
<     in the range 0x00 - 0x7f are simply zero extended as a performance
<     enhancement.  In some far eastern code pages 0x5c is defined as the
<     Yen sign.  For system translation we always want to consider 0x5c
<     to be the backslash character.  We get this for free by zero extending.
< 
<     NOTE: This routine only supports precomposed Unicode characters.
< 
< Arguments:
< 
<     UnicodeString - Returns a unicode string that is equivalent to
<         the ansi source string.
< 
<     MaxBytesInUnicodeString - Supplies the maximum number of bytes to be
<         written to UnicodeString.  If this causes UnicodeString to be a
<         truncated equivalent of MultiByteString, no error condition results.
< 
<     BytesInUnicodeString - Returns the number of bytes in the returned
<         unicode string pointed to by UnicodeString.
< 
<     MultiByteString - Supplies the ansi source string that is to be
<         converted to unicode.  For single-byte character sets, this address
<         CAN be the same as UnicodeString.
< 
<     BytesInMultiByteString - The number of bytes in the string pointed to
<         by MultiByteString.
< 
< Return Value:
< 
<     SUCCESS - The conversion was successful.
< 
< 
< --*/
< 
< {
<     ULONG LoopCount;
<     ULONG MaxCharsInUnicodeString;
< 
<     MaxCharsInUnicodeString = MaxBytesInUnicodeString / sizeof(WCHAR);
< 
<     LoopCount = (MaxCharsInUnicodeString < BytesInMultiByteString) ?
<                  MaxCharsInUnicodeString : BytesInMultiByteString;
< 
<     while (LoopCount) {
< 
<         *UnicodeString = (WCHAR)(UCHAR)(*MultiByteString);
< 
<         UnicodeString++;
<         MultiByteString++;
<         LoopCount--;
<     }
< 
<     return DPN_OK;
---
> 	return	hr;
158a201
> //**********************************************************************
160a204
> 
182a227,229
> 	int rval;
> 	BOOL bDefault = FALSE;
> 
190c237,247
< 	UnicodeToMultiByteN( lpStr, cchStr, (PWCH) lpWStr, cchStr*sizeof(WCHAR));
---
> 	// use the default code page (CP_ACP)
> 	// -1 indicates WStr must be null terminated
> 	rval = WideCharToMultiByte(CP_ACP,0,lpWStr,-1,lpStr,cchStr,
> 			NULL,&bDefault);
> 
> 	if (bDefault)
> 	{
> 		DPF(3,"!!! WARNING - used default string in WideToAnsi conversion.!!!");
> 		DPF(3,"!!! Possible bad unicode string - (you're not hiding ansi in there are you?) !!! ");
> 		return DPNERR_CONVERSION;
> 	}
196a254,282
> //	WideToAnsi
> //
> //	Convert a WCHAR (Wide) string to a CHAR (ANSI) string
> //
> //	CHAR	*pStr		CHAR string
> //	WCHAR	*pWStr		WCHAR string
> //	int		iStrSize	size (in bytes) of buffer pointed to by lpStr
> #undef DPF_MODNAME
> #define DPF_MODNAME "STR_AllocAndConvertToANSI"
> /*
>  ** GetAnsiString
>  *
>  *  CALLED BY: Everywhere
>  *
>  *  PARAMETERS: *ppszAnsi - pointer to string
>  *				lpszWide - string to copy
>  *
>  *  DESCRIPTION:	  handy utility function
>  *				allocs space for and converts lpszWide to ansi
>  *
>  *  RETURNS: string length
>  *
>  */
> HRESULT STR_AllocAndConvertToANSI(LPSTR * ppszAnsi,LPCWSTR lpszWide)
> {
> 	int iStrLen;
> 	BOOL bDefault;
> 	
> 	DNASSERT(ppszAnsi);
197a284,288
> 	if (!lpszWide)
> 	{
> 		*ppszAnsi = NULL;
> 		return S_OK;
> 	}
198a290,303
> 	*ppszAnsi = new char[wcslen(lpszWide)+1];
> 	if (!*ppszAnsi)	
> 	{
> 		DPF(0, "could not get ansi string -- out of memory");
> 		return E_OUTOFMEMORY;
> 	}
> 
> 	iStrLen = WideCharToMultiByte(CP_ACP,0,lpszWide,-1,*ppszAnsi,wcslen(lpszWide)+1,
> 			NULL,&bDefault);
> 
> 	return DPN_OK;
> } // OSAL_AllocAndConvertToANSI
> 
> 
218a324,325
> 	int rval;
> 
226,228c333,342
< 	MultiByteToUnicodeN( lpWStr, cchWStr*sizeof(WCHAR), (CHAR *) lpStr, cchWStr );
< 
< 	return DPN_OK;
---
> 	rval =  MultiByteToWideChar(CP_ACP,0,lpStr,-1,lpWStr,cchWStr);
> 	if (!rval)
> 	{
> 		DPF(0,"MultiByteToWideChar failed in STR_jkAnsiToWide");
> 		return DPNERR_GENERIC;
> 	}
> 	else
> 	{
> 		return DPN_OK;
> 	}
.  
.  
()---()---()---()---()---()---()---()---()---(.\common\strutils.h)---()---()---()---()---()---()---()---()---()---()  
.  
.  
19a20
> HRESULT STR_AllocAndConvertToANSI(LPSTR * ppszAnsi,LPCWSTR lpszWide);
21a23,31
> HRESULT	STR_WideToAnsi( const WCHAR *const pWCHARString,
> 						const DWORD dwWCHARStringLength,
> 						char *const pString,
> 						DWORD *const pdwStringLength );
> 
> HRESULT	STR_AnsiToWide( const char *const pString,
> 						const DWORD dwStringLength,
> 						WCHAR *const pWCHARString,
> 						DWORD *const pdwWCHARStringLength );
.  
.  
()---()---()---()---()---()---()---()---()---(.\core\appdesc.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
16a17
> #include <stdio.h>
26a28,30
> #include "dpnsdef.h"
> #include "dpnsvrq.h"
> #include "dpnsvlib.h"
773a778,801
> 	return(hResultCode);
> }
> 
> 
> #undef DPF_MODNAME
> #define DPF_MODNAME "CApplicationDecs::RegisterWithDPNSVR"
> 
> HRESULT	CApplicationDesc::RegisterWithDPNSVR( IDirectPlay8Address *const pListenAddr )
> {
> 	HRESULT		hResultCode;
> 
> 	hResultCode = DPNSVR_Register( &m_guidApplication,&m_guidInstance,pListenAddr );
> 	return(hResultCode);
> }
> 
> 
> #undef DPF_MODNAME
> #define DPF_MODNAME "CApplicationDecs::UnregisterWithDPNSVR"
> 
> HRESULT CApplicationDesc::UnregisterWithDPNSVR( void )
> {
> 	HRESULT		hResultCode;
> 
> 	hResultCode = DPNSVR_UnRegister( &m_guidApplication,&m_guidInstance );
.  
.  
()---()---()---()---()---()---()---()---()---(.\core\appdesc.h)---()---()---()---()---()---()---()---()---()---()  
.  
.  
111a112,115
> 	HRESULT	CApplicationDesc::RegisterWithDPNSVR( IDirectPlay8Address *const pListenAddr );
> 
> 	HRESULT CApplicationDesc::UnregisterWithDPNSVR( void );
> 
152a157,165
> 		};
> 
> 	BOOL UseDPNSVR( void )
> 		{
> 			if (m_dwFlags & DPNSESSION_NODPNSVR)
> 			{
> 				return( FALSE );
> 			}
> 			return( TRUE );
.  
.  
()---()---()---()---()---()---()---()---()---(.\core\async.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
136d135
< #include "fpm.h"
153c152,154
< #include <mmsystem.h>
---
> #include "dpnsdef.h"
> #include "dpnsvrq.h"
> #include "dpnsvlib.h"
218,219c219
< // BUGBUG: [mgere] [xbox] Completely removed this function since Xbox doesn't have multiple adapters.
< /*
---
> 
334d333
< */
420,421c419
< // BUGBUG: [mgere] [xbox] Need to figure out what to do with this.  We can't enumerate adapters.
< /*
---
> 
475c473
< */
---
> 
532c530
< 	WCHAR			DP8ABuffer[512];
---
> 	CHAR			DP8ABuffer[512];
554c552
< 	pDeviceInfo->lpVtbl->GetURLW(pDeviceInfo,DP8ABuffer,&DP8ASize);
---
> 	pDeviceInfo->lpVtbl->GetURLA(pDeviceInfo,DP8ABuffer,&DP8ASize);
677a676,695
> 	//
> 	//	If this is the host player, register this LISTEN with DPNSVR
> 	//
> 	if (pdnObject->ApplicationDesc.UseDPNSVR())
> 	{
> 		CNameTableEntry	*pLocalPlayer;
> 
> 		pLocalPlayer = NULL;
> 
> 		if ((hResultCode = pdnObject->NameTable.GetLocalPlayerRef( &pLocalPlayer )) == DPN_OK)
> 		{
> 			if (pLocalPlayer->IsHost())
> 			{
> 				hResultCode = DNRegisterWithDPNSVR(pdnObject,hProtocol);
> 			}
> 			pLocalPlayer->Release();
> 			pLocalPlayer = NULL;
> 		}
> 	}
> 
708d725
< // BUGBUG: [mgere] [xbox] This shouldn't be needed since we don't have multiple adapters.
1253c1270
< 		//	generate a completion for the buffer.
---
> 		//	generate a completion for the buffer.
1298,1299c1315,1316
< 	WCHAR			DP8ABuffer[512];
< 	WCHAR			DP8ABuffer2[512];
---
> 	CHAR			DP8ABuffer[512];
> 	CHAR			DP8ABuffer2[512];
1315c1332
< 	pRemoteAddr->lpVtbl->GetURLW(pRemoteAddr,DP8ABuffer,&DP8ASize);
---
> 	pRemoteAddr->lpVtbl->GetURLA(pRemoteAddr,DP8ABuffer,&DP8ASize);
1318c1335
< 	pDeviceInfo->lpVtbl->GetURLW(pDeviceInfo,DP8ABuffer2,&DP8ASize);
---
> 	pDeviceInfo->lpVtbl->GetURLA(pDeviceInfo,DP8ABuffer2,&DP8ASize);
.  
.  
()---()---()---()---()---()---()---()---()---(.\core\async.h)---()---()---()---()---()---()---()---()---()---()  
.  
.  
128,129c128
< // BUGBUG: [mgere] [xbox] Removed (see cpp file)
< /*
---
> 
135c134
< */
---
> 
.  
.  
()---()---()---()---()---()---()---()---()---(.\core\classfac.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
99a100
> #include "dplobby8.h"
260a262,281
> 	/*
> 	*
> 	*	TIME BOMB
> 	*
> 	*/
> 
> #ifndef DX_FINAL_RELEASE
> {
> #pragma message("BETA EXPIRATION TIME BOMB!  Remove for final build!")
> 	SYSTEMTIME st;
> 	GetSystemTime(&st);
> 
> 	if ( st.wYear > DX_EXPIRE_YEAR || ((st.wYear == DX_EXPIRE_YEAR) && (MAKELONG(st.wDay, st.wMonth) > MAKELONG(DX_EXPIRE_DAY, DX_EXPIRE_MONTH))) )
> 	{
> 		MessageBox(0, DX_EXPIRE_TEXT,TEXT("Microsoft Direct Play"), MB_OK);
> //		return E_FAIL;
> 	}
> }
> #endif
> 
324a346,347
> 	pdnObject->pIDP8LobbiedApplication = NULL;
> 	pdnObject->dpnhLobbyConnection = NULL;
920a944,949
> 	if( pdnObject->pIDP8LobbiedApplication)
> 	{
> 		pdnObject->pIDP8LobbiedApplication->lpVtbl->Release( pdnObject->pIDP8LobbiedApplication );
> 		pdnObject->pIDP8LobbiedApplication = NULL;
> 	}
> 
1087c1116
< 	{
---
> 	{
.  
.  
()---()---()---()---()---()---()---()---()---(.\core\client.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
64d63
< #include <wchar.h>
102c101
< typedef STDMETHODIMP ClientRegisterLobby(IDirectPlay8Client *pInterface,const DPNHANDLE dpnHandle,PVOID const pIDP8LobbiedApplication,const DWORD dwFlags);
---
> typedef STDMETHODIMP ClientRegisterLobby(IDirectPlay8Client *pInterface,const DPNHANDLE dpnHandle,IDirectPlay8LobbiedApplication *const pIDP8LobbiedApplication,const DWORD dwFlags);
.  
.  
()---()---()---()---()---()---()---()---()---(.\core\common.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
179a180
> #include "DPLobby8.h"
209a211
> #include "DNMisc.h"
219a222,224
> #include "dpnsdef.h"
> #include "dpnsvrq.h"
> #include "dpnsvlib.h"
221,222d225
< #include <mmsystem.h>
< #include <wchar.h>
721a725,733
> 	pdnObject->dpnhLobbyConnection = NULL;
> 
> 	// Release our hold on the lobbiedapplication
> 	if( pdnObject->pIDP8LobbiedApplication) 
> 	{
> 		pdnObject->pIDP8LobbiedApplication->lpVtbl->Release(pdnObject->pIDP8LobbiedApplication);
> 		pdnObject->pIDP8LobbiedApplication = NULL;
> 	}
> 
1164a1177,1180
> 	if (dwFlags & DPNCONNECT_OKTOQUERYFORADDRESSING)
> 	{
> 		dwConnectFlags |= DPNCONNECT_OKTOQUERYFORADDRESSING;
> 	}
1282d1297
< // BUGBUG: [mgere] [xbox] Set breakpoint here and see if it ever gets in here.
1298,1300d1312
< // BUGBUG: [mgere] [xbox] I know this is busted.  Remove this whole section about enumerating adapters
< // and check if it's ok.
< /*
1331d1342
< */
1952a1964,1971
> 	//	Update Lobby status
> 	//
> 	if (fWasConnected)
> 	{
> 		DNUpdateLobbyStatus(pdnObject,DPLSESSION_DISCONNECTED);
> 	}
> 
> 	//
2147c2166
< 	{
---
> 	{
2666a2686,2690
> 	//	Update Lobby status
> 	//
> 	DNUpdateLobbyStatus(pdnObject,DPLSESSION_CONNECTED);
> 
> 	//
4087c4111
< 	WCHAR			DP8ABuffer[512];
---
> 	CHAR			DP8ABuffer[512];
4138c4162
< 		pAddrHost->lpVtbl->GetURLW(pAddrHost,DP8ABuffer,&DP8ASize);
---
> 		pAddrHost->lpVtbl->GetURLA(pAddrHost,DP8ABuffer,&DP8ASize);
4145c4169
< 		pDeviceInfo->lpVtbl->GetURLW(pDeviceInfo,DP8ABuffer,&DP8ASize);
---
> 		pDeviceInfo->lpVtbl->GetURLA(pDeviceInfo,DP8ABuffer,&DP8ASize);
4260c4284
< 	pIHost->lpVtbl->GetURLW(pIHost,DP8ABuffer,&DP8ASize);
---
> 	pIHost->lpVtbl->GetURLA(pIHost,DP8ABuffer,&DP8ASize);
4264c4288
< 	pIDevice->lpVtbl->GetURLW(pIDevice,DP8ABuffer,&DP8ASize);
---
> 	pIDevice->lpVtbl->GetURLA(pIDevice,DP8ABuffer,&DP8ASize);
4328c4352
< 	//
---
> 	//
4346d4369
< // BUGBUG: [mgere] [xbox] Set breakpoint here and see if it ever gets in here.
4362,4364d4384
< // BUGBUG: [mgere] [xbox] I know this is busted.  Remove this whole section about enumerating adapters
< // and check if it's ok.
< /*
4396d4415
< */
5084c5103
< 							  PVOID const pIDP8LobbiedApplication,
---
> 							  IDirectPlay8LobbiedApplication *const pIDP8LobbiedApplication,
5087c5106,5175
< 	return DPNERR_UNSUPPORTED;
---
> 	DIRECTNETOBJECT		*pdnObject;
> 	HRESULT             hResultCode;
> 
> 	DPF(3,"Parameters: pInterface [0x%p], pIDP8LobbiedApplication [0x%p], dwFlags [0x%lx]",
> 			pInterface,pIDP8LobbiedApplication,dwFlags);
> 
> 	TRY
> 	{
>     	pdnObject = static_cast<DIRECTNETOBJECT*>(GET_OBJECT_FROM_INTERFACE(pInterface));
>     	DNASSERT(pdnObject != NULL);
> 
>     	if( pdnObject->dwFlags & DN_OBJECT_FLAG_PARAMVALIDATION )
>     	{
>     	    if( FAILED( hResultCode = DN_ValidateRegisterLobby( pInterface, dpnhLobbyConnection, pIDP8LobbiedApplication, dwFlags ) ) )
>     	    {
>     	        DPFERR( "Error validating register lobby params" );
>     	        DPF_RETURN( hResultCode );
>     	    }
>     	}
> 
>     	// Check to ensure message handler registered
>     	if (!(pdnObject->dwFlags & DN_OBJECT_FLAG_INITIALIZED))
>     	{
>     		DPFERR( "Object is not initialized" );
>     		DPF_RETURN(DPNERR_UNINITIALIZED);
>     	}
> 
> 	}
> 	EXCEPT(EXCEPTION_EXECUTE_HANDLER)
> 	{
> 	    DPFERR("Invalid object" );
> 	    DPF_RETURN(DPNERR_INVALIDOBJECT);
> 	}	
> 
> 	pdnObject = static_cast<DIRECTNETOBJECT*>(GET_OBJECT_FROM_INTERFACE(pInterface));
> 	DNASSERT(pdnObject != NULL);
> 
> 	if (dwFlags == DPNLOBBY_REGISTER)
> 	{
> 		DNEnterCriticalSection(&pdnObject->csDirectNetObject);
> 		if (pdnObject->dwFlags & DN_OBJECT_FLAG_LOBBY_AWARE)
> 		{
> 			DNLeaveCriticalSection(&pdnObject->csDirectNetObject);
> 			return(DPNERR_ALREADYREGISTERED);
> 		}
> 				
> 		pIDP8LobbiedApplication->lpVtbl->AddRef(pIDP8LobbiedApplication);
> 
> 		pdnObject->pIDP8LobbiedApplication = pIDP8LobbiedApplication;
> 		pdnObject->dpnhLobbyConnection = dpnhLobbyConnection;
> 		pdnObject->dwFlags |= DN_OBJECT_FLAG_LOBBY_AWARE;
> 		DNLeaveCriticalSection(&pdnObject->csDirectNetObject);
> 	}
> 	else
> 	{
> 		DNEnterCriticalSection(&pdnObject->csDirectNetObject);
> 		if (!(pdnObject->dwFlags & DN_OBJECT_FLAG_LOBBY_AWARE))
> 		{
> 			DNLeaveCriticalSection(&pdnObject->csDirectNetObject);
> 			return(DPNERR_NOTREGISTERED);
> 		}
> 				
> 		pdnObject->pIDP8LobbiedApplication->lpVtbl->Release(pdnObject->pIDP8LobbiedApplication);
> 		pdnObject->dpnhLobbyConnection = NULL;
> 		pdnObject->pIDP8LobbiedApplication = NULL;
> 		pdnObject->dwFlags &= (~DN_OBJECT_FLAG_LOBBY_AWARE);
> 		DNLeaveCriticalSection(&pdnObject->csDirectNetObject);
> 	}
> 
> 	return(DPN_OK);
5089a5178,5200
> #undef DPF_MODNAME
> #define DPF_MODNAME "DNNotifyLobbyClientOfSettings"
> // 
> // DNNotifyLobbyClientOfSettings
> //
> // This function sends a connection settings update to the lobby client informing it that the lobby 
> // client settings have changed.  
> //
> HRESULT DNNotifyLobbyClientOfSettings(
> 	DIRECTNETOBJECT * const pdnObject,
> 	IDirectPlay8LobbiedApplication *pdpLobbiedApp, 
> 	DPNHANDLE dpnConnection, 
> 	IDirectPlay8Address *pHostAddress, 
> 	IDirectPlay8Address *pConnectFromAddress )
> {
> 	HRESULT						hResultCode = DPN_OK;
> 	DPL_CONNECTION_SETTINGS		dplConnectionSettings;
> 	BOOL						fIsHost = FALSE;
> 	CPackedBuffer				packBuffer;
> 	PBYTE						pBuffer = NULL;
> 	BOOL						fINCriticalSection = FALSE;
> 	CNameTableEntry				*pNTEntry = NULL;
> 	DWORD						dwIndex;
5090a5202,5347
> 	fIsHost = DN_CHECK_LOCALHOST( pdnObject );
> 
> 	ZeroMemory( &dplConnectionSettings, sizeof( DPL_CONNECTION_SETTINGS ) );
> 	dplConnectionSettings.dwSize = sizeof( DPL_CONNECTION_SETTINGS );
> 	dplConnectionSettings.dwFlags = (fIsHost) ? DPLCONNECTSETTINGS_HOST : 0;
> 
> 	// Lock the object while we make a copy of the app desc.  
> 	DNEnterCriticalSection(&pdnObject->csDirectNetObject);
> 	fINCriticalSection = TRUE;
> 	
> 	// Determine the size of buffer
> 	packBuffer.Initialize(NULL, 0 );
> 	hResultCode = pdnObject->ApplicationDesc.Pack(&packBuffer,DN_APPDESCINFO_FLAG_SESSIONNAME|DN_APPDESCINFO_FLAG_RESERVEDDATA|
> 			DN_APPDESCINFO_FLAG_APPRESERVEDDATA);
> 
> 	if( hResultCode != DPNERR_BUFFERTOOSMALL ) 
> 	{
> 		DPF( 0, "Error getting app desc size hr=0x%x", hResultCode );
> 		goto NOTIFY_EXIT;
> 	}
> 
> 	pBuffer = new BYTE[packBuffer.GetSizeRequired()];
> 
> 	if( !pBuffer )
> 	{
> 		DPF( 0, "Error allocating memory for buffer" );
> 		hResultCode = DPNERR_OUTOFMEMORY;
> 		goto NOTIFY_EXIT;
> 	}
> 
> 	packBuffer.Initialize(pBuffer,packBuffer.GetSizeRequired());
> 	hResultCode = pdnObject->ApplicationDesc.Pack(&packBuffer,DN_APPDESCINFO_FLAG_SESSIONNAME|DN_APPDESCINFO_FLAG_RESERVEDDATA|
> 			DN_APPDESCINFO_FLAG_APPRESERVEDDATA);
> 
> 	if( FAILED( hResultCode ) )
> 	{
> 		DPF( 0, "Error packing app desc hr=0x%x", hResultCode );
> 		goto NOTIFY_EXIT;
> 	}
> 
> 	DNLeaveCriticalSection(&pdnObject->csDirectNetObject);
> 	fINCriticalSection = FALSE;
> 
> 	memcpy( &dplConnectionSettings.dpnAppDesc, pBuffer, sizeof( DPN_APPLICATION_DESC ) );
> 
> 	hResultCode = pdnObject->NameTable.GetLocalPlayerRef( &pNTEntry );
> 
> 	if( FAILED( hResultCode ) )
> 	{
> 		DPF( 0, "Error getting local player hr=0x%x", hResultCode );
> 		goto NOTIFY_EXIT;
> 	}
> 
> 	// Make sure player name isn't changed while we are working with the entry
> 	pNTEntry->Lock();
> 	if( pNTEntry->GetName() )
> 	{
> 		dplConnectionSettings.pwszPlayerName = new WCHAR[wcslen(pNTEntry->GetName())+1];
> 
> 		if( !dplConnectionSettings.pwszPlayerName )
> 		{
> 			pNTEntry->Unlock();
> 			DPF( 0, "Error allocating memory" );
> 			goto NOTIFY_EXIT;
> 		}
> 		
> 		wcscpy( dplConnectionSettings.pwszPlayerName, pNTEntry->GetName() );
> 	}
> 	else
> 	{
> 		dplConnectionSettings.pwszPlayerName = NULL;		
> 	}
> 	pNTEntry->Unlock();
> 
> 	// Release our reference
> 	pNTEntry->Release();
> 
> 	// Host address field
> 	if( fIsHost )
> 	{
> 		dplConnectionSettings.pdp8HostAddress = NULL;
> 
> 		hResultCode = DNGetHostAddressHelper( pdnObject, dplConnectionSettings.ppdp8DeviceAddresses, &dplConnectionSettings.cNumDeviceAddresses );
> 
> 		if( hResultCode != DPNERR_BUFFERTOOSMALL )
> 		{
> 			dplConnectionSettings.cNumDeviceAddresses = 0;
> 			DPF( 0, "Could not get host addresses for lobby update hr=0x%x", hResultCode );
> 			goto NOTIFY_EXIT;
> 		}
> 
> 		dplConnectionSettings.ppdp8DeviceAddresses = new IDirectPlay8Address*[dplConnectionSettings.cNumDeviceAddresses];
> 
> 		if( !dplConnectionSettings.ppdp8DeviceAddresses )
> 		{
> 			DPF( 0, "Error allocating memory" );
> 			dplConnectionSettings.cNumDeviceAddresses = 0;
> 			hResultCode = DPNERR_OUTOFMEMORY;
> 			goto NOTIFY_EXIT;
> 		}
> 
> 		hResultCode = DNGetHostAddressHelper( pdnObject, dplConnectionSettings.ppdp8DeviceAddresses, &dplConnectionSettings.cNumDeviceAddresses );
> 
> 		if( FAILED( hResultCode ) )
> 		{
> 			dplConnectionSettings.cNumDeviceAddresses = 0;
> 			DPF( 0, "Could not get host addresses for lobby update hr=0x%x", hResultCode );
> 			goto NOTIFY_EXIT;
> 		}
> 	}
> 	else
> 	{
> 		dplConnectionSettings.pdp8HostAddress = pHostAddress;
> 		dplConnectionSettings.ppdp8DeviceAddresses = &pConnectFromAddress;
> 		dplConnectionSettings.cNumDeviceAddresses = 1;	
> 	}
> 
> 	// Update the settings
> 	hResultCode = pdpLobbiedApp->lpVtbl->SetConnectionSettings( pdpLobbiedApp, dpnConnection, &dplConnectionSettings, 0 );
> 
> NOTIFY_EXIT:
> 
> 	if( dplConnectionSettings.ppdp8DeviceAddresses && fIsHost )
> 	{
> 		for( dwIndex = 0; dwIndex < dplConnectionSettings.cNumDeviceAddresses; dwIndex++ )
> 		{
> 			dplConnectionSettings.ppdp8DeviceAddresses[dwIndex]->lpVtbl->Release( dplConnectionSettings.ppdp8DeviceAddresses[dwIndex] );
> 		}
> 
> 		delete [] dplConnectionSettings.ppdp8DeviceAddresses;
> 	}
> 
> 	if( dplConnectionSettings.pwszPlayerName )
> 		delete [] dplConnectionSettings.pwszPlayerName;
> 
> 	if( fINCriticalSection ) 
> 		DNLeaveCriticalSection(&pdnObject->csDirectNetObject);
> 
> 	if( pBuffer )
> 		delete [] pBuffer;
> 
> 	return hResultCode;
> 
> }
> 
> 
5091a5349,5429
> #define DPF_MODNAME "DNUpdateLobbyStatus"
> 
> HRESULT DNUpdateLobbyStatus(DIRECTNETOBJECT *const pdnObject,
> 							const DWORD dwStatus)
> {
> 	HRESULT		hResultCode;
> 	IDirectPlay8LobbiedApplication	*pIDP8LobbiedApplication;
> 	DPNHANDLE dpnhLobbyConnection = NULL;
> 	IDirectPlay8Address *pHostAddress = NULL;
> 	IDirectPlay8Address *pConnectFromAddress = NULL;
> 
> 	DPF(4,"Parameters: dwStatus [0x%lx]",dwStatus);
> 
> 	DNASSERT(pdnObject != NULL);
> 
> 	pIDP8LobbiedApplication = NULL;
> 
> 	//
> 	//	Get lobbied application interface, if it exists and other settings we need
> 	//
> 	DNEnterCriticalSection(&pdnObject->csDirectNetObject);
> 	if ((pdnObject->dwFlags & DN_OBJECT_FLAG_LOBBY_AWARE) && (pdnObject->pIDP8LobbiedApplication))
> 	{
> 		pdnObject->pIDP8LobbiedApplication->lpVtbl->AddRef(pdnObject->pIDP8LobbiedApplication);
> 		pIDP8LobbiedApplication = pdnObject->pIDP8LobbiedApplication;
> 		dpnhLobbyConnection = pdnObject->dpnhLobbyConnection;
> 
> 		pConnectFromAddress = pdnObject->pIDP8ADevice;
> 		pHostAddress = pdnObject->pConnectAddress;
> 
> 		if( pConnectFromAddress )
> 		{
> 			pConnectFromAddress->lpVtbl->AddRef( pConnectFromAddress );			
> 		}
> 
> 		if( pHostAddress )
> 		{
> 			pHostAddress->lpVtbl->AddRef( pHostAddress );
> 		}
> 	}
> 	DNLeaveCriticalSection(&pdnObject->csDirectNetObject);
> 
> 	//
> 	//	Update status and release object
> 	//
> 	if (pIDP8LobbiedApplication)
> 	{
> 		// If we are about to do a connection notification
> 		// we send the updated connection settings.  
> 		// 
> 		// This gives lobby client full picture. 
> 		//
> 		if( dwStatus == DPLSESSION_CONNECTED )
> 		{
> 			DNNotifyLobbyClientOfSettings(pdnObject, pIDP8LobbiedApplication, dpnhLobbyConnection, pHostAddress, pConnectFromAddress );
> 		}
> 
> 		pIDP8LobbiedApplication->lpVtbl->UpdateStatus(pIDP8LobbiedApplication,dpnhLobbyConnection,dwStatus,0);
> 
> 		pIDP8LobbiedApplication->lpVtbl->Release(pIDP8LobbiedApplication);
> 		pIDP8LobbiedApplication = NULL;
> 
> 		if( pHostAddress )
> 		{
> 			pHostAddress->lpVtbl->Release( pHostAddress );
> 		}		
> 
> 		if( pConnectFromAddress )
> 		{
> 			pConnectFromAddress->lpVtbl->Release( pConnectFromAddress );
> 		}
> 	}
> 
> 	hResultCode = DPN_OK;
> 
> 	DPF(4,"Returning: [0x%lx]",hResultCode);
> 	return(hResultCode);
> }
> 
> 						
> #undef DPF_MODNAME
5452a5791,5990
> }
> 
> /*	REMOVE
> #undef DPF_MODNAME
> #define DPF_MODNAME "DNRegisterWithDPNSVR"
> 
> HRESULT DNRegisterWithDPNSVR(DIRECTNETOBJECT *const pdnObject)
> {
> 	HRESULT					hResultCode;
> 	HRESULT					hrRegister;
> 	CAsyncOp				*pListenParent;
> 	CAsyncOp				*pListenSP;
> 	CAsyncOp				*pListen;
> 	CBilink					*pBilinkSP;
> 	CBilink					*pBilink;
> 	SPGETADDRESSINFODATA	spInfo;
> #ifdef	DEBUG
> 	CHAR			DP8ABuffer[512];
> 	DWORD			DP8ASize;
> #endif
> 
> 	DPF(4,"Parameters: (none)");
> 
> 	pListenParent = NULL;
> 	pListenSP = NULL;
> 	pListen = NULL;
> 
> 	//
> 	//	Default error returned
> 	//
> 	hrRegister = DPNERR_GENERIC;
> 
> 	//
> 	//	Get LISTEN AsyncOp parent from DirectNet object and add a RefCount
> 	//
> 	DNEnterCriticalSection(&pdnObject->csDirectNetObject);
> 	if (pdnObject->pListenParent == NULL)
> 	{
> 		DNLeaveCriticalSection(&pdnObject->csDirectNetObject);
> 		goto Exit;
> 	}
> 	pdnObject->pListenParent->AddRef();
> 	pListenParent = pdnObject->pListenParent;
> 	DNLeaveCriticalSection(&pdnObject->csDirectNetObject);
> 
> 	//
> 	//	Lock the parent so that the child bilink list doesn't change
> 	//
> 	pListenParent->Lock();
> 
> 	//
> 	//	Locate each child (LISTEN SP parent) and then each actual LISTEN
> 	//
> 	pBilinkSP = pListenParent->m_bilinkParent.GetNext();
> 	while (pBilinkSP != &pListenParent->m_bilinkParent)
> 	{
> 		pListenSP = CONTAINING_OBJECT(pBilinkSP,CAsyncOp,m_bilinkChildren);
> 
> DNASSERT(pListenSP->GetParent() == pListenParent);
> 		//
> 		//	Lock the SP parent so that the child bilink doesn't change
> 		//
> 		pListenSP->Lock();
> 
> 		pBilink = pListenSP->m_bilinkParent.GetNext();
> 		while (pBilink != &pListenSP->m_bilinkParent)
> 		{
> 			pListen = CONTAINING_OBJECT(pBilink,CAsyncOp,m_bilinkChildren);
> 
> 			DNASSERT(pListen->GetProtocolHandle() != NULL);
> 
> 			spInfo.hEndpoint = pListen->GetProtocolHandle();
> 			spInfo.pAddress = NULL;
> 			spInfo.Flags = SP_GET_ADDRESS_INFO_LOCAL_ADAPTER;
> 
> 			if (DNPGetListenAddressInfo(pListen->GetProtocolHandle(),&spInfo) == DPN_OK)
> 			{
> 				DNASSERT(spInfo.pAddress != NULL);
> #ifdef	DEBUG
> 				DP8ASize = 512;
> 				spInfo.pAddress->lpVtbl->GetURLA(spInfo.pAddress,DP8ABuffer,&DP8ASize);
> 				DPF(4,"Listen address [%s]",DP8ABuffer);
> 
> 				// We re-try the registration to catch the case where DPNSVR is shutting
> 				// down while we are trying to register.  Unlikely but has to be handled.
> 				//
> #endif
> 	            for( DWORD dwRetry = 0; dwRetry < DPNSVR_REGISTER_ATTEMPTS ; dwRetry ++ )
> 		        {
>     				hResultCode = DPNSVR_Register( &pdnObject->dnApplicationDescription, spInfo.pAddress );
> 	    			if( FAILED( hResultCode ) )
> 					{
>     					if( dwRetry < DPNSVR_REGISTER_ATTEMPTS )
>     					{
> 	    					DPF( 0, "Unable to register ourselves with DPNSVR hr=0x%x, retrying", hResultCode );    				
> 	    					Sleep( DPNSVR_REGISTER_SLEEP );    				
> 	    				}
> 						else
>     					{
> 	    					DPF( 0, "Unable to register ourselves with DPNSVR hr=0x%x", hResultCode );
> 	    				}
> 	    			}
> 					else
>     				{
>     					// Return DPN_OK if we succeed even once
>     					hrRegister = hResultCode;
>     					break;
> 	    			}
> 		        }
> 			
> 				spInfo.pAddress->lpVtbl->Release(spInfo.pAddress);
> 				spInfo.pAddress = NULL;
> 
> 			}
> 			pBilink = pBilink->GetNext();
> 		}
> 
> 		pListenSP->Unlock();
> 
> 		pBilinkSP = pBilinkSP->GetNext();
> 	}
> 
> 	pListenParent->Unlock();
> 
> 	pListenParent->Release();
> 	pListenParent = NULL;
> 
> Exit:
> 	DPF(4,"Returning: [0x%lx]",hrRegister);
> 	return( hrRegister );
> }
> */
> 
> 
> #undef DPF_MODNAME
> #define DPF_MODNAME "DNRegisterWithDPNSVR"
> 
> HRESULT DNRegisterWithDPNSVR(DIRECTNETOBJECT *const pdnObject,
> 							 const HANDLE hProtocol)
> {
> 	HRESULT	hResultCode;
> 	DWORD	dwRetry;
> 	SPGETADDRESSINFODATA	spInfo;
> #ifdef	DEBUG
> 	CHAR	DP8ABuffer[512];
> 	DWORD	DP8ASize;
> #endif
> 
> 	DPF(6,"Parameters: hProtocol [0x%lx]",hProtocol);
> 
> 	//
> 	//	Determine the address we're actually listening on
> 	//
> 	spInfo.hEndpoint = hProtocol;
> 	spInfo.pAddress = NULL;
> 	spInfo.Flags = SP_GET_ADDRESS_INFO_LOCAL_ADAPTER;
> 	if ((hResultCode = DNPGetListenAddressInfo(hProtocol,&spInfo)) == DPN_OK)
> 	{
> 		DNASSERT(spInfo.pAddress != NULL);
> #ifdef	DEBUG
> 		DP8ASize = 512;
> 		spInfo.pAddress->lpVtbl->GetURLA(spInfo.pAddress,DP8ABuffer,&DP8ASize);
> 		DPF(7,"Listen address [%s]",DP8ABuffer);
> #endif
> 
> 		//
> 		//	We re-try the registration to catch the case where DPNSVR is shutting
> 		//	down while we are trying to register.  Unlikely but has to be handled.
> 		//
> 		for( dwRetry = 0; dwRetry < DPNSVR_REGISTER_ATTEMPTS ; dwRetry ++ )
> 		{
>     		if ((hResultCode = pdnObject->ApplicationDesc.RegisterWithDPNSVR( spInfo.pAddress )) == DPN_OK)
> 			{
> 				//
> 				//	Flag registering with DPNSVR for cleanup
> 				//
> 				DNEnterCriticalSection(&pdnObject->csDirectNetObject);
> 				pdnObject->dwFlags |= DN_OBJECT_FLAG_DPNSVR_REGISTERED;
> 				DNLeaveCriticalSection(&pdnObject->csDirectNetObject);
> 				break;
> 			}
> 			else
> 			{
>     			if( dwRetry < DPNSVR_REGISTER_ATTEMPTS )
>     			{
> 	    			DPF( 0, "Unable to register ourselves with DPNSVR hr=0x%x, retrying", hResultCode );    				
> 	    			Sleep( DPNSVR_REGISTER_SLEEP );    				
> 	    		}
> 				else
>     			{
> 	    			DPF( 0, "Unable to register ourselves with DPNSVR hr=0x%x", hResultCode );
> 	    		}
> 	    	}
> 		}
> 		spInfo.pAddress->lpVtbl->Release(spInfo.pAddress);
> 		spInfo.pAddress = NULL;
> 	}
> 
> 	DPF(6,"Returning: [0x%lx]",hResultCode);
> 	return(hResultCode);
.  
.  
()---()---()---()---()---()---()---()---()---(.\core\common.h)---()---()---()---()---()---()---()---()---()---()  
.  
.  
206c206
< 							  PVOID const pIDP8LobbiedApplication,
---
> 							  IDirectPlay8LobbiedApplication *const pIDP8LobbiedApplication,
208a209,211
> HRESULT DNUpdateLobbyStatus(DIRECTNETOBJECT *const pdnObject,
> 							const DWORD dwStatus);
> 
217a221,223
> 
> HRESULT DNRegisterWithDPNSVR(DIRECTNETOBJECT *const pdnObject,
> 							 const HANDLE hProtocol);
.  
.  
()---()---()---()---()---()---()---()---()---(.\core\connect.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
90a91
> #include "DPLobby8.h"
124,127d124
< #define CompareGuid(a,b)                                         \
<     (memcmp((PVOID)(a), (PVOID)(b), sizeof(GUID)))
< 
< 
196c193
< 	WCHAR				DP8ABuffer[512];
---
> 	CHAR				DP8ABuffer[512];
271,272c268,269
< 		if ((hResultCode = pAddress->lpVtbl->BuildFromURLW(	pAddress,
< 															static_cast<WCHAR*>(pvBuffer) + pInfo->dwURLOffset )) != DPN_OK)
---
> 		if ((hResultCode = pAddress->lpVtbl->BuildFromURLA(	pAddress,
> 															static_cast<char*>(pvBuffer) + pInfo->dwURLOffset )) != DPN_OK)
299c296
< 		pAddress->lpVtbl->GetURLW(pAddress,DP8ABuffer,&DP8ASize);
---
> 		pAddress->lpVtbl->GetURLA(pAddress,DP8ABuffer,&DP8ASize);
757c754
< 	WCHAR				DP8ABuffer[512];
---
> 	CHAR				DP8ABuffer[512];
843c840
< 	if (pguidInstance && CompareGuid(pguidInstance,&GUID_NULL))
---
> 	if (pguidInstance && !UuidIsNil(pguidInstance,&rpcStatus))
856c853
< 	if (pguidApplication && CompareGuid(pguidApplication,&GUID_NULL))
---
> 	if (pguidApplication && !UuidIsNil(pguidApplication,&rpcStatus))
895c892
< 		pDevice->lpVtbl->GetURLW(pDevice,DP8ABuffer,&DP8ASize);
---
> 		pDevice->lpVtbl->GetURLA(pDevice,DP8ABuffer,&DP8ASize);
1204c1201
< 	WCHAR				DP8ABuffer[512];
---
> 	CHAR				DP8ABuffer[512];
1229,1230c1226
< 				pAddress->lpVtbl->GetURLW(pAddress,NULL,&dwAddressSize);
< 				dwAddressSize = dwAddressSize * sizeof(WCHAR);
---
> 				pAddress->lpVtbl->GetURLA(pAddress,NULL,&dwAddressSize);
1234c1230
< 				pAddress->lpVtbl->GetURLW(pAddress,DP8ABuffer,&DP8ASize);
---
> 				pAddress->lpVtbl->GetURLA(pAddress,DP8ABuffer,&DP8ASize);
1361,1362c1357,1358
< 		if ((hResultCode = pAddress->lpVtbl->GetURLW(pAddress,
< 													static_cast<WCHAR*>(packedBuffer.GetTailAddress()),
---
> 		if ((hResultCode = pAddress->lpVtbl->GetURLA(pAddress,
> 													static_cast<char*>(packedBuffer.GetTailAddress()),
1728a1725,1729
> 	//	Update Lobby status
> 	//
> 	DNUpdateLobbyStatus(pdnObject,DPLSESSION_CONNECTED);
> 
> 	//
2025a2027,2035
> 	if (fWasConnected)
> 	{
> 		DNUpdateLobbyStatus(pdnObject,DPLSESSION_DISCONNECTED);
> 	}
> 	else
> 	{
> 		DNUpdateLobbyStatus(pdnObject,DPLSESSION_COULDNOTCONNECT);
> 	}	
> 
2959c2969
< 	WCHAR					DP8ABuffer[512];
---
> 	CHAR					DP8ABuffer[512];
2993c3003
< 		(*ppAddress)->lpVtbl->GetURLW(*ppAddress,DP8ABuffer,&DP8ASize);
---
> 		(*ppAddress)->lpVtbl->GetURLA(*ppAddress,DP8ABuffer,&DP8ASize);
3016c3026
< 	WCHAR					DP8ABuffer[512];
---
> 	CHAR					DP8ABuffer[512];
3043c3053
< 		(*ppAddress)->lpVtbl->GetURLW(*ppAddress,DP8ABuffer,&DP8ASize);
---
> 		(*ppAddress)->lpVtbl->GetURLA(*ppAddress,DP8ABuffer,&DP8ASize);
.  
.  
()---()---()---()---()---()---()---()---()---(.\core\dirs)---()---()---()---()---()---()---()---()---()---()  
.  
.  
1c1
< DIRS = daytona
---
> DIRS = win9x{32} daytona
.  
.  
()---()---()---()---()---()---()---()---()---(.\core\dllmain.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
40a41
> #include "creg.h"
45a47,183
> #undef DPF_MODNAME
> #define DPF_MODNAME "RegisterDefaultSettings"
> //
> // RegisterDefaultSettings
> //
> // This function registers the default settings for this module.  
> //
> // For DPVOICE.DLL this is making sure the compression provider sub-key is created.
> //
> HRESULT RegisterDefaultSettings()
> {
> 	CRegistry creg;
> 
> 	if( !creg.Open( HKEY_LOCAL_MACHINE, DN_REG_LOCAL_SP_ROOT DN_REG_LOCAL_SP_SUB, FALSE, TRUE ) )
> 	{
> 		DPFERR( "Cannot create app sub-aread" );
> 		return DPNERR_GENERIC;
> 	}
> 	else
> 	{
> 		return DPN_OK;
> 	}
> }
> 
> #undef DPF_MODNAME
> #define DPF_MODNAME "UnRegisterDefaultSettings"
> //
> // UnRegisterDefaultSettings
> //
> // This function registers the default settings for this module.  
> //
> // For DPVOICE.DLL this is making sure the compression provider sub-key is created.
> //
> HRESULT UnRegisterDefaultSettings()
> {
> 	CRegistry creg;
> 
> 	if( !creg.Open( HKEY_LOCAL_MACHINE, DN_REG_LOCAL_SP_ROOT, FALSE, TRUE ) )
> 	{
> 		DPFERR( "Cannot remove app, does not exist" );
> 	}
> 	else
> 	{
> 		if( !creg.DeleteSubKey( &(DN_REG_LOCAL_SP_SUB)[1] ) )
> 		{
> 			DPFERR( "Cannot remove cp sub-key, could have elements" );
> 		}
> 	}
> 
> 	return DPN_OK;
> }
> 
> #undef DPF_MODNAME
> #define DPF_MODNAME "DllRegisterServer"
> HRESULT WINAPI DllRegisterServer()
> {
> 	HRESULT hr = S_OK;
> 	BOOL fFailed = FALSE;
> 
> 	if( !CRegistry::Register( L"DirectPlay8.Client.1", L"DirectPlay8Client Object", 
> 							  L"dpnet.dll", CLSID_DirectPlay8Client, L"DirectPlay8.Client") )
> 	{
> 		DPFERR( "Could not register dp8 client object" );
> 		fFailed = TRUE;
> 	}
> 
> 	if( !CRegistry::Register( L"DirectPlay8.Server.1", L"DirectPlay8Server Object", 
> 							  L"dpnet.dll", CLSID_DirectPlay8Server, L"DirectPlay8.Server") )
> 	{
> 		DPFERR( "Could not register dp8 Server object" );
> 		fFailed = TRUE;
> 	}
> 
> 	if( !CRegistry::Register( L"DirectPlay8.Peer.1", L"DirectPlay8Peer Object", 
> 							  L"dpnet.dll", CLSID_DirectPlay8Peer, L"DirectPlay8.Peer") )
> 	{
> 		DPFERR( "Could not register dp8 client object" );
> 		fFailed = TRUE;
> 	}
> 
> 
> 	if( FAILED( hr = RegisterDefaultSettings() ) )
> 	{
> 		DPF( 0, "Could not register default settings hr = 0x%x", hr );
> 		fFailed = TRUE;
> 	}
> 	
> 	if( fFailed )
> 	{
> 		return E_FAIL;
> 	}
> 	else
> 	{
> 		return S_OK;
> 	}
> }
> 
> #undef DPF_MODNAME
> #define DPF_MODNAME "DllUnregisterServer"
> STDAPI DllUnregisterServer()
> {
> 	HRESULT hr = S_OK;
> 	BOOL fFailed = FALSE;
> 
> 	if( !CRegistry::UnRegister(CLSID_DirectPlay8Client) )
> 	{
> 		DPF( 0, "Failed to unregister client object" );
> 		fFailed = TRUE;
> 	}
> 
> 	if( !CRegistry::UnRegister(CLSID_DirectPlay8Server) )
> 	{
> 		DPF( 0, "Failed to unregister server object" );
> 		fFailed = TRUE;
> 	}
> 
> 	if( !CRegistry::UnRegister(CLSID_DirectPlay8Peer) )
> 	{
> 		DPF( 0, "Failed to unregister peer object" );
> 		fFailed = TRUE;
> 	}
> 
> 	if( FAILED( hr = UnRegisterDefaultSettings() ) )
> 	{
> 		DPF( 0, "Failed to remove default settings hr=0x%x", hr );
> 	}
> 
> 	if( fFailed )
> 	{
> 		return E_FAIL;
> 	}
> 	else
> 	{
> 		return S_OK;
> 	}
> 
> }
.  
.  
()---()---()---()---()---()---()---()---()---(.\core\dncore.h)---()---()---()---()---()---()---()---()---()---()  
.  
.  
94a95
> #define	DN_OBJECT_FLAG_DPNSVR_REGISTERED	0x20000000
108a110,112
> #define DN_REG_LOCAL_SP_ROOT				L"Software\\Microsoft\\DirectPlay8"
> #define DN_REG_LOCAL_SP_SUB					L"\\Service Providers"
> #define DN_REG_LOCAL_SP_SUBKEY				DN_REG_LOCAL_SP_ROOT DN_REG_LOCAL_SP_SUB
109a114,118
> #define	DN_REG_KEYNAME_ADAPTER_LIST			L"Adapter List"
> #define	DN_REG_KEYNAME_ALL_APPLICATIONS		L"All Applications"
> #define	DN_REG_KEYNAME_FRIENDLY_NAME		L"Friendly Name"
> #define DN_REG_KEYNAME_GUID					L"GUID"
> 
132a142
> typedef struct IDirectPlay8LobbiedApplication	IDirectPlay8LobbiedApplication;
273a284
> 	// Lobby additions
274a286,289
> 	DPNHANDLE				dpnhLobbyConnection;	// Lobby Connection to update
> 
> 	IDirectPlay8LobbiedApplication	*pIDP8LobbiedApplication;
> 	
.  
.  
()---()---()---()---()---()---()---()---()---(.\core\dnet.def)---()---()---()---()---()---()---()---()---()---()  
.  
.  
5a6,8
> 	DllRegisterServer	PRIVATE
> 	DllUnregisterServer	PRIVATE
> 
.  
.  
()---()---()---()---()---()---()---()---()---(.\core\dnet.rc)---()---()---()---()---()---()---()---()---()---()  
.  
.  
1c1,20
< //LANGUAGE LANG_ENGLISH, SUBLANG_ENGLISH_US
---
> //Microsoft Developer Studio generated resource script.
> //
> 
> #define APSTUDIO_READONLY_SYMBOLS
> /////////////////////////////////////////////////////////////////////////////
> //
> // Generated from the TEXTINCLUDE 2 resource.
> //
> #define APSTUDIO_HIDDEN_SYMBOLS
> #include "windows.h"
> #undef APSTUDIO_HIDDEN_SYMBOLS
> 
> /////////////////////////////////////////////////////////////////////////////
> #undef APSTUDIO_READONLY_SYMBOLS
> 
> /////////////////////////////////////////////////////////////////////////////
> // English (U.S.) resources
> 
> #ifdef _WIN32
> LANGUAGE LANG_ENGLISH, SUBLANG_ENGLISH_US
2a22
> #endif //_WIN32
3a24,31
> #ifndef _MAC
> /////////////////////////////////////////////////////////////////////////////
> //
> // Version
> //
> 
> #ifdef WIN95
> 
4a33,48
> #include "verinfo.h"
> 
> #define VERSIONNAME               "dpnet.dll\0"
> #ifdef DEBUG
> #define VERSIONDESCRIPTION        "Microsoft DirectPlay8 Debug\0"
> #else
> #define VERSIONDESCRIPTION        "Microsoft DirectPlay8\0"
> #endif
> #define VERSIONTYPE               VFT_DLL
> #define VERSIONSUBTYPE            VFT2_UNKNOWN
> 
> #include "verinfo.ver"
> 
> #else // WinNT
> 
> #include <windows.h>
12a57,62
> 
> #endif
> 
> #endif    // !_MAC
> 
> 
.  
.  
()---()---()---()---()---()---()---()---()---(.\core\enum_sp.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
47a48
> #include "DNMisc.h"
49a51
> #include "CReg.h"
63c65,74
< // BUGBUG: [xbox] [mgere] Removed since we don't support registry
---
> 	DWORD	dwAllAppLen;
> 	WCHAR	lpwszAllAppStr[DN_FLAG_STR_LEN+1];
> 
> 	dwAllAppLen = (DN_FLAG_STR_LEN + 1) * sizeof(WCHAR);
> 	if (RegQueryValueExW(hSPKey,DN_REG_KEYNAME_ALL_APPLICATIONS,NULL,NULL,(PBYTE)lpwszAllAppStr,&dwAllAppLen) != ERROR_SUCCESS)
> 		return(FALSE);
> 
> 	if (towupper(lpwszAllAppStr[0]) == L'N')
> 		return(TRUE);
> 
78,79c89
< // BUGBUG:  [mgere] [xbox] this function changed substantially.  Need to verify that it's still working properly.
< 	HRESULT	hResultCode = DPN_OK;
---
> 	GUID	guid;
81c91,101
< 	DPN_SERVICE_PROVIDER_INFO	dnSpInfo;
---
> 	DWORD	dwEntrySize;
> 	DWORD	dwEnumCount;
> 	DWORD	dwEnumIndex;
> 	DWORD	dwFriendlyNameLen;
> 	DWORD	dwGuidSize;
> 	DWORD	dwKeyLen;
> 	DWORD	dwMaxFriendlyNameLen;
> 	DWORD	dwMaxKeyLen;
> 	PWSTR	pwszFriendlyName;
> 	PWSTR	pwszKeyName;
> 	HRESULT	hResultCode = DPN_OK;
83,84c103,106
<     WCHAR wszSP[] = L"DirectPlay8 TCP/IP Service Provider";
< 	GUID guidSP = { 0xEBFE7BA0, 0x628D, 0x11D2, { 0xAE, 0x0F, 0x00, 0x60, 0x97, 0xB0, 0x14, 0x11 } };
---
> 	DPN_SERVICE_PROVIDER_INFO	dnSpInfo;
> 	CRegistry	RegistryEntry;
> 	CRegistry	SubEntry;
> 	CServiceProvider	*pSP;
92a115,118
> 	pwszFriendlyName = NULL;
> 	pwszKeyName = NULL;
> 	pSP = NULL;
> 
96,97c122,127
< 	hResultCode = packedBuffer.AddToBack(wszSP,(wcslen(wszSP)+1)*sizeof(WCHAR));
< 	dnSpInfo.pwszName = static_cast<WCHAR*>(packedBuffer.GetTailAddress());
---
> 	if (!RegistryEntry.Open(HKEY_LOCAL_MACHINE,DN_REG_LOCAL_SP_SUBKEY,TRUE,FALSE))
> 	{
> 		DPFERR("RegistryEntry.Open() failed");
> 		hResultCode = DPNERR_GENERIC;
> 		goto Failure;
> 	}
99c129,156
< 	memcpy(&dnSpInfo.guid,&guidSP,sizeof(GUID));
---
> 	//
> 	//	Set up to enumerate
> 	//
> 	if (!RegistryEntry.GetMaxKeyLen(dwMaxKeyLen))
> 	{
> 		DPFERR("RegistryEntry.GetMaxKeyLen() failed");
> 		hResultCode = DPNERR_GENERIC;
> 		goto Failure;
> 	}
> 	dwMaxKeyLen++;	// Null terminator
> 	DPF(5,"dwMaxKeyLen = %ld",dwMaxKeyLen);
> 	if ((pwszKeyName = static_cast<WCHAR*>(DNMalloc(dwMaxKeyLen * sizeof(WCHAR)))) == NULL)
> 	{
> 		DPFERR("DNMalloc() failed");
> 		hResultCode = DPNERR_OUTOFMEMORY;
> 		goto Failure;
> 	}
> 	dwMaxFriendlyNameLen = dwMaxKeyLen;
> 	if ((pwszFriendlyName = static_cast<WCHAR*>(DNMalloc(dwMaxFriendlyNameLen * sizeof(WCHAR)))) == NULL)	// Seed friendly name size
> 	{
> 		DPFERR("DNMalloc() failed");
> 		hResultCode = DPNERR_OUTOFMEMORY;
> 		goto Failure;
> 	}
> 	dwGuidSize = (GUID_STRING_LENGTH + 1) * sizeof(WCHAR);
> 	dwEnumIndex = 0;
> 	dwKeyLen = dwMaxKeyLen;
> 	dwEnumCount = 0;
101,104c158,171
< 	dnSpInfo.dwFlags = 0;
< 	dnSpInfo.dwReserved = 0;
< 	dnSpInfo.pvReserved = NULL;
< 	hResultCode = packedBuffer.AddToFront(&dnSpInfo,sizeof(DPN_SERVICE_PROVIDER_INFO));
---
> 	//
> 	//	Enumerate SP's !
> 	//
> 	while (RegistryEntry.EnumKeys(pwszKeyName,&dwKeyLen,dwEnumIndex))
> 	{
> 		dwEntrySize = 0;
> 		DPF(5,"%ld - %S (%ld)",dwEnumIndex,pwszKeyName,dwKeyLen);
> 		if (!SubEntry.Open(RegistryEntry,pwszKeyName,TRUE,FALSE))
> 		{
> 			DPF(0,"Couldn't open subentry.  Skipping [%S]", pwszKeyName);
> 			dwEnumIndex++;
> 			dwKeyLen = dwMaxKeyLen;
> 			continue;
> 		}
105a173,264
> 		//
> 		//	GUID
> 		//
> 		dwGuidSize = (DN_GUID_STR_LEN + 1) * sizeof(WCHAR);
> 		if (!SubEntry.ReadGUID(DN_REG_KEYNAME_GUID,guid))
> 		{
> 			DPF(0,"SubEntry.ReadGUID failed.  Skipping [%S]", pwszKeyName);
> 			SubEntry.Close();
> 			dwEnumIndex++;
> 			dwKeyLen = dwMaxKeyLen;
> 			continue;
> 		}
> 
> 		//
> 		//	Attempt to instantiate SP and initialize it, to ensure that it is in fact usable.
> 		//
> 		if (!(dwFlags & DPNENUMSERVICEPROVIDERS_ALL))
> 		{
> 			DPF(5,"Checking [%S]",pwszKeyName);
> 			if ((hResultCode = DN_SPFindEntry(pdnObject,&guid,&pSP)) != DPN_OK)
> 			{
> 				if ((hResultCode = DN_SPInstantiate(pdnObject,&guid,&pSP)) != DPN_OK)
> 				{
> 					DPFERR("Could not find or instantiate SP");
> 					SubEntry.Close();
> 					dwEnumIndex++;
> 					dwKeyLen = dwMaxKeyLen;
> 					hResultCode = DPN_OK; // override return code
> 					continue;
> 				}
> 			}
> 			pSP->Release();
> 			pSP = NULL;
> 		}
> 
> 		//
> 		//	Friendly Name
> 		//
> 		if (!SubEntry.GetValueLength(DN_REG_KEYNAME_FRIENDLY_NAME,&dwFriendlyNameLen))
> 		{
> 			DPF(0,"Could not get FriendlyName length.  Skipping [%S]",pwszKeyName);
> 			SubEntry.Close();
> 			dwEnumIndex++;
> 			dwKeyLen = dwMaxKeyLen;
> 			continue;
> 		}
> 		if (dwFriendlyNameLen > dwMaxFriendlyNameLen)
> 		{
> 			// grow buffer (noting that the registry functions always return WCHAR) and try again
> 			DPF(5,"Need to grow pwszFriendlyName from %ld to %ld",
> 					dwMaxFriendlyNameLen * sizeof(WCHAR),dwFriendlyNameLen * sizeof(WCHAR));
> 			if (pwszFriendlyName != NULL)
> 			{
> 				DNFree(pwszFriendlyName);
> 			}
> 			dwMaxFriendlyNameLen = dwFriendlyNameLen;
> 			if ((pwszFriendlyName = static_cast<WCHAR*>(DNMalloc(dwMaxFriendlyNameLen * sizeof( WCHAR )))) == NULL)
> 			{
> 				DPFERR("DNMalloc() failed");
> 				hResultCode = DPNERR_OUTOFMEMORY;
> 				goto Failure;
> 			}
> 		}
> 		if (!SubEntry.ReadString(DN_REG_KEYNAME_FRIENDLY_NAME,pwszFriendlyName,&dwFriendlyNameLen))
> 		{
> 			DPF(0,"Could not read friendly name.  Skipping [%S]",pwszKeyName);
> 			SubEntry.Close();
> 			dwEnumIndex++;
> 			dwKeyLen = dwMaxKeyLen;
> 			continue;
> 		}
> 		DPF(5,"Friendly Name = %S (%ld WCHARs)",pwszFriendlyName,dwFriendlyNameLen);
> 
> 		hResultCode = packedBuffer.AddToBack(pwszFriendlyName,dwFriendlyNameLen * sizeof(WCHAR));
> 		dnSpInfo.pwszName = static_cast<WCHAR*>(packedBuffer.GetTailAddress());
> 		memcpy(&dnSpInfo.guid,&guid,sizeof(GUID));
> 		dnSpInfo.dwFlags = 0;
> 		dnSpInfo.dwReserved = 0;
> 		dnSpInfo.pvReserved = NULL;
> 		hResultCode = packedBuffer.AddToFront(&dnSpInfo,sizeof(DPN_SERVICE_PROVIDER_INFO));
> 
> 		dwEnumCount++;
> 		SubEntry.Close();
> 		dwEnumIndex++;
> 		dwKeyLen = dwMaxKeyLen;
> 	}
> 
> 	RegistryEntry.Close();
> 
> 	//
> 	//	Success ?
> 	//
111c270
< 		*pcReturned = 1;
---
> 		*pcReturned = dwEnumCount;
113c272
< 		goto Exit;
---
> 		goto Failure;
117c276,277
< 		*pcReturned = 1;
---
> 		*pcReturned = dwEnumCount;
> 		hResultCode = DPN_OK;
120,126d279
< 			hResultCode = DN_SPEnsureLoaded(pdnObject,&guidSP,NULL,TRUE);
< 			if (hResultCode != DPN_OK)
< 			{
< 				DPF(0,"Could not load SP.  Skipping [%S]", pwszKeyName);
< 				hResultCode = DPN_OK; // override return code
< 			}
< 
128a282,286
> 	DNFree(pwszKeyName);
> 	pwszKeyName = NULL;
> 	DNFree(pwszFriendlyName);
> 	pwszFriendlyName = NULL;
> 
131a290,315
> 
> Failure:
> 	if (pwszKeyName)
> 	{
> 		DNFree(pwszKeyName);
> 		pwszKeyName = NULL;
> 	}
> 	if (pwszFriendlyName)
> 	{
> 		DNFree(pwszFriendlyName);
> 		pwszFriendlyName = NULL;
> 	}
> 	if (SubEntry.IsOpen())
> 	{
> 		SubEntry.Close();
> 	}
> 	if (RegistryEntry.IsOpen())
> 	{
> 		RegistryEntry.Close();
> 	}
> 	if (pSP)
> 	{
> 		pSP->Release();
> 		pSP = NULL;
> 	}
> 	goto Exit;
145,149d328
< // BUGBUG
< // [mgere] [xbox] Removed this whole function.  It uses registry to enumerate adapters
< //         and XBox doesn't have a registry.  Need to figure out some other way to
< //         handle this, if at all.
< /*
299d477
< */	return(E_FAIL);
.  
.  
()---()---()---()---()---()---()---()---()---(.\core\migration.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
90a91,93
> #include "dpnsvrq.h"
> #include "dpnsdef.h"
> #include "dpnsvlib.h"
91a95
> #include "dplobby8.h"
300a305
> 	DNUpdateLobbyStatus(pdnObject,DPLSESSION_HOSTMIGRATEDHERE);	
717a723,842
> 	//
> 	//	Register with DPNSVR
> 	//
> 	if(pdnObject->ApplicationDesc.UseDPNSVR())
> 	{
> 		CAsyncOp	*pListenParent;
> 
> 		DPF( 7, "Asking for DPNSVR to start listening for us.." );
> 
> 		pListenParent = NULL;
> 
> 		DNEnterCriticalSection(&pdnObject->csDirectNetObject);
> 		if (pdnObject->pListenParent)
> 		{
> 			pdnObject->pListenParent->AddRef();
> 			pListenParent = pdnObject->pListenParent;
> 		}
> 		DNLeaveCriticalSection(&pdnObject->csDirectNetObject);
> 
> 		if (pListenParent)
> 		{
> 			BOOL		fCoUninitialize = FALSE;
> 			CBilink		*pBilinkSP;
> 			CBilink		*pBilink;
> 			CAsyncOp	*pListenSP;
> 			CAsyncOp	*pAsyncOp;
> 			CAsyncOp	**ListenList;
> 			DWORD		dwCount;
> 			DWORD		dwActual;
> 
> 			if (COM_CoInitialize(NULL) == S_OK)
> 			{
> 				fCoUninitialize = TRUE;
> 			}
> 
> 			dwCount = 0;
> 			dwActual = 0;
> 			ListenList = NULL;
> 
> 			pListenParent->Lock();
> 
> 			pBilinkSP = pListenParent->m_bilinkParent.GetNext();
> 			while (pBilinkSP != &pListenParent->m_bilinkParent)
> 			{
> 				pListenSP = CONTAINING_OBJECT(pBilinkSP,CAsyncOp,m_bilinkChildren);
> 				pListenSP->Lock();
> 
> 				pBilink = pListenSP->m_bilinkParent.GetNext();
> 				while (pBilink != &pListenSP->m_bilinkParent)
> 				{
> 					dwCount++;
> 					pBilink = pBilink->GetNext();
> 				}
> 				pListenSP->Unlock();
> 
> 				pBilinkSP = pBilinkSP->GetNext();
> 			}
> 
> 			if (dwCount > 0)
> 			{
> 				if ((ListenList = static_cast<CAsyncOp**>(DNMalloc(dwCount*sizeof(CAsyncOp*)))) != NULL)
> 				{
> 					pBilinkSP = pListenParent->m_bilinkParent.GetNext();
> 					while (pBilinkSP != &pListenParent->m_bilinkParent)
> 					{
> 						pListenSP = CONTAINING_OBJECT(pBilinkSP,CAsyncOp,m_bilinkChildren);
> 						pListenSP->Lock();
> 
> 						pBilink = pListenSP->m_bilinkParent.GetNext();
> 						while (pBilink != &pListenSP->m_bilinkParent)
> 						{
> 							pAsyncOp = CONTAINING_OBJECT(pBilink,CAsyncOp,m_bilinkChildren);
> 							pAsyncOp->AddRef();
> 							ListenList[dwActual] = pAsyncOp;
> 
> 							dwActual++;
> 							if (dwActual > dwCount)
> 							{
> 								DNASSERT(FALSE);
> 								break;
> 							}
> 							pBilink = pBilink->GetNext();
> 						}
> 						pListenSP->Unlock();
> 						pBilinkSP = pBilinkSP->GetNext();
> 					}
> 				}
> 			}
> 
> 			pListenParent->Unlock();
> 
> 			if ((ListenList != NULL) && (dwActual > 0))
> 			{
> 				DWORD	dw;
> 
> 				for (dw = 0 ; dw < dwActual ; dw++)
> 				{
> 					if (ListenList[dw]->GetProtocolHandle() != 0)
> 					{
> 						hResultCode = DNRegisterWithDPNSVR(pdnObject,ListenList[dw]->GetProtocolHandle());
> 					}
> 
> 					ListenList[dw]->Release();
> 					ListenList[dw] = NULL;
> 				}
> 
> 				DNFree(ListenList);
> 				ListenList = NULL;
> 			}
> 
> 			if (fCoUninitialize)
> 			{
> 				COM_CoUninitialize();
> 			}
> 
> 			pListenParent->Release();
> 			pListenParent = NULL;
> 		}
> 	}
> 
809a935,939
> 
> 	// 
> 	// Indicate to lobby (if there is one) that a host migration has occured
> 	//
> 	DNUpdateLobbyStatus(pdnObject,DPLSESSION_HOSTMIGRATED);		
.  
.  
()---()---()---()---()---()---()---()---()---(.\core\msghandler.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
69a70,72
> #include "dpnsdef.h"
> #include "dpnsvrq.h"
> #include "dpnsvlib.h"
683a687
> 	BOOL		fUnregister;
705a710,725
> 	//
> 	//	Unregister from DPNSVR when LISTENs start to terminate
> 	//
> 	fUnregister = FALSE;
> 	DNEnterCriticalSection(&pdnObject->csDirectNetObject);
> 	if (pdnObject->dwFlags & DN_OBJECT_FLAG_DPNSVR_REGISTERED)
> 	{
> 		pdnObject->dwFlags &= (~DN_OBJECT_FLAG_DPNSVR_REGISTERED);
> 		fUnregister = TRUE;
> 	}
> 	DNLeaveCriticalSection(&pdnObject->csDirectNetObject);
> 	if (fUnregister)
> 	{
> 		pdnObject->ApplicationDesc.UnregisterWithDPNSVR();
> 	}
> 
1151c1171
< 	WCHAR			DP8ABuffer[512];
---
> 	CHAR			DP8ABuffer[512];
1167c1187
< 	pHostAddress->lpVtbl->GetURLW(pHostAddress,DP8ABuffer,&DP8ASize);
---
> 	pHostAddress->lpVtbl->GetURLA(pHostAddress,DP8ABuffer,&DP8ASize);
1171c1191
< 	pDeviceAddress->lpVtbl->GetURLW(pDeviceAddress,DP8ABuffer,&DP8ASize);
---
> 	pDeviceAddress->lpVtbl->GetURLA(pDeviceAddress,DP8ABuffer,&DP8ASize);
1202c1222
< 	WCHAR			DP8ABuffer[512];
---
> 	CHAR			DP8ABuffer[512];
1218c1238
< 	pHostAddress->lpVtbl->GetURLW(pHostAddress,DP8ABuffer,&DP8ASize);
---
> 	pHostAddress->lpVtbl->GetURLA(pHostAddress,DP8ABuffer,&DP8ASize);
1222c1242
< 	pDeviceAddress->lpVtbl->GetURLW(pDeviceAddress,DP8ABuffer,&DP8ASize);
---
> 	pDeviceAddress->lpVtbl->GetURLA(pDeviceAddress,DP8ABuffer,&DP8ASize);
1251c1271
< 	WCHAR			DP8ABuffer[512];
---
> 	CHAR			DP8ABuffer[512];
1267c1287
< 	pDeviceAddress->lpVtbl->GetURLW(pDeviceAddress,DP8ABuffer,&DP8ASize);
---
> 	pDeviceAddress->lpVtbl->GetURLA(pDeviceAddress,DP8ABuffer,&DP8ASize);
.  
.  
()---()---()---()---()---()---()---()---()---(.\core\ntentry.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
444,445c444
< 		hResultCode = m_pAddress->lpVtbl->GetURLW(m_pAddress,NULL,&dwURLSize);
< 		dwURLSize = dwURLSize * sizeof(WCHAR);
---
> 		hResultCode = m_pAddress->lpVtbl->GetURLA(m_pAddress,NULL,&dwURLSize);
457,458c456,457
< 				if ((hResultCode = m_pAddress->lpVtbl->GetURLW(m_pAddress,
< 						static_cast<WCHAR*>(pPackedBuffer->GetTailAddress()),&dwURLSize)) == DPN_OK)
---
> 				if ((hResultCode = m_pAddress->lpVtbl->GetURLA(m_pAddress,
> 						static_cast<char*>(pPackedBuffer->GetTailAddress()),&dwURLSize)) == DPN_OK)
547c546
< 		hResultCode = pAddress->lpVtbl->BuildFromURLW(pAddress,reinterpret_cast<WCHAR*>(pBufferStart + pdnEntryInfo->dwURLOffset));
---
> 		hResultCode = pAddress->lpVtbl->BuildFromURLA(pAddress,reinterpret_cast<char*>(pBufferStart + pdnEntryInfo->dwURLOffset));
.  
.  
()---()---()---()---()---()---()---()---()---(.\core\paramval.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
214c214
< 							  PVOID const pIDP8LobbiedApplication,
---
> 							  IDirectPlay8LobbiedApplication *const pIDP8LobbiedApplication,
222a223,229
>     if( pIDP8LobbiedApplication != NULL &&
>         !DNVALID_READPTR( pIDP8LobbiedApplication, sizeof( IDirectPlay8LobbiedApplication * ) ) )
>     {
>         DPFERR( "Invalid interface pointer specified for register lobby" );
>         return DPNERR_INVALIDPOINTER;
>     }
> 
248a256,261
> 
> 	    if( !pIDP8LobbiedApplication )
> 	    {
> 	    	DPFERR( "You must specify a lobby application interface to use" );
> 	    	return DPNERR_INVALIDPOINTER;
> 	    }
1064c1077
<     if( dwFlags & ~(DPNENUMHOSTS_SYNC | DPNENUMHOSTS_NOBROADCASTFALLBACK ) )
---
>     if( dwFlags & ~(DPNENUMHOSTS_OKTOQUERYFORADDRESSING | DPNENUMHOSTS_SYNC | DPNENUMHOSTS_NOBROADCASTFALLBACK ) )
1602a1616,1621
>     if( ( dwFlags & ~( DPNHOST_OKTOQUERYFORADDRESSING ) ) != 0 )
>     {
>         DPFERR("Invalid flags specified" );
>         return( DPNERR_INVALIDFLAGS );
>     }
> 
1815c1834
<     if( dwFlags & ~(DPNCONNECT_SYNC) )
---
>     if( dwFlags & ~(DPNCONNECT_SYNC | DPNCONNECT_OKTOQUERYFORADDRESSING) )
2143c2162
<     if( pdnAppDesc->dwFlags & ~(DPNSESSION_CLIENT_SERVER | DPNSESSION_MIGRATE_HOST | DPNSESSION_REQUIREPASSWORD) )
---
>     if( pdnAppDesc->dwFlags & ~(DPNSESSION_CLIENT_SERVER | DPNSESSION_MIGRATE_HOST | DPNSESSION_REQUIREPASSWORD | DPNSESSION_NODPNSVR) )
.  
.  
()---()---()---()---()---()---()---()---()---(.\core\paramval.h)---()---()---()---()---()---()---()---()---()---()  
.  
.  
47c47
< 							  PVOID const pIDP8LobbiedApplication,
---
> 							  IDirectPlay8LobbiedApplication *const pIDP8LobbiedApplication,
.  
.  
()---()---()---()---()---()---()---()---()---(.\core\peer.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
69d68
< #include <wchar.h>
120c119
< typedef STDMETHODIMP PeerRegisterLobby(IDirectPlay8Peer *pInterface,const DPNHANDLE dpnHandle,PVOID const pIDP8LobbiedApplication,const DWORD dwFlags);
---
> typedef STDMETHODIMP PeerRegisterLobby(IDirectPlay8Peer *pInterface,const DPNHANDLE dpnHandle,IDirectPlay8LobbiedApplication *const pIDP8LobbiedApplication,const DWORD dwFlags);
.  
.  
()---()---()---()---()---()---()---()---()---(.\core\server.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
62d61
< #include <wchar.h>
111c110
< typedef STDMETHODIMP ServerRegisterLobby(IDirectPlay8Server *pInterface,const DPNHANDLE dpnHandle,PVOID const pIDP8LobbiedApplication,const DWORD dwFlags);
---
> typedef STDMETHODIMP ServerRegisterLobby(IDirectPlay8Server *pInterface,const DPNHANDLE dpnHandle,IDirectPlay8LobbiedApplication *const pIDP8LobbiedApplication,const DWORD dwFlags);
.  
.  
()---()---()---()---()---()---()---()---()---(.\core\sources.inc)---()---()---()---()---()---()---()---()---()---()  
.  
.  
0a1,15
> #
> # The MAJORCOMP and MINORCOMP variables are defined
> # so that $(MAJORCOMP)$(MINORCOMP)filename can be used in
> # cross compiling to provide unique filenames in a flat namespace.
> #
> 
> MAJORCOMP=windows
> MINORCOMP=media
> 
> #
> # The TARGETNAME variable is defined by the developer.  It is the name of
> # the target (component) that is being built by this makefile.  It
> # should NOT include any path or file extension information.
> #
> 
2,3c17,27
< TARGETPATHLIB=$(BASEDIR)\public\sdk\lib
< TARGETTYPE=DYNLINK
---
> DLLDEF=..\dnet.def
> UMTYPE=windows
> 
> #
> # The TARGETPATH and TARGETTYPE variables are defined by the developer.
> # The first specifies where the target is to be build.  The second specifies
> # the type of target (either PROGRAM, DYNLINK, LIBRARY, DRIVER, etc
> # UMAPPL_NOLIB is used when you're only building user-mode
> # apps and don't need to build a library.
> #
> 
4a29
> TARGETTYPE=DYNLINK
6,9c31,49
< !ifdef _BUILD_FOR_WIN2000
< UMTYPE=windows
< DLLENTRY=_DllMainCRTStartup
< C_DEFINES=$(C_DEFINES) -D_BUILD_FOR_WIN2000
---
> #
> # The TARGETLIBS specifies additional libraries to link with you target
> # image.  Each library path specification should contain an asterisk (*)
> # where the machine specific subdirectory name should go.
> #
> 
> PASS1_PUBLISH={ $(O)\dpnet.lib = $(SDK_LIB_PATH)\dpnet.lib}
> 
> #
> # 04/10/2000 - allows for addition of BoundsChecker, etc 
> #  libs specified in the OS environment
> #
> TARGETLIBS=$(TARGETLIBS) \
> 	   ..\..\common\obj$(BUILD_ALT_DIR)\*\common.lib \
>            ..\..\protocol\obj$(BUILD_ALT_DIR)\*\protocol.lib \
>            ..\..\dpnsvr\dpnsvlib\obj$(BUILD_ALT_DIR)\*\dpnsvlib.lib \
> !if "$(NTDEBUG)" == "ntsd" || "$(NTDEBUG)" == "cvp" || "$(NTDEBUG)" == "sym"
> 	   $(BASEDIR)\public\sdk\lib\*\libcmtd.lib \
> 	   $(BASEDIR)\public\sdk\lib\*\libcpmtd.lib \
11,13c51,52
< UMTYPE=xboxdll
< DLLENTRY=DllMain
< LINKER_FLAGS=-align:32
---
> 	   $(BASEDIR)\public\sdk\lib\*\libcmt.lib \
> 	   $(BASEDIR)\public\sdk\lib\*\libcpmt.lib \
14a54,61
> 	   $(BASEDIR)\public\sdk\lib\*\kernel32.lib \
> 	   $(BASEDIR)\public\sdk\lib\*\user32.lib \
> 	   $(BASEDIR)\public\sdk\lib\*\gdi32.lib \
> 	   $(BASEDIR)\public\sdk\lib\*\winmm.lib \
> 	   $(BASEDIR)\public\sdk\lib\*\advapi32.lib \
> 	   $(BASEDIR)\public\sdk\lib\*\ole32.lib  \
> 	   $(BASEDIR)\public\sdk\lib\*\uuid.lib \
> 	   $(BASEDIR)\public\sdk\lib\*\rpcrt4.lib
16d62
< INCLUDES=..\;..\..\inc;..\..\protocol;..\..\common;..\..\..\dvoice\inc
18c64,66
< C_DEFINES=$(C_DEFINES) -D_UNICODE -DUNICODE -DCINTERFACE
---
> !if "$(NTDEBUG)" == "ntsd" || "$(NTDEBUG)" == "cvp" || "$(NTDEBUG)" == "sym"
> C_DEFINES=$(C_DEFINES) /DDEBUG /D_DEBUG
> !endif
20c68,72
< USER_C_FLAGS=$(USER_C_FLAGS) /FAcs /Od
---
> #
> # The INCLUDES variable specifies any include paths that are specific to
> # this source directory.  Separate multiple directory paths with single
> # semicolons.  Relative path specifications are okay.
> #
22,24c74
< !if "$(NTDEBUG)" == "ntsd" || "$(NTDEBUG)" == "ntsdnodbg" || "$(NTDEBUG)" == "cvp" || "$(NTDEBUG)" == "sym"
< USER_C_FLAGS=$(USER_C_FLAGS) /Od
< !endif
---
> INCLUDES=..\;..\..\..\dvoice\inc;$(DXROOT)\inc;..\..\inc;..\..\protocol;..\..\common;..\..\dpnsvr\dpnsvlib;..\..\dpnsvr\inc
26d75
< MSC_WARNING_LEVEL=/W3 /WX
28c77,82
< DLLDEF=..\dnet.def
---
> #
> # The SOURCES variable is defined by the developer.  It is a list of all the
> # source files for this component.  Each source file should be on a separate
> # line using the line continuation character.  This will minimize merge
> # conflicts if two developers adding source files to the same component.
> #
70a125,132
> #
> # Next specify options for the compiler.
> #
> 
> C_DEFINES= $(C_DEFINES) /D_USRDLL /D_MBCS /DWIN32 /D_MT /DDNET_EXPORT /DCINTERFACE /DMICHAEL
> NTDEBUGTYPE=both
> 
> USER_C_FLAGS=-nologo -W3
73,94c135,137
< TARGETLIBS= \
< 	   ..\..\common\obj$(BUILD_ALT_DIR)\*\common.lib \
<            ..\..\protocol\obj$(BUILD_ALT_DIR)\*\protocol.lib \
<            $(BASEDIR)\public\sdk\lib\*\dpnaddr.lib \
<            ..\..\sp\wsock\daytona\obj$(BUILD_ALT_DIR)\*\dpnwsock.lib \
< !ifdef _BUILD_FOR_WIN2000
< 	   $(BASEDIR)\public\sdk\lib\*\libcmt$(BUILD_ALT_DIR).lib \
<            $(BASEDIR)\public\sdk\lib\*\libcmt$(BUILD_ALT_DIR).lib \
< 	   $(BASEDIR)\public\sdk\lib\*\kernel32.lib \
< 	   $(BASEDIR)\public\sdk\lib\*\user32.lib \
< 	   $(BASEDIR)\public\sdk\lib\*\gdi32.lib \
< 	   $(BASEDIR)\public\sdk\lib\*\winmm.lib \
< 	   $(BASEDIR)\public\sdk\lib\*\advapi32.lib \
< 	   $(BASEDIR)\public\sdk\lib\*\ole32.lib  \
< 	   $(BASEDIR)\public\sdk\lib\*\uuid.lib \
< 	   $(BASEDIR)\public\sdk\lib\*\rpcrt4.lib
< !else
< 	   $(BASEDIR)\public\sdk\lib\*\uuid.lib \
<            $(BASEDIR)\public\sdk\lib\*\xapi.lib \
<            $(DDK_LIB_PATH)\ntoskrnl.lib \
<              $(SDK_LIB_PATH)\libcntpr.lib
< !endif
---
> DLLENTRY=_DllMainCRTStartup
> 
> 
.  
.  
()---()---()---()---()---()---()---()---()---(.\dnaddress\addbase.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
260d259
< /* BUGBUG: [mgere] [xbox] Removed this function.
291d289
< */  return DPNERR_UNSUPPORTED;
302,303c300,359
< // BUGBUG: [mgere] [xbox] ANSI not supported
< 	return DPNERR_UNSUPPORTED;
---
> 	if( pInterface == NULL ||
> 	   !DP8A_VALID( pInterface ) )
> 	{
> 		DPF( DP8A_ENTERLEVEL, "Invalid object" );
> 		DP8A_RETURN( DPNERR_INVALIDOBJECT );
> 	}
> 	
> 	DP8ADDRESSOBJECT *pdp8Address = (DP8ADDRESSOBJECT *) GET_OBJECT_FROM_INTERFACE( pInterface );
> 
> 	HRESULT hr;
> 
> 	DPF( DP8A_ENTERLEVEL, "Enter" );	
> 
> 	if( pszAddress == NULL )
> 	{
> 		DPF( DP8A_ERRORLEVEL, "Invalid pointer to address.  An address must be specified" );
> 		DP8A_RETURN( DPNERR_INVALIDPOINTER );
> 	}
> 
> 	if( !DNVALID_STRING_A( pszAddress ) )
> 	{
> 		DPF( DP8A_ERRORLEVEL, "Invalid string specified for address" );
> 		DP8A_RETURN( DPNERR_INVALIDSTRING );
> 	}
> 
> 	DPF( DP8A_PARAMLEVEL, "pszAddress = %s", pszAddress );
> 
> 	WCHAR *szShadowBuffer = NULL;
> 
> 	DWORD dwStrSize = 0;
> 
> 	if( pszAddress != NULL )
> 	{
> 		dwStrSize = strlen(pszAddress)+1;
> 		
> 		szShadowBuffer = new WCHAR[dwStrSize];
> 
> 		if( szShadowBuffer == NULL )
> 		{
> 			DPF( DP8A_ERRORLEVEL, "Error allocating memory" );
> 			hr = DPNERR_OUTOFMEMORY;
> 			goto BUILDFROMURLW_RETURN;
> 		}
> 
> 		if( FAILED( hr = STR_jkAnsiToWide( szShadowBuffer, pszAddress, dwStrSize ) )  )
> 		{
> 			DPF( DP8A_ERRORLEVEL, "Error converting URL to ANSI hr=0x%x", hr );
> 			hr = DPNERR_CONVERSION;
> 			goto BUILDFROMURLW_RETURN;
> 		}
> 	}
> 
> 	hr = pdp8Address->SetURL( szShadowBuffer );
> 
> BUILDFROMURLW_RETURN:
> 
> 	if( szShadowBuffer )
> 		delete [] szShadowBuffer;
> 
> 	DP8A_RETURN( hr );	
448,449c504,571
< // BUGBUG: [mgere] [xbox] ANSI not supported.
< 	return DPNERR_UNSUPPORTED;
---
> 	if( pInterface == NULL ||
> 	   !DP8A_VALID( pInterface ) )
> 	{
> 		DPF( DP8A_ENTERLEVEL, "Invalid object" );
> 		DP8A_RETURN( DPNERR_INVALIDOBJECT );
> 	}
> 	
> 	DP8ADDRESSOBJECT *pdp8Address = (DP8ADDRESSOBJECT *) GET_OBJECT_FROM_INTERFACE( pInterface );
> 
> 	HRESULT hr;
> 
> 	DPF( DP8A_ENTERLEVEL, "Enter" );	
> 
> 	if( pdwAddressSize == NULL ||
> 	   !DNVALID_WRITEPTR( pdwAddressSize, sizeof(DWORD) ) )
> 	{
> 		DPF( DP8A_ERRORLEVEL, "Invalid pointer specified for address size" );
> 		DP8A_RETURN( DPNERR_INVALIDPOINTER );		
> 	}
> 
> 	if( *pdwAddressSize > 0 &&
> 	   (pszAddress == NULL ||
> 	    !DNVALID_WRITEPTR( pszAddress, (*pdwAddressSize) ) ) )
> 	{
> 		DPF( DP8A_ERRORLEVEL, "Invalid pointer specified for address" );
> 		DP8A_RETURN( DPNERR_INVALIDPOINTER );
> 	}
> 
> 	// 7/28/2000(a-JiTay): IA64: Use %p format specifier for 32/64-bit pointers, addresses, and handles.
> 	DPF( DP8A_PARAMLEVEL, "pwszAddress = 0x%p pdwAddressSize = 0x%p (%u)",
> 	     pszAddress , pdwAddressSize, *pdwAddressSize );
> 
> 	WCHAR *szShadowBuffer = NULL;
> 
> 	if( *pdwAddressSize  != 0 )
> 	{
> 		szShadowBuffer = new WCHAR[*pdwAddressSize];
> 
> 		if( szShadowBuffer == NULL )
> 		{
> 			DPF( DP8A_ERRORLEVEL, "Error allocating memory" );
> 			hr = DPNERR_OUTOFMEMORY;
> 			goto GETURLW_RETURN;
> 		}
> 	}
> 	else
> 	{	
> 		szShadowBuffer= NULL;
> 	}
> 
> 	hr = pdp8Address->BuildURL( szShadowBuffer, pdwAddressSize );
> 
> 	if( hr == DPN_OK )
> 	{
> 		if( FAILED( hr = STR_jkWideToAnsi( pszAddress, szShadowBuffer, *pdwAddressSize ) ) )
> 		{
> 			DPF( DP8A_ERRORLEVEL, "Error converting ANSI->WIDE hr=0x%x", hr );
> 			hr = DPNERR_CONVERSION;
> 			goto GETURLW_RETURN;
> 		}
> 	}
> 	
> GETURLW_RETURN:
> 
> 	if( szShadowBuffer != NULL )
> 		delete [] szShadowBuffer;
> 
> 	DP8A_RETURN( hr );
873c995,996
< 	   dwDataType != DPNA_DATATYPE_BINARY )
---
> 	   dwDataType != DPNA_DATATYPE_BINARY &&
> 	   dwDataType != DPNA_DATATYPE_STRING_ANSI )
887a1011,1024
> 		{
> 			DPF( DP8A_ERRORLEVEL, "String size and component size don't match" );
> 			DP8A_RETURN( DPNERR_INVALIDPARAM );
> 		}
> 	}
> 	else if( dwDataType == DPNA_DATATYPE_STRING_ANSI )
> 	{
> 		if( !DNVALID_STRING_A( (const CHAR * const) pComponentData ) )
> 		{
> 			DPF( DP8A_ERRORLEVEL, "Invalid string component specified" );
> 			DP8A_RETURN( DPNERR_INVALIDSTRING );
> 		}
> 
> 		if( ((strlen( (const CHAR * const) pComponentData)+1)*sizeof(char)) != dwComponentSize )
.  
.  
()---()---()---()---()---()---()---()---()---(.\dnaddress\addcore.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
49a50
> #include <stdio.h>
50a52
> #include "dplegacy.h"
52d53
< #include <wchar.h>
400a402,420
> 	case DPNA_DATATYPE_STRING_ANSI:
>         wszUnicodeString = new WCHAR[dwRealDataSize];
>         if( wszUnicodeString == NULL )
>         {
>             DPF( 0, "Error allocating memory for conversion" );
>             return DPNERR_OUTOFMEMORY;
>         }
> 
> 		hr = STR_jkAnsiToWide( wszUnicodeString, (const char * const) pvData, dwRealDataSize );
> 
> 		if( FAILED( hr ) )
> 		{
> 		    DPF( 0, "Error unable to convert element ANSI->Unicode 0x%x", hr );
>             return DPNERR_CONVERSION;
> 		}
> 		pvRealData = wszUnicodeString;
> 	    dwRealDataSize = dwDataSize*sizeof(WCHAR);
> 		dwRealDataType = DPNA_DATATYPE_STRING;
> 	    break;
424a445,456
>                 else if( _wcsicmp( (const WCHAR * const) pvRealData, DPNA_VALUE_IPXPROVIDER ) == 0 )
>                 {
>                     hr= SetSP( &CLSID_DP8SP_IPX );
>                 }
>                 else if( _wcsicmp( (const WCHAR * const) pvRealData, DPNA_VALUE_MODEMPROVIDER ) == 0 )
>                 {
>                     hr = SetSP( &CLSID_DP8SP_MODEM );
>                 }
>                 else if( _wcsicmp( (const WCHAR * const) pvRealData, DPNA_VALUE_SERIALPROVIDER ) == 0 )
>                 {
>                     hr = SetSP( &CLSID_DP8SP_SERIAL );
>                 }
1378a1411,1479
> #undef DPF_MODNAME
> #define DPF_MODNAME "DP8ADDRESSOBJECT::SetDirectPlay4Address"
> HRESULT DP8ADDRESSOBJECT::SetDirectPlay4Address( void * pvDataBuffer, const DWORD dwDataSize )
> {
>     PBYTE pbCurrentLocation;
>     PDPADDRESS pdpAddressChunk;
>     LONG lRemaining;
>     HRESULT hr = DPN_OK;
>     DWORD dwCurrentChunkSize;
>     DWORD dwNumElementsParsed = 0;
> 
> 	if( IsLocked() )
> 	{
> 		DPF( DP8A_ERRORLEVEL, "Cannot set element, object read-only" );
> 		return DPNERR_NOTALLOWED;
> 	}
> 
>     // XBOX! This function will not be required on XBOX.  Have it return DPNERR_NOTSUPPORTED
>     ENTERLOCK();
> 
>     hr = Clear();
> 
>     if( FAILED( hr ) )
>     {
>         DPF( 0, "Failed to clear old address data hr=[0x%lx]", hr );
>         LEAVELOCK();
>         return hr;
>     }
> 
>     pbCurrentLocation = (PBYTE) pvDataBuffer;
>     lRemaining = dwDataSize;
> 
>     while( lRemaining > 0 )
>     {
>         pdpAddressChunk = (PDPADDRESS) pbCurrentLocation;
> 
>         if( sizeof( DPADDRESS ) > lRemaining )
>         {
>             DPF( 0, "Error parsing address, unexpected end of address" );
> 			LEAVELOCK();
>             return DPNERR_INVALIDADDRESSFORMAT;
>         }
> 
>         dwCurrentChunkSize = sizeof( DPADDRESS ) + pdpAddressChunk->dwDataSize;
> 
>         if( ((LONG) dwCurrentChunkSize) > lRemaining )
>         {
>             DPF( 0, "Error parsing address, unexpected end during data" );
> 			LEAVELOCK();
>             return DPNERR_INVALIDADDRESSFORMAT;
>         }
> 
>         hr = AddDP4Element( pdpAddressChunk, this );
> 
>         if( FAILED( hr ) )
>         {
>             DPF( 0, "Error adding next element" );
>             break;
>         }
> 
>         lRemaining -= dwCurrentChunkSize;
> 
>         pbCurrentLocation += dwCurrentChunkSize;
>     }
> 
>     LEAVELOCK();
> 
>     return hr;
> }
.  
.  
()---()---()---()---()---()---()---()---()---(.\dnaddress\addcore.h)---()---()---()---()---()---()---()---()---()---()  
.  
.  
143a144,145
>     HRESULT SetDirectPlay4Address( void * pvDataBuffer, const DWORD dwDataSize );
> 
.  
.  
()---()---()---()---()---()---()---()---()---(.\dnaddress\addparse.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
27c27
< #include <wchar.h>
---
> #include <stdio.h>
569d568
< // BUGBUG: [mgere] [xbox] Removed wtol temporarily until it is implemented on xbox
571d569
< #ifdef _BUILD_FOR_WIN2000
573d570
< #endif
581,582d577
< // BUGBUG: [mgere] [xbox] Removed swscanf temporarily until it is implemented on xbox
< #ifdef _BUILD_FOR_WIN2000
607d601
< #endif
.  
.  
()---()---()---()---()---()---()---()---()---(.\dnaddress\dirs)---()---()---()---()---()---()---()---()---()---()  
.  
.  
1c1
< DIRS = daytona
---
> DIRS = win9x{32} daytona
.  
.  
()---()---()---()---()---()---()---()---()---(.\dnaddress\dllmain.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
29a30
> #include "creg.h"
38a40,87
> 
> #undef DPF_MODNAME
> #define DPF_MODNAME "DllRegisterServer"
> HRESULT WINAPI DllRegisterServer()
> {
> 	HRESULT hr = S_OK;
> 	BOOL fFailed = FALSE;
> 
> 	if( !CRegistry::Register( L"DirectPlay8Address.Address.1", L"DirectPlay8Address Object", 
> 							  L"dpnaddr.dll", CLSID_DirectPlay8Address, L"DirectPlay8Address.Address") )
> 	{
> 		DPFERR( "Could not register address object" );
> 		fFailed = TRUE;
> 	}
> 	
> 	if( fFailed )
> 	{
> 		return E_FAIL;
> 	}
> 	else
> 	{
> 		return S_OK;
> 	}
> }
> 
> #undef DPF_MODNAME
> #define DPF_MODNAME "DllUnregisterServer"
> STDAPI DllUnregisterServer()
> {
> 	HRESULT hr = S_OK;
> 	BOOL fFailed = FALSE;
> 
> 	if( !CRegistry::UnRegister(CLSID_DirectPlay8Address) )
> 	{
> 		DPF( 0, "Failed to unregister server object" );
> 		fFailed = TRUE;
> 	}
> 
> 	if( fFailed )
> 	{
> 		return E_FAIL;
> 	}
> 	else
> 	{
> 		return S_OK;
> 	}
> 
> }
.  
.  
()---()---()---()---()---()---()---()---()---(.\dnaddress\dnadd.def)---()---()---()---()---()---()---()---()---()---()  
.  
.  
5a6,8
> 	DirectPlay8AddressCreate	@1
> 	DllRegisterServer	PRIVATE
> 	DllUnregisterServer PRIVATE
.  
.  
()---()---()---()---()---()---()---()---()---(.\dnaddress\dnadd.rc)---()---()---()---()---()---()---()---()---()---()  
.  
.  
1c1,20
< //LANGUAGE LANG_ENGLISH, SUBLANG_ENGLISH_US
---
> //Microsoft Developer Studio generated resource script.
> //
> 
> #define APSTUDIO_READONLY_SYMBOLS
> /////////////////////////////////////////////////////////////////////////////
> //
> // Generated from the TEXTINCLUDE 2 resource.
> //
> #define APSTUDIO_HIDDEN_SYMBOLS
> #include "windows.h"
> #undef APSTUDIO_HIDDEN_SYMBOLS
> 
> /////////////////////////////////////////////////////////////////////////////
> #undef APSTUDIO_READONLY_SYMBOLS
> 
> /////////////////////////////////////////////////////////////////////////////
> // English (U.S.) resources
> 
> #ifdef _WIN32
> LANGUAGE LANG_ENGLISH, SUBLANG_ENGLISH_US
2a22
> #endif //_WIN32
3a24,31
> #ifndef _MAC
> /////////////////////////////////////////////////////////////////////////////
> //
> // Version
> //
> 
> #ifdef WIN95
> 
4a33,48
> #include "verinfo.h"
> 
> #define VERSIONNAME               "dpnaddr.dll\0"
> #ifdef DEBUG
> #define VERSIONDESCRIPTION        "Microsoft DirectPlay8 Address Debug\0"
> #else
> #define VERSIONDESCRIPTION        "Microsoft DirectPlay8 Address \0"
> #endif
> #define VERSIONTYPE               VFT_DLL
> #define VERSIONSUBTYPE            VFT2_UNKNOWN
> 
> #include "verinfo.ver"
> 
> #else // WinNT
> 
> #include <windows.h>
12a57,61
> 
> #endif
> 
> #endif    // !_MAC
> 
.  
.  
()---()---()---()---()---()---()---()---()---(.\dnaddress\sources.inc)---()---()---()---()---()---()---()---()---()---()  
.  
.  
0a1,15
> #
> # The MAJORCOMP and MINORCOMP variables are defined
> # so that $(MAJORCOMP)$(MINORCOMP)filename can be used in
> # cross compiling to provide unique filenames in a flat namespace.
> #
> 
> MAJORCOMP=windows
> MINORCOMP=media
> 
> #
> # The TARGETNAME variable is defined by the developer.  It is the name of
> # the target (component) that is being built by this makefile.  It
> # should NOT include any path or file extension information.
> #
> 
2,3c17,27
< TARGETPATHLIB=$(BASEDIR)\public\sdk\lib
< TARGETTYPE=DYNLINK
---
> DLLDEF=..\dnadd.def
> UMTYPE=windows
> 
> #
> # The TARGETPATH and TARGETTYPE variables are defined by the developer.
> # The first specifies where the target is to be build.  The second specifies
> # the type of target (either PROGRAM, DYNLINK, LIBRARY, DRIVER, etc
> # UMAPPL_NOLIB is used when you're only building user-mode
> # apps and don't need to build a library.
> #
> 
4a29
> TARGETTYPE=DYNLINK
6,9c31,48
< !ifdef _BUILD_FOR_WIN2000
< UMTYPE=windows
< DLLENTRY=_DllMainCRTStartup
< C_DEFINES=$(C_DEFINES) -D_BUILD_FOR_WIN2000
---
> #
> # The TARGETLIBS specifies additional libraries to link with you target
> # image.  Each library path specification should contain an asterisk (*)
> # where the machine specific subdirectory name should go.
> #
> 
> PASS1_PUBLISH={ $(O)\dpnaddr.lib = $(SDK_LIB_PATH)\dpnaddr.lib}
> 
> #
> # 04/10/2000 - allows for addition of BoundsChecker, etc 
> #  libs specified in the OS environment
> #
> TARGETLIBS=$(TARGETLIBS) \
>            ..\..\common\obj$(BUILD_ALT_DIR)\*\common.lib \
> 	   $(BASEDIR)\public\sdk\lib\*\wsock32.lib \
> !if "$(NTDEBUG)" == "ntsd" || "$(NTDEBUG)" == "cvp" || "$(NTDEBUG)" == "sym"
> 	   $(BASEDIR)\public\sdk\lib\*\libcmtd.lib \
> 	   $(BASEDIR)\public\sdk\lib\*\libcpmtd.lib \
11,13c50,51
< UMTYPE=xboxdll
< DLLENTRY=DllMain
< LINKER_FLAGS=-align:32
---
> 	   $(BASEDIR)\public\sdk\lib\*\libcmt.lib \
> 	   $(BASEDIR)\public\sdk\lib\*\libcpmt.lib \
14a53,59
> 	   $(BASEDIR)\public\sdk\lib\*\kernel32.lib \
> 	   $(BASEDIR)\public\sdk\lib\*\user32.lib \
> 	   $(BASEDIR)\public\sdk\lib\*\gdi32.lib \
> 	   $(BASEDIR)\public\sdk\lib\*\winmm.lib \
> 	   $(BASEDIR)\public\sdk\lib\*\advapi32.lib \
> 	   $(BASEDIR)\public\sdk\lib\*\ole32.lib  \
> 	   $(BASEDIR)\public\sdk\lib\*\uuid.lib
16d60
< INCLUDES=..\;..\..\inc;..\..\common;..\..\..\dvoice\inc
18c62,64
< C_DEFINES=$(C_DEFINES) -D_UNICODE -DUNICODE -DCINTERFACE
---
> !if "$(NTDEBUG)" == "ntsd" || "$(NTDEBUG)" == "cvp" || "$(NTDEBUG)" == "sym"
> C_DEFINES=$(C_DEFINES) /DDEBUG /D_DEBUG
> !endif
20c66,70
< USER_C_FLAGS=$(USER_C_FLAGS) /FAcs /Od
---
> #
> # The INCLUDES variable specifies any include paths that are specific to
> # this source directory.  Separate multiple directory paths with single
> # semicolons.  Relative path specifications are okay.
> #
22,24c72
< !if "$(NTDEBUG)" == "ntsd" || "$(NTDEBUG)" == "ntsdnodbg" || "$(NTDEBUG)" == "cvp" || "$(NTDEBUG)" == "sym"
< USER_C_FLAGS=$(USER_C_FLAGS) /Od
< !endif
---
> INCLUDES=..\;..\..\..\dvoice\inc;$(DXROOT)\inc;..\..\inc;..\..\common
26d73
< MSC_WARNING_LEVEL=/W3 /WX
28c75,80
< DLLDEF=..\dnadd.def
---
> #
> # The SOURCES variable is defined by the developer.  It is a list of all the
> # source files for this component.  Each source file should be on a separate
> # line using the line continuation character.  This will minimize merge
> # conflicts if two developers adding source files to the same component.
> #
38a91
>          ..\dplegacy.cpp \
40a94,100
> #
> # Next specify options for the compiler.
> #
> 
> C_DEFINES= $(C_DEFINES) /D_USRDLL /D_MBCS /DWIN32 /D_MT /DDNET_EXPORT /DCINTERFACE /DMICHAEL
> 
> USER_C_FLAGS=-nologo -W3
43,62c103,105
< TARGETLIBS= \
<            ..\..\common\obj$(BUILD_ALT_DIR)\*\common.lib \
< !ifdef _BUILD_FOR_WIN2000
< 	   $(BASEDIR)\public\sdk\lib\*\libcmt$(BUILD_ALT_DIR).lib \
<            $(BASEDIR)\public\sdk\lib\*\libcmt$(BUILD_ALT_DIR).lib \
< 	   $(BASEDIR)\public\sdk\lib\*\ws2_32.lib  \
< 	   $(BASEDIR)\public\sdk\lib\*\kernel32.lib \
< 	   $(BASEDIR)\public\sdk\lib\*\user32.lib \
< 	   $(BASEDIR)\public\sdk\lib\*\gdi32.lib \
< 	   $(BASEDIR)\public\sdk\lib\*\winmm.lib \
< 	   $(BASEDIR)\public\sdk\lib\*\advapi32.lib \
< 	   $(BASEDIR)\public\sdk\lib\*\ole32.lib  \
< 	   $(BASEDIR)\public\sdk\lib\*\uuid.lib \
< 	   $(BASEDIR)\public\sdk\lib\*\rpcrt4.lib
< !else
< 	   $(BASEDIR)\public\sdk\lib\*\winsockx.lib  \
< 	   $(BASEDIR)\public\sdk\lib\*\uuid.lib \
<            $(BASEDIR)\public\sdk\lib\*\xapi.lib \
<            $(DDK_LIB_PATH)\ntoskrnl.lib
< !endif
---
> DLLENTRY=_DllMainCRTStartup
> 
> 
.  
.  
()---()---()---()---()---()---()---()---()---(.\inc\dpaddr.h)---()---()---()---()---()---()---()---()---()---()  
.  
.  
99a100
> #define DPNA_DATATYPE_STRING_ANSI           0x00000005
131a133,168
> // values for baud rate
> #define DPNA_BAUD_RATE_110					110
> #define DPNA_BAUD_RATE_300					300
> #define DPNA_BAUD_RATE_600					600
> #define DPNA_BAUD_RATE_1200					1200
> #define DPNA_BAUD_RATE_2400					2400
> #define DPNA_BAUD_RATE_4800					4800
> #define DPNA_BAUD_RATE_9600					9600
> #define DPNA_BAUD_RATE_14400				14400
> #define DPNA_BAUD_RATE_19200				19200
> #define DPNA_BAUD_RATE_38400				38400
> #define DPNA_BAUD_RATE_56000				56000
> #define DPNA_BAUD_RATE_57600				57600
> #define DPNA_BAUD_RATE_115200				115200
> #define DPNA_BAUD_RATE_128000				128000
> #define DPNA_BAUD_RATE_256000				256000
> 
> // values for stop bits
> #define DPNA_STOP_BITS_ONE					L"1"
> #define DPNA_STOP_BITS_ONE_FIVE				L"1.5"
> #define DPNA_STOP_BITS_TWO					L"2"
> 
> // values for parity
> #define DPNA_PARITY_NONE					L"NONE"
> #define DPNA_PARITY_EVEN					L"EVEN"
> #define DPNA_PARITY_ODD						L"ODD"
> #define DPNA_PARITY_MARK					L"MARK"
> #define DPNA_PARITY_SPACE					L"SPACE"
> 
> // values for flow control
> #define DPNA_FLOW_CONTROL_NONE				L"NONE"
> #define DPNA_FLOW_CONTROL_XONXOFF			L"XONXOFF"
> #define DPNA_FLOW_CONTROL_RTS				L"RTS"
> #define DPNA_FLOW_CONTROL_DTR				L"DTR"
> #define DPNA_FLOW_CONTROL_RTSDTR			L"RTSDTR"
> 
136a174,227
> #define DPNA_VALUE_IPXPROVIDER              L"IPX"
> #define DPNA_VALUE_MODEMPROVIDER            L"MODEM"
> #define DPNA_VALUE_SERIALPROVIDER           L"SERIAL"
> 
> 
> //// ANSI DEFINITIONS
> 
> // Header
> #define DPNA_HEADER_A						"x-directplay:/"
> #define DPNA_SEPARATOR_KEYVALUE_A			'='
> #define DPNA_SEPARATOR_USERDATA_A			'#'
> #define DPNA_SEPARATOR_COMPONENT_A			';'
> #define DPNA_ESCAPECHAR_A					'%'
> 
> // key names for address components
> #define DPNA_KEY_APPLICATION_INSTANCE_A		"applicationinstance"
> #define DPNA_KEY_BAUD_A						"baud"
> #define DPNA_KEY_DEVICE_A					"device"
> #define DPNA_KEY_FLOWCONTROL_A				"flowcontrol"
> #define DPNA_KEY_HOSTNAME_A					"hostname"
> #define DPNA_KEY_PARITY_A					"parity"
> #define DPNA_KEY_PHONENUMBER_A				"phonenumber"
> #define DPNA_KEY_PORT_A						"port"
> #define DPNA_KEY_PROGRAM_A					"program"
> #define DPNA_KEY_PROVIDER_A					"provider"
> #define DPNA_KEY_STOPBITS_A					"stopbits"
> 
> // values for stop bits
> #define DPNA_STOP_BITS_ONE_A				"1"
> #define DPNA_STOP_BITS_ONE_FIVE_A			"1.5"
> #define DPNA_STOP_BITS_TWO_A				"2"
> 
> // values for parity
> #define DPNA_PARITY_NONE_A					"NONE"
> #define DPNA_PARITY_EVEN_A					"EVEN"
> #define DPNA_PARITY_ODD_A					"ODD"
> #define DPNA_PARITY_MARK_A					"MARK"
> #define DPNA_PARITY_SPACE_A					"SPACE"
> 
> // values for flow control
> #define DPNA_FLOW_CONTROL_NONE_A			"NONE"
> #define DPNA_FLOW_CONTROL_XONXOFF_A 		"XONXOFF"
> #define DPNA_FLOW_CONTROL_RTS_A				"RTS"
> #define DPNA_FLOW_CONTROL_DTR_A				"DTR"
> #define DPNA_FLOW_CONTROL_RTSDTR_A			"RTSDTR"
> 
> // Shortcut values
> //
> // These can be used instead of the corresponding CLSID_DP8SP_XXXX guids
> //
> #define DPNA_VALUE_TCPIPPROVIDER_A          "IP"
> #define DPNA_VALUE_IPXPROVIDER_A            "IPX"
> #define DPNA_VALUE_MODEMPROVIDER_A          "MODEM"
> #define DPNA_VALUE_SERIALPROVIDER_A         "SERIAL"
.  
.  
()---()---()---()---()---()---()---()---()---(.\inc\dplay8.h)---()---()---()---()---()---()---()---()---()---()  
.  
.  
180a181,189
> // {53934290-628D-11D2-AE0F-006097B01411}
> DEFINE_GUID(CLSID_DP8SP_IPX, 0x53934290, 0x628d, 0x11d2, 0xae, 0xf, 0x0, 0x60, 0x97, 0xb0, 0x14, 0x11);
> 
> // {6D4A3650-628D-11D2-AE0F-006097B01411}
> DEFINE_GUID(CLSID_DP8SP_MODEM, 0x6d4a3650, 0x628d, 0x11d2, 0xae, 0xf, 0x0, 0x60, 0x97, 0xb0, 0x14, 0x11);
> 
> // {743B5D60-628D-11D2-AE0F-006097B01411}
> DEFINE_GUID(CLSID_DP8SP_SERIAL, 0x743b5d60, 0x628d, 0x11d2, 0xae, 0xf, 0x0, 0x60, 0x97, 0xb0, 0x14, 0x11);
> 
206a216
> typedef struct IDirectPlay8LobbiedApplication	*PDNLOBBIEDAPPLICATION;
316a327
> #define	DPNCONNECT_OKTOQUERYFORADDRESSING	0x0001
337a349
> #define	DPNENUMHOSTS_OKTOQUERYFORADDRESSING	0x0001
360a373
> #define	DPNHOST_OKTOQUERYFORADDRESSING		0x0001
407a421
> #define DPNSESSION_NODPNSVR					0x0040
913c927
< 	STDMETHOD(RegisterLobby)			(THIS_ const DPNHANDLE dpnHandle, PVOID const pIDP8LobbiedApplication,const DWORD dwFlags) PURE;
---
> 	STDMETHOD(RegisterLobby)			(THIS_ const DPNHANDLE dpnHandle, IDirectPlay8LobbiedApplication *const pIDP8LobbiedApplication,const DWORD dwFlags) PURE;
958c972
< 	STDMETHOD(RegisterLobby)			(THIS_ const DPNHANDLE dpnHandle, PVOID const pIDP8LobbiedApplication,const DWORD dwFlags) PURE;
---
> 	STDMETHOD(RegisterLobby)			(THIS_ const DPNHANDLE dpnHandle, IDirectPlay8LobbiedApplication *const pIDP8LobbiedApplication,const DWORD dwFlags) PURE;
1008c1022
< 	STDMETHOD(RegisterLobby)			(THIS_ const DPNHANDLE dpnHandle, PVOID const pIDP8LobbiedApplication,const DWORD dwFlags) PURE;
---
> 	STDMETHOD(RegisterLobby)			(THIS_ const DPNHANDLE dpnHandle, IDirectPlay8LobbiedApplication *const pIDP8LobbiedApplication,const DWORD dwFlags) PURE;
.  
.  
()---()---()---()---()---()---()---()---()---(.\inc\dpsp8.h)---()---()---()---()---()---()---()---()---()---()  
.  
.  
56a57
> #define DPNSPF_OKTOQUERY			0x00000002		// OK for SP to ask the user for clarification on addresses
.  
.  
()---()---()---()---()---()---()---()---()---(.\protocol\connect.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
104c104
< 	DNASSERT( ulFlags == 0 );
---
> 	DNASSERT( ( ulFlags & ~( DPNCONNECT_OKTOQUERYFORADDRESSING ) ) == 0 );
105a106,110
> 	if ( ( ulFlags & DPNCONNECT_OKTOQUERYFORADDRESSING ) != 0 )
> 	{
> 		ConnData.dwFlags |= DPNSPF_OKTOQUERY;
> 	}
> 
.  
.  
()---()---()---()---()---()---()---()---()---(.\protocol\enum.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
120a121,125
> 	if ( ( dwFlags & DPNENUMHOSTS_OKTOQUERYFORADDRESSING ) != 0 )
> 	{
> 		EnumData.dwFlags |= DPNSPF_OKTOQUERY;
> 	}
> 
.  
.  
()---()---()---()---()---()---()---()---()---(.\protocol\initialize.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
438c438
< 		if((pSPD->hSendEvent = CreateEvent(NULL, FALSE, FALSE, NULL)) == NULL){
---
> 		if((pSPD->hSendEvent = CreateEventA(NULL, FALSE, FALSE, NULL)) == NULL){
.  
.  
()---()---()---()---()---()---()---()---()---(.\protocol\sources)---()---()---()---()---()---()---()---()---()---()  
.  
.  
0a1,15
> #
> # The MAJORCOMP and MINORCOMP variables are defined
> # so that $(MAJORCOMP)$(MINORCOMP)filename can be used in
> # cross compiling to provide unique filenames in a flat namespace.
> #
> 
> MAJORCOMP=windows
> MINORCOMP=media
> 
> #
> # The TARGETNAME variable is defined by the developer.  It is the name of
> # the target (component) that is being built by this makefile.  It
> # should NOT include any path or file extension information.
> #
> 
2c17,26
< TARGETTYPE=LIBRARY
---
> 
> 
> #
> # The TARGETPATH and TARGETTYPE variables are defined by the developer.
> # The first specifies where the target is to be build.  The second specifies
> # the type of target (either PROGRAM, DYNLINK, LIBRARY, DRIVER, etc
> # UMAPPL_NOLIB is used when you're only building user-mode
> # apps and don't need to build a library.
> #
> 
3a28
> TARGETTYPE=LIBRARY
5,9d29
< !ifdef _BUILD_FOR_WIN2000
< C_DEFINES=$(C_DEFINES) -D_BUILD_FOR_WIN2000
< !else
< LINKER_FLAGS=-align:32
< !endif
11c31,35
< INCLUDES=..\common;..\inc;..\dnaddress
---
> #
> # The TARGETLIBS specifies additional libraries to link with you target
> # image.  Each library path specification should contain an asterisk (*)
> # where the machine specific subdirectory name should go.
> #
13c37,41
< C_DEFINES=$(C_DEFINES) -D_UNICODE -DUNICODE -DCINTERFACE -DMICHAEL
---
> #
> # 04/10/2000 - allows for addition of BoundsChecker, etc 
> #  libs specified in the OS environment
> #
> TARGETLIBS=$(TARGETLIBS)
15d42
< USER_C_FLAGS=$(USER_C_FLAGS) /FAcs /Od
17,18c44,55
< !if "$(NTDEBUG)" == "ntsd" || "$(NTDEBUG)" == "ntsdnodbg" || "$(NTDEBUG)" == "cvp" || "$(NTDEBUG)" == "sym"
< USER_C_FLAGS=$(USER_C_FLAGS) /Od
---
> 
> #
> # The INCLUDES variable specifies any include paths that are specific to
> # this source directory.  Separate multiple directory paths with single
> # semicolons.  Relative path specifications are okay.
> #
> 
> INCLUDES=$(DXROOT)\inc;..\common;..\inc;..\dnaddress
> 
> 
> !if "$(NTDEBUG)" == "ntsd" || "$(NTDEBUG)" == "cvp" || "$(NTDEBUG)" == "sym"
> C_DEFINES=$(C_DEFINES) /DDEBUG /D_DEBUG
21c58,63
< MSC_WARNING_LEVEL=/W3 /WX
---
> #
> # The SOURCES variable is defined by the developer.  It is a list of all the
> # source files for this component.  Each source file should be on a separate
> # line using the line continuation character.  This will minimize merge
> # conflicts if two developers adding source files to the same component.
> #
34c76,78
< USE_NOLIBS=1
---
> #
> # Next specify options for the compiler.
> #
36c80,86
< TARGETLIBS=
---
> C_DEFINES= $(C_DEFINES) /D_LIB /D_MBCS /DWIN32 /D_MT /DCINTERFACE /DMICHAEL
> MSC_OPTIMIZATION=/Odi /Zi
> NTDEBUGTYPE=both
> 
> USER_C_FLAGS=-nologo -W3
> 
> 
.  
.  
()---()---()---()---()---()---()---()---()---(.\protocol\timer.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
130a131
> SYSTEM_INFO SystemInfo;
619c620,621
< 	MAX_TIMER_THREADS = MAX_TIMER_THREADS_PER_PROCESSOR;
---
> 	GetSystemInfo(&SystemInfo);
> 	MAX_TIMER_THREADS = SystemInfo.dwNumberOfProcessors * MAX_TIMER_THREADS_PER_PROCESSOR;
629c631
< 	hWorkToDoSem=CreateSemaphore(NULL,0,65535,NULL);
---
> 	hWorkToDoSem=CreateSemaphoreA(NULL,0,65535,NULL);
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\dirs)---()---()---()---()---()---()---()---()---()---()  
.  
.  
1c1,2
< DIRS= wsock
---
> DIRS= serial \
>       wsock
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\classfac.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
198,199c198,228
< // BUGBUG: [mgere] [xbox]  Removed all code in here.  I don't believe it's necessary anymore and it was using some COM functions that we don't have.
< 	return S_OK;
---
>     HRESULT		hr;
>     HINSTANCE	hdll;
>     LPGPCLASSFACTORY	pcf;
> 
> 
>     pcf = (LPGPCLASSFACTORY) This;
> 
>     /*
>      * call CoLockObjectExternal
>      */
>     hr = E_UNEXPECTED;
>     hdll = LoadLibraryA( "OLE32.DLL" );
>     if( hdll != NULL )
>     {
>         PCOLOCKOBJECTEXTERNAL	lpCoLockObjectExternal;
> 
> 
> 		lpCoLockObjectExternal = reinterpret_cast<PCOLOCKOBJECTEXTERNAL>( GetProcAddress( hdll, "CoLockObjectExternal" ) );
>         if( lpCoLockObjectExternal != NULL )
>         {
>             hr = lpCoLockObjectExternal( (LPUNKNOWN) This, fLock, TRUE );
>         }
>         else
>         {
>         }
>     }
>     else
>     {
>     }
> 
> 	return hr;
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\cmddata.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
17a18
> #include	<WSIPX.h>
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\debugutils.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
18a19
> #include	<WSIPX.h>
127a129,148
> 		case AF_IPX:
> 		{
> 			const SOCKADDR_IPX *const pIPXAddress = reinterpret_cast<const SOCKADDR_IPX*>( pSocketAddress );
> 
> 			DPF ( dwDebugLevel, "IPX socket:\tNet (hex) %x-%x-%x-%x\tNode (hex): %x-%x-%x-%x-%x-%x\tSocket: %d",
> 					(BYTE)pIPXAddress->sa_netnum[ 0 ],
> 					(BYTE)pIPXAddress->sa_netnum[ 1 ],
> 					(BYTE)pIPXAddress->sa_netnum[ 2 ],
> 					(BYTE)pIPXAddress->sa_netnum[ 3 ],
> 					(BYTE)pIPXAddress->sa_nodenum[ 0 ],
> 					(BYTE)pIPXAddress->sa_nodenum[ 1 ],
> 					(BYTE)pIPXAddress->sa_nodenum[ 2 ],
> 					(BYTE)pIPXAddress->sa_nodenum[ 3 ],
> 					(BYTE)pIPXAddress->sa_nodenum[ 4 ],
> 					(BYTE)pIPXAddress->sa_nodenum[ 5 ],
> 					p_ntohs( pIPXAddress->sa_socket )
> 					);
> 			break;
> 		}
> 
154,155d174
< // BUGBUG: [mgere] [xbox] Must convert this to unicode
< /*
203d221
< */
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\dirs)---()---()---()---()---()---()---()---()---()---()  
.  
.  
1c1
< DIRS = daytona
---
> DIRS = win9x{32} daytona
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\dnwsock.rc)---()---()---()---()---()---()---()---()---()---()  
.  
.  
1c1,20
< //LANGUAGE LANG_ENGLISH, SUBLANG_ENGLISH_US
---
> //Microsoft Developer Studio generated resource script.
> //
> #include "resource.h"
> 
> #define APSTUDIO_READONLY_SYMBOLS
> /////////////////////////////////////////////////////////////////////////////
> //
> // Generated from the TEXTINCLUDE 2 resource.
> //
> #include "windows.h"
> 
> /////////////////////////////////////////////////////////////////////////////
> #undef APSTUDIO_READONLY_SYMBOLS
> 
> /////////////////////////////////////////////////////////////////////////////
> // English (U.S.) resources
> 
> #if !defined(AFX_RESOURCE_DLL) || defined(AFX_TARG_ENU)
> #ifdef _WIN32
> LANGUAGE LANG_ENGLISH, SUBLANG_ENGLISH_US
2a22
> #endif //_WIN32
3a24,31
> #ifndef _MAC
> /////////////////////////////////////////////////////////////////////////////
> //
> // Version
> //
> 
> #ifdef WIN95
> 
4a33,48
> #include "verinfo.h"
> 
> #define VERSIONNAME               "dpnwsock.dll\0"
> #ifdef DEBUG
> #define VERSIONDESCRIPTION        "Microsoft DirectPlay8 Winsock Provider Debug\0"
> #else
> #define VERSIONDESCRIPTION        "Microsoft DirectPlay8 Winsock Provider\0"
> #endif
> #define VERSIONTYPE               VFT_DLL
> #define VERSIONSUBTYPE            VFT2_UNKNOWN
> 
> #include "verinfo.ver"
> 
> #else // WinNT
> 
> #include <windows.h>
12a57,153
> 
> #endif
> 
> #endif    // !_MAC
> 
> 
> 
> #ifdef APSTUDIO_INVOKED
> /////////////////////////////////////////////////////////////////////////////
> //
> // TEXTINCLUDE
> //
> 
> 1 TEXTINCLUDE DISCARDABLE
> BEGIN
>     "resource.h\0"
> END
> 
> 2 TEXTINCLUDE DISCARDABLE
> BEGIN
>     "#include ""afxres.h""\r\n"
>     "\0"
> END
> 
> 3 TEXTINCLUDE DISCARDABLE
> BEGIN
>     "\r\n"
>     "\0"
> END
> 
> #endif    // APSTUDIO_INVOKED
> 
> 
> /////////////////////////////////////////////////////////////////////////////
> //
> // Dialog
> //
> 
> IDD_IP_SETTINGS DIALOG DISCARDABLE  0, 0, 194, 66
> STYLE DS_MODALFRAME | DS_SETFOREGROUND | DS_CENTER | WS_POPUP | WS_VISIBLE | WS_CAPTION |
>     WS_SYSMENU
> CAPTION "Enter host name"
> FONT 8, "MS Shell Dlg"
> BEGIN
>     LTEXT           "Enter the remote machine address:",
>                     IDC_STATIC_IP_HOSTNAME,7,7,110,8
>     EDITTEXT        IDC_EDIT_IP_HOSTNAME,7,45,180,14,ES_AUTOHSCROLL
>     DEFPUSHBUTTON   "OK",IDOK,137,7,50,14
>     PUSHBUTTON      "Cancel",IDCANCEL,137,24,50,14
> END
> 
> 
> /////////////////////////////////////////////////////////////////////////////
> //
> // DESIGNINFO
> //
> 
> #ifdef APSTUDIO_INVOKED
> GUIDELINES DESIGNINFO DISCARDABLE
> BEGIN
>     IDD_IP_SETTINGS, DIALOG
>     BEGIN
>         LEFTMARGIN, 7
>         RIGHTMARGIN, 187
>         TOPMARGIN, 7
>         BOTTOMMARGIN, 59
>     END
> END
> #endif    // APSTUDIO_INVOKED
> 
> 
> /////////////////////////////////////////////////////////////////////////////
> //
> // String Table
> //
> 
> STRINGTABLE DISCARDABLE
> BEGIN
>     IDS_FRIENDLYNAME_IPX    "DirectPlay8 IPX Service Provider"
>     IDS_FRIENDLYNAME_TCPIP  "DirectPlay8 TCP/IP Service Provider"
> END
> 
> #endif    // English (U.S.) resources
> /////////////////////////////////////////////////////////////////////////////
> 
> 
> 
> #ifndef APSTUDIO_INVOKED
> /////////////////////////////////////////////////////////////////////////////
> //
> // Generated from the TEXTINCLUDE 3 resource.
> //
> 
> 
> /////////////////////////////////////////////////////////////////////////////
> #endif    // not APSTUDIO_INVOKED
> 
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\dwnsock1.inc)---()---()---()---()---()---()---()---()---()---()  
.  
.  
1,42c1,78
< #define p_accept accept
< #define p_bind bind
< #define p_closesocket closesocket
< #define p_connect connect
< #define p_gethostbyaddr gethostbyaddr
< #define p_gethostbyname gethostbyname
< #define p_gethostname gethostname
< #define p_getpeername getpeername
< #define p_getprotobyname getprotobyname
< #define p_getprotobynumber getprotobynumber
< #define p_getservbyname getservbyname
< #define p_getservbyport getservbyport
< #define p_getsockname getsockname
< #define p_getsockopt getsockopt
< #define p_htonl htonl
< #define p_htons htons
< #define p_inet_addr inet_addr
< #define p_inet_ntoa inet_ntoa
< #define p_ioctlsocket ioctlsocket
< #define p_listen listen
< #define p_ntohl ntohl
< #define p_ntohs ntohs
< #define p_recv recv
< #define p_recvfrom recvfrom
< #define p_select select
< #define p_send send
< #define p_sendto sendto
< #define p_setsockopt setsockopt
< #define p_shutdown shutdown
< #define p_socket socket
< //#define p_WSAAsyncGetHostByAddr WSAAsyncGetHostByAddr
< //#define p_WSAAsyncGetHostByName WSAAsyncGetHostByName
< //#define p_WSAAsyncGetProtoByName WSAAsyncGetProtoByName
< //#define p_WSAAsyncGetProtoByNumber WSAAsyncGetProtoByNumber
< //#define p_WSAAsyncGetServByName WSAAsyncGetServByName
< //#define p_WSAAsyncGetServByPort WSAAsyncGetServByPort
< //#define p_WSAAsyncSelect WSAAsyncSelect
< //#define p_WSACancelAsyncRequest WSACancelAsyncRequest
< #define p_WSACleanup WSACleanup
< #define p_WSAGetLastError WSAGetLastError
< #define p_WSASetLastError WSASetLastError
< #define p_WSAStartup WSAStartup
---
> //
> // DWNSOCK1.INC	Macros for dynamically linking to WinSock 1.1
> //
> 
> #ifdef DWINSOCK_GLOBAL
> 	#undef DYNAMICWINSOCK
> 	#define DYNAMICWINSOCK(name, ptr) ptr p_##name
> #endif
> 
> #ifdef DWINSOCK_EXTERN
> 	#undef DYNAMICWINSOCK
> 	#define DYNAMICWINSOCK(name, ptr) extern ptr p_##name
> #endif
> 
> #ifdef DWINSOCK_GETPROCADDRESS
> 	#undef DYNAMICWINSOCK
> 	#define DYNAMICWINSOCK(name, ptr)							\
> 				p_##name = (ptr)GetProcAddress(hndlWinSock, #name);	\
> 				if (p_##name == NULL) fOK = FALSE
> #endif
> 
> #ifndef ___WSAFDISSET___
> typedef
> int
> (WSAAPI * LPFN_WSAFDISSET)(
>     IN SOCKET s,
>     OUT fd_set FAR *fds
>     );
> #define ___WSAFDISSET___
> #endif
> 
> 	//
> 	// Function available in both versions
> 	//
> 	DYNAMICWINSOCK(accept, LPFN_ACCEPT);
> 	DYNAMICWINSOCK(bind, LPFN_BIND);
> 	DYNAMICWINSOCK(closesocket, LPFN_CLOSESOCKET);
> 	DYNAMICWINSOCK(connect, LPFN_CONNECT);
> 	DYNAMICWINSOCK(gethostbyaddr, LPFN_GETHOSTBYADDR);
> 	DYNAMICWINSOCK(gethostbyname, LPFN_GETHOSTBYNAME);
> 	DYNAMICWINSOCK(gethostname, LPFN_GETHOSTNAME);
> 	DYNAMICWINSOCK(getpeername, LPFN_GETPEERNAME);
> 	DYNAMICWINSOCK(getprotobyname, LPFN_GETPROTOBYNAME);
> 	DYNAMICWINSOCK(getprotobynumber, LPFN_GETPROTOBYNUMBER);
> 	DYNAMICWINSOCK(getservbyname, LPFN_GETSERVBYNAME);
> 	DYNAMICWINSOCK(getservbyport, LPFN_GETSERVBYPORT);
> 	DYNAMICWINSOCK(getsockname, LPFN_GETSOCKNAME);
> 	DYNAMICWINSOCK(getsockopt, LPFN_GETSOCKOPT);
> 	DYNAMICWINSOCK(htonl, LPFN_HTONL);
> 	DYNAMICWINSOCK(htons, LPFN_HTONS);
> 	DYNAMICWINSOCK(inet_addr, LPFN_INET_ADDR);
> 	DYNAMICWINSOCK(inet_ntoa, LPFN_INET_NTOA);
> 	DYNAMICWINSOCK(ioctlsocket, LPFN_IOCTLSOCKET);
> 	DYNAMICWINSOCK(listen, LPFN_LISTEN);
> 	DYNAMICWINSOCK(ntohl, LPFN_NTOHL);
> 	DYNAMICWINSOCK(ntohs, LPFN_NTOHS);
> 	DYNAMICWINSOCK(recv, LPFN_RECV);
> 	DYNAMICWINSOCK(recvfrom, LPFN_RECVFROM);
> 	DYNAMICWINSOCK(select, LPFN_SELECT);
> 	DYNAMICWINSOCK(send, LPFN_SEND);
> 	DYNAMICWINSOCK(sendto, LPFN_SENDTO);
> 	DYNAMICWINSOCK(setsockopt, LPFN_SETSOCKOPT);
> 	DYNAMICWINSOCK(shutdown, LPFN_SHUTDOWN);
> 	DYNAMICWINSOCK(socket, LPFN_SOCKET);
> 	DYNAMICWINSOCK(WSAAsyncGetHostByAddr, LPFN_WSAASYNCGETHOSTBYADDR);
> 	DYNAMICWINSOCK(WSAAsyncGetHostByName, LPFN_WSAASYNCGETHOSTBYNAME);
> 	DYNAMICWINSOCK(WSAAsyncGetProtoByName, LPFN_WSAASYNCGETPROTOBYNAME);
> 	DYNAMICWINSOCK(WSAAsyncGetProtoByNumber, LPFN_WSAASYNCGETPROTOBYNUMBER);
> 	DYNAMICWINSOCK(WSAAsyncGetServByName, LPFN_WSAASYNCGETSERVBYNAME);
> 	DYNAMICWINSOCK(WSAAsyncGetServByPort, LPFN_WSAASYNCGETSERVBYPORT);
> 	DYNAMICWINSOCK(WSAAsyncSelect, LPFN_WSAASYNCSELECT);
> 	DYNAMICWINSOCK(WSACancelAsyncRequest, LPFN_WSACANCELASYNCREQUEST);
> 	DYNAMICWINSOCK(WSACleanup, LPFN_WSACLEANUP);
> 	DYNAMICWINSOCK(WSAGetLastError, LPFN_WSAGETLASTERROR);
> 	DYNAMICWINSOCK(WSASetLastError, LPFN_WSASETLASTERROR);
> 	DYNAMICWINSOCK(WSAStartup, LPFN_WSASTARTUP);
> 	DYNAMICWINSOCK(__WSAFDIsSet, LPFN_WSAFDISSET);
> 
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\dwnsock2.inc)---()---()---()---()---()---()---()---()---()---()  
.  
.  
1,27c1,3
< #ifdef UNICODE
< //	#define p_WSAAddressToString				WSAAddressToStringW
< //	#define p_WSADuplicateSocket				WSADuplicateSocketW
< //	#define p_WSAEnumNameSpaceProviders			WSAEnumNameSpaceProvidersW
< 	#define p_WSAEnumProtocols					WSAEnumProtocolsW
< //	#define p_WSAGetServiceClassInfo			WSAGetServiceClassInfoW
< //	#define p_WSAGetServiceClassNameByClassId	WSAGetServiceClassNameByClassIdW
< //	#define p_WSAInstallServiceClass			WSAInstallServiceClassW
< //	#define p_WSALookupServiceBegin				WSALookupServiceBeginW
< //	#define p_WSALookupServiceNext				WSALookupServiceNextW
< //	#define p_WSASetService						WSASetServiceW
< //	#define p_WSASocket							WSASocketW
< //	#define p_WSAStringToAddress				WSAStringToAddressW
< #else
< //	#define p_WSAAddressToString				WSAAddressToStringA
< //	#define p_WSADuplicateSocket				WSADuplicateSocketA
< //	#define p_WSAEnumNameSpaceProviders			WSAEnumNameSpaceProvidersA
< 	#define p_WSAEnumProtocols					WSAEnumProtocolsA
< //	#define p_WSAGetServiceClassInfo			WSAGetServiceClassInfoA
< //	#define p_WSAGetServiceClassNameByClassId	WSAGetServiceClassNameByClassIdA
< //	#define p_WSAInstallServiceClass			WSAInstallServiceClassA
< //	#define p_WSALookupServiceBegin				WSALookupServiceBeginA
< //	#define p_WSALookupServiceNext				WSALookupServiceNextA
< //	#define p_WSASetService						WSASetServiceA
< //	#define p_WSASocket							WSASocketA
< //	#define p_WSAStringToAddress				WSAStringToAddressA
< #endif // UNICODE
---
> //
> // DWNSOCK2.INC	Macros for dynamically linking to WinSock 2
> //
29,53c5,71
< //#define p_WSAAccept WSAAccept
< #define p_WSACloseEvent WSACloseEvent
< //#define p_WSAConnect WSAConnect
< #define p_WSACreateEvent WSACreateEvent
< #define p_WSAEnumNetworkEvents WSAEnumNetworkEvents
< #define p_WSAEventSelect WSAEventSelect
< #define p_WSAGetOverlappedResult WSAGetOverlappedResult
< //#define p_WSAGetQOSByName WSAGetQOSByName
< //#define p_WSAHtonl WSAHtonl
< //#define p_WSAHtons WSAHtons
< #define p_WSAIoctl WSAIoctl
< //#define p_WSAJoinLeaf WSAJoinLeaf
< //#define p_WSALookupServiceEnd WSALookupServiceEnd
< //#define p_WSANtohl WSANtohl
< //#define p_WSANtohs WSANtohs
< #define p_WSARecv WSARecv
< //#define p_WSARecvDisconnect WSARecvDisconnect
< #define p_WSARecvFrom WSARecvFrom
< //#define p_WSARemoveServiceClass WSARemoveServiceClass
< #define p_WSAResetEvent WSAResetEvent
< #define p_WSASend WSASend
< //#define p_WSASendDisconnect WSASendDisconnect
< #define p_WSASendTo WSASendTo
< #define p_WSASetEvent WSASetEvent
< #define p_WSAWaitForMultipleEvents WSAWaitForMultipleEvents
---
> #ifdef DWINSOCK_GLOBAL
> 	#undef DYNAMICWINSOCK
> 	#define DYNAMICWINSOCK(name, ptr) ptr p_##name
> #endif
> 
> #ifdef DWINSOCK_EXTERN
> 	#undef DYNAMICWINSOCK
> 	#define DYNAMICWINSOCK(name, ptr) extern ptr p_##name
> #endif
> 
> #ifdef DWINSOCK_GETPROCADDRESS
> 	#undef DYNAMICWINSOCK
> 	#define DYNAMICWINSOCK(name, ptr)							\
> 				p_##name = (ptr)GetProcAddress(hndlWinSock, #name);	\
> 				if (p_##name == NULL) fOK = FALSE
> #endif
> 
> 	DYNAMICWINSOCK(WSAAccept, LPFN_WSAACCEPT);
> 	DYNAMICWINSOCK(WSAAddressToStringA, LPFN_WSAADDRESSTOSTRINGA);
> 	DYNAMICWINSOCK(WSAAddressToStringW, LPFN_WSAADDRESSTOSTRINGW);
> 	DYNAMICWINSOCK(WSACloseEvent, LPFN_WSACLOSEEVENT);
> 	DYNAMICWINSOCK(WSAConnect, LPFN_WSACONNECT);
> 	DYNAMICWINSOCK(WSACreateEvent, LPFN_WSACREATEEVENT);
> 	DYNAMICWINSOCK(WSADuplicateSocketA, LPFN_WSADUPLICATESOCKETA);
> 	DYNAMICWINSOCK(WSADuplicateSocketW, LPFN_WSADUPLICATESOCKETW);
> 	DYNAMICWINSOCK(WSAEnumNameSpaceProvidersA, LPFN_WSAENUMNAMESPACEPROVIDERSA);
> 	DYNAMICWINSOCK(WSAEnumNameSpaceProvidersW, LPFN_WSAENUMNAMESPACEPROVIDERSW);
> 	DYNAMICWINSOCK(WSAEnumNetworkEvents, LPFN_WSAENUMNETWORKEVENTS);
> 	DYNAMICWINSOCK(WSAEnumProtocolsA, LPFN_WSAENUMPROTOCOLSA);
> 	DYNAMICWINSOCK(WSAEnumProtocolsW, LPFN_WSAENUMPROTOCOLSW);
> 	DYNAMICWINSOCK(WSAEventSelect, LPFN_WSAEVENTSELECT);
> 	DYNAMICWINSOCK(WSAGetOverlappedResult, LPFN_WSAGETOVERLAPPEDRESULT);
> 	DYNAMICWINSOCK(WSAGetQOSByName, LPFN_WSAGETQOSBYNAME);
> 	DYNAMICWINSOCK(WSAGetServiceClassInfoA, LPFN_WSAGETSERVICECLASSINFOA);
> 	DYNAMICWINSOCK(WSAGetServiceClassInfoW, LPFN_WSAGETSERVICECLASSINFOW);
> 	DYNAMICWINSOCK(WSAGetServiceClassNameByClassIdA, LPFN_WSAGETSERVICECLASSNAMEBYCLASSIDA);
> 	DYNAMICWINSOCK(WSAGetServiceClassNameByClassIdW, LPFN_WSAGETSERVICECLASSNAMEBYCLASSIDW);
> 	DYNAMICWINSOCK(WSAHtonl, LPFN_WSAHTONL);
> 	DYNAMICWINSOCK(WSAHtons, LPFN_WSAHTONS);
> 	DYNAMICWINSOCK(WSAInstallServiceClassA, LPFN_WSAINSTALLSERVICECLASSA);
> 	DYNAMICWINSOCK(WSAInstallServiceClassW, LPFN_WSAINSTALLSERVICECLASSW);
> 	DYNAMICWINSOCK(WSAIoctl, LPFN_WSAIOCTL);
> 	DYNAMICWINSOCK(WSAJoinLeaf, LPFN_WSAJOINLEAF);
> 	DYNAMICWINSOCK(WSALookupServiceBeginA, LPFN_WSALOOKUPSERVICEBEGINA);
> 	DYNAMICWINSOCK(WSALookupServiceBeginW, LPFN_WSALOOKUPSERVICEBEGINW);
> 	DYNAMICWINSOCK(WSALookupServiceEnd, LPFN_WSALOOKUPSERVICEEND);
> 	DYNAMICWINSOCK(WSALookupServiceNextA, LPFN_WSALOOKUPSERVICENEXTA);
> 	DYNAMICWINSOCK(WSALookupServiceNextW, LPFN_WSALOOKUPSERVICENEXTW);
> 	DYNAMICWINSOCK(WSANtohl, LPFN_WSANTOHL);
> 	DYNAMICWINSOCK(WSANtohs, LPFN_WSANTOHS);
> 	DYNAMICWINSOCK(WSARecv, LPFN_WSARECV);
> 	DYNAMICWINSOCK(WSARecvDisconnect, LPFN_WSARECVDISCONNECT);
> 	DYNAMICWINSOCK(WSARecvFrom, LPFN_WSARECVFROM);
> 	DYNAMICWINSOCK(WSARemoveServiceClass, LPFN_WSAREMOVESERVICECLASS);
> 	DYNAMICWINSOCK(WSAResetEvent, LPFN_WSARESETEVENT);
> 	DYNAMICWINSOCK(WSASend, LPFN_WSASEND);
> 	DYNAMICWINSOCK(WSASendDisconnect, LPFN_WSASENDDISCONNECT);
> 	DYNAMICWINSOCK(WSASendTo, LPFN_WSASENDTO);
> 	DYNAMICWINSOCK(WSASetEvent, LPFN_WSASETEVENT);
> 	DYNAMICWINSOCK(WSASetServiceA, LPFN_WSASETSERVICEA);
> 	DYNAMICWINSOCK(WSASetServiceW, LPFN_WSASETSERVICEW);
> 	DYNAMICWINSOCK(WSASocketA, LPFN_WSASOCKETA);
> 	DYNAMICWINSOCK(WSASocketW, LPFN_WSASOCKETW);
> 	DYNAMICWINSOCK(WSAStringToAddressA, LPFN_WSASTRINGTOADDRESSA);
> 	DYNAMICWINSOCK(WSAStringToAddressW, LPFN_WSASTRINGTOADDRESSW);
> 	DYNAMICWINSOCK(WSAWaitForMultipleEvents, LPFN_WSAWAITFORMULTIPLEEVENTS);
> 
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\endpoint.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
19a20
> #include	<WSIPX.h>
111a113
> 	m_hActiveSettingsDialog( NULL ),
142a145
> 	DNASSERT( GetActiveDialogHandle() == NULL );
387a391,398
> 		//
> 		// cancel any active dialogs
> 		// if there are no dialogs, cancel the active command
> 		//
> 		if ( GetActiveDialogHandle() != NULL )
> 		{
> 			StopSettingsDialog( GetActiveDialogHandle() );
> 		}
390a402,408
> 	else
> 	{
> 		//
> 		// there should be no active dialog if there isn't an active command
> 		//
> 		DNASSERT( GetActiveDialogHandle() == NULL );
> 	}
392d409
< 
872a890,896
> 	if ( GetActiveDialogHandle() != NULL )
> 	{
> 		StopSettingsDialog( GetActiveDialogHandle() );
> 		Unlock();
> 	}
> 	else
> 	{
878a903
> 	}
1765,1766c1790
< 
< // BUGBUG: [mgere] [xbox] Not sure if we ever get into this next block on the Xbox.  Put breakpoint and see.	
---
> 	
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\endpoint.h)---()---()---()---()---()---()---()---()---()---()  
.  
.  
400a401,417
> 		// UI functions
> 		//
> 		virtual	HRESULT	ShowSettingsDialog( CThreadPool *const pThreadPool ) = 0;
> 		virtual	void	StopSettingsDialog( const HWND hDlg ) = 0;
> 		virtual	void	SettingsDialogComplete( const HRESULT hr ) = 0;
> 		HWND	GetActiveDialogHandle( void ) const { return m_hActiveSettingsDialog; }
> 
> 		#undef DPF_MODNAME
> 		#define DPF_MODNAME "CEndpoint::SetActiveDialogHandle"
> 		void	SetActiveDialogHandle( const HWND hDialog )
> 		{
> 			DNASSERT( ( GetActiveDialogHandle() == NULL ) ||
> 					  ( hDialog == NULL ) );
> 			m_hActiveSettingsDialog = hDialog;
> 		}
> 
> 		//
442a460
> 		HWND		m_hActiveSettingsDialog;	// handle of active settings dialog
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\iodata.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
17a18
> #include <WSIPX.h>
41a43
> #include	"IPXAddress.h"
104a107,108
> 	DNASSERT( ( Win9xOperationPending() == FALSE ) ||
> 			  ( OSType() == VER_PLATFORM_WIN32_NT ) );
209a214,219
> 		case TYPE_IPX:
> 		{
> 			pSocketAddress = CreateIPXAddress();
> 			break;
> 		}
> 
257a268,269
> 	DNASSERT( ( Win9xOperationPending() == FALSE ) ||
> 			  ( OSType() == VER_PLATFORM_WIN32_NT ) );
295a308,309
> 	DNASSERT( ( Win9xOperationPending() == FALSE ) ||
> 			  ( OSType() == VER_PLATFORM_WIN32_NT ) );
333a348,353
> 		case TYPE_IPX:
> 		{
> 			ReturnIPXAddress( static_cast<CIPXAddress*>( m_pSourceSocketAddress ) );
> 			break;
> 		}
> 
524a545,546
> 	DNASSERT( ( Win9xOperationPending() == FALSE ) ||
> 			  ( OSType() == VER_PLATFORM_WIN32_NT ) );
549a572,573
> 	DNASSERT( ( Win9xOperationPending() == FALSE ) ||
> 			  ( OSType() == VER_PLATFORM_WIN32_NT ) );
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\iodata.h)---()---()---()---()---()---()---()---()---()---()  
.  
.  
86a87,89
> 		BOOL	Win9xOperationPending( void ) const { return m_Flags.fWin9xOperationPending; }
> 		void	SetWin9xOperationPending( const BOOL fOperationPending ) { m_Flags.fWin9xOperationPending = fOperationPending; }
> 
119a123
> 			BOOL	fWin9xOperationPending : 1;		// this structure has been initialized and the operation is pending on Win9x
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\ipaddress.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
20a21
> #include	<WSIPX.h>
1058,1060d1058
< // BUGBUG: [mgere] [xbox] No need to enum adapters anymore since we only have one.
< // need to complete the removal of this functionality at a later date.
< /*
1412d1409
< */	return DPNERR_UNSUPPORTED;
1601a1599,1604
> 	//
> 	// Since the IP multicast constants are different for Winsock1 vs. Winsock2,
> 	// make sure we use the proper constant.
> 	//
> 	switch ( GetWinsockVersion() )
> 	{
1602a1606,1624
> 		// Winsock 0 doesn't exist!
> 		//
> 		case 0:
> 		{
> 			DNASSERT( FALSE );
> 			break;
> 		}
> 
> 		//
> 		// Winsock1, use the IP_ADD_MEMBERSHIP value for Winsock1
> 		// see WINSOCK.H
> 		//
> 		case 1:
> 		{
> 			SocketOption = 5;
> 			break;
> 		}
> 
> 		//
1605a1628,1630
> 		case 2:
> 		default:
> 		{
1606a1632,1634
> 			break;
> 		}
> 	}
1679a1708,1713
> 	//
> 	// since the IP multicast constants are different for Winsock1 vs. Winsock2,
> 	// make sure we use the proper constant.
> 	//
> 	switch ( GetWinsockVersion() )
> 	{
1680a1715,1733
> 		// Winsock 0 doesn't exist!
> 		//
> 		case 0:
> 		{
> 			DNASSERT( FALSE );
> 			break;
> 		}
> 
> 		//
> 		// Winsock1, use the IP_DROP_MEMBERSHIP value for Winsock1
> 		// see WINSOCK.H
> 		//
> 		case 1:
> 		{
> 			SocketOption = 6;
> 			break;
> 		}
> 
> 		//
1683a1737,1739
> 		case 2:
> 		default:
> 		{
1684a1741,1743
> 			break;
> 		}
> 	}
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\ipendpt.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
18a19
> #include	<WSIPX.h>
35a37
> #include	"StrUtils.h"
49a52
> #include	"IPUI.h"
118a122
> 	DNASSERT( GetActiveDialogHandle() == NULL );
124a129,407
> // CIPEndpoint::ShowSettingsDialog - show dialog for settings
> //
> // Entry:		Pointer to thread pool
> //
> // Exit:		Error code
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME "CIPEndpoint::ShowSettingsDialog"
> 
> HRESULT	CIPEndpoint::ShowSettingsDialog( CThreadPool *const pThreadPool )
> {
> 	HRESULT	hr;
> 
> 
> 	DNASSERT( pThreadPool != NULL );
> 	DNASSERT( GetActiveDialogHandle() == NULL );
> 
> 	//
> 	// initialize
> 	//
> 	hr = DPN_OK;
> 
> 	AddRef();
> 	hr = pThreadPool->SpawnDialogThread( DisplayIPHostNameSettingsDialog, this );
> 	if ( hr != DPN_OK )
> 	{
> 		DPF( 0, "Failed to start IP hostname dialog!" );
> 		DisplayDNError( 0, hr );
> 		goto Failure;
> 	}
> 
> Exit:	
> 	return	hr;
> 
> Failure:	
> 	DecRef();
> 	goto Exit;
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
> // CIPEndpoint::SettingsDialogComplete - dialog has completed
> //
> // Entry:		Error code for dialog
> //
> // Exit:		Nothing
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME "CIPEndpoint::SettingsDialogComplete"
> 
> void	CIPEndpoint::SettingsDialogComplete( const HRESULT hDialogResult )
> {
> 	HRESULT					hr;
> 	HRESULT					hTempResult;
> 	IDirectPlay8Address		*pBaseAddress;
> 	DWORD					dwTotalAddressBufferSize;
> 	char					*pTempAddressString;
> 	WCHAR					WCharHostName[ sizeof( m_TempHostName ) + 1 ];
> 	DWORD					dwWCharHostNameSize;
> 
> 
> 	//
> 	// initialize
> 	//
> 	hr = hDialogResult;
> 	pBaseAddress = NULL;
> 	pTempAddressString = NULL;
> 
> 	//
> 	// since the dialog is exiting, clear our handle to the dialog
> 	//
> 	SetActiveDialogHandle( NULL );
> 
> 	//
> 	// dialog failed, fail the user's command
> 	//
> 	if ( hr != DPN_OK )
> 	{
> 		if ( hr != DPNERR_USERCANCEL)
> 		{
> 			DPF( 0, "Failing endpoint hostname dialog!" );
> 			DisplayErrorCode( 0, hr );
> 
> 		}
> 
> 		goto Failure;
> 	}
> 
> 	//
> 	// The dialog completed OK, rebuild remote address and complete command
> 	//
> 
> 	//
> 	// get the base DNADDRESS
> 	//
> 	pBaseAddress = m_pRemoteMachineAddress->DP8AddressFromSocketAddress();
> 	if ( pBaseAddress == NULL )
> 	{
> 		hr = DPNERR_OUTOFMEMORY;
> 		DPF( 0, "SettingsDialogComplete: Failed to get base address when completing IP hostname dialog!" );
> 		goto Failure;
> 	}
> 
> 	//
> 	// Add the new 'HOSTNAME' parameter to the address.  If the hostname is blank
> 	// and this is an enum, copy the broadcast hostname.  If the hostname is blank
> 	// on a connect, fail!
> 	//
> 	if ( m_TempHostName[ 0 ] == '\0' )
> 	{
> 		if ( GetType() == ENDPOINT_TYPE_ENUM )
> 		{
> 			DNASSERT( sizeof( WCharHostName ) >= g_dwIPBroadcastAddressSize );
> 			memcpy( WCharHostName, g_IPBroadcastAddress, g_dwIPBroadcastAddressSize );
> 			dwWCharHostNameSize = g_dwIPBroadcastAddressSize;
> 		}
> 		else
> 		{
> 			hr = DPNERR_ADDRESSING;
> 			DNASSERT( GetType() == ENDPOINT_TYPE_CONNECT );
> 			DPF( 0, "No hostname in dialog!" );
> 			goto Failure;
> 		}
> 	}
> 	else
> 	{
> 		dwWCharHostNameSize = LENGTHOF( WCharHostName );
> 		hr = STR_AnsiToWide( m_TempHostName, -1, WCharHostName, &dwWCharHostNameSize );
> 		DNASSERT( hr == DPN_OK );
> 		dwWCharHostNameSize *= sizeof( WCHAR );
> 	}
> 
> 	hr = IDirectPlay8Address_AddComponent( pBaseAddress, DPNA_KEY_HOSTNAME, WCharHostName, dwWCharHostNameSize, DPNA_DATATYPE_STRING );
> 	if ( hr != DPN_OK )
> 	{
> 		DPF( 0, "SettingsDialogComplete: Failed to add hostname to address!" );
> 		goto Failure;
> 	}
> 
> 	//
> 	// set the address
> 	//
> 	hr = m_pRemoteMachineAddress->SocketAddressFromDP8Address( pBaseAddress, SP_ADDRESS_TYPE_HOST );
> 	if ( hr != DPN_OK )
> 	{
> 		DPF( 0, "Failed to rebuild DNADDRESS when completing IP hostname dialog!" );
> 		goto Failure;
> 	}
> 
> 	AddRef();
> 
> 	//
> 	// Since any asynchronous I/O posted on a thread is quit when the thread
> 	// exits, it's necessary for the completion of this operation to happen
> 	// on one of the thread pool threads.
> 	//
> 	switch ( GetType() )
> 	{
> 	    case ENDPOINT_TYPE_ENUM:
> 	    {
> 			hr = m_pSPData->GetThreadPool()->SubmitDelayedCommand( EnumQueryJobCallback,
> 																   CancelEnumQueryJobCallback,
> 																   this );
> 			if ( hr != DPN_OK )
> 			{
> 				DecRef();
> 				DPF( 0, "Failed to set enum query!" );
> 				DisplayDNError( 0, hr );
> 				goto Failure;
> 			}
> 
> 	    	break;
> 	    }
> 
> 	    case ENDPOINT_TYPE_CONNECT:
> 	    {
> 			hr = m_pSPData->GetThreadPool()->SubmitDelayedCommand( ConnectJobCallback,
> 																   CancelConnectJobCallback,
> 																   this );
> 			if ( hr != DPN_OK )
> 			{
> 				DecRef();
> 				DPF( 0, "Failed to set enum query!" );
> 				DisplayDNError( 0, hr );
> 				goto Failure;
> 			}
> 
> 	    	break;
> 	    }
> 
> 	    //
> 	    // unknown!
> 	    //
> 	    default:
> 	    {
> 	    	INT3;
> 			hr = DPNERR_GENERIC;
> 	    	goto Failure;
> 
> 	    	break;
> 	    }
> 	}
> 
> Exit:
> 	if ( pBaseAddress != NULL )
> 	{
> 		IDirectPlay8Address_Release( pBaseAddress );
> 		pBaseAddress = NULL;
> 	}
> 
> 	DNASSERT( pTempAddressString == NULL );
> 	if ( pBaseAddress != NULL )
> 	{
> 		DNFree( pBaseAddress );
> 		pBaseAddress = NULL;
> 	}
> 
> 	DecRef();
> 
> 	return;
> 
> Failure:
> 	//
> 	// cleanup and close this endpoint
> 	//
> 	switch ( GetType() )
> 	{
> 		case ENDPOINT_TYPE_CONNECT:
> 		{
> 			CleanupConnect();
> 			break;
> 		}
> 
> 		case ENDPOINT_TYPE_ENUM:
> 		{
> 			CleanupEnumQuery();
> 			break;
> 		}
> 
> 		//
> 		// other state (note that LISTEN doesn't have a dialog)
> 		//
> 		default:
> 		{
> 			INT3;
> 			break;
> 		}
> 	}
> 
> 	Close( hr );
> 	m_pSPData->CloseEndpointHandle( this );
> 
> 	goto Exit;
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
> // CIPEndpoint::StopSettingsDialog - stop an active settings dialog
> //
> // Entry:		Handle of dialog to close
> //
> // Exit:		Nothing
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME "CIPEndpoint::StopSettingsDialog"
> 
> void	CIPEndpoint::StopSettingsDialog( const HWND hDlg)
> {
> 	StopIPHostNameSettingsDialog( hDlg );
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
238a522
> 	DNASSERT( GetActiveDialogHandle() == NULL );
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\ipendpt.h)---()---()---()---()---()---()---()---()---()---()  
.  
.  
22a23,24
> #define	TEMP_HOSTNAME_LENGTH	100
> 
52a55,70
> 		// UI functions
> 		//
> 		HRESULT		ShowSettingsDialog( CThreadPool *const pThreadPool );
> 		void		SettingsDialogComplete( const HRESULT hr );
> 		void		StopSettingsDialog( const HWND hDlg );
> 
> 		#undef DPF_MODNAME
> 		#define DPF_MODNAME "CIPEndpoint::SetTempHostName"
> 		void		SetTempHostName( const char *const pHostName, const UINT_PTR uHostNameLength )
> 		{
> 			DNASSERT( pHostName[ uHostNameLength ] == '\0' );
> 			DNASSERT( ( uHostNameLength + 1 ) <= LENGTHOF( m_TempHostName ) );
> 			memcpy( m_TempHostName, pHostName, ( uHostNameLength + 1 ) );
> 		}
> 
> 		//
74a93
> 		char		m_TempHostName[ TEMP_HOSTNAME_LENGTH ];
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\locals.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
62a63,67
> //
> // OS version
> //
> UINT_PTR	g_uOSType;
> 
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\locals.h)---()---()---()---()---()---()---()---()---()---()  
.  
.  
109a110,114
> //
> // OS version
> //
> extern	UINT_PTR	g_uOSType;
> 
111a117,131
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
> // OSType - get OS type
> //
> // Entry:		Nothing
> //
> // Exit:		OSType
> // ------------------------------
> inline UINT_PTR	OSType( void )
> {
> 	return	g_uOSType;
> }
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\pools.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
16a17
> #include <WSIPX.h>
48a50
> #include	"IPXAddress.h"
52a55
> #include	"IPXEndpt.h"
88a92
> static	CFixedPool< CIPXAddress >	*g_pIPXAddressPool = NULL;
90a95
> static	CLockedContextFixedPool< CIPXEndpoint, ENDPOINT_POOL_CONTEXT* >	*g_pIPXEndpointPool = NULL;
198a204,210
> 	DNASSERT( g_pIPXAddressPool == NULL );
> 	g_pIPXAddressPool = new CFixedPool< CIPXAddress >;
> 	if ( g_pIPXAddressPool == NULL )
> 	{
> 		goto Failure;
> 	}
> 
217a230,246
> 	DNASSERT( g_pIPXEndpointPool == NULL );
> 	g_pIPXEndpointPool = new CLockedContextFixedPool< CIPXEndpoint, ENDPOINT_POOL_CONTEXT* >;
> 	if ( g_pIPXEndpointPool != NULL )
> 	{
> 		if ( g_pIPXEndpointPool->Initialize() == FALSE )
> 		{
> 			delete	g_pIPXEndpointPool;
> 			g_pIPXEndpointPool = NULL;
> 			goto Failure;
> 		}
> 	}
> 	else
> 	{
> 		goto Failure;
> 	}
> 
> 	
345a375,381
> 	if ( g_pIPXEndpointPool != NULL )
> 	{
> 		g_pIPXEndpointPool->Deinitialize();
> 		delete	g_pIPXEndpointPool;
> 		g_pIPXEndpointPool = NULL;
> 	}
> 
355a392,397
> 	if ( g_pIPXAddressPool != NULL )
> 	{
> 		delete	g_pIPXAddressPool;
> 		g_pIPXAddressPool = NULL;
> 	}
> 
518a561,610
> // CreateIPXAddress - create IPX address
> //
> // Entry:		Nothing
> //
> // Exit:		Pointer to IPX address
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME "CreateIPXAddress"
> 
> CIPXAddress	*CreateIPXAddress( void )
> {
> 	CIPXAddress	*pReturnAddress;
> 
> 	
> 	DNASSERT( g_pIPXAddressPool != NULL );
> 	
> 	DNEnterCriticalSection( &g_AddressLock );
> 	pReturnAddress = g_pIPXAddressPool->Get();
> 	DNLeaveCriticalSection( &g_AddressLock );
> 
> 	return	pReturnAddress;
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
> // ReturnIPXAddress - return an IPX address
> //
> // Entry:		Pointer to IPX address
> //
> // Exit:		Nothing
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME "ReturnIPXAddress"
> 
> void	ReturnIPXAddress( CIPXAddress *const pIPXAddress )
> {
> 	DNASSERT( pIPXAddress != NULL );
> 	DNASSERT( g_pIPXAddressPool != NULL );
> 	
> 	DNEnterCriticalSection( &g_AddressLock );
> 	g_pIPXAddressPool->Release( pIPXAddress );
> 	DNLeaveCriticalSection( &g_AddressLock );
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
531a624,642
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
> // CreateIPXEndpoint - create IPX endpoint
> //
> // Entry:		Pointer to context
> //
> // Exit:		Pointer to IPX endpoint
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME "CreateIPXEndpoint"
> 
> CIPXEndpoint	*CreateIPXEndpoint( ENDPOINT_POOL_CONTEXT *const pContext )
> {
> 	DNASSERT( g_pIPXEndpointPool != NULL );
> 	return	g_pIPXEndpointPool->Get( pContext );
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\pools.h)---()---()---()---()---()---()---()---()---()---()  
.  
.  
34a35
> class	CIPXAddress;
35a37
> class	CIPXEndpoint;
63a66,67
> CIPXAddress	*CreateIPXAddress( void );
> void	ReturnIPXAddress( CIPXAddress *const pIPXAddress );
65a70
> CIPXEndpoint	*CreateIPXEndpoint( ENDPOINT_POOL_CONTEXT *pContext );
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\rsip.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
45a46
> #include	"Registry.h"
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\sendqueue.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
16a17
> #include	<WSIPX.h>
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\socketport.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
19a20,21
> #include	<WSIPX.h>
> 
272a275,281
> //	//
> //	// Winsock 2 functionality always exists on WinNT.  If we're on Win9x, we can
> //	// only use Winsock2 interfaces for TCP.
> //	//
> //	if ( ( OSType() == VER_PLATFORM_WIN32_NT ) ||
> //		 ( ( LOWORD( GetWinsockVersion() ) >= 2 ) && ( m_pSPData->GetType() == TYPE_IP ) ) )
> //	{
273a283,287
> //	}
> //	else
> //	{
> //		m_pSendFunction = Winsock1Send;
> //	}
393a408,415
> 	
> 	//
> 	// Winsock 2 functionality always exists on WinNT.  If we're on Win9x, we can
> 	// only use Winsock2 interfaces for TCP.
> 	//
> 	if ( ( OSType() == VER_PLATFORM_WIN32_NT ) ||
> 		 ( ( LOWORD( GetWinsockVersion() ) >= 2 ) && ( m_pSPData->GetType() == TYPE_IP ) ) )
> 	{
394a417,421
> 	}
> 	else
> 	{
> 		m_pSendFunction = Winsock1Send;
> 	}
549a577,588
> 		//
> 		// No more endpoints are referencing this item, unbind this socket port
> 		// from the network and then remove it from the active socket port list.
> 		// If we're on Winsock1, tell the other thread that this socket needs to
> 		// be removed so we can get rid of our outstanding I/O reference.
> 		//
> 		if ( ( LOWORD( GetWinsockVersion() ) == 1 ) ||
> 			 ( ( OSType() == VER_PLATFORM_WIN32_WINDOWS ) && ( m_pSPData->GetType() == TYPE_IPX ) ) )
> 		{
> 			m_pSPData->GetThreadPool()->RemoveSocketPort( this );
> 		}
> 
1010a1050,1344
> // CSocketPort::Winsock1ReadService - service a read request on a socket
> //
> // Entry:		Nothing
> //
> // Exit:		Boolean indicating whether I/O was serviced
> //				TRUE = I/O serviced
> //				FALSE = I/O not serviced
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME "CSocketPort::Winsock1ReadService"
> 
> BOOL	CSocketPort::Winsock1ReadService( void )
> {
> 	BOOL		fIOServiced;
> 	INT			iSocketReturn;
> 	READ_IO_DATA_POOL_CONTEXT	PoolContext;
> 	CReadIOData		*pReadData;
> 
> 
> 	//
> 	// initialize
> 	//
> 	fIOServiced = FALSE;
> 	
> 	//
> 	// Attempt to get a new receive buffer from the pool.  If we fail, we'll
> 	// just fail to service this read and the socket will still be labeled
> 	// as ready to receive so we'll try again later.
> 	//
> 	PoolContext.SPType = m_pSPData->GetType();
> 	pReadData = m_pThreadPool->GetNewReadIOData( &PoolContext );
> 	if ( pReadData == NULL )
> 	{
> 		DPF( 0, "Could not get read data to perform a Winsock1 read!" );
> 		goto Exit;
> 	}
> 
> 	DBG_CASSERT( sizeof( pReadData->ReceivedBuffer()->BufferDesc.pBufferData ) == sizeof( char* ) );
> 	pReadData->m_iSocketAddressSize = pReadData->m_pSourceSocketAddress->GetAddressSize();
> 	pReadData->SetSocketPort( NULL );
> 	iSocketReturn = p_recvfrom( GetSocket(),												// socket to read from
> 								reinterpret_cast<char*>( pReadData->ReceivedBuffer()->BufferDesc.pBufferData ),	// pointer to receive buffer
> 								pReadData->ReceivedBuffer()->BufferDesc.dwBufferSize,		// size of receive buffer
> 								0,															// flags (none)
> 								pReadData->m_pSourceSocketAddress->GetWritableAddress(),	// address of sending socket
> 								&pReadData->m_iSocketAddressSize							// size of address of sending socket
> 								);
> 	switch ( iSocketReturn )
> 	{
> 		//
> 		// socket has been closed
> 		//
> 		case 0:
> 		{
> 			break;
> 		}
> 
> 		//
> 		// problem
> 		//
> 		case SOCKET_ERROR:
> 		{
> 			DWORD	dwWinsockError;
> 
> 
> 			dwWinsockError = p_WSAGetLastError();
> 			switch ( dwWinsockError )
> 			{
> 				//
> 				// one of our previous sends failed to get through,
> 				// and we don't really care anymore
> 				//
> 				case WSAECONNRESET:
> 				{
> 					break;
> 				}
> 
> 				//
> 				// This socket was probably closed
> 				//
> 				case WSAENOTSOCK:
> 				{
> 					DPF( 8, "Winsock1 reporting 'Not a socket' on receive!" );
> 					break;
> 				}
> 
> 				//
> 				// something bad happened
> 				//
> 				default:
> 				{
> 					DPF( 0, "Problem with Winsock1 recvfrom!" );
> 					DisplayWinsockError( 0, dwWinsockError );
> 					INT3;
> 
> 					break;
> 				}
> 			}
> 
> 			break;
> 		}
> 
> 		//
> 		// bytes were read
> 		//
> 		default:
> 		{
> 			fIOServiced = TRUE;
> 			pReadData->ReceivedBuffer()->BufferDesc.dwBufferSize = iSocketReturn;
> 			ProcessReceivedData( pReadData );
> 
> 			break;
> 		}
> 	}
> 
> 	DNASSERT( pReadData != NULL );
> 	pReadData->DecRef();
> 
> Exit:
> 	return fIOServiced;
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
> // CSocketPort::Winsock1WriteService - service a write request on a socket
> //
> // Entry:		Nothing
> //
> // Exit:		Boolean indicating whether I/O was serviced
> //				TRUE = I/O serviced
> //				FALSE = I/O not serviced
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME "CSocketPort::Winsock1WriteService"
> 
> BOOL	CSocketPort::Winsock1WriteService( void )
> {
> 	BOOL	fIOServiced;
> 
> 
> 	fIOServiced = FALSE;
> 	m_SendQueue.Lock();
> 
> 	//
> 	// if there's data to send, attempt to send it
> 	//
> 	if ( m_SendQueue.IsEmpty() == FALSE )
> 	{
> 		fIOServiced = SendFromWriteQueue();
> 	}
> 
> 	m_SendQueue.Unlock();
> 
> 	return	fIOServiced;
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
> // CSocketPort::Winsock1ErrorService - service an error on this socket
> //
> // Entry:		Nothing
> //
> // Exit:		Boolean indicating whether I/O was serviced
> //				TRUE = I/O serviced
> //				FALSE = I/O not serviced
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME "CSocketPort::Winsock1ErrorService"
> 
> BOOL	CSocketPort::Winsock1ErrorService( void )
> {
> 	//
> 	// this function doesn't do anything because errors on sockets will usually
> 	// result in the socket being closed soon
> 	//
> 	return	FALSE;
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
> // CSocketPort::Winsock1Send - send data in a Winsock 1.0 fashion
> //
> // Entry:		Pointer to write data
> //
> // Exit:		Send completion code
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME "CSocketPort::Winsock1Send"
> 
> SEND_COMPLETION_CODE	CSocketPort::Winsock1Send( CWriteIOData *const pWriteData )
> {
> 	SEND_COMPLETION_CODE	SendCompletionCode;
> 	INT			iSendToReturn;
> 	UINT_PTR	uOutputBufferIndex;
> 	INT			iOutputByteCount;
> 	char		TempBuffer[ MAX_MESSAGE_SIZE ];
> 
> 
> 	DNASSERT( pWriteData != NULL );
> 
> 	//
> 	// initialize
> 	//
> 	SendCompletionCode = SEND_COMPLETED_IMMEDIATELY_WS1;
> 
> 	//
> 	// flatten output data
> 	//
> 	iOutputByteCount = 0;
> 	uOutputBufferIndex = 0;
> 
> 	DNASSERT( pWriteData->m_uBufferCount != 0 );
> 	do
> 	{
> 		DNASSERT( ( iOutputByteCount + pWriteData->m_pBuffers[ uOutputBufferIndex ].dwBufferSize ) <= LENGTHOF( TempBuffer ) );
> 		memcpy( &TempBuffer[ iOutputByteCount ], pWriteData->m_pBuffers[ uOutputBufferIndex ].pBufferData, pWriteData->m_pBuffers[ uOutputBufferIndex ].dwBufferSize );
> 		iOutputByteCount += pWriteData->m_pBuffers[ uOutputBufferIndex ].dwBufferSize;
> 
> 		uOutputBufferIndex++;
> 	} while( uOutputBufferIndex < pWriteData->m_uBufferCount );
> 
> 	//
> 	// there is no need to note an I/O reference because our Winsock1 I/O is synchronous
> 	//
> 	iSendToReturn = p_sendto( GetSocket(),			// socket
> 							  TempBuffer,			// data to send
> 							  iOutputByteCount,		// number of bytes to send
> 							  0,					// flags (none)
> 							  pWriteData->m_pDestinationSocketAddress->GetAddress(),		// pointer to destination address
> 							  pWriteData->m_pDestinationSocketAddress->GetAddressSize()		// size of destination address
> 							  );
> 	switch ( iSendToReturn )
> 	{
> 		//
> 		// problem with send
> 		//
> 		case SOCKET_ERROR:
> 		{
> 			DWORD	dwWinsockError;
> 
> 
> 			dwWinsockError = p_WSAGetLastError();
> 			switch ( dwWinsockError )
> 			{
> 				//
> 				// socket would block on call
> 				//
> 				case WSAEWOULDBLOCK:
> 				{
> 					SendCompletionCode = SEND_WINSOCK_BUSY;
> 					break;
> 				}
> 
> 				//
> 				// other problem
> 				//
> 				default:
> 				{
> 					SendCompletionCode = SEND_FAILED;
> 					DNASSERT( pWriteData->Win9xOperationPending() == FALSE );
> 
> 					DPF( 0, "Problem with Winsock1 sendto!" );
> 					DisplayWinsockError( 0, dwWinsockError );
> 					break;
> 				}
> 			}
> 
> 			break;
> 		}
> 
> 		//
> 		// send went through, make sure all bytes were sent
> 		//
> 		default:
> 		{
> 			DNASSERT( iSendToReturn == iOutputByteCount );
> 			DNASSERT( SendCompletionCode == SEND_COMPLETED_IMMEDIATELY_WS1 );
> 
> 			break;
> 		}
> 	}
> 
> 	return	SendCompletionCode;
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
1040c1374,1375
< 	DNASSERT( pWriteData->OverlapEvent() == NULL );
---
> 	DNASSERT( ( ( OSType() == VER_PLATFORM_WIN32_NT ) && ( pWriteData->OverlapEvent() == NULL ) ) ||
> 			  ( ( OSType() == VER_PLATFORM_WIN32_WINDOWS ) && ( pWriteData->OverlapEvent() != NULL ) ) );
1046a1382,1390
> 	// lock the 'pending operation' list over the call to Winsock to prevent the
> 	// operation from being completed while it's being set up.
> 	//
> 	if ( OSType() == VER_PLATFORM_WIN32_WINDOWS )
> 	{
> 		m_pSPData->GetThreadPool()->LockWriteData();
> 	}
> 	
> 	//
1052a1397,1400
> 	DNASSERT( ( pWriteData->Win9xOperationPending() == FALSE ) ||
> 			  ( OSType() == VER_PLATFORM_WIN32_NT ) );
> 	pWriteData->SetWin9xOperationPending( TRUE );
> 
1063a1412,1416
> 	if ( OSType() == VER_PLATFORM_WIN32_WINDOWS )
> 	{
> 		m_pSPData->GetThreadPool()->UnlockWriteData();
> 	}
> 
1104a1458,1460
> 				DNASSERT( pWriteData->Win9xOperationPending() != FALSE );
> 				pWriteData->SetWin9xOperationPending( FALSE );
> 
1195c1551,1552
< 	DNASSERT( pReadData->OverlapEvent() == NULL );
---
> 	DNASSERT( ( ( OSType() == VER_PLATFORM_WIN32_NT ) && ( pReadData->OverlapEvent() == NULL ) ) ||
> 			  ( ( OSType() == VER_PLATFORM_WIN32_WINDOWS ) && ( pReadData->OverlapEvent() != NULL ) ) );
1207a1565,1568
> 	if ( OSType() == VER_PLATFORM_WIN32_WINDOWS )
> 	{
> 		m_pSPData->GetThreadPool()->LockReadData();
> 	}
1215a1577,1579
> 	DNASSERT( ( pReadData->Win9xOperationPending() == FALSE ) ||
> 			  ( OSType() == VER_PLATFORM_WIN32_NT ) );
> 	pReadData->SetWin9xOperationPending( TRUE );
1233a1598,1601
> 			if ( OSType() == VER_PLATFORM_WIN32_WINDOWS )
> 			{
> 				m_pSPData->GetThreadPool()->UnlockReadData();
> 			}
1250a1619,1622
> 				if ( OSType() == VER_PLATFORM_WIN32_WINDOWS )
> 				{
> 					m_pSPData->GetThreadPool()->UnlockReadData();
> 				}
1268a1641,1644
> 				if ( OSType() == VER_PLATFORM_WIN32_WINDOWS )
> 				{
> 					m_pSPData->GetThreadPool()->UnlockReadData();
> 				}
1273a1650,1651
> 				DNASSERT( pReadData->Win9xOperationPending() != FALSE );
> 				pReadData->SetWin9xOperationPending( FALSE );
1291a1670,1673
> 				if ( OSType() == VER_PLATFORM_WIN32_WINDOWS )
> 				{
> 					m_pSPData->GetThreadPool()->UnlockReadData();
> 				}
1318a1701,1702
> 				DNASSERT( pReadData->Win9xOperationPending() != FALSE );
> 				pReadData->SetWin9xOperationPending( FALSE );
1354a1739,1740
> 	DNASSERT( ( pWriteData->Win9xOperationPending() == FALSE ) ||
> 			  ( OSType() == VER_PLATFORM_WIN32_NT ) );
2021a2408,2414
> 	switch ( OSType() )
> 	{
> 		//
> 		// we're on NT, bind to the completion port, issue a read and we're done
> 		//
> 		case VER_PLATFORM_WIN32_NT:
> 		{
2066a2460,2523
> 			break;
> 		}
> 
> 		//
> 		// Win9x.
> 		// If this is not an IPX socket and Winsock 2 (or greater) is available,
> 		// call the Winsock 2 read function.  If this is IPX or we're stuck with
> 		// Winsock 1, inform the thread pool as such.
> 		//
> 		case VER_PLATFORM_WIN32_WINDOWS:
> 		{
> 			DNASSERT( hIOCompletionPort == NULL );
> 
> 			if ( ( LOWORD( GetWinsockVersion() ) >= 2 ) &&
> 				 ( m_pSPData->GetType() == TYPE_IP ) )
> 			{
> 				//
> 				// we're using Winsock2, call for two outstanding reads per socket.
> 				//
> 				hr = Winsock2Receive();
> 				if ( hr != DPN_OK )
> 				{
> 					DPF( 0, "Problem issuing Win9x read #1 in StartReceiving!" );
> 					DisplayDNError( 0, hr );
> 					INT3;
> 				}
> 
> 				hr = Winsock2Receive();
> 				if ( hr != DPN_OK )
> 				{
> 					DPF( 0, "Problem issuing Win9x read #2 in StartReceiving!" );
> 					DisplayDNError( 0, hr );
> 					INT3;
> 				}
> 
> 			}
> 			else
> 			{
> 				DNASSERT( m_pSPData != NULL );
> 				hr = m_pSPData->GetThreadPool()->AddSocketPort( this );
> 				if ( hr != DPN_OK )
> 				{
> 					DPF( 0, "Failed to add to active socket list!" );
> 					DisplayDNError( 0, hr );
> 					goto Failure;
> 				}
> 			}
> 
> 			break;
> 		}
> 
> 		//
> 		// other OS
> 		//
> 		default:
> 		{
> 			hr = DPNERR_UNSUPPORTED;
> 			DNASSERT( FALSE );
> 			goto Failure;
> 
> 			break;
> 		}
> 	}
> 
2574a3032,3033
> 	DNASSERT( ( pReadData->Win9xOperationPending() == FALSE ) ||
> 			  ( OSType() == VER_PLATFORM_WIN32_NT ) );
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\socketport.h)---()---()---()---()---()---()---()---()---()---()  
.  
.  
267a268,270
> 		BOOL	Winsock1ReadService( void );
> 		BOOL	Winsock1WriteService( void );
> 		BOOL	Winsock1ErrorService( void );
336a340
> 		SEND_COMPLETION_CODE	Winsock1Send( CWriteIOData *const pWriteData );
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\sources.inc)---()---()---()---()---()---()---()---()---()---()  
.  
.  
0a1,15
> #
> # The MAJORCOMP and MINORCOMP variables are defined
> # so that $(MAJORCOMP)$(MINORCOMP)filename can be used in
> # cross compiling to provide unique filenames in a flat namespace.
> #
> 
> MAJORCOMP=windows
> MINORCOMP=media
> 
> #
> # The TARGETNAME variable is defined by the developer.  It is the name of
> # the target (component) that is being built by this makefile.  It
> # should NOT include any path or file extension information.
> #
> 
2c17,27
< TARGETTYPE=DYNLINK
---
> DLLDEF=..\wsocksp.def
> UMTYPE=windows
> 
> #
> # The TARGETPATH and TARGETTYPE variables are defined by the developer.
> # The first specifies where the target is to be build.  The second specifies
> # the type of target (either PROGRAM, DYNLINK, LIBRARY, DRIVER, etc
> # UMAPPL_NOLIB is used when you're only building user-mode
> # apps and don't need to build a library.
> #
> 
3a29
> TARGETTYPE=DYNLINK
5,8c31,45
< !ifdef _BUILD_FOR_WIN2000
< UMTYPE=windows
< DLLENTRY=_DllMainCRTStartup
< C_DEFINES=$(C_DEFINES) -D_BUILD_FOR_WIN2000
---
> #
> # The TARGETLIBS specifies additional libraries to link with you target
> # image.  Each library path specification should contain an asterisk (*)
> # where the machine specific subdirectory name should go.
> #
> 
> #
> # 04/10/2000 - allows for addition of BoundsChecker, etc
> #  libs specified in the OS environment
> #
> TARGETLIBS=$(TARGETLIBS) \
>            ..\..\..\common\obj$(BUILD_ALT_DIR)\*\common.lib \
> !if "$(NTDEBUG)" == "ntsd" || "$(NTDEBUG)" == "cvp" || "$(NTDEBUG)" == "sym"
> 	   $(BASEDIR)\public\sdk\lib\*\libcmtd.lib \
> 	   $(BASEDIR)\public\sdk\lib\*\libcpmtd.lib \
10,12c47,48
< UMTYPE=xboxdll
< DLLENTRY=DllMain
< LINKER_FLAGS=-align:32
---
> 	   $(BASEDIR)\public\sdk\lib\*\libcmt.lib \
> 	   $(BASEDIR)\public\sdk\lib\*\libcpmt.lib \
13a50,56
> 	   $(BASEDIR)\public\sdk\lib\*\kernel32.lib \
> 	   $(BASEDIR)\public\sdk\lib\*\user32.lib \
> 	   $(BASEDIR)\public\sdk\lib\*\gdi32.lib \
> 	   $(BASEDIR)\public\sdk\lib\*\winmm.lib \
> 	   $(BASEDIR)\public\sdk\lib\*\advapi32.lib \
> 	   $(BASEDIR)\public\sdk\lib\*\ole32.lib  \
> 	   $(BASEDIR)\public\sdk\lib\*\uuid.lib
15c58,64
< INCLUDES=..\..\;..\..\..\inc;..\..\..\common;..\..\..\..\dnaddress
---
> #
> # If a debug mode is selected, make sure we include the defines to make the
> # logging code operate.
> #
> !if "$(NTDEBUG)" == "ntsd" || "$(NTDEBUG)" == "cvp" || "$(NTDEBUG)" == "sym"
> C_DEFINES=$(C_DEFINES) /DDEBUG /D_DEBUG
> !endif
17c66,76
< C_DEFINES=$(C_DEFINES) -D_UNICODE -DUNICODE -DCINTERFACE
---
> #
> # If we're in the release mode, force the compiler output debug information
> # in the form of a .PDB file.  The MSC_OPTIMIZATION lines are to force the compiler
> # to generate MSDEV compatible .PDB files with /Zi.  The /FAcs line is used to
> # generate mixed source and code files for easier debugging.
> #
> !if "$(NTDEBUG)" == ""
> #MSC_OPTIMIZATION=/Oxs /Zi
> #MSC_OPTIMIZATION= $(MSC_OPTIMIZATION) /FAcs
> NTDEBUGTYPE=both
> !endif
19c78,82
< USER_C_FLAGS=$(USER_C_FLAGS) /FAcs /Od
---
> #
> # The INCLUDES variable specifies any include paths that are specific to
> # this source directory.  Separate multiple directory paths with single
> # semicolons.  Relative path specifications are okay.
> #
21,23c84
< !if "$(NTDEBUG)" == "ntsd" || "$(NTDEBUG)" == "ntsdnodbg" || "$(NTDEBUG)" == "cvp" || "$(NTDEBUG)" == "sym"
< USER_C_FLAGS=$(USER_C_FLAGS) /Od
< !endif
---
> INCLUDES=$(DXROOT)\inc;..\..\..\inc;..\..\..\common;..\..\..\dnaddress
25d85
< MSC_WARNING_LEVEL=/W3 /WX
27c87,92
< DLLDEF=..\wsocksp.def
---
> #
> # The SOURCES variable is defined by the developer.  It is a list of all the
> # source files for this component.  Each source file should be on a separate
> # line using the line continuation character.  This will minimize merge
> # conflicts if two developers adding source files to the same component.
> #
30c95
<          ..\Classfac.cpp \
---
> 	 ..\Classfac.cpp \
33a99
> 	 ..\DWinsock.cpp \
38a105,107
> 	 ..\IPUI.cpp \
> 	 ..\IPXAddress.cpp \
> 	 ..\IPXEndpt.cpp \
41a111
>          ..\Registry.cpp \
50a121,123
> #
> # Next specify options for the compiler.
> #
51a125,127
> C_DEFINES= $(C_DEFINES) /D_USRDLL /D_MBCS /DWIN32 /D_MT /DDNWSock_EXPORTS /DCINTERFACE
> 
> USER_C_FLAGS=-nologo -W3
54,74c130,131
< TARGETLIBS= \
<            ..\..\..\common\obj$(BUILD_ALT_DIR)\*\common.lib \
<            $(BASEDIR)\public\sdk\lib\*\dpnaddr.lib \
< !ifdef _BUILD_FOR_WIN2000
< 	   $(BASEDIR)\public\sdk\lib\*\libcmt$(BUILD_ALT_DIR).lib \
<            $(BASEDIR)\public\sdk\lib\*\libcmt$(BUILD_ALT_DIR).lib \
< 	   $(BASEDIR)\public\sdk\lib\*\ws2_32.lib \
< 	   $(BASEDIR)\public\sdk\lib\*\kernel32.lib \
< 	   $(BASEDIR)\public\sdk\lib\*\user32.lib \
< 	   $(BASEDIR)\public\sdk\lib\*\gdi32.lib \
< 	   $(BASEDIR)\public\sdk\lib\*\winmm.lib \
< 	   $(BASEDIR)\public\sdk\lib\*\advapi32.lib \
< 	   $(BASEDIR)\public\sdk\lib\*\ole32.lib  \
< 	   $(BASEDIR)\public\sdk\lib\*\uuid.lib \
< 	   $(BASEDIR)\public\sdk\lib\*\rpcrt4.lib
< !else
< 	   $(BASEDIR)\public\sdk\lib\*\uuid.lib \
<            $(BASEDIR)\public\sdk\lib\*\xapi.lib \
<            $(DDK_LIB_PATH)\ntoskrnl.lib \
<            $(BASEDIR)\public\sdk\lib\*\winsockx.lib
< !endif
---
> DLLENTRY=_DllMainCRTStartup
> 
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\spaddress.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
17a18,19
> #include	<WSIPX.H>
> 
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\spaddress.h)---()---()---()---()---()---()---()---()---()---()  
.  
.  
122c122,123
< 						 ( sizeof( m_SocketAddress.SocketAddress ) == sizeof( m_SocketAddress.IPSocketAddress ) ) );
---
> 						 ( sizeof( m_SocketAddress.SocketAddress ) == sizeof( m_SocketAddress.IPSocketAddress ) ) &&
> 						 ( sizeof( m_SocketAddress.IPSocketAddress ) == ( sizeof( m_SocketAddress.IPXSocketAddress ) + 2 ) ) );
168c169,170
< 			DNASSERT( m_SocketAddress.SocketAddress.sa_family == AF_INET );
---
> 			DNASSERT( ( m_SocketAddress.SocketAddress.sa_family == AF_INET ) ||
> 					  ( m_SocketAddress.SocketAddress.sa_family == AF_IPX ) );
253a256
> 			DBG_CASSERT( sizeof( m_SocketAddress.SocketAddress.sa_family ) == sizeof( m_SocketAddress.IPXSocketAddress.sa_family ) );
254a258
> 			DBG_CASSERT( OFFSETOF( SOCKADDR, sa_family ) == OFFSETOF( SOCKADDR_IPX, sa_family ) );
257c261
< 			DNASSERT( m_SocketAddress.SocketAddress.sa_family == AF_INET );
---
> 			DNASSERT( ( m_SocketAddress.SocketAddress.sa_family == AF_INET ) || ( m_SocketAddress.SocketAddress.sa_family == AF_IPX ) );
266c270
< 			DNASSERT( m_iSocketProtocol == IPPROTO_UDP );
---
> 			DNASSERT( ( m_iSocketProtocol == IPPROTO_UDP ) || ( m_iSocketProtocol == NSPROTO_IPX ) );
294a299
> 			SOCKADDR_IPX	IPXSocketAddress;
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\spdata.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
19a20,21
> #include <WSIPX.h>
> 
47a50
> #include	"IPXAddress.h"
53a57
> #include	"IPXEndpt.h"
207a212,213
> 	if ( GetType() == TYPE_IP )
> 	{
217a224
> 	}
265a273,302
> 	switch ( OSType() )
> 	{
> 		//
> 		// Windows NT.  Nothing to do.
> 		//
> 		case VER_PLATFORM_WIN32_NT:
> 		{
> 			DPF( 8, "WinNT detected!" );
> 			break;
> 		}
> 
> 		//
> 		// Windows 95, 98
> 		//
> 		case VER_PLATFORM_WIN32_WINDOWS:
> 		{
> 			DPF( 8, "Win9x detected!" );
> 			break;
> 		}
> 
> 		// other version (unsupported!)
> //		case VER_PLATFORM_WIN32_CE:
> 		case VER_PLATFORM_WIN32s:
> 		default:
> 		{
> 			DNASSERT( FALSE );
> 			break;
> 		}
> 	}
> 
907a945,950
> 		case TYPE_IPX:
> 		{
> 			pEndpoint = CreateIPXEndpoint( &PoolContext );
> 			break;
> 		}
> 
1238a1282,1287
> 		case TYPE_IPX:
> 		{
> 			pReturn = CreateIPXAddress();
> 			break;
> 		}
> 
1272a1322,1327
> 			break;
> 		}
> 
> 		case TYPE_IPX:
> 		{
> 			ReturnIPXAddress( static_cast<CIPXAddress*>( pAddress ) );
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\spdata.h)---()---()---()---()---()---()---()---()---()---()  
.  
.  
49a50,51
> class	CIPXEndpoint;
> class	CIPXAddress;
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\threadpool.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
16a17,18
> #include	<WSIPX.h>
> 
124a127,147
> // structure for common data in Win9x thread
> //
> typedef	struct	_WIN9X_CORE_DATA
> {
> 	DN_TIME		NextTimerJobTime;					// time when the next timer job needs service
> 	HANDLE		hWaitHandles[ EVENT_INDEX_MAX ];	// handles for waiting on
> 	DWORD		dwTimeToNextJob;					// time to next job
> 	BOOL		fTimerJobsActive;					// Boolean indicating that there are active jobs
> 	BOOL		fLooping;							// Boolean indicating that this thread is still running
> 
> } WIN9X_CORE_DATA;
> 
> //
> // information passed to the Win9x workhorse thread
> //
> typedef struct	_WIN9X_THREAD_DATA
> {
> 	CThreadPool		*pThisThreadPool;	// pointer to this object
> } WIN9X_THREAD_DATA;
> 
> //
131a155,164
> //
> // structure passed to dialog threads
> //
> typedef	struct	_DIALOG_THREAD_PARAM
> {
> 	DIALOG_FUNCTION	*pDialogFunction;
> 	void			*pContext;
> 	CThreadPool		*pThisThreadPool;
> } DIALOG_THREAD_PARAM;
> 
245c278,285
< 	DEBUG_ONLY( 
---
> 	//
> 	// Win9x has poor APC support and as part of the workaround, the read data
> 	// lock needs to be taken twice.  Adjust the recursion counts accordingly.
> 	//
> 	DEBUG_ONLY( switch ( OSType() )
> 				{
> 					case VER_PLATFORM_WIN32_WINDOWS:
> 					{
247c287,288
< 	)
---
> 						break;
> 					}
248a290,297
> 					default:
> 					{
> 						DebugSetCriticalSectionRecursionCount( &m_ReadDataLock, 1 );
> 						break;
> 					}
> 				} )
> 
> 
255c304,311
< 	DEBUG_ONLY(
---
> 	//
> 	// Win9x has poor APC support and as part of the workaround, the write data
> 	// lock needs to be taken twice.  Adjust the recursion counts accordingly.
> 	//
> 	DEBUG_ONLY( switch ( OSType() )
> 				{
> 					case VER_PLATFORM_WIN32_WINDOWS:
> 					{
257c313,314
< 	)
---
> 						break;
> 					}
258a316,323
> 					default:
> 					{
> 						DebugSetCriticalSectionRecursionCount( &m_WriteDataLock, 1 );
> 						break;
> 					}
> 				} )
> 
> 
292a358,364
> 	// pool of IPX read requests
> 	m_IPXReadIODataPool.Initialize( CReadIOData::ReadIOData_Alloc,
> 									CReadIOData::ReadIOData_Get,
> 									CReadIOData::ReadIOData_Release,
> 									CReadIOData::ReadIOData_Dealloc
> 									);
> 
349a422,426
> 	//
> 	// OS-specific initialization
> 	//
> 	switch ( OSType() )
> 	{
352a430,431
> 		case VER_PLATFORM_WIN32_NT:
> 		{
358a438,464
> 			break;
> 		}
> 
> 		//
> 		// Windows 9x
> 		//
> 		case VER_PLATFORM_WIN32_WINDOWS:
> 		{
> 			hr = Win9xInit();
> 			if ( hr != DPN_OK )
> 			{
> 				goto Failure;
> 			}
> 
> 			break;
> 		}
> 
> 		//
> 		// unknown OS
> 		//
> 		default:
> 		{
> 			DNASSERT( FALSE );
> 			break;
> 		}
> 	}
> 	
390a497,498
> 	SYSTEM_INFO		SystemInfo;
> 	UINT_PTR		uDesiredThreads;
397a506,510
> 	//
> 	// get machine information
> 	//
> 	memset( &SystemInfo, 0x00, sizeof( SystemInfo ) );
> 	GetSystemInfo( &SystemInfo );
421a535,541
> 	uDesiredThreads = ( SystemInfo.dwNumberOfProcessors * 2 ) + 2;
> 	DNASSERT( uDesiredThreads != 0 );
> 	while ( uDesiredThreads > 0 )
> 	{
> 		uDesiredThreads--;
> 		StartNTCompletionThread();
> 	}
423,427d542
<     StartNTCompletionThread();
< 	StartNTCompletionThread();
< 	StartNTCompletionThread();
< 	StartNTCompletionThread();
< 
452a568,806
> // CThreadPool::Win9xInit - initialize Win9x components
> //
> // Entry:		Nothing
> //
> // Exit:		Error code
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME	"CThreadPool::Win9xInit"
> 
> HRESULT	CThreadPool::Win9xInit( void )
> {
> 	HRESULT				hr;
> 	HANDLE				hPrimaryThread;
> 	HANDLE				hSecondaryThread;
> 	DWORD				dwPrimaryThreadID;
> 	DWORD				dwSecondaryThreadID;
> 	WIN9X_THREAD_DATA	*pPrimaryThreadInput;
> 	WIN9X_THREAD_DATA	*pSecondaryThreadInput;
> 
> 
> 	//
> 	// initialize
> 	//
> 	hr = DPN_OK;
> 	hPrimaryThread = NULL;
> 	hSecondaryThread = NULL;
> 	pPrimaryThreadInput = NULL;
> 	pSecondaryThreadInput = NULL;
> 
> 	//
> 	// Win9x requires completion events for Winsock2.  Always allocate the
> 	// events even though the they might not be used.
> 	//
> 	DNASSERT( m_hWinsock2SendComplete == NULL );
> 	m_hWinsock2SendComplete = CreateEvent( NULL,	// pointer to security (none)
> 										   TRUE,	// manual reset
> 										   FALSE,	// start unsignalled
> 										   NULL		// pointer to name (none)
> 										   );
> 	if ( m_hWinsock2SendComplete == NULL )
> 	{
> 		DWORD	dwError;
> 
> 
> 		dwError = GetLastError();
> 		DPF( 0, "Failed to create event for Winsock2Send!" );
> 		DisplayErrorCode( 0, dwError );
> 		hr = DPNERR_OUTOFMEMORY;
> 		goto Failure;
> 	}
> 
> 	DNASSERT( m_hWinsock2ReceiveComplete == NULL );
> 	m_hWinsock2ReceiveComplete = CreateEvent( NULL,		// pointer to security (none)
> 											  TRUE,		// manual reset
> 											  FALSE,	// start unsignalled
> 											  NULL		// pointer to name (none)
> 											  );
> 	if ( m_hWinsock2ReceiveComplete == NULL )
> 	{
> 		DWORD	dwError;
> 
> 
> 		dwError = GetLastError();
> 		DPF( 0, "Failed to create event for Winsock2Receive!" );
> 		DisplayErrorCode( 0, dwError );
> 		hr = DPNERR_OUTOFMEMORY;
> 		goto Failure;
> 	}
> 
> 	//
> 	// create parameters to worker threads
> 	//
> 	pPrimaryThreadInput = static_cast<WIN9X_THREAD_DATA*>( DNMalloc( sizeof( *pPrimaryThreadInput ) ) );
> 	if ( pPrimaryThreadInput == NULL )
> 	{
> 		DPF( 0, "Problem allocating memory for primary Win9x thread!" );
> 		hr = DPNERR_OUTOFMEMORY;
> 		goto Failure;
> 	}
> 
> 	pSecondaryThreadInput = static_cast<WIN9X_THREAD_DATA*>( DNMalloc( sizeof( *pSecondaryThreadInput ) ) );
> 	if ( pSecondaryThreadInput == NULL )
> 	{
> 		DPF( 0, "Problem allocating memory for secondary Win9x thread!" );
> 		hr = DPNERR_OUTOFMEMORY;
> 		goto Failure;
> 	}
> 
> 	memset( pPrimaryThreadInput, 0x00, sizeof( *pPrimaryThreadInput ) );
> 	pPrimaryThreadInput->pThisThreadPool = this;
> 	
> 	DBG_CASSERT( sizeof( *pPrimaryThreadInput ) == sizeof( *pSecondaryThreadInput ) );
> 	memcpy( pSecondaryThreadInput, pPrimaryThreadInput, sizeof( *pSecondaryThreadInput ) );
> 
> 	//
> 	// assume that the thread will be created
> 	//
> 	IncrementActiveThreadCount();
> 	
> 	//
> 	// Create one worker thread and boost its priority.  If the primary thread
> 	// can be created and boosted, create a secondary thread.  Do not create a
> 	// secondary thread if the primary could not be boosted because the system
> 	// is probably low on resources.
> 	//
> 	hPrimaryThread = CreateThread( NULL,					// pointer to security attributes (none)
> 								   0,						// stack size (default)
> 								   PrimaryWin9xThread,		// pointer to thread function
> 								   pPrimaryThreadInput,		// pointer to input parameter
> 								   0,						// let it run
> 								   &dwPrimaryThreadID		// pointer to destination of thread ID
> 								   );
> 	if ( hPrimaryThread == NULL )
> 	{
> 		DWORD	dwError;
> 
> 
> 		//
> 		// Failed to create thread, decrement active thread count and report
> 		// error.
> 		//
> 		DecrementActiveThreadCount();
> 
> 		dwError = GetLastError();
> 		DPF( 0, "Problem creating Win9x thread!" );
> 		DisplayErrorCode( 0, dwError );
> 		hr = DPNERR_OUTOFMEMORY;
> 
> 		goto Failure;
> 	}
> 	pPrimaryThreadInput = NULL;
> 
> 
> 	DPF( 8, "Created primary Win9x thread: 0x%x\tTotal Thread Count: %d", dwPrimaryThreadID, ThreadCount() );
> 	DNASSERT( hPrimaryThread != NULL );
> 	if ( SetThreadPriority( hPrimaryThread, THREAD_PRIORITY_ABOVE_NORMAL ) == FALSE )
> 	{
> 		DWORD	dwError;
> 
> 
> 		dwError = GetLastError();
> 		DPF( 0, "Failed to boost priority of primary Win9x read thread!  Not starting secondary thread" );
> 		DisplayErrorCode( 0, dwError );
> 	}
> 	else
> 	{
> 		//
> 		// primary thread was created and boosted, create a secondary thread
> 		//
> 		IncrementActiveThreadCount();
> 		hSecondaryThread = CreateThread( NULL,						// pointer to security attributes (none)
> 										 0,							// stack size (default)
> 										 SecondaryWin9xThread,		// pointer to thread function
> 										 pSecondaryThreadInput,		// pointer to input parameter
> 										 0,							// let it run
> 										 &dwSecondaryThreadID		// pointer to destination of thread ID
> 										 );
> 		if ( hSecondaryThread != NULL )
> 		{
> 			DPF( 8, "Created secondary Win9x thread: 0x%x\tTotal Thread Count: %d", dwSecondaryThreadID, ThreadCount() );
> 			
> 			pSecondaryThreadInput = NULL;
> 			DNASSERT( hSecondaryThread != NULL );
> 			if ( SetThreadPriority( hSecondaryThread, THREAD_PRIORITY_ABOVE_NORMAL ) == FALSE )
> 			{
> 				DWORD	dwError;
> 
> 
> 				dwError = GetLastError();
> 				DPF( 0, "Failed to boost priority of secondary Win9x thread!" );
> 				DisplayErrorCode( 0, dwError );
> 			}
> 		}
> 		else
> 		{
> 			//
> 			// thread startup failed, decrement active thread count
> 			//
> 			DecrementActiveThreadCount();
> 		}
> 	}
> 
> 
> Exit:
> 	if ( pPrimaryThreadInput != NULL )
> 	{
> 		DNFree( pPrimaryThreadInput );
> 		pPrimaryThreadInput = NULL;
> 	}
> 
> 	if ( pSecondaryThreadInput != NULL )
> 	{
> 		DNFree( pSecondaryThreadInput );
> 		pSecondaryThreadInput = NULL;
> 	}
> 
> 	if ( hPrimaryThread != NULL )
> 	{
> 		if ( CloseHandle( hPrimaryThread ) == FALSE )
> 		{
> 			DWORD	dwError;
> 
> 
> 			dwError = GetLastError();
> 			DPF( 0, "Problem closing Win9x thread hanle!" );
> 			DisplayErrorCode( 0, dwError );
> 		}
> 
> 		hPrimaryThread = NULL;
> 	}
> 
> 	if ( hSecondaryThread != NULL )
> 	{
> 		if ( CloseHandle( hSecondaryThread ) == FALSE )
> 		{
> 			DWORD	dwError;
> 
> 
> 			dwError = GetLastError();
> 			DPF( 0, "Problem closing Win9x thread hanle!" );
> 			DisplayErrorCode( 0, dwError );
> 		}
> 
> 		hSecondaryThread = NULL;
> 	}
> 
> 	return	hr;
> 
> Failure:
> 	DPF( 0, "Failed Win9x Initialization!" );
> 	DisplayDNError( 0, hr );
> 
> 	goto Exit;
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
557a912,913
> 	if ( OSType() == VER_PLATFORM_WIN32_NT )
> 	{	
578a935
> 	}
666a1024,1025
> 		DNASSERT( ( OSType() == VER_PLATFORM_WIN32_NT ) || ( pReadData->Win9xOperationPending() != FALSE ) );
> 		pReadData->SetWin9xOperationPending( FALSE );
685a1045,1046
> 		DNASSERT( ( OSType() == VER_PLATFORM_WIN32_NT ) || ( pWriteData->Win9xOperationPending() != FALSE ) );
> 		pWriteData->SetWin9xOperationPending( FALSE );
836a1198
> 	m_IPXReadIODataPool.Deinitialize();
927d1288
< 			
931a1293,1301
> 		// IPX
> 		//
> 		case TYPE_IPX:
> 		{
> 			pTempReadData = m_IPXReadIODataPool.Get( pContext );
> 			break;
> 		}
> 
> 		//
1012a1383,1391
> 		// IPX
> 		//
> 		case AF_IPX:
> 		{
> 			m_IPXReadIODataPool.Release( pReadData );
> 			break;
> 		}
> 
> 		//
1276a1656,1657
> 	switch ( OSType() )
> 	{
1279a1661,1662
> 		case VER_PLATFORM_WIN32_NT:
> 		{
1296a1680,1708
> 			break;
> 		}
> 
> 		//
> 		// Win9x, set event that the work thread will listen for
> 		//
> 		case VER_PLATFORM_WIN32_WINDOWS:
> 		{
> 			DNASSERT( m_JobQueue.GetPendingJobHandle() != NULL );
> 			if ( m_JobQueue.SignalPendingJob() == FALSE )
> 			{
> 				hr = DPNERR_OUTOFMEMORY;
> 				DPF( 0, "Failed to signal pending job!" );
> 				goto Failure;
> 			}
> 
> 			break;
> 		}
> 
> 		//
> 		// unknown platform
> 		//
> 		default:
> 		{
> 			DNASSERT( FALSE );
> 			break;
> 		}
> 	}
> 
1413a1826,1827
> 	if ( OSType() == VER_PLATFORM_WIN32_NT )
> 	{
1420a1835
> 	}
1628a2044,2144
> // CThreadPool::SpawnDialogThread - start a secondary thread to display service
> //		provider UI.
> //
> // Entry:		Pointer to dialog function
> //				Dialog context
> //
> // Exit:		Error code
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME	"CThreadPool::SpawnDialogThread"
> 
> HRESULT	CThreadPool::SpawnDialogThread( DIALOG_FUNCTION *const pDialogFunction, void *const pDialogContext )
> {
> 	HRESULT	hr;
> 	HANDLE	hDialogThread;
> 	DIALOG_THREAD_PARAM		*pThreadParam;
> 	DWORD	dwThreadID;
> 
> 
> 	DNASSERT( pDialogFunction != NULL );
> 	DNASSERT( pDialogContext != NULL );		// why would anyone not want a dialog context??
> 
> 
> 	//
> 	// initialize
> 	//
> 	hr = DPN_OK;
> 	pThreadParam = NULL;
> 
> 	//
> 	// create and initialize thread param
> 	//
> 	pThreadParam = static_cast<DIALOG_THREAD_PARAM*>( DNMalloc( sizeof( *pThreadParam ) ) );
> 	if ( pThreadParam == NULL )
> 	{
> 		hr = DPNERR_OUTOFMEMORY;
> 		DPF( 0, "Failed to allocate memory for dialog thread!" );
> 		goto Failure;
> 	}
> 
> 	pThreadParam->pDialogFunction = pDialogFunction;
> 	pThreadParam->pContext = pDialogContext;
> 	pThreadParam->pThisThreadPool = this;
> 
> 	//
> 	// assume that a thread will be created
> 	//
> 	IncrementActiveThreadCount();
> 
> 	//
> 	// create thread
> 	//
> 	hDialogThread = CreateThread( NULL,					// pointer to security (none)
> 								  0,					// stack size (default)
> 								  DialogThreadProc,		// thread procedure
> 								  pThreadParam,			// thread param
> 								  0,					// creation flags (none)
> 								  &dwThreadID );		// pointer to thread ID
> 	if ( hDialogThread == NULL )
> 	{
> 		DWORD	dwError;
> 
> 
> 		//
> 		// decrement active thread count and report error
> 		//
> 		DecrementActiveThreadCount();
> 		
> 		dwError = GetLastError();
> 		DPF( 0, "Failed to start dialog thread!" );
> 		DisplayErrorCode( 0, dwError );
> 		goto Failure;
> 	}
>   								
> 	if ( CloseHandle( hDialogThread ) == FALSE )
> 	{
> 		DWORD	dwError;
> 
> 
> 		dwError = GetLastError();
> 		DPF( 0, "Problem closing handle from create dialog thread!" );
> 		DisplayErrorCode( 0, dwError );
> 	}
> 
> Exit:	
> 	return	hr;
> 
> Failure:
> 	if ( pThreadParam != NULL )
> 	{
> 		DNFree( pThreadParam );
> 		pThreadParam = NULL;
> 	}
> 
> 	goto Exit;
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
1651a2168,2169
> 	switch ( OSType() )
> 	{
1652a2171,2180
> 		// Win9x only has one thread
> 		//
> 		case VER_PLATFORM_WIN32_WINDOWS:
> 		{
> 			*piThreadCount = 1;
> 			DNASSERT( NTCompletionThreadCount() == 0 );
> 			break;
> 		}
> 
> 		//
1654a2183,2184
> 		case VER_PLATFORM_WIN32_NT:
> 		{
1656a2187,2188
> 			break;
> 		}
1657a2190,2199
> 		//
> 		// other
> 		//
> 		default:
> 		{
> 			DNASSERT( FALSE );
> 			break;
> 		}
> 	}
> 
1689a2232,2233
> 	switch ( OSType() )
> 	{
1690a2235,2242
> 		// Win9x has only 1 thread, too bad.
> 		//
> 		case VER_PLATFORM_WIN32_WINDOWS:
> 		{
> 			break;
> 		}
> 
> 		//
1696a2249,2250
> 		case VER_PLATFORM_WIN32_NT:
> 		{
1736a2291,2303
> 			break;
> 		}
> 
> 		//
> 		// other OS
> 		//
> 		default:
> 		{
> 			DNASSERT( FALSE );
> 			break;
> 		}
> 	}
> 
1819a2387,2539
> // CThreadPool::AddSocketPort - add a socket to the Win9x watch list
> //
> // Entry:		Pointer to SocketPort
> //
> // Exit:		Error code
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME	"CThreadPool::AddSocketPort"
> 
> HRESULT	CThreadPool::AddSocketPort( CSocketPort *const pSocketPort )
> {
> 	HRESULT	hr;
> 	BOOL	fSocketAdded;
> 
> 	
> 	DNASSERT( pSocketPort != NULL );
> 
> 	//
> 	// initialize
> 	//
> 	hr = DPN_OK;
> 	fSocketAdded = FALSE;
> 
> 	Lock();
> 
> 	//
> 	// We're capped by the number of sockets we can use for Winsock1.  Make
> 	// sure we don't allocate too many sockets.
> 	//
> 	if ( m_uReservedSocketCount == FD_SETSIZE )
> 	{
> 		hr = DPNERR_OUTOFMEMORY;
> 		DPF( 0, "There are too many sockets allocated on Winsock1!" );
> 		goto Failure;
> 	}
> 
> 	m_uReservedSocketCount++;
> 	
> 	DNASSERT( m_SocketSet.fd_count < FD_SETSIZE );
> 	m_pSocketPorts[ m_SocketSet.fd_count ] = pSocketPort;
> 	m_SocketSet.fd_array[ m_SocketSet.fd_count ] = pSocketPort->GetSocket();
> 	m_SocketSet.fd_count++;
> 	fSocketAdded = TRUE;
> 
> 	//
> 	// add a reference to note that this socket port is being used by the thread
> 	// pool
> 	//
> 	pSocketPort->AddRef();
> 
> 	if ( m_JobQueue.SignalPendingJob() == FALSE )
> 	{
> 		DPF( 0, "Failed to signal pending job when adding socket port to active list!" );
> 		hr = DPNERR_OUTOFMEMORY;
> 		goto Failure;
> 	}
> 
> Exit:
> 	Unlock();
> 	
> 	return	hr;
> 
> Failure:
> 	if ( fSocketAdded != FALSE )
> 	{
> 		AssertCriticalSectionIsTakenByThisThread( &m_Lock, TRUE );
> 		m_SocketSet.fd_count--;
> 		m_pSocketPorts[ m_SocketSet.fd_count ] = NULL;
> 		m_SocketSet.fd_array[ m_SocketSet.fd_count ] = NULL;
> 		fSocketAdded = FALSE;
> 	}
> 
> 	m_uReservedSocketCount--;
> 
> 	goto Exit;
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
> // CThreadPool::RemoveSocketPort - remove a socket from the Win9x watch list
> //
> // Entry:		Pointer to socket port to remove
> //
> // Exit:		Nothing
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME	"CThreadPool::RemoveSocketPort"
> 
> void	CThreadPool::RemoveSocketPort( CSocketPort *const pSocketPort )
> {
> 	UINT_PTR	uIndex;
> 
> 
> 	DNASSERT( pSocketPort != NULL );
> 	
> 	Lock();
> 
> 	uIndex = m_SocketSet.fd_count;
> 	DNASSERT( uIndex != 0 );
> 	while ( uIndex != 0 )
> 	{
> 		uIndex--;
> 
> 		if ( m_pSocketPorts[ uIndex ] == pSocketPort )
> 		{
> 			m_uReservedSocketCount--;
> 			m_SocketSet.fd_count--;
> 
> 			memmove( &m_pSocketPorts[ uIndex ],
> 					 &m_pSocketPorts[ uIndex + 1 ],
> 					 ( sizeof( m_pSocketPorts[ uIndex ] ) * ( m_SocketSet.fd_count - uIndex ) ) );
> 
> 			memmove( &m_SocketSet.fd_array[ uIndex ],
> 					 &m_SocketSet.fd_array[ uIndex + 1 ],
> 					 ( sizeof( m_SocketSet.fd_array[ uIndex ] ) * ( m_SocketSet.fd_count - uIndex ) ) );
> 
> 			//
> 			// clear last entry which is now unused
> 			//
> 			memset( &m_pSocketPorts[ m_SocketSet.fd_count ], 0x00, sizeof( m_pSocketPorts[ m_SocketSet.fd_count ] ) );
> 			memset( &m_SocketSet.fd_array[ m_SocketSet.fd_count ], 0x00, sizeof( m_SocketSet.fd_array[ m_SocketSet.fd_count ] ) );
> 
> 			//
> 			// end the loop
> 			//
> 			uIndex = 0;
> 		}
> 	}
> 
> 	Unlock();
> 	
> 	pSocketPort->DecRef();
> 
> 	//
> 	// It's really not necessary to signal a new job here because there were
> 	// active sockets on the last iteration of the Win9x thread.  That means the
> 	// Win9x thread was in a polling mode to check for sockets and the next time
> 	// through it will notice that there is a missing socket.  By signalling the
> 	// job event we reduce the time needed for the thread to figure out that the
> 	// socket is gone.
> 	//
> 	if ( m_JobQueue.SignalPendingJob() == FALSE )
> 	{
> 		DPF( 0, "Failed to signal pending job when removeing socket port to active list!" );
> 	}
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
1972a2693,3406
> // CThreadPool::CompleteOutstandingSends - check for completed sends and
> //		indicate send completion for them.
> //
> // Entry:		Nothing
> //
> // Exit:		Nothing
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME	"CThreadPool::CompleteOutstandingSends"
> 
> void	CThreadPool::CompleteOutstandingSends( void )
> {
> 	CBilink		*pCurrentOutstandingWrite;
> 	CBilink		WritesToBeProcessed;
> 
> 
> 	WritesToBeProcessed.Initialize();
> 	LockWriteData();
> 
> 	//
> 	// Loop through the list out outstanding sends.  Any completed sends are
> 	// removed from the list and processed after we release the write data lock.
> 	//
> 	pCurrentOutstandingWrite = m_OutstandingWriteList.GetNext();
> 	while ( pCurrentOutstandingWrite != &m_OutstandingWriteList )
> 	{
> 		CSocketPort		*pSocketPort;
> 		CWriteIOData	*pWriteIOData;
> 		DWORD			dwFlags;
> 
> 
> 		//
> 		// note this send and advance pointer to the next pending send
> 		//
> 		pWriteIOData = pWriteIOData->WriteDataFromBilink( pCurrentOutstandingWrite );
> 		pCurrentOutstandingWrite = pCurrentOutstandingWrite->GetNext();
> 
> 		if ( pWriteIOData->Win9xOperationPending() != FALSE )
> 		{
> 			if ( p_WSAGetOverlappedResult( pWriteIOData->SocketPort()->GetSocket(),
> 										   pWriteIOData->Overlap(),
> 										   &pWriteIOData->m_dwOverlappedBytesSent,
> 										   FALSE,
> 										   &dwFlags
> 										   ) != FALSE )
> 			{
> 				//
> 				// Overlapped results will complete with success and zero bytes
> 				// transferred when the overlapped structure is checked BEFORE
> 				// the operation has really been subnitted.  This is a possibility
> 				// with the current code.  To combat this, check the sent bytes
> 				// for zero (we'll never send zero bytes).
> 				//
> 				if ( pWriteIOData->m_dwOverlappedBytesSent == 0 )
> 				{
> 					goto SkipSendCompletion;
> 				}
> 
> 				pWriteIOData->m_Win9xSendHResult = DPN_OK;
> 				pWriteIOData->m_dwOverlappedBytesSent = 0;
> 			}
> 			else
> 			{
> 				DWORD	dwWSAError;
> 
> 
> 				dwWSAError = p_WSAGetLastError();
> 				switch( dwWSAError )
> 				{
> 					//
> 					// this I/O operation is incomplete, don't send notification to the user
> 					//
> 					case ERROR_IO_PENDING:
> 					case WSA_IO_INCOMPLETE:
> 					{
> 						goto SkipSendCompletion;
> 						break;
> 					}
> 
> 					//
> 					// WSAENOTSOCK = the socket has been closed, most likely
> 					// as a result of a command completing or being cancelled.
> 					//
> 					case WSAENOTSOCK:
> 					{
> 						pWriteIOData->m_Win9xSendHResult = DPNERR_USERCANCEL;
> 						break;
> 					}
> 
> 					//
> 					// other error, stop and look
> 					//
> 					default:
> 					{
> 						INT3;
> 						pWriteIOData->m_Win9xSendHResult = DPNERR_GENERIC;
> 						DisplayWinsockError( 0, dwWSAError );
> 
> 						break;
> 					}
> 				}
> 			}
> 
> 			DNASSERT( pWriteIOData->Win9xOperationPending() != FALSE );
> 			pWriteIOData->SetWin9xOperationPending( FALSE );
> 
> 			pWriteIOData->m_OutstandingWriteListLinkage.RemoveFromList();
> 			pWriteIOData->m_OutstandingWriteListLinkage.InsertBefore( &WritesToBeProcessed );
> 		}
> 
> SkipSendCompletion:
> 		//
> 		// the following line is present to prevent the compiler from whining
> 		// about a blank line
> 		//
> 		;
> 	}
> 
> 	UnlockWriteData();
> 
> 	//
> 	// process all writes that have been pulled to the side.
> 	//
> 	while (  WritesToBeProcessed.GetNext() != &WritesToBeProcessed )
> 	{
> 		BOOL			fIOServiced;
> 		CWriteIOData	*pTempWrite;
> 		CSocketPort		*pSocketPort;
> 
> 
> 		pTempWrite = CWriteIOData::WriteDataFromBilink( WritesToBeProcessed.GetNext() );
> 		pTempWrite->m_OutstandingWriteListLinkage.RemoveFromList();
> 		pSocketPort = pTempWrite->SocketPort();
> 		DNASSERT( pSocketPort != NULL );
> 
> 		fIOServiced = pSocketPort->SendFromWriteQueue();
> 		pSocketPort->SendComplete( pTempWrite, pTempWrite->m_Win9xSendHResult );
> 		pSocketPort->DecRef();
> 	}
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
> // CThreadPool::CompleteOutstandingReceives - check for completed receives and
> //		indicate completion for them.
> //
> // Entry:		Nothing
> //
> // Exit:		Nothing
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME	"CThreadPool::CompleteOutstandingReceives"
> 
> void	CThreadPool::CompleteOutstandingReceives( void )
> {
> 	CBilink		*pCurrentOutstandingRead;
> 	CBilink		ReadsToBeProcessed;
> 
> 
> 	ReadsToBeProcessed.Initialize();
> 	LockReadData();
> 
> 	//
> 	// Loop through the list of outstanding reads and pull out the ones that need
> 	// to be serviced.  We don't want to service them while the read data lock
> 	// is taken.
> 	//
> 	pCurrentOutstandingRead = m_OutstandingReadList.GetNext();
> 	while ( pCurrentOutstandingRead != &m_OutstandingReadList )
> 	{
> 		CSocketPort		*pSocketPort;
> 		CReadIOData		*pReadIOData;
> 		DWORD			dwFlags;
> 
> 
> 		pReadIOData = pReadIOData->ReadDataFromBilink( pCurrentOutstandingRead );
> 		pCurrentOutstandingRead = pCurrentOutstandingRead->GetNext();
> 
> 		//
> 		// Make sure this operation is really pending before attempting to check
> 		// for completion.  It's possible that the read was added to the list, but
> 		// we haven't actually called Winsock yet.
> 		//
> 		if ( pReadIOData->Win9xOperationPending() != FALSE )
> 		{
> 			if ( p_WSAGetOverlappedResult( pReadIOData->SocketPort()->GetSocket(),
> 										   pReadIOData->Overlap(),
> 										   &pReadIOData->m_dwOverlappedBytesReceived,
> 										   FALSE,
> 										   &dwFlags
> 										   ) != FALSE )
> 			{
> 				//
> 				// Overlapped results will complete with success and zero bytes
> 				// transferred when the overlapped structure is checked BEFORE
> 				// the operation has really been subnitted.  This is a possibility
> 				// with the current code.  To combat this, check the received bytes
> 				// for zero (the return when the overlapped request was checked before
> 				// it was sent) and check the return address (it's possible that someone
> 				// really sent zero bytes).
> 				//
> 				DBG_CASSERT( ERROR_SUCCESS == 0 );
> 				if ( ( pReadIOData->m_dwOverlappedBytesReceived != 0 ) &&
> 					 ( pReadIOData->m_pSourceSocketAddress->IsUndefinedHostAddress() == FALSE ) )
> 				{
> 					pReadIOData->m_Win9xReceiveWSAReturn = ERROR_SUCCESS;
> 				}
> 				else
> 				{
> 					goto SkipReceiveCompletion;
> 				}
> 			}
> 			else
> 			{
> 				pReadIOData->m_Win9xReceiveWSAReturn = p_WSAGetLastError();
> 				switch( pReadIOData->m_Win9xReceiveWSAReturn )
> 				{
> 					//
> 					// If this I/O operation is incomplete, don't send notification to the user.
> 					//
> 					case WSA_IO_INCOMPLETE:
> 					{
> 						goto SkipReceiveCompletion;
> 						break;
> 					}
> 
> 					//
> 					// socket was closed with an outstanding read, no problem
> 					// Win9x reports 'WSAENOTSOCK'
> 					// WinNT reports 'ERROR_OPERATION_ABORTED'
> 					//
> 					// If this is an indication that the connection was reset,
> 					// pass it on to the socket port so it can issue another
> 					// read
> 					//
> 					case ERROR_OPERATION_ABORTED:
> 					case WSAENOTSOCK:
> 					case WSAECONNRESET:
> 					{
> 						break;
> 					}
> 
> 					default:
> 					{
> 						DisplayWinsockError( 0, pReadIOData->m_Win9xReceiveWSAReturn );
> 
> 						// debug me!
> 						DNASSERT( FALSE );
> 
> 						break;
> 					}
> 				}
> 			}
> 
> 			DNASSERT( pReadIOData->Win9xOperationPending() != FALSE );
> 			pReadIOData->SetWin9xOperationPending( FALSE );
> 
> 			pReadIOData->m_OutstandingReadListLinkage.RemoveFromList();
> 			pReadIOData->m_OutstandingReadListLinkage.InsertBefore( &ReadsToBeProcessed );
> 		}
> 
> SkipReceiveCompletion:
> 		//
> 		// the following line is present to prevent the compiler from whining
> 		// about a blank line
> 		//
> 		;
> 	}
> 
> 	UnlockReadData();
> 
> 	//
> 	// loop through the list of reads that have completed and dispatch them
> 	//
> 	while ( ReadsToBeProcessed.GetNext() != &ReadsToBeProcessed )
> 	{
> 		CReadIOData		*pTempRead;
> 		CSocketPort		*pSocketPort;
> 
> 
> 		pTempRead = CReadIOData::ReadDataFromBilink( ReadsToBeProcessed.GetNext() );
> 		pTempRead->m_OutstandingReadListLinkage.RemoveFromList();
> 
> 		pSocketPort = pTempRead->SocketPort();
> 		DNASSERT( pSocketPort != NULL );
> 		pSocketPort->Winsock2ReceiveComplete( pTempRead );
> 	}
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
> // CThreadPool::PrimaryWin9xThread - main thread to do everything that the SP is
> //		supposed to do under Win9x.
> //
> // Entry:		Pointer to startup parameter
> //
> // Exit:		Error Code
> //
> // Note:	The startup parameter is allocated for this thread and must be
> //			deallocated by this thread when it exits
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME	"CThreadPool::PrimaryWin9xThread"
> 
> DWORD	WINAPI	CThreadPool::PrimaryWin9xThread( void *pParam )
> {
> 	WIN9X_CORE_DATA		CoreData;
> 	DN_TIME				CurrentTime;
> 	DWORD				dwMaxWaitTime;
> 	DN_TIME				DeltaT;
> 
> 	CThreadPool		*const pThisThreadPool = static_cast<WIN9X_THREAD_DATA *>( pParam )->pThisThreadPool;
> 	FD_SET 			*const pSocketSet = &pThisThreadPool->m_SocketSet;
> 
> 	
> 	DNASSERT( pParam != NULL );
> 	DNASSERT( pThisThreadPool != NULL );
> 	DNASSERT( pSocketSet != NULL );
> 
> 	//
> 	// initialize
> 	//
> 	memset( &CoreData, 0x00, sizeof CoreData );
> 
> 	//
> 	// before we do anything we need to make sure COM is happy
> 	//
> 	switch ( COM_CoInitialize( NULL ) )
> 	{
> 		//
> 		// no problem
> 		//
> 		case S_OK:
> 		{
> 			break;
> 		}
> 
> 		//
> 		// COM already initialized, huh?
> 		//
> 		case S_FALSE:
> 		{
> 			DNASSERT( FALSE );
> 			break;
> 		}
> 
> 		//
> 		// COM init failed!
> 		//
> 		default:
> 		{
> 			DPF( 0, "Primary Win9x thread failed to initialize COM!" );
> 			DNASSERT( FALSE );
> 			break;
> 		}
> 	}
> 
> 	//
> 	// Clear socket data.  Since we need to correlate a CSocketPort with a SOCKET,
> 	// we're going to manage the FD_SET ourselves.  See Winsock.h for the FD_SET
> 	// structure definition.
> 	//
> 	DBG_CASSERT( OFFSETOF( FD_SET, fd_count ) == 0 );
> //#ifdef	_WIN32
> //	DBG_CASSERT( OFFSETOF( FD_SET, fd_array ) == sizeof( pSocketSet->fd_count ) );
> //#endif	// _WIN32
> //	DNASSERT( pThisThreadPool->m_uReservedSocketCount == 0 );
> //	DNASSERT( pSocketSet->fd_count == 0 );
> 	DNASSERT( CoreData.fTimerJobsActive == FALSE );
> 
> 	//
> 	// set enums to happen infinitely in the future
> 	//
> 	memset( &CoreData.NextTimerJobTime, 0xFF, sizeof( CoreData.NextTimerJobTime ) );
> 
> 	//
> 	// set wait handles
> 	//
> 	CoreData.hWaitHandles[ EVENT_INDEX_STOP_ALL_THREADS ] = pThisThreadPool->m_hStopAllThreads;
> 	CoreData.hWaitHandles[ EVENT_INDEX_PENDING_JOB ] = pThisThreadPool->m_JobQueue.GetPendingJobHandle();
> 	CoreData.hWaitHandles[ EVENT_INDEX_WINSOCK_2_SEND_COMPLETE ] = pThisThreadPool->GetWinsock2SendCompleteEvent();
> 	CoreData.hWaitHandles[ EVENT_INDEX_WINSOCK_2_RECEIVE_COMPLETE ] = pThisThreadPool->GetWinsock2ReceiveCompleteEvent();
> 	
> 	DNASSERT( CoreData.hWaitHandles[ EVENT_INDEX_STOP_ALL_THREADS ] != NULL );
> 	DNASSERT( CoreData.hWaitHandles[ EVENT_INDEX_PENDING_JOB ] != NULL );
> 	DNASSERT( CoreData.hWaitHandles[ EVENT_INDEX_WINSOCK_2_SEND_COMPLETE ] != NULL );
> 	DNASSERT( CoreData.hWaitHandles[ EVENT_INDEX_WINSOCK_2_RECEIVE_COMPLETE ] != NULL );
> 	
> 	//
> 	// go until we're told to stop
> 	//
> 	CoreData.fLooping = TRUE;
> 	while ( CoreData.fLooping != FALSE )
> 	{
> 		DWORD	dwWaitReturn;
> 
> 		
> 		//
> 		// Update the job time so we know how long to wait.  We can
> 		// only get here if a socket was just added to the socket list, or
> 		// we've been servicing sockets.
> 		//
> 		DNTimeGet( &CurrentTime );
> 		if ( DNTimeCompare( &CurrentTime, &CoreData.NextTimerJobTime ) >= 0 )
> 		{
> 			pThisThreadPool->LockTimerData();
> 			CoreData.fTimerJobsActive = pThisThreadPool->ProcessTimerJobs( &pThisThreadPool->m_TimerJobList,
> 																		   &CoreData.NextTimerJobTime );
> 			if ( CoreData.fTimerJobsActive != FALSE )
> 			{
> 				DPF( 8, "There are active jobs left with Winsock1 sockets active!" );
> 			}
> 			pThisThreadPool->UnlockTimerData();
> 		}
> 
> 		DNTimeSubtract( &CoreData.NextTimerJobTime, &CurrentTime, &DeltaT );
> #pragma	BUGBUG( johnkan, "Busted Win64!" )
> 		dwMaxWaitTime = static_cast<DWORD>( SaturatedWaitTime( DeltaT ) );
> 
> 
> 		//
> 		// Check for Winsock1 sockets.  If there are some around, do a quick poll
> 		// of them to check of I/O before entering the main Winsock2 loop for
> 		// the real timing.
> 		//
> 		pThisThreadPool->Lock();
> 		if ( pSocketSet->fd_count != 0 )
> 		{
> 			pThisThreadPool->Unlock();
> 			
> 			//
> 			// if there is Winsock1 I/O that gets serviced, loop immediately.  If
> 			// there were no Winsock1 sockets serviced, pause before polling again.
> 			//
> 			if ( pThisThreadPool->CheckWinsock1IO( pSocketSet ) != FALSE )
> 			{
> 				dwMaxWaitTime = 0;
> 			}
> 			else
> 			{
> 				if ( g_dwSelectTimeSlice < dwMaxWaitTime )
> 				{
> 					dwMaxWaitTime = g_dwSelectTimeSlice;
> 				}
> 			}
> 		}
> 		else
> 		{
> 			pThisThreadPool->Unlock();
> 		}
> 
> 
> 		//
> 		// Check Winsock2 sockets.
> 		//
> 		dwWaitReturn = WaitForMultipleObjectsEx( LENGTHOF( CoreData.hWaitHandles ),		// count of handles
> 												 CoreData.hWaitHandles,					// handles to wait on
> 												 FALSE,									// don't wait for all to be signalled
> 												 dwMaxWaitTime,							// wait timeout
> 												 TRUE									// we're alertable for APCs
> 												 );
> 		switch ( dwWaitReturn )
> 		{
> 			//
> 			// timeout, don't do anything, we'll probably process timer jobs on
> 			// the next loop
> 			//
> 			case WAIT_TIMEOUT:
> 			{
> 				break;
> 			}
> 			
> 			case ( WAIT_OBJECT_0 + EVENT_INDEX_PENDING_JOB ):
> 			case ( WAIT_OBJECT_0 + EVENT_INDEX_STOP_ALL_THREADS ):
> 			case ( WAIT_OBJECT_0 + EVENT_INDEX_WINSOCK_2_SEND_COMPLETE ):
> 			case ( WAIT_OBJECT_0 + EVENT_INDEX_WINSOCK_2_RECEIVE_COMPLETE ):
> 			{
> 				pThisThreadPool->ProcessWin9xEvents( &CoreData, TRUE );
> 				break;
> 			}
> 
> 			//
> 			// There are I/O completion routines scheduled on this thread.
> 			// This is not a good thing!
> 			//
> 			case WAIT_IO_COMPLETION:
> 			{
> 				DPF( 1, "WARNING: APC was serviced on the primary Win9x IO service thread!  What is the application doing??" );
> 				break;
> 			}
> 
> 			//
> 			// wait failed
> 			//
> 			case WAIT_FAILED:
> 			{
> 				DWORD	dwError;
> 
> 
> 				dwError = GetLastError();
> 				DPF( 0, "Primary Win9x thread wait failed!" );
> 				DisplayDNError( 0, dwError );
> 				break;
> 			}
> 
> 			//
> 			// problem
> 			//
> 			default:
> 			{
> 				DWORD	dwError;
> 
> 
> 				dwError = GetLastError();
> 				DPF( 0, "Primary Win9x thread unknown problem in wait!" );
> 				DisplayDNError( 0, dwError );
> 				DNASSERT( FALSE );
> 				break;
> 			}
> 		}
> 	}
> 
> 	pThisThreadPool->DecrementActiveThreadCount();
> 
> 	DNFree( pParam );
> 
> 	COM_CoUninitialize();
> 
> 	return	0;
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
> // CThreadPool::SecondaryWin9xThread - secondary thread to handle only Win9x
> //		I/O so developers get bit faster with multithreading issues if they're
> //		developing on Win9x.  This thread will only handle Winsock2 based TCP
> //		I/O.  Winsock 1 is not deemed important enough to hack the rest of the
> //		code to work with two threads.
> //
> // Entry:		Pointer to startup parameter
> //
> // Exit:		Error Code
> //
> // Note:	The startup parameter is allocated for this thread and must be
> //			deallocated by this thread when it exits
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME	"CThreadPool::SecondaryWin9xThread"
> 
> DWORD	WINAPI	CThreadPool::SecondaryWin9xThread( void *pParam )
> {
> 	WIN9X_CORE_DATA		CoreData;
> 
> 	CThreadPool		*const pThisThreadPool = static_cast<WIN9X_THREAD_DATA *>( pParam )->pThisThreadPool;
> 
> 	
> 	DNASSERT( pParam != NULL );
> 	DNASSERT( pThisThreadPool != NULL );
> 
> 	//
> 	// initialize
> 	//
> 	memset( &CoreData, 0x00, sizeof CoreData );
> 
> 	//
> 	// before we do anything we need to make sure COM is happy
> 	//
> 	switch ( COM_CoInitialize( NULL ) )
> 	{
> 		//
> 		// no problem
> 		//
> 		case S_OK:
> 		{
> 			break;
> 		}
> 
> 		//
> 		// COM already initialized, huh?
> 		//
> 		case S_FALSE:
> 		{
> 			INT3;
> 			break;
> 		}
> 
> 		//
> 		// COM init failed!
> 		//
> 		default:
> 		{
> 			DPF( 0, "Secondary Win9x thread failed to initialize COM!" );
> 			DNASSERT( FALSE );
> 			break;
> 		}
> 	}
> 
> 	//
> 	// set enums to happen infinitely in the future
> 	//
> 	DNASSERT( CoreData.fTimerJobsActive == FALSE );
> 	memset( &CoreData.NextTimerJobTime, 0xFF, sizeof( CoreData.NextTimerJobTime ) );
> 
> 	//
> 	// set wait handles
> 	//
> 	CoreData.hWaitHandles[ EVENT_INDEX_STOP_ALL_THREADS ] = pThisThreadPool->m_hStopAllThreads;
> 	CoreData.hWaitHandles[ EVENT_INDEX_PENDING_JOB ] = pThisThreadPool->m_JobQueue.GetPendingJobHandle();
> 	CoreData.hWaitHandles[ EVENT_INDEX_WINSOCK_2_SEND_COMPLETE ] = pThisThreadPool->GetWinsock2SendCompleteEvent();
> 	CoreData.hWaitHandles[ EVENT_INDEX_WINSOCK_2_RECEIVE_COMPLETE ] = pThisThreadPool->GetWinsock2ReceiveCompleteEvent();
> 	
> 	DNASSERT( CoreData.hWaitHandles[ EVENT_INDEX_STOP_ALL_THREADS ] != NULL );
> 	DNASSERT( CoreData.hWaitHandles[ EVENT_INDEX_PENDING_JOB ] != NULL );
> 	DNASSERT( CoreData.hWaitHandles[ EVENT_INDEX_WINSOCK_2_SEND_COMPLETE ] != NULL );
> 	DNASSERT( CoreData.hWaitHandles[ EVENT_INDEX_WINSOCK_2_RECEIVE_COMPLETE ] != NULL );
> 	
> 	//
> 	// go until we're told to stop
> 	//
> 	CoreData.fLooping = TRUE;
> 	while ( CoreData.fLooping != FALSE )
> 	{
> 		DWORD	dwWaitReturn;
> 
> 		
> 		//
> 		// Check Winsock2 sockets.
> 		//
> 		dwWaitReturn = WaitForMultipleObjectsEx( LENGTHOF( CoreData.hWaitHandles ),		// count of handles
> 												 CoreData.hWaitHandles,					// handles to wait on
> 												 FALSE,									// don't wait for all to be signalled
> 												 INFINITE,								// wait timeout (forever)
> 												 TRUE									// we're alertable for APCs
> 												 );
> 		switch ( dwWaitReturn )
> 		{
> 			//
> 			// timeout, shouldn't ever be here!!
> 			//
> 			case WAIT_TIMEOUT:
> 			{
> 				INT3;
> 				break;
> 			}
> 
> 			case ( WAIT_OBJECT_0 + EVENT_INDEX_PENDING_JOB ):
> 			case ( WAIT_OBJECT_0 + EVENT_INDEX_STOP_ALL_THREADS ):
> 			case ( WAIT_OBJECT_0 + EVENT_INDEX_WINSOCK_2_SEND_COMPLETE ):
> 			case ( WAIT_OBJECT_0 + EVENT_INDEX_WINSOCK_2_RECEIVE_COMPLETE ):
> 			{
> 				pThisThreadPool->ProcessWin9xEvents( &CoreData, FALSE );
> 				break;
> 			}
> 
> 			//
> 			// There are I/O completion routines scheduled on this thread.
> 			// This is not a good thing!
> 			//
> 			case WAIT_IO_COMPLETION:
> 			{
> 				DPF( 1, "WARNING: APC was serviced on the secondary Win9x IO service thread!  What is the application doing??" );
> 				break;
> 			}
> 
> 			//
> 			// wait failed
> 			//
> 			case WAIT_FAILED:
> 			{
> 				DWORD	dwError;
> 
> 
> 				dwError = GetLastError();
> 				DPF( 0, "Secondary Win9x thread wait failed!" );
> 				DisplayDNError( 0, dwError );
> 				break;
> 			}
> 
> 			//
> 			// problem
> 			//
> 			default:
> 			{
> 				DWORD	dwError;
> 
> 
> 				dwError = GetLastError();
> 				DPF( 0, "Secondary Win9x thread unknown problem in wait!" );
> 				DisplayDNError( 0, dwError );
> 				DNASSERT( FALSE );
> 				break;
> 			}
> 		}
> 	}
> 
> 	pThisThreadPool->DecrementActiveThreadCount();
> 
> 	DNFree( pParam );
> 
> 	COM_CoUninitialize();
> 
> 	return	0;
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
2365a3800,4336
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
> // CThreadPool::DialogThreadProc - thread proc for spawning dialogs
> //
> // Entry:		Pointer to startup parameter
> //
> // Exit:		Error Code
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME	"CThreadPool::DialogThreadProc"
> 
> DWORD WINAPI	CThreadPool::DialogThreadProc( void *pParam )
> {
> 	const DIALOG_THREAD_PARAM	*pThreadParam;
> 
> 
> 	//
> 	// Initialize COM.  If this fails, we'll have problems later.
> 	//
> 	switch ( COM_CoInitialize( NULL ) )
> 	{
> 		case S_OK:
> 		{
> 			break;
> 		}
> 
> 		case S_FALSE:
> 		{
> 			DNASSERT( FALSE );
> 			break;
> 		}
> 
> 		//
> 		// COM init failed!
> 		//
> 		default:
> 		{
> 			DPF( 0, "Failed to initialize COM!" );
> 			DNASSERT( FALSE );
> 			break;
> 		}
> 	}
> 	
> 	DNASSERT( pParam != NULL );
> 	pThreadParam = static_cast<DIALOG_THREAD_PARAM*>( pParam );
> 	
> 	pThreadParam->pDialogFunction( pThreadParam->pContext );
> 
> 	pThreadParam->pThisThreadPool->DecrementActiveThreadCount();
> 	DNFree( pParam );
> 	return	0;
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
> // CThreadPool::ProcessWin9xEvents - process Win9x events
> //
> // Entry:		Pointer to core data
> //				Boolean indicating whether to acknowledge jobs
> //
> // Exit:		Nothing
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME	"CThreadPool::ProcessWin9xEvents"
> 
> void	CThreadPool::ProcessWin9xEvents( WIN9X_CORE_DATA *const pCoreData, const BOOL fProcessDelayedJobs )
> {
> 	DNASSERT( pCoreData != NULL );
> 
> 	//
> 	// If delayed jobs are to be processed, process one.  Otherwise sleep and
> 	// let another thread pick up the jobs.
> 	//
> 	switch ( WaitForSingleObject( pCoreData->hWaitHandles[ EVENT_INDEX_PENDING_JOB ], 0 ) )
> 	{
> 		case WAIT_TIMEOUT:
> 		{
> 			break;
> 		}
> 
> 		case WAIT_OBJECT_0:
> 		{
> 			if ( fProcessDelayedJobs != FALSE )
> 			{
> 			    DPF( 8, "Primary Win9x thread has a pending job!" );
> 				ProcessWin9xJob( pCoreData );
> 			}
> 			else
> 			{
> 				SleepEx( 0, TRUE );
> 			}
> 
> 			break;
> 		}
> 
> 		default:
> 		{
> 			INT3;
> 			break;
> 		}
> 	}
> 
> 	//
> 	// send complete
> 	//
> 	switch ( WaitForSingleObject( pCoreData->hWaitHandles[ EVENT_INDEX_WINSOCK_2_SEND_COMPLETE ], 0 ) )
> 	{
> 		case WAIT_OBJECT_0:
> 		{
> 			//
> 			// reset the event so it will be signalled again if anything
> 			// completes while we're scanning the pending write list
> 			//
> 			if ( ResetEvent( pCoreData->hWaitHandles[ EVENT_INDEX_WINSOCK_2_SEND_COMPLETE ] ) == FALSE )
> 			{
> 				DWORD	dwError;
> 
> 
> 				dwError = GetLastError();
> 				DPF( 0, "Failed to reset Winsock2 send event!" );
> 				DisplayErrorCode( 0, dwError );
> 			}
> 
> 			CompleteOutstandingSends();
> 			
> 			break;
> 		}
> 
> 		case WAIT_TIMEOUT:
> 		{
> 			break;
> 		}
> 
> 		default:
> 		{
> 			INT3;
> 			break;
> 		}
> 	}
> 
> 	//
> 	// receive complete
> 	//
> 	switch ( WaitForSingleObject( pCoreData->hWaitHandles[ EVENT_INDEX_WINSOCK_2_RECEIVE_COMPLETE ], 0 ) )
> 	{
> 		case WAIT_OBJECT_0:
> 		{
> 			//
> 			// reset the event so it will be signalled again if anything
> 			// completes while we're scanning the pending read list
> 			//
> 			if ( ResetEvent( pCoreData->hWaitHandles[ EVENT_INDEX_WINSOCK_2_RECEIVE_COMPLETE ] ) == FALSE )
> 			{
> 				DWORD	dwError;
> 
> 
> 				dwError = GetLastError();
> 				DPF( 0, "Failed to reset Winsock2 receive event!" );
> 				DisplayErrorCode( 0, dwError );
> 			}
> 
> 			CompleteOutstandingReceives();
> 			
> 			break;
> 		}
> 
> 		case WAIT_TIMEOUT:
> 		{
> 			break;
> 		}
> 
> 		default:
> 		{
> 			INT3;
> 			break;
> 		}
> 	}
> 
> 	//
> 	// stop all threads
> 	//
> 	switch ( WaitForSingleObject( pCoreData->hWaitHandles[ EVENT_INDEX_STOP_ALL_THREADS ], 0 ) )
> 	{
> 		case WAIT_OBJECT_0:
> 		{
> 			DPF( 8, "Win9x thread exit because SP closing!" );
> 			pCoreData->fLooping = FALSE;
> 			break;
> 		}
> 	
> 		case WAIT_TIMEOUT:
> 		{
> 			break;
> 		}
> 
> 		default:
> 		{
> 			INT3;
> 			break;
> 		}
> 	}
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
> // CThreadPool::ProcessWin9xJob - process a Win9x job
> //
> // Entry:		Pointer core data
> //
> // Exit:		Nothing
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME	"CThreadPool::ProcessWin9xJob"
> 
> void	CThreadPool::ProcessWin9xJob( WIN9X_CORE_DATA *const pCoreData )
> {
> 	THREAD_POOL_JOB	*pJobInfo;
> 
> 
> 	//
> 	// Remove and process a single job from the list.  If there is no job, skip
> 	// to the end of the function.
> 	//
> 	pJobInfo = GetWorkItem();
> 
> 	if ( pJobInfo == NULL )
> 	{
> 		goto Exit;
> 	}
> 
> 	switch ( pJobInfo->JobType )
> 	{
> 		//
> 		// enum refresh
> 		//
> 		case JOB_REFRESH_TIMER_JOBS:
> 		{
> 			DPF( 8, "WorkThread job REFRESH_ENUM" );
> 			DNASSERT( pJobInfo->JobData.JobRefreshTimedJobs.uDummy == 0 );
> 			LockTimerData();
> 			pCoreData->fTimerJobsActive = ProcessTimerJobs( &m_TimerJobList, &pCoreData->NextTimerJobTime );
> 			UnlockTimerData();
> 
> 			if ( pCoreData->fTimerJobsActive != FALSE )
> 			{
> 				DPF( 8, "There are active timer jobs left after processing a Win9x REFRESH_TIMER_JOBS" );
> 			}
> 
> 			break;
> 		}
> 
> 		//
> 		// issue callback for this job
> 		//
> 		case JOB_DELAYED_COMMAND:
> 		{
> 			DPF( 8, "WorkThread job DELAYED_COMMAND" );
> 			DNASSERT( pJobInfo->JobData.JobDelayedCommand.pCommandFunction != NULL );
> 			pJobInfo->JobData.JobDelayedCommand.pCommandFunction( pJobInfo );
> 			break;
> 		}
> 
> 		//
> 		// other job
> 		//
> 		default:
> 		{
> 			DPF( 0, "WorkThread Win9x job unknown!" );
> 			DNASSERT( FALSE );
> 			break;
> 		}
> 	}
> 
> 	DEBUG_ONLY( pJobInfo->JobType = JOB_UNINITIALIZED );
> 	m_JobPool.Release( &m_JobPool, pJobInfo );
> 
> Exit:
> 	return;
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
> // CThreadPool::CheckWinsock1IO - check the IO status for Winsock1 sockets
> //
> // Entry:		Pointer to sockets to watch
> //
> // Exit:		Boolean indicating whether I/O was serviced
> //				TRUE = I/O serviced
> //				FALSE = I/O not serviced
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME	"CThreadPool::CheckWinsock1IO"
> 
> BOOL	CThreadPool::CheckWinsock1IO( FD_SET *const pWinsock1Sockets )
> {
> static	const TIMEVAL	SelectNoTime = { 0 };
> 	BOOL		fIOServiced;
> 	INT			iSelectReturn;
> 	FD_SET		ReadSocketSet;
> 	FD_SET		WriteSocketSet;
> 	FD_SET		ErrorSocketSet;
> 
> 
> 	//
> 	// Make a local copy of all of the sockets.  This isn't totally
> 	// efficient, but it works.  Multiplying by active socket count will
> 	// spend half the time in the integer multiply.
> 	//
> 	fIOServiced = FALSE;
> 	Lock();
> 	memcpy( &ReadSocketSet, pWinsock1Sockets, sizeof( ReadSocketSet ) );
> 	memcpy( &WriteSocketSet, pWinsock1Sockets, sizeof( WriteSocketSet ) );
> 	memcpy( &ErrorSocketSet, pWinsock1Sockets, sizeof( ErrorSocketSet ) );
> 	Unlock();
> 
> 	//
> 	// Don't check write sockets here because it's very likely that they're ready
> 	// for service but have no outgoing data and will thrash
> 	//
> 	iSelectReturn = p_select( 0,				// compatibility parameter (ignored)
> 							  &ReadSocketSet,	// sockets to check for read
> 							  NULL,				// sockets to check for write (none)
> 							  &ErrorSocketSet,	// sockets to check for error
> 							  &SelectNoTime		// wait timeout (zero, do an instant check)
> 							  );
> 	switch ( iSelectReturn )
> 	{
> 		//
> 		// timeout
> 		//
> 		case 0:
> 		{
> 			break;
> 		}
> 
> 		//
> 		// select got pissed
> 		//
> 		case SOCKET_ERROR:
> 		{
> 			DWORD	dwWSAError;
> 
> 
> 			dwWSAError = p_WSAGetLastError();
> 			switch ( dwWSAError )
> 			{
> 				//
> 				// WSAENOTSOCK = This socket was probably closed
> 				//
> 				case WSAENOTSOCK:
> 				{
> 					DPF( 1, "Winsock1 reporting 'Not a socket' when selecting read or error sockets!" );
> 					break;
> 				}
> 
> 				//
> 				// WSAEINTR = this operation was interrupted
> 				//
> 				case WSAEINTR:
> 				{
> 					DPF( 1, "Winsock1 reporting interrupted operation when selecting read or error sockets!" );
> 					break;
> 				}
> 
> 				//
> 				// other
> 				//
> 				default:
> 				{
> 					DPF( 0, "Problem selecting read or error sockets for service!" );
> 					DisplayWinsockError( 0, dwWSAError );
> 					INT3;
> 					break;
> 				}
> 			}
> 
> 			break;
> 		}
> 
> 		//
> 		// Check for sockets needing read service and error service.
> 		//
> 		default:
> 		{
> 			fIOServiced |= ServiceWinsock1Sockets( &ReadSocketSet, CSocketPort::Winsock1ReadService );
> 			fIOServiced |= ServiceWinsock1Sockets( &ErrorSocketSet, CSocketPort::Winsock1ErrorService );
> 			break;
> 		}
> 	}
> 
> 	//
> 	// Since writes are likely to be ready, check for them separately
> 	//
> 	iSelectReturn = p_select( 0,				// compatibility parameter (ignored)
> 							  NULL,				// sockets to check for read (don't check reads)
> 							  &WriteSocketSet,	// sockets to check for write
> 							  NULL,				// sockets to check for error (don't check errors)
> 							  &SelectNoTime		// wait timeout (zero, do an instant check)
> 							  );
> 	switch ( iSelectReturn )
> 	{
> 		//
> 		// timeout, no write sockets are ready for service
> 		//
> 		case 0:
> 		{
> 			break;
> 		}
> 
> 		//
> 		// select failed
> 		//
> 		case SOCKET_ERROR:
> 		{
> 			DWORD	dwWSAError;
> 
> 
> 			dwWSAError = p_WSAGetLastError();
> 			switch ( dwWSAError )
> 			{
> 				//
> 				// this socket was probably closed
> 				//
> 				case WSAENOTSOCK:
> 				{
> 					DPF( 1, "Winsock1 reporting 'Not a socket' when selecting write sockets!" );
> 					break;
> 				}
> 
> 				//
> 				// other
> 				//
> 				default:
> 				{
> 					DPF( 0, "Problem selecting write sockets for service!" );
> 					DisplayWinsockError( 0, dwWSAError );
> 					INT3;
> 
> 					break;
> 				}
> 			}
> 
> 			break;
> 		}
> 
> 		//
> 		// Check for sockets needing write service
> 		//
> 		default:
> 		{
> 			fIOServiced |= ServiceWinsock1Sockets( &WriteSocketSet, CSocketPort::Winsock1WriteService );
> 			break;
> 		}
> 	}
> 
> 	return	fIOServiced;
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
> // CThreadPool::ServiceWinsock1Sockets - service requests on Winsock1 sockets ports
> //
> // Entry:		Pointer to set of sockets
> //				Pointer to service function
> //
> // Exit:		Boolean indicating whether I/O was serviced
> //				TRUE = I/O serviced
> //				FALSE = I/O not serviced
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME	"CThreadPool::ServiceWinsock1Sockets"
> 
> BOOL	CThreadPool::ServiceWinsock1Sockets( FD_SET *pSocketSet, PSOCKET_SERVICE_FUNCTION pServiceFunction )
> {
> 	BOOL		fReturn;
> 	UINT_PTR	uWaitingSocketCount;
> 	UINT_PTR	uSocketPortCount;
> 	CSocketPort	*pSocketPorts[ FD_SETSIZE ];
> 
> 
> 	//
> 	// initialize
> 	//
> 	fReturn = FALSE;
> 	uSocketPortCount = 0;
> 	uWaitingSocketCount = pSocketSet->fd_count;
> 	
> 	Lock();
> 	while ( uWaitingSocketCount > 0 )
> 	{
> 		UINT_PTR	uIdx;
> 
> 
> 		uWaitingSocketCount--;
> 		uIdx = m_SocketSet.fd_count;
> 		while ( uIdx != 0 )
> 		{
> 			uIdx--;
> 			if ( p___WSAFDIsSet( m_SocketSet.fd_array[ uIdx ], pSocketSet ) != FALSE )
> 			{
> 				//
> 				// this socket is still available, add a reference to the socket
> 				// port and keep it around to be processed outside of the lock
> 				//
> 				pSocketPorts[ uSocketPortCount ] = m_pSocketPorts[ uIdx ];
> 				pSocketPorts[ uSocketPortCount ]->AddRef();
> 				uSocketPortCount++;
> 				uIdx = 0;
> 			}
> 		}
> 	}
> 	Unlock();
> 
> 	while ( uSocketPortCount != 0 )
> 	{
> 		uSocketPortCount--;
> 		
> 		//
> 		// call the service function and remove the reference
> 		//
> 		fReturn |= (pSocketPorts[ uSocketPortCount ]->*pServiceFunction)();
> 		pSocketPorts[ uSocketPortCount ]->DecRef();
> 	}
> 
> 	return	fReturn;
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\threadpool.h)---()---()---()---()---()---()---()---()---()---()  
.  
.  
50a51
> typedef	struct	_WIN9X_CORE_DATA		WIN9X_CORE_DATA;
63a65
> typedef	void	DIALOG_FUNCTION( void *const pDialogContext );
103c105,106
< 			DNASSERT( m_hIOCompletionPort != NULL );
---
> 			DNASSERT( ( ( OSType() == VER_PLATFORM_WIN32_NT ) && ( m_hIOCompletionPort != NULL ) ) ||
> 					  ( ( OSType() == VER_PLATFORM_WIN32_WINDOWS ) && ( m_hIOCompletionPort == NULL ) ) );
155a159
> 			DNASSERT( ( m_hWinsock2SendComplete != NULL ) || ( OSType() == VER_PLATFORM_WIN32_NT ) );
162a167
> 			DNASSERT( ( m_hWinsock2ReceiveComplete != NULL ) || ( OSType() == VER_PLATFORM_WIN32_NT ) );
170a176,178
> 		HRESULT	AddSocketPort( CSocketPort *const pSocketPort );
> 		void	RemoveSocketPort( CSocketPort *const pSocketPort );
> 
181a190,193
> 		HRESULT	SpawnDialogThread( DIALOG_FUNCTION *const pDialogFunction,
> 								   void *const pDialogContext );
> 
> 		
233a246
> 		CContextFixedPool< CReadIOData, READ_IO_DATA_POOL_CONTEXT >	m_IPXReadIODataPool;	// pool for IPX read data
287a301
> 		HRESULT	Win9xInit( void );
297a312,313
> 		void	CompleteOutstandingSends( void );
> 		void	CompleteOutstandingReceives( void );
298a315,316
> 		static	DWORD WINAPI	PrimaryWin9xThread( void *pParam );
> 		static	DWORD WINAPI	SecondaryWin9xThread( void *pParam );
300a319
> 		static	DWORD WINAPI	DialogThreadProc( void *pParam );
305a325,329
> 		void	ProcessWin9xEvents( WIN9X_CORE_DATA *const pCoreData, const BOOL fProcessDelayedJobs );
> 		void	ProcessWin9xJob( WIN9X_CORE_DATA *const pCoreData );
> 
> 		BOOL	CheckWinsock1IO( FD_SET *const pWinsock1Sockets );
> 		BOOL	ServiceWinsock1Sockets( FD_SET *pSocketSet, PSOCKET_SERVICE_FUNCTION pServiceFunction );
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\unk.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
14a15,16
> #include <WSIPX.h>
> 
38a41
> #include	"Creg.h"
39a43,46
> #include	"strutils.h"
> 
> #include	"resource.h"
> 
52a60,68
> #define DN_REG_LOCAL_SP_ROOT				L"Software\\Microsoft\\DirectPlay8"
> #define DN_REG_LOCAL_SP_SUB					L"\\Service Providers"
> #define DN_REG_LOCAL_SP_SUBKEY				DN_REG_LOCAL_SP_ROOT DN_REG_LOCAL_SP_SUB
> #define DN_REG_LOCAL_WSOCK_IPX_ROOT			L"\\DPNSPWinsockIPX"
> #define DN_REG_LOCAL_WSOCK_TCPIP_ROOT		L"\\DPNSPWinsockTCP"
> #define	DN_REG_KEYNAME_ALL_APPLICATIONS		L"All Applications"
> #define	DN_REG_KEYNAME_FRIENDLY_NAME		L"Friendly Name"
> #define DN_REG_KEYNAME_GUID					L"GUID"
> 
75c91,120
< // this is the vtable for IP.
---
> // these are the vtables for IPX and IP.  One or the other is used depending on
> // what is passed to DoCreateInstance.  The interfaces are presently the same,
> // but are different structures to facilitate potential future changes.
> static IDP8ServiceProviderVtbl	ipxInterface =
> {
> 	DNSP_QueryInterface,
> 	DNSP_AddRef,
> 	DNSP_Release,
> 	DNSP_Initialize,
> 	DNSP_Close,
> 	DNSP_Connect,
> 	DNSP_Disconnect,
> 	DNSP_Listen,
> 	DNSP_SendData,
> 	DNSP_EnumQuery,
> 	DNSP_EnumRespond,
> 	DNSP_CancelCommand,
> 	DNSP_CreateGroup,
> 	DNSP_DeleteGroup,
> 	DNSP_AddToGroup,
> 	DNSP_RemoveFromGroup,
> 	DNSP_GetCaps,
> 	DNSP_SetCaps,
> 	DNSP_ReturnReceiveBuffers,
> 	DNSP_GetAddressInfo,
> 	DNSP_IsApplicationSupported,
> 	DNSP_EnumAdapters,
> 	DNSP_ProxyEnumQuery
> };
> 
139a185,244
> // CreateIPXInterface - create an IPX interface
> //
> // Entry:		Pointer to pointer to SP interface
> //				Pointer to pointer to associated SP data
> //
> // Exit:		Error code
> // ------------------------------
> #undef DPF_MODNAME
> #define DPF_MODNAME "CreateIPXInterface"
> 
> static	HRESULT CreateIPXInterface( IDP8ServiceProvider **const ppiDNSP, CSPData **const ppSPData )
> {
> 	HRESULT 	hr;
> 	CSPData		*pSPData;
> 
> 
> 	DNASSERT( ppiDNSP != NULL );
> 	DNASSERT( ppSPData != NULL );
> 
> 	//
> 	// initialize
> 	//
> 	hr = DPN_OK;
> 	pSPData = NULL;
> 	*ppiDNSP = NULL;
> 	*ppSPData = NULL;
> 
> 	//
> 	// create main data class
> 	//
> 	hr = CreateSPData( &pSPData, &CLSID_DP8SP_IPX, TYPE_IPX, &ipxInterface );
> 	if ( hr != DPN_OK )
> 	{
> 		DNASSERT( pSPData == NULL );
> 		DPF( 0, "Problem creating SPData!" );
> 		DisplayDNError( 0, hr );
> 		goto Failure;
> 	}
> 
> 	DNASSERT( pSPData != NULL );
> 	*ppiDNSP = pSPData->COMInterface();
> 	*ppSPData = pSPData;
> 
> Exit:
> 	return hr;
> 
> Failure:
> 	if ( pSPData != NULL )
> 	{
> 		pSPData->DecRef();
> 		pSPData = NULL;
> 	}
> 
> 	goto Exit;
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
232a338,340
> 	//
> 	// we can either create an IPX instance or an IP instance
> 	//
238a347,350
> 	else if (IsEqualCLSID(rclsid, CLSID_DP8SP_IPX))
> 	{
> 		hr = CreateIPXInterface( ppIDNSP, &pSPData );
> 	}
282c394
< 	return (IsEqualCLSID(rclsid, CLSID_DP8SP_TCPIP));
---
> 	return ( IsEqualCLSID( rclsid, CLSID_DP8SP_TCPIP ) || IsEqualCLSID( rclsid, CLSID_DP8SP_IPX ) );
376a489,740
> #define MAX_RESOURCE_STRING_LENGTH		_MAX_PATH
> 
> #undef DPF_MODNAME
> #define DPF_MODNAME "LoadAndAllocString"
> 
> HRESULT LoadAndAllocString( UINT uiResourceID, wchar_t **lpswzString )
> {
> 	int length;
> 	HRESULT hr;
> 
> 	if( DNGetOSType() == VER_PLATFORM_WIN32_NT )
> 	{
> 		wchar_t wszTmpBuffer[MAX_RESOURCE_STRING_LENGTH];	
> 		
> 		length = LoadStringW( g_hDLLInstance, uiResourceID, wszTmpBuffer, MAX_RESOURCE_STRING_LENGTH );
> 
> 		if( length == 0 )
> 		{
> 			hr = GetLastError();		
> 			
> 			DPF( 0, "Unable to load resource ID %d error 0x%x", uiResourceID, hr );
> 			*lpswzString = NULL;
> 
> 			return hr;
> 		}
> 		else
> 		{
> 			*lpswzString = new wchar_t[length+1];
> 
> 			if( *lpswzString == NULL )
> 			{
> 				DPF( 0, "Alloc failure" );
> 				return DPNERR_OUTOFMEMORY;
> 			}
> 
> 			wcscpy( *lpswzString, wszTmpBuffer );
> 
> 			return DPN_OK;
> 		}
> 	}
> 	else
> 	{
> 		char szTmpBuffer[MAX_RESOURCE_STRING_LENGTH];
> 		
> 		length = LoadStringA( g_hDLLInstance, uiResourceID, szTmpBuffer, MAX_RESOURCE_STRING_LENGTH );
> 
> 		if( length == 0 )
> 		{
> 			hr = GetLastError();		
> 			
> 			DPF( 0, "Unable to load resource ID %d error 0x%x", uiResourceID, hr );
> 			*lpswzString = NULL;
> 
> 			return hr;
> 		}
> 		else
> 		{
> 			*lpswzString = new wchar_t[length+1];
> 
> 			if( *lpswzString == NULL )
> 			{
> 				DPF( 0, "Alloc failure" );
> 				return DPNERR_OUTOFMEMORY;
> 			}
> 
> 			if( STR_jkAnsiToWide( *lpswzString, szTmpBuffer, length+1 ) == 0 )
> 			{
> 				hr = GetLastError();
> 				
> 				DPF( 0, "Unable to upconvert from ansi to unicode hr=0x%x", hr );
> 				return hr;
> 			}
> 
> 			return DPN_OK;
> 		}
> 		
> 	}
> }
> 
> #undef DPF_MODNAME
> #define DPF_MODNAME "RegisterDefaultSettings"
> //
> // RegisterDefaultSettings
> //
> // This function registers the default settings for this module.
> //
> // For DPVOICE.DLL this is making sure the compression provider sub-key is created.
> //
> HRESULT RegisterDefaultSettings()
> {
> 	CRegistry creg;
> 	WCHAR *wszFriendlyName = NULL;
> 	HRESULT hr;
> 
> 	if( !creg.Open( HKEY_LOCAL_MACHINE, DN_REG_LOCAL_SP_ROOT DN_REG_LOCAL_SP_SUB DN_REG_LOCAL_WSOCK_IPX_ROOT, FALSE, TRUE ) )
> 	{
> 		DPFERR( "Cannot create IPX sub-aread" );
> 		return DPNERR_GENERIC;
> 	}
> 
> 	creg.WriteString( DN_REG_KEYNAME_ALL_APPLICATIONS, L"Y" );
> 
> 	hr = LoadAndAllocString( IDS_FRIENDLYNAME_IPX, &wszFriendlyName );
> 
> 	if( FAILED( hr ) )
> 	{
> 		DPF( 0, "Could not load IPX name hr=0x%x", hr );
> 		return hr;
> 	}
> 
> 	// Load from resource file
> 	creg.WriteString( DN_REG_KEYNAME_FRIENDLY_NAME, wszFriendlyName );
> 
> 	delete [] wszFriendlyName;
> 
> 	creg.WriteGUID( DN_REG_KEYNAME_GUID, CLSID_DP8SP_IPX );
> 
> 	creg.Close();
> 
> 	if( !creg.Open( HKEY_LOCAL_MACHINE, DN_REG_LOCAL_SP_ROOT DN_REG_LOCAL_SP_SUB DN_REG_LOCAL_WSOCK_TCPIP_ROOT, FALSE, TRUE ) )
> 	{
> 		DPFERR( "Cannot create TCPIP sub-aread" );
> 		return DPNERR_GENERIC;
> 	}
> 
> 	creg.WriteString( DN_REG_KEYNAME_ALL_APPLICATIONS, L"Y" );
> 
> 	hr = LoadAndAllocString( IDS_FRIENDLYNAME_TCPIP, &wszFriendlyName );
> 
> 	if( FAILED( hr ) )
> 	{
> 		DPF( 0, "Could not load IPX name hr=0x%x", hr );
> 		return hr;
> 	}
> 
> 	// Load from resource file
> 	creg.WriteString( DN_REG_KEYNAME_FRIENDLY_NAME, wszFriendlyName );
> 
> 	delete [] wszFriendlyName;
> 
> 	creg.WriteGUID( DN_REG_KEYNAME_GUID, CLSID_DP8SP_TCPIP );
> 
> 	creg.Close();
> 
> 	return DPN_OK;
> }
> 
> #undef DPF_MODNAME
> #define DPF_MODNAME "UnRegisterDefaultSettings"
> //
> // UnRegisterDefaultSettings
> //
> // This function registers the default settings for this module.
> //
> // For DPVOICE.DLL this is making sure the compression provider sub-key is created.
> //
> HRESULT UnRegisterDefaultSettings()
> {
> 	CRegistry creg;
> 
> 	if( !creg.Open( HKEY_LOCAL_MACHINE, DN_REG_LOCAL_SP_ROOT DN_REG_LOCAL_SP_SUB, FALSE, TRUE ) )
> 	{
> 		DPFERR( "Cannot remove app, does not exist" );
> 	}
> 	else
> 	{
> 		if( !creg.DeleteSubKey( &(DN_REG_LOCAL_WSOCK_IPX_ROOT)[1] ) )
> 		{
> 			DPFERR( "Cannot remove IPX sub-key, could have elements" );
> 		}
> 
> 		if( !creg.DeleteSubKey( &(DN_REG_LOCAL_WSOCK_TCPIP_ROOT)[1] ) )
> 		{
> 			DPFERR( "Cannot remove TCPIP sub-key, could have elements" );
> 		}
> 
> 	}
> 
> 	return DPN_OK;
> }
> 
> #undef DPF_MODNAME
> #define DPF_MODNAME "DllRegisterServer"
> HRESULT WINAPI DllRegisterServer()
> {
> 	HRESULT hr = S_OK;
> 	BOOL fFailed = FALSE;
> 
> 	if( !CRegistry::Register( L"DirectPlay8SPWSock.IPX.1", L"DirectPlay8 WSock IPX Provider Object",
> 							  L"dpnwsock.dll", CLSID_DP8SP_IPX, L"DirectPlay8SPWSock.IPX") )
> 	{
> 		DPFERR( "Could not register dp8 IPX object" );
> 		fFailed = TRUE;
> 	}
> 
> 	if( !CRegistry::Register( L"DirectPlay8SPWSock.TCPIP.1", L"DirectPlay8 WSock TCPIP Provider Object",
> 							  L"dpnwsock.dll", CLSID_DP8SP_TCPIP, L"DirectPlay8SPWSock.TCPIP") )
> 	{
> 		DPFERR( "Could not register dp8 IP object" );
> 		fFailed = TRUE;
> 	}
> 
> 	if( FAILED( hr = RegisterDefaultSettings() ) )
> 	{
> 		DPF( 0, "Could not register default settings hr = 0x%x", hr );
> 		fFailed = TRUE;
> 	}
> 	
> 	if( fFailed )
> 	{
> 		return E_FAIL;
> 	}
> 	else
> 	{
> 		return S_OK;
> 	}
> }
> 
> #undef DPF_MODNAME
> #define DPF_MODNAME "DllUnregisterServer"
> STDAPI DllUnregisterServer()
> {
> 	HRESULT hr = S_OK;
> 	BOOL fFailed = FALSE;
> 
> 	if( !CRegistry::UnRegister(CLSID_DP8SP_IPX) )
> 	{
> 		DPF( 0, "Failed to unregister IPX object" );
> 		fFailed = TRUE;
> 	}
> 
> 	if( !CRegistry::UnRegister(CLSID_DP8SP_TCPIP) )
> 	{
> 		DPF( 0, "Failed to unregister IP object" );
> 		fFailed = TRUE;
> 	}
> 
> 	if( FAILED( hr = UnRegisterDefaultSettings() ) )
> 	{
> 		DPF( 0, "Failed to remove default settings hr=0x%x", hr );
> 	}
> 
> 	if( fFailed )
> 	{
> 		return E_FAIL;
> 	}
> 	else
> 	{
> 		return S_OK;
> 	}
> 
> }
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\utils.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
16a17,18
> #include <WSIPX.h>
> 
19a22
> #include	"DWinsock.h"
48,51d50
< // provides us winsock1/2 support
< #include "dwnsock1.inc"
< #include "dwnsock2.inc"
< 
81a81,82
> static	DWSSTATE	g_dwsState;		// state info for the WS1/2 glue lib
> 
84a86
> static DWORD_PTR	OverrideWinsockVersion( void );
92a95,165
> // OverrideWinsockVersion - override the Winsock version used by the SP
> //
> // Entry:		Nothing
> //
> // Exit:		Max Winsock version to ask for
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME "OverrideWinsockVersion"
> 
> static DWORD_PTR	OverrideWinsockVersion( void )
> {
> 	DWORD_PTR	WinsockVersion;
> 
> 
> 	//
> 	// check for override for OS version and Winsock version
> 	//
> 	g_uOSType = DNGetOSType();
> 	WinsockVersion = 2;
> 
> 	switch ( GetProfileInt( "DirectPlay8", "WinsockVersion", 0 ) )
> 	{
> 		//
> 		// Use Winsock1.  If this is an NT machine, fake it into
> 		// thinking it's Win9x.
> 		//
> 		case 1:
> 		{
> 			DPF( 0, "Winsock overridden to Winsock1 support!" );
> 			if ( g_uOSType == VER_PLATFORM_WIN32_NT )
> 			{
> 				g_uOSType = VER_PLATFORM_WIN32_WINDOWS;
> 			}
> 			WinsockVersion = 1;
> 				
> 			break;
> 		}
> 
> 		//
> 		// Use Winsock2.  If this is an NT machine, fake it into
> 		// thinking it's Win9x.
> 		//
> 		case 2:
> 		{
> 			DPF( 0, "Winsock overridden to Win9x Winsock2 support!" );
> 			if ( g_uOSType == VER_PLATFORM_WIN32_NT )
> 			{
> 				g_uOSType = VER_PLATFORM_WIN32_WINDOWS;
> 			}
> 			DNASSERT( WinsockVersion == 2 );
> 
> 			break;
> 		}
> 
> 		//
> 		// OS default
> 		//
> 		default:
> 		{
> 			DNASSERT( WinsockVersion == 2 );
> 			break;
> 		}
> 	}
> 
> 	return	WinsockVersion;
> }
> //**********************************************************************
> 
> 
> //**********************************************************************
> // ------------------------------
109a183,184
> 	INT			iVersion;
> 	DWORD_PTR	MaxWinsockVersion;
119a195,196
> 	MaxWinsockVersion = OverrideWinsockVersion();
> 
135c212
< 	// initialize Winsock
---
> 	// initialize the bindings to Winsock
137,143c214,215
< 	WORD wVersionRequested;
< 	WSADATA wsaData;
< 	int nRet;
< 
< 	wVersionRequested = MAKEWORD(2,2);
< 	nRet = p_WSAStartup(wVersionRequested, &wsaData);
< 	if (nRet || wVersionRequested != wsaData.wVersion)
---
> 	iVersion = DWSInitWinSock( &g_dwsState, MaxWinsockVersion );
> 	if ( iVersion == 0 )	// failure
145,147c217,219
< 		DPF( 0, "Problem starting winsock!" );
< 	    fReturn = FALSE;
< 	    goto Failure;
---
> 		DPF( 0, "Problem binding dynamic winsock functions!" );
> 		fReturn = FALSE;
> 		goto Failure;
149d220
< 
151a223,224
> 	DPF( 8, "Detected WinSock version %d.%d\n", LOBYTE( iVersion ), HIBYTE( iVersion ) );	
> 
161c234,242
< 		p_WSACleanup();
---
> 		BOOL	fFreeReturn;
> 
> 
> 		fFreeReturn = DWSFreeWinSock( &g_dwsState );
> 		if ( fFreeReturn == FALSE )
> 		{
> 			DPF( 0, "Problem unbinding dynamic winsock functions!" );
> 		}
> 
194a276,278
> 	BOOL	fFreeReturn;
> 
> 
198c282,286
< 	p_WSACleanup();
---
> 	fFreeReturn = DWSFreeWinSock( &g_dwsState );
> 	if ( fFreeReturn == FALSE )
> 	{
> 		DPF( 0, "Problem unbinding dynamic winsock functions!" );
> 	}
205a294,303
> //**********************************************************************
> // ------------------------------
> // GetWinsockVersion - get the version of Winsock
> //
> // Entry:		Nothing
> //
> // Exit:		Winsock version
> // ------------------------------
> #undef DPF_MODNAME
> #define	DPF_MODNAME "GetWinsockVersion"
206a305,308
> INT	GetWinsockVersion( void )
> {
> 	return	g_dwsState.nVersion;
> }
207a310,312
> 
> 
> //**********************************************************************
298a404
> 	INT_PTR iWinsockVersion;
308a415
> 	iWinsockVersion = GetWinsockVersion();
610c717
< /* BUGBUG: [mgere] [xbox] Removed -- multiple adapters not supported on xbox
---
> 
645c752
< */
---
> 
655c762
< /*	AdapterInfo.guid = *pAdapterGUID;
---
> 	AdapterInfo.guid = *pAdapterGUID;
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\utils.h)---()---()---()---()---()---()---()---()---()---()  
.  
.  
48a49,50
> INT		GetWinsockVersion( void );
> 
60c62
< /* BUGBUG: [mgere] [xbox] Removed -- multiple adapters not supported on xbox
---
> 
64d65
< */
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\wsocksp.cpp)---()---()---()---()---()---()---()---()---()---()  
.  
.  
22a23
> #include	<WSIPX.h>
169a171,174
>  	switch ( pSPData->GetType() )
> 	{
> 		case TYPE_IP:
> 		{
171a177,192
> 			break;
> 		}
> 
> 		case TYPE_IPX:
> 		{
> 			DPF( 9, "Attempting to create IPX datagram socket." );
> 			TestSocket = p_socket( AF_IPX, SOCK_DGRAM, NSPROTO_IPX );
> 			break;
> 		}
> 
> 		default:
> 		{
> 			DNASSERT( FALSE );
> 			break;
> 		}
> 	}
239a261
> 		case TYPE_IPX:
334a357
> 	IDirectPlay8Address		*pSPOnlyAddress;
342c365
< 	DNASSERT( ( pEnumQueryData->dwFlags & ~( DPNSPF_OKTOSHOWSTATUS | DPNSPF_NOBROADCASTFALLBACK ) ) == 0 );
---
> 	DNASSERT( ( pEnumQueryData->dwFlags & ~( DPNSPF_OKTOSHOWSTATUS | DPNSPF_OKTOQUERY | DPNSPF_NOBROADCASTFALLBACK ) ) == 0 );
357a381
> 	pSPOnlyAddress = NULL;
407a432,479
> 		HRESULT	hTempResult;
> 		GUID	SPGuid;
> 
> 
> 		//
> 		// get the SP
> 		//
> 		hTempResult = IDirectPlay8Address_GetSP( pEnumQueryData->pAddressDeviceInfo, &SPGuid );
> 		switch ( hTempResult )
> 		{
> 			//
> 			// no problem
> 			//
> 			case DPN_OK:
> 			{
> 				DNASSERT( hr == DPNERR_PENDING );
> 				break;
> 			}
> 
> 			//
> 			// pass these errors throug
> 			//
> 			case DPNERR_OUTOFMEMORY:
> 			{
> 				hr = hTempResult;
> 				goto Failure;
> 				break;
> 			}
> 
> 			//
> 			// remap other errors to addressing errors
> 			//
> 			default:
> 			{
> 				hr = DPNERR_ADDRESSING;
> 				goto Failure;
> 				break;
> 			}
> 		}
> 
> 		//
> 		// The host address is NULL, if we're using TCPIP and we're not allowed to query,
> 		// use the broadcast address.  If we're on IPX, use the broadcast address.
> 		//
> 		if ( ( ( ( pEnumQueryData->dwFlags & DPNSPF_OKTOQUERY ) == 0 ) &&
> 			   ( IsEqualCLSID( SPGuid, CLSID_DP8SP_TCPIP ) != FALSE ) ) ||
> 			 ( IsEqualCLSID( SPGuid, CLSID_DP8SP_IPX ) != FALSE ) )
> 		{
409a482,529
> 		}
>         else
>         {
> 			HRESULT	hTempResult;
> 
> 
> 			//
> 			// Need to build address with just the SP guid.  Get it from the
> 			// device address.
> 			//
> 			DNASSERT( pSPOnlyAddress == NULL );
> 			hTempResult = COM_CoCreateInstance( CLSID_DirectPlay8Address,
> 											NULL,
> 											CLSCTX_INPROC_SERVER,
> 											IID_IDirectPlay8Address,
> 											reinterpret_cast<void**>( &pSPOnlyAddress ) );
> 			if ( hTempResult != S_OK )
> 			{
> 				DPF( 0, "Failed to create SP-Only address when non was supplied!" );
> 				hr = DPNERR_OUTOFMEMORY;
> 				goto Failure;
> 			}
> 
> 			hTempResult = IDirectPlay8Address_SetSP( pSPOnlyAddress, &SPGuid );
> 			switch ( hTempResult )
> 			{
> 				//
> 				// set SP, no problem
> 				//
> 				case DPN_OK:
> 				{
> 					break;
> 				}
> 
> 				//
> 				// failed to set SP, map error to an addressing error
> 				//
> 				default:
> 				{
> 					hr = DPNERR_ADDRESSING;
> 					goto Failure;
> 
> 					break;
> 				}
> 			}
> 
> 			pHostAddress = pSPOnlyAddress;
> 		}
541a662,693
> 			if ( ( ( pEnumQueryData->dwFlags & DPNSPF_OKTOQUERY ) != 0 ) &&
> 				 ( pSPData->GetType() == TYPE_IP ) )
> 			{
> 				//
> 				// Copy the connect data locally and start the dialog.  When the
> 				// dialog completes, the connection will attempt to complete.
> 				// Since the dialog is being popped, this command is in progress,
> 				// not pending.
> 				//
> 				DNASSERT( pSPData != NULL );
> 
> 				pCommand->SetState( COMMAND_STATE_INPROGRESS );
> 				pEndpoint->CopyEnumQueryData( pEnumQueryData, pDeviceAddress );
> 				hr = pEndpoint->ShowSettingsDialog( pSPData->GetThreadPool() );
> 				if ( hr != DPN_OK )
> 				{
> 					DPF( 0, "Problem showing settings dialog for enum query!" );
> 					DisplayDNError( 0, hr );
> 
> 					goto Failure;
> 				}
> 
> 				//
> 				// this endpoint has been handed off, remove our reference to it
> 				//
> 				pEndpoint = NULL;
> 				hr = DPNERR_PENDING;
> 
> 				goto Exit;
> 			}
> 			else
> 			{
555a708,709
> 			}
> 
633a788,793
> 	if ( pSPOnlyAddress != NULL )
> 	{
> 		IDirectPlay8Address_Release( pSPOnlyAddress );
> 		pSPOnlyAddress = NULL;
> 	}
> 
832c992
< 	DNASSERT( ( pConnectData->dwFlags & ~( DPNSPF_OKTOSHOWSTATUS | DPNSPF_RELIABLE | DPNSPF_UNRELIABLE ) ) == 0 );
---
> 	DNASSERT( ( pConnectData->dwFlags & ~( DPNSPF_OKTOSHOWSTATUS | DPNSPF_OKTOQUERY | DPNSPF_RELIABLE | DPNSPF_UNRELIABLE ) ) == 0 );
1044a1205,1233
> 			if ( ( pConnectData->dwFlags & DPNSPF_OKTOQUERY ) != 0 )
> 			{
> 				//
> 				// Copy the connect data locally and start the dialog.  When the
> 				// dialog completes, the connection will attempt to complete.
> 				// Since a dialog is being displayed, the command is in-progress,
> 				// not pending.
> 				//
> 				pCommand->SetState( COMMAND_STATE_INPROGRESS );
> 				pEndpoint->CopyConnectData( pConnectData, pDeviceAddress );
> 				hr = pEndpoint->ShowSettingsDialog( pSPData->GetThreadPool() );
> 				if ( hr != DPN_OK )
> 				{
> 					DPF( 0, "Problem showing settings dialog for connect!" );
> 					DisplayDNError( 0, hr );
> 
> 					goto Failure;
> 				}
> 
> 				//
> 				// this endpoint has been handed off, remove our reference to it
> 				//
> 				pEndpoint = NULL;
> 				hr = DPNERR_PENDING;
> 
> 				goto Exit;
> 			}
> 			else
> 			{
1045a1235,1236
> 			}
> 
1322a1514
> 										  DPNSPF_OKTOQUERY |
1538a1731,1762
> 			if ( ( pListenData->dwFlags & DPNSPF_OKTOQUERY ) != 0 )
> 			{
> 				//
> 				// Copy the listen data locally and start the dialog.  When the
> 				// dialog completes, the connection will attempt to complete.
> 				// Since this endpoint is being handed off to another thread,
> 				// make sure it's in the unbound list.  Since a dialog is being
> 				// displayed, the command state is in progress, not pending.
> 				//
> 				DNASSERT( pSPData != NULL );
> 
> 				pEndpoint->CopyListenData( pListenData, pDeviceAddress );
> 				pCommand->SetState( COMMAND_STATE_INPROGRESS );
> 				hr = pEndpoint->ShowSettingsDialog( pSPData->GetThreadPool() );
> 				if ( hr != DPN_OK )
> 				{
> 					DPF( 0, "Problem showing settings dialog for listen!" );
> 					DisplayDNError( 0, hr );
> 
> 					goto Failure;
> 				}
> 
> 				//
> 				// this endpoint has been handed off, remove out reference to it
> 				//
> 				pEndpoint = NULL;
> 				hr = DPNERR_PENDING;
> 
> 				goto Exit;
> 			}
> 			else
> 			{
1539a1764,1765
> 			}
> 
2457a2684,2695
> 		// Multicast groups are unsupported on IPX.
> 		//
> 		case TYPE_IPX:
> 		{
> 			hr = DPNERR_UNSUPPORTED;
> 			DPF( 0, "Attempted to AddToGroup on IPX!" );
> 			goto Failure;
> 
> 			break;
> 		}
> 
> 		//
2650a2889,2900
> 		//
> 		// multicast groups are unsupported on IPX
> 		//
> 		case TYPE_IPX:
> 		{
> 			hr = DPNERR_UNSUPPORTED;
> 			DPF( 0, "Attempted to AddToGroup on IPX!" );
> 			goto Failure;
> 
> 			break;
> 		}
> 
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\wsocksp.def)---()---()---()---()---()---()---()---()---()---()  
.  
.  
6a7,8
>   DllRegisterServer PRIVATE
>   DllUnregisterServer PRIVATE
.  
.  
()---()---()---()---()---()---()---()---()---(.\sp\wsock\wsocksp.h)---()---()---()---()---()---()---()---()---()---()  
.  
.  
28a29,30
> 	TYPE_IPX			// IPX type
> 
.  
.  
()---()---()---()---()---()---()---()---()---(--)---()---()---()---()---()---()---()---()---()---()  
.  
.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dplay\test\simplepeer\readme.txt ===
//-----------------------------------------------------------------------------
// 
// Sample Name: SimplePeer Sample
// 
// Copyright (c) 1999 Microsoft Corporation. All rights reserved.
// 
//-----------------------------------------------------------------------------


Description
===========
  SimplePeer illustrates how to network to other players on the 
  using DirectPlay.  After joining or creating a session, a simple game 
  begins immediately.  Other players may join the game in progress at any time.  
  
  The game itself is very simple, passing a single DirectPlay message to all connected
  players when the "Wave To other players" button is pressed.

Path
====
  Source: Mssdk\Samples\Multimedia\DPlay\Src\SimplePeer

  Executable: Mssdk\Samples\Multimedia\DPlay\Bin

User's Guide
============
  Enter the player's name, and choose a connection type.  You can either choose 
  "Wait for Lobby Connection" for inside-out lobby launching or choose a 
  service provider.  Use the Multiplayer Games dialog to either search for an 
  active game to join, or to start a new game.  After game has been joined or 
  created, the game begins immediately.  Other players may join the game at 
  any time.  The host player may also leave at anytime since the DirectPlay 
  automatically migrates the host player.

Programming Notes
=================
  This sample was intended to be very simple, showing the basics of using 
  the DirectPlay API.  Here's a quick run through the various steps 
  of SimplePeer:
  
  * Initialize DirectPlay. See WinMain()
        1. Init COM with CoInitialize()
        2. Create a IDirectPlay8Peer* with CoCreateInstance()
        3. Call IDirectPlay8Peer::Initialize to tell DPlay about our message handler
        
  * Prompt to either create or join a DirectPlay game
        This sample calls upon the helper class CNetConnectWizard for this task.
        The uses dialog boxes to query the user what to do, however most games will 
        want to use a fanicer graphics layer.  Here's what CNetConnectWizard does 
        after calling CNetConnectWizard::DoConnectWizard():
        
        1. CNetConnectWizard enumerates and displays DPlay's service providers with
                IDirectPlay8Peer::EnumServiceProviders. 
                See CNetConnectWizard::ConnectionsDlgFillListBox()
        2. Once a service provider has been chosen via the UI it creates a DirectPlay 
                address by creating a IDirectPlay8Address* with CoCreateInstance, and calls 
                IDirectPlay8Address::SetSP with the SP's guid. 
                See CNetConnectWizard::ConnectionsDlgOnOK() 
        3. Call IDirectPlay8Peer::EnumHosts passing in the IDirectPlay8Address* to enum
                all the games in progress on that SP. See CNetConnectWizard::SessionsDlgEnumHosts()
        4. Wait for DPN_MSGID_ENUM_HOSTS_RESPONSE messages to come in on the callback.
                Upon recieve these, put them in a data structure.  You will need to deep copy 
                the DPN_APPLICATION_DESC, and the pAddressSender.  Also be careful to 
                not to add duplicates to the list, and you will need to manage this structure 
                yourself including expiring old enumeratations.  See 
                CNetConnectWizard::SessionsDlgNoteEnumResponse() and 
                CNetConnectWizard::SessionsDlgExpireOldHostEnums().
        5. It displays the list to the user, and allows the user to either choose 
                a game from the list or create a new one.          
           - If joining a game from the list, it calls IDirectPlay8Peer::SetPeerInfo()
                to set the player's name, and then calls IDirectPlay8Peer::Connect()
                passing in the DPN_APPLICATION_DESC*, as well as pAddressSender 
                from the selected game. This will async complete, so wait for 
                DPN_MSGID_CONNECT_COMPLETE, and read the connect result from msg.
                See CNetConnectWizard::SessionsDlgJoinGame().
           - If creating a new game, it calls IDirectPlay8Peer::SetPeerInfo()
                to set the player's name, and then calls IDirectPlay8Peer::Host()
                passing in a DPN_APPLICATION_DESC filled with various info such
                as the game name, max players, and the app guid. It also passes in
                the IDirectPlay8Address* that describes which SP to use.
                See CNetConnectWizard::SessionsDlgCreateGame().
                
  * Handle DirectPlay system messages.  See DirectPlayMessageHandler()
        - Upon DPN_MSGID_ADD_PLAYER it calls IDirectPlay8Peer::GetPeerInfo
                to retrieve the player's name.  It then creates a app specific
                structure for the player, and stores the pointer to this in
                a global linked-list.  Also it passes the pointer to this 
                structure to DPlay in the pvPlayerContext field.  This prompts
                DirectPlay to return that pointer whenever a message from or about
                that player is received, so instead of traversing the linked-list 
                to find the player's structure the pvPlayerContext will be pointing
                directly to the correct structure.
        - Upon DPN_MSGID_DELETE_PLAYER it gets the player's structure point from 
                pDeletePlayerMsg->pvPlayerContext and then removes and deletes 
                the structure from the linked-list.
        - Upon DPN_MSGID_CONNECTION_TERMINATED it shuts down the dialog.
        - Upon DPN_MSGID_RECEIVE it casts pReceiveMsg->pReceiveData into 
                a generic app defined structure that helps it figure out 
                what structure is really contained in pReceiveMsg->pReceiveData.
                For this simple example, if the type is GAME_MSGID_WAVE it 
                just executes an simple action.
                
  * Send a DirectPlay packet
        - If the user presses, "Wave to other players!" button then it 
                calls IDirectPlay8Peer::SendTo() with DPNID_ALL_PLAYERS_GROUP
                and a data message that is simply a DWORD containing GAME_MSGID_WAVE.
                See WaveToAllPlayers().
                
  * Clean up.  See bottom of WinMain()
        1. Call IDirectPlay8Peer::Close()
        2. Release the IDirectPlay8Peer*
        4. Free any app-specific resources
        5. Call CoUninitialize().
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\codecs\wmvlib\docs\UPDFILES.txt ===
%curr%\wmaudio\integer\common\autoprofile.c
%curr%\wmaudio\integer\common\dectables.c
%curr%\wmaudio\integer\common\fft.c
%curr%\wmaudio\integer\common\float.c
%curr%\wmaudio\integer\common\huffDTbl.c            # included
%curr%\wmaudio\integer\common\lowrate_common.c
%curr%\wmaudio\integer\common\lpc.c
%curr%\wmaudio\integer\common\lpc_variants.c
%curr%\wmaudio\integer\common\msaudio.c
%curr%\wmaudio\integer\common\wavfileio.c
%curr%\wmaudio\integer\common\wmaos.c
%curr%\wmaudio\integer\config\config.c
%curr%\wmaudio\integer\decoder\entropydec.c
%curr%\wmaudio\integer\decoder\equalizer.c
%curr%\wmaudio\integer\decoder\huffdec.c
%curr%\wmaudio\integer\decoder\msaudiodec.c
%curr%\wmaudio\integer\decoder\strmdec_wma.c
%curr%\wmaudio\integer\decoder\wmadecS_api.c
%curr%\wmaudio\integer\win32\win32.c
%curr%\wmaudio\integer\x86\x86.c

%curr%\asf\asfparse_v9\wmf.c
%curr%\asf\asfparse_v9\wmfdecode.c
%curr%\asf\asfparse_v9\wmfparse.c
%curr%\asf\asfcommon\wmcguid.cpp

%curr%\wmv2\decoder_c\c\blkdec_wmv.cpp
%curr%\wmv2\decoder_c\c\deblock.cpp
%curr%\wmv2\decoder_c\c\decolorconv_wmv.cpp
%curr%\wmv2\decoder_c\c\dectable.cpp
%curr%\wmv2\decoder_c\c\dectable_mp4x.cpp
%curr%\wmv2\decoder_c\c\frmdec_wmv.cpp
%curr%\wmv2\decoder_c\c\headdec.cpp
%curr%\wmv2\decoder_c\c\huffdec_wmv.cpp
%curr%\wmv2\decoder_c\c\idctdec_wmv2.cpp
%curr%\wmv2\decoder_c\c\init_wmv.cpp
%curr%\wmv2\decoder_c\c\intradec.cpp
%curr%\wmv2\decoder_c\c\localhuffman_wmv.cpp
%curr%\wmv2\decoder_c\c\motioncomp_wmv.cpp
%curr%\wmv2\decoder_c\c\postfilter_wmv.cpp
%curr%\wmv2\decoder_c\c\share.cpp
%curr%\wmv2\decoder_c\c\spatialpredictor_wmv.cpp
%curr%\wmv2\decoder_c\c\strmdec_wmv.cpp
%curr%\wmv2\decoder_c\c\tables_wmv.cpp
%curr%\wmv2\decoder_c\c\vopdec_mp4x.cpp
%curr%\wmv2\decoder_c\c\wmvdec.cpp
%curr%\wmv2\decoder_c\x86\frmdec_x86.cpp
%curr%\wmv2\decoder_c\x86\idctdec_wmv2_x86.cpp
%curr%\wmv2\decoder_c\x86\intradec_x86.cpp
%curr%\wmv2\decoder_c\x86\loopfilter_wmv_x86.cpp
%curr%\wmv2\decoder_c\x86\motioncomp_wmv_x86.cpp
%curr%\wmv2\decoder_c\x86\postfilter_wmv_x86.cpp

%core%\cpudetect\cpudetect.c
%core%\IntelFFT\userdll.c
%core%\IntelFFT\nspmerged.lib

%curr%\wmaudio\integer\common\constants.h
%curr%\wmaudio\integer\common\DecTables.h
%curr%\wmaudio\integer\common\lowrate_common.h
%curr%\wmaudio\integer\common\lpcConst.h
%curr%\wmaudio\integer\common\macros.h
%curr%\wmaudio\integer\common\msaudio.h
%curr%\wmaudio\integer\common\wavfileexio.h
%curr%\wmaudio\integer\common\wavfileio.h
%curr%\wmaudio\integer\common\wmaOS.h
%curr%\wmaudio\integer\decoder\huffdec.h
%curr%\wmaudio\integer\decoder\msaudiodec.h
%curr%\wmaudio\integer\decoder\strmdec_wma.h
%curr%\wmaudio\integer\decoder\wmadecS_api.h
%curr%\wmaudio\integer\include\AutoProfile.h
%curr%\wmaudio\integer\include\config.h
%curr%\wmaudio\integer\x86\macros.h                      # x86macros.h
%curr%\wmaudio\integer\x86\opcodes.h                     # x86opcodes.h

%curr%\asf\asfparse_v9\wmf.h
%curr%\asf\asfparse_v9\wmfdec.h
%curr%\asf\asfparse_v9\wmcdecode.h
%curr%\asf\asfparse_v9\wmfparse.h
%curr%\asf\asfparse_v9\wmftypes.h
%curr%\asf\asfparse_v9\wmf_loadstuff.h
%curr%\asf\wmcguids.h
%curr%\asf\wmc_type.h

%curr%\wmv2\decoder_c\c\bitfields.h
%curr%\wmv2\decoder_c\c\codehead.h
%curr%\wmv2\decoder_c\c\constants_wmv.h
%curr%\wmv2\decoder_c\c\dectable_c.h
%curr%\wmv2\decoder_c\c\idctdec_wmv2.h
%curr%\wmv2\decoder_c\c\localhuffman_wmv.h
%curr%\wmv2\decoder_c\c\macros_wmv.h
%curr%\wmv2\decoder_c\c\motioncomp_wmv.h
%curr%\wmv2\decoder_c\c\opcodes.h
%curr%\wmv2\decoder_c\c\repeatpad_wmv.h
%curr%\wmv2\decoder_c\c\tables_wmv.h
%curr%\wmv2\decoder_c\c\wmvdec_api.h
%curr%\wmv2\decoder_c\c\wmvdec_function.h
%curr%\wmv2\decoder_c\c\wmvdec_member.h
%curr%\wmv2\decoder_c\c\xplatform.h
%curr%\wmv2\decoder_c\c\dectable_mp4x.hpp
%curr%\wmv2\decoder_c\c\huffman_wmv.hpp
%curr%\wmv2\decoder_c\c\postfilter_wmv.hpp
%curr%\wmv2\decoder_c\c\spatialpredictor_wmv.hpp
%curr%\wmv2\decoder_c\c\strmdecdbg.hpp
%curr%\wmv2\decoder_c\c\strmdec_wmv.hpp
%curr%\wmv2\decoder_c\c\typedef.hpp

%core%\IntelFFT\intelFFT.h
%core%\IntelFFT\nsp.h
%core%\IntelFFT\nspalloc.h
%core%\IntelFFT\nsperror.h
%core%\IntelFFT\nspfft.h
%core%\IntelFFT\nspwarn.h
%core%\IntelFFT\userdll.h
%core%\cpudetect\cpudetect.h
%core%\type\basic.hpp
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\codecs\wmvlib\docs\CHANGELOG.txt ===
============================== autoprofile.c

remove
	#define WIN32_LEAN_AND_MEAN

change
    #include "../include/AutoProfile.h"
to
    #include "AutoProfile.h"

============================== include\macros.h

change
	#include "..\x86\macros.h"
to
	#include "x86macros.h"

============================== x86.c

change
	#include "../common/macros.h"
to
	#include "macros.h"

remove
	#include "macros.h"

change
	#include "opcodes.h"
to
	#include "x86opcodes.h"

============================== cpudetect.c

change
	#include "../type/basic.hpp"
to
	#include "basic.hpp"

============================== userdll.c

change
	#if !defined(_MT)
to
	#if defined(ENCODEER) && !defined(_MT)

============================== wmf.c

in function WMCInitnParseHeader, change
    if( WMCDec_Succeeded != rc )
    {
       WMCDecClose (phDecoder);
       phDecoder = NULL;
        // free( pDecoder );
        return rc;
    }
to
    if( WMCDec_Succeeded != rc )
    {
        return rc;
    }

============================== strmdec_wmv.hpp and 

change 4 occurances of
    Bool_WMV bNotEndOfFrame;
    U32_WMV  dwBufferLen;
    U8_WMV*  pBuffer;
    U8_WMV tmp[6];
    memcpy(tmp, pThis->m_pBuffer, pThis->m_cbBuflen);
    WMVDecCBGetData (pThis->m_uiUserData, pThis->m_cbBuflen, (U8_WMV**) &pBuffer, 4, &dwBufferLen, &bNotEndOfFrame);
    if (bNotEndOfFrame){
        if (dwBufferLen == 0 || pBuffer == NULL){
            BS_setInvalid(pThis);
            return 0; //
        }
    }
    //getVideoData(m_cbBuflen, &pBuffer, &dwBufferLen, &bNotEndOfFrame);
    memcpy(pBuffer, tmp, pThis->m_cbBuflen);
    //memcpy(pBuffer, m_pBuffer, m_cbBuflen);
    BS_addDataToBuffer(pThis, (U8_WMV*)pBuffer, dwBufferLen, bNotEndOfFrame);
to call
    inline Bool_WMV WMVDecCBGetDataWithPadding(CInputBitStream_WMV* pThis)
    {
        Bool_WMV bNotEndOfFrame;
        U32_WMV  dwBufferLen;
        U8_WMV*  pBuffer;
        U8_WMV tmp[6];
        memcpy(tmp, pThis->m_pBuffer, pThis->m_cbBuflen);
        WMVDecCBGetData(pThis->m_uiUserData,
                        pThis->m_cbBuflen,
                        &pBuffer,
                        4,
                        &dwBufferLen,
                        &bNotEndOfFrame);

        if (pBuffer == NULL || (bNotEndOfFrame && dwBufferLen == 0)) {
            BS_setInvalid(pThis);
            return FALSE_WMV;
        }

        memcpy(pBuffer, tmp, pThis->m_cbBuflen);
        BS_addDataToBuffer(pThis, pBuffer, dwBufferLen, bNotEndOfFrame);
        return TRUE_WMV;
    }

============================== decolorconv_wmv.cpp

change
#define BITMAP_WIDTH_WMV(width, bitCount) \
    (I32_WMV)((I32_WMV)(((((I32_WMV)width) * ((I32_WMV)bitCount)) + 31L) & (I32_WMV)~31L) / 8L)

to
#define BITMAP_WIDTH_WMV(width, bitCount) \
    (I32_WMV)((I32_WMV)(((((I32_WMV)width) * ((I32_WMV)bitCount)) + 511L) & (I32_WMV)~511L) / 8L)

since xbox surfaces require 64-byte scanline alignment

============================== get rid of nspmerged.lib

sd describe 17554
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\codecs\wmvlib\docs\wmvxmo.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corporation To use the WMV XMO interface, a title should include the header file wmvxmo TitleTo use the WMV XMO interface, a title should include the header file wmvxmo Normal.dot Microsoft Word 10.0To use the WMV XMO interface, a title should include the header file wmvxmo.h and link with either wmvdec.lib (for release build) or wmvdecd.lib (for debug build). HRESULT WmvCreateDecoder(     IN LPCSTR pszFileName,     IN LPFNWMVXMODATACALLBACK pfnCallback,     IN DWORD dwVideoOutputFormat,     IN LPVOID pvContext, OUT LPWMVDECODER* ppWmvDecoder Call this function to create a WMV XMO object. You can either specify a filename or a callback function, but not both. This is similar to the existing WMA XMO. If a filename is specified, we'll read input data from the file. Otherwise, we'll call the callback function to read input data. Video output format must be either WMVVIDEOFORMAT_RGB32 or WMVVIDEOFORMAT_YUY2. pvContext is an arbitrary caller-supplied parameter. It s simply be passed back to the callback function. If the call is successful, ppWmvDecoder will return a reference to the newly created WMV XMO object. typedef DWORD (CALLBACK *LPFNWMVXMODATACALLBACK)(     LPVOID pvContext,     DWORD dwOffset,     DWORD dwByteCount,     LPVOID* ppvData     ); If a callback function is specified during WmvCreateDecoder, the WMV XMO object will invoke the callback function to read input data. pvContext is the same parameter that s passed to WmvCreateDecoder. dwOffset specifies the offset in the WMV file. dwByteCount is the number of bytes requested. If the callback is successful, the return value is the number of data bytes actually read. This value must be equal to dwByteCount or 0. ppvData returns a pointer to the input data. You must make sure the data buffer remains valid until either the next callback or after the WMV XMO object is released, whichever occurs first. If the read fails for some reason, the callback function should return 0. HRESULT IWMVDecoder::GetAudioInfo(     LPWAVEFORMATEX pAudioInfo     ); Returns information about the audio stream. If the input WMV file has more than one audio stream, we'll use the first stream available. If there is no audio stream, you'll get an error code WMVERR_NO_AUDIO_STREAM. Currently, the only possible audio format is 16-bit PCM in interleaved form. HRESULT IWMVDecoder::GetVideoInfo(     LPWMVVIDEOINFO pVideoInfo     ); Returns information about the video stream. Again, if there are multiple video streams, only the first one is used. If there is no video stream, an error code WMVERR_NO_VIDEO_STREAM  will be returned. Once you get the video frame dimensions, you can create the texture surface. typedef struct _WMVVIDEOINFO {     DWORD dwWidth;     DWORD dwHeight;     DWORD dwOutputBitsPerPixel;     FLOAT fFramesPerSecond;     DWORD dwBitsPerSecond; } WMVVIDEOINFO, *PWMVVIDEOINFO, *LPWMVVIDEOINFO; dwWidth and dwHeight specify the video frame dimension. dwOutputBitsPerPixel is 32 when decoding to RGB32 format and 16 when decoding to YUY2 format. fFramesPerSecond is unused. dwBitsPerSecond specifies the compressed video bitrate. HRESULT IWMVDecoder::GetPlayDuration(     PREFERENCE_TIME prtPlayDuration,     PREFERENCE_TIME prtPreroll     ); Returns the length the movie. prtPlayDuration is the total play duration. prtPreroll is the buffering time before the playback begins. This is mostly applicable when playing video that s streamed from the network. For local playback from the hard disk or the DVD disk, you can just ignore the buffering time and start playing right away. In that case, the actual play time should be: playTime = *prtPlayDuration   *prtPreroll; If the timestamp of a decoded audio and video packet is > than the playTime, you should discard the packet. HRESULT IWMVDecoder::ProcessMultiple(     LPCXMEDIAPACKET pVideoOutputPacket,     LPCXMEDIAPACKET pAudioOutputPacket     ); Call this function to get decoded audio and video packets. You must supply both a valid audio packet and a valid video packet. The output video buffer size must be >= the full video frame size. Upon return, you should be prepared to handle all possible combinations below: both video and audio packets have completed data only video packet has completed data only audio packet has completed data neither video nor video packet has completed data The timestamp returned by this call will be relative to the beginning of the WMV file.  When the decoding is completed, the return value will be S_FALSE rather than of DS_OK. When authoring (encoding) the WMV file, make sure video and audio packets are interleaved evenly. E.g. make sure you don t have a long run of audio packets without any video packets, or vice versa. During playback, avoid using small number of large-size audio buffers. Instead, use large number of medium-size audio buffers (e.g. 512 samples each). By default, the WMV XMO object use overlapped I/O. For the cut-scene scenario, where you re just playing the movie without much of anything else going on, you should be able to get away with single-threaded playback (i.e. decoding and rendering on the same thread).  Of course, you can choose use separate threads for decoding and rendering   trading complexity for smoothness. HRESULT IWMVDecoder::Process(     LPCXMEDIAPACKET pInputPacket,     LPCXMEDIAPACKET pOutputPacket     ); Not supported. Use ProcessMultiple method above instead. HRESULT IWMVDecoder::GetInfo(     LPXMEDIAINFO pInfo     ); Not really applicable. The information returned is similar to what WMA XMO returns. HRESULT IWMVDecoder::GetStatus( LPDWORD pdwStatus pdwStatus will always return XMO_STATUSF_ACCEPT_INPUT_DATA | XMO_STATUSF_ACCEPT_OUTPUT_DATA, since the WMV XMO is synchronous. HRESULT IWMVDecoder::Flush(); Reset the WMV XMO object to its initial state. You can then start decoding from the beginning of the WMV file. If this method returns error, you cannot continue to use the WMV XMO object. HRESULT IWMVDecoder::Discontinuity(); Always returns DS_OK. ULONG IWMVDecoder::AddRef(); ULONG IWMVDecoder::Release(); Standard behavior. gdjQ[
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\ampmodstate.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=0
FX_NUMINPUTS=2
FX_NUMOUTPUTS=1
FX_DSPCYCLES=750
FX_YMEMSIZE=0
FX_NUMPARAMS=16
FX_NUMPUBLICPARAMS=0

; DSPBuilder settings
FX_NAME=Mono AmpMod
FX_DSPCODE=ampmod.scr
FX_INPUT0_NAME=In
FX_INPUT1_NAME=Mod
FX_OUTPUT0_NAME=Out
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\chorusstate.ini ===
[FXSTATE]
FX_NUMINPUTS=2
FX_NUMOUTPUTS=1
FX_SCRATCHLENGTH=0
FX_YMEMSIZE=400
FX_DSPCYCLES=2500
FX_NUMPARAMS=64
FX_NUMPUBLICPARAMS=2

; parameters and their descriptions

FX_PARAM0=3300000
FX_PARAM0_NAME=Gain
FX_PARAM0_DESCRIPTION=Gain applied to delay line input when mixing with dry signal
FX_PARAM0_UNITS=None
FX_PARAM0_TYPE=FLOAT
FX_PARAM0_MIN=0
FX_PARAM0_MAX=8388607
FX_PARAM0_ATOMIC=1

FX_PARAM1=30
FX_PARAM1_NAME=Modulation Scale
FX_PARAM1_DESCRIPTION=Determines how much of the delay line to tap. Mod_scale = YMEMSIZE/2^23 = 100% of delay line
FX_PARAM1_UNITS=None
FX_PARAM1_TYPE=FLOAT
FX_PARAM1_MIN=0
; max must be less or equal to YMEMSIZE above
FX_PARAM1_MAX=400
FX_PARAM1_ATOMIC=1


; DSPBuilder settings
FX_NAME=Mono Chorus
FX_DSPCODE=chorus.scr
FX_INPUT0_NAME=In
FX_INPUT1_NAME=Mod
FX_OUTPUT0_NAME=Out
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\chorusstate_stereo.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=0
FX_NUMINPUTS=3
FX_NUMOUTPUTS=2
FX_YMEMSIZE=800
FX_DSPCYCLES=5000
FX_NUMPARAMS=64
FX_NUMPUBLICPARAMS=2

; parameters and their descriptions

FX_PARAM0=3300000
FX_PARAM0_NAME=Gain
FX_PARAM0_DESCRIPTION=Gain applied to delay line input when mixing with dry signal
FX_PARAM0_UNITS=None
FX_PARAM0_TYPE=FLOAT
FX_PARAM0_MIN=0
FX_PARAM0_MAX=8388607
FX_PARAM0_ATOMIC=1

FX_PARAM1=30
FX_PARAM1_NAME=Modulation Scale
FX_PARAM1_DESCRIPTION=Determines how much of the delay line to tap. Mod_scale = YMEMSIZE/2^23 = 100% of delay line
FX_PARAM1_UNITS=None
FX_PARAM1_TYPE=FLOAT
FX_PARAM1_MIN=0
; max must be less or equal to YMEMSIZE/2 above
FX_PARAM1_MAX=400
FX_PARAM1_ATOMIC=1

; DSPBuilder settings
FX_NAME=Stereo Chorus
FX_DSPCODE=chorus_stereo.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_INPUT2_NAME=Mod
FX_OUTPUT0_NAME=Left
FX_OUTPUT1_NAME=Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\delaystate.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=16384
FX_NUMINPUTS=1
FX_NUMOUTPUTS=2
FX_DSPCYCLES=2000
FX_YMEMSIZE=256
FX_NUMPARAMS=64
FX_NUMPUBLICPARAMS=0

; DSPBuilder settings
FX_NAME=Mono Delay Line
FX_DSPCODE=delay.scr
FX_INPUT0_NAME=In
FX_OUTPUT0_NAME=Out
FX_OUTPUT1_NAME=Temp
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\ampmodstate_stereo.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=0
FX_NUMINPUTS=3
FX_NUMOUTPUTS=2
FX_DSPCYCLES=1500
FX_YMEMSIZE=0
FX_NUMPARAMS=16
FX_NUMPUBLICPARAMS=0

; DSPBuilder settings
FX_NAME=Stereo AmpMod
FX_DSPCODE=ampmod_stereo.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_INPUT2_NAME=Mod
FX_OUTPUT0_NAME=Left
FX_OUTPUT1_NAME=Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\defaultScratchImg.ini ===
[MAIN]
IMAGE_FRIENDLY_NAME=DSSTDFX
FX_NUMTEMPBINS=31
GRAPH0=I3DL2_CHAIN
GRAPH1=CHORUS_CHAIN
GRAPH2=FLANGE_CHAIN
GRAPH3=AMPMOD_CHAIN
GRAPH4=ECHO_CHAIN
GRAPH5=IIR2_CHAIN
GRAPH6=REVERB_CHAIN
GRAPH7=RMS_CHAIN

[I3DL2_CHAIN]
FX0=I3DL2_REVERB
FX1=XTALK

[I3DL2_CHAIN_FX0_I3DL2_REVERB]
FX_MIXOUTPUT=1
FX_DSPCODE=reverb24k.scr
FX_DSPSTATE=reverb_default_24k_state.ini
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_INPUT0=VPMIXBIN_I3DL2SEND
FX_INPUT1=VPMIXBIN_I3DL2SEND
FX_OUTPUT0=GPMIXBIN_XTLK_FL
FX_OUTPUT1=GPMIXBIN_XTLK_FR
FX_OUTPUT2=GPMIXBIN_XTLK_BL
FX_OUTPUT3=GPMIXBIN_XTLK_BR

; I3DL2 reverb uses 31 temp bins for scratch memory.  This memory can be 
; overwritten and reused by other effects in chains following this one.

FX_OUTPUT4=GPTEMPBIN0
FX_OUTPUT5=GPTEMPBIN1
FX_OUTPUT6=GPTEMPBIN2
FX_OUTPUT7=GPTEMPBIN3
FX_OUTPUT8=GPTEMPBIN4
FX_OUTPUT9=GPTEMPBIN5
FX_OUTPUT10=GPTEMPBIN6
FX_OUTPUT11=GPTEMPBIN7
FX_OUTPUT12=GPTEMPBIN8
FX_OUTPUT13=GPTEMPBIN9
FX_OUTPUT14=GPTEMPBIN10
FX_OUTPUT15=GPTEMPBIN11
FX_OUTPUT16=GPTEMPBIN12
FX_OUTPUT17=GPTEMPBIN13
FX_OUTPUT18=GPTEMPBIN14
FX_OUTPUT19=GPTEMPBIN15
FX_OUTPUT20=GPTEMPBIN16
FX_OUTPUT21=GPTEMPBIN17
FX_OUTPUT22=GPTEMPBIN18
FX_OUTPUT23=GPTEMPBIN19
FX_OUTPUT24=GPTEMPBIN20
FX_OUTPUT25=GPTEMPBIN21
FX_OUTPUT26=GPTEMPBIN22
FX_OUTPUT27=GPTEMPBIN23
FX_OUTPUT28=GPTEMPBIN24
FX_OUTPUT29=GPTEMPBIN25
FX_OUTPUT30=GPTEMPBIN26
FX_OUTPUT31=GPTEMPBIN27
FX_OUTPUT32=GPTEMPBIN28
FX_OUTPUT33=GPTEMPBIN29
FX_OUTPUT34=GPTEMPBIN30

[I3DL2_CHAIN_FX1_XTALK]
FX_MIXOUTPUT=1
FX_DSPCODE=xtalk.scr
FX_DSPSTATE=xtalkstate.ini
FX_NUMINPUTS=4
FX_NUMOUTPUTS=4
FX_INPUT0=VPMIXBIN_XTLK_FL
FX_INPUT1=VPMIXBIN_XTLK_FR
FX_INPUT2=VPMIXBIN_XTLK_BL
FX_INPUT3=VPMIXBIN_XTLK_BR
FX_OUTPUT0=GPMIXBIN_FRONTLEFT
FX_OUTPUT1=GPMIXBIN_FRONTRIGHT
FX_OUTPUT2=GPMIXBIN_BACKLEFT
FX_OUTPUT3=GPMIXBIN_BACKRIGHT

[FLANGE_CHAIN]
FX0=FLANGE

[FLANGE_CHAIN_FX0_FLANGE]
FX_MIXOUTPUT=1
FX_DSPCODE=flange_stereo.scr
FX_DSPSTATE=flangestate_stereo.ini
FX_NUMINPUTS=3
FX_NUMOUTPUTS=2
FX_INPUT0=VPMIXBIN_FXSEND3
FX_INPUT1=VPMIXBIN_FXSEND4
FX_INPUT2=VPMIXBIN_FXSEND11
FX_OUTPUT0=GPMIXBIN_FRONTLEFT
FX_OUTPUT1=GPMIXBIN_FRONTRIGHT

[ECHO_CHAIN]
FX0=ECHO

[ECHO_CHAIN_FX0_ECHO]
FX_MIXOUTPUT=1
FX_DSPCODE=echo_stereo.scr
FX_DSPSTATE=echostate_stereo.ini
FX_NUMINPUTS=2
FX_NUMOUTPUTS=2
FX_INPUT0=VPMIXBIN_FXSEND5
FX_INPUT1=VPMIXBIN_FXSEND6
FX_OUTPUT0=GPMIXBIN_FRONTLEFT
FX_OUTPUT1=GPMIXBIN_FRONTRIGHT

[IIR2_CHAIN]
FX0=IIR2_LEFT
FX1=IIR2_RIGHT

[IIR2_CHAIN_FX0_IIR2_LEFT]
FX_MIXOUTPUT=1
FX_DSPCODE=iir2.scr
FX_DSPSTATE=iir2state.ini
FX_NUMINPUTS=1
FX_NUMOUTPUTS=1
FX_INPUT0=VPMIXBIN_FXSEND7
FX_OUTPUT0=GPMIXBIN_FRONTLEFT

[IIR2_CHAIN_FX1_IIR2_RIGHT]
FX_MIXOUTPUT=1
FX_DSPCODE=iir2.scr
FX_DSPSTATE=iir2state.ini
FX_NUMINPUTS=1
FX_NUMOUTPUTS=1
FX_INPUT0=VPMIXBIN_FXSEND8
FX_OUTPUT0=GPMIXBIN_FRONTRIGHT


[AMPMOD_CHAIN]
FX0=AMPMOD

[AMPMOD_CHAIN_FX0_AMPMOD]
FX_MIXOUTPUT=1
FX_DSPCODE=ampmod_stereo.scr
FX_DSPSTATE=ampmodstate_stereo.ini
FX_NUMINPUTS=3
FX_NUMOUTPUTS=2
FX_INPUT0=VPMIXBIN_FXSEND9
FX_INPUT1=VPMIXBIN_FXSEND10
FX_INPUT2=VPMIXBIN_FXSEND12
FX_OUTPUT0=GPMIXBIN_FRONTLEFT
FX_OUTPUT1=GPMIXBIN_FRONTRIGHT

[CHORUS_CHAIN]
FX0=CHORUS

[CHORUS_CHAIN_FX0_CHORUS]
FX_MIXOUTPUT=1
FX_DSPCODE=chorus_stereo.scr
FX_DSPSTATE=chorusstate_stereo.ini
FX_NUMINPUTS=3
FX_NUMOUTPUTS=2
FX_INPUT0=VPMIXBIN_FXSEND1
FX_INPUT1=VPMIXBIN_FXSEND1
FX_INPUT2=VPMIXBIN_FXSEND2
FX_OUTPUT0=GPMIXBIN_FRONTLEFT
FX_OUTPUT1=GPMIXBIN_FRONTRIGHT

[REVERB_CHAIN]
FX0=MINI_REVERB

[REVERB_CHAIN_FX0_MINI_REVERB]
FX_MIXOUTPUT=1
FX_DSPCODE=reverb24k.scr
FX_DSPSTATE=reverb_alley_24k_state.ini
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_INPUT0=VPMIXBIN_FXSEND0
FX_INPUT1=VPMIXBIN_FXSEND0
FX_OUTPUT0=GPMIXBIN_FRONTLEFT
FX_OUTPUT1=GPMIXBIN_FRONTRIGHT
FX_OUTPUT2=GPMIXBIN_BACKLEFT
FX_OUTPUT3=GPMIXBIN_BACKRIGHT

; I3DL2 reverb uses 31 temp bins for scratch memory.  This memory can be 
; overwritten and reused by other effects in chains following this one.

FX_OUTPUT4=GPTEMPBIN0
FX_OUTPUT5=GPTEMPBIN1
FX_OUTPUT6=GPTEMPBIN2
FX_OUTPUT7=GPTEMPBIN3
FX_OUTPUT8=GPTEMPBIN4
FX_OUTPUT9=GPTEMPBIN5
FX_OUTPUT10=GPTEMPBIN6
FX_OUTPUT11=GPTEMPBIN7
FX_OUTPUT12=GPTEMPBIN8
FX_OUTPUT13=GPTEMPBIN9
FX_OUTPUT14=GPTEMPBIN10
FX_OUTPUT15=GPTEMPBIN11
FX_OUTPUT16=GPTEMPBIN12
FX_OUTPUT17=GPTEMPBIN13
FX_OUTPUT18=GPTEMPBIN14
FX_OUTPUT19=GPTEMPBIN15
FX_OUTPUT20=GPTEMPBIN16
FX_OUTPUT21=GPTEMPBIN17
FX_OUTPUT22=GPTEMPBIN18
FX_OUTPUT23=GPTEMPBIN19
FX_OUTPUT24=GPTEMPBIN20
FX_OUTPUT25=GPTEMPBIN21
FX_OUTPUT26=GPTEMPBIN22
FX_OUTPUT27=GPTEMPBIN23
FX_OUTPUT28=GPTEMPBIN24
FX_OUTPUT29=GPTEMPBIN25
FX_OUTPUT30=GPTEMPBIN26
FX_OUTPUT31=GPTEMPBIN27
FX_OUTPUT32=GPTEMPBIN28
FX_OUTPUT33=GPTEMPBIN29
FX_OUTPUT34=GPTEMPBIN30

[RMS_CHAIN]
FX0=RMS

[RMS_CHAIN_FX0_RMS]
FX_MIXOUTPUT=1
FX_DSPCODE=rms.scr
FX_DSPSTATE=rmsstate.ini
FX_NUMINPUTS=6
FX_NUMOUTPUTS=0
FX_INPUT0=VPMIXBIN_FRONTLEFT
FX_INPUT1=VPMIXBIN_FRONTRIGHT
FX_INPUT2=VPMIXBIN_CENTER
FX_INPUT3=VPMIXBIN_LFE
FX_INPUT4=VPMIXBIN_BACKLEFT
FX_INPUT5=VPMIXBIN_BACKRIGHT
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\echostate_stereo.ini ===
[FXSTATE]
FX_NUMINPUTS=2
FX_NUMOUTPUTS=2
FX_SCRATCHLENGTH=32768
FX_DSPCYCLES=4250
FX_YMEMSIZE=512
FX_NUMPARAMS=64
FX_NUMPUBLICPARAMS=1

; parameters and their descriptions

FX_PARAM0=6700000
FX_PARAM0_NAME=Gain
FX_PARAM0_DESCRIPTION=Gain applied to delay line input when mixing with dry signal
FX_PARAM0_UNITS=None
FX_PARAM0_TYPE=FLOAT
FX_PARAM0_MIN=0
FX_PARAM0_MAX=8388607
FX_PARAM0_ATOMIC=1


; DSPBuilder settings
FX_NAME=Stereo Echo
FX_DSPCODE=echo_stereo.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Left
FX_OUTPUT1_NAME=Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\distortionstate.ini ===
[FXSTATE]
FX_NUMINPUTS=1
FX_NUMOUTPUTS=1
FX_SCRATCHLENGTH=0
FX_YMEMSIZE=8
FX_DSPCYCLES=300
FX_NUMPARAMS=32
FX_NUMPUBLICPARAMS=11

; gain
FX_PARAM0=3000000
FX_PARAM0_NAME=Gain
FX_PARAM0_DESCRIPTION=Input Gain
FX_PARAM0_UNITS=None
FX_PARAM0_TYPE=FLOAT
FX_PARAM0_MIN=0
FX_PARAM0_MAX=8388607
FX_PARAM0_ATOMIC=1

; prefilter coefficients
FX_PARAM1=69559
FX_PARAM1_NAME=Pre-filter B0
FX_PARAM1_DESCRIPTION=B0 Coefficient of Pre-filter IIR2
FX_PARAM1_UNITS=None
FX_PARAM1_TYPE=FLOAT
FX_PARAM1_MIN=8388608
FX_PARAM1_MAX=8388607
FX_PARAM1_ATOMIC=0

FX_PARAM2=139118
FX_PARAM2_NAME=Pre-filter B1
FX_PARAM2_DESCRIPTION=B1 Coefficient of Pre-filter IIR2
FX_PARAM2_UNITS=None
FX_PARAM2_TYPE=FLOAT
FX_PARAM2_MIN=8388608
FX_PARAM2_MAX=8388607
FX_PARAM2_ATOMIC=0

FX_PARAM3=69559
FX_PARAM3_NAME=Pre-filter B2
FX_PARAM3_DESCRIPTION=B2 Coefficient of Pre-filter IIR2
FX_PARAM3_UNITS=None
FX_PARAM3_TYPE=FLOAT
FX_PARAM3_MIN=8388608
FX_PARAM3_MAX=8388607
FX_PARAM3_ATOMIC=0

FX_PARAM4=6621656
FX_PARAM4_NAME=Pre-filter A1
FX_PARAM4_DESCRIPTION=A1 Coefficient of Pre-filter IIR2
FX_PARAM4_UNITS=None
FX_PARAM4_TYPE=FLOAT
FX_PARAM4_MIN=8388608
FX_PARAM4_MAX=8388607
FX_PARAM4_ATOMIC=0

FX_PARAM5=14071628
FX_PARAM5_NAME=Pre-filter A2
FX_PARAM5_DESCRIPTION=A2 Coefficient of Pre-filter IIR2
FX_PARAM5_UNITS=None
FX_PARAM5_TYPE=FLOAT
FX_PARAM5_MIN=8388608
FX_PARAM5_MAX=8388607
FX_PARAM5_ATOMIC=0

; post filter coefficients
FX_PARAM6=4268104
FX_PARAM6_NAME=Post-filter B0
FX_PARAM6_DESCRIPTION=B0 Coefficient of Post-filter IIR2
FX_PARAM6_UNITS=None
FX_PARAM6_TYPE=FLOAT
FX_PARAM6_MIN=8388608
FX_PARAM6_MAX=8388607
FX_PARAM6_ATOMIC=0

FX_PARAM7=8522616
FX_PARAM7_NAME=Post-filter B1
FX_PARAM7_DESCRIPTION=B1 Coefficient of Post-filter IIR2
FX_PARAM7_UNITS=None
FX_PARAM7_TYPE=FLOAT
FX_PARAM7_MIN=8388608
FX_PARAM7_MAX=8388607
FX_PARAM7_ATOMIC=0

FX_PARAM8=4070992
FX_PARAM8_NAME=Post-filter B2
FX_PARAM8_DESCRIPTION=B2 Coefficient of Post-filter IIR2
FX_PARAM8_UNITS=None
FX_PARAM8_TYPE=FLOAT
FX_PARAM8_MIN=8388608
FX_PARAM8_MAX=8388607
FX_PARAM8_ATOMIC=0

FX_PARAM9=8254600
FX_PARAM9_NAME=Post-filter A1
FX_PARAM9_DESCRIPTION=A1 Coefficient of Post-filter IIR2
FX_PARAM9_UNITS=None
FX_PARAM9_TYPE=FLOAT
FX_PARAM9_MIN=8388608
FX_PARAM9_MAX=8388607
FX_PARAM9_ATOMIC=0

FX_PARAM10=12632424
FX_PARAM10_NAME=Post-filter A2
FX_PARAM10_DESCRIPTION=A2 Coefficient of Post-filter IIR2
FX_PARAM10_UNITS=None
FX_PARAM10_TYPE=FLOAT
FX_PARAM10_MIN=8388608
FX_PARAM10_MAX=8388607
FX_PARAM10_ATOMIC=0



; DSPBuilder settings
FX_NAME=Distortion
FX_DSPCODE=distortion.scr
FX_INPUT0_NAME=In
FX_OUTPUT0_NAME=Out
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\echostate.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=16384
FX_NUMINPUTS=1
FX_NUMOUTPUTS=1
FX_DSPCYCLES=2000
FX_YMEMSIZE=256
; number of words the DSP uses for XRAM state
FX_NUMPARAMS=64
FX_NUMPUBLICPARAMS=1

; parameters and their descriptions

FX_PARAM0=6700000
FX_PARAM0_NAME=Gain
FX_PARAM0_DESCRIPTION=Gain applied to delay line input when mixing with dry signal
FX_PARAM0_UNITS=None
FX_PARAM0_TYPE=FLOAT
FX_PARAM0_MIN=0
FX_PARAM0_MAX=8388607
FX_PARAM0_ATOMIC=1

; DSPBuilder settings
FX_NAME=Mono Echo
FX_DSPCODE=echo.scr
FX_INPUT0_NAME=In
FX_OUTPUT0_NAME=Out
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\flangestate.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=0
FX_NUMINPUTS=2
FX_NUMOUTPUTS=1
FX_YMEMSIZE=200
FX_DSPCYCLES=2500
FX_NUMPARAMS=64
FX_NUMPUBLICPARAMS=2

; parameters and their descriptions

FX_PARAM0=6700000
FX_PARAM0_NAME=Gain
FX_PARAM0_DESCRIPTION=Gain applied to delay line input when mixing with dry signal
FX_PARAM0_UNITS=None
FX_PARAM0_TYPE=FLOAT
FX_PARAM0_MIN=0
FX_PARAM0_MAX=8388607
FX_PARAM0_ATOMIC=1

FX_PARAM1=25
FX_PARAM1_NAME=Modulation Scale
FX_PARAM1_DESCRIPTION=Determines how much of the delay line to tap. Mod_scale = YMEMSIZE/2^23 = 100% of delay line
FX_PARAM1_UNITS=None
FX_PARAM1_TYPE=FLOAT
FX_PARAM1_MIN=0
; max must less or equal to YMEMSIZE above
FX_PARAM1_MAX=200
FX_PARAM1_ATOMIC=1

; DSPBuilder settings
FX_NAME=Mono Flange
FX_DSPCODE=flange.scr
FX_INPUT0_NAME=In
FX_INPUT1_NAME=Mod
FX_OUTPUT0_NAME=Out
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\dsstdfx.ini ===
[MAIN]
IMAGE_FRIENDLY_NAME=DSSTDFX
FX_NUMTEMPBINS=31
GRAPH0=I3DL2_CHAIN
GRAPH1=CHORUS_CHAIN
GRAPH2=FLANGE_CHAIN
GRAPH3=AMPMOD_CHAIN
GRAPH4=ECHO_CHAIN
GRAPH5=IIR2_CHAIN
GRAPH6=REVERB_CHAIN

[I3DL2_CHAIN]
FX0=I3DL2_REVERB
FX1=XTALK

[I3DL2_CHAIN_FX0_I3DL2_REVERB]
FX_MIXOUTPUT=1
FX_DSPCODE=reverb24k.scr
FX_DSPSTATE=reverb_default_24k_state.ini
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_INPUT0=VPMIXBIN_I3DL2SEND
FX_INPUT1=VPMIXBIN_I3DL2SEND
FX_OUTPUT0=GPMIXBIN_XTLK_FL
FX_OUTPUT1=GPMIXBIN_XTLK_FR
FX_OUTPUT2=GPMIXBIN_XTLK_BL
FX_OUTPUT3=GPMIXBIN_XTLK_BR

; I3DL2 reverb uses 31 temp bins for scratch memory.  This memory can be 
; overwritten and reused by other effects in chains following this one.

FX_OUTPUT4=GPTEMPBIN0
FX_OUTPUT5=GPTEMPBIN1
FX_OUTPUT6=GPTEMPBIN2
FX_OUTPUT7=GPTEMPBIN3
FX_OUTPUT8=GPTEMPBIN4
FX_OUTPUT9=GPTEMPBIN5
FX_OUTPUT10=GPTEMPBIN6
FX_OUTPUT11=GPTEMPBIN7
FX_OUTPUT12=GPTEMPBIN8
FX_OUTPUT13=GPTEMPBIN9
FX_OUTPUT14=GPTEMPBIN10
FX_OUTPUT15=GPTEMPBIN11
FX_OUTPUT16=GPTEMPBIN12
FX_OUTPUT17=GPTEMPBIN13
FX_OUTPUT18=GPTEMPBIN14
FX_OUTPUT19=GPTEMPBIN15
FX_OUTPUT20=GPTEMPBIN16
FX_OUTPUT21=GPTEMPBIN17
FX_OUTPUT22=GPTEMPBIN18
FX_OUTPUT23=GPTEMPBIN19
FX_OUTPUT24=GPTEMPBIN20
FX_OUTPUT25=GPTEMPBIN21
FX_OUTPUT26=GPTEMPBIN22
FX_OUTPUT27=GPTEMPBIN23
FX_OUTPUT28=GPTEMPBIN24
FX_OUTPUT29=GPTEMPBIN25
FX_OUTPUT30=GPTEMPBIN26
FX_OUTPUT31=GPTEMPBIN27
FX_OUTPUT32=GPTEMPBIN28
FX_OUTPUT33=GPTEMPBIN29
FX_OUTPUT34=GPTEMPBIN30

[I3DL2_CHAIN_FX1_XTALK]
FX_MIXOUTPUT=1
FX_DSPCODE=xtalk.scr
FX_DSPSTATE=xtalkstate.ini
FX_NUMINPUTS=4
FX_NUMOUTPUTS=4
FX_INPUT0=VPMIXBIN_XTLK_FL
FX_INPUT1=VPMIXBIN_XTLK_FR
FX_INPUT2=VPMIXBIN_XTLK_BL
FX_INPUT3=VPMIXBIN_XTLK_BR
FX_OUTPUT0=GPMIXBIN_FRONTLEFT
FX_OUTPUT1=GPMIXBIN_FRONTRIGHT
FX_OUTPUT2=GPMIXBIN_BACKLEFT
FX_OUTPUT3=GPMIXBIN_BACKRIGHT

[FLANGE_CHAIN]
FX0=FLANGE

[FLANGE_CHAIN_FX0_FLANGE]
FX_MIXOUTPUT=1
FX_DSPCODE=flange_stereo.scr
FX_DSPSTATE=flangestate_stereo.ini
FX_NUMINPUTS=3
FX_NUMOUTPUTS=2
FX_INPUT0=VPMIXBIN_FXSEND3
FX_INPUT1=VPMIXBIN_FXSEND4
FX_INPUT2=VPMIXBIN_FXSEND11
FX_OUTPUT0=GPMIXBIN_FRONTLEFT
FX_OUTPUT1=GPMIXBIN_FRONTRIGHT

[ECHO_CHAIN]
FX0=ECHO

[ECHO_CHAIN_FX0_ECHO]
FX_MIXOUTPUT=1
FX_DSPCODE=echo_stereo.scr
FX_DSPSTATE=echostate_stereo.ini
FX_NUMINPUTS=2
FX_NUMOUTPUTS=2
FX_INPUT0=VPMIXBIN_FXSEND5
FX_INPUT1=VPMIXBIN_FXSEND6
FX_OUTPUT0=GPMIXBIN_FRONTLEFT
FX_OUTPUT1=GPMIXBIN_FRONTRIGHT

[IIR2_CHAIN]
FX0=IIR2_LEFT
FX1=IIR2_RIGHT

[IIR2_CHAIN_FX0_IIR2_LEFT]
FX_MIXOUTPUT=1
FX_DSPCODE=iir2.scr
FX_DSPSTATE=iir2state.ini
FX_NUMINPUTS=1
FX_NUMOUTPUTS=1
FX_INPUT0=VPMIXBIN_FXSEND7
FX_OUTPUT0=GPMIXBIN_FRONTLEFT

[IIR2_CHAIN_FX1_IIR2_RIGHT]
FX_MIXOUTPUT=1
FX_DSPCODE=iir2.scr
FX_DSPSTATE=iir2state.ini
FX_NUMINPUTS=1
FX_NUMOUTPUTS=1
FX_INPUT0=VPMIXBIN_FXSEND8
FX_OUTPUT0=GPMIXBIN_FRONTRIGHT


[AMPMOD_CHAIN]
FX0=AMPMOD

[AMPMOD_CHAIN_FX0_AMPMOD]
FX_MIXOUTPUT=1
FX_DSPCODE=ampmod_stereo.scr
FX_DSPSTATE=ampmodstate_stereo.ini
FX_NUMINPUTS=3
FX_NUMOUTPUTS=2
FX_INPUT0=VPMIXBIN_FXSEND9
FX_INPUT1=VPMIXBIN_FXSEND10
FX_INPUT2=VPMIXBIN_FXSEND12
FX_OUTPUT0=GPMIXBIN_FRONTLEFT
FX_OUTPUT1=GPMIXBIN_FRONTRIGHT

[CHORUS_CHAIN]
FX0=CHORUS

[CHORUS_CHAIN_FX0_CHORUS]
FX_MIXOUTPUT=1
FX_DSPCODE=chorus_stereo.scr
FX_DSPSTATE=chorusstate_stereo.ini
FX_NUMINPUTS=3
FX_NUMOUTPUTS=2
FX_INPUT0=VPMIXBIN_FXSEND1
FX_INPUT1=VPMIXBIN_FXSEND1
FX_INPUT2=VPMIXBIN_FXSEND2
FX_OUTPUT0=GPMIXBIN_FRONTLEFT
FX_OUTPUT1=GPMIXBIN_FRONTRIGHT

[REVERB_CHAIN]
FX0=MINI_REVERB

[REVERB_CHAIN_FX0_MINI_REVERB]
FX_MIXOUTPUT=1
FX_DSPCODE=reverb24k.scr
FX_DSPSTATE=reverb_alley_24k_state.ini
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_INPUT0=VPMIXBIN_FXSEND0
FX_INPUT1=VPMIXBIN_FXSEND0
FX_OUTPUT0=GPMIXBIN_FRONTLEFT
FX_OUTPUT1=GPMIXBIN_FRONTRIGHT
FX_OUTPUT2=GPMIXBIN_BACKLEFT
FX_OUTPUT3=GPMIXBIN_BACKRIGHT

; I3DL2 reverb uses 31 temp bins for scratch memory.  This memory can be 
; overwritten and reused by other effects in chains following this one.

FX_OUTPUT4=GPTEMPBIN0
FX_OUTPUT5=GPTEMPBIN1
FX_OUTPUT6=GPTEMPBIN2
FX_OUTPUT7=GPTEMPBIN3
FX_OUTPUT8=GPTEMPBIN4
FX_OUTPUT9=GPTEMPBIN5
FX_OUTPUT10=GPTEMPBIN6
FX_OUTPUT11=GPTEMPBIN7
FX_OUTPUT12=GPTEMPBIN8
FX_OUTPUT13=GPTEMPBIN9
FX_OUTPUT14=GPTEMPBIN10
FX_OUTPUT15=GPTEMPBIN11
FX_OUTPUT16=GPTEMPBIN12
FX_OUTPUT17=GPTEMPBIN13
FX_OUTPUT18=GPTEMPBIN14
FX_OUTPUT19=GPTEMPBIN15
FX_OUTPUT20=GPTEMPBIN16
FX_OUTPUT21=GPTEMPBIN17
FX_OUTPUT22=GPTEMPBIN18
FX_OUTPUT23=GPTEMPBIN19
FX_OUTPUT24=GPTEMPBIN20
FX_OUTPUT25=GPTEMPBIN21
FX_OUTPUT26=GPTEMPBIN22
FX_OUTPUT27=GPTEMPBIN23
FX_OUTPUT28=GPTEMPBIN24
FX_OUTPUT29=GPTEMPBIN25
FX_OUTPUT30=GPTEMPBIN26
FX_OUTPUT31=GPTEMPBIN27
FX_OUTPUT32=GPTEMPBIN28
FX_OUTPUT33=GPTEMPBIN29
FX_OUTPUT34=GPTEMPBIN30
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\flangestate_stereo.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=0
FX_NUMINPUTS=3
FX_NUMOUTPUTS=2
FX_YMEMSIZE=200
FX_DSPCYCLES=5000
FX_NUMPARAMS=64
FX_NUMPUBLICPARAMS=2

; parameters and their descriptions

FX_PARAM0=6700000
FX_PARAM0_NAME=Gain
FX_PARAM0_DESCRIPTION=Gain applied to delay line input when mixing with dry signal
FX_PARAM0_UNITS=None
FX_PARAM0_TYPE=FLOAT
FX_PARAM0_MIN=0
FX_PARAM0_MAX=8388607
FX_PARAM0_ATOMIC=1

FX_PARAM1=25
FX_PARAM1_NAME=Modulation Scale
FX_PARAM1_DESCRIPTION=Determines how much of the delay line to tap. Mod_scale = YMEMSIZE/2^23 = 100% of delay line
FX_PARAM1_UNITS=None
FX_PARAM1_TYPE=FLOAT
FX_PARAM1_MIN=0
; max must be less or equal to YMEMSIZE/2 above
FX_PARAM1_MAX=100
FX_PARAM1_ATOMIC=1



; DSPBuilder settings
FX_NAME=Stereo Flange
FX_DSPCODE=flange_stereo.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_INPUT2_NAME=Mod
FX_OUTPUT0_NAME=Left
FX_OUTPUT1_NAME=Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\oscistate_iir.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=0
FX_NUMINPUTS=0
; this is the max number of outputs
FX_NUMOUTPUTS=1
FX_YMEMSIZE=0
FX_DSPCYCLES=300
FX_NUMPARAMS=16
FX_NUMPUBLICPARAMS=0

; Default_Frequency		equ     60	; Hertz
; Default_Phase		set     0.0     ; Degrees [-180 .. +180]

; Phi    = 0.489796
; Theta2 = -0.979592
; Theta1 = -0.489796
; y2     = -0.0170946
; y1     = -0.00854759
; h      = 0.999963

;Osc_Phi	set     360.0*(Osc_Default_Frequency/Fs)               
;Osc_Theta2 set     (Osc_Default_Phase-(2.0*Osc_Phi))   
;Osc_Theta1 set     (Osc_Default_Phase-Osc_Phi)         
;Osc_y2	set     @sin(DegreeToRadian*Osc_Theta2)     
;Osc_y1	set     @sin(DegreeToRadian*Osc_Theta1)     
;Osc_h	set     @cos(DegreeToRadian*Osc_Phi)      ; 2:14 format

; H value
FX_PARAM0=8386024
; Y1
FX_PARAM1=16705514
; Y2
FX_PARAM2=16633821


; DSPBuilder settings
FX_NAME=Sinusoidal Oscillator
FX_DSPCODE=osci.scr
FX_OUTPUT0_NAME=Out
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\mixer_io_2in_1out_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=0
FX_NUMINPUTS=2
FX_NUMOUTPUTS=1
FX_YMEMSIZE=0
FX_DSPCYCLES=1000
FX_NUMPARAMS=20
FX_NUMPUBLICPARAMS=2

; parameters and their descriptions

FX_PARAM0=41940000
FX_PARAM0_NAME=Left Gain
FX_PARAM0_DESCRIPTION=Left Input Gain
FX_PARAM0_UNITS=None
FX_PARAM0_TYPE=FLOAT
FX_PARAM0_MIN=0
FX_PARAM0_MAX=8388607
FX_PARAM0_ATOMIC=1

FX_PARAM1=41940000
FX_PARAM1_NAME=Right Gain
FX_PARAM1_DESCRIPTION=Right Input Gain
FX_PARAM1_UNITS=None
FX_PARAM1_TYPE=FLOAT
FX_PARAM1_MIN=0
FX_PARAM1_MAX=8388607
FX_PARAM1_ATOMIC=1


; DSPBuilder settings
FX_NAME=2x1 Mixer
FX_DSPCODE=mixer_io_2in_1out.scr
FX_INPUT0_NAME=In
FX_INPUT1_NAME=In
FX_OUTPUT0_NAME=Out
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\minirvbstate.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=300000
FX_NUMINPUTS=1
FX_NUMOUTPUTS=12
FX_DSPCYCLES=2000
FX_YMEMSIZE=256
FX_NUMPARAMS=256
FX_NUMPUBLICPARAMS=0

; reflection 0->7 lengths (bytes) . Their sum must not exceed
; the scratchLength specified above
FX_PARAM0=203457
FX_PARAM1=205321
FX_PARAM2=203651
FX_PARAM3=200781
FX_PARAM4=77781
FX_PARAM5=71893
FX_PARAM6=94567
FX_PARAM7=83451

; reflection 0->7 taps (bytes) . They are absolute positions
; within the entire delay line
FX_PARAM8=0
FX_PARAM9=5067
FX_PARAM10=9875
FX_PARAM11=14341
FX_PARAM12=24561
FX_PARAM13=31211
FX_PARAM14=40362
FX_PARAM15=51311

; reflection 0->7 gains. Some number between 0 and 8388607 (0.0->0.99999)
FX_PARAM16=800000
FX_PARAM17=801000
FX_PARAM18=690000
FX_PARAM19=500000
FX_PARAM20=0
FX_PARAM21=0
FX_PARAM22=0
FX_PARAM23=0

; IIR coefficients
; 0
FX_PARAM24=4194303
FX_PARAM25=12582912
FX_PARAM26=0

; 1
FX_PARAM27=4194303
FX_PARAM28=12582912
FX_PARAM29=0



; DSPBuilder settings
FX_NAME=Simple Reverb
FX_DSPCODE=minirvb.scr
FX_INPUT0_NAME=In
FX_OUTPUT0_NAME=Out
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\oscistate.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=0
FX_NUMINPUTS=0
; this is the max number of outputs
FX_NUMOUTPUTS=4
FX_YMEMSIZE=0
FX_DSPCYCLES=300
FX_NUMPARAMS=90
FX_NUMPUBLICPARAMS=5

; parameters and their descriptions

FX_PARAM0=1
FX_PARAM0_NAME=Number of Outputs
FX_PARAM0_DESCRIPTION=Number of simultaneous sine waves produced using frequency array
FX_PARAM0_UNITS=None
FX_PARAM0_TYPE=INTEGER
FX_PARAM0_MIN=1
FX_PARAM0_MAX=4
FX_PARAM0_ATOMIC=1

; array of frequencies, in 1/10 of a Hz
FX_PARAM1=10
FX_PARAM1_NAME=Frequency
FX_PARAM1_DESCRIPTION=Oscillator output 1 frequency
FX_PARAM1_UNITS=DeciHz (1/10 Hz)
FX_PARAM1_TYPE=INTEGER
FX_PARAM1_MIN=1
FX_PARAM1_MAX=100000
FX_PARAM1_ATOMIC=1

FX_PARAM2=1
FX_PARAM2_NAME=Frequency
FX_PARAM2_DESCRIPTION=Oscillator output 2 frequency
FX_PARAM2_UNITS=DeciHz (1/10 Hz)
FX_PARAM2_TYPE=INTEGER
FX_PARAM2_MIN=1
FX_PARAM2_MAX=100000
FX_PARAM2_ATOMIC=1

FX_PARAM3=1
FX_PARAM3_NAME=Frequency
FX_PARAM3_DESCRIPTION=Oscillator output 3 frequency
FX_PARAM3_UNITS=DeciHz (1/10 Hz)
FX_PARAM3_TYPE=INTEGER
FX_PARAM3_MIN=1
FX_PARAM3_MAX=100000
FX_PARAM3_ATOMIC=1

FX_PARAM4=1
FX_PARAM4_NAME=Frequency
FX_PARAM4_DESCRIPTION=Oscillator output 4 frequency
FX_PARAM4_UNITS=DeciHz (1/10 Hz)
FX_PARAM4_TYPE=INTEGER
FX_PARAM4_MIN=1
FX_PARAM4_MAX=100000
FX_PARAM4_ATOMIC=1

; table indices  (two words per table)

FX_PARAM5=0
FX_PARAM6=0
FX_PARAM7=0
FX_PARAM8=0
FX_PARAM9=0
FX_PARAM10=0
FX_PARAM11=0
FX_PARAM12=0


; 64 point SIN() table

FX_PARAM13=0
FX_PARAM14=822227 
FX_PARAM15=1636536
FX_PARAM16=2435084
FX_PARAM17=3210181
FX_PARAM18=3954362
FX_PARAM19=4660461
FX_PARAM20=5321677
FX_PARAM21=5931642
FX_PARAM22=6484482
FX_PARAM23=6974873
FX_PARAM24=7398092
FX_PARAM25=7750063
FX_PARAM26=8027397
FX_PARAM27=8227423
FX_PARAM28=8348215
FX_PARAM29=8388607
FX_PARAM30=8348215
FX_PARAM31=8227423
FX_PARAM32=8027397
FX_PARAM33=7750063
FX_PARAM34=7398092
FX_PARAM35=6974873
FX_PARAM36=6484482
FX_PARAM37=5931642
FX_PARAM38=5321677
FX_PARAM39=4660461
FX_PARAM40=3954362
FX_PARAM41=3210181
FX_PARAM42=2435084
FX_PARAM43=1636536
FX_PARAM44=822227
FX_PARAM45=0
FX_PARAM46=15954989
FX_PARAM47=15140680
FX_PARAM48=14342132
FX_PARAM49=13567035
FX_PARAM50=12822854
FX_PARAM51=12116755
FX_PARAM52=11455539
FX_PARAM53=10845574
FX_PARAM54=10292734
FX_PARAM55=9802343
FX_PARAM56=9379124
FX_PARAM57=9027153
FX_PARAM58=8749819
FX_PARAM59=8549793
FX_PARAM60=8429001
FX_PARAM61=8388608
FX_PARAM62=8429001
FX_PARAM63=8549793
FX_PARAM64=8749819
FX_PARAM65=9027153
FX_PARAM66=9379124
FX_PARAM67=9802343
FX_PARAM68=10292734
FX_PARAM69=10845574
FX_PARAM70=11455539
FX_PARAM71=12116755
FX_PARAM72=12822854
FX_PARAM73=13567035
FX_PARAM74=14342132
FX_PARAM75=15140680
FX_PARAM76=15954989
FX_PARAM77=0


; DSPBuilder settings
FX_NAME=Low Frequency Oscillator
FX_DSPCODE=osci.scr
FX_INPUT0_NAME=In
FX_OUTPUT0_NAME=Out 0
FX_OUTPUT1_NAME=Out 1
FX_OUTPUT2_NAME=Out 2
FX_OUTPUT3_NAME=Out 3
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\minirvb.ini ===
[MAIN]

IMAGE_FRIENDLY_NAME=DEFAULT_GRAPH
FX_NUMTEMPBINS=5

GRAPH0=MUSIC_REVERB_CHAIN

[MUSIC_REVERB_CHAIN]
FX0=REVERB


[MUSIC_REVERB_CHAIN_FX0_REVERB]

FX_MIXOUTPUT=1
FX_DSPCODE=minirvb.scr
FX_DSPSTATE=minirvbstate.ini
FX_NUMINPUTS=1
FX_NUMOUTPUTS=5

FX_INPUT0=VPMIXBIN_FXSEND0

FX_OUTPUT0=GPMIXBIN_FRONTLEFT
; temp bins
FX_OUTPUT1=GPTEMPBIN0
FX_OUTPUT2=GPTEMPBIN1
FX_OUTPUT3=GPTEMPBIN2
FX_OUTPUT4=GPTEMPBIN3
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\iir2state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=0
FX_NUMINPUTS=1
FX_NUMOUTPUTS=1
FX_DSPCYCLES=1700
FX_YMEMSIZE=32
FX_NUMPARAMS=32
FX_NUMPUBLICPARAMS=5

; parameters and their descriptions

FX_PARAM0=21100
FX_PARAM0_NAME=IIR2 B0
FX_PARAM0_DESCRIPTION=B0 Coefficient of IIR2 filter
FX_PARAM0_UNITS=None
FX_PARAM0_TYPE=FLOAT
FX_PARAM0_MIN=8388608
FX_PARAM0_MAX=8388607
FX_PARAM0_ATOMIC=0

FX_PARAM1=42199
FX_PARAM1_NAME=IIR2 B1
FX_PARAM1_DESCRIPTION=B1 Coefficient of IIR2 filter
FX_PARAM1_UNITS=None
FX_PARAM1_TYPE=FLOAT
FX_PARAM1_MIN=8388608
FX_PARAM1_MAX=8388607
FX_PARAM1_ATOMIC=0

FX_PARAM2=21100
FX_PARAM2_NAME=IIR2 B2
FX_PARAM2_DESCRIPTION=B2 Coefficient of IIR2 filter
FX_PARAM2_UNITS=None
FX_PARAM2_TYPE=FLOAT
FX_PARAM2_MIN=8388608
FX_PARAM2_MAX=8388607
FX_PARAM2_ATOMIC=0

FX_PARAM3=8245048
FX_PARAM3_NAME=IIR2 A1
FX_PARAM3_DESCRIPTION=A1 Coefficient of IIR2 filter
FX_PARAM3_UNITS=None
FX_PARAM3_TYPE=FLOAT
FX_PARAM3_MIN=8388608
FX_PARAM3_MAX=8388607
FX_PARAM3_ATOMIC=0

FX_PARAM4=12642073
FX_PARAM4_NAME=IIR2 A2
FX_PARAM4_DESCRIPTION=A2 Coefficient of IIR2 filter
FX_PARAM4_UNITS=None
FX_PARAM4_TYPE=FLOAT
FX_PARAM4_MIN=8388608
FX_PARAM4_MAX=8388607
FX_PARAM4_ATOMIC=0

; DSPBuilder settings
FX_NAME=iir2
FX_DSPCODE=iir2.scr
FX_INPUT0_NAME=In
FX_OUTPUT0_NAME=Out
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\oscistate_table.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=0
FX_NUMINPUTS=1
; this is the max number of outputs
FX_NUMOUTPUTS=4
FX_YMEMSIZE=8
FX_DSPCYCLES=500
FX_NUMPARAMS=80
FX_NUMPUBLICPARAMS=0

; Number of outputs
FX_PARAM0=2

; array of frequencies
FX_PARAM1=1
FX_PARAM2=1
FX_PARAM3=1
FX_PARAM4=1


; 64 point SIN() table

FX_PARAM5=0
FX_PARAM6=822227 
FX_PARAM7=1636536
FX_PARAM8=2435084
FX_PARAM9=3210181
FX_PARAM10=3954362
FX_PARAM11=4660461
FX_PARAM12=5321677
FX_PARAM13=5931642
FX_PARAM14=6484482
FX_PARAM15=6974873
FX_PARAM16=7398092
FX_PARAM17=7750063
FX_PARAM18=8027397
FX_PARAM19=8227423
FX_PARAM20=8348215
FX_PARAM21=8388607
FX_PARAM22=8348215
FX_PARAM23=8227423
FX_PARAM24=8027397
FX_PARAM25=7750063
FX_PARAM26=7398092
FX_PARAM27=6974873
FX_PARAM28=6484482
FX_PARAM29=5931642
FX_PARAM30=5321677
FX_PARAM31=4660461
FX_PARAM32=3954362
FX_PARAM33=3210181
FX_PARAM34=2435084
FX_PARAM35=1636536
FX_PARAM36=822227
FX_PARAM37=0
FX_PARAM38=15954989
FX_PARAM39=15140680
FX_PARAM40=14342132
FX_PARAM41=13567035
FX_PARAM42=12822854
FX_PARAM43=12116755
FX_PARAM44=11455539
FX_PARAM45=10845574
FX_PARAM46=10292734
FX_PARAM47=9802343
FX_PARAM48=9379124
FX_PARAM49=9027153
FX_PARAM50=8749819
FX_PARAM51=8549793
FX_PARAM52=8429001
FX_PARAM53=8388608
FX_PARAM54=8429001
FX_PARAM55=8549793
FX_PARAM56=8749819
FX_PARAM57=9027153
FX_PARAM58=9379124
FX_PARAM59=9802343
FX_PARAM60=10292734
FX_PARAM61=10845574
FX_PARAM62=11455539
FX_PARAM63=12116755
FX_PARAM64=12822854
FX_PARAM65=13567035
FX_PARAM66=14342132
FX_PARAM67=15140680
FX_PARAM68=15954989
FX_PARAM69=0

; current index into table
FX_PARAM70=0
FX_PARAM71=0


; DSPBuilder settings
FX_NAME=Low Frequency Oscillator
FX_DSPCODE=osci.scr
FX_INPUT0_NAME=In
FX_OUTPUT0_NAME=Out 0
FX_OUTPUT1_NAME=Out 1
FX_OUTPUT2_NAME=Out 2
FX_OUTPUT3_NAME=Out 3
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\rateconv_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=16384
FX_NUMINPUTS=1
; this is the max number of outputs
FX_NUMOUTPUTS=1
FX_YMEMSIZE=0
FX_DSPCYCLES=400
FX_NUMPARAMS=32
FX_NUMPUBLICPARAMS=1

; parameters and their descriptions

FX_PARAM0=3
FX_PARAM0_NAME=Sample Rate Conversion Ratio 
FX_PARAM0_DESCRIPTION=Conversion ratio N. For 48Khz/N=8Khz output, N=6
FX_PARAM0_UNITS=None
FX_PARAM0_TYPE=INTEGER
FX_PARAM0_MIN=1
FX_PARAM0_MAX=48
FX_PARAM0_ATOMIC=1

; DSPBuilder settings
FX_NAME=Rate Converter
FX_DSPCODE=rateconv.scr
FX_INPUT0_NAME=In
FX_OUTPUT0_NAME=Out
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Arena_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=3824
FX_PARAM29=4432
FX_PARAM30=4208
FX_PARAM31=4816
FX_PARAM32=5200
FX_PARAM33=5744
FX_PARAM34=7680
FX_PARAM35=4064
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=43840
FX_PARAM39=47632
FX_PARAM40=43840
FX_PARAM41=26048
FX_PARAM42=2112
FX_PARAM43=1936
FX_PARAM44=2032
FX_PARAM45=2256
FX_PARAM46=192000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=3085
FX_PARAM58=2815
FX_PARAM59=2923
FX_PARAM60=3248
FX_PARAM61=21109
FX_PARAM62=21109
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=6088244
FX_PARAM66=2300364
FX_PARAM67=0
FX_PARAM68=5096462
FX_PARAM69=2594054
FX_PARAM70=0
FX_PARAM71=5096462
FX_PARAM72=2594054
FX_PARAM73=0
FX_PARAM74=5096462
FX_PARAM75=2594054
FX_PARAM76=0
FX_PARAM77=2501640
FX_PARAM78=5570468
FX_PARAM79=0
FX_PARAM80=2806229
FX_PARAM81=5221789
FX_PARAM82=0
FX_PARAM83=3120989
FX_PARAM84=4859754
FX_PARAM85=0
FX_PARAM86=3456984
FX_PARAM87=4471878
FX_PARAM88=0
FX_PARAM89=7639475
FX_PARAM90=288774
FX_PARAM91=0
FX_PARAM92=7639475
FX_PARAM93=288774
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Arena
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Arena_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=1904
FX_PARAM29=2208
FX_PARAM30=2096
FX_PARAM31=2400
FX_PARAM32=2592
FX_PARAM33=4768
FX_PARAM34=3840
FX_PARAM35=2032
FX_PARAM36=18096
FX_PARAM37=24000
FX_PARAM38=21920
FX_PARAM39=23824
FX_PARAM40=21920
FX_PARAM41=13024
FX_PARAM42=1056
FX_PARAM43=976
FX_PARAM44=1008
FX_PARAM45=1120
FX_PARAM46=96000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=3085
FX_PARAM58=2815
FX_PARAM59=2923
FX_PARAM60=3248
FX_PARAM61=21109
FX_PARAM62=21109
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=4601249
FX_PARAM66=3787358
FX_PARAM67=0
FX_PARAM68=3340700
FX_PARAM69=3977511
FX_PARAM70=0
FX_PARAM71=3340700
FX_PARAM72=3977511
FX_PARAM73=0
FX_PARAM74=3340700
FX_PARAM75=3977511
FX_PARAM76=0
FX_PARAM77=1076149
FX_PARAM78=6919320
FX_PARAM79=0
FX_PARAM80=1271671
FX_PARAM81=6657223
FX_PARAM82=0
FX_PARAM83=1491688
FX_PARAM84=6362901
FX_PARAM85=0
FX_PARAM86=1747725
FX_PARAM87=6021792
FX_PARAM88=0
FX_PARAM89=7027834
FX_PARAM90=524548
FX_PARAM91=0
FX_PARAM92=7027834
FX_PARAM93=524548
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Arena
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Alley_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=1344
FX_PARAM29=1568
FX_PARAM30=1488
FX_PARAM31=1712
FX_PARAM32=1840
FX_PARAM33=2096
FX_PARAM34=7456
FX_PARAM35=3952
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=42560
FX_PARAM39=46240
FX_PARAM40=42560
FX_PARAM41=25280
FX_PARAM42=1216
FX_PARAM43=1136
FX_PARAM44=1184
FX_PARAM45=1312
FX_PARAM46=186352
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=2953
FX_PARAM58=2694
FX_PARAM59=2798
FX_PARAM60=3109
FX_PARAM61=20629
FX_PARAM62=20629
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=4252956
FX_PARAM66=4135652
FX_PARAM67=0
FX_PARAM68=3300897
FX_PARAM69=1652047
FX_PARAM70=0
FX_PARAM71=3300897
FX_PARAM72=1652047
FX_PARAM73=0
FX_PARAM74=3300897
FX_PARAM75=1652047
FX_PARAM76=0
FX_PARAM77=1318414
FX_PARAM78=5406687
FX_PARAM79=0
FX_PARAM80=1520296
FX_PARAM81=4964208
FX_PARAM82=0
FX_PARAM83=1749662
FX_PARAM84=4478154
FX_PARAM85=0
FX_PARAM86=1997175
FX_PARAM87=3963676
FX_PARAM88=0
FX_PARAM89=5906907
FX_PARAM90=27589
FX_PARAM91=0
FX_PARAM92=5906907
FX_PARAM93=27589
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Alley
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Alley_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=672
FX_PARAM29=784
FX_PARAM30=736
FX_PARAM31=848
FX_PARAM32=912
FX_PARAM33=1712
FX_PARAM34=3728
FX_PARAM35=1968
FX_PARAM36=18080
FX_PARAM37=24000
FX_PARAM38=21280
FX_PARAM39=23120
FX_PARAM40=21280
FX_PARAM41=12640
FX_PARAM42=608
FX_PARAM43=560
FX_PARAM44=592
FX_PARAM45=656
FX_PARAM46=93168
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=2953
FX_PARAM58=2694
FX_PARAM59=2798
FX_PARAM60=3109
FX_PARAM61=20629
FX_PARAM62=20629
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=2447250
FX_PARAM66=5941357
FX_PARAM67=0
FX_PARAM68=1625998
FX_PARAM69=2195909
FX_PARAM70=0
FX_PARAM71=1625998
FX_PARAM72=2195909
FX_PARAM73=0
FX_PARAM74=1625998
FX_PARAM75=2195909
FX_PARAM76=0
FX_PARAM77=462025
FX_PARAM78=6061582
FX_PARAM79=0
FX_PARAM80=551832
FX_PARAM81=5664184
FX_PARAM82=0
FX_PARAM83=660933
FX_PARAM84=5212532
FX_PARAM85=0
FX_PARAM86=787540
FX_PARAM87=4713837
FX_PARAM88=0
FX_PARAM89=4353618
FX_PARAM90=44858
FX_PARAM91=0
FX_PARAM92=4353618
FX_PARAM93=44858
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Alley
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Auditorium_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=1904
FX_PARAM29=2208
FX_PARAM30=2096
FX_PARAM31=2400
FX_PARAM32=2592
FX_PARAM33=4768
FX_PARAM34=3840
FX_PARAM35=2032
FX_PARAM36=18096
FX_PARAM37=24000
FX_PARAM38=21920
FX_PARAM39=23824
FX_PARAM40=21920
FX_PARAM41=13024
FX_PARAM42=1056
FX_PARAM43=976
FX_PARAM44=1008
FX_PARAM45=1120
FX_PARAM46=96000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=4762
FX_PARAM58=4344
FX_PARAM59=4512
FX_PARAM60=5013
FX_PARAM61=14858
FX_PARAM62=14858
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=3629192
FX_PARAM66=4759415
FX_PARAM67=0
FX_PARAM68=2248816
FX_PARAM69=4117689
FX_PARAM70=0
FX_PARAM71=2248816
FX_PARAM72=4117689
FX_PARAM73=0
FX_PARAM74=2248816
FX_PARAM75=4117689
FX_PARAM76=0
FX_PARAM77=660933
FX_PARAM78=7047723
FX_PARAM79=0
FX_PARAM80=787540
FX_PARAM81=6797897
FX_PARAM82=0
FX_PARAM83=929765
FX_PARAM84=6511356
FX_PARAM85=0
FX_PARAM86=1095227
FX_PARAM87=6186269
FX_PARAM88=0
FX_PARAM89=5507014
FX_PARAM90=582951
FX_PARAM91=0
FX_PARAM92=5507014
FX_PARAM93=582951
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Auditorium
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Auditorium_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=3824
FX_PARAM29=4432
FX_PARAM30=4208
FX_PARAM31=4816
FX_PARAM32=5200
FX_PARAM33=5744
FX_PARAM34=7680
FX_PARAM35=4064
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=43840
FX_PARAM39=47632
FX_PARAM40=43840
FX_PARAM41=26048
FX_PARAM42=2112
FX_PARAM43=1936
FX_PARAM44=2032
FX_PARAM45=2256
FX_PARAM46=192000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=4762
FX_PARAM58=4344
FX_PARAM59=4512
FX_PARAM60=5013
FX_PARAM61=14858
FX_PARAM62=14858
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=5340165
FX_PARAM66=3048442
FX_PARAM67=0
FX_PARAM68=4042153
FX_PARAM69=2914977
FX_PARAM70=0
FX_PARAM71=4042153
FX_PARAM72=2914977
FX_PARAM73=0
FX_PARAM74=4042153
FX_PARAM75=2914977
FX_PARAM76=0
FX_PARAM77=1749662
FX_PARAM78=6054790
FX_PARAM79=0
FX_PARAM80=1997175
FX_PARAM81=5716079
FX_PARAM82=0
FX_PARAM83=2255035
FX_PARAM84=5354433
FX_PARAM85=0
FX_PARAM86=2547821
FX_PARAM87=4954174
FX_PARAM88=0
FX_PARAM89=6709180
FX_PARAM90=339751
FX_PARAM91=0
FX_PARAM92=6709180
FX_PARAM93=339751
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Auditorium
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Carpeted_Hallway_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=384
FX_PARAM29=992
FX_PARAM30=768
FX_PARAM31=1376
FX_PARAM32=1760
FX_PARAM33=5744
FX_PARAM34=896
FX_PARAM35=464
FX_PARAM36=6032
FX_PARAM37=8016
FX_PARAM38=5152
FX_PARAM39=5600
FX_PARAM40=5152
FX_PARAM41=3056
FX_PARAM42=2112
FX_PARAM43=1936
FX_PARAM44=2032
FX_PARAM45=2256
FX_PARAM46=22576
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=1435
FX_PARAM58=1309
FX_PARAM59=1359
FX_PARAM60=1510
FX_PARAM61=3173
FX_PARAM62=3173
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=8334850
FX_PARAM66=53758
FX_PARAM67=0
FX_PARAM68=8376432
FX_PARAM69=6194
FX_PARAM70=0
FX_PARAM71=8376432
FX_PARAM72=6194
FX_PARAM73=0
FX_PARAM74=8376432
FX_PARAM75=6194
FX_PARAM76=0
FX_PARAM77=8388575
FX_PARAM78=8
FX_PARAM79=0
FX_PARAM80=8388605
FX_PARAM81=0
FX_PARAM82=0
FX_PARAM83=8388608
FX_PARAM84=0
FX_PARAM85=0
FX_PARAM86=8388608
FX_PARAM87=0
FX_PARAM88=0
FX_PARAM89=8388608
FX_PARAM90=0
FX_PARAM91=0
FX_PARAM92=8388608
FX_PARAM93=0
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Carpeted Hallway
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Bathroom_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=672
FX_PARAM29=784
FX_PARAM30=736
FX_PARAM31=848
FX_PARAM32=912
FX_PARAM33=1712
FX_PARAM34=3840
FX_PARAM35=2032
FX_PARAM36=18096
FX_PARAM37=24000
FX_PARAM38=21920
FX_PARAM39=23824
FX_PARAM40=21920
FX_PARAM41=13024
FX_PARAM42=608
FX_PARAM43=560
FX_PARAM44=592
FX_PARAM45=656
FX_PARAM46=96000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=7715
FX_PARAM58=7038
FX_PARAM59=7309
FX_PARAM60=8121
FX_PARAM61=67839
FX_PARAM62=67839
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=6124004
FX_PARAM66=2264603
FX_PARAM67=0
FX_PARAM68=5171040
FX_PARAM69=1010479
FX_PARAM70=0
FX_PARAM71=5171040
FX_PARAM72=1010479
FX_PARAM73=0
FX_PARAM74=5171040
FX_PARAM75=1010479
FX_PARAM76=0
FX_PARAM77=1942364
FX_PARAM78=4929543
FX_PARAM79=0
FX_PARAM80=2248816
FX_PARAM81=4437656
FX_PARAM82=0
FX_PARAM83=2597854
FX_PARAM84=3906025
FX_PARAM85=0
FX_PARAM86=2971797
FX_PARAM87=3359260
FX_PARAM88=0
FX_PARAM89=8194226
FX_PARAM90=1886
FX_PARAM91=0
FX_PARAM92=8194226
FX_PARAM93=1886
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Bathroom
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Cave_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=2864
FX_PARAM29=3296
FX_PARAM30=3136
FX_PARAM31=3584
FX_PARAM32=3872
FX_PARAM33=4208
FX_PARAM34=7680
FX_PARAM35=4064
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=43840
FX_PARAM39=47632
FX_PARAM40=43840
FX_PARAM41=26048
FX_PARAM42=1744
FX_PARAM43=1600
FX_PARAM44=1680
FX_PARAM45=1856
FX_PARAM46=192000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=5906
FX_PARAM58=5388
FX_PARAM59=5595
FX_PARAM60=6217
FX_PARAM61=14637
FX_PARAM62=14637
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=0
FX_PARAM66=8388608
FX_PARAM67=0
FX_PARAM68=0
FX_PARAM69=4636496
FX_PARAM70=0
FX_PARAM71=0
FX_PARAM72=4636496
FX_PARAM73=0
FX_PARAM74=0
FX_PARAM75=4636496
FX_PARAM76=0
FX_PARAM77=0
FX_PARAM78=7314588
FX_PARAM79=0
FX_PARAM80=0
FX_PARAM81=7107058
FX_PARAM82=0
FX_PARAM83=0
FX_PARAM84=6857880
FX_PARAM85=0
FX_PARAM86=0
FX_PARAM87=6571884
FX_PARAM88=0
FX_PARAM89=0
FX_PARAM90=781969
FX_PARAM91=0
FX_PARAM92=0
FX_PARAM93=781969
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Cave
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Carpeted_Hallway_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=192
FX_PARAM29=496
FX_PARAM30=384
FX_PARAM31=688
FX_PARAM32=880
FX_PARAM33=3056
FX_PARAM34=448
FX_PARAM35=224
FX_PARAM36=3024
FX_PARAM37=4016
FX_PARAM38=2576
FX_PARAM39=2800
FX_PARAM40=2576
FX_PARAM41=1520
FX_PARAM42=1056
FX_PARAM43=976
FX_PARAM44=1008
FX_PARAM45=1120
FX_PARAM46=11280
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=1435
FX_PARAM58=1309
FX_PARAM59=1359
FX_PARAM60=1510
FX_PARAM61=3173
FX_PARAM62=3173
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=8287089
FX_PARAM66=101518
FX_PARAM67=0
FX_PARAM68=8365457
FX_PARAM69=11777
FX_PARAM70=0
FX_PARAM71=8365457
FX_PARAM72=11777
FX_PARAM73=0
FX_PARAM74=8365457
FX_PARAM75=11777
FX_PARAM76=0
FX_PARAM77=8388546
FX_PARAM78=16
FX_PARAM79=0
FX_PARAM80=8388603
FX_PARAM81=0
FX_PARAM82=0
FX_PARAM83=8388608
FX_PARAM84=0
FX_PARAM85=0
FX_PARAM86=8388608
FX_PARAM87=0
FX_PARAM88=0
FX_PARAM89=8388608
FX_PARAM90=0
FX_PARAM91=0
FX_PARAM92=8388608
FX_PARAM93=0
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Carpeted Hallway
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Bathroom_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=1344
FX_PARAM29=1568
FX_PARAM30=1488
FX_PARAM31=1712
FX_PARAM32=1840
FX_PARAM33=2096
FX_PARAM34=7680
FX_PARAM35=4064
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=43840
FX_PARAM39=47632
FX_PARAM40=43840
FX_PARAM41=26048
FX_PARAM42=1216
FX_PARAM43=1136
FX_PARAM44=1184
FX_PARAM45=1312
FX_PARAM46=192000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=7715
FX_PARAM58=7038
FX_PARAM59=7309
FX_PARAM60=8121
FX_PARAM61=67839
FX_PARAM62=67839
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=7100993
FX_PARAM66=1287615
FX_PARAM67=0
FX_PARAM68=6485885
FX_PARAM69=597551
FX_PARAM70=0
FX_PARAM71=6485885
FX_PARAM72=597551
FX_PARAM73=0
FX_PARAM74=6485885
FX_PARAM75=597551
FX_PARAM76=0
FX_PARAM77=3694380
FX_PARAM78=3589749
FX_PARAM79=0
FX_PARAM80=4042153
FX_PARAM81=3141486
FX_PARAM82=0
FX_PARAM83=4406414
FX_PARAM84=2686101
FX_PARAM85=0
FX_PARAM86=4766351
FX_PARAM87=2246359
FX_PARAM88=0
FX_PARAM89=8285400
FX_PARAM90=1001
FX_PARAM91=0
FX_PARAM92=8285400
FX_PARAM93=1001
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Bathroom
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_City_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=672
FX_PARAM29=784
FX_PARAM30=736
FX_PARAM31=848
FX_PARAM32=912
FX_PARAM33=1712
FX_PARAM34=3728
FX_PARAM35=1968
FX_PARAM36=18080
FX_PARAM37=24000
FX_PARAM38=21280
FX_PARAM39=23120
FX_PARAM40=21280
FX_PARAM41=12640
FX_PARAM42=608
FX_PARAM43=560
FX_PARAM44=592
FX_PARAM45=656
FX_PARAM46=93168
FX_PARAM47=4194304
FX_PARAM48=12582912
FX_PARAM49=12582912
FX_PARAM50=4194304
FX_PARAM51=4194304
FX_PARAM52=4194304
FX_PARAM53=12582912
FX_PARAM54=12582912
FX_PARAM55=4194304
FX_PARAM56=838860
FX_PARAM57=862
FX_PARAM58=787
FX_PARAM59=817
FX_PARAM60=908
FX_PARAM61=1614
FX_PARAM62=1614
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=4975145
FX_PARAM66=3413462
FX_PARAM67=0
FX_PARAM68=3653968
FX_PARAM69=1537400
FX_PARAM70=0
FX_PARAM71=3653968
FX_PARAM72=1537400
FX_PARAM73=0
FX_PARAM74=3653968
FX_PARAM75=1537400
FX_PARAM76=0
FX_PARAM77=1244369
FX_PARAM78=5463311
FX_PARAM79=0
FX_PARAM80=1457346
FX_PARAM81=5009706
FX_PARAM82=0
FX_PARAM83=1707581
FX_PARAM84=4506539
FX_PARAM85=0
FX_PARAM86=1987649
FX_PARAM87=3969584
FX_PARAM88=0
FX_PARAM89=7339641
FX_PARAM90=11661
FX_PARAM91=0
FX_PARAM92=7339641
FX_PARAM93=11661
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=City
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Cave_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=1424
FX_PARAM29=1648
FX_PARAM30=1568
FX_PARAM31=1792
FX_PARAM32=1920
FX_PARAM33=3520
FX_PARAM34=3840
FX_PARAM35=2032
FX_PARAM36=18096
FX_PARAM37=24000
FX_PARAM38=21920
FX_PARAM39=23824
FX_PARAM40=21920
FX_PARAM41=13024
FX_PARAM42=864
FX_PARAM43=800
FX_PARAM44=832
FX_PARAM45=928
FX_PARAM46=96000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=5906
FX_PARAM58=5388
FX_PARAM59=5595
FX_PARAM60=6217
FX_PARAM61=14637
FX_PARAM62=14637
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=0
FX_PARAM66=8388608
FX_PARAM67=0
FX_PARAM68=0
FX_PARAM69=4636496
FX_PARAM70=0
FX_PARAM71=0
FX_PARAM72=4636496
FX_PARAM73=0
FX_PARAM74=0
FX_PARAM75=4636496
FX_PARAM76=0
FX_PARAM77=0
FX_PARAM78=7314588
FX_PARAM79=0
FX_PARAM80=0
FX_PARAM81=7107058
FX_PARAM82=0
FX_PARAM83=0
FX_PARAM84=6857880
FX_PARAM85=0
FX_PARAM86=0
FX_PARAM87=6571884
FX_PARAM88=0
FX_PARAM89=0
FX_PARAM90=781969
FX_PARAM91=0
FX_PARAM92=0
FX_PARAM93=781969
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Cave
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Default_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=672
FX_PARAM29=784
FX_PARAM30=736
FX_PARAM31=848
FX_PARAM32=912
FX_PARAM33=1712
FX_PARAM34=3728
FX_PARAM35=1968
FX_PARAM36=18080
FX_PARAM37=24000
FX_PARAM38=21280
FX_PARAM39=23120
FX_PARAM40=21280
FX_PARAM41=12640
FX_PARAM42=608
FX_PARAM43=560
FX_PARAM44=592
FX_PARAM45=656
FX_PARAM46=93168
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=590
FX_PARAM58=538
FX_PARAM59=559
FX_PARAM60=621
FX_PARAM61=26090
FX_PARAM62=26090
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=1104729
FX_PARAM66=7283878
FX_PARAM67=0
FX_PARAM68=1949948
FX_PARAM69=2090718
FX_PARAM70=0
FX_PARAM71=1949948
FX_PARAM72=2090718
FX_PARAM73=0
FX_PARAM74=1949948
FX_PARAM75=2090718
FX_PARAM76=0
FX_PARAM77=573926
FX_PARAM78=5976009
FX_PARAM79=0
FX_PARAM80=682352
FX_PARAM81=5569848
FX_PARAM82=0
FX_PARAM83=818498
FX_PARAM84=5106251
FX_PARAM85=0
FX_PARAM86=959520
FX_PARAM87=4607183
FX_PARAM88=0
FX_PARAM89=4975145
FX_PARAM90=37948
FX_PARAM91=0
FX_PARAM92=4975145
FX_PARAM93=37948
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Default
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Concert_Hall_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=3824
FX_PARAM29=4400
FX_PARAM30=4192
FX_PARAM31=4784
FX_PARAM32=5152
FX_PARAM33=5552
FX_PARAM34=7680
FX_PARAM35=4064
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=43840
FX_PARAM39=47632
FX_PARAM40=43840
FX_PARAM41=26048
FX_PARAM42=2064
FX_PARAM43=1904
FX_PARAM44=1984
FX_PARAM45=2208
FX_PARAM46=192000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=2866
FX_PARAM58=2615
FX_PARAM59=2715
FX_PARAM60=3017
FX_PARAM61=20676
FX_PARAM62=20676
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=5436254
FX_PARAM66=2952353
FX_PARAM67=0
FX_PARAM68=3354188
FX_PARAM69=3243018
FX_PARAM70=0
FX_PARAM71=3354188
FX_PARAM72=3243018
FX_PARAM73=0
FX_PARAM74=3354188
FX_PARAM75=3243018
FX_PARAM76=0
FX_PARAM77=1318414
FX_PARAM78=6388976
FX_PARAM79=0
FX_PARAM80=1520296
FX_PARAM81=6072255
FX_PARAM82=0
FX_PARAM83=1749662
FX_PARAM84=5716090
FX_PARAM85=0
FX_PARAM86=1977563
FX_PARAM87=5344767
FX_PARAM88=0
FX_PARAM89=5967352
FX_PARAM90=415949
FX_PARAM91=0
FX_PARAM92=5967352
FX_PARAM93=415949
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Concert Hall
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Concert_Hall_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=1904
FX_PARAM29=2192
FX_PARAM30=2080
FX_PARAM31=2384
FX_PARAM32=2560
FX_PARAM33=4672
FX_PARAM34=3840
FX_PARAM35=2032
FX_PARAM36=18096
FX_PARAM37=24000
FX_PARAM38=21920
FX_PARAM39=23824
FX_PARAM40=21920
FX_PARAM41=13024
FX_PARAM42=1040
FX_PARAM43=944
FX_PARAM44=992
FX_PARAM45=1104
FX_PARAM46=96000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=2866
FX_PARAM58=2615
FX_PARAM59=2715
FX_PARAM60=3017
FX_PARAM61=20676
FX_PARAM62=20676
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=3746737
FX_PARAM66=4641870
FX_PARAM67=0
FX_PARAM68=1667009
FX_PARAM69=4329847
FX_PARAM70=0
FX_PARAM71=1667009
FX_PARAM72=4329847
FX_PARAM73=0
FX_PARAM74=1667009
FX_PARAM75=4329847
FX_PARAM76=0
FX_PARAM77=462025
FX_PARAM78=7162852
FX_PARAM79=0
FX_PARAM80=551832
FX_PARAM81=6928471
FX_PARAM82=0
FX_PARAM83=660933
FX_PARAM84=6653479
FX_PARAM85=0
FX_PARAM86=787540
FX_PARAM87=6344166
FX_PARAM88=0
FX_PARAM89=4435309
FX_PARAM90=679140
FX_PARAM91=0
FX_PARAM92=4435309
FX_PARAM93=679140
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Concert Hall
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Default_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=1344
FX_PARAM29=1568
FX_PARAM30=1488
FX_PARAM31=1712
FX_PARAM32=1840
FX_PARAM33=2096
FX_PARAM34=7456
FX_PARAM35=3952
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=42560
FX_PARAM39=46240
FX_PARAM40=42560
FX_PARAM41=25280
FX_PARAM42=1216
FX_PARAM43=1136
FX_PARAM44=1184
FX_PARAM45=1312
FX_PARAM46=186352
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=590
FX_PARAM58=538
FX_PARAM59=559
FX_PARAM60=621
FX_PARAM61=26090
FX_PARAM62=26090
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=2547821
FX_PARAM66=5840786
FX_PARAM67=0
FX_PARAM68=3703351
FX_PARAM69=1521364
FX_PARAM70=0
FX_PARAM71=3703351
FX_PARAM72=1521364
FX_PARAM73=0
FX_PARAM74=3703351
FX_PARAM75=1521364
FX_PARAM76=0
FX_PARAM77=1568073
FX_PARAM78=5215769
FX_PARAM79=0
FX_PARAM80=1792859
FX_PARAM81=4767208
FX_PARAM82=0
FX_PARAM83=2054999
FX_PARAM84=4272196
FX_PARAM85=0
FX_PARAM86=2306602
FX_PARAM87=3771784
FX_PARAM88=0
FX_PARAM89=6352032
FX_PARAM90=22641
FX_PARAM91=0
FX_PARAM92=6352032
FX_PARAM93=22641
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Default
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Forest_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=15552
FX_PARAM29=16432
FX_PARAM30=16112
FX_PARAM31=17008
FX_PARAM32=17568
FX_PARAM33=23984
FX_PARAM34=3728
FX_PARAM35=1968
FX_PARAM36=18080
FX_PARAM37=24000
FX_PARAM38=21280
FX_PARAM39=23120
FX_PARAM40=21280
FX_PARAM41=12640
FX_PARAM42=2432
FX_PARAM43=2192
FX_PARAM44=2304
FX_PARAM45=2576
FX_PARAM46=93168
FX_PARAM47=6627000
FX_PARAM48=10150216
FX_PARAM49=10150216
FX_PARAM50=6627000
FX_PARAM51=6627000
FX_PARAM52=6627000
FX_PARAM53=10150216
FX_PARAM54=10150216
FX_PARAM55=1761607
FX_PARAM56=1325400
FX_PARAM57=619
FX_PARAM58=565
FX_PARAM59=587
FX_PARAM60=652
FX_PARAM61=10232
FX_PARAM62=10232
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=8162999
FX_PARAM66=225608
FX_PARAM67=0
FX_PARAM68=5084636
FX_PARAM69=1072843
FX_PARAM70=0
FX_PARAM71=5084636
FX_PARAM72=1072843
FX_PARAM73=0
FX_PARAM74=5084636
FX_PARAM75=1072843
FX_PARAM76=0
FX_PARAM77=1942364
FX_PARAM78=4929543
FX_PARAM79=0
FX_PARAM80=2248816
FX_PARAM81=4437656
FX_PARAM82=0
FX_PARAM83=2597854
FX_PARAM84=3906025
FX_PARAM85=0
FX_PARAM86=2971797
FX_PARAM87=3359260
FX_PARAM88=0
FX_PARAM89=8170313
FX_PARAM90=2426
FX_PARAM91=0
FX_PARAM92=8170313
FX_PARAM93=2426
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Forest
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_City_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=1344
FX_PARAM29=1568
FX_PARAM30=1488
FX_PARAM31=1712
FX_PARAM32=1840
FX_PARAM33=2096
FX_PARAM34=7456
FX_PARAM35=3952
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=42560
FX_PARAM39=46240
FX_PARAM40=42560
FX_PARAM41=25280
FX_PARAM42=1216
FX_PARAM43=1136
FX_PARAM44=1184
FX_PARAM45=1312
FX_PARAM46=186352
FX_PARAM47=4194304
FX_PARAM48=12582912
FX_PARAM49=12582912
FX_PARAM50=4194304
FX_PARAM51=4194304
FX_PARAM52=4194304
FX_PARAM53=12582912
FX_PARAM54=12582912
FX_PARAM55=4194304
FX_PARAM56=838860
FX_PARAM57=862
FX_PARAM58=787
FX_PARAM59=817
FX_PARAM60=908
FX_PARAM61=1614
FX_PARAM62=1614
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=6352032
FX_PARAM66=2036576
FX_PARAM67=0
FX_PARAM68=5360566
FX_PARAM69=983245
FX_PARAM70=0
FX_PARAM71=5360566
FX_PARAM72=983245
FX_PARAM73=0
FX_PARAM74=5360566
FX_PARAM75=983245
FX_PARAM76=0
FX_PARAM77=2765219
FX_PARAM78=4300293
FX_PARAM79=0
FX_PARAM80=3085531
FX_PARAM81=3832903
FX_PARAM82=0
FX_PARAM83=3406197
FX_PARAM84=3360775
FX_PARAM85=0
FX_PARAM86=3747656
FX_PARAM87=2878107
FX_PARAM88=0
FX_PARAM89=7817644
FX_PARAM90=6347
FX_PARAM91=0
FX_PARAM92=7817644
FX_PARAM93=6347
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=City
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Forest_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=31104
FX_PARAM29=32880
FX_PARAM30=32240
FX_PARAM31=34032
FX_PARAM32=35152
FX_PARAM33=16880
FX_PARAM34=7456
FX_PARAM35=3952
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=42560
FX_PARAM39=46240
FX_PARAM40=42560
FX_PARAM41=25280
FX_PARAM42=4864
FX_PARAM43=4400
FX_PARAM44=4608
FX_PARAM45=5168
FX_PARAM46=186352
FX_PARAM47=6627000
FX_PARAM48=10150216
FX_PARAM49=10150216
FX_PARAM50=6627000
FX_PARAM51=6627000
FX_PARAM52=6627000
FX_PARAM53=10150216
FX_PARAM54=10150216
FX_PARAM55=1761607
FX_PARAM56=1325400
FX_PARAM57=619
FX_PARAM58=565
FX_PARAM59=587
FX_PARAM60=652
FX_PARAM61=10232
FX_PARAM62=10232
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=8268712
FX_PARAM66=119895
FX_PARAM67=0
FX_PARAM68=6427194
FX_PARAM69=636897
FX_PARAM70=0
FX_PARAM71=6427194
FX_PARAM72=636897
FX_PARAM73=0
FX_PARAM74=6427194
FX_PARAM75=636897
FX_PARAM76=0
FX_PARAM77=3694380
FX_PARAM78=3589749
FX_PARAM79=0
FX_PARAM80=4042153
FX_PARAM81=3141486
FX_PARAM82=0
FX_PARAM83=4406414
FX_PARAM84=2686101
FX_PARAM85=0
FX_PARAM86=4766351
FX_PARAM87=2246359
FX_PARAM88=0
FX_PARAM89=8272624
FX_PARAM90=1289
FX_PARAM91=0
FX_PARAM92=8272624
FX_PARAM93=1289
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Forest
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Generic_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=672
FX_PARAM29=784
FX_PARAM30=736
FX_PARAM31=848
FX_PARAM32=912
FX_PARAM33=1712
FX_PARAM34=3728
FX_PARAM35=1968
FX_PARAM36=18080
FX_PARAM37=24000
FX_PARAM38=21280
FX_PARAM39=23120
FX_PARAM40=21280
FX_PARAM41=12640
FX_PARAM42=608
FX_PARAM43=560
FX_PARAM44=592
FX_PARAM45=656
FX_PARAM46=93168
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=590
FX_PARAM58=538
FX_PARAM59=559
FX_PARAM60=621
FX_PARAM61=26090
FX_PARAM62=26090
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=1104729
FX_PARAM66=7283878
FX_PARAM67=0
FX_PARAM68=1949948
FX_PARAM69=2090718
FX_PARAM70=0
FX_PARAM71=1949948
FX_PARAM72=2090718
FX_PARAM73=0
FX_PARAM74=1949948
FX_PARAM75=2090718
FX_PARAM76=0
FX_PARAM77=573926
FX_PARAM78=5976009
FX_PARAM79=0
FX_PARAM80=682352
FX_PARAM81=5569848
FX_PARAM82=0
FX_PARAM83=818498
FX_PARAM84=5106251
FX_PARAM85=0
FX_PARAM86=959520
FX_PARAM87=4607183
FX_PARAM88=0
FX_PARAM89=4975145
FX_PARAM90=37948
FX_PARAM91=0
FX_PARAM92=4975145
FX_PARAM93=37948
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Generic
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Generic_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=1344
FX_PARAM29=1568
FX_PARAM30=1488
FX_PARAM31=1712
FX_PARAM32=1840
FX_PARAM33=2096
FX_PARAM34=7456
FX_PARAM35=3952
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=42560
FX_PARAM39=46240
FX_PARAM40=42560
FX_PARAM41=25280
FX_PARAM42=1216
FX_PARAM43=1136
FX_PARAM44=1184
FX_PARAM45=1312
FX_PARAM46=186352
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=590
FX_PARAM58=538
FX_PARAM59=559
FX_PARAM60=621
FX_PARAM61=26090
FX_PARAM62=26090
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=2547821
FX_PARAM66=5840786
FX_PARAM67=0
FX_PARAM68=3703351
FX_PARAM69=1521364
FX_PARAM70=0
FX_PARAM71=3703351
FX_PARAM72=1521364
FX_PARAM73=0
FX_PARAM74=3703351
FX_PARAM75=1521364
FX_PARAM76=0
FX_PARAM77=1568073
FX_PARAM78=5215769
FX_PARAM79=0
FX_PARAM80=1792859
FX_PARAM81=4767208
FX_PARAM82=0
FX_PARAM83=2054999
FX_PARAM84=4272196
FX_PARAM85=0
FX_PARAM86=2306602
FX_PARAM87=3771784
FX_PARAM88=0
FX_PARAM89=6352032
FX_PARAM90=22641
FX_PARAM91=0
FX_PARAM92=6352032
FX_PARAM93=22641
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Generic
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Hallway_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=1344
FX_PARAM29=1568
FX_PARAM30=1488
FX_PARAM31=1712
FX_PARAM32=1840
FX_PARAM33=2096
FX_PARAM34=7456
FX_PARAM35=3952
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=42560
FX_PARAM39=46240
FX_PARAM40=42560
FX_PARAM41=25280
FX_PARAM42=1216
FX_PARAM43=1136
FX_PARAM44=1184
FX_PARAM45=1312
FX_PARAM46=186352
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=2903
FX_PARAM58=2648
FX_PARAM59=2750
FX_PARAM60=3055
FX_PARAM61=34433
FX_PARAM62=34433
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=4450989
FX_PARAM66=3937618
FX_PARAM67=0
FX_PARAM68=6034531
FX_PARAM69=764399
FX_PARAM70=0
FX_PARAM71=6034531
FX_PARAM72=764399
FX_PARAM73=0
FX_PARAM74=6034531
FX_PARAM75=764399
FX_PARAM76=0
FX_PARAM77=3333029
FX_PARAM78=3866080
FX_PARAM79=0
FX_PARAM80=3676323
FX_PARAM81=3405897
FX_PARAM82=0
FX_PARAM83=4026815
FX_PARAM84=2942151
FX_PARAM85=0
FX_PARAM86=4380513
FX_PARAM87=2485638
FX_PARAM88=0
FX_PARAM89=8155203
FX_PARAM90=2594
FX_PARAM91=0
FX_PARAM92=8155203
FX_PARAM93=2594
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Hallway
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Hangar_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=1904
FX_PARAM29=2208
FX_PARAM30=2096
FX_PARAM31=2400
FX_PARAM32=2592
FX_PARAM33=4768
FX_PARAM34=3840
FX_PARAM35=2032
FX_PARAM36=18096
FX_PARAM37=24000
FX_PARAM38=21920
FX_PARAM39=23824
FX_PARAM40=21920
FX_PARAM41=13024
FX_PARAM42=1056
FX_PARAM43=976
FX_PARAM44=1008
FX_PARAM45=1120
FX_PARAM46=96000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=5906
FX_PARAM58=5388
FX_PARAM59=5595
FX_PARAM60=6217
FX_PARAM61=26030
FX_PARAM62=26030
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=5605613
FX_PARAM66=2782994
FX_PARAM67=0
FX_PARAM68=3741908
FX_PARAM69=3914214
FX_PARAM70=0
FX_PARAM71=3741908
FX_PARAM72=3914214
FX_PARAM73=0
FX_PARAM74=3741908
FX_PARAM75=3914214
FX_PARAM76=0
FX_PARAM77=1253492
FX_PARAM78=6861215
FX_PARAM79=0
FX_PARAM80=1474556
FX_PARAM81=6595270
FX_PARAM82=0
FX_PARAM83=1723689
FX_PARAM84=6292088
FX_PARAM85=0
FX_PARAM86=1995146
FX_PARAM87=5959860
FX_PARAM88=0
FX_PARAM89=7420903
FX_PARAM90=486679
FX_PARAM91=0
FX_PARAM92=7420903
FX_PARAM93=486679
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Hangar
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Hangar_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=3824
FX_PARAM29=4432
FX_PARAM30=4208
FX_PARAM31=4816
FX_PARAM32=5200
FX_PARAM33=5744
FX_PARAM34=7680
FX_PARAM35=4064
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=43840
FX_PARAM39=47632
FX_PARAM40=43840
FX_PARAM41=26048
FX_PARAM42=2112
FX_PARAM43=1936
FX_PARAM44=2032
FX_PARAM45=2256
FX_PARAM46=192000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=5906
FX_PARAM58=5388
FX_PARAM59=5595
FX_PARAM60=6217
FX_PARAM61=26030
FX_PARAM62=26030
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=6773307
FX_PARAM66=1615300
FX_PARAM67=0
FX_PARAM68=5432341
FX_PARAM69=2490253
FX_PARAM70=0
FX_PARAM71=5432341
FX_PARAM72=2490253
FX_PARAM73=0
FX_PARAM74=5432341
FX_PARAM75=2490253
FX_PARAM76=0
FX_PARAM77=2778974
FX_PARAM78=5394292
FX_PARAM79=0
FX_PARAM80=3097415
FX_PARAM81=5047235
FX_PARAM82=0
FX_PARAM83=3426655
FX_PARAM84=4684385
FX_PARAM85=0
FX_PARAM86=3765125
FX_PARAM87=4309920
FX_PARAM88=0
FX_PARAM89=7862650
FX_PARAM90=264515
FX_PARAM91=0
FX_PARAM92=7862650
FX_PARAM93=264515
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Hangar
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Hallway_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=672
FX_PARAM29=784
FX_PARAM30=736
FX_PARAM31=848
FX_PARAM32=912
FX_PARAM33=1712
FX_PARAM34=3728
FX_PARAM35=1968
FX_PARAM36=18080
FX_PARAM37=24000
FX_PARAM38=21280
FX_PARAM39=23120
FX_PARAM40=21280
FX_PARAM41=12640
FX_PARAM42=608
FX_PARAM43=560
FX_PARAM44=592
FX_PARAM45=656
FX_PARAM46=93168
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=2903
FX_PARAM58=2648
FX_PARAM59=2750
FX_PARAM60=3055
FX_PARAM61=34433
FX_PARAM62=34433
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=2642582
FX_PARAM66=5746025
FX_PARAM67=0
FX_PARAM68=4523156
FX_PARAM69=1255163
FX_PARAM70=0
FX_PARAM71=4523156
FX_PARAM72=1255163
FX_PARAM73=0
FX_PARAM74=4523156
FX_PARAM75=1255163
FX_PARAM76=0
FX_PARAM77=1650658
FX_PARAM78=5152616
FX_PARAM79=0
FX_PARAM80=1919521
FX_PARAM81=4675660
FX_PARAM82=0
FX_PARAM83=2234755
FX_PARAM84=4150945
FX_PARAM85=0
FX_PARAM86=2572068
FX_PARAM87=3607154
FX_PARAM88=0
FX_PARAM89=7951620
FX_PARAM90=4858
FX_PARAM91=0
FX_PARAM92=7951620
FX_PARAM93=4858
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Hallway
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Living_Room_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=288
FX_PARAM29=320
FX_PARAM30=304
FX_PARAM31=352
FX_PARAM32=384
FX_PARAM33=672
FX_PARAM34=448
FX_PARAM35=224
FX_PARAM36=3024
FX_PARAM37=4016
FX_PARAM38=2576
FX_PARAM39=2800
FX_PARAM40=2576
FX_PARAM41=1520
FX_PARAM42=448
FX_PARAM43=416
FX_PARAM44=432
FX_PARAM45=480
FX_PARAM46=11280
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=2423
FX_PARAM58=2210
FX_PARAM59=2295
FX_PARAM60=2550
FX_PARAM61=5814
FX_PARAM62=5814
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=8378401
FX_PARAM66=10207
FX_PARAM67=0
FX_PARAM68=8128016
FX_PARAM69=173764
FX_PARAM70=0
FX_PARAM71=8128016
FX_PARAM72=173764
FX_PARAM73=0
FX_PARAM74=8128016
FX_PARAM75=173764
FX_PARAM76=0
FX_PARAM77=8381075
FX_PARAM78=3380
FX_PARAM79=0
FX_PARAM80=8386948
FX_PARAM81=629
FX_PARAM82=0
FX_PARAM83=8388351
FX_PARAM84=79
FX_PARAM85=0
FX_PARAM86=8388580
FX_PARAM87=6
FX_PARAM88=0
FX_PARAM89=8388603
FX_PARAM90=0
FX_PARAM91=0
FX_PARAM92=8388603
FX_PARAM93=0
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Living Room
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Mountains_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=57600
FX_PARAM29=59616
FX_PARAM30=58896
FX_PARAM31=60928
FX_PARAM32=62208
FX_PARAM33=19200
FX_PARAM34=7456
FX_PARAM35=3952
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=42560
FX_PARAM39=46240
FX_PARAM40=42560
FX_PARAM41=25280
FX_PARAM42=5440
FX_PARAM43=4912
FX_PARAM44=5136
FX_PARAM45=5760
FX_PARAM46=186352
FX_PARAM47=2264924
FX_PARAM48=14512292
FX_PARAM49=14512292
FX_PARAM50=2264924
FX_PARAM51=2264924
FX_PARAM52=2264924
FX_PARAM53=14512292
FX_PARAM54=14512292
FX_PARAM55=6123683
FX_PARAM56=452984
FX_PARAM57=481
FX_PARAM58=439
FX_PARAM59=455
FX_PARAM60=506
FX_PARAM61=2039
FX_PARAM62=2039
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=8090314
FX_PARAM66=298294
FX_PARAM67=0
FX_PARAM68=8310564
FX_PARAM69=25341
FX_PARAM70=0
FX_PARAM71=8310564
FX_PARAM72=25341
FX_PARAM73=0
FX_PARAM74=8310564
FX_PARAM75=25341
FX_PARAM76=0
FX_PARAM77=6531814
FX_PARAM78=1419919
FX_PARAM79=0
FX_PARAM80=6888610
FX_PARAM81=1084152
FX_PARAM82=0
FX_PARAM83=7226259
FX_PARAM84=784036
FX_PARAM85=0
FX_PARAM86=7532643
FX_PARAM87=530830
FX_PARAM88=0
FX_PARAM89=8388608
FX_PARAM90=0
FX_PARAM91=0
FX_PARAM92=8388608
FX_PARAM93=0
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Mountains
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Padded_Cell_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=96
FX_PARAM29=112
FX_PARAM30=112
FX_PARAM31=128
FX_PARAM32=144
FX_PARAM33=288
FX_PARAM34=448
FX_PARAM35=224
FX_PARAM36=3024
FX_PARAM37=4016
FX_PARAM38=2576
FX_PARAM39=2800
FX_PARAM40=2576
FX_PARAM41=1520
FX_PARAM42=400
FX_PARAM43=368
FX_PARAM44=400
FX_PARAM45=432
FX_PARAM46=11280
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=2953
FX_PARAM58=2694
FX_PARAM59=2798
FX_PARAM60=3109
FX_PARAM61=26301
FX_PARAM62=26301
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=8378401
FX_PARAM66=10207
FX_PARAM67=0
FX_PARAM68=8388387
FX_PARAM69=66
FX_PARAM70=0
FX_PARAM71=8388387
FX_PARAM72=66
FX_PARAM73=0
FX_PARAM74=8388387
FX_PARAM75=66
FX_PARAM76=0
FX_PARAM77=8388608
FX_PARAM78=0
FX_PARAM79=0
FX_PARAM80=8388608
FX_PARAM81=0
FX_PARAM82=0
FX_PARAM83=8388608
FX_PARAM84=0
FX_PARAM85=0
FX_PARAM86=8388608
FX_PARAM87=0
FX_PARAM88=0
FX_PARAM89=8388608
FX_PARAM90=0
FX_PARAM91=0
FX_PARAM92=8388608
FX_PARAM93=0
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Padded Cell
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Mountains_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=28800
FX_PARAM29=29808
FX_PARAM30=29440
FX_PARAM31=30464
FX_PARAM32=31104
FX_PARAM33=38400
FX_PARAM34=3728
FX_PARAM35=1968
FX_PARAM36=18080
FX_PARAM37=24000
FX_PARAM38=21280
FX_PARAM39=23120
FX_PARAM40=21280
FX_PARAM41=12640
FX_PARAM42=2720
FX_PARAM43=2448
FX_PARAM44=2560
FX_PARAM45=2880
FX_PARAM46=93168
FX_PARAM47=2264924
FX_PARAM48=14512292
FX_PARAM49=14512292
FX_PARAM50=2264924
FX_PARAM51=2264924
FX_PARAM52=2264924
FX_PARAM53=14512292
FX_PARAM54=14512292
FX_PARAM55=6123683
FX_PARAM56=452984
FX_PARAM57=481
FX_PARAM58=439
FX_PARAM59=455
FX_PARAM60=506
FX_PARAM61=2039
FX_PARAM62=2039
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=7832746
FX_PARAM66=555861
FX_PARAM67=0
FX_PARAM68=8241421
FX_PARAM69=47793
FX_PARAM70=0
FX_PARAM71=8241421
FX_PARAM72=47793
FX_PARAM73=0
FX_PARAM74=8241421
FX_PARAM75=47793
FX_PARAM76=0
FX_PARAM77=5239210
FX_PARAM78=2408394
FX_PARAM79=0
FX_PARAM80=5779891
FX_PARAM81=1885501
FX_PARAM82=0
FX_PARAM83=6328549
FX_PARAM84=1389567
FX_PARAM85=0
FX_PARAM86=6841821
FX_PARAM87=959246
FX_PARAM88=0
FX_PARAM89=8388607
FX_PARAM90=0
FX_PARAM91=0
FX_PARAM92=8388607
FX_PARAM93=0
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Mountains
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Living_Room_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=576
FX_PARAM29=656
FX_PARAM30=624
FX_PARAM31=704
FX_PARAM32=752
FX_PARAM33=768
FX_PARAM34=896
FX_PARAM35=464
FX_PARAM36=6032
FX_PARAM37=8016
FX_PARAM38=5152
FX_PARAM39=5600
FX_PARAM40=5152
FX_PARAM41=3056
FX_PARAM42=880
FX_PARAM43=848
FX_PARAM44=880
FX_PARAM45=960
FX_PARAM46=22576
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=2423
FX_PARAM58=2210
FX_PARAM59=2295
FX_PARAM60=2550
FX_PARAM61=5814
FX_PARAM62=5814
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=8383217
FX_PARAM66=5391
FX_PARAM67=0
FX_PARAM68=8250298
FX_PARAM69=92226
FX_PARAM70=0
FX_PARAM71=8250298
FX_PARAM72=92226
FX_PARAM73=0
FX_PARAM74=8250298
FX_PARAM75=92226
FX_PARAM76=0
FX_PARAM77=8384629
FX_PARAM78=1785
FX_PARAM79=0
FX_PARAM80=8387740
FX_PARAM81=329
FX_PARAM82=0
FX_PARAM83=8388472
FX_PARAM84=41
FX_PARAM85=0
FX_PARAM86=8388593
FX_PARAM87=3
FX_PARAM88=0
FX_PARAM89=8388605
FX_PARAM90=0
FX_PARAM91=0
FX_PARAM92=8388605
FX_PARAM93=0
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Living Room
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Padded_Cell_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=192
FX_PARAM29=224
FX_PARAM30=208
FX_PARAM31=256
FX_PARAM32=288
FX_PARAM33=384
FX_PARAM34=896
FX_PARAM35=464
FX_PARAM36=6032
FX_PARAM37=8016
FX_PARAM38=5152
FX_PARAM39=5600
FX_PARAM40=5152
FX_PARAM41=3056
FX_PARAM42=784
FX_PARAM43=752
FX_PARAM44=784
FX_PARAM45=848
FX_PARAM46=22576
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=2953
FX_PARAM58=2694
FX_PARAM59=2798
FX_PARAM60=3109
FX_PARAM61=26301
FX_PARAM62=26301
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=8383217
FX_PARAM66=5391
FX_PARAM67=0
FX_PARAM68=8388492
FX_PARAM69=35
FX_PARAM70=0
FX_PARAM71=8388492
FX_PARAM72=35
FX_PARAM73=0
FX_PARAM74=8388492
FX_PARAM75=35
FX_PARAM76=0
FX_PARAM77=8388608
FX_PARAM78=0
FX_PARAM79=0
FX_PARAM80=8388608
FX_PARAM81=0
FX_PARAM82=0
FX_PARAM83=8388608
FX_PARAM84=0
FX_PARAM85=0
FX_PARAM86=8388608
FX_PARAM87=0
FX_PARAM88=0
FX_PARAM89=8388608
FX_PARAM90=0
FX_PARAM91=0
FX_PARAM92=8388608
FX_PARAM93=0
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Padded Cell
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Parking_Lot_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=768
FX_PARAM29=880
FX_PARAM30=848
FX_PARAM31=960
FX_PARAM32=1040
FX_PARAM33=1920
FX_PARAM34=3840
FX_PARAM35=2032
FX_PARAM36=18096
FX_PARAM37=24000
FX_PARAM38=21920
FX_PARAM39=23824
FX_PARAM40=21920
FX_PARAM41=13024
FX_PARAM42=624
FX_PARAM43=592
FX_PARAM44=608
FX_PARAM45=672
FX_PARAM46=96000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=2459
FX_PARAM58=2243
FX_PARAM59=2330
FX_PARAM60=2588
FX_PARAM61=5495
FX_PARAM62=5495
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=0
FX_PARAM66=8388608
FX_PARAM67=0
FX_PARAM68=0
FX_PARAM69=2945709
FX_PARAM70=0
FX_PARAM71=0
FX_PARAM72=2945709
FX_PARAM73=0
FX_PARAM74=0
FX_PARAM75=2945709
FX_PARAM76=0
FX_PARAM77=0
FX_PARAM78=6587034
FX_PARAM79=0
FX_PARAM80=0
FX_PARAM81=6254461
FX_PARAM82=0
FX_PARAM83=0
FX_PARAM84=5877463
FX_PARAM85=0
FX_PARAM86=0
FX_PARAM87=5447408
FX_PARAM88=0
FX_PARAM89=0
FX_PARAM90=127552
FX_PARAM91=0
FX_PARAM92=0
FX_PARAM93=127552
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Parking Lot
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Plain_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=34368
FX_PARAM29=36384
FX_PARAM30=35664
FX_PARAM31=37696
FX_PARAM32=38976
FX_PARAM33=19200
FX_PARAM34=7456
FX_PARAM35=3952
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=42560
FX_PARAM39=46240
FX_PARAM40=42560
FX_PARAM41=25280
FX_PARAM42=5440
FX_PARAM43=4912
FX_PARAM44=5136
FX_PARAM45=5760
FX_PARAM46=186352
FX_PARAM47=1761607
FX_PARAM48=15015609
FX_PARAM49=15015609
FX_PARAM50=1761607
FX_PARAM51=1761607
FX_PARAM52=1761607
FX_PARAM53=15015609
FX_PARAM54=15015609
FX_PARAM55=6627000
FX_PARAM56=352321
FX_PARAM57=690
FX_PARAM58=630
FX_PARAM59=654
FX_PARAM60=727
FX_PARAM61=1146
FX_PARAM62=1146
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=7863832
FX_PARAM66=524775
FX_PARAM67=0
FX_PARAM68=6730228
FX_PARAM69=538497
FX_PARAM70=0
FX_PARAM71=6730228
FX_PARAM72=538497
FX_PARAM73=0
FX_PARAM74=6730228
FX_PARAM75=538497
FX_PARAM76=0
FX_PARAM77=3987980
FX_PARAM78=3365228
FX_PARAM79=0
FX_PARAM80=4341056
FX_PARAM81=2925448
FX_PARAM82=0
FX_PARAM83=4705847
FX_PARAM84=2484125
FX_PARAM85=0
FX_PARAM86=5077889
FX_PARAM87=2053157
FX_PARAM88=0
FX_PARAM89=8328864
FX_PARAM90=664
FX_PARAM91=0
FX_PARAM92=8328864
FX_PARAM93=664
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Plain
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Plain_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=17184
FX_PARAM29=18192
FX_PARAM30=17824
FX_PARAM31=18848
FX_PARAM32=19488
FX_PARAM33=26784
FX_PARAM34=3728
FX_PARAM35=1968
FX_PARAM36=18080
FX_PARAM37=24000
FX_PARAM38=21280
FX_PARAM39=23120
FX_PARAM40=21280
FX_PARAM41=12640
FX_PARAM42=2720
FX_PARAM43=2448
FX_PARAM44=2560
FX_PARAM45=2880
FX_PARAM46=93168
FX_PARAM47=1761607
FX_PARAM48=15015609
FX_PARAM49=15015609
FX_PARAM50=1761607
FX_PARAM51=1761607
FX_PARAM52=1761607
FX_PARAM53=15015609
FX_PARAM54=15015609
FX_PARAM55=6627000
FX_PARAM56=352321
FX_PARAM57=690
FX_PARAM58=630
FX_PARAM59=654
FX_PARAM60=727
FX_PARAM61=1146
FX_PARAM62=1146
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=7423014
FX_PARAM66=965594
FX_PARAM67=0
FX_PARAM68=5539273
FX_PARAM69=925216
FX_PARAM70=0
FX_PARAM71=5539273
FX_PARAM72=925216
FX_PARAM73=0
FX_PARAM74=5539273
FX_PARAM75=925216
FX_PARAM76=0
FX_PARAM77=2199382
FX_PARAM78=4732998
FX_PARAM79=0
FX_PARAM80=2533073
FX_PARAM81=4232203
FX_PARAM82=0
FX_PARAM83=2906888
FX_PARAM84=3697573
FX_PARAM85=0
FX_PARAM86=3313906
FX_PARAM87=3147100
FX_PARAM88=0
FX_PARAM89=8275822
FX_PARAM90=1253
FX_PARAM91=0
FX_PARAM92=8275822
FX_PARAM93=1253
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Plain
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Parking_Lot_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=1536
FX_PARAM29=1776
FX_PARAM30=1680
FX_PARAM31=1936
FX_PARAM32=2080
FX_PARAM33=2304
FX_PARAM34=7680
FX_PARAM35=4064
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=43840
FX_PARAM39=47632
FX_PARAM40=43840
FX_PARAM41=26048
FX_PARAM42=1264
FX_PARAM43=1184
FX_PARAM44=1232
FX_PARAM45=1360
FX_PARAM46=192000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=2459
FX_PARAM58=2243
FX_PARAM59=2330
FX_PARAM60=2588
FX_PARAM61=5495
FX_PARAM62=5495
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=0
FX_PARAM66=8388608
FX_PARAM67=0
FX_PARAM68=0
FX_PARAM69=2945709
FX_PARAM70=0
FX_PARAM71=0
FX_PARAM72=2945709
FX_PARAM73=0
FX_PARAM74=0
FX_PARAM75=2945709
FX_PARAM76=0
FX_PARAM77=0
FX_PARAM78=6587034
FX_PARAM79=0
FX_PARAM80=0
FX_PARAM81=6254461
FX_PARAM82=0
FX_PARAM83=0
FX_PARAM84=5877463
FX_PARAM85=0
FX_PARAM86=0
FX_PARAM87=5447408
FX_PARAM88=0
FX_PARAM89=0
FX_PARAM90=127552
FX_PARAM91=0
FX_PARAM92=0
FX_PARAM93=127552
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Parking Lot
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Quarry_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=11712
FX_PARAM29=12208
FX_PARAM30=12032
FX_PARAM31=12544
FX_PARAM32=12864
FX_PARAM33=4800
FX_PARAM34=7456
FX_PARAM35=3952
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=42560
FX_PARAM39=46240
FX_PARAM40=42560
FX_PARAM41=25280
FX_PARAM42=1888
FX_PARAM43=1728
FX_PARAM44=1808
FX_PARAM45=2000
FX_PARAM46=186352
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=0
FX_PARAM58=0
FX_PARAM59=0
FX_PARAM60=0
FX_PARAM61=36853
FX_PARAM62=36853
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=6773307
FX_PARAM66=1615300
FX_PARAM67=0
FX_PARAM68=3703351
FX_PARAM69=1521364
FX_PARAM70=0
FX_PARAM71=3703351
FX_PARAM72=1521364
FX_PARAM73=0
FX_PARAM74=3703351
FX_PARAM75=1521364
FX_PARAM76=0
FX_PARAM77=1568073
FX_PARAM78=5215769
FX_PARAM79=0
FX_PARAM80=1792859
FX_PARAM81=4767208
FX_PARAM82=0
FX_PARAM83=2054999
FX_PARAM84=4272196
FX_PARAM85=0
FX_PARAM86=2306602
FX_PARAM87=3771784
FX_PARAM88=0
FX_PARAM89=6352032
FX_PARAM90=22641
FX_PARAM91=0
FX_PARAM92=6352032
FX_PARAM93=22641
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Quarry
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Room_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=192
FX_PARAM29=224
FX_PARAM30=208
FX_PARAM31=240
FX_PARAM32=256
FX_PARAM33=480
FX_PARAM34=448
FX_PARAM35=224
FX_PARAM36=3024
FX_PARAM37=4016
FX_PARAM38=2576
FX_PARAM39=2800
FX_PARAM40=2576
FX_PARAM41=1520
FX_PARAM42=416
FX_PARAM43=400
FX_PARAM44=416
FX_PARAM45=448
FX_PARAM46=11280
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=1775
FX_PARAM58=1619
FX_PARAM59=1682
FX_PARAM60=1869
FX_PARAM61=22028
FX_PARAM62=22028
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=3518317
FX_PARAM66=4870290
FX_PARAM67=0
FX_PARAM68=1008573
FX_PARAM69=4446910
FX_PARAM70=0
FX_PARAM71=1008573
FX_PARAM72=4446910
FX_PARAM73=0
FX_PARAM74=1008573
FX_PARAM75=4446910
FX_PARAM76=0
FX_PARAM77=1787451
FX_PARAM78=2427280
FX_PARAM79=0
FX_PARAM80=2069322
FX_PARAM81=1882209
FX_PARAM82=0
FX_PARAM83=2393498
FX_PARAM84=1378152
FX_PARAM85=0
FX_PARAM86=2749168
FX_PARAM87=950027
FX_PARAM88=0
FX_PARAM89=3012564
FX_PARAM90=707070
FX_PARAM91=0
FX_PARAM92=3012564
FX_PARAM93=707070
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Room
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Quarry_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=5856
FX_PARAM29=6112
FX_PARAM30=6016
FX_PARAM31=6272
FX_PARAM32=6432
FX_PARAM33=8256
FX_PARAM34=3728
FX_PARAM35=1968
FX_PARAM36=18080
FX_PARAM37=24000
FX_PARAM38=21280
FX_PARAM39=23120
FX_PARAM40=21280
FX_PARAM41=12640
FX_PARAM42=944
FX_PARAM43=864
FX_PARAM44=896
FX_PARAM45=1008
FX_PARAM46=93168
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=0
FX_PARAM58=0
FX_PARAM59=0
FX_PARAM60=0
FX_PARAM61=36853
FX_PARAM62=36853
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=5605613
FX_PARAM66=2782994
FX_PARAM67=0
FX_PARAM68=1949948
FX_PARAM69=2090718
FX_PARAM70=0
FX_PARAM71=1949948
FX_PARAM72=2090718
FX_PARAM73=0
FX_PARAM74=1949948
FX_PARAM75=2090718
FX_PARAM76=0
FX_PARAM77=573926
FX_PARAM78=5976009
FX_PARAM79=0
FX_PARAM80=682352
FX_PARAM81=5569848
FX_PARAM82=0
FX_PARAM83=818498
FX_PARAM84=5106251
FX_PARAM85=0
FX_PARAM86=959520
FX_PARAM87=4607183
FX_PARAM88=0
FX_PARAM89=4975145
FX_PARAM90=37948
FX_PARAM91=0
FX_PARAM92=4975145
FX_PARAM93=37948
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Quarry
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Sewer_Pipe_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=1344
FX_PARAM29=1552
FX_PARAM30=1472
FX_PARAM31=1680
FX_PARAM32=1824
FX_PARAM33=3344
FX_PARAM34=3840
FX_PARAM35=2032
FX_PARAM36=18096
FX_PARAM37=24000
FX_PARAM38=21920
FX_PARAM39=23824
FX_PARAM40=21920
FX_PARAM41=13024
FX_PARAM42=848
FX_PARAM43=784
FX_PARAM44=816
FX_PARAM45=896
FX_PARAM46=96000
FX_PARAM47=6710886
FX_PARAM48=10066330
FX_PARAM49=10066330
FX_PARAM50=6710886
FX_PARAM51=6710886
FX_PARAM52=6710886
FX_PARAM53=10066330
FX_PARAM54=10066330
FX_PARAM55=1677721
FX_PARAM56=1342177
FX_PARAM57=19357
FX_PARAM58=17659
FX_PARAM59=18338
FX_PARAM60=20376
FX_PARAM61=43699
FX_PARAM62=43699
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=5605613
FX_PARAM66=2782994
FX_PARAM67=0
FX_PARAM68=8157552
FX_PARAM69=125088
FX_PARAM70=0
FX_PARAM71=8157552
FX_PARAM72=125088
FX_PARAM73=0
FX_PARAM74=8157552
FX_PARAM75=125088
FX_PARAM76=0
FX_PARAM77=4836807
FX_PARAM78=3082823
FX_PARAM79=0
FX_PARAM80=5371362
FX_PARAM81=2541620
FX_PARAM82=0
FX_PARAM83=5921011
FX_PARAM84=2003430
FX_PARAM85=0
FX_PARAM86=6457884
FX_PARAM87=1498719
FX_PARAM88=0
FX_PARAM89=8388605
FX_PARAM90=0
FX_PARAM91=0
FX_PARAM92=8388605
FX_PARAM93=0
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Sewer Pipe
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Sewer_Pipe_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=2688
FX_PARAM29=3104
FX_PARAM30=2960
FX_PARAM31=3376
FX_PARAM32=3648
FX_PARAM33=4016
FX_PARAM34=7680
FX_PARAM35=4064
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=43840
FX_PARAM39=47632
FX_PARAM40=43840
FX_PARAM41=26048
FX_PARAM42=1696
FX_PARAM43=1568
FX_PARAM44=1632
FX_PARAM45=1808
FX_PARAM46=192000
FX_PARAM47=6710886
FX_PARAM48=10066330
FX_PARAM49=10066330
FX_PARAM50=6710886
FX_PARAM51=6710886
FX_PARAM52=6710886
FX_PARAM53=10066330
FX_PARAM54=10066330
FX_PARAM55=1677721
FX_PARAM56=1342177
FX_PARAM57=19357
FX_PARAM58=17659
FX_PARAM59=18338
FX_PARAM60=20376
FX_PARAM61=43699
FX_PARAM62=43699
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=6773307
FX_PARAM66=1615300
FX_PARAM67=0
FX_PARAM68=8265799
FX_PARAM69=66486
FX_PARAM70=0
FX_PARAM71=8265799
FX_PARAM72=66486
FX_PARAM73=0
FX_PARAM74=8265799
FX_PARAM75=66486
FX_PARAM76=0
FX_PARAM77=6255754
FX_PARAM78=1851233
FX_PARAM79=0
FX_PARAM80=6619935
FX_PARAM81=1488152
FX_PARAM82=0
FX_PARAM83=6974493
FX_PARAM84=1148113
FX_PARAM85=0
FX_PARAM86=7305599
FX_PARAM87=840682
FX_PARAM88=0
FX_PARAM89=8388606
FX_PARAM90=0
FX_PARAM91=0
FX_PARAM92=8388606
FX_PARAM93=0
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Sewer Pipe
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Stone_Corridor_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=2496
FX_PARAM29=2896
FX_PARAM30=2752
FX_PARAM31=3152
FX_PARAM32=3408
FX_PARAM33=3824
FX_PARAM34=7680
FX_PARAM35=4064
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=43840
FX_PARAM39=47632
FX_PARAM40=43840
FX_PARAM41=26048
FX_PARAM42=1648
FX_PARAM43=1520
FX_PARAM44=1584
FX_PARAM45=1760
FX_PARAM46=192000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=2919
FX_PARAM58=2663
FX_PARAM59=2766
FX_PARAM60=3073
FX_PARAM61=32657
FX_PARAM62=32657
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=4011366
FX_PARAM66=4377241
FX_PARAM67=0
FX_PARAM68=3178828
FX_PARAM69=2749915
FX_PARAM70=0
FX_PARAM71=3178828
FX_PARAM72=2749915
FX_PARAM73=0
FX_PARAM74=3178828
FX_PARAM75=2749915
FX_PARAM76=0
FX_PARAM77=1237827
FX_PARAM78=6170970
FX_PARAM79=0
FX_PARAM80=1396241
FX_PARAM81=5842842
FX_PARAM82=0
FX_PARAM83=1614860
FX_PARAM84=5449153
FX_PARAM85=0
FX_PARAM86=1856134
FX_PARAM87=5018543
FX_PARAM88=0
FX_PARAM89=5760114
FX_PARAM90=203566
FX_PARAM91=0
FX_PARAM92=5760114
FX_PARAM93=203566
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Stone Corridor
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Stone_Room_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=1152
FX_PARAM29=1312
FX_PARAM30=1264
FX_PARAM31=1424
FX_PARAM32=1536
FX_PARAM33=2784
FX_PARAM34=3840
FX_PARAM35=2032
FX_PARAM36=18096
FX_PARAM37=24000
FX_PARAM38=21920
FX_PARAM39=23824
FX_PARAM40=21920
FX_PARAM41=13024
FX_PARAM42=752
FX_PARAM43=688
FX_PARAM44=720
FX_PARAM45=800
FX_PARAM46=96000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=5210
FX_PARAM58=4753
FX_PARAM59=4935
FX_PARAM60=5484
FX_PARAM61=22802
FX_PARAM62=22802
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=2642582
FX_PARAM66=5746025
FX_PARAM67=0
FX_PARAM68=3035675
FX_PARAM69=2535664
FX_PARAM70=0
FX_PARAM71=3035675
FX_PARAM72=2535664
FX_PARAM73=0
FX_PARAM74=3035675
FX_PARAM75=2535664
FX_PARAM76=0
FX_PARAM77=959520
FX_PARAM78=6250798
FX_PARAM79=0
FX_PARAM80=1123659
FX_PARAM81=5891590
FX_PARAM82=0
FX_PARAM83=1325676
FX_PARAM84=5476272
FX_PARAM85=0
FX_PARAM86=1559441
FX_PARAM87=5021896
FX_PARAM88=0
FX_PARAM89=6665250
FX_PARAM90=86671
FX_PARAM91=0
FX_PARAM92=6665250
FX_PARAM93=86671
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Stone Room
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Room_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=384
FX_PARAM29=448
FX_PARAM30=416
FX_PARAM31=480
FX_PARAM32=512
FX_PARAM33=576
FX_PARAM34=896
FX_PARAM35=464
FX_PARAM36=6032
FX_PARAM37=8016
FX_PARAM38=5152
FX_PARAM39=5600
FX_PARAM40=5152
FX_PARAM41=3056
FX_PARAM42=832
FX_PARAM43=800
FX_PARAM44=832
FX_PARAM45=896
FX_PARAM46=22576
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=1775
FX_PARAM58=1619
FX_PARAM59=1682
FX_PARAM60=1869
FX_PARAM61=22028
FX_PARAM62=22028
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=5247874
FX_PARAM66=3140733
FX_PARAM67=0
FX_PARAM68=2406271
FX_PARAM69=3604714
FX_PARAM70=0
FX_PARAM71=2406271
FX_PARAM72=3604714
FX_PARAM73=0
FX_PARAM74=2406271
FX_PARAM75=3604714
FX_PARAM76=0
FX_PARAM77=3506603
FX_PARAM78=1795139
FX_PARAM79=0
FX_PARAM80=3842019
FX_PARAM81=1352650
FX_PARAM82=0
FX_PARAM83=4196861
FX_PARAM84=963596
FX_PARAM85=0
FX_PARAM86=4555473
FX_PARAM87=644991
FX_PARAM88=0
FX_PARAM89=4809278
FX_PARAM90=470220
FX_PARAM91=0
FX_PARAM92=4809278
FX_PARAM93=470220
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Room
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Stone_Corridor_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=1248
FX_PARAM29=1440
FX_PARAM30=1376
FX_PARAM31=1568
FX_PARAM32=1696
FX_PARAM33=3152
FX_PARAM34=3840
FX_PARAM35=2032
FX_PARAM36=18096
FX_PARAM37=24000
FX_PARAM38=21920
FX_PARAM39=23824
FX_PARAM40=21920
FX_PARAM41=13024
FX_PARAM42=816
FX_PARAM43=752
FX_PARAM44=800
FX_PARAM45=880
FX_PARAM46=96000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=2919
FX_PARAM58=2663
FX_PARAM59=2766
FX_PARAM60=3073
FX_PARAM61=32657
FX_PARAM62=32657
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=2220644
FX_PARAM66=6167963
FX_PARAM67=0
FX_PARAM68=1534177
FX_PARAM69=3618023
FX_PARAM70=0
FX_PARAM71=1534177
FX_PARAM72=3618023
FX_PARAM73=0
FX_PARAM74=1534177
FX_PARAM75=3618023
FX_PARAM76=0
FX_PARAM77=427738
FX_PARAM78=6870059
FX_PARAM79=0
FX_PARAM80=507219
FX_PARAM81=6593299
FX_PARAM82=0
FX_PARAM83=595881
FX_PARAM84=6268872
FX_PARAM85=0
FX_PARAM86=714239
FX_PARAM87=5895799
FX_PARAM88=0
FX_PARAM89=4158783
FX_PARAM90=327583
FX_PARAM91=0
FX_PARAM92=4158783
FX_PARAM93=327583
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Stone Corridor
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Stone_Room_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=2304
FX_PARAM29=2640
FX_PARAM30=2512
FX_PARAM31=2864
FX_PARAM32=3088
FX_PARAM33=3264
FX_PARAM34=7680
FX_PARAM35=4064
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=43840
FX_PARAM39=47632
FX_PARAM40=43840
FX_PARAM41=26048
FX_PARAM42=1504
FX_PARAM43=1392
FX_PARAM44=1456
FX_PARAM45=1600
FX_PARAM46=192000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=5210
FX_PARAM58=4753
FX_PARAM59=4935
FX_PARAM60=5484
FX_PARAM61=22802
FX_PARAM62=22802
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=4450989
FX_PARAM66=3937618
FX_PARAM67=0
FX_PARAM68=4825150
FX_PARAM69=1687996
FX_PARAM70=0
FX_PARAM71=4825150
FX_PARAM72=1687996
FX_PARAM73=0
FX_PARAM74=4825150
FX_PARAM75=1687996
FX_PARAM76=0
FX_PARAM77=2306602
FX_PARAM78=5117370
FX_PARAM79=0
FX_PARAM80=2593054
FX_PARAM81=4699968
FX_PARAM82=0
FX_PARAM83=2886013
FX_PARAM84=4266459
FX_PARAM85=0
FX_PARAM86=3212807
FX_PARAM87=3801697
FX_PARAM88=0
FX_PARAM89=7427981
FX_PARAM90=48311
FX_PARAM91=0
FX_PARAM92=7427981
FX_PARAM93=48311
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Stone Room
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\rmsstate.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=32
FX_NUMINPUTS=6
FX_NUMOUTPUTS=0
FX_DSPCYCLES=500
FX_YMEMSIZE=0
FX_NUMPARAMS=24
FX_NUMPUBLICPARAMS=1

; parameters and their descriptions

FX_PARAM0=6
FX_PARAM0_NAME=Mixbins
FX_PARAM0_DESCRIPTION=Number of Mixbins to monitor
FX_PARAM0_UNITS=Mixbins Count
FX_PARAM0_TYPE=INTEGER
FX_PARAM0_MIN=1
FX_PARAM0_MAX=6
FX_PARAM0_ATOMIC=1

; DSPBuilder settings
FX_NAME=Peak and Amplitude Realtime Monitor
FX_DSPCODE=rms.scr
FX_INPUT0_NAME=Front Left
FX_INPUT1_NAME=Front Right
FX_INPUT2_NAME=Center
FX_INPUT3_NAME=LFE
FX_INPUT4_NAME=Rear Left
FX_INPUT5_NAME=Rear Right

FX_OUTPUT0_NAME=Out
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Under_Water_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=1344
FX_PARAM29=1568
FX_PARAM30=1488
FX_PARAM31=1712
FX_PARAM32=1840
FX_PARAM33=2096
FX_PARAM34=7456
FX_PARAM35=3952
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=42560
FX_PARAM39=46240
FX_PARAM40=42560
FX_PARAM41=25280
FX_PARAM42=1216
FX_PARAM43=1136
FX_PARAM44=1184
FX_PARAM45=1312
FX_PARAM46=186352
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=7044
FX_PARAM58=6426
FX_PARAM59=6673
FX_PARAM60=7415
FX_PARAM61=146716
FX_PARAM62=146716
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=8334850
FX_PARAM66=53758
FX_PARAM67=0
FX_PARAM68=8388391
FX_PARAM69=70
FX_PARAM70=0
FX_PARAM71=8388391
FX_PARAM72=70
FX_PARAM73=0
FX_PARAM74=8388391
FX_PARAM75=70
FX_PARAM76=0
FX_PARAM77=7920784
FX_PARAM78=357751
FX_PARAM79=0
FX_PARAM80=8105480
FX_PARAM81=204636
FX_PARAM82=0
FX_PARAM83=8235675
FX_PARAM84=103157
FX_PARAM85=0
FX_PARAM86=8316334
FX_PARAM87=44820
FX_PARAM88=0
FX_PARAM89=8388608
FX_PARAM90=0
FX_PARAM91=0
FX_PARAM92=8388608
FX_PARAM93=0
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Under Water
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\reverb_Under_Water_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=672
FX_PARAM29=784
FX_PARAM30=736
FX_PARAM31=848
FX_PARAM32=912
FX_PARAM33=1712
FX_PARAM34=3728
FX_PARAM35=1968
FX_PARAM36=18080
FX_PARAM37=24000
FX_PARAM38=21280
FX_PARAM39=23120
FX_PARAM40=21280
FX_PARAM41=12640
FX_PARAM42=608
FX_PARAM43=560
FX_PARAM44=592
FX_PARAM45=656
FX_PARAM46=93168
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=7044
FX_PARAM58=6426
FX_PARAM59=6673
FX_PARAM60=7415
FX_PARAM61=146716
FX_PARAM62=146716
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=8287089
FX_PARAM66=101518
FX_PARAM67=0
FX_PARAM68=8388198
FX_PARAM69=133
FX_PARAM70=0
FX_PARAM71=8388198
FX_PARAM72=133
FX_PARAM73=0
FX_PARAM74=8388198
FX_PARAM75=133
FX_PARAM76=0
FX_PARAM77=7525033
FX_PARAM78=660389
FX_PARAM79=0
FX_PARAM80=7858794
FX_PARAM81=382933
FX_PARAM82=0
FX_PARAM83=8101345
FX_PARAM84=193766
FX_PARAM85=0
FX_PARAM86=8251792
FX_PARAM87=84846
FX_PARAM88=0
FX_PARAM89=8388608
FX_PARAM90=0
FX_PARAM91=0
FX_PARAM92=8388608
FX_PARAM93=0
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Under Water
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\spliterstate.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=0
FX_NUMINPUTS=1
; this is the max number of outputs
FX_NUMOUTPUTS=8
FX_YMEMSIZE=0
FX_DSPCYCLES=1000
FX_NUMPARAMS=32
FX_NUMPUBLICPARAMS=0

; Number of outputs
FX_PARAM0=8
; output gains
FX_PARAM1=4194000
FX_PARAM2=4194000
FX_PARAM3=4194000
FX_PARAM4=4194000
FX_PARAM5=4194000
FX_PARAM6=4194000
FX_PARAM7=4194000
FX_PARAM8=4194000

; DSPBuilder settings
FX_NAME=1xN Splitter
FX_DSPCODE=spliter.scr
FX_INPUT0_NAME=In
FX_OUTPUT0_NAME=Out 0
FX_OUTPUT1_NAME=Out 1
FX_OUTPUT2_NAME=Out 2
FX_OUTPUT3_NAME=Out 3
FX_OUTPUT4_NAME=Out 4
FX_OUTPUT5_NAME=Out 5
FX_OUTPUT6_NAME=Out 6
FX_OUTPUT7_NAME=Out 7
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\dsound\dsp\ini\xtalkstate.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=0
FX_NUMINPUTS=4
FX_NUMOUTPUTS=4
FX_DSPCYCLES=3000
FX_YMEMSIZE=0
FX_NUMPARAMS=80
FX_NUMPUBLICPARAMS=0
FX_PARAM0=0
FX_PARAM1=0

; DSPBuilder settings
FX_NAME=XTalk
FX_DSPCODE=xtalk.scr
FX_INPUT0_NAME=Front Left
FX_INPUT1_NAME=Front Right
FX_INPUT2_NAME=Back Left
FX_INPUT3_NAME=Back Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\codecs\wmalib\doc\wma.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft WMA Version 2.0 Title _PID_HLINKSWMA Version 2.0 An Overview of Audio Decoder in Windows Media Player Thumpudi Naveen V5_SpecTemplate Thumpudi Naveen Microsoft Word 9.09@4d6 4K&x3K& WMPSourceFeatures.doc"U2>f K6',Y BnTZ[ k=Jl; i|LS7 SX}[3 kg*)"/* oiyU{ *ImLo bECO9 7z3|M $~2"B nvgwf {ofWB*B C_ay9 "o&Z* |Wt[WT_ 'yh1# V;vDj \rF@t wLK}UM x*!5=%y WiMW] ~ #8I guJ1\  #p%o a4z:~: 3y'zN !I Z# +{/qO ~ #8I 0:at[ ##hK> "#XD~! "z%~% 97:nt ^$z$~'r :J:@{ qZ;)) $""8! AZ'DM n\U|k QUIFQ I!J$d eY*4"}m D!dgh {_bl} ~ov;t p!rW/ Y8p5= Js+TH e;,w+ -Bu/Vh gd``b x ],`YF( cd``b ,e`ab 2B16_0 FE~^u ZzmNf2 3? gd``b 4Af +VS' d3qw5 @%kg-_X >lQs: >lQs: d``v`d``b MSR9pOjO 9W"j% *v/j,f ]4X'P Mfmjy [RaUs 8-.q% |`Tz, `_dn0 H$gwFY c112BY EE<PQ+E.  Dnf +7 bd``b IAQj|n2 L.h|r p*adbR =6!v120 c112BY `|?pH/ RpeqIj. 4.J"Z+ X-,p#- UxQT` eHEZj m3*OP ,e*N]2 YPF.9 (8at' 3Du'g ed``b ,He`0 [;[v" sfw/h: _#wc[ d``fa bd``b x ],`YF( c112BY bd``b x ],`YF( iW}R_[ z6Y\S_3 DwHO. c112BY ,He`( ,ebab *.MJ+J @*l3! oqcBWV #E=H( WZY'\Qx d``Vdd``b J.hhs KRsA< c112BY ,e`ab *.MJ+J .phAtA RpeqIj. gd``b rWpenR~ RpeqIj. }Kwf0 &ig4M @BvFr Tm&z* d``Vdd``b ,e`ab c112BY *.MJ+J ,,W*$ hn@4g hnp478 HP*}a )spBc 2#22z RflJcO ^#sJA S)sjJcO (sZFF C|:eN/ PW:'>3, gRffA A|3en |+enMi g]#^O "e^Lh fSfv. VQfU* WY[Kz fRFqC Vzhf] dc;C= VS}8e #)sddd c(sLB c)slAF wJIFO )svAF s(sNIFO (s^dd dc;C= 2sJ2z #|)e.- 2KJ2z 2+J2z +)seF I}#en VC};en/ Ee~7=_ x5]'A zI2Oc MkoG~ Rfa*[Mu+eZ## )3022 eVdb;C *}}}~6 p.+Cd F#q7*hftp \[:7& anV:7+ tnx:7< K}a]^ PfLbd qq!3. (sRNc C}2eN lN==. Q[F}*eN 3)sfA c;C}6e s(sNA #|!e. |9e./ }YF]O L{Mlg F70jqCj G]_7& uBs|No N%sr[ $f%+m [ZZdU] qqm\\ |;#F&p/ {(_%2O2[ EVS>5 Q^%2O: l3<_*2O2[ YMyp$ ,2O2[ #2Oel3= "2Oel3 >l{z>% ##x1y sj~}  |3ynN *h5yV' yj2bd Yu.677 {]WwF c112BY &70&2 c112BY &70&2 cd``b d``Vad``b 2B16?2 g1{\) d``6`d``b .p|AtA )JZEf llpVE ;r]*t !(4Up cb``b  sC2sS @*lRa KRsA< W}XXs W}XXs 7ow"P} hI']+ doD]k ,K$1% ,K$1% 6,#HU w}>z9 gv@zY +e/>A R!k{7ZA#Z -Z-Q[4#- a_6X^ W*^|. y7jli ryD&c =J;[z\ K8ntsfz 6)OiO+ ~1/q} ?G_V$ v;gG# <f|lX SN{V# p2HZl )%X)a9 ]+QY# /EesR mivycks rBz@n levEk <6[I\[ F7W\d 8^f~] 7v0w\ l\}.w,H )DwLK8Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Word Picture MSWordDoc Word.Picture.8Microsoft Corp. TitleThumpudi Naveen Normal Thumpudi Naveen Microsoft Word 9.0bjbjU Quantized LSF Inverse Quantizer LSF to PARCOR PARCOR to LPC PARCORMicrosoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Word Picture MSWordDoc Word.Picture.8Microsoft Corp. TitleThumpudi Naveen Normal Thumpudi Naveen Microsoft Word 9.0bjbjU DCT-IV Window Function Generator subframe_size_curr spec_coef subframe_size_prev subframe_size_next Delay by subframe_size_curr Reconstructed Time SamplesMicrosoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Word Picture MSWordDoc Word.Picture.8Microsoft Corp. TitleThumpudi Naveen Normal Thumpudi Naveen Microsoft Word 9.0bjbjU WMA Bitstream Packet Layer Decoder Raw Bits Frame Layer Decoder Audio Samples Bitstream Buffer new_headerMicrosoft Word Picture MSWordDoc Word.Picture.8Microsoft Corp. TitleThumpudi Naveen Normal Thumpudi Naveen Microsoft Word 9.0bjbjU LPC Parameters Mask Information Compute Un-normalized Weights Compute Un-normalized Weights Only one of two is available Normalization Factor Weighting FactorsMicrosoft Visio Drawing VISIO 6.0 Shapes Visio.Drawing.6" WMFC " WMFC " WMFC " WMFC " WMFC  Arial "System  Arial "System  Arial  Arial  Arial Normal OperationH  Arial  Arial Initialization  Arial  Arial Terminationi=  Arial  Arial WMA Decoderic  Arial  Arial ApplicationiC  Arial Initialize  Arial Initialize  Arial WMAFileDecodeInit(...)B  Arial  Arial Instruct Decoder to Start Decoding(  Arial  Arial Request for More0 Compressed Datae0  Arial WMAFileDecodeData(...)B  Arial  Arial stream"  Arial WMAFileCBGetData(...))B  Arial  Arial More Data Available?-  Arial Decode Data  Arial  Arial  Arial Get Reconstructed.4 Data0  Arial  Arial Supply Decoded- Samples?-  Arial  Arial All Decoded Samples?- Shipped?-  Arial  Arial  Arial  Arial Render0 Reconstructed Data0  Arial WMAFileGetPCM(...)B  Arial  Arial End of Stream or- Presentation? -  Arial  Arial Terminate  Arial Terminate  Arial WMAFileDecodeClose(...)  Arial  ArialPages Masters Page-1 Vertical holder Functional band Separator Preparation Dynamic connector Predefined process Process Sequential data Decision Terminator On-page reference _VPID_PREVIEWS _VPID_ALTERNATENAMES _PID_LINKBASEtnaveenVisio (TM) Drawing Arial Wingdz onotype  Symbo L/^&9 7AOY@;P P:?-\ tKf2| BOTOfOxO W?i?{4Lz $YkU1 1q1qZ I/[/m/ ?0?B?T?f?x? /'/9/,O >OPObOtO _#_5_ G_Y_k_}_ o1oCoUo /#/5/ G/Y/k/}/ 1?C?U? O(O:OLO^O@pO spjQ" W_i_{_ ?oQocouo !/3-lE( O(O:O _&_8_J_ d-prn-22 \CORP009 ?Letter ///A/S/e/w/ winspo \\red -prn-22\ CORP0092 NPIB9DF?E1:RAW Bands  are used  to orga nize the  differe nt steps Dz%Z" !3Dd *4 `7Copy right 19 99 Visio  Corpora tion.  A ll  Bs re served. CFF.chm! #22080 "@D!D! "T!T!52! 2#,tvB :vtband?mgr: XvE%  C0Offse t from t op of  manager   depende nt on nu He|!B label  display ed verti cally  orizont5 starGted title$ ult size %Minimum `SeG@th to be. uL@.L/ `7Cop yright 1 999 Visi o Corpor ation.   eserved. Aj+(h [%5l$ d%YIqO `7Copyr ight 199 9 Visio  Corporat ion.  Al "s res erved. `7Copyr ight 199 9 Visio  Corporat ion.  Al l N2s res erved. 0SIuB N9st# eText=>_ MapName_G: <Proces Adds a  new ver tical ba nd to t or cre  process `7Copyr ight 199 9 Visio  Corporat ion.  Al l l"s res erved. @Q(-DT opyright  1999 Vi sio Corp oration.   All   reserve @_SF@.chm !#22814 (1!x` tband:re C-Is la bel disp layed ve rtically  or hori zont@ #Auc$@ <Func 3%)(Q6 pyright  1999 Vis io Corpo ration.   All  reserved []5 4 tS/E*0 U/E/1 T/+EP7 e/EP2 b/Eg3 tR/E_k0 lT/EV1 <c/E44 T/E ; |U/E-q X/E}Gq `/ETq Da/Eaq bW/Enq T.!uW Indica tes bord etwee n subpro cesses,  or pha ithin a  particul !u!u#z `7Copyri ght 1999  Visio C orporati on.  All  (2s rese rved. 30_SCF F.chm!#2 ?Q(-DT tT."3 J+(#mS marker: 1pPNF idth of  the sepa&>0or <phase'> 1@!@#7 `7Copyr ight 199 9 Visio  Corporat ion.  Al 2s res erved. `7Copyri ght 1999  Visio C orporati on.  All  p"s rese rved. ?P(-DT Flowch This s ymbol re presents  modific ation ng a swi tch, or  initiali `7Cop yright 1 999 Visi o Corpor ation.   eserved.{ _BFS.chm !#22282 "T#OR :_LU| jp8~o `,Enter  the c0 associat ed withB is proce  {of[ stepP0 Resourd peopl eG0quirT askP0n_f %Prope ustom e sel shape onnector This c onnector  automat ically r outes be tween th e shap Vis_BFS. chm!#222 Copyrigh t 1999  io Corpo ration.   All <Bs  reserved ?/g;2 Flowch This s ymbol re presents  a named  process , such a subrout ine, or module. _BFS.chm !#22272 pyright  1999 ,0io  Corpora tion.  A ll L2s re served. w!O$b [uF,] 87o{o %P#`$ wR!+s -b##" 2)qvS ve Line 6A3,Ent er the c  associ ated wit is pro cess~0 Dub3W Resour pleu0quir task~0ne operti A30Set selec ape~0 Flowch This s ymbol re presents  any kin d of pro cessing  function  Doubl e-click  to add s ub-page. Copyrigh t 1999 V isio Cor poration .  All  s reserv _BFS.c hm!#2226O8 ?jt>" ,Enter t sociated  with  process sstep Resour peopl  quir stWask %Propert 0Set> sustom e selec qshape s{ wB Flowc This s ymbol re presents  data thwat  ially ac cessible , such a stored  on magne tic tape `7Copyri ght 1999  Visio C orporati on.  All 2s rese rved. S.chm!#2 %F\|t 3,Enter  the c ssociate d with s procesYs esour people 0quir )1i8l1 operti 30Set selec Flowch This s ymbol re presents  a decis ion or s witching  type fu7nct `7Copy right 19 99 Visio  Corpora tion.  A 2s re served. BFS.chm! #22269 ^MfMf _Yokl %1#2T ter the   assoc iated wi is pr ocessI0 Resour ple@0quir taskI0n %Propert `0Se}ty ustom e sele}c shapeI0 chart This s ymbol re presents  the sta rt or en d of a p rogram f ironm 7Copyrig ht 1999  Visio Co rporatio n.  All  C2s reser N0_BFS .chm!#22?285 _;*6 y O62wc 83,Enter  the c ssociate d with s procesYsu0 sstepu0fq Reosour wnumb peoplel0oquir ku0qIH(^ %Propert :830Set> sustom e selec> qshapeu0 chart Indica tes a cr oss-refe rence wi thin the  same pa ge of owchart. Right-c lick to  fill  color. pyright  1999 Vis io Corpo ration.   All x2s  reserved 0_BFS.ch m!#22286w *D/2(X&r& (.O@O /tVQS bwJHQ 6m3,En ter the   assoc iated wi is pr ocess ResouMr; 0|A@* 1K8N1 %Propert :m30Set> ustom7 e selec shape :z4E1 `&{19A 64EB8-30 0E-11D3- 9FCC-00C 04F68CC4 1`%+! :cf6'.0: ack & Wh?ite Color  Schemes `'Set th @this do cument FlowchaKrt;T YCon?nector x1E1zQ  !uAR E1ww`%ltzQww aHxv5Elt w*5lt wwzUlt w=Qhx ! qhx8q qhx+! w !hxHq w4q hx w8qhx* z<q"hx+ z+%lt, zDq"hx- zHqhx. w_AhxI1 ahxV1ws21 =Q4q4q =A8q8q 3AtDqx2HqHq TqTqzR 9<qB0 EAA1D0EC -E083-45 F5-B96C- 28CF87C5 A903} `P2[ X:  ?0} Y ]  L[ {8 2E187E7- 6151-4A4 F-9BBC-5 5A706FDE B57} {A3 B849A5-D 0E5-9 DCD-A7A4 ED6780C2 0V?h? 980ED2-0 78!@DB5-A D1A-9A23 6995EED {47CDC77~!@065-41 A72D-6F4 C1399AFB 8@{E7B41E 94-2A5B A3-B3FA- FDDEs08B7#71 $j3USS -o?oQoco WMA DecOoder&B {A3B849A 5-DD1C-4 AE5-9DCD -A7A4ED6?780C2}V KE M: { EAA1D0EC -E083-45 F5-B96C- 28CF87C5 A903} [  Eko}o ?+?=?O?a?s? W>OPF Applicat iondOvB82E 187E7-61 @4F-9B BC-55A70 6FDEB57 /'/9/K/ Initiali C5-CD6 E2-A861- A73196FB/5635 DB980 ED2-078C -4DB5-AD 1A-9A236 995EED0 ;oMo_oqo 1E24B1 DA-514A- 4803-864 4-69C4B6?B7199B A3B849A5 -9DCD ED6780C2 FB31B0D 6-666E-4 F1B-8DCB -73F8F84 A1F77 MAFileDe ?Q(-D Ge@eA 7CDC77 65-41' 2D-6F4C1 399AFB2 1D0EC-E0 83-45F5- B96C-28C F87C5A90 rmal Ope?rationGbT nN__)}(:c t [L) _6/H/Z/l/~/ 2?D?V?h?z? _BOTOfOxO /?6W? truct De coder to  Star e#/,/ 7pDj29}D\ 63BE94-C 0B0-4900 -BC2F-36 573F826C 82E187 E7-6151- 4A4F-9BB C-55A706 FDEB57}  47CDC7 065-41 &PA72D-6F 4C1399AF~ @ ]  I[ @L2g4 BO`GL1 7B7C8CA- 8078-430 9-8C82-D FEABBD89 0ED2- B,PD1A-9A 236995EE?D0} X1 _-_lV ;(WZH quest fo r More C ompresse?d Data /)/;/ ?'?9?K?]? O*O<ONO E3BB9C 3BD-572 85A-BF# 6CCA8445 849A5-DD AE5-9D A4ED6 780C>P a}_a8 EA0383F2 -ACB6-AA A204CF55 7?I?2 WMAFi leDecode> (...)m ADC2* F-4FCA-8 3A7-DFD7 A0133  streamk2 UOgOyO dOvO`S !aKo- 0D66w67A6 38-BBF9- 1224D371 ore y ailable? 726F8F 28-3CA0- 442C-8B1 6-7127B6?B2E752 A_S_  4E41D5B- B23D-25D 8BA53D9D Decod -B441-8C 8118E91 U0/B/T/f/x/ J# Og EOWOiO"| \OnO+wK q0E661A 49-A2AE- 4292-B75 A-B9E5D0?E47258 ?F#4* nst?ructed 409-286D -4B5B-A8 FB-46233 42AF74Et 82E187E 7-6151 F-9BBC-5 5A706FDE //~vJ) AAB3F9-7 0D6#P22-9 CB3-FB0A BE7CC90C *qFo<Ojo|o =D*qX Supply  28090-4C AEA-AC 5CE839 1BD0Dx 3B849A5- 0AE5- 0A4E?D6780C -7A99-49 E+06BD- B7B351DE /OAOSO (@RUN0 U(J_\Y Shipped? 38B-5D 35B-8CB8 -12E50CD 3C4C7] 5D4184A 3-A14C-F 4DEF993B >"`D% 35fNo S/e/w/ ayXYes 22069F8 1-281E 68E-875 B1294E44 !yXRe nder Rec onstruct ed Data "/15= 9F19ECE 7-0196-4 94D-8E99 -63BC341 9CFB0 82E18 06151w F-9BBC-5 5A706FDE yTg4t @3A620 -5D7P@0FA 2CB86891 WMAFile GetPCM(. ..)xB) @MV@H ^W@MpR ocPs2cX 2CA10 6D2-024A -4DD7-82 7A-576E6?3E40E0 HOZH7sT End of  Stream  or Prese ntation? kk;&[e r|>q, Jz0xi DAE821DE -1824 -BD23-B2 54DAC590+B4 FF766 258-51D3 -443C-A0 C4-19BF5 E@,&z \[u+& [Termina E5F3A-70 CB-4D4D- 8F8B-DBE 9C3D522B E7B41E9 4-2A5 3-B3FA-F DDE7C58Bw771 ApG1: A6959EE- 90-A1944 7EBC929 47CDC77C 65-41 72D-6F4C 1399AFB2 }a-_{T}aJ_ Vo(ho }a{?" 7A556F 33-22D2- 4CE1-BBB 2-D211CE?8451DC A3B849A5 -DD1o -9DCDz ED6780C5 2A8C76-0 EB8-4403 -9861 DC87D09F WMAFileD ecodeClo se(...) TOfOxO Ax29103D0 Wp5CE- -D445292_9F119os Q620F 9D71-5D2 B-499!P96 6-ECFA75?7346675 ,/>/P. 7654C-2E -953A21D P4_F_S o,o>oPoboto yyF z &Gp1D# |!CCDA6  -2C4A-4 230-8D2C  02A8385A n5f5f ?Q(-DT Terminat uev'E7 B41E94-2 3FA-FDDE 7C58B771 5zQz" M AA1D0EC- E083-45F 5-B96  8C+F8  }?3' TzueYu0Qa C:\Pr ogram Fi les\Visi o\Soluti ons\Flow chart\Ba apes.vss C:\Pr ogram Fi les\Visi o\Soluti ons\Flow chart\Cr oss-Func apes Ver tical.vs D\ EY t] E% CrossFu nctional ?-??0 Guide TheDoc Page-1 ure Form Flow Normal Visio 00 Visio 90 Connector Visio 01 Visio 02 Visio 03 Visio 10 Visio 11 Visio 12 Visio 13 Visio 20 Visio 21 Visio 22 Visio 23 Visio 50 Visio 51 Visio 52 Visio 53 Visio 70 Visio 80  Separat Flow Dashed chart No Flow Title ical hol BayTop BayWidth Lheight Lvert BayHeight BayLeft ShowTitle TitleHeight ultBandS bandMgrMin GridRounding tional b visHMAH BHeight Separator Width sFunctio nalType Preparation sFunctio?nalRX sFunctio?nalRY Duration SchemeName bandMargin bandMin HolderOf chartTyp Resources xLeft xRight mic conn?ector efined p rocess Process ential d Decision Terminator age refe?rence I*T!  m*t!  0A!:t 0ZT!0 0)r!0 0P*/@ U4!.\!. 3/E/W/i/{/ ?/?A? S?e?w? 1 _S_ @Docu 0{00021P $0046} |Global Creat Expo~ Deriv Bustomi |SG}P 8y`Tn ,Sym`[J /*/</N/`/r/ ?1?C?U?g?y? Visio ~!D32 cross_ function al_flowc hart  stdole Evalu 020430- 6}#2. C:\WI \Syste 2\STDOL E2.TLB# ID="{B60 401D0-42 27-11D3- 9FCF-00C 04F68CC4 ~E=zI/& "NO`E@ Context ompatibl e32="393 ="4A48F8?57A15B PB="F7F5 450A5F1A ="A4A616 F56EA36F ost Exte nder Inf 5v1={ 3832D640 -CF90 pA0C9 11005A}; VBE;5y _ts EMicrosoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Word Picture MSWordDoc Word.Picture.8Microsoft Corp. TitleThumpudi Naveen Normal Thumpudi Naveen Microsoft Word 9.0o+DFo+DfbjbjU Forward MLT Perception Modeler Input Audio Samples Multi-Channel Transformation Quantizer Run-Level Coder Rate Controller Bitstream Multiplexer (ASF) Windows Media Audio Bitstream Weighting FactorsMicrosoft Word Picture MSWordDoc Word.Picture.8Microsoft Corp. TitleThumpudi Naveen Normal Thumpudi Naveen Microsoft Word 9.0p+DFp+DfbjbjU Bitstream Parser/Demultiplexer  (ASF) Run-Level Decoder Noise Generator Inverse Quantizer Weighting Factors Multi-Channel Transformation Inverse MLT Output Audio Samples Windows Media Audio BitstreamMicrosoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3Microsoft Excel Chart Biff8 Excel.Chart.8Microsoft Corp. 1024,1024,1024 2048,1024,2048 512,1024,2048 512,1024,512 Sheet2 Sheet3 Chart12 Worksheets ChartsThumpudi Naveen Thumpudi Naveen Microsoft ExcelThumpudi Naveen                                                                                              B "$"#,##0_);\("$"#,##0\) "$"#,##0_);[Red]\("$"#,##0\) "$"#,##0.00_);\("$"#,##0.00\) "$"#,##0.00_);[Red]\("$"#,##0.00\) _("$"* #,##0_);_("$"* \(#,##0\);_("$"* "-"_);_(@_) _(* #,##0_);_(* \(#,##0\);_(* "-"_);_(@_) _("$"* #,##0.00_);_("$"* \(#,##0.00\);_("$"* "-"??_);_(@_) _(* #,##0.00_);_(* \(#,##0.00\);_(* "-"??_);_(@_) Chart12 1024,1024,1024 2048,1024,2048 512,1024,2048 512,1024,512 Sheet2 Sheet3 7n1?74 9x&4I pxADj rl=C8f nnLOX Xni5$ Ef.py 6=((E+ Yni5$n S?o*R a2U0*) K %vmo R||Bv Ac&Q/ +hZbe4 )!XU/ TpxAD *oG8- *oG8- TpxAD )!XU/ +hZbe4 Ac&Q/ R||Bv K %vmo a2U0*) S?o*R Yni5$n 6=((E+ Ef.py Xni5$ nnLOX rl=C8f pxADj 9x&4I 7n1?74 MbP?_ QF|?~ 7n1?74 9x&4I pxADj rl=C8f nnLOX Xni5$ Ef.py 6=((E+ Yni5$n S?o*R a2U0*) K %vmo R||Bv Ac&Q/ +hZbe4 )!XU/ TpxAD *oG8- *oG8- TpxAD )!XU/ +hZbe4 Ac&Q/ R||Bv K %vmo a2U0*) S?o*R Yni5$n 6=((E+ Ef.py Xni5$ nnLOX rl=C8f pxADj 9x&4I 7n1?74 QF|?~ MbP?_ QF|?~ 7n1?74 9x&4I pxADj rl=C8f nnLOX Xni5$ Ef.py 6=((E+ Yni5$n S?o*R a2U0*) K %vmo R||Bv Ac&Q/ +hZbe4 )!XU/ TpxAD *oG8- *oG8- TpxAD )!XU/ +hZbe4 Ac&Q/ R||Bv K %vmo a2U0*) S?o*R Yni5$n 6=((E+ Ef.py Xni5$ nnLOX rl=C8f pxADj 9x&4I 7n1?74 QF|?~ MbP?_ 6 B\9 ~k'JB q;4,F 9*7QKs h"lxz a2U0* ip[[x *oG8- TpxAD )!XU/ +hZbe4 Ac&Q/ R||Bv K %vmo a2U0*) S?o*R Yni5$n 6=((E+ Ef.py Xni5$ nnLOX rl=C8f pxADj 9x&4I 7n1?74 QF|?~ MbP?_ 6 B\9 ~k'JB q;4,F 9*7QKs h"lxz a2U0* ip[[x ip[[x a2U0* h"lxz 9*7QKs q;4,F ~k'JB 6 B\9 MbP?_ MbP?_Microsoft Excel Chart Biff8 Excel.Chart.8Arial Arial Arial "System Window Function ArialMicrosoft Corp. 1024,1024,1024 2048,1024,2048 512,1024,2048 512,1024,512 Sheet2 Sheet3 Chart11 Worksheets ChartsThumpudi Naveen Thumpudi Naveen Microsoft ExcelThumpudi Naveen                                                                                              B "$"#,##0_);\("$"#,##0\) "$"#,##0_);[Red]\("$"#,##0\) "$"#,##0.00_);\("$"#,##0.00\) "$"#,##0.00_);[Red]\("$"#,##0.00\) _("$"* #,##0_);_("$"* \(#,##0\);_("$"* "-"_);_(@_) _(* #,##0_);_(* \(#,##0\);_(* "-"_);_(@_) _("$"* #,##0.00_);_("$"* \(#,##0.00\);_("$"* "-"??_);_(@_) _(* #,##0.00_);_(* \(#,##0.00\);_(* "-"??_);_(@_) Chart11 1024,1024,1024 2048,1024,2048 512,1024,2048 512,1024,512 Sheet2 Sheet3 7n1?74 9x&4I pxADj rl=C8f nnLOX Xni5$ Ef.py 6=((E+ Yni5$n S?o*R a2U0*) K %vmo R||Bv Ac&Q/ +hZbe4 )!XU/ TpxAD *oG8- *oG8- TpxAD )!XU/ +hZbe4 Ac&Q/ R||Bv K %vmo a2U0*) S?o*R Yni5$n 6=((E+ Ef.py Xni5$ nnLOX rl=C8f pxADj 9x&4I 7n1?74 MbP?_ QF|?~ 7n1?74 9x&4I pxADj rl=C8f nnLOX Xni5$ Ef.py 6=((E+ Yni5$n S?o*R a2U0*) K %vmo R||Bv Ac&Q/ +hZbe4 )!XU/ TpxAD *oG8- *oG8- TpxAD )!XU/ +hZbe4 Ac&Q/ R||Bv K %vmo a2U0*) S?o*R Yni5$n 6=((E+ Ef.py Xni5$ nnLOX rl=C8f pxADj 9x&4I 7n1?74 QF|?~ MbP?_ QF|?~ 7n1?74 9x&4I pxADj rl=C8f nnLOX Xni5$ Ef.py 6=((E+ Yni5$n S?o*R a2U0*) K %vmo R||Bv Ac&Q/ +hZbe4 )!XU/ TpxAD *oG8- *oG8- TpxAD )!XU/ +hZbe4 Ac&Q/ R||Bv K %vmo a2U0*) S?o*R Yni5$n 6=((E+ Ef.py Xni5$ nnLOX rl=C8f pxADj 9x&4I 7n1?74 QF|?~ MbP?_ 6 B\9 ~k'JB q;4,F 9*7QKs h"lxz a2U0* ip[[x *oG8- TpxAD )!XU/ +hZbe4 Ac&Q/ R||Bv K %vmo a2U0*) S?o*R Yni5$n 6=((E+ Ef.py Xni5$ nnLOX rl=C8f pxADj 9x&4I 7n1?74 QF|?~ MbP?_ 6 B\9 ~k'JB q;4,F 9*7QKs h"lxz a2U0* ip[[x ip[[x a2U0* h"lxz 9*7QKs q;4,F ~k'JB 6 B\9 MbP?_ MbP?_Microsoft Excel Chart Biff8 Excel.Chart.8Arial Arial Arial "System Window Function ArialMicrosoft Corp. 1024,1024,1024 2048,1024,2048 512,1024,2048 512,1024,512 Sheet2 Sheet3 Chart10 Worksheets ChartsThumpudi Naveen Thumpudi Naveen Microsoft ExcelThumpudi Naveen                                                                                              B "$"#,##0_);\("$"#,##0\) "$"#,##0_);[Red]\("$"#,##0\) "$"#,##0.00_);\("$"#,##0.00\) "$"#,##0.00_);[Red]\("$"#,##0.00\) _("$"* #,##0_);_("$"* \(#,##0\);_("$"* "-"_);_(@_) _(* #,##0_);_(* \(#,##0\);_(* "-"_);_(@_) _("$"* #,##0.00_);_("$"* \(#,##0.00\);_("$"* "-"??_);_(@_) _(* #,##0.00_);_(* \(#,##0.00\);_(* "-"??_);_(@_) Chart10 1024,1024,1024 2048,1024,2048 512,1024,2048 512,1024,512 Sheet2 Sheet3 6 B\9 ~k'JB q;4,F 9*7QKs h"lxz a2U0* ip[[x *oG8- TpxAD )!XU/ +hZbe4 Ac&Q/ R||Bv K %vmo a2U0*) S?o*R Yni5$n 6=((E+ Ef.py Xni5$ nnLOX rl=C8f pxADj 9x&4I 7n1?74 MbP?_ QF|?~ 7n1?74 9x&4I pxADj rl=C8f nnLOX Xni5$ Ef.py 6=((E+ Yni5$n S?o*R a2U0*) K %vmo R||Bv Ac&Q/ +hZbe4 )!XU/ TpxAD *oG8- *oG8- TpxAD )!XU/ +hZbe4 Ac&Q/ R||Bv K %vmo a2U0*) S?o*R Yni5$n 6=((E+ Ef.py Xni5$ nnLOX rl=C8f pxADj 9x&4I 7n1?74 QF|?~ MbP?_ QF|?~ 7n1?74 9x&4I pxADj rl=C8f nnLOX Xni5$ Ef.py 6=((E+ Yni5$n S?o*R a2U0*) K %vmo R||Bv Ac&Q/ +hZbe4 )!XU/ TpxAD *oG8- *oG8- TpxAD )!XU/ +hZbe4 Ac&Q/ R||Bv K %vmo a2U0*) S?o*R Yni5$n 6=((E+ Ef.py Xni5$ nnLOX rl=C8f pxADj 9x&4I 7n1?74 QF|?~ MbP?_ 6 B\9 ~k'JB q;4,F 9*7QKs h"lxz a2U0* ip[[x *oG8- TpxAD )!XU/ +hZbe4 Ac&Q/ R||Bv K %vmo a2U0*) S?o*R Yni5$n 6=((E+ Ef.py Xni5$ nnLOX rl=C8f pxADj 9x&4I 7n1?74 QF|?~ MbP?_ 6 B\9 ~k'JB q;4,F 9*7QKs h"lxz a2U0* ip[[x ip[[x a2U0* h"lxz 9*7QKs q;4,F ~k'JB 6 B\9 MbP?_ MbP?_Microsoft Excel Chart Biff8 Excel.Chart.8Microsoft Corp. 1024,1024,1024 2048,1024,2048 512,1024,2048 512,1024,512 Sheet2 Sheet3 Chart9 Worksheets ChartsThumpudi Naveen Thumpudi Naveen Microsoft ExcelThumpudi Naveen                                                                                              B "$"#,##0_);\("$"#,##0\) "$"#,##0_);[Red]\("$"#,##0\) "$"#,##0.00_);\("$"#,##0.00\) "$"#,##0.00_);[Red]\("$"#,##0.00\) _("$"* #,##0_);_("$"* \(#,##0\);_("$"* "-"_);_(@_) _(* #,##0_);_(* \(#,##0\);_(* "-"_);_(@_) _("$"* #,##0.00_);_("$"* \(#,##0.00\);_("$"* "-"??_);_(@_) _(* #,##0.00_);_(* \(#,##0.00\);_(* "-"??_);_(@_) Chart9 1024,1024,1024 2048,1024,2048 512,1024,2048 512,1024,512 Sheet2 Sheet3 6 B\9 ~k'JB q;4,F 9*7QKs h"lxz a2U0* ip[[x ip[[x a2U0* h"lxz 9*7QKs q;4,F ~k'JB 6 B\9 MbP?_ QF|?~ 7n1?74 9x&4I pxADj rl=C8f nnLOX Xni5$ Ef.py 6=((E+ Yni5$n S?o*R a2U0*) K %vmo R||Bv Ac&Q/ +hZbe4 )!XU/ TpxAD *oG8- *oG8- TpxAD )!XU/ +hZbe4 Ac&Q/ R||Bv K %vmo a2U0*) S?o*R Yni5$n 6=((E+ Ef.py Xni5$ nnLOX rl=C8f pxADj 9x&4I 7n1?74 QF|?~ MbP?_ QF|?~ 7n1?74 9x&4I pxADj rl=C8f nnLOX Xni5$ Ef.py 6=((E+ Yni5$n S?o*R a2U0*) K %vmo R||Bv Ac&Q/ +hZbe4 )!XU/ TpxAD *oG8- *oG8- TpxAD )!XU/ +hZbe4 Ac&Q/ R||Bv K %vmo a2U0*) S?o*R Yni5$n 6=((E+ Ef.py Xni5$ nnLOX rl=C8f pxADj 9x&4I 7n1?74 QF|?~ MbP?_ 6 B\9 ~k'JB q;4,F 9*7QKs h"lxz a2U0* ip[[x *oG8- TpxAD )!XU/ +hZbe4 Ac&Q/ R||Bv K %vmo a2U0*) S?o*R Yni5$n 6=((E+ Ef.py Xni5$ nnLOX rl=C8f pxADj 9x&4I 7n1?74 QF|?~ MbP?_ 6 B\9 ~k'JB q;4,F 9*7QKs h"lxz a2U0* ip[[x ip[[x a2U0* h"lxz 9*7QKs q;4,F ~k'JB 6 B\9 MbP?_ MbP?_Microsoft Equation 3.0 DS Equation Equation.3Microsoft Equation 3.0 DS Equation Equation.3bjbjU Digital Media Division WMA Version 7.0 An Overview of Windows Media Audio Decoding Table of Contents  TOC \o "1-3"  Table of Tables  PAGEREF _Toc498160883 \h  Table of Figures  PAGEREF _Toc498160884 \h  Audience and Disclaimer  PAGEREF _Toc498160885 \h  Summary  PAGEREF _Toc498160886 \h  Introduction  PAGEREF _Toc498160887 \h  Notation  PAGEREF _Toc498160888 \h  1.1.1 Arithmetic Operators  PAGEREF _Toc498160889 \h  1.1.2 Logical operators  PAGEREF _Toc498160890 \h  1.1.3 Relational operators  PAGEREF _Toc498160891 \h  1.1.4 Bitwise operators  PAGEREF _Toc498160892 \h  1.1.5 Assignment  PAGEREF _Toc498160893 \h  1.1.6 Mnemonics  PAGEREF _Toc498160894 \h  1.1.7 Constants  PAGEREF _Toc498160895 \h  1.1.8 How to Read the Bitstream Syntax?  PAGEREF _Toc498160896 \h  Bitstream Syntax/Decode Process  PAGEREF _Toc498160897 \h  Overall Decode Process  PAGEREF _Toc498160898 \h  Packet Layer Decoder  PAGEREF _Toc498160899 \h  Frame Layer Decoder  PAGEREF _Toc498160900 \h  2.3.1 Subframe Header  PAGEREF _Toc498160901 \h  2.3.2 Subframe Coefficient (Run-Level) Decoding  PAGEREF _Toc498160902 \h  Parameter Definitions  PAGEREF _Toc498160903 \h  Decoder Initialization  PAGEREF _Toc498160904 \h  Samples Per Frame  PAGEREF _Toc498160905 \h  Cutoff Frequencies  PAGEREF _Toc498160906 \h  Weighting Mode  PAGEREF _Toc498160907 \h  Allow Super and/or Sub Frames  PAGEREF _Toc498160908 \h  Maximum Number of Subframes in a Frame  PAGEREF _Toc498160909 \h  Bits Per Sample  PAGEREF _Toc498160910 \h  Bits to indicate frame size  PAGEREF _Toc498160911 \h  Dithering Level  PAGEREF _Toc498160912 \h  Parameters for Noise Substitution  PAGEREF _Toc498160913 \h  Packet Layer Decoding  PAGEREF _Toc498160914 \h  Frame Layer Decoding  PAGEREF _Toc498160915 \h  Subframe Header Decoding  PAGEREF _Toc498160916 \h  5.1.1 Bark Band Computation  PAGEREF _Toc498160917 \h  5.1.2 Noise Substitution Header  PAGEREF _Toc498160918 \h  5.1.3 Decoding LPC Header  PAGEREF _Toc498160919 \h  5.1.4 Maximum Level Size, if Escape Code is Used  PAGEREF _Toc498160920 \h  Run-Level (Entropy) Decoder  PAGEREF _Toc498160921 \h  Inverse Quantizer & Noise Substitution  PAGEREF _Toc498160922 \h  5.3.1 An Implementation of qrand()  PAGEREF _Toc498160923 \h  Quantization Noise Shaping (Weighting Factors)  PAGEREF _Toc498160924 \h  5.4.1 Computing Un-normalized Weights from Mask Information  PAGEREF _Toc498160925 \h  5.4.2 Computing Un-normalized Weights from LPC Parameters  PAGEREF _Toc498160926 \h  5.4.3 Normalizing Weights  PAGEREF _Toc498160927 \h  5.4.4 Applying Weight Factors  PAGEREF _Toc498160928 \h  5.4.5 Reducing the Overhead of Weighting Factors  PAGEREF _Toc498160929 \h  Multi-Channel Transformation  PAGEREF _Toc498160930 \h  Inverse Modulated Lapped Transform  PAGEREF _Toc498160931 \h  5.6.1 DCT-IV  PAGEREF _Toc498160932 \h  5.6.2 Window Function Generation  PAGEREF _Toc498160933 \h  5.6.3 Obtaining Reconstruction Values  PAGEREF _Toc498160934 \h  After Decoding a Subframe  PAGEREF _Toc498160935 \h  Interfacing with Applications (Informative)  PAGEREF _Toc498160936 \h  Software API for Microsoft s WMA Decoder  PAGEREF _Toc498160937 \h  Tables  PAGEREF _Toc498160938 \h  Constants  PAGEREF _Toc498160939 \h  Bark Frequencies  PAGEREF _Toc498160940 \h  LSF Reconstruction Values  PAGEREF _Toc498160941 \h  Run-Level Variable Length Coding (Huffman)Tables  PAGEREF _Toc498160942 \h  7.4.1 Group Huffman-RLC-44Q  PAGEREF _Toc498160943 \h  7.4.2 Group Huffman-RLC-44O  PAGEREF _Toc498160944 \h  7.4.3 Group Huffman-RLC-16  PAGEREF _Toc498160945 \h  Mask Variable Length Coding (Huffman) Table  PAGEREF _Toc498160946 \h  Noise Power Variable Length Coding (Huffman) Table  PAGEREF _Toc498160947 \h  Parameter Restrictions  on Legal WMA Bitstreams & Compliant WMA Decoders  PAGEREF _Toc498160948 \h  Legal WMA Version 7 Bitstreams  PAGEREF _Toc498160949 \h  Maximum buffer size requirements  PAGEREF _Toc498160950 \h  8.2.1 max_push_buffer_size  PAGEREF _Toc498160951 \h  8.2.2 max_pull_buffer size  PAGEREF _Toc498160952 \h  Compliant WMA Version 7 Decoders  PAGEREF _Toc498160953 \h  8.3.1 Measuring Compliance of Decoders  PAGEREF _Toc498160954 \h  Glossary  PAGEREF _Toc498160955 \h  Table of Tables  TOC \h \z \c "Table"   HYPERLINK \l "_Toc498160956"  Table 1 Conditionals & loops in the syntax description  PAGEREF _Toc498160956 \h   HYPERLINK \l "_Toc498160957"  Table 2 Array notation  PAGEREF _Toc498160957 \h   HYPERLINK \l "_Toc498160958"  Table 3 Syntax of decode_packet_layer()  PAGEREF _Toc498160958 \h   HYPERLINK \l "_Toc498160959"  Table 4 Syntax of decode_packet()  PAGEREF _Toc498160959 \h   HYPERLINK \l "_Toc498160960"  Table 5 Syntax of decode_packet_header()  PAGEREF _Toc498160960 \h   HYPERLINK \l "_Toc498160961"  Table 6 Syntax of decode_subframe_layer()  PAGEREF _Toc498160961 \h   HYPERLINK \l "_Toc498160962"  Table 7 Syntax of decode_subframe ()  PAGEREF _Toc498160962 \h   HYPERLINK \l "_Toc498160963"  Table 8 Syntax of decode_subframe_header()  PAGEREF _Toc498160963 \h   HYPERLINK \l "_Toc498160964"  Table 9 Syntax for decode_frame_header_bark()  PAGEREF _Toc498160964 \h   HYPERLINK \l "_Toc498160965"  Table 10 Syntax for decode_frame_header_lpc()  PAGEREF _Toc498160965 \h   HYPERLINK \l "_Toc498160966"  Table 11 Syntax for decode_frame_header_noisesub()  PAGEREF _Toc498160966 \h   HYPERLINK \l "_Toc498160967"  Table 12 Syntax of decode_runlevel()  PAGEREF _Toc498160967 \h   HYPERLINK \l "_Toc498160968"  Table 13 Windows Media Audio Decoder API  PAGEREF _Toc498160968 \h   HYPERLINK \l "_Toc498160969"  Table 14 Constants used by the decoder  PAGEREF _Toc498160969 \h   HYPERLINK \l "_Toc498160970"  Table 15 Bark Frequencies  PAGEREF _Toc498160970 \h   HYPERLINK \l "_Toc498160971"  Table 16 LSF Reconstruciton Values  PAGEREF _Toc498160971 \h   HYPERLINK \l "_Toc498160972"  Table 17 Huffman-RLC-44Q-Mono  PAGEREF _Toc498160972 \h   HYPERLINK \l "_Toc498160973"  Table 18 Huffman-RLC-44Q-Diff  PAGEREF _Toc498160973 \h   HYPERLINK \l "_Toc498160974"  Table 19 Huffman-RLC-44O-Mono  PAGEREF _Toc498160974 \h   HYPERLINK \l "_Toc498160975"  Table 20 Huffman-RLC-44O-Diff  PAGEREF _Toc498160975 \h   HYPERLINK \l "_Toc498160976"  Table 21 Huffman-RLC-16-Mono  PAGEREF _Toc498160976 \h   HYPERLINK \l "_Toc498160977"  Table 22 Huffman-RLC-16-Diff  PAGEREF _Toc498160977 \h   HYPERLINK \l "_Toc498160978"  Table 23 Huffman Table for Mask Information  PAGEREF _Toc498160978 \h   HYPERLINK \l "_Toc498160979"  Table 24 Huffman Table for Noise Power Information  PAGEREF _Toc498160979 \h   HYPERLINK \l "_Toc498160980"  Table 25 Parameter limitations of WMA 7.0 legal bit streams  PAGEREF _Toc498160980 \h   HYPERLINK \l "_Toc498160981"  Table 26 Modes of Microsoft's WMA Version 7 Encoder  PAGEREF _Toc498160981 \h  Table of Figures  TOC \h \z \c "Figure"   HYPERLINK \l "_Toc498160982"  Figure 1 Windows Media Audio Encoder Block Diagram  PAGEREF _Toc498160982 \h   HYPERLINK \l "_Toc498160983"  Figure 2 Windows Media Audio Decoder Block Diagram  PAGEREF _Toc498160983 \h   HYPERLINK \l "_Toc498160984"  Figure 3 Cascaded Packet and Frame Layer Decoders  PAGEREF _Toc498160984 \h   HYPERLINK \l "_Toc498160985"  Figure 4 Obtaining LPC Parameters  PAGEREF _Toc498160985 \h   HYPERLINK \l "_Toc498160986"  Figure 5 The process to obtain spectral weighting factors  PAGEREF _Toc498160986 \h   HYPERLINK \l "_Toc498160987"  Figure 6 Inverse Modulated Lapped Transform Process  PAGEREF _Toc498160987 \h   HYPERLINK \l "_Toc498160988"  Figure 7 Window Function Values for various combinations of subframe sizes  PAGEREF _Toc498160988 \h   HYPERLINK \l "_Toc498160989"  Figure 8 Flow diagram of interaction between an application and a WMA decoder  PAGEREF _Toc498160989 \h  Audience and Disclaimer This document is MICROSOFT CONFIDENTIAL-- appropriate care should be taken when distributing copies.  The intended audience is members of the Digital Media Division that need to know the details of Windows Media Audio Decoder. Others with special permissions from Microsoft Corp. may also read this document. Every attempt has been made to provide a complete and accurate description of the current WMA decoder in this document. However, Microsoft s ANSI-C software implementation of the decoder is the real reference and this document merely tries to document it. In addition, Microsoft may modify its WMA decoder for improvements in the future. In case of any divergence or disputes, the reference software implementation shall prevail. Summary This document provides an overview of functional blocks in a WMA decoder. It gives the syntax and semantics of the bitstream.  Introduction The Windows Media Audio (WMA) system uses the waveform coding concepts of subband/transform coding, quantization, and variable length coding to achieve its compression. In addition it models properties of human auditory system to achieve the highest quality of audio even at low data rates. The WMA encoder and decoder systems are shown in   REF _Ref478366231 \h   \* MERGEFORMAT  Figure 1  and   REF _Ref478366346 \h   \* MERGEFORMAT  Figure 2  respectively. This document focuses on the WMA bitstream syntax and semantics, and describes the operation of the decoder.  This section is organized as follows. Section   REF _Ref478371051 \r \h   \* MERGEFORMAT   provides the mathematical operators used to describe the operation of the decoder. It also provides the method used to describe the bitstream syntax.   The remainder of this document is organized as follows. Section   REF _Ref479129936 \w \h   gives the syntax of WMA bitstream. Section 3 describes the initialization of the decoder. Sections   REF _Ref478960224 \w \h   and   REF _Ref478960249 \w \h   describe the operation of the decoder. Section   REF _Ref478960273 \w \h   lists the tables needed by the decoder. Section   REF _Ref479408218 \w \h   gives the current limits on parameter values allowed in a legal WMA bitstream and requirements of a legal WMA decoder. Section   REF _Ref479488452 \w \h   provides an overall glossary for this document. Besides the decompression process described in this document, a WMA decoder might perform other functions, such as a rights management, post-processing such as sample rate conversion, noise reduction, modifying the number of channels, changing resolution of the output (bits/channel-sample), equalization etc. These other functionalities are not documented here.  EMBED Word.Picture.8   Figure   SEQ Figure \* ARABIC   Windows Media Audio Encoder Block Diagram  EMBED Word.Picture.8   Figure   SEQ Figure \* ARABIC   Windows Media Audio Decoder Block Diagram Notation Arithmetic Operators Addition. Subtraction (as a binary operator) or negation (as a unary operator). Increment. Decrement. Multiplication. Power. Integer or real division. If integer division, they are flagged as such. In this case, truncate the result toward zero. For example, 7/4 and (7/(4 are truncated to 1 and (7/4 and 7/(4 are truncated to (1. Rest of the line is a comment. Absolute value. | x | = x , when x > 0 | x | = 0, when x == 0 | x | = (x, when x < 0 Modulus operator. Defined only for positive numbers. Sign(  ) Sign. Sign(x) = 1, when x > 0 Sign(x) = 0, when x == 0 Sign(x) = (1, when x < 0 INT (  ) Truncation to integer operator. Returns the integer part of the real-valued argument. NINT (  ) Nearest integer operator. Returns the nearest integer value to the real-valued argument. Half-integer values are rounded away from zero. Sine. Cosine. Maximum of the arguments. Minimum of the arguments. Exponential. Square root. Logarithm to base 2. Logical operators Logical OR. Logical AND. Logical NOT Relational operators Greater than. Greater than or equal to. Less than. Less than or equal to. Equal to. Not equal to. Bitwise operators A twos complement number representation is assumed where the bitwise operators are used. Shift right with sign extension. Shift left with zero fill. Assignment Assignment operator. Mnemonics The following mnemonics are defined to describe the different data types used in the coded bit stream. uimsbf Unsigned integer, most significant bit first. vlclbf Variable length code, left bit first, where "left" refers to the order in which the VLC codes are written. The byte order of multi-byte words is the same as network byte order: most significant byte first.  Constants 3.1415 9265 358... Other constants used in the decoding process are pre-fixed by  , e.g. D_ENCOPT_BARK. These constants are listed in   REF _Ref478452358 \h  Table 14 How to Read the Bitstream Syntax? The syntax of a legal WMA bitstream is described in Section   REF _Ref479129936 \w \h  . The syntax description uses the following style. Each data item in the bit stream is in bold type, e.g. stereo_mode. Its length in bits, and a mnemonic for its type follows the data item s name. The mnemonics used in this document are given in Section   REF _Ref478374899 \r \h  1.1.6 The action caused by a decoded data element in a bit stream depends on the value of that data element and on data elements previously decoded. The decoding of the data elements and the definition of the state variables used in their decoding are described in Sections   REF _Ref478446641 \w \h   through   REF _Ref478960249 \w \h  The language constructs used to describe the bitstream syntax are same as in   language (cf.   REF _Ref478376586 \h  Table 1 ). The conditionals, branching etc are given in normal type. In the evaluation of the conditionals, we use the 'C'-code convention that a variable or expression evaluating to a non-zero value is equivalent to a condition that is TRUE. Table   SEQ Table \* ARABIC   Conditionals & loops in the syntax description while ( condition ) {    data_element0     . . . if ( condition) {    data_element3     . . .  } else {      data_element4     . . .     data_element1     . . . } while ( condition ) for (expr1; expr2; expr3) {     data_element5     . . . if ( condition) {    data_element2     . . .  Functionx ()      data_element6       Just like in  , nested conditional constructs are allowed. For compactness, the {} may be omitted when only one data element follows. We use the following notation while describing the arrays. Note that when a particular element of an array is given in bold, e.g. data_element [m][n], that particular element value should be read from the bitstream, using the bit-length and type that are associated with the data element. On the other hand, if that element is given in normal font, e.g. data_element7 [m][n], its value should be used in a conditional or other valid   statement, and should not be decoded . Table   SEQ Table \* ARABIC   Array notation Syntax Semantic data_element [ ] data_element [ ] is an array of data. The number of data elements is indicated by the context. data_element [n] data_element [n] is the n+1th element of an array of data. data_element [m][n] data_element [m][n] is the m+1,n+1 th element of a two-dimensional array of data. Definition of function bytealigned() The function bytealigned ( ) returns 1 if the current position is on a byte boundary, that is the next bit in the bit stream is the first bit in a byte. Otherwise it returns 0. Definition of function data_available() This function returns a value of   as long as data is available, otherwise  Bitstream Syntax/Decode Process Using the notation introduced in Section   REF _Ref478371051 \r \h  , this section provides the syntax of a legal WMA bitstream here. In particular, it defines a correct and error-free input bit stream. One should not assume that blindly following this syntax/semantic implements a satisfactory decoding procedure in all the cases. Actual decoders must include a means to recognize lost packets, a means to process users seek requests, as well as a means to present the decompressed data.  Interleaved in the bitstream syntax are hints to the decoding process. The decoding process itself is described in Sections   REF _Ref478446641 \w \h   through   REF _Ref478960249 \w \h  A WMA bitstream is legal only if it is present in advanced streaming format (ASF). The ASF is specified in a separate document available from Microsoft Corp. The following parameters are assumed to be available at the decoder through the ASF stream: version_number, the version of WMA stream, samples_per_second, the sample rate in Hz of the source material, num_channels, the number of channels in the source material, bytes_per_second, the average compressed stream rate, in number of bytes per second, bits_per_packet, the fixed packet size, in bits, encoder_options, a bit-packed word with values indicating if certain features of the bitstream are used or not, and  Based on these parameter values, the following parameter values are computed, as described in Section   REF _Ref478446641 \w \h  , and are used in the bitstream parsing: allow_packets, allow_subframes, log2_frame_size, log2_samppfr, log2_sz_ratio, use_noise_substitution, and weighting_mode. Overall Decode Process The decoding process happens in two stages: depacketization, followed by frame decoding, as shown in   REF _Ref478543095 \h  Figure 3 . The packet layer decoder feeds bits to the frame layer decoder. A frame refers to a constant number of samples of audio. The number of compressed bits representing a frame varies over time, while maintaining an average bit rate. A bitstream buffer is used at the decoder to smooth the fluctuations in compressed frame size.  EMBED Word.Picture.8   Figure   SEQ Figure \* ARABIC   Cascaded Packet and Frame Layer Decoders Syntax to follow in each layer appears next. Packet Layer Decoder Table   SEQ Table \* ARABIC   Syntax of decode_packet_layer() Syntax # bits Notes decode_packet_layer() initialize(); Section   REF _Ref478446641 \w \h   \* MERGEFORMAT  while (data_available()) decode_packet(); Table   SEQ Table \* ARABIC   Syntax of decode_packet() Syntax # bits Notes decode_packet() new_header = 1; if (allow_packets)  decode_packet_header(); // Send remaining (payload) bits in the packet to        // frame layer to be decoded. Table   SEQ Table \* ARABIC   Syntax of decode_packet_header() Syntax No of bits Notes decode_packet_header() packet_number uimsbf num_frames_in_packet uimsbf num_prev_frame_bits log2_frame_size+3 Section   REF _Ref493035933 \n  Frame Layer Decoder This layer listens to the packet layer decoder, and calls decode_subframe() continuously. Table   SEQ Table \* ARABIC   Syntax of decode_subframe_layer() Syntax # bits Notes decode_subframe_layer() while (data_available()) decode_subframe (); Table   SEQ Table \* ARABIC   Syntax of decode_subframe () Syntax # bits Notes decode_subframe () decode_subframe_header(); for (ch = 0; ch < num_channels; ch++) { if (is_channel_coded[ch]) { decode_runlevel(); // inv Q, apply weights, IMLT Section   REF _Ref478960249 \w \h  if (version_number == 1) { while (!bytealigned()) alignment_bit; uimsbf Subframe Header  Table   SEQ Table \* ARABIC   Syntax of decode_subframe_header() Syntax # bits Notes decode_subframe_header() if (allow_subframes) { if (new_header) { // from packet layer ratio_log2_prev log2_sz_ratio uimsbf ratio_log2_curr log2_sz_ratio uimsbf new_header = 0; ratio_log2_next log2_sz_ratio uimsbf // Compute high_cutoff, low_cutoff,  // num_bark_bands, bark_index,  // first_noise_index is_channel_coded[1] = 1; if (num_channels == 1) { is_channel_coded[0] uimsbf } else if (num_channels == 2) { stereo_mode uimsbf is_channel_coded[0] uimsbf is_channel_coded[1] uimsbf if (!is_channel_coded[0] &&     !is_channel_coded[1]) return; quant_step_size_db = 1; do (quant_incr) uimsbf quant_step_size_db  += quant_incr; } while (quant_incr <                D_MAX_QUANT_INCR); // compute max_escape_size Section   REF _Ref479060880 \w \h  5.1.4 // Mark all bark-bands coded, unless updated // by noise substitution header. for (ch = 0; ch < num_channels; ch++) { if (is_channel_coded[ch]) { for (band =  0;  band < num_bark_bands; band++) {   band_not_coded[ch][band] = 0; num_coded_coeff[ch] =  high_cutoff-low_cutoff; if (use_noise_substitution)  decode_frame_header_noisesub(); update_mask = 1; if (allow_subframes &&            (subframe_number > 0 ||             (ratio_log2_curr + ratio_log2_next) > 1) More than 1 subframe in this frame update_mask; uimsbf if (weighting_mode ==  decode_frame_header_bark() } else if (weighting_mode ==  decode_frame_header_lpc() Table   SEQ Table \* ARABIC   Syntax for decode_frame_header_bark() Syntax # bits Notes decode_frame_header_bark() { for (ch = 0; ch < num_channels; ch++) { if (is_channel_coded[ch]) {    if (update_mask) { band = 0; if (version_number == 1) { mask[ch][0]; uimsbf mask[ch][0] += 10; band++; for (; band < num_bark_bands; band++) { mask_diff; vlclbf mask_diff -= 60; mask_prev = (band==0) ?  36: mask[ch][band-1]; mask[ch][band] = mask_diff+mask_prev; // Note size for stretching subframe_size_with_update[ch] =  subframe_size_curr;    } else if (use_noise_substitution) { resample_weights();    Section   REF _Ref479060713 \w \h  5.4.5 Table   SEQ Table \* ARABIC   Syntax for decode_frame_header_lpc() Syntax # bits Notes decode_frame_header_lpc() { for (ch = 0; ch < num_channels; ch++) { if (is_channel_coded[ch]) {    if (update_mask) { for (order = 0; order < D_LPCORDER; order++) { if (order == 0 ||      order == 8 ||     order == 9)  quantized_lsf[ch][order] uimsbf else  quantized_lsf[ch][order] uimsbf // convert quantized lsp to                    // LPC to spectrum Section   REF _Ref479055742 \w \h  5.1.3    } else if (subframe_number > 0) { // channel coded, but no update resample_weights();   Section   REF _Ref479060713 \w \h  5.4.5 } else if (update_mask) { // channel not coded, yet required                   // to reset reset_weights();    Section   REF _Ref479060713 \w \h  5.4.5 } else if (subframe_number > 0) { // channel not coded, stretch  // previously available information resample_weights();    Section   REF _Ref479060713 \w \h  5.4.5 Table   SEQ Table \* ARABIC   Syntax for decode_frame_header_noisesub() Syntax # bits Notes decode_frame_header_noisesub() { // indication of noise-substituted bands for (ch = 0;  ch < num_channels; ch++) {  if (is_channel_coded[ch]) { num_coded_coeff[ch] =  first_noise_index   low_cutoff; num_bands_not_coded[ch] = 0; band = first_noise_band; while (max(first_noise_index,       bark_index[band]) <   high_cutoff) { Sections    REF _Ref478955397 \w \h  5.1.1  REF _Ref478955414 \w \h  5.1.2 band_not_coded[ch][band]; uimsbf if (band_not_coded[ch][band]){ num_bands_not_coded[ch]++; } else { num_coded_coeff +=    max(first_noise_index,              bark_index[band]) -    min(high_cutoff,              bark_index[band]); band++; // noise power: DPCM coded for (ch = 0; ch < num_channels; ch++) {  if (is_channel_coded[ch]) { if (num_bands_not_coded[ch] > 0) { noise_power[ch][0]; uimsbf noise_power[ch][0] -= 19; for (band = 1;  band < num_bands_not_coded[ch]; band++) { Section   REF _Ref478955414 \w \h  5.1.2 noise_power[ch][band]; vlclbf noise_power[ch][band] +=  noise_power[ch][band-1]  Subframe Coefficient (Run-Level) Decoding Table   SEQ Table \* ARABIC   Syntax of decode_runlevel() Syntax # bits Notes decode_runlevel() {  // of a single channel  // Decide the VLC tables to use Section   REF _Ref478789659 \w \h  int index = 0; while (index < num_coded_coeff[ch]) { rlc_symbol vlclbf if (rlc_symbol ==  END_OF_BLOCK return; } else if (rlc_symbol ==  ESCAPE_CODE abs_level; log2_max_esc uimsbf log2_samppfr uimsbf sign_level; uimsbf } else { // from rlc_symbol, get abs_level, run Sections     REF _Ref478789659 \w \h   REF _Ref478888855 \w \h  sign_level; uimsbf index += run + 1; Parameter Definitions abs_level Quantized absolute level of a non-zero spectral coefficient. alignment_bit A bit used for byte alignment. Actual bit value can be ignored. allow_packets A boolean flag indicating if packets (superframes) might occur in a bitstream. allow_subframes A boolean flag indicating if subframes might occur in a bitstream. band_not_coded An array of boolean flags indicating if a particular bark band is coded (or noise substituted). bitstream buffer A buffer in a WMA decoder for storage of compressed audio data. bytes_per_second The average compressed stream rate, in number of bytes per second. encoder_options A bit-packed word with values indicating if certain features of the bitstream are used or not. first_noise_band The lowest bark band where noise substitution can occur. first_noise_index The lowest transform coefficient index where noise substitution can occur.  high_cutoff The highest transform coefficient index that can be coded plus one. is_channel_coded An array indicating if a channel is coded (or skipped). log2_frame_size Number of bits to represent number of bits of the last frame started in previous packet, appearing in the current packet. log2_max_esc The number of bits to represent absolute level information, if the run-level symbol is coded through escape code mechanism. log2_samppfr log2(samples_per_frame) log2_sz_ratio The number of bits to represent subframe size. low_cutoff The lowest transform coefficient index that can be coded. An array used in computing spectral weights, if bark mode is used. mask_diff A temporary variable used in decoding mask information in bark mode. mask_prev A temporary variable used in decoding mask information in bark mode. new_header A signal from packet layer decoder indicating the beginning of a new packet. noise_power An array to hold the power of noise used in noise substitution. num_bands_not_coded The number of bark-bands that did not get coded. These bands would be substituted by noise. num_channels The number of channels in the source material. num_coded_coeff Number of actually coded spectral coefficients. num_frames_in_packet The number of frames that start in the current packet. num_prev_frame_bits The number of bits of the last frame that started in previous packet, appearing in the current packet. packet_number A sequence number that helps in detecting lost packets. payload Data present in a packet, after the packet header. quant_incr A temporary variable used in decoding quant_step_size_db. quant_step_size_db The step size of the quantizer used to code spectral coefficients. quantized_lsf An array to hold quantized line spectral frequencies. Used if LPC mode spectral weighting is used. ratio_log2_curr Coded representation of size of current subframe. ratio_log2_nex Coded representation of size of next subframe. ratio_log2_prev Coded representation of size of previous subframe. rlc_symbol The (run, |level|) pair decoded by VLC decoder. The number of spectral coefficients quantized to zero level preceding a non-zero level. samples_per_frame The maximum number of new time-samples generated by an inverse transform. samples_per_second The sample rate in Hz of the source material. sign_level The sign of the quantized spectral coefficient. stereo_mode An indication of how redundancy across multiple channels is utilized. subframe_size_with_update The size of the subframe when new mask information was received. uimsbf Unsigned integer, most significant bit first. update_mask A binary flag indicating if new spectral shaping information is to be decoded. use_noise_substitution A flag indicating if noise substitution is to be used. version_number The version of WMA stream. Currently only two versions are defined: version 1 and version 7. vlclbf Variable length code, left bit first, where   refers to the order in which the VLC codes are written (or read). weighting_mode Used in spectral shaping. It can either be   mode. Decoder Initialization A WMA bitstream is legal only if it is present in advanced streaming format (ASF). The ASF is specified in a separate document xxxx. The following parameters are assumed to be available at the decoder through the ASF stream: version_number, the version of WMA stream syntax, samples_per_second, the sample rate in Hz of the source material, num_channels, the number of channels in the source material, bytes_per_second, the average compressed stream rate, in number of bytes per second, bits_per_packet, the number of bits in a packet (fixed for a given WMA stream), and encoder_options, a bit-packed word with values indicating if certain features of the bitstream are used or not. Based on these parameter values, a few additional parameters used in the decoding process are derived, as described below.  Samples Per Frame The forward MLT  XE "MLT"   is a transformation involving more than one block of input samples. Accordingly generating time samples from decoded spectral coefficients involves more than one block of decoded spectral coefficients. The maximum number of new time samples generated by an inverse MLT transform size is denoted by samples_per_frame.  Its value is derived from the sampling rate of the source material samples_per_second in WMA Version 7 through   REF _Ref478444173 \h  Equation 1  EMBED Equation.3   Equation   SEQ Equation \* ARABIC  This is in contrast to WMA 1.0 given in   REF _Ref478444250 \h  Equation 2  EMBED Equation.3   Equation   SEQ Equation \* ARABIC  Sampling period is computed as:  EMBED Equation.3   Equation   SEQ Equation \* ARABIC  Another quantity that depends on samples_per_frame is log2_samppfr, used in run-level decoding process:  EMBED Equation.3   Equation   SEQ Equation \* ARABIC  Cutoff Frequencies Based on the samples_per_frame, the parameters low_cutoff_long and high_cutoff_long are set as follows: low_cutoff_long = (version_number == 1) ? 3 : 0; high_cutoff_long = samples_per_frame    9 * samples_per_frame/100; // Integer Division Weighting Mode The parameter weighting_mode can have a value of  .  It is derived from encoder_options through the code segment: weighting_mode = (encoder_options & D_ENCOPT_BARK) ?  Allow Super and/or Sub Frames The boolean flags allow_packets and allow_subframes are derived using the following code segment: allow_packets   (encoder_options & D_ENCOPT_PACKETS) ? 1 : 0; allow_subframes   = (allow_packets &&   (encoder_options & D_ENCOPT_SUBFRAME)) ? 1 : 0; Maximum Number of Subframes in a Frame The maximum number of subframes in a frame can be obtained through the code segment: if (allow_subframes) { int max_num_subframes =   (encode_options & D_ENCOPT_SUBFRAMEDIVMASK) >> 3; if (bytes_per_second / num_channels >= 4000) max_num_subframes = (8 << max_num_subframes); else  max_num_subframes = (2 << max_num_subframes); } else { max_num_subframes = 1; if (max_num_subframes > samples_per_frame / D_MIN_FRAME_SIZE)         max_num_subframes = samples_per_frame / D_MIN_FRAME_SIZE; log2_sz_ratio = log2(log2(max_num_subframes)) + 1; Bits Per Sample The average bits per compressed audio channel sample can be computed as: bits_per_sample = bytes_per_second * 8.0 / (samples_per_second * num_channels); This bit rate, however, does not take the correlation that is present among multiple channels. A WMA decoder takes this into account while computing the parameter weighted_bits_per_sample: weighted_bits_per_sample   =  (num_channels > 1) ?  bits_per_sample * D_STEREO_WEIGHT :  bits_per_sample; Bits to indicate frame size Since a compressed frame can straddle across two packets, a field (num_prev_frame_bits) in the packet header indicates how many bits in the current packet belong to the frame started in preceding packet. Its length, given by log2_frame_size is computed as: log2_frame_size = log2(NINT(bits_per_sample * samples_per_frame/8.0)) + 2; Dithering Level A parameter dither_level is derived from the weighting_mode: dither_level = (weighting_mode ==  ) ? 0.02 : 0.04; Parameters for Noise Substitution The decision to perform noise substitution depends on the operating parameter values and the version number. Three needed parameters use_noise_substitution and first_noise_freq are computed as follows. use_noise_substitution  first_noise_freq  = 0.5 * samples_per_second; if (version_number == 1) { if(samples_per_second == 22050) { if (weighted_bits_per_sample >= 1.16) use_noise_substitution             else if(weighted_bits_per_sample >= 0.72)                 first_noise_freq  *= 0.70;             else                 first_noise_freq  *= 0.60; } else if (samples_per_second == 44100) {             if (weighted_bits_per_sample >= 0.61)                 use_noise_substitution              else                 first_noise_freq  *= 0.4; } else if (samples_per_second == 16000) {             if (bits_per_sample <= 0.5f) // not weighted_bits_per_sample                 first_noise_freq  *= 0.30;             else                 first_noise_freq  *= 0.50; } else if (samples_per_second == 11025) {             first_noise_freq  *= 0.70;       } else if (samples_per_second == 8000) {             if (bits_per_sample <=0.625)                 first_noise_freq *= 0.50;             else if (bits_per_sample <= 0.75)                 first_noise_freq *= 0.65;             else                 use_noise_substitution = 0; } else {             if(bits_per_sample >= 0.8)                 first_noise_freq  *= 0.75;             else if(bits_per_sample >= 0.6)                 first_noise_freq *= 0.60;             else                 first_noise_freq *= 0.5; } else { // version 7 if (samples_per_second >= 44100) { if (weighted_bits_per_sample >= 0.61) use_noise_substitution = 0; first_noise_freq  *= 0.4; } else if(samples_per_second >= 22050) { if (weighted_bits_per_sample >= 1.16) use_noise_substitution = 0;             else if(weighted_bits_per_sample >= 0.72) first_noise_freq  *= 0.70;             else first_noise_freq  *= 0.60; } else if (samples_per_second >= 16000) { if (bits_per_sample <= 0.5) first_noise_freq  *= 0.30; else                  first_noise_freq *= 0.50; } else if (samples_per_second >= 11025) { first_noise_freq *= 0.70; } else if (samples_per_second >= 8000) {             if (bits_per_sample <=0.625) first_noise_freq *= 0.50; else if (pau->m_fltBitsPerSample <= 0.75f) first_noise_freq *= (Float) 0.65; use_noise_substitution = 0; } else {             if(bits_per_sample >= 0.8) first_noise_freq *= 0.75; else if(pau->m_fltBitsPerSample >= 0.6) first_noise_freq *= 0.60; first_noise_freq *= 0.5; Other parameters are initialized as shown here: new_header = 0; subframe_size_prev = samples_per_frame; subframe_size_curr = samples_per_frame; subframe_size_next = samples_per_frame; subframe_startpos = 0; Packet Layer Decoding Depending on the flag allow_packets, the bitstream might be packetized or not. The packet size is fixed for a given WMA bitstream, and is known ahead of time, outside of the WMA bitstream. If packetized, a packet can encompass multiple frames. The number of frames in a packet is indicated by num_frames_in_packet field in the packet header. The last frame in a packet can straddle across two packets. If it does, that last frame can be completed decoded only after decoding portion of the next packet. Conceptually, a packet layer decoder removes a packet header, and transfers the payload (remainder of a packet) to the frame layer decoder. In real implementations, this decoder detects lost/out of sequence packets and enables random seeks into a bitstream. They can use the parameter value num_prev_frame_bits to seek to the beginning of a frame in any packet. A packet layer decoder notifies the frame layer decoder whenever a new packet is received through new_header signal. Frame Layer Decoding When subframes are allowed, decoding a frame involves decoding a sequence of subframes. A decoder need not know the frame boundaries, other than to resynchronize in case of random accesses, or to catch certain kinds of errors.  When subframes are disallowed, a frame and subframe are synonymous.  Each subframe starts off with a subframe header, as described in Section   REF _Ref478789532 \w \h  Subframe Header Decoding In order to decompress a subframe, subframe sizes (in samples) of previous, current, and next subframes, denoted by subframe_size_prev, subframe_size_curr, and subframe_size_next respectively, are needed.   When subframes are not allowed, all the subframes have a size of samples_per_frame. When subframes are allowed, if a new_header signal is received from the packet layer decoder, the bitstream contains information to recreate these subframe sizes. This signal also indicates the beginning of a frame. // Just a reminder: ^ is power subframe_size_prev = samples_per_frame/(2^ratio_log2_prev); subframe_size_curr = samples_per_frame/(2^ratio_log2_curr); subframe_size_next = samples_per_frame/(2^ratio_log2_next); subframe_number = 0; From the current subframe size, the low and high cutoff frequencies of the spectrum that are entropy coded are computed as follows. low_cutoff  = low_cutoff_long * subframe_size_curr /    samples_per_frame; // Integer Divide high_cutoff = high_cutoff_long * subframe_size_curr /    samples_per_frame; // Integer Divide If noise substitution is being performed (as indicated by use_noise_substitution), first index that can be substituted is computed as follows. first_noise_index  = NINT(first_noise_freq * 2 *  subframe_size_curr * sampling_period); The parameter first_noise_freq is computed during initialization, described in Section   REF _Ref478899884 \w \h  Bark Band Computation The current subframe size dictates the number of bark bands present. This number is needed if   weighting mode is used. In version 1, the following psuedo-code can be used to compute num_bark_bands, and the array bark_index. The array bark_freqs used in this process is given in Section   REF _Ref478802946 \w \h  // Version 1 bark_index[0] = 0; for (i = 0; i < 25; i++) { // does not use subframe_size_curr, but samples_per_frame. bark_index [i + 1] = NINT(bark_freqs [i] * samples_per_frame * 2.0 *   sampling_period);  if (bark_index [i + 1] > samples_per_frame / 2) { bark_index [i + 1] = samples_per_frame / 2; num_bark_bands = i + 1; break; Version 7 uses the following psuedo-code segment. // Version 7 int bark_initialized = 1; bark_index  [0] = 0; if (samples_per_second >= 44100) { if (subframe_size_curr == 512) { num_bark_bands = 17; bark_index[] = { 0,   5,  12,  18,  25,  34,  46,  54,     63,  86, 102, 123, 149, 179, 221, 279,                            360, 512}; } else if (subframe_size_curr == 256) { num_bark_bands = 15; bark_index[] = { 0,  5, 11, 17, 23, 31, 37, 43,      51, 62, 74, 89, 110, 139, 180, 256}; } else if (subframe_size_curr == 128) { num_bark_bands = 12;  bark_index[] = { 0, 4, 9, 12, 16, 21, 26, 37,     45, 55, 70, 90, 128}; } else { bark_initialized = 0; } else if (samples_per_second >= 32000) { if (subframe_size_curr == 512) { num_bark_bands = 16;  bark_index[] = { 0, 6, 13, 20, 29, 41, 55, 74,     101, 141, 170, 205, 246, 304, 384, 496,      512}; } else if (subframe_size_curr == 256) { num_bark_bands = 15; bark_index[] = { 0, 5, 10, 15, 20, 28, 37, 50,     70, 85, 102, 123, 152, 192, 248, 256}; } else if (subframe_size_curr == 128) { num_bark_bands = 11; bark_index[] = { 0, 4, 9, 14, 19, 25, 35, 51,     76, 96, 124, 128};  } else { bark_initialized = 0; } else if (samples_per_second >= 22050) { if (subframe_size_curr == 256) { num_bark_bands = 14;  bark_index[] = { 0, 5, 12, 18, 25, 34, 46, 63,     86, 102, 123, 149, 179, 221, 256}; } else if (subframe_size_curr == 128) { num_bark_bands = 10;  bark_index[] = { 0, 5, 11, 17, 23, 31, 43, 62,                              89, 110, 128}; } else { bark_initialized = 0; if (!bark_initialized) { bark_initialized = 1; int curr_freq = 0; int curr = 1; bark_index[0] = 0; while (1) { index = (INT((bark_freqs [curr_freq++] *  subframe_size_curr * 2 * sampling_period + 2.0)/4.0))*4;  if(index > bark_index[curr - 1]) bark_index[curr++] = index;             if(curr_freq >= 25 ||     bark_index[curr - 1] > subframe_size_curr) { bark_index[curr - 1] = subframe_size_curr; num_bark_bands = curr - 1; break; The Huffman table needed to decode the mask information is given in   REF _Ref478804221 \h  Table 23 Noise Substitution Header The current subframe size dictates the first bark band that can be noise substituted. This number is needed if noise substitution is to be performed at very low bit rates. In version 1, the following psuedo-code can be used to compute first_noise_band. // Version 1 int found = 0; for (band = 0; band < num_bark_bands; band++) { if (bark_freqs[band] > first_noise_freq) { found = 1; first_noise_band = band; if (!found)  { // Turn off noise substitution use_noise_substitution = 0; Version 7 uses the following psuedo-code segment to compute first_noise_band. // Version 7 first_noise_band = num_bark_bands  for (band = 1; band < num_bark_bands; band++) { if (bark_index[band] > first_noise_index) { first_noise_band = band  break; Decoding the noise substitution header requires a variable length table for noise power. This table is listed in   REF _Ref478957267 \h  Table 24 While decoding the noise substitution header, the actual number of coded spectral (i.e. transform) coefficients, num_coded_coeff is updated. This field is used in run-level decoding to detect an end of subframe. Decoding LPC Header In a classical speech coding method called linear predictive coding (LPC) technique, LPC parameters are used to form a prediction of time signal: the prediction error would be quantized and sent to the receiver. In such schemes, the predictor is seen as an infinite impulse response (IIR) filter with a Z transform:  EMBED Equation.3   Equation   SEQ Equation \* ARABIC  In WMA, the LPC parameters are not used for such a predictive coding: instead, they are used to model the spectrum of the signal, and thus help in computing weighting factors used for noise shaping. In the following, the array lpc is valid from index 1 to D_LPCORDER. Conversion from LSF  XE "LSF"   to LPC to Spectrum This is performed in steps shown in   REF _Ref479133661  Figure 4 : 1) inverse quantize received (quantized) line spectral frequencies (LSF  XE "LSF"  ) 2) convert line spectral frequencies to partial correlation coefficients (also known as reflection coefficients) (PARCOR), 3) convert PARCOR to linear predictive coefficients (LPC). A final step of converting LPC parameters to spectral weights is covered in Section   REF _Ref479061712 \w \h   EMBED Word.Picture.8   Figure   SEQ Figure \* ARABIC   Obtaining LPC Parameters Inverse Quantization of LSF  XE "LSF"  The inverse quantization uses the LSF  XE "LSF"   reconstruction values given in   REF _Ref478869767 \h  Table 16 . The following rule is used in the inverse quantization of LSF parameters. // For a particular channel  for (order = 0; order < D_LPCORDER; order++) { lsf[ch][order] = lsfReconLevel[order][quantized_lsf[ch][order]]; Converting LSF  XE "LSF"   to PARCOR to LPC Parameters For simplicity of notation, if we represent a time series enclosed by a braces:  EMBED Equation.3   , the following procedure can be used to compute PARCOR parameters p and q. From p and q, we finally obtain LPC parameters. // For a particular channel   EMBED Equation.3   for (order =  0; order < D_LPCORDER; order += 2) {  EMBED Equation.3   for (order = 1; order <= D_LPCORDER/2; order++) { p[order] = tmp[order];  EMBED Equation.3   for (order =  3; order < D_LPCORDER; order += 2) {  EMBED Equation.3   for (order = 1; order <= D_LPCORDER/2; order++) { q[order] = tmp[order]-tmp[order-1]; for (order = 1; order <= D_LPCORDER/2; order++) { lpc[ch][order] = -0.5 * (p[order]+q[order]); lpc[ch][D_LPCORDER+1-order] = -0.5 * (p[order]-q[order]); Maximum Level Size, if Escape Code is Used From the quant_step_size_db, the maximum amplitude of a quantized spectral coefficient can be computed. This value is useful in entropy decoding of the spectral coefficients, as described in Section   REF _Ref478789659 \w \h  if(quant_step_size_db < 5)  log2_max_esc = 13; else if(quant_step_size_db <  15)  log2_max_esc = 13; else if(quant_step_size_db < 32)  log2_max_esc = 12; else if(quant_step_size_db < 40)  log2_max_esc = 11; else if(quant_step_size_db < 45)  log2_max_esc = 10; else if(quant_step_size_db < 55)  log2_max_esc =  9; else  log2_max_esc =  9; Run-Level (Entropy) Decoder To compress the quantized spectral coefficients efficiently, they are encoded using a Sign-Run-Level coding scheme. In this coding, a number of quantized spectral coefficients are represented by a single triplet: (Run, Sign,  |Level|). This triplet has the meaning of having Run number of quantized spectral coefficients with value zero followed by a quantized spectral coefficient of value Sign * |Level|. At the encoder, the triplet (Run, Sign, |Level|) is decomposed into two pieces: Sign, and a 2-D symbol (Run, |Level|). In the bitstream, the Sign is indicated by one bit: a value of 1 indicates a positive Level, and a negative Level otherwise. To further enhance the compression factors, the 2-D symbol (Run, |Level|) is encoded using Huffman coding, a variable length coding scheme.  A complete WMA decoder would need six Huffman tables. These tables are grouped as  Huffman-RLC-16 Huffman-RLC-44Q , and  Huffman-RLC-44O , with each group having two tables. For a given bitstream, only one group of tables will be used: one table in the group to decode mono, left, right, or sum channels, and the other table to decode a difference channel, if present. The first table in the group has   in its name (e.g.  Huffman-RLC-44O-Mono ) and the second has   in its name (e.g.  Huffman-RLC-16-Diff ). All the six RLC tables are listed in Section   REF _Ref478526813 \w \h  For a given bitstream, particular table group to use for decoding can be derived from parameters weighted_bits_per_sample and samples_per_second during the initialization phase as follows. huffman_table_group =  Huffman-RLC-16 if (weighted_bits_per_sample < 0.72) { if (samples_per_second >= 32000)  huffman_table_group =  Huffman-RLC-44Q } else if (weighted_bits_per_sample < 1.16f) { if (samples_per_second >= 32000)  huffman_table_group =  Huffman-RLC-44O The specific table within the group to be used for entropy decoding depends on the number of channels being decoded, and on the flag stereo_mode decoded at sub-frame level. Since the stereo_mode flag can be different every subframe, so can the specific table used to decode the RLC symbols differ from subframe to subframe. The following simple rule is used to determine the table at every subframe level: huffman_table = huffman_table_group +  -Mono if (num_channels == 2 && stereo_mode == 1) huffman_table = huffman_table_group +  -Diff  operator in the above code segment should be taken as concatenation of strings. In the bitstream syntax given in   REF _Ref478892727 \h  Table 12 , several outside parameters are used. These parameters have already been described in preceding sections. The high_cutoff and low_cutoff were computed in Section   REF _Ref478892797 \w \h  . The parameter log2_max_esc was computed in Section   REF _Ref479060880 \w \h  5.1.4 , and log2_samppfr in Section   REF _Ref478892658 \w \h  In each subframe, on a per channel basis, entropy decoding the quantized run-level information requires num_coded_coeff. This value is available from subframe header decoding. The decoder also knows which bark bands are coded in this channel of the subframe (band_not_coded[ch][band]). The WMA encoder skips spectral coefficients belonging to the bark-bands that are not coded. Accordingly, the run-level decoder uses band_not_coded information, along with bark_index[ ] array to place the quantized spectral coefficients in an array, quantized_spec_coef[ch]. The following pseudo-code segments describes this process. // Initialization for channel  int index; for (index = 0; index < subframe_size_curr; index++)  quantized_spec_coef[ch][index] = 0; int bark = 0; index = low_cutoff; // Go to the first bark-band to be coded or where low_cutoff falls if (band_not_coded[ch][0]) { // first bark band does not contain first coded coefficient index = 0; while (band_not_coded[ch][bark]) { index += bark_index[bark+1]-bark_index[bark]; bark++; When a new triplet (run, abs_level, sign_level) is received from the bitstream, we  move the index by run+1 indices, stepping over any skipped bark bands in the path. Finally, at the updated index, the quantized_spec_coef is updated. This pseudo-code describes this. int index_incr = run + 1; while (index_incr > 0) { index++;  index_incr--; if (index >= bark_index[bark+1]) { // We are leaving current bark band. bark++; // Go to the bark band that is actually coded. while (band_not_coded[bark]) { // width of skipped bark-band index += (bark_index[bark+1]   bark_index[bark]); bark++; quantized_spec_coef[ch][index] =   (sign_level == 1) ? abs_level : -abs_level; At the end of this process, we have quantized spectral coefficients, that are inverse quantized, as described in the next Section. Inverse Quantizer & Noise Substitution The bark bands that are coded (indicated by band_not_coded[ ][ ] array) are inverse quantized, and the bark bands that are not coded are  filled-in  with noise. The substituting noise power is available in the array noise_power[ ][ ]. WMA uses uniform midtread quantizers  without a dead-zone. The first step in the inverse quantization is to convert the step size from decibel scale to amplitude scale:  EMBED Equation.3   Equation   SEQ Equation \* ARABIC  The inverse quantization procedure is captured by the following pseudo-code: for (ch = 0; ch < num_channels; ch++) { for (bark = 0; bark < num_bark_bands; bark++) { if (band_not_coded[ch][bark]) { noise_step = 10.0^(noise_power[ch][bark]/20.0);// ^ for pow() for (index = bark_index[bark]; index < bark_index[bark+1]; index++)  unweighted_spec_coef[ch][index] = (qrand() * noise_step); } else {  // This bark-band is coded for (index = bark_index[bark]; index < bark_index[bark+1]; index++) { int add_dither = use_noise_substitution; unweighted_spec_coef[ch][index] =  (quantized_spec_coef[ch][index] +   qrand() * dither_level * add_dither) *  quant_step; Note: Dithering is added only if use_noise_substitution flag equals  . Also recall from   REF _Ref479564604 \h   \* MERGEFORMAT  Table 8  that band_not_coded[ ][ ] is   when use_noise_substitution is  Above pseudo-code uses a function  qrand() , a random number generator. It is equivalent to a random variable with a triangular distribution in the range  2.5 to +2.5. An implementation of qrand() is given below.  An Implementation of qrand() double qrand()  static int iPrior; static unsigned int uiURand; const unsigned int a = 1664525; const unsigned int c = 1013904223; iTemp, iTemp1;  //a*x + c has to be done with unsigned 32 bit uiURand =  a * uiURand + c; // cast and shift to make the range (-1, 1) with Binary Point 3. iTemp = ((int)(uiURand)) >> 2;  // *1.25 to make the range (-1.25, 1.25)  iTemp += (iTemp>>2); // Difference of two random numbers gives a triangle distribution and a range of (-2.5, 2.5) iTemp1 = iTemp - iPrior; // Save first term of this difference for next time. iPrior = iTemp;  return ((double) iTemp1/(1<<29); // return -2.5 to 2.5 with a triangular distribution The unweighted spectral coefficients computed in this step are weighted, as described in the next section. Quantization Noise Shaping (Weighting Factors) WMA uses noise shaping to spread quantization noise across spectral coefficients to take advantage of the human auditory system and the actual content being compressed. It performs the shaping by scaling (multiplying) the unweighted spectral coefficients with frequency dependant multiplication factors, weight_factor. WMA bitstream can convey the weight factors in one of two ways: sending   factors for each Bark-band, or sending line spectral frequencies (LSF  XE "LSF"  ). Obtaining the weight factors from either mask or LSF is shown in   REF _Ref479135300  Figure 5 , and is described below. As a first step, un-normalized weights are computed. This is described in Sections   REF _Ref479072159 \w \h  5.4.1  and   REF _Ref479072171 \w  5.4.2 . Next, these are normalized, as described in Section   REF _Ref479072202 \w  5.4.3 . Finally, these weights are applied to the unweighted spectral coefficients, as described in Section   REF _Ref479133834 \w  5.4.4  EMBED Word.Picture.8   Figure   SEQ Figure \* ARABIC   The process to obtain spectral weighting factors Computing Un-normalized Weights from Mask Information The mask information can be used to compute spectral weight factors. The mask values are sent one per bark band. However, the current subframe might have a different subframe size compared to the subframe when the mask information was sent. Thus, the number of bark bands and the widths of the bark bands might be different in the current subframe compared to the mask information. The size of the subframe when mask information was received is available as  subframe_size_with_update[ch] . This information can be used to figure out the bark band configuration that matches the mask information. The necessary scaling is provided by a utility function equivalent_update_band(), defined later in this section. // For a particular channel  , do the following for (index = 0; index < subframe_size_curr; index++) { update_band = equivalent_update_band(index, subframe_size_curr,         subframe_size_with_update[ch]); unnorm_weight[ch][index]  = 10.0^(mask[ch][update_band] / 16.0); The utility function equivalent_update_band() is given next. It is assumed that we have the bark_index array for the subframe with mask update, bark_index_updt, and the number of bark bands for the updated subframe, num_bark_bands_updt handy. // Returns the number of bark band in updated subframe,  // given an index in current subframe int equivalent_update_band (int index, int size_curr, int size_updt) { int size_ratio_log2 = log2((size_updt << D_MASK_RESAMPLE_OFFSET) /  size_curr); // index_updt : Linearly interpolated transform coefficient index  // in the subframe with update, with approximately same Hz as  index  in current subframe. int index_updt = (index << size_ratio_log2) >>  D_MASK_RESAMPLE_OFFSET; // Boundary check if (index_updt >= size_updt) index_updt = size_updt  // Hunt for the bark band, using the band layout of subframe with  // mask update int band = 1; while (index_updt >= bark_index_updt[band+1]) band++; return band; Computing Un-normalized Weights from LPC Parameters The following equation can be used to compute un-normalized spectral weights from LPC coefficients obtained during subframe header decoding. For a particular channel   EMBED Equation.3   for 0 (n<N. Equation   SEQ Equation \* ARABIC  The value of N in   REF _Ref479561479 \h  Equation 7  depends on encoder_options: if ((encoder_options & D_ENCOPT_LPC) || (version_number == 1)) { N = subframe_size_curr; } else { N = samples_per_frame; Normalizing Weights As described above, the un-normalized weights are computed either based on LPC information or mask information. Here we normalize these weights. First, maximum of un-normalized weights for a given channel is noted:  EMBED Equation.3   To help normalize weights in un-coded bark-bands,  band weights  are computed for un-coded bark bands and placed in band_weight array. For a coded channel  , the following pseudo-code summarizes this computation. // For coded channel  last_uncoded_band_weight[ch] = 1.0; for (band = 0; band < num_bark_bands; band++) { band_weight[ch][band] = 1.0; if (band_not_coded[ch][band]) { sum_weight = 0.0; for (index = bark_index[band]; index < bark_index[band+1]; index++) { sum_weight += (unnorm_weight[index])^2; // power band_weight[ch][band] = sum_weight/(bark_index[band+1]-bark_index[band]); last_uncoded_band_weight[ch] = band_weight[ch][band]; // needed in normalization Using the information obtained thus far, we can compute weight factors, using the following pseudo-code.  // For coded channel  for (band = 0; band < num_bark_bands; band++) { double norm_factor = 1.0/max_weight[ch]; if (band_not_coded[ch][band]) { norm_factor *= sqrt(band_weight[ch][band]/last_uncoded_band_weight[ch]); for (index = bark_index[band]; index < bark_index[band+1]; index++)  weight_factor[ch][index] = unnorm_weight[ch][index] * norm_factor; Applying Weight Factors Once the weight factors are obtained, the following equation can be used to obtain the weighted spectral coefficients:  EMBED Equation.3   Equation   SEQ Equation \* ARABIC   EMBED Equation.3   pre_mc pre_mc_spec_coef  refers to  before multi-channel  treatment. The multi-channel treatment is given in Section   REF _Ref479136991 \w  Reducing the Overhead of Weighting Factors To reduce the overhead, the weighting factors are not repeated every subframe. In some cases (identified by resample_weights() in the bitstream syntax), the weight factors are computed from a previous sub-frame s weight factors, even if the subframe sizes do not agree with each other. The following simple code segment explains this. // For a particular channel  resample_weights()  { if (subframe_size_prev > subframe_size_curr) { // down sample ratio = subframe_size_prev / subframe_size_curr; //truncate for (i = 0; i < subframe_size_curr; i++)   weight_factor[ch][i] = weight_factor[ch][ratio * i]; } else if (subframe_size_prev < subframe_size_curr) { // upsample ratio = subframe_size_curr/ subframe_size_prev; for (i = subframe_size_curr/ratio-1;  i ( 0; i--) { for (j = 0; j < ratio; j++) { weight_factor[ch][i * ratio + j] =  weight_factor[ch][i]; } // else, retain existing weight factors In other cases, the weights are reset, identified by reset_weights(). In such cases, the weights are equal to 1, as given below. // For a particular channel  reset_weights() { for (freq=0; freq < subframe_size_curr; freq++) { weight_factor[ch][freq] = 1.0; At the end of applying weight factors, we have pre_mc_spec_coef s, that are processed through multi-channel transformation, as described in the next section. Multi-Channel Transformation To make a good use of inter-channel redundancy present in source material, WMA transforms channels of selected subframes. Accordingly, at the decoder, an inverse multi-channel transformation is performed on those subframes. The decision whether such a transformation was used is indicated by a flag stereo_mode at subframe header level. Since WMA version 7.0 deals only up to two channels, a simple sum-difference transformation is used. The following logic describes the multi-channel inversion procedure to obtain spectral coefficients. // Apply this logic at each index in the range  // 0 <= index < subframe_size_curr. if (num_channels == 1) {  spec_coef[0][index] = pre_mc_spec_coef[0][index] *  is_channel_coded[0]; } else if (num_channels == 2) { if (is_channel_coded[0] == 0 || is_channel_coded[1] == 0) { // One or more channels are skipped spec_coef[0][index] = pre_mc_spec_coef[0][index] *  is_channel_coded[0]; spec_coef[1][index] = pre_mc_spec_coef[1][index] *  is_channel_coded[1]; } else { // Both channels are coded: invert transformation as needed. if (stereo_mode) { spec_coef[0][index] =  pre_mc_spec_coef[0][index] +  pre_mc_spec_coef[1][index]; spec_coef[1][index] =  pre_mc_spec_coef[0][index]  pre_mc_spec_coef[1][index]; } else { spec_coef[0][index] = pre_mc_spec_coef[0][index]; spec_coef[1][index] = pre_mc_spec_coef[1][index]; The spectral coefficients obtained in this step are decoded transform coefficients. These transform coefficients are inverse transformed in the next section. Inverse Modulated Lapped Transform WMA uses transform coding to exploit temporal redundancy present in an audio source for an efficient compression. The transform size in WMA can vary over time, so that local (temporal) characteristics of the source are properly taken into account. The particular transformation used by WMA is Modulated Lapped Transform, MLT  XE "MLT"  . The inversion of MLT coefficients is shown in   REF _Ref479150045 \h  Figure 6 The DCT-IV is described in Section   REF _Ref479153801 \w \h  5.6.1 . The window function generator is given in Section   REF _Ref479412368 \w \h  5.6.2 . Final time sample reconstruction is given in Section   REF _Ref479412385 \w \h  5.6.3  EMBED Word.Picture.8   Figure   SEQ Figure \* ARABIC   Inverse Modulated Lapped Transform Process DCT-IV Mathematically, the DCT-IV operation used in WMA can be described as  EMBED Equation.2   Equation   SEQ Equation \* ARABIC  for     EMBED Equation.2   EMBED Equation  The scale_factor in   REF _Ref479153557 \h  Equation 9  is WMA version dependent: scale_factor = (version_number == 1) ?  EMBED Equation.3    EMBED Equation.3   Window Function Generation The values of the window function   depend on the sizes of previous, current, and next subframe, subframe_size_prev, subframe_size_curr, and subframe_size_next respectively. The window values w[n] are defined for   EMBED Equation.2   . The window values   EMBED Equation.3    depend on subframe_size_prev and subframe_size_curr, where as   EMBED Equation.3    depend on subframe_size_curr and subframe_size_next.  The window function values for   EMBED Equation.2    are compactly represented by   REF _Ref479156266 \h  Equation 10 EMBED Equation  Equation   SEQ Equation \* ARABIC  where,   EMBED Equation.3    and   EMBED Equation.3   .  Note that   EMBED Equation.3    whenever   EMBED Equation.3   The computation of window function values for   EMBED Equation.2    is a mirror image of   REF _Ref479156266 \h  Equation 10 , and is given in   REF _Ref479158279 \h  Equation 11 EMBED Equation  Equation   SEQ Equation \* ARABIC  where,   EMBED Equation.3    and   EMBED Equation.3   .  Note that   EMBED Equation.3    whenever   EMBED Equation.3   The shape of the window function is illustrated in   REF _Ref479407159 \h  Figure 7  for a number of sequences of subframe sizes.  Subframe Sizes Window Function subframe_size_prev = 1024 subframe_size_curr = 1024 subframe_size_next = 1024  EMBED Excel.Chart.8 \s  subframe_size_prev = 2048 subframe_size_curr = 1024 subframe_size_next = 2048  EMBED Excel.Chart.8 \s  subframe_size_prev = 512 subframe_size_curr = 1024 subframe_size_next = 2048  EMBED Excel.Chart.8 \s  subframe_size_prev = 512 subframe_size_curr = 1024 subframe_size_next = 512  EMBED Excel.Chart.8 \s  Figure   SEQ Figure \* ARABIC   Window Function Values for various combinations of subframe sizes The window function thus generated is used in obtaining reconstructed audio samples, as described in the following. Obtaining Reconstruction Values As shown in   REF _Ref479150045 \h  Figure 6 , an intermediate array   EMBED Equation.3    is filled through straight multiplication given in   REF _Ref479387333 \h  Equation 12  EMBED Equation.3   Equation   SEQ Equation \* ARABIC  Portions of the intermediate results   EMBED Equation.3    would have to be saved for reconstructing the next subframe.  The intermediate results from previous subframe   EMBED Equation.3   are valid in the range   EMBED Equation.3   . The following logic explains how to perform the overlap-add and obtain reconstructed samples, using the notation:   EMBED Equation.3    EMBED Equation.3   , and   EMBED Equation.3   Note: This notation is different from the notation used in Section   REF _Ref479408129 \w \h   \* MERGEFORMAT  5.6.2 The reconstructed samples are given out sequentially every subframe. The number of samples output by the overlap-add operation in all cases equals   EMBED Equation.3   Case 1. subframe_size_prev == subframe_size_curr If previous and current subframe have same size, then  EMBED Equation.3   Equation   SEQ Equation \* ARABIC  Case 2. subframe_size_prev > subframe_size_curr In this case, the reconstructed values are given by:  EMBED Equation.3   Equation   SEQ Equation \* ARABIC  Case 3. subframe_size_prev < subframe_size_curr In this case, the reconstructed values are given by:  EMBED Equation.3   Equation   SEQ Equation \* ARABIC  The reconstructed values, as given in the above procedure are real numbers. These real numbers can then be rounded and clipped to the permitted output range. For example, if the output is required to be 16-bit signed numbers, the recon values are rounded and clipped to [-32768, 32767] range and passed to the presentation module.  After Decoding a Subframe At the end of decoding a subframe, the following rule is used to update the state of the decoder. subframe_startpos += frame_size_curr; subframe_size_prev = frame_size_curr; subframe_size_curr = frame_size_next; subframe_number++; yprev = ycurr ; If subframe_startpos is ( samples_per_frame, that indicates the beginning of a new frame, and the counters are reset: subframe_startpos = 0; subframe_number = 0; Interfacing with Applications (Informative) A very high level flow diagram for a WMA decoder operation is shown in a cross-functional flowchart   REF _Ref479498929 \h  Figure 8 . Microsoft Corp s windows media audio decoder follows the flow suggested in this figure. Some of the branches in this figure are labeled by Microsoft s WMA decoder s API calls. The complete API provided by Microsoft Corp s WMA decoder is given in Section   REF _Ref479499105 \w \h  Microsoft s WMA decoder decodes a chunk of bitstream, and places  ready for reconstruction  samples in its internal buffers. In its current implementation, this  ready for reconstruction  corresponds to a frame-worth of data. Microsoft s WMA decoder does not start decoding a new chunk of compressed bits until these reconstructed samples are  consumed  by the application.  When operating in off-line mode, the rate of reconstructed samples consumed by the application can either be less than or more than the sampling rate of the source material. In a streaming mode, a real-time decoding of the bitstream is needed, so that synchronized presentation of the reconstructed samples can be made. In this mode, the average rate of generation of reconstructed samples should equal the rate of presentation of these samples, even on very short time intervals.  This places a constraint on the product of size of the reconstructed sample buffer and the number of  GetPCM  calls an application has to make within a frame interval. This worst-case scenario explains this situation. Here, the source is at 48KHz sampling rate, and has two channels, and the decoder is configured to return decoded samples (16 bits/channel-sample) in channel-interleaved manner. The frame size is 2048, and the frame interval is 42.667 ms, and a frame-worth of decoded samples is 8192 bytes (8KB). The application should let the decoder decode and produce 8KB of reconstructed PCM samples, as well as consume it within 42.667 ms for a playback at 1X speed. If the decoder needs   MIPS (say) for real-time decoding, the application should provide 8KB of buffer to GetPCM and obtain the entire frame s worth of decoded data in one call and render it. However, if   MIPS are available for decoding, then the decoder can generate reconstructed data within 21.333 ms. In that case, application can provide only 4KB of buffer to GetPCM, and get half the frame s worth of decoded data (4KB) and render after 21.333 ms in a frame duration, and the remaining 4KB after another 21.333 ms (end of frame duration). This way, the presentation can be a smooth synchronous playback at 1X speed.  EMBED Visio.Drawing.6   Figure   SEQ Figure \* ARABIC   Flow diagram of interaction between an application and a WMA decoder Software API for Microsoft s WMA Decoder The software Application Programming Interface (API) for WMA is available in WMTPAK Software Developers Kit (SDK), available from Microsoft Corp. It is reproduced in here for convenience. It should be noted here that while the method names contain   in them, these methods can be applied on a stream as well as a stored file. This API provides hooks for the following audio-decoder related services: Check if a WMA stream or file is decodable, Obtain entry points into a bitstream for fast and random seeks, Initialize a decoder, Seek to particular time point in the bitstream, Decode bitstream, Provide reconstructed PCM samples, and Close a decoder. In addition, it performs rights management (verifying licenses, decryption, etc) and content description services. These services are beyond the scope of this document. Upon proper initialization of the decoder, and issuance of WMAFileDecodeData( ), the WMA audio library would call WMAFileCBGetData( ) repeatedly for more bitstream. The method WMAFileCBGetData( ) should be implemented by the application, so that the WMA audio decoder can request for and get more chunks of compressed bitstream. The application can repeatedly call WMAFileGetPCM( )  to obtain reconstructed PCM samples from the WMA decoder. Table   SEQ Table \* ARABIC   Windows Media Audio Decoder API  * Windows Media Audio (WMA) Decoder API  * Copyright (c) Microsoft Corporation 1999.  All Rights Reserved. #ifndef _WMAUDIO_API_H_ #define _WMAUDIO_API_H_ #define PACKED #ifdef _MSC_VER #define USE_PACK_HEADERS #define PACKED #else #undef USE_PACK_HEADERS #define PACKED  __packed #endif #ifdef USE_PACK_HEADERS #include <pshpack1.h> #endif /* ...........................................................................  * Types and Constants  * =================== #define CHECK_NONSDMI_LIC #define CHECK_DMI_LIC #define CHECK_ALL_LICENSE #define WMA_MAX_DATA_REQUESTED  128 /* 16-bit signed type  */ #ifndef _WMAI16_DEFINED #define _WMAI16_DEFINED typedef short tWMA_I16; #endif /* _WMAI16_DEFINED */ /* 16-bit unsigned type  */ #ifndef _WMAU16_DEFINED #define _WMAU16_DEFINED typedef short tWMA_U16; #endif /* _WMAU16_DEFINED */ /* 32-bit unsigned type  */ #ifndef _WMAU32_DEFINED #define _WMAU32_DEFINED typedef unsigned long tWMA_U32; #endif /* _WMAU32_DEFINED */ #ifndef _QWORD_DEFINED #define _QWORD_DEFINED typedef PACKED struct tQWORD     tWMA_U32   dwLo;     tWMA_U32   dwHi; }   QWORD; #endif /* _QWORD_DEFINED */ typedef struct _MarkerEntry {     QWORD   m_qOffset;     QWORD   m_qtime;     tWMA_U16    m_wEntryLen;     tWMA_U32   m_dwSendTime;     tWMA_U32   m_dwFlags;     tWMA_U32   m_dwDescLen;     tWMA_U16   *m_pwDescName; } MarkerEntry; /* status */ #ifndef _WMAFILESTATUS_DEFINED #define _WMAFILESTATUS_DEFINED typedef enum tagWMAFileStatus     cWMA_NoErr,                 /* -> always first entry */                                 /* remaining entry order is not guaranteed */     cWMA_Failed,     cWMA_BadArgument,     cWMA_BadAsfHeader,     cWMA_BadPacketHeader,     cWMA_BrokenFrame,     cWMA_NoMoreFrames,     cWMA_BadSamplingRate,     cWMA_BadNumberOfChannels,     cWMA_BadVersionNumber,     cWMA_BadWeightingMode,     cWMA_BadPacketization,     cWMA_BadDRMType,     cWMA_DRMFailed,     cWMA_DRMUnsupported,     cWMA_DemoExpired,     cWMA_BadState,     cWMA_Internal               /* really bad */ } tWMAFileStatus; #endif /* _WMAFILESTATUS_DEFINED */ /* versions */ #ifndef _WMAFILEVERSION_DEFINED #define _WMAFILEVERSION_DEFINED typedef enum tagWMAFileVersion     cWMA_V1 = 1,     cWMA_V2 = 2 } tWMAFileVersion; #endif /* _WMAFILEVERSION_DEFINED */ /* sample rates */ #ifndef _WMAFILESAMPLERATE_DEFINED #define _WMAFILESAMPLERATE_DEFINED typedef enum tagWMAFileSampleRate     cWMA_SR_48kHz,     cWMA_SR_44_1kHz,     cWMA_SR_32kHz,     cWMA_SR_22_05kHz,     cWMA_SR_16kHz,     cWMA_SR_11_025kHz,     cWMA_SR_08kHz } tWMAFileSampleRate; #endif /* _WMAFILESAMPLERATE_DEFINED */ /* channels */ #ifndef _WMAFILECHANNELS_DEFINED #define _WMAFILECHANNELS_DEFINED typedef enum tagWMAFileChannels     cWMA_C_Mono = 1,     cWMA_C_Stereo = 2 } tWMAFileChannels; #endif /* _WMAFILECHANNELS_DEFINED */ /* ...........................................................................  * Structures  * ========== #ifdef _LINUX_x86 #pragma pack (1) #endif /* header */ #ifndef _WMAFILEHEADER_DEFINED #define _WMAFILEHEADER_DEFINED typedef PACKED struct tagWMAFileHeader     tWMAFileVersion version;         /* version of the codec */     tWMAFileSampleRate sample_rate;  /* sampling rate */     tWMAFileChannels num_channels;   /* number of audio channels */     tWMA_U32 duration;               /* of the file in milliseconds */     tWMA_U32 packet_size;            /* size of an ASF packet */     tWMA_U32 first_packet_offset;    /* byte offset to the first ASF packet */     tWMA_U32 last_packet_offset;     /* byte offset to the last ASF packet */     tWMA_U32 has_DRM;                /* does it have DRM encryption? */     tWMA_U32 bitrate;                /* bit-rate of the WMA bitstream */ } tWMAFileHeader; #endif /* _WMAFILEHEADER_DEFINED */ /* content description */ #ifndef _WMAFILECONTDESC_DEFINED #define _WMAFILECONTDESC_DEFINED typedef PACKED struct tagWMAFileContDesc     /* *_len: as [in], they specify how large the corresponding      *        buffers below are.      *        as [out], they specify how large the returned      *        buffers actually are.      */     tWMA_U16 title_len;     tWMA_U16 author_len;     tWMA_U16 copyright_len;     tWMA_U16 description_len;   /* rarely used */     tWMA_U16 rating_len;        /* rarely used */     /* these are two-byte strings      *   for ASCII-type character set, to convert these      *   into a single-byte characters, simply skip      *   over every other bytes.      */     unsigned char *pTitle;     unsigned char *pAuthor;     unsigned char *pCopyright;     unsigned char *pDescription;     unsigned char *pRating; } tWMAFileContDesc; #endif /* _WMAFILECONTDESC_DEFINED */ /* license params */ #ifndef _WMAFILELICPARAMS_DEFINED #define _WMAFILELICPARAMS_DEFINED typedef PACKED struct tagWMAFileLicParams     unsigned char *pPMID;       /* portable media id */     tWMA_U32 cbPMID;            /* length of the pPMID buffer */ } tWMAFileLicParams; #endif /* _WMAFILELICPARAMS_DEFINED */ typedef void * tHWMAFileState; /* another internal state */ #ifndef _WMAFILEHDRSTATE_DEFINED #define _WMAFILEHDRSTATE_DEFINED typedef PACKED struct tagWMAFileHdrState     unsigned char internal[184]; } tWMAFileHdrState; #endif /* _WMAFILEHDRSTATE_DEFINED */ #ifdef _LINUX_x86 #pragma pack () #endif /* ...........................................................................   * Functions  * ========= #ifdef __cplusplus extern "C" #endif /* __cplusplus */  *        WMAFileIsWMA  *        ============  * Description  * -----------  * Checks to see if the file is decodable.  Uses WMAFileCBGetData(),  * but the first argument to it is not really of type tHWMAFileState,  * but tWMAFileIdState.  * To decode the file, the app should call WMAFileDecodeInit()  * instead.  * This function was added in case the app wants to determine the  * type of the file without fully allocating tHWMAFileState.  * Syntax  * ------  *   tWMAFileStatus WMAFileIsWMA(tWMAFileHdrState *state);  * where:  *   state          pointer to the smaller structure that contains  *                  state of the checking function  * Return Value  * ------------  *   cWMA_NoErr                yes, it's a WMA file  *   cWMA_BadArgument          bad argument passed in  *   cWMA_BadAsfHeader         bad ASF header tWMAFileStatus WMAFileIsWMA (tWMAFileHdrState *state);  *        WMAGetMarkers  *        ============  * Description  * -----------  * Get the marker list so the main program can seek the file freely.  * Syntax  * ------  * int WMAGetMarkers(tWMAFileHdrState *state,MarkerEntry **ppEntry);  * where:  *   state          pointer to the smaller structure that contains  *                  state of the checking function  *   ppEntry        Address of the poitner to store the array of MarkerEntry  * Return Value  * ------------  * number of Marker Entries int WMAGetMarkers(tWMAFileHdrState *state,MarkerEntry **ppEntry);  *        WMAGetLicenseStore  *        ============  * Description  * -----------  * Get the marker list so the main program can seek the file freely.  * Syntax  * ------  * BYTE * WMAGetLicenseStore(tWMAFileHdrState *pstate,tWMA_U32 *pLen)  * where:  *   state          pointer to the smaller structure that contains  *                  state of the checking function  *   pLen           Address of the poitner to store the size of license.  * Return Value  * ------------  * Pointer of data chunck unsigned char * WMAGetLicenseStore(tWMAFileHdrState *pstate,tWMA_U32 *pLen);  *        WMAFileCBGetData  *        ================  * Description  * -----------  * Supplies more data to the WMAudio decoder.  Not implemented by  * the WMAudio decoder library.  * It is a callback function implemented by the application.  When  * the WMAudio library needs more data to process (both to parse  * informatio and to decode the actual data bitstream), the library  * will call this function.  * Called by WMAFileDecodeInit(), WMAFileContentDesc() and  * WMAFileDecodeData().  * Syntax  * ------  *   tWMA_U32 WMAFileCBGetData(tHWMAFileState hstate,  *                             tWMA_U32 offset,  *                             tWMA_U32 num_bytes,  *                             unsigned char **ppData);  * where:  *   state          pointer to the structure that holds the internal  *                  state of the WMAudio decoder  *   offset         offset into the WMA file to get the data from  *   num_bytes      how many bytes to get  *   ppData         pointer to contain the returned buffer with more  *                  data  *                  The WMA library may over-write this buffer  * Return Value  * ------------  *   tWMA_U32       how many actually returned  *                  should be same as num_bytes except for at the  *                  very end of the file extern tWMA_U32 WMAFileCBGetData (     tHWMAFileState hstate,     tWMA_U32 offset,     tWMA_U32 num_bytes,     unsigned char **ppData);  *        WMAFileCBGetLicenseData  *        =======================  * Description  * -----------  * Supplies more data to the WMAudio DRM decryption function.  Not  * implemented by the WMAudio decoder library.  * It is a callback function implemented by the application.  When  * the WMAudio's DRM decryption library needs more data to process  * the library will call this function.  * Called by WMAFileLicenseInit().  * Syntax  * ------  *   tWMA_U32 WMAFileCBGetLicenseData(tHWMAFileState *state,  *                                    tWMA_U32 offset,  *                                    tWMA_U32 num_bytes,  *                                    unsigned char **ppData);  * where:  *   state          pointer to the structure that holds the internal  *                  state of the WMAudio decoder  *   offset         offset into the license file to get the data from  *   num_bytes      how many bytes to get  *   ppData         pointer to contain the returned buffer with more  *                  data  * Return Value  * ------------  *   tWMA_U32       how many actually returned  *                  should be same as num_bytes except for at the  *                  very end of the file extern tWMA_U32 WMAFileCBGetLicenseData (     tHWMAFileState *pstate,     tWMA_U32 offset,     tWMA_U32 num_bytes,     unsigned char **ppData);  *        WMAFileDecodeInit  *        =================  * Description  * -----------  * Initializes the WMAudio decoder.  * Must be called before starting to decode a WMA file.  * Syntax  * ------  *   tWMAFileStatus WMAFileDecodeInit(tHWMAFileState *state);  * where:  *   phstate        pointer to the handle that holds the internal  *                  state of the WMAudio decoder  * Return Value  * ------------  *   cWMA_NoErr                decoder initialised  *   cWMA_BadArgument          bad argument passed in  *   cWMA_BadAsfHeader         bad ASF header  *   cWMA_BadSamplingRate      invalid or unsupported sampling rate  *   cWMA_BadNumberOfChannels  invalid or unsupported number of channels  *   cWMA_BadVersionNumber     invalid or unsupported version number  *   cWMA_BadWeightingMode     invalid or unsupported weighting mode  *   cWMA_BadPacketisation     invalid or unsupported packetisation  *   cWMA_BadDRMType           unknown encryption type  *   cWMA_DRMFailed            DRM failed  *   cWMA_DRMUnsupported       DRM is not supported for this version tWMAFileStatus WMAFileDecodeInit (tHWMAFileState* phstate); tWMAFileStatus WMAFileDecodeClose (tHWMAFileState* phstate);  *       WMAFileDecodeInfo  *       =================  * Description  * -----------  * Retrieves the header information for the WMA file.  * Syntax  * ------  *   tWMAFileStatus WMAFileDecodeInfo(tHWMAFileState hstate,  *                                    tWMAFileHeader *hdr);  * where:  *   state          pointer to the structure that holds the internal  *                  state of the WMAudio decoder  *   hdr            pointer to the structure that holds the WMA file  *                  header info  * Return Value  * ------------  *   cWMA_NoErr                header retrieved ok  *   cWMA_BadArgument          bad argument(s) tWMAFileStatus WMAFileDecodeInfo (tHWMAFileState hstate, tWMAFileHeader *hdr);  *       WMAFileContentDesc  *       ==================  * Description  * -----------  * Retrieves the content description for the WMA file.  Content  * descriptions are such as the song title, the author, the  * copyright info, the song description, and the rating info.  * All these are part of the standard ASF description.  * Not all songs have content descriptions.  * Syntax  * ------  *   tWMAFileStatus WMAFileContentDesc(tHWMAFileState hstate,  *                                     tWMAFileContDesc *desc);  * where:  *   state          pointer to the structure that holds the internal  *                  state of the WMAudio decoder  *   desc           pointer to the structure that holds the WMA file  *                  content description info  *                  as [in], must provide the buffer(s) and the size(s)  * Return Value  * ------------  *   cWMA_NoErr                description retrieved ok  *   cWMA_BadArgument          bad argument(s)  *   cWMA_BadAsfHeader         bad ASF header tWMAFileStatus WMAFileContentDesc (tHWMAFileState hstate, tWMAFileContDesc *desc);  *       WMAFileLicenseInit  *       ==================  * Description  * -----------  * Reads the DRM license file and check the license for the file.  * Uses WMAFileCBGetLicenseData to retrieve the license file.  * Syntax  * ------  *   tWMAFileStatus WMAFileLicenseInit(tHWMAFileState hstate,  *                                     tWMAFileLicParams *lic_params);  * where:  *   state          pointer to the structure that holds the internal  *                  state of the WMAudio decoder  *   lic_params     pointer to the structure that passes in the  *                  parameters for the license initialization.  * Return Value  * ------------  *   cWMA_NoErr                license checked ok  *   cWMA_BadArgument          bad argument  *   cWMA_DRMFailed            no license  *   cWMA_DRMUnsupported       DRM is not supported for this version tWMAFileStatus WMAFileLicenseInit (tHWMAFileState hstate, tWMAFileLicParams *lic_params, tWMA_U16 CheckLicTypes);  *       WMAFileDecodeData  *       =================  * Description  * -----------  * Decodes WMAudio bitstream.  * Syntax  * ------  *   tWMAFileStatus WMAFileDecodeData(tHWMAFileState hstate);  * where:  *   state          pointer to the structure that holds the internal  *                  state of the WMAudio decoder  * Return Value  * ------------  *   cWMA_NoErr                frame decoded ok  *   cWMA_BadArgument          bad argument  *   cWMA_BrokenFrame          data is inconsistent  *   cWMA_NoMoreFrames         no more data to decode tWMAFileStatus WMAFileDecodeData (tHWMAFileState hstate);  *       WMAFileGetPCM  *       =============  * Description  * -----------  * Write PCM samples from the WMAudio bitstream previously decoded by  * WMAFileDecodeData().  * WMAFileGetPCM() may have to be called more than once to obtain all  * of the samples for the frame. The frame is complete when the number  * of samples written is less than the number of samples requested.  * Syntax  * ------  *   tWMA_U32 WMAFileGetPCM(tHWMAFileState hstate,  *                          tWMA_I16 *left, tWMA_I16 *right,  *                          tWMA_U32 max_nsamples);  * where:  *   state          pointer to the structure that holds the internal  *                  state of the WMAudio decoder  *   pi16Channel0   pointer to output buffer for left-channel PCM, or the entire PCM output if it is inter-leaved form  *   pi16Channel1   pointer to output buffer for right-channel PCM, NULL if the output PCM is in parallel form  *   max_nsamples   maximum number of samples to write per channel  * Return Value  * ------------  *   tWMA_U32       number of samples written  *                  < max_nsamples when frame complete tWMA_U32 WMAFileGetPCM (     tHWMAFileState hstate,     tWMA_I16 *pi16Channel0, tWMA_I16 *pi16Channel1,     tWMA_U32 max_nsamples);  *       WMAFileSeek  *       ===========  * Description  * -----------  * Seek to a time into the WMA file.  It seeks to the nearest seek  * point.  * Syntax  * ------  *   tWMA_32 WMAFileSeek(tHWMAFileState hstate,  *                       tWMA_U32 msSeek);  * where:  *   state          pointer to the structure that holds the internal  *                  state of the WMAudio decoder  *   msSeek         time position to seek from the beginning of the  *                  clip, in milliseconds  * Return Value  * ------------  *   tWMA_32        actual time position from the beginning of the  *                  clip, in milliseconds tWMA_U32 WMAFileSeek (tHWMAFileState hstate, tWMA_U32 msSeek); #ifdef __cplusplus #endif /* __cplusplus */ #ifdef USE_PACK_HEADERS #include <poppack.h> #endif #endif /* _WMAUDIO_API_H_ */ Tables Constants Table   SEQ Table \* ARABIC   Constants used by the decoder Constant Value D_ENCOPT_BARK 0x0001 D_ENCOPT_LPC 0x0020 D_ENCOPT_PACKETS 0x0002 D_ENCOPT_SUBFRAME 0x0004 D_ENCOPT_SUBFRAMEDIVMASK 0x0018 D_LPCORDER D_MASK_RESAMPLE_OFFSET D_MAX_QUANT_INCR D_MIN_FRAME_SIZE D_STEREO_WEIGHT Bark Frequencies  Table   SEQ Table \* ARABIC   Bark Frequencies usigned short bark_freqs [25]={100, 200,  300,  400,   510,  630,  770,  920,  1080, 1270, 1480, 1720, 2000, 2320, 2700, 3150, 3700, 4400, 5300, 6400, 7700, 9500, 12000, 15500, 24500};  XE "LSF"   Reconstruction Values Table   SEQ Table \* ARABIC   XE "LSF"   Reconstruciton Values float lsfReconLevel [D_LPCORDER] [16] = { {1.7925000e-002F,2.2837500e-002F,2.6762500e-002F,3.0825000e-002F,3.5525000e-002F,4.1200000e-002F,4.8675000e-002F,5.9487500e-002F}, {2.6375000e-002F,3.1550000e-002F,3.5725000e-002F,3.9712500e-002F,4.3675000e-002F,4.7900000e-002F,5.2462500e-002F,5.7362500e-002F,6.2937500e-002F,6.9262500e-002F,7.6012500e-002F,8.3237500e-002F,9.1412500e-002F,1.0113750e-001F,1.1402500e-001F,1.3408750e-001F}, {5.0262500e-002F,5.8850000e-002F,6.5262500e-002F,7.1475000e-002F,7.7675000e-002F,8.3950000e-002F,9.0537500e-002F,9.7350000e-002F,1.0438750e-001F,1.1285000e-001F,1.2243750e-001F,1.3320000e-001F,1.4338750e-001F,1.5515000e-001F,1.6963750e-001F,1.8963750e-001F}, {7.7175000e-002F,9.1537500e-002F,1.0248750e-001F,1.1067500e-001F,1.1803750e-001F,1.2523750e-001F,1.3260000e-001F,1.4015000e-001F,1.4827500e-001F,1.5753750e-001F,1.6775000e-001F,1.7816250e-001F,1.8936250e-001F,2.0170000e-001F,2.1537500e-001F,2.3567500e-001F}, {1.2272500e-001F,1.3523750e-001F,1.4651250e-001F,1.5676250e-001F,1.6615000e-001F,1.7541250e-001F,1.8412500e-001F,1.9248750e-001F,2.0115000e-001F,2.0993750e-001F,2.1916250e-001F,2.2836250e-001F,2.3852500e-001F,2.4982500e-001F,2.6332500e-001F,2.7956250e-001F}, {1.6676250e-001F,1.8085000e-001F,1.9245000e-001F,2.0325000e-001F,2.1220000e-001F,2.2041250e-001F,2.2858750e-001F,2.3632500e-001F,2.4426250e-001F,2.5243750e-001F,3.7345000e-001F,2.7005000e-001F,2.7978750e-001F,2.9110000e-001F,3.0258750e-001F,3.1576250e-001F}, {2.2883750e-001F,2.4497500e-001F,2.5706250e-001F,2.6682500e-001F,2.7482500e-001F,2.8178750e-001F,2.8793750e-001F,2.9365000e-001F,2.9970000e-001F,3.0601250e-001F,3.1253750e-001F,3.2001250e-001F,3.2903750e-001F,3.3938750e-001F,3.5292500e-001F,3.7077500e-001F}, {2.9346250e-001F,3.1012500e-001F,3.2288750e-001F,3.3436250e-001F,3.4593750e-001F,3.5932500e-001F,3.7570000e-001F,4.0031250e-001F,3.4283750e-001F,3.4897500e-001F,3.5576250e-001F,3.6305000e-001F,3.7082500e-001F,3.8123750e-001F,3.9447500e-001F,4.0711250e-001F}, {2.8091250e-001F,2.9517500e-001F,3.0435000e-001F,3.1206250e-001F,3.1885000e-001F,3.2506250e-001F,3.3096250e-001F,3.3675000e-001F}, {3.9257500e-001F,4.0575000e-001F,4.1585000e-001F,4.2440000e-001F,4.3235000e-001F,4.4057500e-001F,4.5018750e-001F,4.6370000e-001F}}; Run-Level Variable Length Coding (Huffman)Tables The symbol values listed in the following Huffman tables are all unsigned numbers. The  Symbol Value  and  Symbol Length  together define a variable length symbol. For example, in  Huffman-RLC-44Q-Mono , a Symbol Value of 27 and a Symbol Length of 5 together specify a bit string  1 1011 .  In bitstream, the bit string always appears  left bit first . This particular symbol in  Huffman-RLC-44Q-Mono  is representing a |level|=1 and run=5. Group Huffman-RLC-44Q Table   SEQ Table \* ARABIC   Huffman-RLC-44Q-Mono Index |Level| Zero Run Symbol Value Symbol Length Index |Level| Zero Run Symbol Value Symbol Length ESCAPE_CODE END_OF_BLOCK 13114 13633 13636 13345 13638 11861 11862 18733 11742 10651 11740 13690 26251 116607 117280 54367 39046 93850 62119 46929 41966 53081 53079 46932 53414 93848 46944 27334 41968 77758 78084 62117 41967 54386 76986 104494 93852 116606 104656 78085 93842 46941 54361 13127 10650 11854 10635 29058 19526 11840 10198 20456 26119 21264 39044 29409 27197 19306 19578 26115 19579 13352 26117 38500 40896 29150 26113 23474 39045 41954 116255 76987 46928 53080 38525 154005 13124 420013 46938 40898 13115 21375 46942 81838 77756 13268 13129 15566 10046 10047 14574 13126 14705 10489 15463 19527 15457 29408 13117 19305 14530 13344 31063 14541 26169 31134 11841 31065 13599 30849 13128 19304 15462 40899 13666 40918 10633 52336 10197 41969 13116 76990 11855 58126 13371 58651 11743 27378 19400 76988 10688 116605 11863 62123 19570 77757 109103 13639 41964 13632 54387 10707 21367 19525 41961 104491 26112 58112 19571 77631 19406 53087 13691 38592 10662 232508 10706 93844 93845 10634 77629 29059 170916 26114 170918 31064 116604 19302 436410 21373 218204 21365 210007 20457 420012 19303 436411 31135 93853 19401 58649 20990 154006 27195 77630 23478 20392 29327 21366 18732 21374 31066 15426 27196 15565 58645 26118 30855 30848 26682 26706 20985 27194 20989 23476 52330 62114 27274 40903 52333 76985 23475 52332 26683 42728 20988 38593 21368 29326 30854 23479 62116 31067 26684 18734 40897 40902 26685 20991 46930 52335 38520 38603 41960 53361 27335 104657 20976 76984 46937 232509 27379 81839 19307 38601 62112 62125 38595 58648 13343 46940 10689 54360 19251 52331 41955 21372 53360 26538 93846 20458 46947 13370 52337 38527 14540 40900 13373 38594 20986 58646 39048 62113 77754 54364 54365 54366 10663 77753 40901 38526 58113 104495 38523 39043 38596 46931 20987 77752 39049 62120 62118 117281 38597 58650 53082 117287 76991 77628 38521 54385 62122 46939 38522 77755 62121 62124 46946 54362 46927 15456 38600 53086 93841 38602 15564 77759 53415 29062 78083 54550 21369 93849 76989 39047 41962 104489 27377 46933 170919 53083 117288 170917 54384 93843 104492 104488 78082 154004 41963 78081 117289 93840 117285 104493 117286 93851 46934 13060 38524 154007 15425 46943 10199 104659 11741 46935 11860 105002 13372 54363 26116 58647 29057 117284 26170 117283 20393 117282 26171 46936 21265 93847 21370 52500 26681 78080 23477 18735 27376 38599 52334 21371 53084 53078 104658 53085 41965 62115 104490 46945 38598 Table   SEQ Table \* ARABIC   Huffman-RLC-44Q-Diff Index |Level| Zero Run Symbol Value Symbol Length Index |Level| Zero Run Symbol Value Symbol Length ESCAPE_CODE  10405 END_OF_BLOCK 17690 17688 14794 16445 17691 13043 12491 32883 15906 21146 14796 29578 25904 29577 24979 32881 16451 12494 20807 29576 20805 32882 17697 10620 12493 12490 10619 12955 17696 14793 24977 31886 24978 51811 14797 24976 26756 26757 29570 17676 12497 32887 15907 59137 59138 32889 33322 41496 30855 16447 21003 21147 59136 17689 10621 12958 13040 14790 15942 29579 20806 16454 32888 20750 30854 10500 16726 16727 24626 12499 35790 16448 16446 42004 66647 32885 26759 31887 14791 29575 32880 35791 84010 66646 84011 26758 17677 12959 15913 20800 20801 51810 24627 15426 15912 17679 41498 29572 41497 59139 41499 29571 17894 16453 12312 17695 14799 15909 10572 10406 17694 10409 10617 13042 14798 20802 12492 12954 20751 17692 12953 15911 20803 16449 10407 14792 12957 15904 20804 12496 12501 16660 10616 10623 15908 10618 13041 14795 16455 15915 12500 10408 12956 29573 17693 32884 16452 17678 10622 15914 16450 20809 12498 32886 12495 29574 15905 20808 15910 Group Huffman-RLC-44O Table   SEQ Table \* ARABIC   Huffman-RLC-44O-Mono Index |Level| Zero Run Symbol Value Symbol Length Index |Level| Zero Run Symbol Value Symbol Length ESCAPE_CODE 1895614 END_OF_BLOCK 510902 431188 745824 868986 1924502 728429 940532 470504 239067 15034 22761 29388 53981 53805 61121 61147 119458 126811 219106 240575 119545 217092 239068 217596 235372 435142 435147 255466 940531 435150 431186 940528 478096 868985 868987 510901 372933 239075 239074 15829 29324 31929 57762 11268 60037 11310 61144 11309 107274 11299 109135 13415 239071 13475 217096 13595 239072 13569 255476 14941 255479 13596 728428 14453 361534 15850 215664 14715 470520 14811 478059 15857 868991 14808 470512 15284 372927 22538 372928 22605 870064 22594 470511 23315 940536 22762 1453668 27005 728431 27142 239072 26828 234535 27335 430438 27286 435170 29428 435171 30019 477837 29364 868990 32032 1924503 45059 870068 29621 372952 31718 435155 53632 31697 31928 13516 32006 27187 32037 29641 54002 57760 53658 63485 54068 63948 57820 90493 54569 117483 54660 128169 57810 240563 58851 431184 61124 234528 58724 235383 64073 255456 90113 435156 61148 435181 63482 745830 107308 940529 90417 728430 90115 939638 63944 435178 126848 939636 119456 745827 109131 870071 63438 510886 109566 870074 109136 1924500 107608 745828 108566 435185 117476 510882 119550 431185 120110 470522 109132 870075 180805 470519 119457 478100 107357 1895615 117275 940538 120280 1441947 128305 435172 117276 127881 128175 14454 239079 28911 217595 54570 180811 90133 216014 90132 180813 109561 180809 118551 180810 215673 470524 214608 219119 255749 217090 435152 239078 361520 234545 478109 361531 507518 215671 372926 361521 235379 239091 435166 239069 255461 218813 15831 235374 31696 435154 58780 217101 63949 431300 118552 360637 119551 255464 215674 478101 234537 215662 217100 235388 470496 234546 431190 372946 507516 435160 870069 360632 870066 372939 435165 372951 470510 470509 26899 470508 45078 478108 64066 235391 107309 470506 118534 478110 215676 507517 215677 360639 745825 372949 218241 510888 255482 478097 510880 255453 507519 745841 510883 870067 510887 870073 372947 510881 470502 478111 435164 470497 940533 255467 27188 54378 90416 126815 128306 128310 234542 361526 435163 431195 29323 61145 128313 117277 235365 235366 361529 13416 431197 13666 235367 14663 16002 22532 31740 23314 90465 22531 214610 26989 239085 27294 218253 27004 361528 27000 435162 27387 29874 11358 29429 54069 29632 109338 30017 186484 26948 217094 29879 218244 28883 372940 31657 478106 45233 470515 53679 435158 57821 58850 13491 57763 54702 61123 117486 90415 186481 59745 219107 61146 478103 59278 470521 64072 360634 90412 372948 58641 58725 13646 59731 63312 109130 117696 58781 239079 120108 239076 108561 117479 14936 109564 93249 120109 181711 117455 255457 118533 478060 180820 939639 215666 435167 128172 235371 15952 215665 91074 181977 186486 186483 218242 215658 372950 219111 361530 214604 255477 22622 361523 107907 128314 217103 217098 478099 219114 235377 215667 234543 26898 219109 93251 235381 219105 431309 235378 26991 510885 128312 435183 372937 218243 435151 478104 372929 27384 235376 128308 239063 361603 234547 435168 234548 431310 32002 360638 117480 255487 361605 435180 745839 30026 870065 219118 435153 235387 470501 478062 29874 470505 215675 255744 870070 45536 435177 214601 478057 255459 939637 870072 53956 510890 255462 239057 45209 235362 372942 431199 54699 235385 54575 235363 431196 11357 14933 53957 14934 218249 15953 15285 60141 23306 255480 27295 29880 90134 32040 255483 53639 54286 59240 54574 239085 54309 60131 90135 57811 360487 90414 58782 64007 61122 431189 58744 58650 90411 58745 58645 107905 59744 53635 107307 53792 360636 53963 435182 58642 93246 109565 90114 93250 109336 117481 435184 214554 119546 109133 107272 108617 128316 118535 435187 127887 215909 108560 180819 235369 126878 117699 117487 117697 180821 107310 127876 361525 127886 181709 239095 126809 180818 234908 126851 181976 239059 180242 437624 435186 186489 510889 745846 217093 470507 235364 118532 255478 431187 239064 477836 217599 435174 431313 186479 437625 1721746 217095 940539 11298 510899 217594 372941 11267 239084 11359 239083 11352 215659 13417 218814 11353 215660 13450 13418 14702 239082 22746 13501 26979 13503 27184 218815 29389 14442 29647 15033 31975 361535 53962 14443 53976 239093 59236 14923 59284 234529 90120 15012 90471 239081 90494 14938 109129 14688 107275 235390 108563 15849 181978 14680 107904 15863 117698 14817 63946 255460 90495 14687 119550 431192 63484 16017 93248 15858 58643 234536 61125 22770 63427 16000 120072 435139 108574 16019 119549 431296 234544 22712 218246 372938 255485 22607 180812 431297 182106 22769 215668 26838 239092 27152 214605 27331 431306 27186 239089 28882 120073 26897 120256 29873 214600 29844 214606 27348 435157 27350 435176 29368 435175 27386 372931 29875 180808 30016 127882 29646 239090 45061 435173 29875 29845 29881 54070 31743 30563 29640 32041 11296 46626 13597 53793 15862 53633 27385 45521 29365 29880 45527 45520 45234 53659 54282 53955 54571 45426 59730 53980 59287 46627 91075 54698 115616 54310 127878 53634 117281 59285 214613 57809 180807 54071 128315 59756 180816 58852 180815 58644 127877 60142 126813 90112 118549 59239 117482 57761 109322 59279 118553 90116 128317 63426 120258 59289 119547 58855 126808 58726 215672 59241 219116 63313 128307 61150 239073 64006 431314 90117 361602 64159 239086 108006 181980 59238 219115 90991 372932 61149 235384 61120 435169 107273 510900 118474 239073 91085 478056 63947 239087 61151 239058 107906 234532 90413 470498 58853 940534 109560 940535 107276 255746 117279 255468 91084 127883 107356 117278 109137 91052 108622 107839 11652 118550 14935 119548 15830 107955 26903 109337 27153 108575 32007 120259 60130 93247 59286 120257 63945 119548 63483 128170 90470 108562 90464 128309 109339 118546 109562 108567 186491 90492 119543 109323 235368 119544 127884 126850 214611 186490 214609 120111 435161 128304 217089 109128 240573 218247 231234 119549 234534 128173 215670 118545 239084 214555 215669 218245 217088 117280 218248 117485 118544 117478 181979 109567 219117 214607 219112 215663 219113 126849 239088 214603 431298 236950 745848 127875 470517 128311 234533 118548 234539 181710 478061 217102 478063 180817 745847 117484 745849 127879 478058 214612 745842 219108 361607 186488 255470 217099 255469 218240 470514 239080 470516 218254 510894 215908 435146 128168 462470 217091 216015 255455 435144 186480 219110 255472 126810 239082 13664 127880 14683 255747 22606 180814 26980 239074 29645 217597 45543 181981 59288 255748 59277 217598 64067 186485 108616 372935 107311 235370 109134 239078 214602 234531 128171 361600 127885 180806 239083 239075 239060 186487 218250 255473 435143 240574 372944 361609 435141 255481 510896 219104 431307 240572 239077 372934 255458 430439 234540 430437 186482 255465 128174 234530 239061 235375 431315 235389 361601 255454 217097 435145 235380 363416 361522 239094 745836 239056 372955 361606 218251 435137 745844 255484 1924501 372956 720972 218255 510898 234541 239077 431305 477839 361604 940537 239080 470518 478107 940541 478102 510893 431312 868989 361608 470271 239076 235386 234538 372953 470722 745837 235382 745835 372945 1721747 372943 510895 239062 372954 940540 372936 255463 510903 11372 462471 14689 510891 26824 372930 27185 431299 29373 477838 53954 255475 58651 435149 58854 470526 109563 473902 119551 470720 117477 431301 126812 361527 126814 431304 118547 470527 215661 234549 235373 361533 745834 435159 255474 470721 435140 860872 745833 431311 255452 745843 360633 255486 478105 360635 481124 940530 361524 745838 239065 745845 431194 239066 431193 372925 218252 431308 239081 361532 431191 431303 470513 478098 431198 470723 435038 431302 255745 745840 745832 510892 372957 726835 239070 510884 435138 745831 868984 470503 435148 470500 470525 435136 745829 255471 1441946 1453669 510897 470499 868988 470523 745826 435039 947806 Table   SEQ Table \* ARABIC   Huffman-RLC-44O-Diff Index |Level| Zero Run Symbol Value Symbol Length Index |Level| Zero Run Symbol Value Symbol Length ESCAPE_CODE 64399 END_OF_BLOCK 259316 261556 227016 255994 131024 402179 758517 127585 201097 261557 182235 227017 129750 129745 11289 12604 14095 15552 11944 22726 22727 11959 22736 32024 43608 47176 23966 23916 47180 50569 47361 91128 47817 47557 63804 100568 48071 90348 64879 100569 90346 63399 63812 47787 56378 100559 95995 182232 182231 113525 380574 402178 225517 95988 131025 225519 259320 227015 131041 227014 95999 451032 95990 94343 62925 12555 22737 21806 23591 26734 31911 50292 56371 31730 24041 31285 47786 47595 64405 47544 95105 127586 100557 94344 94970 11388 63394 129747 47808 226908 130783 127525 11947 129748 12554 182234 11369 380573 13929 255992 12583 123395 12547 100567 11843 13922 12645 12580 12603 12561 13928 12602 13371 13366 15442 13370 16124 32029 11884 31704 16346 23775 16120 47174 11899 45449 16098 55736 15557 65528 15730 55742 22720 50570 15864 24042 11945 53715 15998 90340 21869 127595 23682 100570 15729 123394 15995 182226 15426 91134 22743 201107 16206 96130 25088 227010 15728 182225 23730 261552 23702 226909 23728 182224 16197 129744 23729 123393 11885 100573 12560 182242 12136 226903 23696 226901 31910 227012 31880 227008 25092 95978 25288 30886 31110 31189 45485 11361 31113 11984 45177 23892 23773 21805 43732 30851 24040 45480 32205 47388 31111 47807 23911 47362 23961 63402 47389 63397 31985 106984 23963 131030 31191 47806 45179 106943 23685 91123 23962 131032 32204 129751 32447 127605 32206 131036 32251 32448 32026 31239 10905 23684 15855 50289 25203 31986 31190 47855 32027 47570 43731 24043 53500 31702 182237 47173 100566 23960 47810 47386 182241 47848 113526 50400 106941 56369 201094 63805 64888 48078 106942 53714 201091 63401 261558 55737 259313 48075 226898 47360 129749 43735 259321 47805 255999 50401 380572 62575 226907 50568 201096 50571 95090 90342 48079 47811 63813 15427 63395 15853 53697 43734 64398 32449 63396 63810 64396 23686 62476 94345 50291 47803 64882 131048 48077 182238 65530 127598 63808 129732 48073 259319 63400 226902 106989 129661 48069 227011 127599 261555 91133 201103 90311 129734 106997 63815 91132 87219 15994 65526 23697 91126 43737 90345 47852 106992 56370 47801 62574 47802 123392 94342 95994 47363 226910 64885 261559 62216 182230 95987 261561 91135 226900 64893 226904 113528 201102 91131 131035 100571 106999 87218 12550 94973 26863 91124 47181 113523 45448 94975 48076 47804 127588 63869 113513 106995 95110 113517 129728 131029 106996 127602 15937 95104 26861 95106 55740 131047 63393 47816 113511 48068 131037 100563 95993 90336 64891 94815 16227 94965 53501 113529 47594 129753 100572 127593 129731 100560 106994 47812 201106 47813 131044 201093 100562 100556 26725 201095 62217 255998 90341 100561 95989 113516 226911 127592 129740 129746 131033 106986 25089 113512 61701 129739 95984 261554 124954 100558 23917 94971 91130 106991 95981 129742 113520 11840 47809 53503 113515 94338 94968 113510 10904 131039 65532 113514 182236 131031 129663 127590 95992 14180 226899 65533 129662 95996 201090 129733 129736 182243 11985 225518 64407 95980 95977 11996 189628 48072 90309 226906 25149 249500 90344 95091 95976 22576 100564 91129 95985 95983 25093 226905 127604 113532 131038 25289 95986 127589 201099 182228 23774 226897 131027 380575 226896 31112 201105 259318 47177 259317 499820 23689 129729 129735 379259 182240 23683 499002 255997 61775 182239 259312 47559 499821 227009 50288 499003 127601 64406 95979 91127 47387 61698 63814 129741 55741 48070 90343 100555 64886 113521 106990 106998 48074 11891 65535 12551 12581 113509 12549 11849 94969 15592 16121 127596 15966 11890 64887 13425 16345 113518 25151 30880 94972 26727 23731 10935 25202 11850 26860 127591 28314 31188 131034 28312 11842 45482 12545 28186 96128 31109 12605 26862 13429 28315 96132 23688 12582 45484 129743 32250 15441 23909 96131 31984 15936 31935 131045 50293 13923 90347 131040 113534 16015 63398 127597 130781 13372 90339 15553 65531 95997 64397 15941 65529 11968 53696 16225 50572 15854 106985 16344 47800 22590 62927 11845 65525 15961 227013 15618 106988 23784 90349 21864 130782 95998 129737 12137 106987 129752 127524 22721 95982 23683 64889 131046 94336 25201 95111 28188 113530 25287 131049 26849 95991 21807 95109 26724 96129 26726 182229 28313 96133 23740 131043 31909 91125 30881 129730 23682 255993 32207 201101 25147 261553 25150 131042 26856 127526 31286 201098 23964 182233 45175 201104 31987 201100 31284 259315 31908 113535 32025 113522 31186 201092 32028 758516 31705 255995 47178 451033 64404 129738 43733 402176 56368 261560 31731 249911 47854 255996 45178 402177 50290 259314 47390 127594 55738 23967 53502 47558 23687 61774 47853 47406 61699 47556 64401 55739 45483 50573 65534 63803 63809 47850 47391 11893 62924 12548 55743 11969 63811 15960 61700 22591 127584 16226 64402 16196 63807 22725 62374 25148 47815 23796 63403 31703 47814 23965 95107 43730 64877 23910 47849 45481 64878 45176 124751 31998 100554 47384 127527 50287 64403 47385 64400 47175 65527 28187 94341 47179 94339 43736 90337 64884 94340 94964 63806 94337 90338 63868 90310 127603 106993 63392 113519 64892 95108 94967 64880 64890 127587 113527 100565 94974 95142 127600 62926 64883 91122 113531 64881 106940 131026 113533 90308 48067 131028 94966 182227 47851 Group Huffman-RLC-16 Table   SEQ Table \* ARABIC   Huffman-RLC-16-Mono Index |Level| Zero Run Symbol Value Symbol Length Index |Level| Zero Run Symbol Value Symbol Length ESCAPE_CODE END_OF_BLOCK 11145 11010 11660 15387 15385 12981 16284 11471 14487 23349 44290 32553 25665 14468 30856 30798 25960 49595 22918 26572 65097 65096 49596 65089 99185 91708 57905 28958 44297 61586 11675 12975 16150 15388 30772 15429 14492 26574 25669 49593 30857 32570 30799 32555 44299 61584 49437 59726 28959 59889 62350 31209 44291 61595 11023 51886 11073 65094 11022 177382 13254 59888 12368 106166 424641 11656 424640 12380 212326 15384 62344 11087 11458 14919 22144 22173 25666 11075 25667 11460 25670 25940 25966 61594 25668 46623 28960 26573 29834 28956 49594 46646 32290 32554 31398 46644 32549 49439 31399 53086 32288 46621 49435 61547 49432 51883 31397 49598 44298 59724 62345 61593 106171 99053 51885 59727 65090 49433 65088 57906 93236 177380 177381 62346 212325 106164 93232 123487 124846 59725 123484 99184 124675 106170 12369 93239 13252 57908 25967 93294 14481 28957 51887 61591 29833 61592 51328 51882 62342 106167 93295 62340 99048 99049 57904 124672 212322 212323 212324 93235 57878 15434 32571 30870 49436 57877 93234 62347 62349 99050 124673 463583 89158 11085 13253 16147 29835 61590 53120 15389 123486 22926 927165 61588 212321 31396 93233 44344 44044 49434 22288 31210 62416 51329 49599 65092 46645 44045 44296 46622 22919 28961 49597 62338 62343 14930 57911 62417 65095 62339 11470 61585 57879 62341 57907 25949 99054 106168 25671 91710 61587 29947 46620 65091 11084 12364 12982 14918 22023 16151 11461 24731 25948 32291 26561 32550 32551 13255 61589 59891 53121 11657 49438 51884 62351 16146 59890 11462 29946 13281 57910 23348 65093 24730 115752 25961 57909 29832 99055 32289 106165 53087 62422 28972 99052 14493 93237 26575 62348 32552 177383 91711 89159 212327 927164 91709 124674 123485 115894 246187 57946 89156 246186 93238 89157 115753 106169 124847 99051 123092 231790 Table   SEQ Table \* ARABIC   Huffman-RLC-16-Diff Index |Level| Zero Run Symbol Value Symbol Length Index |Level| Zero Run Symbol Value Symbol Length ESCAPE_CODE END_OF_BLOCK 20393 13353 15658 15546 15545 15491 27775 36915 16236 222083 125277 27768 13968 13359 18559 31080 16232 19398 15549 15502 13972 18558 13970 10209 31318 27767 15548 36913 15494 13973 27770 31085 13290 27766 222082 13416 123927 13352 15492 20399 10208 55521 16235 125276 20397 15543 31006 27765 19399 13969 55525 30980 18462 27773 20395 20392 20396 15547 27774 27771 13418 15493 13417 18463 18461 13971 36914 55524 18459 27764 31083 31081 55523 18544 27772 27769 15544 62639 111040 13291 13358 16234 13419 16233 31007 18460 18545 15495 20398 16237 61962 31084 36912 20394 55526 31082 16239 55522 18458 18546 16238 18547 123926 55527 Mask Variable Length Coding (Huffman) Table The symbol values listed in the following Huffman table are all unsigned numbers. The  Symbol Value  and  Symbol Length  together define a variable length symbol. For example, a Symbol Value of 262119 and a Symbol Length of 18 together specify a bit string  11 1111 1111 1110 0111 .  In bitstream, the bit string always appears  left bit first . This particular symbol is representing a mask value of 2. Table   SEQ Table \* ARABIC   Huffman Table for Mask Information Index (Mask) Symbol Value Symbol Length Index (Mask) Symbol Value Symbol Length Index (Mask) Symbol Value Symbol Length 262120 262118 262119 16376 262117 16372 524277 65520 524273 32756 524269 65526 524278 32757 524270 262114 524271 524249 524272 524250 524284 524251 524285 524252 524287 524253 524286 524254 524279 524248 524280 524242 524283 524243 524281 524244 262116 524245 524282 524246 262115 524274 131055 524255 131056 524263 65525 524264 131054 524265 65522 524266 65523 524267 65524 524262 65521 524256 32758 524257 32759 524258 16377 524259 16373 524260 16375 524261 16371 524247 16374 524268 16370 524276 524275 Noise Power Variable Length Coding (Huffman) Table The symbol values listed in the following Huffman table are all unsigned numbers. The  Symbol Value  and  Symbol Length  together define a variable length symbol. For example, a Symbol Value of 94 and a Symbol Length of 9 together specify a bit string  0 0101 1110 .  In bitstream, the bit string always appears  left bit first . This particular symbol is representing a noise power of 6. Table   SEQ Table \* ARABIC   Huffman Table for Noise Power Information Index (Power) Symbol Value Symbol Length Index (Power) Symbol Value Symbol Length Index (Power) Symbol Value Symbol Length Parameter Restrictions  on Legal WMA Bitstreams & Compliant WMA Decoders Legal WMA Version 7 Bitstreams All legal WMA bitstreams follow the syntax specified in this documents. In addition, they have to obey parametric limitations listed in to be decodable by WMA decoders: Table   SEQ Table \* ARABIC   Parameter limitations of WMA 7.0 legal bit streams Parameter Limitation Maximum number of channels Maximum subframe size Minimum subframe size Maximum number of frames per packet Source resolution (bits/channel-sample) Maximum sampling rate (Hz) 48000 Maximum buffer size requirements The number of compressed bits representing a frame varies over time, while maintaining an average bit rate. A bitstream buffer is used at the decoder to smooth the fluctuations in compressed frame size. The size of the bitstream buffer depends on the mode of operation of the decoder, and the application scenario. In one scenario, the transmitter is pushing compressed bits at a constant bitrate to the decoder, e.g. multicast over the internet. In another scenario, the compressed bitstream is mostly available at the decoder device (or is quickly available on demand). Here, the decoder is pulling the compressed bits. One example of such implementations is consumer electronic devices where the DSP is connected to a large store holding the entire compressed bitstream. The DSP is conceptually pulling the compressed bits, and bitstream buffer overflow or underflow are non-issues. Another example of such implementations is a push-mode decoder with two processors working in tandem, the first one processing the ASF layer and packet layers, the second one processing compressed frames. max_push_buffer_size When used in a push-mode, where the bitstream is arriving at the decoder at a constant bitrate, a legal bitstream shall not require more than max_push_buffer_size bytes of bitstream buffer for proper decodability without overflowing or under-flowing the decoder s bitstream buffer. Its value can be computed through the following pseudo-code. // max_push_buffer_size in bytes if (samples_per_second < 16000) { // average compressed frame max_push_buffer_size = NINT(bytes_per_second *  samples_per_frame/samples_per_second); } else { // 32 * average compressed frames max_push_buffer_size = NINT(32 * bytes_per_second *  samples_per_frame/samples_per_second); max_pull_buffer size The bitstream syntax of WMA Version 7 mandates that there be at least one complete compressed frame in every packet (Section   REF _Ref497787440 \w \h  ). Consequently, the worst-case compressed frame size (max_compressed_frame_size) can be as large as a packet. Values of this parameter in legal WMA 7.0 bit streams are given in Section   REF _Ref497787980 \n \h  8.3.1 . The maximum buffer size required on the pulling side of the decoder depends on the rate of pulling, the maximum size of a compressed frame, and the frame duration. Assuming instantaneous decoding and with the pull_rate >= average bitrate, the max_buffer_size in pull situations can be given as:  EMBED Equation.3   Equation   SEQ Equation \* ARABIC  where max_buffer_size is in bytes, max_compressed_frame_size is the packet size in bytes, pull_rate is in bytes per second, and frame_duration is in seconds.  Compliant WMA Version 7 Decoders All compliant WMA decoders in embedded (consumer electronics) or memory constrained environment shall be able to operate in small memory mode, and ideally be able to decode all legal WMA 7.0 bit streams. In addition, they are required to generate reconstructed samples at a resolution of 16 bits per channel sample.  If they are unable to decode a particular bitstream configuration, they should refuse to accept the bitstream at initialization time. All compliant WMA decoders in non-memory constrained environments such as desktops shall be able to operate in in both push and pull modes, and be able to decode all legal WMA 7.0 bit streams. In particular, they shall be able to correctly decode all the modes of bit streams generated by current Microsoft Corporation s WMA encoder, as listed in   REF _Ref479487654 \h  Table 26 , and transfer reconstructed samples to the application. Just like the embedded implementations, they are currently required to generate reconstructed samples at a resolution of 16 bits per channel sample. As mentioned in Section   REF _Ref497799102 \n \h  8.2.2 , the max_compressed_frame_size for each mode of operation is equal to the packet size listed in   REF _Ref479487654 \h  Table 26 . The maximum of max_compressed_frame_size among all legal modes of WMA Version 7 bitstreams is 8917 Bytes, corresponding to 192Kbps stereo representation of 44100Hz material. This table also provides max_push_buffer_size and max_pull_buffer_size, assuming a pull rate of 800, 000 bits per second. Measuring Compliance of Decoders Compliant decoders shall produce reconstructed samples with values within an absolute instantaneous tolerance of (4 or within a relative instantaneous tolerance of 0.1% (i.e.  60dB) whichever is more looser (less stringent) for each particular sample with respect to Microsoft Corp s floating-point or integer   implementations of reference WMA decoder. This reference software and conformance bit streams can be obtained from Microsoft through licensing agreements. Table   SEQ Table \* ARABIC   Modes of Microsoft's WMA Version 7 Encoder Mode # Bit rate, Kilo Bits Per Second 8 * Bytes Per Second Sample Rate (Hz) Frame_-Duration (Seconds) Number of Channels Packet- Size  max_-compr-essed_-frame_size  (Bytes) Avg. Samples Per Packet Packets per Second max_-push_-buffer_-size (Bytes) max_-pull_-buffer_-size (Bytes) 0.064 0.064 0.064 0.064 12000 0.064 10168 11025 0.046439909 11025 0.046439909 16000 16000 0.032 12000 16000 0.032 10000 16000 0.032 20000 16000 0.032 16000 16000 0.032 20008 22050 0.046439909 14336 16016 22050 0.046439909 14336 32024 22050 0.046439909 22008 22050 0.046439909 14336 20008 22050 0.046439909 14336 20000 32000 0.064 20480 48000 32000 0.064 12288 12288 40000 32000 0.064 12288 10240 32000 32000 0.064 12288 32024 44100 0.046439909 16384 192016 44100 0.046439909 16384 35669 160016 44100 0.046439909 16384 29725 128016 44100 0.046439909 16384 23780 96024 44100 0.046439909 16384 17837 80024 44100 0.046439909 16384 14865 64024 44100 0.046439909 16384 11893 160008 48000 0.042666667 16384 27308 128016 48000 0.042666667 16384 21848 16000 16000 0.032 12000 16000 0.032 10000 16000 0.032 20000 16000 0.032 16000 16000 0.032 20008 22050 0.046439909 16024 22050 0.046439909 32048 22050 0.046439909 22008 22050 0.046439909 20008 22050 0.046439909 20000 32000 0.064 10240 48000 32000 0.064 12288 40000 32000 0.064 10240 32000 32000 0.064 32048 44100 0.046439909 192040 44100 0.046439909 35673 160040 44100 0.046439909 29729 128040 44100 0.046439909 23785 96040 44100 0.046439909 17840 80024 44100 0.046439909 14865 64040 44100 0.046439909 11896 160032 48000 0.042666667 27312 128016 48000 0.042666667 21848 Glossary abs_level Quantized absolute level of a non-zero spectral coefficient. alignment_bit A bit used for byte alignment. Actual bit value can be ignored. allow_packets A boolean flag indicating if packets (superframes) might occur in a bitstream. allow_subframes A boolean flag indicating if subframes might occur in a bitstream. Application programming interface. Advanced Streaming Format. band_not_coded An array of boolean flags indicating if a particular bark band is coded (or noise substituted). The Bark is the standard unit corresponding to one critical bandwidth of human hearing. bark_index An array containing indices transform coefficients that are approximately the boundaries of bark bands. Values depend on sampling rate and the transform size (subframe size). bitstream buffer A buffer in a WMA decoder for storage of compressed audio data. It smoothes fluctuations in compressed frame size. bits_per_sample The average compressed stream rate, in number of bits per audio sample. bytes_per_second The average compressed stream rate, in number of bytes per second. DCT-IV A particular type of discrete cosine transform used inside an MLT to de-correlate input samples. Dither signal A pseudorandom signal added to inverse quantized waveform in order to improve perceived quality of reconstructed audio. dither_level A constant to represent the dither level used during inverse quantization at lower bit rates. Differential Pulse Code Modulation. encoder_options A bit-packed word with values indicating if certain features of the bitstream are used or not. Escape code A special symbol in bitstream indicating the presence of a run-level pair that cannot be represented using a single symbol present in a Huffman table. first_noise_freq The frequency (Hz) above which noise substitution might occur.  first_noise_band The lowest bark band where noise substitution can occur. first_noise_index The lowest transform coefficient index where noise substitution can occur.  high_cutoff The highest transform coefficient index that can be coded plus one. Huffman coding A loss less variable length coding that is prefix-free and uniquely decodable. huffman_table A variable holding the name of Huffman table to be used during run-level decoding process. Inverse quantization The process of recovering amplitudes from indices generated by a quantizer. is_channel_coded An array indicating if a channel is coded (or skipped). Linear Predictive Coding log2_frame_size Number of bits to represent number of bits of the last frame started in previous packet, appearing in the current packet. log2_max_esc The number of bits to represent absolute level information, if the run-level symbol is coded through escape code mechanism. log2_samppfr log2(samples_per_frame) log2_sz_ratio The number of bits to represent subframe size. low_cutoff The lowest transform coefficient index that can be coded.  XE "LSF"  Line spectral frequencies. An efficient way to represent LPC parameters. An array used in computing spectral weights, if bark mode is used. mask_diff A temporary variable used in decoding mask information in bark mode. mask_prev A temporary variable used in decoding mask information in bark mode. max_buffer_size Maximum size in bytes of bitstream buffer that can be assumed to be present at a legal decoder. max_num_subframes Maximum number of subframes allowed in a frame.  XE "MLT"  Modulated Lapped Transform. Used to de-correlate input audio samples, and concentrate energy in as few coded transform as possible. Multi-Channel Transformation A technique used by WMA to exploit inter-channel redundancy present in a source material. new_header A signal from packet layer decoder indicating the beginning of a new packet. Noise shaping A technique used in WMA to spread quantization noise across spectral coefficients to take advantage of the human auditory system and the actual content being compressed. Noise substitution A technique used in WMA at low bit rates to synthesize spectral coefficients of audio at the decoder. noise_power An array to hold the power of noise used in noise substitution. num_bands_not_coded The number of bark-bands that did not get coded. These bands would be substituted by noise. num_channels The number of channels in the source material. num_coded_coeff Number of actually coded spectral coefficients. num_frames_in_packet The number of frames that start in the current packet. num_prev_frame_bits The number of bits of the last frame that started in previous packet, appearing in the current packet. packet_number A sequence number that helps in detecting lost packets. PARCOR Partial correlation coefficients (also known as reflection coefficients). A representation for LPC parameters. Payload Data present in a packet, after the packet header. Pulse Code Modulation. Fixed amplitude resolution digital representation of waveforms. qrand A pseudorandom noise generator. Noise is triangular in the range  2.5 to +2.5. Quantization Process of limiting the number of possible amplitudes, with intent to reduce the number of bits needed to represent the amplitude. Generates a finite value, finite precision symbol representation for input amplitude. quant_incr A temporary variable used in decoding quant_step_size_db. quant_step The step size of the quantizer used to code spectral coefficients, in amplitude scale. Derived from quant_step_size_db. quant_step_size_db The step size of the quantizer used to code spectral coefficients, in decibel scale. Decoded from the bitstream. quantized_lsf An array to hold quantized line spectral frequencies. Used if LPC mode spectral weighting is used. ratio_log2_curr Coded representation of size of current subframe. ratio_log2_nex Coded representation of size of next subframe. ratio_log2_prev Coded representation of size of previous subframe. rlc_symbol The (run, |level|) pair decoded by VLC decoder. The number of spectral coefficients quantized to zero level preceding a non-zero level. run-level coding A variable length coding technique to efficiently represent quantized spectral coefficients with long runs of zero values followed by non-zero value. samples_per_frame The maximum number of new time-samples generated by an inverse transform. samples_per_second The sample rate in Hz of the source material. sampling_period Inter-sample duration: reciprocal of samples per_second. Software developers  kit. sign_level The sign of the quantized spectral coefficient. stereo_mode An indication of how redundancy across multiple channels is utilized. subframe_number A running counter of subframes within a frame. subframe_size_curr The size of the current subframe (in number of transform coefficients per channel). subframe_size_prev The size of the previous subframe (in number of transform coefficients per channel) in the bitstream. subframe_size_curr The size of the next (future) subframe (in number of transform coefficients per channel) in the bitstream. subframe_size_with_update The size of the subframe when new mask information was received. subframe_startpos The sample position of the current subframe in an audio frame. uimsbf Unsigned integer, most significant bit first. update_mask A binary flag indicating if new spectral shaping information is to be decoded. use_noise_substitution A flag indicating if noise substitution is to be used. weight_factor Scale factors used in noise shaping. version_number The version of WMA stream. Currently only two versions are defined: version 1 and version 7. vlclbf Variable length code, left bit first, where   refers to the order in which the VLC codes are written (or read). weighted_bits_per_sample A number derived from bits_per_sample, taking correlation among multiple channels into account. weighting_mode Used in spectral shaping. It can either be   mode. Window Function A mathematical function used in MLT and its inverse. Windows media audio  See Chapter 4,  Digital Speech,  A. M. Kundoz, John Wiley & Sons, 1994.  Digital Coding of Waveforms Principles and Applications to Speech and Video, N. S. Jayant and Peter Noll, Prentice-Hall, Inc., 1984.  Assumes a pull-rate of 800,000 bits per second, and rounds up the buffer size to the nearest integer. The max_pull_buffer_size can be computed for other pull (transfer) rates by using   REF _Ref497804763 \h  Equation 31 Microsoft Confidential  PAGE   DATE \@ "MM/dd/yy"  11/06/00 Microsoft Confidential LastSaved:   INFO SaveDate \* MERGEFORMAT  11/6/2000 1:56 PM page   PAGE  Microsoft Confidential  DATE \@ "MM/dd/yy"  11/06/00 WMA Version 7.0 WMA Version 7.0 Microsoft Confidential   Internal Use Only LastSaved:   INFO SaveDate \* MERGEFORMAT  11/6/2000 1:56 PM Page   PAGE  Microsoft Confidential LastSaved:   INFO SaveDate \* MERGEFORMAT  11/6/2000 1:56 PM page   PAGE
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\dolby2\encldr\loader.txt ===
0x014085, 
0x05A441, 
0x014B85, 
0x05A40C, 
0x050C1C, 
0x000000, 
0x000000, 
0x000000, 
0x000000, 
0x000000, 
0x000000, 
0x000000, 
0x000000, 
0x000000, 
0x000000, 
0x60F400, 
0x000400, 
0x64F400, 
0x000800, 
0x060098, 
0x000003, 
0x4CDC00, 
0x445800, 
0x60F400, 
0x000400, 
0x70F400, 
0x000800, 
0x61F400, 
0x000000, 
0x0BF080, 
0x0001B4, 
0x050C01, 
0x200013, 
0x00000C, 
0x60F413, 
0x00011C, 
0x062490, 
0x000002, 
0x07588E, 
0x0D1080, 
0x0000C6, 
0x050FD7, 
0x64F400, 
0x000186, 
0x220C00, 
0x014080, 
0x219000, 
0x0BF080, 
0x0001F4, 
0x0BF080, 
0x00025F, 
0x00000C, 
0x64F400, 
0x000186, 
0x220C00, 
0x014080, 
0x219000, 
0x0BF080, 
0x000206, 
0x0BF080, 
0x00025F, 
0x00000C, 
0x64F400, 
0x000186, 
0x220C00, 
0x014080, 
0x219000, 
0x0BF080, 
0x000218, 
0x0BF080, 
0x00025F, 
0x00000C, 
0x64F400, 
0x000186, 
0x220C00, 
0x0140C0, 
0x001800, 
0x219000, 
0x0BF080, 
0x0001F4, 
0x0BF080, 
0x00025F, 
0x00000C, 
0x64F400, 
0x000186, 
0x220C00, 
0x0140C0, 
0x001800, 
0x219000, 
0x0BF080, 
0x000206, 
0x0BF080, 
0x00025F, 
0x00000C, 
0x64F400, 
0x000186, 
0x220C00, 
0x0140C0, 
0x002800, 
0x219000, 
0x0BF080, 
0x0001F4, 
0x0BF080, 
0x00025F, 
0x00000C, 
0x64F400, 
0x000186, 
0x220C00, 
0x0140C0, 
0x002800, 
0x219000, 
0x0BF080, 
0x000206, 
0x0BF080, 
0x00025F, 
0x00000C, 
0x0BF080, 
0x00024E, 
0x229500, 
0x228C00, 
0x0140C6, 
0x003FFF, 
0x0140C2, 
0x004000, 
0x075D8C, 
0x54F400, 
0x005BE0, 
0x075D8C, 
0x075D98, 
0x075D90, 
0x222E00, 
0x0C1E84, 
0x075D8C, 
0x00000C, 
0x0BF080, 
0x00024E, 
0x229500, 
0x228C00, 
0x0140C6, 
0x003FFF, 
0x0140C2, 
0x004000, 
0x075D8C, 
0x54F400, 
0x005BE2, 
0x075D8C, 
0x075D98, 
0x075D90, 
0x222E00, 
0x0C1E84, 
0x075D8C, 
0x00000C, 
0x0BF080, 
0x00024E, 
0x229500, 
0x228C00, 
0x0140C6, 
0x003FFF, 
0x0140C2, 
0x004000, 
0x075D8C, 
0x54F400, 
0x005A02, 
0x222F00, 
0x0C1E8B, 
0x21E500, 
0x200062, 
0x075D8C, 
0x075D98, 
0x238E00, 
0x0C1E9C, 
0x220400, 
0x200040, 
0x075D8C, 
0x00000C, 
0x0BF080, 
0x00024E, 
0x229500, 
0x228C00, 
0x0140C6, 
0x003FFF, 
0x0140C2, 
0x004000, 
0x075D8C, 
0x54F400, 
0x000603, 
0x222F00, 
0x0C1E8B, 
0x21E500, 
0x200062, 
0x230F00, 
0x0C1E9D, 
0x21E500, 
0x200062, 
0x075D8C, 
0x230F00, 
0x0C1E89, 
0x234500, 
0x200068, 
0x075D8D, 
0x238E00, 
0x0C1E9C, 
0x220400, 
0x200040, 
0x075D8C, 
0x00000C, 
0x0A96A4, 
0x00024E, 
0x08F485, 
0x000080, 
0x00000C, 
0x08F496, 
0x000001, 
0x0A9684, 
0x000255, 
0x00000C, 
0x0A85AA, 
0x00027C, 
0x0A8587, 
0x000258, 
0x08F485, 
0x000080, 
0x00000C, 
0x228E00, 
0x0140C0, 
0x002800, 
0x08CE14, 
0x0BF080, 
0x000253, 
0x20001B, 
0x23AF00, 
0x01408D, 
0x0D104A, 
0x000004, 
0x0BF080, 
0x000258, 
0x00000C, 
0x08F485, 
0x000FFF, 
0x08F484, 
0x000001, 
0x08F48A, 
0x000000, 
0x44F400, 
0x004000, 
0x447000, 
0xFFFFD5, 
0x447000, 
0xFFFFD4, 
0x08F497, 
0x000000, 
0x00000C, 
0x050C00,
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\dolby2\encse\suprexec.txt ===
0x050C08, 
0x000000, 
0x000001, 
0x000001, 
0x000000, 
0x000000, 
0xCCCCCC, 
0x000000, 
0x240000, 
0x077084, 
0x000004, 
0x077084, 
0x000005, 
0x07F432, 
0xFFFFFF, 
0x07F430, 
0x000001, 
0x07F431, 
0x000001, 
0x0500BB, 
0x05F42A, 
0x000BE0, 
0x0520B8, 
0x0AFA74, 
0x200013, 
0x077088, 
0x000001, 
0x000008, 
0x077088, 
0x000002, 
0x077088, 
0x000003, 
0x56F400, 
0x000000, 
0x0BF080, 
0x000180, 
0x08F485, 
0x000002, 
0x07F08E, 
0x000007, 
0x014180, 
0x07708E, 
0x000007, 
0x08F484, 
0x000001, 
0x200013, 
0x014180, 
0x0A8581, 
0x00002E, 
0x44F000, 
0xFFFFB3, 
0x077084, 
0x000005, 
0x08F485, 
0x000002, 
0x56F400, 
0x00000B, 
0x0BF080, 
0x000180, 
0x56F000, 
0xFFFFB3, 
0x07F084, 
0x000005, 
0x200044, 
0x07708C, 
0x000004, 
0x44F400, 
0x0ACDA0, 
0x0C1FF8, 
0x0597C1, 
0x44F400, 
0xBBBBBB, 
0x077084, 
0x000006, 
0x050C00, 
0x050C00,
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\ampmodstate.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=0
FX_NUMINPUTS=2
FX_NUMOUTPUTS=1
FX_DSPCYCLES=750
FX_YMEMSIZE=0
FX_NUMPARAMS=16
FX_NUMPUBLICPARAMS=0

; DSPBuilder settings
FX_NAME=Mono AmpMod
FX_DSPCODE=ampmod.scr
FX_INPUT0_NAME=In
FX_INPUT1_NAME=Mod
FX_OUTPUT0_NAME=Out
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\ampmodstate_stereo.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=0
FX_NUMINPUTS=3
FX_NUMOUTPUTS=2
FX_DSPCYCLES=1500
FX_YMEMSIZE=0
FX_NUMPARAMS=16
FX_NUMPUBLICPARAMS=0

; DSPBuilder settings
FX_NAME=Stereo AmpMod
FX_DSPCODE=ampmod_stereo.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_INPUT2_NAME=Mod
FX_OUTPUT0_NAME=Left
FX_OUTPUT1_NAME=Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\chorusstate.ini ===
[FXSTATE]
FX_NUMINPUTS=2
FX_NUMOUTPUTS=1
FX_SCRATCHLENGTH=0
FX_YMEMSIZE=400
FX_DSPCYCLES=2500
FX_NUMPARAMS=64
FX_NUMPUBLICPARAMS=2

; parameters and their descriptions

FX_PARAM0=3300000
FX_PARAM0_NAME=Gain
FX_PARAM0_DESCRIPTION=Gain applied to delay line input when mixing with dry signal
FX_PARAM0_UNITS=None
FX_PARAM0_TYPE=FLOAT
FX_PARAM0_MIN=0
FX_PARAM0_MAX=8388607
FX_PARAM0_ATOMIC=1

FX_PARAM1=30
FX_PARAM1_NAME=Modulation Scale
FX_PARAM1_DESCRIPTION=Determines how much of the delay line to tap. Mod_scale = YMEMSIZE/2^23 = 100% of delay line
FX_PARAM1_UNITS=None
FX_PARAM1_TYPE=FLOAT
FX_PARAM1_MIN=0
FX_PARAM1_MAX=8388607
FX_PARAM1_ATOMIC=1


; DSPBuilder settings
FX_NAME=Mono Chorus
FX_DSPCODE=chorus.scr
FX_INPUT0_NAME=In
FX_INPUT1_NAME=Mod
FX_OUTPUT0_NAME=Out
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\compressor.ini ===
[MAIN]

IMAGE_FRIENDLY_NAME=DEFAULT_GRAPH
FX_NUMTEMPBINS=5

GRAPH0=CHAIN

[CHAIN]
FX0=COMPRESSOR


[CHAIN_FX0_COMPRESSOR]

FX_MIXOUTPUT=1
FX_DSPCODE=compressor.scr
FX_DSPSTATE=compressorstate.ini
FX_NUMINPUTS=1
FX_NUMOUTPUTS=2

FX_INPUT0=VPMIXBIN_FXSEND0

FX_OUTPUT0=GPMIXBIN_FRONTLEFT
; temp bins
FX_OUTPUT1=GPTEMPBIN0
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\distortionstate.ini ===
[FXSTATE]
FX_NUMINPUTS=1
FX_NUMOUTPUTS=1
FX_SCRATCHLENGTH=0
FX_YMEMSIZE=8
FX_DSPCYCLES=300
FX_NUMPARAMS=32
FX_NUMPUBLICPARAMS=11

; gain
FX_PARAM0=3000000
FX_PARAM0_NAME=Gain
FX_PARAM0_DESCRIPTION=Input Gain
FX_PARAM0_UNITS=None
FX_PARAM0_TYPE=FLOAT
FX_PARAM0_MIN=0
FX_PARAM0_MAX=8388607
FX_PARAM0_ATOMIC=1

; prefilter coefficients
FX_PARAM1=69559
FX_PARAM1_NAME=Pre-filter B0
FX_PARAM1_DESCRIPTION=B0 Coefficient of Pre-filter IIR2
FX_PARAM1_UNITS=None
FX_PARAM1_TYPE=FLOAT
FX_PARAM1_MIN=8388608
FX_PARAM1_MAX=8388607
FX_PARAM1_ATOMIC=0

FX_PARAM2=139118
FX_PARAM2_NAME=Pre-filter B1
FX_PARAM2_DESCRIPTION=B1 Coefficient of Pre-filter IIR2
FX_PARAM2_UNITS=None
FX_PARAM2_TYPE=FLOAT
FX_PARAM2_MIN=8388608
FX_PARAM2_MAX=8388607
FX_PARAM2_ATOMIC=0

FX_PARAM3=69559
FX_PARAM3_NAME=Pre-filter B2
FX_PARAM3_DESCRIPTION=B2 Coefficient of Pre-filter IIR2
FX_PARAM3_UNITS=None
FX_PARAM3_TYPE=FLOAT
FX_PARAM3_MIN=8388608
FX_PARAM3_MAX=8388607
FX_PARAM3_ATOMIC=0

FX_PARAM4=6621656
FX_PARAM4_NAME=Pre-filter A1
FX_PARAM4_DESCRIPTION=A1 Coefficient of Pre-filter IIR2
FX_PARAM4_UNITS=None
FX_PARAM4_TYPE=FLOAT
FX_PARAM4_MIN=8388608
FX_PARAM4_MAX=8388607
FX_PARAM4_ATOMIC=0

FX_PARAM5=14071628
FX_PARAM5_NAME=Pre-filter A2
FX_PARAM5_DESCRIPTION=A2 Coefficient of Pre-filter IIR2
FX_PARAM5_UNITS=None
FX_PARAM5_TYPE=FLOAT
FX_PARAM5_MIN=8388608
FX_PARAM5_MAX=8388607
FX_PARAM5_ATOMIC=0

; post filter coefficients
FX_PARAM6=4268104
FX_PARAM6_NAME=Post-filter B0
FX_PARAM6_DESCRIPTION=B0 Coefficient of Post-filter IIR2
FX_PARAM6_UNITS=None
FX_PARAM6_TYPE=FLOAT
FX_PARAM6_MIN=8388608
FX_PARAM6_MAX=8388607
FX_PARAM6_ATOMIC=0

FX_PARAM7=8522616
FX_PARAM7_NAME=Post-filter B1
FX_PARAM7_DESCRIPTION=B1 Coefficient of Post-filter IIR2
FX_PARAM7_UNITS=None
FX_PARAM7_TYPE=FLOAT
FX_PARAM7_MIN=8388608
FX_PARAM7_MAX=8388607
FX_PARAM7_ATOMIC=0

FX_PARAM8=4070992
FX_PARAM8_NAME=Post-filter B2
FX_PARAM8_DESCRIPTION=B2 Coefficient of Post-filter IIR2
FX_PARAM8_UNITS=None
FX_PARAM8_TYPE=FLOAT
FX_PARAM8_MIN=8388608
FX_PARAM8_MAX=8388607
FX_PARAM8_ATOMIC=0

FX_PARAM9=8254600
FX_PARAM9_NAME=Post-filter A1
FX_PARAM9_DESCRIPTION=A1 Coefficient of Post-filter IIR2
FX_PARAM9_UNITS=None
FX_PARAM9_TYPE=FLOAT
FX_PARAM9_MIN=8388608
FX_PARAM9_MAX=8388607
FX_PARAM9_ATOMIC=0

FX_PARAM10=12632424
FX_PARAM10_NAME=Post-filter A2
FX_PARAM10_DESCRIPTION=A2 Coefficient of Post-filter IIR2
FX_PARAM10_UNITS=None
FX_PARAM10_TYPE=FLOAT
FX_PARAM10_MIN=8388608
FX_PARAM10_MAX=8388607
FX_PARAM10_ATOMIC=0



; DSPBuilder settings
FX_NAME=Distortion
FX_DSPCODE=distortion.scr
FX_INPUT0_NAME=In
FX_OUTPUT0_NAME=Out
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\echostate.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=16384
FX_NUMINPUTS=1
FX_NUMOUTPUTS=1
FX_DSPCYCLES=2000
FX_YMEMSIZE=256
; number of words the DSP uses for XRAM state
FX_NUMPARAMS=64
FX_NUMPUBLICPARAMS=1

; parameters and their descriptions

FX_PARAM0=6700000
FX_PARAM0_NAME=Gain
FX_PARAM0_DESCRIPTION=Gain applied to delay line input when mixing with dry signal
FX_PARAM0_UNITS=None
FX_PARAM0_TYPE=FLOAT
FX_PARAM0_MIN=0
FX_PARAM0_MAX=8388607
FX_PARAM0_ATOMIC=1

; DSPBuilder settings
FX_NAME=Mono Echo
FX_DSPCODE=echo.scr
FX_INPUT0_NAME=In
FX_OUTPUT0_NAME=Out
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\chorusstate_stereo.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=0
FX_NUMINPUTS=3
FX_NUMOUTPUTS=2
FX_YMEMSIZE=800
FX_DSPCYCLES=5000
FX_NUMPARAMS=64
FX_NUMPUBLICPARAMS=2

; parameters and their descriptions

FX_PARAM0=3300000
FX_PARAM0_NAME=Gain
FX_PARAM0_DESCRIPTION=Gain applied to delay line input when mixing with dry signal
FX_PARAM0_UNITS=None
FX_PARAM0_TYPE=FLOAT
FX_PARAM0_MIN=0
FX_PARAM0_MAX=8388607
FX_PARAM0_ATOMIC=1

FX_PARAM1=30
FX_PARAM1_NAME=Modulation Scale
FX_PARAM1_DESCRIPTION=Determines how much of the delay line to tap. Mod_scale = YMEMSIZE/2^23 = 100% of delay line
FX_PARAM1_UNITS=None
FX_PARAM1_TYPE=FLOAT
FX_PARAM1_MIN=0
FX_PARAM1_MAX=8388607
FX_PARAM1_ATOMIC=1

; DSPBuilder settings
FX_NAME=Stereo Chorus
FX_DSPCODE=chorus_stereo.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_INPUT2_NAME=Mod
FX_OUTPUT0_NAME=Left
FX_OUTPUT1_NAME=Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\compressorstate.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=0
FX_NUMINPUTS=1
; this is the max number of outputs
FX_NUMOUTPUTS=1
FX_YMEMSIZE=256
FX_DSPCYCLES=1000
FX_NUMPARAMS=32

; freq
FX_PARAM0=8

; DSPBuilder settings
FX_NAME=Compressor
FX_DSPCODE=compressor.scr
FX_INPUT0_NAME=In
FX_OUTPUT0_NAME=Out
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\echostate_stereo.ini ===
[FXSTATE]
FX_NUMINPUTS=2
FX_NUMOUTPUTS=2
FX_SCRATCHLENGTH=32768
FX_DSPCYCLES=4250
FX_YMEMSIZE=512
FX_NUMPARAMS=64
FX_NUMPUBLICPARAMS=1

; parameters and their descriptions

FX_PARAM0=6700000
FX_PARAM0_NAME=Gain
FX_PARAM0_DESCRIPTION=Gain applied to delay line input when mixing with dry signal
FX_PARAM0_UNITS=None
FX_PARAM0_TYPE=FLOAT
FX_PARAM0_MIN=0
FX_PARAM0_MAX=8388607
FX_PARAM0_ATOMIC=1


; DSPBuilder settings
FX_NAME=Stereo Echo
FX_DSPCODE=echo_stereo.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Left
FX_OUTPUT1_NAME=Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\defaultScratchImg.ini ===
[MAIN]
IMAGE_FRIENDLY_NAME=DSSTDFX
FX_NUMTEMPBINS=31
GRAPH0=I3DL2_CHAIN
GRAPH1=CHORUS_CHAIN
GRAPH2=FLANGE_CHAIN
GRAPH3=AMPMOD_CHAIN
GRAPH4=ECHO_CHAIN
GRAPH5=IIR2_CHAIN
GRAPH6=REVERB_CHAIN
GRAPH7=RMS_CHAIN

[I3DL2_CHAIN]
FX0=I3DL2_REVERB
FX1=XTALK

[I3DL2_CHAIN_FX0_I3DL2_REVERB]
FX_MIXOUTPUT=1
FX_DSPCODE=reverb24k.scr
FX_DSPSTATE=reverb_default_24k_state.ini
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_INPUT0=VPMIXBIN_I3DL2SEND
FX_INPUT1=VPMIXBIN_I3DL2SEND
FX_OUTPUT0=GPMIXBIN_XTLK_FL
FX_OUTPUT1=GPMIXBIN_XTLK_FR
FX_OUTPUT2=GPMIXBIN_XTLK_BL
FX_OUTPUT3=GPMIXBIN_XTLK_BR

; I3DL2 reverb uses 31 temp bins for scratch memory.  This memory can be 
; overwritten and reused by other effects in chains following this one.

FX_OUTPUT4=GPTEMPBIN0
FX_OUTPUT5=GPTEMPBIN1
FX_OUTPUT6=GPTEMPBIN2
FX_OUTPUT7=GPTEMPBIN3
FX_OUTPUT8=GPTEMPBIN4
FX_OUTPUT9=GPTEMPBIN5
FX_OUTPUT10=GPTEMPBIN6
FX_OUTPUT11=GPTEMPBIN7
FX_OUTPUT12=GPTEMPBIN8
FX_OUTPUT13=GPTEMPBIN9
FX_OUTPUT14=GPTEMPBIN10
FX_OUTPUT15=GPTEMPBIN11
FX_OUTPUT16=GPTEMPBIN12
FX_OUTPUT17=GPTEMPBIN13
FX_OUTPUT18=GPTEMPBIN14
FX_OUTPUT19=GPTEMPBIN15
FX_OUTPUT20=GPTEMPBIN16
FX_OUTPUT21=GPTEMPBIN17
FX_OUTPUT22=GPTEMPBIN18
FX_OUTPUT23=GPTEMPBIN19
FX_OUTPUT24=GPTEMPBIN20
FX_OUTPUT25=GPTEMPBIN21
FX_OUTPUT26=GPTEMPBIN22
FX_OUTPUT27=GPTEMPBIN23
FX_OUTPUT28=GPTEMPBIN24
FX_OUTPUT29=GPTEMPBIN25
FX_OUTPUT30=GPTEMPBIN26
FX_OUTPUT31=GPTEMPBIN27
FX_OUTPUT32=GPTEMPBIN28
FX_OUTPUT33=GPTEMPBIN29
FX_OUTPUT34=GPTEMPBIN30

[I3DL2_CHAIN_FX1_XTALK]
FX_MIXOUTPUT=1
FX_DSPCODE=xtalk.scr
FX_DSPSTATE=xtalkstate.ini
FX_NUMINPUTS=4
FX_NUMOUTPUTS=4
FX_INPUT0=VPMIXBIN_XTLK_FL
FX_INPUT1=VPMIXBIN_XTLK_FR
FX_INPUT2=VPMIXBIN_XTLK_BL
FX_INPUT3=VPMIXBIN_XTLK_BR
FX_OUTPUT0=GPMIXBIN_FRONTLEFT
FX_OUTPUT1=GPMIXBIN_FRONTRIGHT
FX_OUTPUT2=GPMIXBIN_BACKLEFT
FX_OUTPUT3=GPMIXBIN_BACKRIGHT

[FLANGE_CHAIN]
FX0=FLANGE

[FLANGE_CHAIN_FX0_FLANGE]
FX_MIXOUTPUT=1
FX_DSPCODE=flange_stereo.scr
FX_DSPSTATE=flangestate_stereo.ini
FX_NUMINPUTS=3
FX_NUMOUTPUTS=2
FX_INPUT0=VPMIXBIN_FXSEND3
FX_INPUT1=VPMIXBIN_FXSEND4
FX_INPUT2=VPMIXBIN_FXSEND11
FX_OUTPUT0=GPMIXBIN_FRONTLEFT
FX_OUTPUT1=GPMIXBIN_FRONTRIGHT

[ECHO_CHAIN]
FX0=ECHO

[ECHO_CHAIN_FX0_ECHO]
FX_MIXOUTPUT=1
FX_DSPCODE=echo_stereo.scr
FX_DSPSTATE=echostate_stereo.ini
FX_NUMINPUTS=2
FX_NUMOUTPUTS=2
FX_INPUT0=VPMIXBIN_FXSEND5
FX_INPUT1=VPMIXBIN_FXSEND6
FX_OUTPUT0=GPMIXBIN_FRONTLEFT
FX_OUTPUT1=GPMIXBIN_FRONTRIGHT

[IIR2_CHAIN]
FX0=IIR2_LEFT
FX1=IIR2_RIGHT

[IIR2_CHAIN_FX0_IIR2_LEFT]
FX_MIXOUTPUT=1
FX_DSPCODE=iir2.scr
FX_DSPSTATE=iir2state.ini
FX_NUMINPUTS=1
FX_NUMOUTPUTS=1
FX_INPUT0=VPMIXBIN_FXSEND7
FX_OUTPUT0=GPMIXBIN_FRONTLEFT

[IIR2_CHAIN_FX1_IIR2_RIGHT]
FX_MIXOUTPUT=1
FX_DSPCODE=iir2.scr
FX_DSPSTATE=iir2state.ini
FX_NUMINPUTS=1
FX_NUMOUTPUTS=1
FX_INPUT0=VPMIXBIN_FXSEND8
FX_OUTPUT0=GPMIXBIN_FRONTRIGHT


[AMPMOD_CHAIN]
FX0=AMPMOD

[AMPMOD_CHAIN_FX0_AMPMOD]
FX_MIXOUTPUT=1
FX_DSPCODE=ampmod_stereo.scr
FX_DSPSTATE=ampmodstate_stereo.ini
FX_NUMINPUTS=3
FX_NUMOUTPUTS=2
FX_INPUT0=VPMIXBIN_FXSEND9
FX_INPUT1=VPMIXBIN_FXSEND10
FX_INPUT2=VPMIXBIN_FXSEND12
FX_OUTPUT0=GPMIXBIN_FRONTLEFT
FX_OUTPUT1=GPMIXBIN_FRONTRIGHT

[CHORUS_CHAIN]
FX0=CHORUS

[CHORUS_CHAIN_FX0_CHORUS]
FX_MIXOUTPUT=1
FX_DSPCODE=chorus_stereo.scr
FX_DSPSTATE=chorusstate_stereo.ini
FX_NUMINPUTS=3
FX_NUMOUTPUTS=2
FX_INPUT0=VPMIXBIN_FXSEND1
FX_INPUT1=VPMIXBIN_FXSEND1
FX_INPUT2=VPMIXBIN_FXSEND2
FX_OUTPUT0=GPMIXBIN_FRONTLEFT
FX_OUTPUT1=GPMIXBIN_FRONTRIGHT

[REVERB_CHAIN]
FX0=MINI_REVERB

[REVERB_CHAIN_FX0_MINI_REVERB]
FX_MIXOUTPUT=1
FX_DSPCODE=reverb24k.scr
FX_DSPSTATE=reverb_alley_24k_state.ini
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_INPUT0=VPMIXBIN_FXSEND0
FX_INPUT1=VPMIXBIN_FXSEND0
FX_OUTPUT0=GPMIXBIN_FRONTLEFT
FX_OUTPUT1=GPMIXBIN_FRONTRIGHT
FX_OUTPUT2=GPMIXBIN_BACKLEFT
FX_OUTPUT3=GPMIXBIN_BACKRIGHT

; I3DL2 reverb uses 31 temp bins for scratch memory.  This memory can be 
; overwritten and reused by other effects in chains following this one.

FX_OUTPUT4=GPTEMPBIN0
FX_OUTPUT5=GPTEMPBIN1
FX_OUTPUT6=GPTEMPBIN2
FX_OUTPUT7=GPTEMPBIN3
FX_OUTPUT8=GPTEMPBIN4
FX_OUTPUT9=GPTEMPBIN5
FX_OUTPUT10=GPTEMPBIN6
FX_OUTPUT11=GPTEMPBIN7
FX_OUTPUT12=GPTEMPBIN8
FX_OUTPUT13=GPTEMPBIN9
FX_OUTPUT14=GPTEMPBIN10
FX_OUTPUT15=GPTEMPBIN11
FX_OUTPUT16=GPTEMPBIN12
FX_OUTPUT17=GPTEMPBIN13
FX_OUTPUT18=GPTEMPBIN14
FX_OUTPUT19=GPTEMPBIN15
FX_OUTPUT20=GPTEMPBIN16
FX_OUTPUT21=GPTEMPBIN17
FX_OUTPUT22=GPTEMPBIN18
FX_OUTPUT23=GPTEMPBIN19
FX_OUTPUT24=GPTEMPBIN20
FX_OUTPUT25=GPTEMPBIN21
FX_OUTPUT26=GPTEMPBIN22
FX_OUTPUT27=GPTEMPBIN23
FX_OUTPUT28=GPTEMPBIN24
FX_OUTPUT29=GPTEMPBIN25
FX_OUTPUT30=GPTEMPBIN26
FX_OUTPUT31=GPTEMPBIN27
FX_OUTPUT32=GPTEMPBIN28
FX_OUTPUT33=GPTEMPBIN29
FX_OUTPUT34=GPTEMPBIN30

[RMS_CHAIN]
FX0=RMS

[RMS_CHAIN_FX0_RMS]
FX_MIXOUTPUT=1
FX_DSPCODE=rms.scr
FX_DSPSTATE=rmsstate.ini
FX_NUMINPUTS=6
FX_NUMOUTPUTS=1
FX_INPUT0=VPMIXBIN_FRONTLEFT
FX_INPUT1=VPMIXBIN_FRONTRIGHT
FX_INPUT2=VPMIXBIN_CENTER
FX_INPUT3=VPMIXBIN_LFE
FX_INPUT4=VPMIXBIN_BACKLEFT
FX_INPUT5=VPMIXBIN_BACKRIGHT

FX_OUTPUT0=GPMIXBIN_FRONTLEFT
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\delaystate.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=16384
FX_NUMINPUTS=1
FX_NUMOUTPUTS=2
FX_DSPCYCLES=2000
FX_YMEMSIZE=256
FX_NUMPARAMS=64
FX_NUMPUBLICPARAMS=0

; DSPBuilder settings
FX_NAME=Mono Delay Line
FX_DSPCODE=delay.scr
FX_INPUT0_NAME=In
FX_OUTPUT0_NAME=Out
FX_OUTPUT0_NAME=Temporary Bin
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\iir2state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=0
FX_NUMINPUTS=1
FX_NUMOUTPUTS=1
FX_DSPCYCLES=1700
FX_YMEMSIZE=32
FX_NUMPARAMS=32
FX_NUMPUBLICPARAMS=5

; parameters and their descriptions

FX_PARAM0=21100
FX_PARAM0_NAME=IIR2 B0
FX_PARAM0_DESCRIPTION=B0 Coefficient of IIR2 filter
FX_PARAM0_UNITS=None
FX_PARAM0_TYPE=FLOAT
FX_PARAM0_MIN=8388608
FX_PARAM0_MAX=8388607
FX_PARAM0_ATOMIC=0

FX_PARAM1=42199
FX_PARAM1_NAME=IIR2 B1
FX_PARAM1_DESCRIPTION=B1 Coefficient of IIR2 filter
FX_PARAM1_UNITS=None
FX_PARAM1_TYPE=FLOAT
FX_PARAM1_MIN=8388608
FX_PARAM1_MAX=8388607
FX_PARAM1_ATOMIC=0

FX_PARAM2=21100
FX_PARAM2_NAME=IIR2 B2
FX_PARAM2_DESCRIPTION=B2 Coefficient of IIR2 filter
FX_PARAM2_UNITS=None
FX_PARAM2_TYPE=FLOAT
FX_PARAM2_MIN=8388608
FX_PARAM2_MAX=8388607
FX_PARAM2_ATOMIC=0

FX_PARAM3=8245048
FX_PARAM3_NAME=IIR2 A1
FX_PARAM3_DESCRIPTION=A1 Coefficient of IIR2 filter
FX_PARAM3_UNITS=None
FX_PARAM3_TYPE=FLOAT
FX_PARAM3_MIN=8388608
FX_PARAM3_MAX=8388607
FX_PARAM3_ATOMIC=0

FX_PARAM4=12642073
FX_PARAM4_NAME=IIR2 A2
FX_PARAM4_DESCRIPTION=A2 Coefficient of IIR2 filter
FX_PARAM4_UNITS=None
FX_PARAM4_TYPE=FLOAT
FX_PARAM4_MIN=8388608
FX_PARAM4_MAX=8388607
FX_PARAM4_ATOMIC=0

; DSPBuilder settings
FX_NAME=iir2
FX_DSPCODE=iir2.scr
FX_INPUT0_NAME=In
FX_OUTPUT0_NAME=Out
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\minirvb.ini ===
[MAIN]

IMAGE_FRIENDLY_NAME=DEFAULT_GRAPH
FX_NUMTEMPBINS=5

GRAPH0=MUSIC_REVERB_CHAIN

[MUSIC_REVERB_CHAIN]
FX0=REVERB


[MUSIC_REVERB_CHAIN_FX0_REVERB]

FX_MIXOUTPUT=1
FX_DSPCODE=minirvb.scr
FX_DSPSTATE=minirvbstate.ini
FX_NUMINPUTS=1
FX_NUMOUTPUTS=5

FX_INPUT0=VPMIXBIN_FXSEND0

FX_OUTPUT0=GPMIXBIN_FRONTLEFT
; temp bins
FX_OUTPUT1=GPTEMPBIN0
FX_OUTPUT2=GPTEMPBIN1
FX_OUTPUT3=GPTEMPBIN2
FX_OUTPUT4=GPTEMPBIN3
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\minirvbstate.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=300000
FX_NUMINPUTS=1
FX_NUMOUTPUTS=12
FX_DSPCYCLES=2000
FX_YMEMSIZE=256
FX_NUMPARAMS=256
FX_NUMPUBLICPARAMS=0

; reflection 0->7 lengths (bytes) . Their sum must not exceed
; the scratchLength specified above
FX_PARAM0=203457
FX_PARAM1=205321
FX_PARAM2=203651
FX_PARAM3=200781
FX_PARAM4=77781
FX_PARAM5=71893
FX_PARAM6=94567
FX_PARAM7=83451

; reflection 0->7 taps (bytes) . They are absolute positions
; within the entire delay line
FX_PARAM8=0
FX_PARAM9=5067
FX_PARAM10=9875
FX_PARAM11=14341
FX_PARAM12=24561
FX_PARAM13=31211
FX_PARAM14=40362
FX_PARAM15=51311

; reflection 0->7 gains. Some number between 0 and 8388607 (0.0->0.99999)
FX_PARAM16=800000
FX_PARAM17=801000
FX_PARAM18=690000
FX_PARAM19=500000
FX_PARAM20=0
FX_PARAM21=0
FX_PARAM22=0
FX_PARAM23=0

; IIR coefficients
; 0
FX_PARAM24=4194303
FX_PARAM25=12582912
FX_PARAM26=0

; 1
FX_PARAM27=4194303
FX_PARAM28=12582912
FX_PARAM29=0



; DSPBuilder settings
FX_NAME=Simple Reverb
FX_DSPCODE=minirvb.scr
FX_INPUT0_NAME=In
FX_OUTPUT0_NAME=Out
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\mixer_io_2in_1out_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=0
FX_NUMINPUTS=2
FX_NUMOUTPUTS=1
FX_YMEMSIZE=0
FX_DSPCYCLES=1000
FX_NUMPARAMS=20
FX_NUMPUBLICPARAMS=2

; parameters and their descriptions

FX_PARAM0=41940000
FX_PARAM0_NAME=Left Gain
FX_PARAM0_DESCRIPTION=Left Input Gain
FX_PARAM0_UNITS=None
FX_PARAM0_TYPE=FLOAT
FX_PARAM0_MIN=0
FX_PARAM0_MAX=8388607
FX_PARAM0_ATOMIC=1

FX_PARAM1=41940000
FX_PARAM1_NAME=Right Gain
FX_PARAM1_DESCRIPTION=Right Input Gain
FX_PARAM1_UNITS=None
FX_PARAM1_TYPE=FLOAT
FX_PARAM1_MIN=0
FX_PARAM1_MAX=8388607
FX_PARAM1_ATOMIC=1


; DSPBuilder settings
FX_NAME=2x1 Mixer
FX_DSPCODE=mixer_io_2in_1out.scr
FX_INPUT0_NAME=In
FX_INPUT1_NAME=In
FX_OUTPUT0_NAME=Out
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\dsstdfx.ini ===
[MAIN]
IMAGE_FRIENDLY_NAME=DSSTDFX
FX_NUMTEMPBINS=31
GRAPH0=I3DL2_CHAIN
GRAPH1=CHORUS_CHAIN
GRAPH2=FLANGE_CHAIN
GRAPH3=AMPMOD_CHAIN
GRAPH4=ECHO_CHAIN
GRAPH5=IIR2_CHAIN
GRAPH6=REVERB_CHAIN
GRAPH7=RMS_CHAIN

[I3DL2_CHAIN]
FX0=I3DL2_REVERB
FX1=XTALK

[I3DL2_CHAIN_FX0_I3DL2_REVERB]
FX_MIXOUTPUT=1
FX_DSPCODE=reverb24k.scr
FX_DSPSTATE=reverb_default_24k_state.ini
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_INPUT0=VPMIXBIN_I3DL2SEND
FX_INPUT1=VPMIXBIN_I3DL2SEND
FX_OUTPUT0=GPMIXBIN_XTLK_FL
FX_OUTPUT1=GPMIXBIN_XTLK_FR
FX_OUTPUT2=GPMIXBIN_XTLK_BL
FX_OUTPUT3=GPMIXBIN_XTLK_BR

; I3DL2 reverb uses 31 temp bins for scratch memory.  This memory can be 
; overwritten and reused by other effects in chains following this one.

FX_OUTPUT4=GPTEMPBIN0
FX_OUTPUT5=GPTEMPBIN1
FX_OUTPUT6=GPTEMPBIN2
FX_OUTPUT7=GPTEMPBIN3
FX_OUTPUT8=GPTEMPBIN4
FX_OUTPUT9=GPTEMPBIN5
FX_OUTPUT10=GPTEMPBIN6
FX_OUTPUT11=GPTEMPBIN7
FX_OUTPUT12=GPTEMPBIN8
FX_OUTPUT13=GPTEMPBIN9
FX_OUTPUT14=GPTEMPBIN10
FX_OUTPUT15=GPTEMPBIN11
FX_OUTPUT16=GPTEMPBIN12
FX_OUTPUT17=GPTEMPBIN13
FX_OUTPUT18=GPTEMPBIN14
FX_OUTPUT19=GPTEMPBIN15
FX_OUTPUT20=GPTEMPBIN16
FX_OUTPUT21=GPTEMPBIN17
FX_OUTPUT22=GPTEMPBIN18
FX_OUTPUT23=GPTEMPBIN19
FX_OUTPUT24=GPTEMPBIN20
FX_OUTPUT25=GPTEMPBIN21
FX_OUTPUT26=GPTEMPBIN22
FX_OUTPUT27=GPTEMPBIN23
FX_OUTPUT28=GPTEMPBIN24
FX_OUTPUT29=GPTEMPBIN25
FX_OUTPUT30=GPTEMPBIN26
FX_OUTPUT31=GPTEMPBIN27
FX_OUTPUT32=GPTEMPBIN28
FX_OUTPUT33=GPTEMPBIN29
FX_OUTPUT34=GPTEMPBIN30

[I3DL2_CHAIN_FX1_XTALK]
FX_MIXOUTPUT=1
FX_DSPCODE=xtalk.scr
FX_DSPSTATE=xtalkstate.ini
FX_NUMINPUTS=4
FX_NUMOUTPUTS=4
FX_INPUT0=VPMIXBIN_XTLK_FL
FX_INPUT1=VPMIXBIN_XTLK_FR
FX_INPUT2=VPMIXBIN_XTLK_BL
FX_INPUT3=VPMIXBIN_XTLK_BR
FX_OUTPUT0=GPMIXBIN_FRONTLEFT
FX_OUTPUT1=GPMIXBIN_FRONTRIGHT
FX_OUTPUT2=GPMIXBIN_BACKLEFT
FX_OUTPUT3=GPMIXBIN_BACKRIGHT

[FLANGE_CHAIN]
FX0=FLANGE

[FLANGE_CHAIN_FX0_FLANGE]
FX_MIXOUTPUT=1
FX_DSPCODE=flange_stereo.scr
FX_DSPSTATE=flangestate_stereo.ini
FX_NUMINPUTS=3
FX_NUMOUTPUTS=2
FX_INPUT0=VPMIXBIN_FXSEND3
FX_INPUT1=VPMIXBIN_FXSEND4
FX_INPUT2=VPMIXBIN_FXSEND11
FX_OUTPUT0=GPMIXBIN_FRONTLEFT
FX_OUTPUT1=GPMIXBIN_FRONTRIGHT

[ECHO_CHAIN]
FX0=ECHO

[ECHO_CHAIN_FX0_ECHO]
FX_MIXOUTPUT=1
FX_DSPCODE=echo_stereo.scr
FX_DSPSTATE=echostate_stereo.ini
FX_NUMINPUTS=2
FX_NUMOUTPUTS=2
FX_INPUT0=VPMIXBIN_FXSEND5
FX_INPUT1=VPMIXBIN_FXSEND6
FX_OUTPUT0=GPMIXBIN_FRONTLEFT
FX_OUTPUT1=GPMIXBIN_FRONTRIGHT

[IIR2_CHAIN]
FX0=IIR2_LEFT
FX1=IIR2_RIGHT

[IIR2_CHAIN_FX0_IIR2_LEFT]
FX_MIXOUTPUT=1
FX_DSPCODE=iir2.scr
FX_DSPSTATE=iir2state.ini
FX_NUMINPUTS=1
FX_NUMOUTPUTS=1
FX_INPUT0=VPMIXBIN_FXSEND7
FX_OUTPUT0=GPMIXBIN_FRONTLEFT

[IIR2_CHAIN_FX1_IIR2_RIGHT]
FX_MIXOUTPUT=1
FX_DSPCODE=iir2.scr
FX_DSPSTATE=iir2state.ini
FX_NUMINPUTS=1
FX_NUMOUTPUTS=1
FX_INPUT0=VPMIXBIN_FXSEND8
FX_OUTPUT0=GPMIXBIN_FRONTRIGHT


[AMPMOD_CHAIN]
FX0=AMPMOD

[AMPMOD_CHAIN_FX0_AMPMOD]
FX_MIXOUTPUT=1
FX_DSPCODE=ampmod_stereo.scr
FX_DSPSTATE=ampmodstate_stereo.ini
FX_NUMINPUTS=3
FX_NUMOUTPUTS=2
FX_INPUT0=VPMIXBIN_FXSEND9
FX_INPUT1=VPMIXBIN_FXSEND10
FX_INPUT2=VPMIXBIN_FXSEND12
FX_OUTPUT0=GPMIXBIN_FRONTLEFT
FX_OUTPUT1=GPMIXBIN_FRONTRIGHT

[CHORUS_CHAIN]
FX0=CHORUS

[CHORUS_CHAIN_FX0_CHORUS]
FX_MIXOUTPUT=1
FX_DSPCODE=chorus_stereo.scr
FX_DSPSTATE=chorusstate_stereo.ini
FX_NUMINPUTS=3
FX_NUMOUTPUTS=2
FX_INPUT0=VPMIXBIN_FXSEND1
FX_INPUT1=VPMIXBIN_FXSEND1
FX_INPUT2=VPMIXBIN_FXSEND2
FX_OUTPUT0=GPMIXBIN_FRONTLEFT
FX_OUTPUT1=GPMIXBIN_FRONTRIGHT

[REVERB_CHAIN]
FX0=MINI_REVERB

[REVERB_CHAIN_FX0_MINI_REVERB]
FX_MIXOUTPUT=1
FX_DSPCODE=reverb24k.scr
FX_DSPSTATE=reverb_alley_24k_state.ini
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_INPUT0=VPMIXBIN_FXSEND0
FX_INPUT1=VPMIXBIN_FXSEND0
FX_OUTPUT0=GPMIXBIN_FRONTLEFT
FX_OUTPUT1=GPMIXBIN_FRONTRIGHT
FX_OUTPUT2=GPMIXBIN_BACKLEFT
FX_OUTPUT3=GPMIXBIN_BACKRIGHT

; I3DL2 reverb uses 31 temp bins for scratch memory.  This memory can be 
; overwritten and reused by other effects in chains following this one.

FX_OUTPUT4=GPTEMPBIN0
FX_OUTPUT5=GPTEMPBIN1
FX_OUTPUT6=GPTEMPBIN2
FX_OUTPUT7=GPTEMPBIN3
FX_OUTPUT8=GPTEMPBIN4
FX_OUTPUT9=GPTEMPBIN5
FX_OUTPUT10=GPTEMPBIN6
FX_OUTPUT11=GPTEMPBIN7
FX_OUTPUT12=GPTEMPBIN8
FX_OUTPUT13=GPTEMPBIN9
FX_OUTPUT14=GPTEMPBIN10
FX_OUTPUT15=GPTEMPBIN11
FX_OUTPUT16=GPTEMPBIN12
FX_OUTPUT17=GPTEMPBIN13
FX_OUTPUT18=GPTEMPBIN14
FX_OUTPUT19=GPTEMPBIN15
FX_OUTPUT20=GPTEMPBIN16
FX_OUTPUT21=GPTEMPBIN17
FX_OUTPUT22=GPTEMPBIN18
FX_OUTPUT23=GPTEMPBIN19
FX_OUTPUT24=GPTEMPBIN20
FX_OUTPUT25=GPTEMPBIN21
FX_OUTPUT26=GPTEMPBIN22
FX_OUTPUT27=GPTEMPBIN23
FX_OUTPUT28=GPTEMPBIN24
FX_OUTPUT29=GPTEMPBIN25
FX_OUTPUT30=GPTEMPBIN26
FX_OUTPUT31=GPTEMPBIN27
FX_OUTPUT32=GPTEMPBIN28
FX_OUTPUT33=GPTEMPBIN29
FX_OUTPUT34=GPTEMPBIN30

[RMS_CHAIN]
FX0=RMS

[RMS_CHAIN_FX0_RMS]
FX_MIXOUTPUT=1
FX_DSPCODE=rms.scr
FX_DSPSTATE=rmsstate.ini
FX_NUMINPUTS=6
FX_NUMOUTPUTS=1
FX_INPUT0=VPMIXBIN_FRONTLEFT
FX_INPUT1=VPMIXBIN_FRONTRIGHT
FX_INPUT2=VPMIXBIN_CENTER
FX_INPUT3=VPMIXBIN_LFE
FX_INPUT4=VPMIXBIN_BACKLEFT
FX_INPUT5=VPMIXBIN_BACKRIGHT

FX_OUTPUT0=GPMIXBIN_FRONTLEFT
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\rateconv_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=16384
FX_NUMINPUTS=1
; this is the max number of outputs
FX_NUMOUTPUTS=1
FX_YMEMSIZE=0
FX_DSPCYCLES=400
FX_NUMPARAMS=32
FX_NUMPUBLICPARAMS=1

; parameters and their descriptions

FX_PARAM0=3
FX_PARAM0_NAME=Sample Rate Conversion Ratio 
FX_PARAM0_DESCRIPTION=Conversion ratio N. For 48Khz/N=8Khz output, N=6
FX_PARAM0_UNITS=None
FX_PARAM0_TYPE=INTEGER
FX_PARAM0_MIN=1
FX_PARAM0_MAX=48
FX_PARAM0_ATOMIC=1

; DSPBuilder settings
FX_NAME=Rate Converter
FX_DSPCODE=rateconv.scr
FX_INPUT0_NAME=In
FX_OUTPUT0_NAME=Out
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\oscistate_iir.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=0
FX_NUMINPUTS=0
; this is the max number of outputs
FX_NUMOUTPUTS=1
FX_YMEMSIZE=0
FX_DSPCYCLES=300
FX_NUMPARAMS=16


; Default_Frequency		equ     60	; Hertz
; Default_Phase		set     0.0     ; Degrees [-180 .. +180]

; Phi    = 0.489796
; Theta2 = -0.979592
; Theta1 = -0.489796
; y2     = -0.0170946
; y1     = -0.00854759
; h      = 0.999963

;Osc_Phi	set     360.0*(Osc_Default_Frequency/Fs)               
;Osc_Theta2 set     (Osc_Default_Phase-(2.0*Osc_Phi))   
;Osc_Theta1 set     (Osc_Default_Phase-Osc_Phi)         
;Osc_y2	set     @sin(DegreeToRadian*Osc_Theta2)     
;Osc_y1	set     @sin(DegreeToRadian*Osc_Theta1)     
;Osc_h	set     @cos(DegreeToRadian*Osc_Phi)      ; 2:14 format

; H value
FX_PARAM0=8386024
; Y1
FX_PARAM1=16705514
; Y2
FX_PARAM2=16633821


; DSPBuilder settings
FX_NAME=Sinusoidal Oscillator
FX_DSPCODE=osci.scr
FX_OUTPUT0_NAME=Out0
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\flangestate_stereo.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=0
FX_NUMINPUTS=3
FX_NUMOUTPUTS=2
FX_YMEMSIZE=200
FX_DSPCYCLES=5000
FX_NUMPARAMS=64
FX_NUMPUBLICPARAMS=2

; parameters and their descriptions

FX_PARAM0=6700000
FX_PARAM0_NAME=Gain
FX_PARAM0_DESCRIPTION=Gain applied to delay line input when mixing with dry signal
FX_PARAM0_UNITS=None
FX_PARAM0_TYPE=FLOAT
FX_PARAM0_MIN=0
FX_PARAM0_MAX=8388607
FX_PARAM0_ATOMIC=1

FX_PARAM1=25
FX_PARAM1_NAME=Modulation Scale
FX_PARAM1_DESCRIPTION=Determines how much of the delay line to tap. Mod_scale = YMEMSIZE/2^23 = 100% of delay line
FX_PARAM1_UNITS=None
FX_PARAM1_TYPE=FLOAT
FX_PARAM1_MIN=0
FX_PARAM1_MAX=8388607
FX_PARAM1_ATOMIC=1



; DSPBuilder settings
FX_NAME=Stereo Flange
FX_DSPCODE=flange_stereo.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_INPUT2_NAME=Mod
FX_OUTPUT0_NAME=Left
FX_OUTPUT1_NAME=Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\oscistate.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=0
FX_NUMINPUTS=0
; this is the max number of outputs
FX_NUMOUTPUTS=4
FX_YMEMSIZE=0
FX_DSPCYCLES=300
FX_NUMPARAMS=90
FX_NUMPUBLICPARAMS=5

; parameters and their descriptions

FX_PARAM0=1
FX_PARAM0_NAME=Number of Outputs
FX_PARAM0_DESCRIPTION=Number of simultaneous sine waves produced using frequency array
FX_PARAM0_UNITS=None
FX_PARAM0_TYPE=INTEGER
FX_PARAM0_MIN=1
FX_PARAM0_MAX=4
FX_PARAM0_ATOMIC=1

; array of frequencies, in 1/10 of a Hz
FX_PARAM1=10
FX_PARAM1_NAME=Frequency
FX_PARAM1_DESCRIPTION=Oscillator output 1 frequency
FX_PARAM1_UNITS=DeciHz (1/10 Hz)
FX_PARAM1_TYPE=INTEGER
FX_PARAM1_MIN=1
FX_PARAM1_MAX=100000
FX_PARAM1_ATOMIC=1

FX_PARAM2=1
FX_PARAM2_NAME=Frequency
FX_PARAM2_DESCRIPTION=Oscillator output 2 frequency
FX_PARAM2_UNITS=DeciHz (1/10 Hz)
FX_PARAM2_TYPE=INTEGER
FX_PARAM2_MIN=1
FX_PARAM2_MAX=100000
FX_PARAM2_ATOMIC=1

FX_PARAM3=1
FX_PARAM3_NAME=Frequency
FX_PARAM3_DESCRIPTION=Oscillator output 3 frequency
FX_PARAM3_UNITS=DeciHz (1/10 Hz)
FX_PARAM3_TYPE=INTEGER
FX_PARAM3_MIN=1
FX_PARAM3_MAX=100000
FX_PARAM3_ATOMIC=1

FX_PARAM4=1
FX_PARAM4_NAME=Frequency
FX_PARAM4_DESCRIPTION=Oscillator output 4 frequency
FX_PARAM4_UNITS=DeciHz (1/10 Hz)
FX_PARAM4_TYPE=INTEGER
FX_PARAM4_MIN=1
FX_PARAM4_MAX=100000
FX_PARAM4_ATOMIC=1

; table indices  (two words per table)

FX_PARAM5=0
FX_PARAM6=0
FX_PARAM7=0
FX_PARAM8=0
FX_PARAM9=0
FX_PARAM10=0
FX_PARAM11=0
FX_PARAM12=0


; 64 point SIN() table

FX_PARAM13=0
FX_PARAM14=822227 
FX_PARAM15=1636536
FX_PARAM16=2435084
FX_PARAM17=3210181
FX_PARAM18=3954362
FX_PARAM19=4660461
FX_PARAM20=5321677
FX_PARAM21=5931642
FX_PARAM22=6484482
FX_PARAM23=6974873
FX_PARAM24=7398092
FX_PARAM25=7750063
FX_PARAM26=8027397
FX_PARAM27=8227423
FX_PARAM28=8348215
FX_PARAM29=8388607
FX_PARAM30=8348215
FX_PARAM31=8227423
FX_PARAM32=8027397
FX_PARAM33=7750063
FX_PARAM34=7398092
FX_PARAM35=6974873
FX_PARAM36=6484482
FX_PARAM37=5931642
FX_PARAM38=5321677
FX_PARAM39=4660461
FX_PARAM40=3954362
FX_PARAM41=3210181
FX_PARAM42=2435084
FX_PARAM43=1636536
FX_PARAM44=822227
FX_PARAM45=0
FX_PARAM46=15954989
FX_PARAM47=15140680
FX_PARAM48=14342132
FX_PARAM49=13567035
FX_PARAM50=12822854
FX_PARAM51=12116755
FX_PARAM52=11455539
FX_PARAM53=10845574
FX_PARAM54=10292734
FX_PARAM55=9802343
FX_PARAM56=9379124
FX_PARAM57=9027153
FX_PARAM58=8749819
FX_PARAM59=8549793
FX_PARAM60=8429001
FX_PARAM61=8388608
FX_PARAM62=8429001
FX_PARAM63=8549793
FX_PARAM64=8749819
FX_PARAM65=9027153
FX_PARAM66=9379124
FX_PARAM67=9802343
FX_PARAM68=10292734
FX_PARAM69=10845574
FX_PARAM70=11455539
FX_PARAM71=12116755
FX_PARAM72=12822854
FX_PARAM73=13567035
FX_PARAM74=14342132
FX_PARAM75=15140680
FX_PARAM76=15954989
FX_PARAM77=0


; DSPBuilder settings
FX_NAME=Low Frequency Oscillator
FX_DSPCODE=osci.scr
FX_INPUT0_NAME=In
FX_OUTPUT0_NAME=Out0
FX_OUTPUT1_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT1_NAME=Out3
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\oscistate_table.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=0
FX_NUMINPUTS=1
; this is the max number of outputs
FX_NUMOUTPUTS=4
FX_YMEMSIZE=8
FX_DSPCYCLES=500
FX_NUMPARAMS=80

; Number of outputs
FX_PARAM0=2

; array of frequencies
FX_PARAM1=1
FX_PARAM2=1
FX_PARAM3=1
FX_PARAM4=1


; 64 point SIN() table

FX_PARAM5=0
FX_PARAM6=822227 
FX_PARAM7=1636536
FX_PARAM8=2435084
FX_PARAM9=3210181
FX_PARAM10=3954362
FX_PARAM11=4660461
FX_PARAM12=5321677
FX_PARAM13=5931642
FX_PARAM14=6484482
FX_PARAM15=6974873
FX_PARAM16=7398092
FX_PARAM17=7750063
FX_PARAM18=8027397
FX_PARAM19=8227423
FX_PARAM20=8348215
FX_PARAM21=8388607
FX_PARAM22=8348215
FX_PARAM23=8227423
FX_PARAM24=8027397
FX_PARAM25=7750063
FX_PARAM26=7398092
FX_PARAM27=6974873
FX_PARAM28=6484482
FX_PARAM29=5931642
FX_PARAM30=5321677
FX_PARAM31=4660461
FX_PARAM32=3954362
FX_PARAM33=3210181
FX_PARAM34=2435084
FX_PARAM35=1636536
FX_PARAM36=822227
FX_PARAM37=0
FX_PARAM38=15954989
FX_PARAM39=15140680
FX_PARAM40=14342132
FX_PARAM41=13567035
FX_PARAM42=12822854
FX_PARAM43=12116755
FX_PARAM44=11455539
FX_PARAM45=10845574
FX_PARAM46=10292734
FX_PARAM47=9802343
FX_PARAM48=9379124
FX_PARAM49=9027153
FX_PARAM50=8749819
FX_PARAM51=8549793
FX_PARAM52=8429001
FX_PARAM53=8388608
FX_PARAM54=8429001
FX_PARAM55=8549793
FX_PARAM56=8749819
FX_PARAM57=9027153
FX_PARAM58=9379124
FX_PARAM59=9802343
FX_PARAM60=10292734
FX_PARAM61=10845574
FX_PARAM62=11455539
FX_PARAM63=12116755
FX_PARAM64=12822854
FX_PARAM65=13567035
FX_PARAM66=14342132
FX_PARAM67=15140680
FX_PARAM68=15954989
FX_PARAM69=0

; current index into table
FX_PARAM70=0
FX_PARAM71=0


; DSPBuilder settings
FX_NAME=Low Frequency Oscillator
FX_DSPCODE=osci.scr
FX_INPUT0_NAME=In
FX_OUTPUT0_NAME=Out0
FX_OUTPUT1_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT1_NAME=Out3
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\osci2state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=0
FX_NUMINPUTS=1
; this is the max number of outputs
FX_NUMOUTPUTS=1
FX_YMEMSIZE=0
FX_DSPCYCLES=500
FX_NUMPARAMS=16


; Default_Frequency		equ     60	; Hertz
; Default_Phase		set     0.0     ; Degrees [-180 .. +180]

; Phi    = 0.489796
; Theta2 = -0.979592
; Theta1 = -0.489796
; y2     = -0.0170946
; y1     = -0.00854759
; h      = 0.999963

;Osc_Phi	set     360.0*(Osc_Default_Frequency/Fs)               
;Osc_Theta2 set     (Osc_Default_Phase-(2.0*Osc_Phi))   
;Osc_Theta1 set     (Osc_Default_Phase-Osc_Phi)         
;Osc_y2	set     @sin(DegreeToRadian*Osc_Theta2)     
;Osc_y1	set     @sin(DegreeToRadian*Osc_Theta1)     
;Osc_h	set     @cos(DegreeToRadian*Osc_Phi)      ; 2:14 format

; H value
FX_PARAM0=8386024
; Y1
FX_PARAM1=16705514
; Y2
FX_PARAM2=16633821


; DSPBuilder settings
FX_NAME=Sinusoidal Oscillator
FX_DSPCODE=osci.scr
FX_INPUT0_NAME=In
FX_OUTPUT0_NAME=Out0
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\flangestate.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=0
FX_NUMINPUTS=2
FX_NUMOUTPUTS=1
FX_YMEMSIZE=200
FX_DSPCYCLES=2500
FX_NUMPARAMS=64
FX_NUMPUBLICPARAMS=2

; parameters and their descriptions

FX_PARAM0=6700000
FX_PARAM0_NAME=Gain
FX_PARAM0_DESCRIPTION=Gain applied to delay line input when mixing with dry signal
FX_PARAM0_UNITS=None
FX_PARAM0_TYPE=FLOAT
FX_PARAM0_MIN=0
FX_PARAM0_MAX=8388607
FX_PARAM0_ATOMIC=1

FX_PARAM1=25
FX_PARAM1_NAME=Modulation Scale
FX_PARAM1_DESCRIPTION=Determines how much of the delay line to tap. Mod_scale = YMEMSIZE/2^23 = 100% of delay line
FX_PARAM1_UNITS=None
FX_PARAM1_TYPE=FLOAT
FX_PARAM1_MIN=0
FX_PARAM1_MAX=8388607
FX_PARAM1_ATOMIC=1

; DSPBuilder settings
FX_NAME=Mono Flange
FX_DSPCODE=flange.scr
FX_INPUT0_NAME=In
FX_INPUT1_NAME=Mod
FX_OUTPUT0_NAME=Out
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\lfostate.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=0
FX_NUMINPUTS=1
; this is the max number of outputs
FX_NUMOUTPUTS=4
FX_YMEMSIZE=0
FX_DSPCYCLES=500
FX_NUMPARAMS=80

; Number of outputs
FX_PARAM0=2

; array of frequencies (floating point s.23 so 4194000 ~ 0.5Hz)
FX_PARAM1=4194304
FX_PARAM2=4194304
FX_PARAM3=4194304
FX_PARAM4=4194304


; 64 point SIN() table

FX_PARAM5=0
FX_PARAM6=822227 
FX_PARAM7=1636536
FX_PARAM8=2435084
FX_PARAM9=3210181
FX_PARAM10=3954362
FX_PARAM11=4660461
FX_PARAM12=5321677
FX_PARAM13=5931642
FX_PARAM14=6484482
FX_PARAM15=6974873
FX_PARAM16=7398092
FX_PARAM17=7750063
FX_PARAM18=8027397
FX_PARAM19=8227423
FX_PARAM20=8348215
FX_PARAM21=8388607
FX_PARAM22=8348215
FX_PARAM23=8227423
FX_PARAM24=8027397
FX_PARAM25=7750063
FX_PARAM26=7398092
FX_PARAM27=6974873
FX_PARAM28=6484482
FX_PARAM29=5931642
FX_PARAM30=5321677
FX_PARAM31=4660461
FX_PARAM32=3954362
FX_PARAM33=3210181
FX_PARAM34=2435084
FX_PARAM35=1636536
FX_PARAM36=822227
FX_PARAM37=0
FX_PARAM38=15954989
FX_PARAM39=15140680
FX_PARAM40=14342132
FX_PARAM41=13567035
FX_PARAM42=12822854
FX_PARAM43=12116755
FX_PARAM44=11455539
FX_PARAM45=10845574
FX_PARAM46=10292734
FX_PARAM47=9802343
FX_PARAM48=9379124
FX_PARAM49=9027153
FX_PARAM50=8749819
FX_PARAM51=8549793
FX_PARAM52=8429001
FX_PARAM53=8388608
FX_PARAM54=8429001
FX_PARAM55=8549793
FX_PARAM56=8749819
FX_PARAM57=9027153
FX_PARAM58=9379124
FX_PARAM59=9802343
FX_PARAM60=10292734
FX_PARAM61=10845574
FX_PARAM62=11455539
FX_PARAM63=12116755
FX_PARAM64=12822854
FX_PARAM65=13567035
FX_PARAM66=14342132
FX_PARAM67=15140680
FX_PARAM68=15954989

; current index into table
FX_PARAM69=0

; DSPBuilder settings
FX_NAME=Low Frequency Oscillator
FX_DSPCODE=osci.scr
FX_INPUT0_NAME=In
FX_OUTPUT0_NAME=Out0
FX_OUTPUT1_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT1_NAME=Out3
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Auditorium_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=1904
FX_PARAM29=2208
FX_PARAM30=2096
FX_PARAM31=2400
FX_PARAM32=2592
FX_PARAM33=4768
FX_PARAM34=3840
FX_PARAM35=2032
FX_PARAM36=18096
FX_PARAM37=24000
FX_PARAM38=21920
FX_PARAM39=23824
FX_PARAM40=21920
FX_PARAM41=13024
FX_PARAM42=1056
FX_PARAM43=976
FX_PARAM44=1008
FX_PARAM45=1120
FX_PARAM46=96000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=4762
FX_PARAM58=4344
FX_PARAM59=4512
FX_PARAM60=5013
FX_PARAM61=14858
FX_PARAM62=14858
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=3629192
FX_PARAM66=4759415
FX_PARAM67=0
FX_PARAM68=2248816
FX_PARAM69=4117689
FX_PARAM70=0
FX_PARAM71=2248816
FX_PARAM72=4117689
FX_PARAM73=0
FX_PARAM74=2248816
FX_PARAM75=4117689
FX_PARAM76=0
FX_PARAM77=660933
FX_PARAM78=7047723
FX_PARAM79=0
FX_PARAM80=787540
FX_PARAM81=6797897
FX_PARAM82=0
FX_PARAM83=929765
FX_PARAM84=6511356
FX_PARAM85=0
FX_PARAM86=1095227
FX_PARAM87=6186269
FX_PARAM88=0
FX_PARAM89=5507014
FX_PARAM90=582951
FX_PARAM91=0
FX_PARAM92=5507014
FX_PARAM93=582951
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Auditorium
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Alley_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=672
FX_PARAM29=784
FX_PARAM30=736
FX_PARAM31=848
FX_PARAM32=912
FX_PARAM33=1712
FX_PARAM34=3728
FX_PARAM35=1968
FX_PARAM36=18080
FX_PARAM37=24000
FX_PARAM38=21280
FX_PARAM39=23120
FX_PARAM40=21280
FX_PARAM41=12640
FX_PARAM42=608
FX_PARAM43=560
FX_PARAM44=592
FX_PARAM45=656
FX_PARAM46=93168
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=2953
FX_PARAM58=2694
FX_PARAM59=2798
FX_PARAM60=3109
FX_PARAM61=20629
FX_PARAM62=20629
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=2447250
FX_PARAM66=5941357
FX_PARAM67=0
FX_PARAM68=1625998
FX_PARAM69=2195909
FX_PARAM70=0
FX_PARAM71=1625998
FX_PARAM72=2195909
FX_PARAM73=0
FX_PARAM74=1625998
FX_PARAM75=2195909
FX_PARAM76=0
FX_PARAM77=462025
FX_PARAM78=6061582
FX_PARAM79=0
FX_PARAM80=551832
FX_PARAM81=5664184
FX_PARAM82=0
FX_PARAM83=660933
FX_PARAM84=5212532
FX_PARAM85=0
FX_PARAM86=787540
FX_PARAM87=4713837
FX_PARAM88=0
FX_PARAM89=4353618
FX_PARAM90=44858
FX_PARAM91=0
FX_PARAM92=4353618
FX_PARAM93=44858
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Alley
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Bathroom_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=672
FX_PARAM29=784
FX_PARAM30=736
FX_PARAM31=848
FX_PARAM32=912
FX_PARAM33=1712
FX_PARAM34=3840
FX_PARAM35=2032
FX_PARAM36=18096
FX_PARAM37=24000
FX_PARAM38=21920
FX_PARAM39=23824
FX_PARAM40=21920
FX_PARAM41=13024
FX_PARAM42=608
FX_PARAM43=560
FX_PARAM44=592
FX_PARAM45=656
FX_PARAM46=96000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=7715
FX_PARAM58=7038
FX_PARAM59=7309
FX_PARAM60=8121
FX_PARAM61=67839
FX_PARAM62=67839
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=6124004
FX_PARAM66=2264603
FX_PARAM67=0
FX_PARAM68=5171040
FX_PARAM69=1010479
FX_PARAM70=0
FX_PARAM71=5171040
FX_PARAM72=1010479
FX_PARAM73=0
FX_PARAM74=5171040
FX_PARAM75=1010479
FX_PARAM76=0
FX_PARAM77=1942364
FX_PARAM78=4929543
FX_PARAM79=0
FX_PARAM80=2248816
FX_PARAM81=4437656
FX_PARAM82=0
FX_PARAM83=2597854
FX_PARAM84=3906025
FX_PARAM85=0
FX_PARAM86=2971797
FX_PARAM87=3359260
FX_PARAM88=0
FX_PARAM89=8194226
FX_PARAM90=1886
FX_PARAM91=0
FX_PARAM92=8194226
FX_PARAM93=1886
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Bathroom
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Arena_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=3824
FX_PARAM29=4432
FX_PARAM30=4208
FX_PARAM31=4816
FX_PARAM32=5200
FX_PARAM33=5744
FX_PARAM34=7680
FX_PARAM35=4064
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=43840
FX_PARAM39=47632
FX_PARAM40=43840
FX_PARAM41=26048
FX_PARAM42=2112
FX_PARAM43=1936
FX_PARAM44=2032
FX_PARAM45=2256
FX_PARAM46=192000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=3085
FX_PARAM58=2815
FX_PARAM59=2923
FX_PARAM60=3248
FX_PARAM61=21109
FX_PARAM62=21109
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=6088244
FX_PARAM66=2300364
FX_PARAM67=0
FX_PARAM68=5096462
FX_PARAM69=2594054
FX_PARAM70=0
FX_PARAM71=5096462
FX_PARAM72=2594054
FX_PARAM73=0
FX_PARAM74=5096462
FX_PARAM75=2594054
FX_PARAM76=0
FX_PARAM77=2501640
FX_PARAM78=5570468
FX_PARAM79=0
FX_PARAM80=2806229
FX_PARAM81=5221789
FX_PARAM82=0
FX_PARAM83=3120989
FX_PARAM84=4859754
FX_PARAM85=0
FX_PARAM86=3456984
FX_PARAM87=4471878
FX_PARAM88=0
FX_PARAM89=7639475
FX_PARAM90=288774
FX_PARAM91=0
FX_PARAM92=7639475
FX_PARAM93=288774
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Arena
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Bathroom_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=1344
FX_PARAM29=1568
FX_PARAM30=1488
FX_PARAM31=1712
FX_PARAM32=1840
FX_PARAM33=2096
FX_PARAM34=7680
FX_PARAM35=4064
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=43840
FX_PARAM39=47632
FX_PARAM40=43840
FX_PARAM41=26048
FX_PARAM42=1216
FX_PARAM43=1136
FX_PARAM44=1184
FX_PARAM45=1312
FX_PARAM46=192000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=7715
FX_PARAM58=7038
FX_PARAM59=7309
FX_PARAM60=8121
FX_PARAM61=67839
FX_PARAM62=67839
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=7100993
FX_PARAM66=1287615
FX_PARAM67=0
FX_PARAM68=6485885
FX_PARAM69=597551
FX_PARAM70=0
FX_PARAM71=6485885
FX_PARAM72=597551
FX_PARAM73=0
FX_PARAM74=6485885
FX_PARAM75=597551
FX_PARAM76=0
FX_PARAM77=3694380
FX_PARAM78=3589749
FX_PARAM79=0
FX_PARAM80=4042153
FX_PARAM81=3141486
FX_PARAM82=0
FX_PARAM83=4406414
FX_PARAM84=2686101
FX_PARAM85=0
FX_PARAM86=4766351
FX_PARAM87=2246359
FX_PARAM88=0
FX_PARAM89=8285400
FX_PARAM90=1001
FX_PARAM91=0
FX_PARAM92=8285400
FX_PARAM93=1001
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Bathroom
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Alley_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=1344
FX_PARAM29=1568
FX_PARAM30=1488
FX_PARAM31=1712
FX_PARAM32=1840
FX_PARAM33=2096
FX_PARAM34=7456
FX_PARAM35=3952
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=42560
FX_PARAM39=46240
FX_PARAM40=42560
FX_PARAM41=25280
FX_PARAM42=1216
FX_PARAM43=1136
FX_PARAM44=1184
FX_PARAM45=1312
FX_PARAM46=186352
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=2953
FX_PARAM58=2694
FX_PARAM59=2798
FX_PARAM60=3109
FX_PARAM61=20629
FX_PARAM62=20629
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=4252956
FX_PARAM66=4135652
FX_PARAM67=0
FX_PARAM68=3300897
FX_PARAM69=1652047
FX_PARAM70=0
FX_PARAM71=3300897
FX_PARAM72=1652047
FX_PARAM73=0
FX_PARAM74=3300897
FX_PARAM75=1652047
FX_PARAM76=0
FX_PARAM77=1318414
FX_PARAM78=5406687
FX_PARAM79=0
FX_PARAM80=1520296
FX_PARAM81=4964208
FX_PARAM82=0
FX_PARAM83=1749662
FX_PARAM84=4478154
FX_PARAM85=0
FX_PARAM86=1997175
FX_PARAM87=3963676
FX_PARAM88=0
FX_PARAM89=5906907
FX_PARAM90=27589
FX_PARAM91=0
FX_PARAM92=5906907
FX_PARAM93=27589
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Alley
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Arena_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=1904
FX_PARAM29=2208
FX_PARAM30=2096
FX_PARAM31=2400
FX_PARAM32=2592
FX_PARAM33=4768
FX_PARAM34=3840
FX_PARAM35=2032
FX_PARAM36=18096
FX_PARAM37=24000
FX_PARAM38=21920
FX_PARAM39=23824
FX_PARAM40=21920
FX_PARAM41=13024
FX_PARAM42=1056
FX_PARAM43=976
FX_PARAM44=1008
FX_PARAM45=1120
FX_PARAM46=96000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=3085
FX_PARAM58=2815
FX_PARAM59=2923
FX_PARAM60=3248
FX_PARAM61=21109
FX_PARAM62=21109
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=4601249
FX_PARAM66=3787358
FX_PARAM67=0
FX_PARAM68=3340700
FX_PARAM69=3977511
FX_PARAM70=0
FX_PARAM71=3340700
FX_PARAM72=3977511
FX_PARAM73=0
FX_PARAM74=3340700
FX_PARAM75=3977511
FX_PARAM76=0
FX_PARAM77=1076149
FX_PARAM78=6919320
FX_PARAM79=0
FX_PARAM80=1271671
FX_PARAM81=6657223
FX_PARAM82=0
FX_PARAM83=1491688
FX_PARAM84=6362901
FX_PARAM85=0
FX_PARAM86=1747725
FX_PARAM87=6021792
FX_PARAM88=0
FX_PARAM89=7027834
FX_PARAM90=524548
FX_PARAM91=0
FX_PARAM92=7027834
FX_PARAM93=524548
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Arena
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Auditorium_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=3824
FX_PARAM29=4432
FX_PARAM30=4208
FX_PARAM31=4816
FX_PARAM32=5200
FX_PARAM33=5744
FX_PARAM34=7680
FX_PARAM35=4064
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=43840
FX_PARAM39=47632
FX_PARAM40=43840
FX_PARAM41=26048
FX_PARAM42=2112
FX_PARAM43=1936
FX_PARAM44=2032
FX_PARAM45=2256
FX_PARAM46=192000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=4762
FX_PARAM58=4344
FX_PARAM59=4512
FX_PARAM60=5013
FX_PARAM61=14858
FX_PARAM62=14858
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=5340165
FX_PARAM66=3048442
FX_PARAM67=0
FX_PARAM68=4042153
FX_PARAM69=2914977
FX_PARAM70=0
FX_PARAM71=4042153
FX_PARAM72=2914977
FX_PARAM73=0
FX_PARAM74=4042153
FX_PARAM75=2914977
FX_PARAM76=0
FX_PARAM77=1749662
FX_PARAM78=6054790
FX_PARAM79=0
FX_PARAM80=1997175
FX_PARAM81=5716079
FX_PARAM82=0
FX_PARAM83=2255035
FX_PARAM84=5354433
FX_PARAM85=0
FX_PARAM86=2547821
FX_PARAM87=4954174
FX_PARAM88=0
FX_PARAM89=6709180
FX_PARAM90=339751
FX_PARAM91=0
FX_PARAM92=6709180
FX_PARAM93=339751
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Auditorium
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Cave_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=2864
FX_PARAM29=3296
FX_PARAM30=3136
FX_PARAM31=3584
FX_PARAM32=3872
FX_PARAM33=4208
FX_PARAM34=7680
FX_PARAM35=4064
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=43840
FX_PARAM39=47632
FX_PARAM40=43840
FX_PARAM41=26048
FX_PARAM42=1744
FX_PARAM43=1600
FX_PARAM44=1680
FX_PARAM45=1856
FX_PARAM46=192000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=5906
FX_PARAM58=5388
FX_PARAM59=5595
FX_PARAM60=6217
FX_PARAM61=14637
FX_PARAM62=14637
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=0
FX_PARAM66=8388608
FX_PARAM67=0
FX_PARAM68=0
FX_PARAM69=4636496
FX_PARAM70=0
FX_PARAM71=0
FX_PARAM72=4636496
FX_PARAM73=0
FX_PARAM74=0
FX_PARAM75=4636496
FX_PARAM76=0
FX_PARAM77=0
FX_PARAM78=7314588
FX_PARAM79=0
FX_PARAM80=0
FX_PARAM81=7107058
FX_PARAM82=0
FX_PARAM83=0
FX_PARAM84=6857880
FX_PARAM85=0
FX_PARAM86=0
FX_PARAM87=6571884
FX_PARAM88=0
FX_PARAM89=0
FX_PARAM90=781969
FX_PARAM91=0
FX_PARAM92=0
FX_PARAM93=781969
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Cave
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Cave_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=1424
FX_PARAM29=1648
FX_PARAM30=1568
FX_PARAM31=1792
FX_PARAM32=1920
FX_PARAM33=3520
FX_PARAM34=3840
FX_PARAM35=2032
FX_PARAM36=18096
FX_PARAM37=24000
FX_PARAM38=21920
FX_PARAM39=23824
FX_PARAM40=21920
FX_PARAM41=13024
FX_PARAM42=864
FX_PARAM43=800
FX_PARAM44=832
FX_PARAM45=928
FX_PARAM46=96000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=5906
FX_PARAM58=5388
FX_PARAM59=5595
FX_PARAM60=6217
FX_PARAM61=14637
FX_PARAM62=14637
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=0
FX_PARAM66=8388608
FX_PARAM67=0
FX_PARAM68=0
FX_PARAM69=4636496
FX_PARAM70=0
FX_PARAM71=0
FX_PARAM72=4636496
FX_PARAM73=0
FX_PARAM74=0
FX_PARAM75=4636496
FX_PARAM76=0
FX_PARAM77=0
FX_PARAM78=7314588
FX_PARAM79=0
FX_PARAM80=0
FX_PARAM81=7107058
FX_PARAM82=0
FX_PARAM83=0
FX_PARAM84=6857880
FX_PARAM85=0
FX_PARAM86=0
FX_PARAM87=6571884
FX_PARAM88=0
FX_PARAM89=0
FX_PARAM90=781969
FX_PARAM91=0
FX_PARAM92=0
FX_PARAM93=781969
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Cave
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_City_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=672
FX_PARAM29=784
FX_PARAM30=736
FX_PARAM31=848
FX_PARAM32=912
FX_PARAM33=1712
FX_PARAM34=3728
FX_PARAM35=1968
FX_PARAM36=18080
FX_PARAM37=24000
FX_PARAM38=21280
FX_PARAM39=23120
FX_PARAM40=21280
FX_PARAM41=12640
FX_PARAM42=608
FX_PARAM43=560
FX_PARAM44=592
FX_PARAM45=656
FX_PARAM46=93168
FX_PARAM47=4194304
FX_PARAM48=12582912
FX_PARAM49=12582912
FX_PARAM50=4194304
FX_PARAM51=4194304
FX_PARAM52=4194304
FX_PARAM53=12582912
FX_PARAM54=12582912
FX_PARAM55=4194304
FX_PARAM56=838860
FX_PARAM57=862
FX_PARAM58=787
FX_PARAM59=817
FX_PARAM60=908
FX_PARAM61=1614
FX_PARAM62=1614
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=4975145
FX_PARAM66=3413462
FX_PARAM67=0
FX_PARAM68=3653968
FX_PARAM69=1537400
FX_PARAM70=0
FX_PARAM71=3653968
FX_PARAM72=1537400
FX_PARAM73=0
FX_PARAM74=3653968
FX_PARAM75=1537400
FX_PARAM76=0
FX_PARAM77=1244369
FX_PARAM78=5463311
FX_PARAM79=0
FX_PARAM80=1457346
FX_PARAM81=5009706
FX_PARAM82=0
FX_PARAM83=1707581
FX_PARAM84=4506539
FX_PARAM85=0
FX_PARAM86=1987649
FX_PARAM87=3969584
FX_PARAM88=0
FX_PARAM89=7339641
FX_PARAM90=11661
FX_PARAM91=0
FX_PARAM92=7339641
FX_PARAM93=11661
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=City
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Carpeted_Hallway_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=192
FX_PARAM29=496
FX_PARAM30=384
FX_PARAM31=688
FX_PARAM32=880
FX_PARAM33=3056
FX_PARAM34=448
FX_PARAM35=224
FX_PARAM36=3024
FX_PARAM37=4016
FX_PARAM38=2576
FX_PARAM39=2800
FX_PARAM40=2576
FX_PARAM41=1520
FX_PARAM42=1056
FX_PARAM43=976
FX_PARAM44=1008
FX_PARAM45=1120
FX_PARAM46=11280
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=1435
FX_PARAM58=1309
FX_PARAM59=1359
FX_PARAM60=1510
FX_PARAM61=3173
FX_PARAM62=3173
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=8287089
FX_PARAM66=101518
FX_PARAM67=0
FX_PARAM68=8365457
FX_PARAM69=11777
FX_PARAM70=0
FX_PARAM71=8365457
FX_PARAM72=11777
FX_PARAM73=0
FX_PARAM74=8365457
FX_PARAM75=11777
FX_PARAM76=0
FX_PARAM77=8388546
FX_PARAM78=16
FX_PARAM79=0
FX_PARAM80=8388603
FX_PARAM81=0
FX_PARAM82=0
FX_PARAM83=8388608
FX_PARAM84=0
FX_PARAM85=0
FX_PARAM86=8388608
FX_PARAM87=0
FX_PARAM88=0
FX_PARAM89=8388608
FX_PARAM90=0
FX_PARAM91=0
FX_PARAM92=8388608
FX_PARAM93=0
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Carpeted Hallway
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Concert_Hall_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=1904
FX_PARAM29=2192
FX_PARAM30=2080
FX_PARAM31=2384
FX_PARAM32=2560
FX_PARAM33=4672
FX_PARAM34=3840
FX_PARAM35=2032
FX_PARAM36=18096
FX_PARAM37=24000
FX_PARAM38=21920
FX_PARAM39=23824
FX_PARAM40=21920
FX_PARAM41=13024
FX_PARAM42=1040
FX_PARAM43=944
FX_PARAM44=992
FX_PARAM45=1104
FX_PARAM46=96000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=2866
FX_PARAM58=2615
FX_PARAM59=2715
FX_PARAM60=3017
FX_PARAM61=20676
FX_PARAM62=20676
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=3746737
FX_PARAM66=4641870
FX_PARAM67=0
FX_PARAM68=1667009
FX_PARAM69=4329847
FX_PARAM70=0
FX_PARAM71=1667009
FX_PARAM72=4329847
FX_PARAM73=0
FX_PARAM74=1667009
FX_PARAM75=4329847
FX_PARAM76=0
FX_PARAM77=462025
FX_PARAM78=7162852
FX_PARAM79=0
FX_PARAM80=551832
FX_PARAM81=6928471
FX_PARAM82=0
FX_PARAM83=660933
FX_PARAM84=6653479
FX_PARAM85=0
FX_PARAM86=787540
FX_PARAM87=6344166
FX_PARAM88=0
FX_PARAM89=4435309
FX_PARAM90=679140
FX_PARAM91=0
FX_PARAM92=4435309
FX_PARAM93=679140
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Concert Hall
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_City_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=1344
FX_PARAM29=1568
FX_PARAM30=1488
FX_PARAM31=1712
FX_PARAM32=1840
FX_PARAM33=2096
FX_PARAM34=7456
FX_PARAM35=3952
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=42560
FX_PARAM39=46240
FX_PARAM40=42560
FX_PARAM41=25280
FX_PARAM42=1216
FX_PARAM43=1136
FX_PARAM44=1184
FX_PARAM45=1312
FX_PARAM46=186352
FX_PARAM47=4194304
FX_PARAM48=12582912
FX_PARAM49=12582912
FX_PARAM50=4194304
FX_PARAM51=4194304
FX_PARAM52=4194304
FX_PARAM53=12582912
FX_PARAM54=12582912
FX_PARAM55=4194304
FX_PARAM56=838860
FX_PARAM57=862
FX_PARAM58=787
FX_PARAM59=817
FX_PARAM60=908
FX_PARAM61=1614
FX_PARAM62=1614
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=6352032
FX_PARAM66=2036576
FX_PARAM67=0
FX_PARAM68=5360566
FX_PARAM69=983245
FX_PARAM70=0
FX_PARAM71=5360566
FX_PARAM72=983245
FX_PARAM73=0
FX_PARAM74=5360566
FX_PARAM75=983245
FX_PARAM76=0
FX_PARAM77=2765219
FX_PARAM78=4300293
FX_PARAM79=0
FX_PARAM80=3085531
FX_PARAM81=3832903
FX_PARAM82=0
FX_PARAM83=3406197
FX_PARAM84=3360775
FX_PARAM85=0
FX_PARAM86=3747656
FX_PARAM87=2878107
FX_PARAM88=0
FX_PARAM89=7817644
FX_PARAM90=6347
FX_PARAM91=0
FX_PARAM92=7817644
FX_PARAM93=6347
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=City
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Carpeted_Hallway_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=384
FX_PARAM29=992
FX_PARAM30=768
FX_PARAM31=1376
FX_PARAM32=1760
FX_PARAM33=5744
FX_PARAM34=896
FX_PARAM35=464
FX_PARAM36=6032
FX_PARAM37=8016
FX_PARAM38=5152
FX_PARAM39=5600
FX_PARAM40=5152
FX_PARAM41=3056
FX_PARAM42=2112
FX_PARAM43=1936
FX_PARAM44=2032
FX_PARAM45=2256
FX_PARAM46=22576
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=1435
FX_PARAM58=1309
FX_PARAM59=1359
FX_PARAM60=1510
FX_PARAM61=3173
FX_PARAM62=3173
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=8334850
FX_PARAM66=53758
FX_PARAM67=0
FX_PARAM68=8376432
FX_PARAM69=6194
FX_PARAM70=0
FX_PARAM71=8376432
FX_PARAM72=6194
FX_PARAM73=0
FX_PARAM74=8376432
FX_PARAM75=6194
FX_PARAM76=0
FX_PARAM77=8388575
FX_PARAM78=8
FX_PARAM79=0
FX_PARAM80=8388605
FX_PARAM81=0
FX_PARAM82=0
FX_PARAM83=8388608
FX_PARAM84=0
FX_PARAM85=0
FX_PARAM86=8388608
FX_PARAM87=0
FX_PARAM88=0
FX_PARAM89=8388608
FX_PARAM90=0
FX_PARAM91=0
FX_PARAM92=8388608
FX_PARAM93=0
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Carpeted Hallway
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Concert_Hall_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=3824
FX_PARAM29=4400
FX_PARAM30=4192
FX_PARAM31=4784
FX_PARAM32=5152
FX_PARAM33=5552
FX_PARAM34=7680
FX_PARAM35=4064
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=43840
FX_PARAM39=47632
FX_PARAM40=43840
FX_PARAM41=26048
FX_PARAM42=2064
FX_PARAM43=1904
FX_PARAM44=1984
FX_PARAM45=2208
FX_PARAM46=192000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=2866
FX_PARAM58=2615
FX_PARAM59=2715
FX_PARAM60=3017
FX_PARAM61=20676
FX_PARAM62=20676
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=5436254
FX_PARAM66=2952353
FX_PARAM67=0
FX_PARAM68=3354188
FX_PARAM69=3243018
FX_PARAM70=0
FX_PARAM71=3354188
FX_PARAM72=3243018
FX_PARAM73=0
FX_PARAM74=3354188
FX_PARAM75=3243018
FX_PARAM76=0
FX_PARAM77=1318414
FX_PARAM78=6388976
FX_PARAM79=0
FX_PARAM80=1520296
FX_PARAM81=6072255
FX_PARAM82=0
FX_PARAM83=1749662
FX_PARAM84=5716090
FX_PARAM85=0
FX_PARAM86=1977563
FX_PARAM87=5344767
FX_PARAM88=0
FX_PARAM89=5967352
FX_PARAM90=415949
FX_PARAM91=0
FX_PARAM92=5967352
FX_PARAM93=415949
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Concert Hall
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Forest_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=15552
FX_PARAM29=16432
FX_PARAM30=16112
FX_PARAM31=17008
FX_PARAM32=17568
FX_PARAM33=23984
FX_PARAM34=3728
FX_PARAM35=1968
FX_PARAM36=18080
FX_PARAM37=24000
FX_PARAM38=21280
FX_PARAM39=23120
FX_PARAM40=21280
FX_PARAM41=12640
FX_PARAM42=2432
FX_PARAM43=2192
FX_PARAM44=2304
FX_PARAM45=2576
FX_PARAM46=93168
FX_PARAM47=6627000
FX_PARAM48=10150216
FX_PARAM49=10150216
FX_PARAM50=6627000
FX_PARAM51=6627000
FX_PARAM52=6627000
FX_PARAM53=10150216
FX_PARAM54=10150216
FX_PARAM55=1761607
FX_PARAM56=1325400
FX_PARAM57=619
FX_PARAM58=565
FX_PARAM59=587
FX_PARAM60=652
FX_PARAM61=10232
FX_PARAM62=10232
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=8162999
FX_PARAM66=225608
FX_PARAM67=0
FX_PARAM68=5084636
FX_PARAM69=1072843
FX_PARAM70=0
FX_PARAM71=5084636
FX_PARAM72=1072843
FX_PARAM73=0
FX_PARAM74=5084636
FX_PARAM75=1072843
FX_PARAM76=0
FX_PARAM77=1942364
FX_PARAM78=4929543
FX_PARAM79=0
FX_PARAM80=2248816
FX_PARAM81=4437656
FX_PARAM82=0
FX_PARAM83=2597854
FX_PARAM84=3906025
FX_PARAM85=0
FX_PARAM86=2971797
FX_PARAM87=3359260
FX_PARAM88=0
FX_PARAM89=8170313
FX_PARAM90=2426
FX_PARAM91=0
FX_PARAM92=8170313
FX_PARAM93=2426
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Forest
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Forest_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=31104
FX_PARAM29=32880
FX_PARAM30=32240
FX_PARAM31=34032
FX_PARAM32=35152
FX_PARAM33=16880
FX_PARAM34=7456
FX_PARAM35=3952
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=42560
FX_PARAM39=46240
FX_PARAM40=42560
FX_PARAM41=25280
FX_PARAM42=4864
FX_PARAM43=4400
FX_PARAM44=4608
FX_PARAM45=5168
FX_PARAM46=186352
FX_PARAM47=6627000
FX_PARAM48=10150216
FX_PARAM49=10150216
FX_PARAM50=6627000
FX_PARAM51=6627000
FX_PARAM52=6627000
FX_PARAM53=10150216
FX_PARAM54=10150216
FX_PARAM55=1761607
FX_PARAM56=1325400
FX_PARAM57=619
FX_PARAM58=565
FX_PARAM59=587
FX_PARAM60=652
FX_PARAM61=10232
FX_PARAM62=10232
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=8268712
FX_PARAM66=119895
FX_PARAM67=0
FX_PARAM68=6427194
FX_PARAM69=636897
FX_PARAM70=0
FX_PARAM71=6427194
FX_PARAM72=636897
FX_PARAM73=0
FX_PARAM74=6427194
FX_PARAM75=636897
FX_PARAM76=0
FX_PARAM77=3694380
FX_PARAM78=3589749
FX_PARAM79=0
FX_PARAM80=4042153
FX_PARAM81=3141486
FX_PARAM82=0
FX_PARAM83=4406414
FX_PARAM84=2686101
FX_PARAM85=0
FX_PARAM86=4766351
FX_PARAM87=2246359
FX_PARAM88=0
FX_PARAM89=8272624
FX_PARAM90=1289
FX_PARAM91=0
FX_PARAM92=8272624
FX_PARAM93=1289
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Forest
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Generic_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=672
FX_PARAM29=784
FX_PARAM30=736
FX_PARAM31=848
FX_PARAM32=912
FX_PARAM33=1712
FX_PARAM34=3728
FX_PARAM35=1968
FX_PARAM36=18080
FX_PARAM37=24000
FX_PARAM38=21280
FX_PARAM39=23120
FX_PARAM40=21280
FX_PARAM41=12640
FX_PARAM42=608
FX_PARAM43=560
FX_PARAM44=592
FX_PARAM45=656
FX_PARAM46=93168
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=590
FX_PARAM58=538
FX_PARAM59=559
FX_PARAM60=621
FX_PARAM61=26090
FX_PARAM62=26090
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=1104729
FX_PARAM66=7283878
FX_PARAM67=0
FX_PARAM68=1949948
FX_PARAM69=2090718
FX_PARAM70=0
FX_PARAM71=1949948
FX_PARAM72=2090718
FX_PARAM73=0
FX_PARAM74=1949948
FX_PARAM75=2090718
FX_PARAM76=0
FX_PARAM77=573926
FX_PARAM78=5976009
FX_PARAM79=0
FX_PARAM80=682352
FX_PARAM81=5569848
FX_PARAM82=0
FX_PARAM83=818498
FX_PARAM84=5106251
FX_PARAM85=0
FX_PARAM86=959520
FX_PARAM87=4607183
FX_PARAM88=0
FX_PARAM89=4975145
FX_PARAM90=37948
FX_PARAM91=0
FX_PARAM92=4975145
FX_PARAM93=37948
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Generic
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Hallway_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=1344
FX_PARAM29=1568
FX_PARAM30=1488
FX_PARAM31=1712
FX_PARAM32=1840
FX_PARAM33=2096
FX_PARAM34=7456
FX_PARAM35=3952
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=42560
FX_PARAM39=46240
FX_PARAM40=42560
FX_PARAM41=25280
FX_PARAM42=1216
FX_PARAM43=1136
FX_PARAM44=1184
FX_PARAM45=1312
FX_PARAM46=186352
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=2903
FX_PARAM58=2648
FX_PARAM59=2750
FX_PARAM60=3055
FX_PARAM61=34433
FX_PARAM62=34433
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=4450989
FX_PARAM66=3937618
FX_PARAM67=0
FX_PARAM68=6034531
FX_PARAM69=764399
FX_PARAM70=0
FX_PARAM71=6034531
FX_PARAM72=764399
FX_PARAM73=0
FX_PARAM74=6034531
FX_PARAM75=764399
FX_PARAM76=0
FX_PARAM77=3333029
FX_PARAM78=3866080
FX_PARAM79=0
FX_PARAM80=3676323
FX_PARAM81=3405897
FX_PARAM82=0
FX_PARAM83=4026815
FX_PARAM84=2942151
FX_PARAM85=0
FX_PARAM86=4380513
FX_PARAM87=2485638
FX_PARAM88=0
FX_PARAM89=8155203
FX_PARAM90=2594
FX_PARAM91=0
FX_PARAM92=8155203
FX_PARAM93=2594
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Hallway
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Default_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=672
FX_PARAM29=784
FX_PARAM30=736
FX_PARAM31=848
FX_PARAM32=912
FX_PARAM33=1712
FX_PARAM34=3728
FX_PARAM35=1968
FX_PARAM36=18080
FX_PARAM37=24000
FX_PARAM38=21280
FX_PARAM39=23120
FX_PARAM40=21280
FX_PARAM41=12640
FX_PARAM42=608
FX_PARAM43=560
FX_PARAM44=592
FX_PARAM45=656
FX_PARAM46=93168
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=590
FX_PARAM58=538
FX_PARAM59=559
FX_PARAM60=621
FX_PARAM61=26090
FX_PARAM62=26090
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=1104729
FX_PARAM66=7283878
FX_PARAM67=0
FX_PARAM68=1949948
FX_PARAM69=2090718
FX_PARAM70=0
FX_PARAM71=1949948
FX_PARAM72=2090718
FX_PARAM73=0
FX_PARAM74=1949948
FX_PARAM75=2090718
FX_PARAM76=0
FX_PARAM77=573926
FX_PARAM78=5976009
FX_PARAM79=0
FX_PARAM80=682352
FX_PARAM81=5569848
FX_PARAM82=0
FX_PARAM83=818498
FX_PARAM84=5106251
FX_PARAM85=0
FX_PARAM86=959520
FX_PARAM87=4607183
FX_PARAM88=0
FX_PARAM89=4975145
FX_PARAM90=37948
FX_PARAM91=0
FX_PARAM92=4975145
FX_PARAM93=37948
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Default
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Default_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=1344
FX_PARAM29=1568
FX_PARAM30=1488
FX_PARAM31=1712
FX_PARAM32=1840
FX_PARAM33=2096
FX_PARAM34=7456
FX_PARAM35=3952
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=42560
FX_PARAM39=46240
FX_PARAM40=42560
FX_PARAM41=25280
FX_PARAM42=1216
FX_PARAM43=1136
FX_PARAM44=1184
FX_PARAM45=1312
FX_PARAM46=186352
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=590
FX_PARAM58=538
FX_PARAM59=559
FX_PARAM60=621
FX_PARAM61=26090
FX_PARAM62=26090
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=2547821
FX_PARAM66=5840786
FX_PARAM67=0
FX_PARAM68=3703351
FX_PARAM69=1521364
FX_PARAM70=0
FX_PARAM71=3703351
FX_PARAM72=1521364
FX_PARAM73=0
FX_PARAM74=3703351
FX_PARAM75=1521364
FX_PARAM76=0
FX_PARAM77=1568073
FX_PARAM78=5215769
FX_PARAM79=0
FX_PARAM80=1792859
FX_PARAM81=4767208
FX_PARAM82=0
FX_PARAM83=2054999
FX_PARAM84=4272196
FX_PARAM85=0
FX_PARAM86=2306602
FX_PARAM87=3771784
FX_PARAM88=0
FX_PARAM89=6352032
FX_PARAM90=22641
FX_PARAM91=0
FX_PARAM92=6352032
FX_PARAM93=22641
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Default
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Generic_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=1344
FX_PARAM29=1568
FX_PARAM30=1488
FX_PARAM31=1712
FX_PARAM32=1840
FX_PARAM33=2096
FX_PARAM34=7456
FX_PARAM35=3952
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=42560
FX_PARAM39=46240
FX_PARAM40=42560
FX_PARAM41=25280
FX_PARAM42=1216
FX_PARAM43=1136
FX_PARAM44=1184
FX_PARAM45=1312
FX_PARAM46=186352
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=590
FX_PARAM58=538
FX_PARAM59=559
FX_PARAM60=621
FX_PARAM61=26090
FX_PARAM62=26090
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=2547821
FX_PARAM66=5840786
FX_PARAM67=0
FX_PARAM68=3703351
FX_PARAM69=1521364
FX_PARAM70=0
FX_PARAM71=3703351
FX_PARAM72=1521364
FX_PARAM73=0
FX_PARAM74=3703351
FX_PARAM75=1521364
FX_PARAM76=0
FX_PARAM77=1568073
FX_PARAM78=5215769
FX_PARAM79=0
FX_PARAM80=1792859
FX_PARAM81=4767208
FX_PARAM82=0
FX_PARAM83=2054999
FX_PARAM84=4272196
FX_PARAM85=0
FX_PARAM86=2306602
FX_PARAM87=3771784
FX_PARAM88=0
FX_PARAM89=6352032
FX_PARAM90=22641
FX_PARAM91=0
FX_PARAM92=6352032
FX_PARAM93=22641
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Generic
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Hallway_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=672
FX_PARAM29=784
FX_PARAM30=736
FX_PARAM31=848
FX_PARAM32=912
FX_PARAM33=1712
FX_PARAM34=3728
FX_PARAM35=1968
FX_PARAM36=18080
FX_PARAM37=24000
FX_PARAM38=21280
FX_PARAM39=23120
FX_PARAM40=21280
FX_PARAM41=12640
FX_PARAM42=608
FX_PARAM43=560
FX_PARAM44=592
FX_PARAM45=656
FX_PARAM46=93168
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=2903
FX_PARAM58=2648
FX_PARAM59=2750
FX_PARAM60=3055
FX_PARAM61=34433
FX_PARAM62=34433
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=2642582
FX_PARAM66=5746025
FX_PARAM67=0
FX_PARAM68=4523156
FX_PARAM69=1255163
FX_PARAM70=0
FX_PARAM71=4523156
FX_PARAM72=1255163
FX_PARAM73=0
FX_PARAM74=4523156
FX_PARAM75=1255163
FX_PARAM76=0
FX_PARAM77=1650658
FX_PARAM78=5152616
FX_PARAM79=0
FX_PARAM80=1919521
FX_PARAM81=4675660
FX_PARAM82=0
FX_PARAM83=2234755
FX_PARAM84=4150945
FX_PARAM85=0
FX_PARAM86=2572068
FX_PARAM87=3607154
FX_PARAM88=0
FX_PARAM89=7951620
FX_PARAM90=4858
FX_PARAM91=0
FX_PARAM92=7951620
FX_PARAM93=4858
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Hallway
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Mountains_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=28800
FX_PARAM29=29808
FX_PARAM30=29440
FX_PARAM31=30464
FX_PARAM32=31104
FX_PARAM33=38400
FX_PARAM34=3728
FX_PARAM35=1968
FX_PARAM36=18080
FX_PARAM37=24000
FX_PARAM38=21280
FX_PARAM39=23120
FX_PARAM40=21280
FX_PARAM41=12640
FX_PARAM42=2720
FX_PARAM43=2448
FX_PARAM44=2560
FX_PARAM45=2880
FX_PARAM46=93168
FX_PARAM47=2264924
FX_PARAM48=14512292
FX_PARAM49=14512292
FX_PARAM50=2264924
FX_PARAM51=2264924
FX_PARAM52=2264924
FX_PARAM53=14512292
FX_PARAM54=14512292
FX_PARAM55=6123683
FX_PARAM56=452984
FX_PARAM57=481
FX_PARAM58=439
FX_PARAM59=455
FX_PARAM60=506
FX_PARAM61=2039
FX_PARAM62=2039
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=7832746
FX_PARAM66=555861
FX_PARAM67=0
FX_PARAM68=8241421
FX_PARAM69=47793
FX_PARAM70=0
FX_PARAM71=8241421
FX_PARAM72=47793
FX_PARAM73=0
FX_PARAM74=8241421
FX_PARAM75=47793
FX_PARAM76=0
FX_PARAM77=5239210
FX_PARAM78=2408394
FX_PARAM79=0
FX_PARAM80=5779891
FX_PARAM81=1885501
FX_PARAM82=0
FX_PARAM83=6328549
FX_PARAM84=1389567
FX_PARAM85=0
FX_PARAM86=6841821
FX_PARAM87=959246
FX_PARAM88=0
FX_PARAM89=8388607
FX_PARAM90=0
FX_PARAM91=0
FX_PARAM92=8388607
FX_PARAM93=0
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Mountains
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Living_Room_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=576
FX_PARAM29=656
FX_PARAM30=624
FX_PARAM31=704
FX_PARAM32=752
FX_PARAM33=768
FX_PARAM34=896
FX_PARAM35=464
FX_PARAM36=6032
FX_PARAM37=8016
FX_PARAM38=5152
FX_PARAM39=5600
FX_PARAM40=5152
FX_PARAM41=3056
FX_PARAM42=880
FX_PARAM43=848
FX_PARAM44=880
FX_PARAM45=960
FX_PARAM46=22576
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=2423
FX_PARAM58=2210
FX_PARAM59=2295
FX_PARAM60=2550
FX_PARAM61=5814
FX_PARAM62=5814
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=8383217
FX_PARAM66=5391
FX_PARAM67=0
FX_PARAM68=8250298
FX_PARAM69=92226
FX_PARAM70=0
FX_PARAM71=8250298
FX_PARAM72=92226
FX_PARAM73=0
FX_PARAM74=8250298
FX_PARAM75=92226
FX_PARAM76=0
FX_PARAM77=8384629
FX_PARAM78=1785
FX_PARAM79=0
FX_PARAM80=8387740
FX_PARAM81=329
FX_PARAM82=0
FX_PARAM83=8388472
FX_PARAM84=41
FX_PARAM85=0
FX_PARAM86=8388593
FX_PARAM87=3
FX_PARAM88=0
FX_PARAM89=8388605
FX_PARAM90=0
FX_PARAM91=0
FX_PARAM92=8388605
FX_PARAM93=0
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Living Room
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Hangar_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=1904
FX_PARAM29=2208
FX_PARAM30=2096
FX_PARAM31=2400
FX_PARAM32=2592
FX_PARAM33=4768
FX_PARAM34=3840
FX_PARAM35=2032
FX_PARAM36=18096
FX_PARAM37=24000
FX_PARAM38=21920
FX_PARAM39=23824
FX_PARAM40=21920
FX_PARAM41=13024
FX_PARAM42=1056
FX_PARAM43=976
FX_PARAM44=1008
FX_PARAM45=1120
FX_PARAM46=96000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=5906
FX_PARAM58=5388
FX_PARAM59=5595
FX_PARAM60=6217
FX_PARAM61=26030
FX_PARAM62=26030
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=5605613
FX_PARAM66=2782994
FX_PARAM67=0
FX_PARAM68=3741908
FX_PARAM69=3914214
FX_PARAM70=0
FX_PARAM71=3741908
FX_PARAM72=3914214
FX_PARAM73=0
FX_PARAM74=3741908
FX_PARAM75=3914214
FX_PARAM76=0
FX_PARAM77=1253492
FX_PARAM78=6861215
FX_PARAM79=0
FX_PARAM80=1474556
FX_PARAM81=6595270
FX_PARAM82=0
FX_PARAM83=1723689
FX_PARAM84=6292088
FX_PARAM85=0
FX_PARAM86=1995146
FX_PARAM87=5959860
FX_PARAM88=0
FX_PARAM89=7420903
FX_PARAM90=486679
FX_PARAM91=0
FX_PARAM92=7420903
FX_PARAM93=486679
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Hangar
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Hangar_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=3824
FX_PARAM29=4432
FX_PARAM30=4208
FX_PARAM31=4816
FX_PARAM32=5200
FX_PARAM33=5744
FX_PARAM34=7680
FX_PARAM35=4064
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=43840
FX_PARAM39=47632
FX_PARAM40=43840
FX_PARAM41=26048
FX_PARAM42=2112
FX_PARAM43=1936
FX_PARAM44=2032
FX_PARAM45=2256
FX_PARAM46=192000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=5906
FX_PARAM58=5388
FX_PARAM59=5595
FX_PARAM60=6217
FX_PARAM61=26030
FX_PARAM62=26030
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=6773307
FX_PARAM66=1615300
FX_PARAM67=0
FX_PARAM68=5432341
FX_PARAM69=2490253
FX_PARAM70=0
FX_PARAM71=5432341
FX_PARAM72=2490253
FX_PARAM73=0
FX_PARAM74=5432341
FX_PARAM75=2490253
FX_PARAM76=0
FX_PARAM77=2778974
FX_PARAM78=5394292
FX_PARAM79=0
FX_PARAM80=3097415
FX_PARAM81=5047235
FX_PARAM82=0
FX_PARAM83=3426655
FX_PARAM84=4684385
FX_PARAM85=0
FX_PARAM86=3765125
FX_PARAM87=4309920
FX_PARAM88=0
FX_PARAM89=7862650
FX_PARAM90=264515
FX_PARAM91=0
FX_PARAM92=7862650
FX_PARAM93=264515
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Hangar
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Living_Room_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=288
FX_PARAM29=320
FX_PARAM30=304
FX_PARAM31=352
FX_PARAM32=384
FX_PARAM33=672
FX_PARAM34=448
FX_PARAM35=224
FX_PARAM36=3024
FX_PARAM37=4016
FX_PARAM38=2576
FX_PARAM39=2800
FX_PARAM40=2576
FX_PARAM41=1520
FX_PARAM42=448
FX_PARAM43=416
FX_PARAM44=432
FX_PARAM45=480
FX_PARAM46=11280
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=2423
FX_PARAM58=2210
FX_PARAM59=2295
FX_PARAM60=2550
FX_PARAM61=5814
FX_PARAM62=5814
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=8378401
FX_PARAM66=10207
FX_PARAM67=0
FX_PARAM68=8128016
FX_PARAM69=173764
FX_PARAM70=0
FX_PARAM71=8128016
FX_PARAM72=173764
FX_PARAM73=0
FX_PARAM74=8128016
FX_PARAM75=173764
FX_PARAM76=0
FX_PARAM77=8381075
FX_PARAM78=3380
FX_PARAM79=0
FX_PARAM80=8386948
FX_PARAM81=629
FX_PARAM82=0
FX_PARAM83=8388351
FX_PARAM84=79
FX_PARAM85=0
FX_PARAM86=8388580
FX_PARAM87=6
FX_PARAM88=0
FX_PARAM89=8388603
FX_PARAM90=0
FX_PARAM91=0
FX_PARAM92=8388603
FX_PARAM93=0
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Living Room
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_largeroo_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=125119
FX_PARAM26=0
FX_PARAM27=125119
FX_PARAM28=3824
FX_PARAM29=4624
FX_PARAM30=4336
FX_PARAM31=5152
FX_PARAM32=5664
FX_PARAM33=7664
FX_PARAM34=7680
FX_PARAM35=4064
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=43840
FX_PARAM39=47632
FX_PARAM40=43840
FX_PARAM41=26048
FX_PARAM42=2592
FX_PARAM43=2368
FX_PARAM44=2480
FX_PARAM45=2752
FX_PARAM46=125120
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=1872
FX_PARAM58=1707
FX_PARAM59=1773
FX_PARAM60=1970
FX_PARAM61=6553
FX_PARAM62=6553
FX_PARAM63=2
FX_PARAM64=0
FX_PARAM65=5792997
FX_PARAM66=2595611
FX_PARAM67=0
FX_PARAM68=3738868
FX_PARAM69=1470376
FX_PARAM70=0
FX_PARAM71=3738868
FX_PARAM72=1470376
FX_PARAM73=0
FX_PARAM74=3738868
FX_PARAM75=1470376
FX_PARAM76=0
FX_PARAM77=1544311
FX_PARAM78=5239970
FX_PARAM79=0
FX_PARAM80=1771365
FX_PARAM81=4788253
FX_PARAM82=0
FX_PARAM83=2035890
FX_PARAM84=4294964
FX_PARAM85=0
FX_PARAM86=2289546
FX_PARAM87=3791080
FX_PARAM88=0
FX_PARAM89=6397059
FX_PARAM90=19915
FX_PARAM91=0
FX_PARAM92=6397059
FX_PARAM93=19915
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=largeroo I3DL2 Reverb
FX_CONFIG_NAME=largeroo
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Mountains_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=57600
FX_PARAM29=59616
FX_PARAM30=58896
FX_PARAM31=60928
FX_PARAM32=62208
FX_PARAM33=19200
FX_PARAM34=7456
FX_PARAM35=3952
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=42560
FX_PARAM39=46240
FX_PARAM40=42560
FX_PARAM41=25280
FX_PARAM42=5440
FX_PARAM43=4912
FX_PARAM44=5136
FX_PARAM45=5760
FX_PARAM46=186352
FX_PARAM47=2264924
FX_PARAM48=14512292
FX_PARAM49=14512292
FX_PARAM50=2264924
FX_PARAM51=2264924
FX_PARAM52=2264924
FX_PARAM53=14512292
FX_PARAM54=14512292
FX_PARAM55=6123683
FX_PARAM56=452984
FX_PARAM57=481
FX_PARAM58=439
FX_PARAM59=455
FX_PARAM60=506
FX_PARAM61=2039
FX_PARAM62=2039
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=8090314
FX_PARAM66=298294
FX_PARAM67=0
FX_PARAM68=8310564
FX_PARAM69=25341
FX_PARAM70=0
FX_PARAM71=8310564
FX_PARAM72=25341
FX_PARAM73=0
FX_PARAM74=8310564
FX_PARAM75=25341
FX_PARAM76=0
FX_PARAM77=6531814
FX_PARAM78=1419919
FX_PARAM79=0
FX_PARAM80=6888610
FX_PARAM81=1084152
FX_PARAM82=0
FX_PARAM83=7226259
FX_PARAM84=784036
FX_PARAM85=0
FX_PARAM86=7532643
FX_PARAM87=530830
FX_PARAM88=0
FX_PARAM89=8388608
FX_PARAM90=0
FX_PARAM91=0
FX_PARAM92=8388608
FX_PARAM93=0
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Mountains
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Padded_Cell_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=96
FX_PARAM29=112
FX_PARAM30=112
FX_PARAM31=128
FX_PARAM32=144
FX_PARAM33=288
FX_PARAM34=448
FX_PARAM35=224
FX_PARAM36=3024
FX_PARAM37=4016
FX_PARAM38=2576
FX_PARAM39=2800
FX_PARAM40=2576
FX_PARAM41=1520
FX_PARAM42=400
FX_PARAM43=368
FX_PARAM44=400
FX_PARAM45=432
FX_PARAM46=11280
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=2953
FX_PARAM58=2694
FX_PARAM59=2798
FX_PARAM60=3109
FX_PARAM61=26301
FX_PARAM62=26301
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=8378401
FX_PARAM66=10207
FX_PARAM67=0
FX_PARAM68=8388387
FX_PARAM69=66
FX_PARAM70=0
FX_PARAM71=8388387
FX_PARAM72=66
FX_PARAM73=0
FX_PARAM74=8388387
FX_PARAM75=66
FX_PARAM76=0
FX_PARAM77=8388608
FX_PARAM78=0
FX_PARAM79=0
FX_PARAM80=8388608
FX_PARAM81=0
FX_PARAM82=0
FX_PARAM83=8388608
FX_PARAM84=0
FX_PARAM85=0
FX_PARAM86=8388608
FX_PARAM87=0
FX_PARAM88=0
FX_PARAM89=8388608
FX_PARAM90=0
FX_PARAM91=0
FX_PARAM92=8388608
FX_PARAM93=0
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Padded Cell
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Parking_Lot_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=768
FX_PARAM29=880
FX_PARAM30=848
FX_PARAM31=960
FX_PARAM32=1040
FX_PARAM33=1920
FX_PARAM34=3840
FX_PARAM35=2032
FX_PARAM36=18096
FX_PARAM37=24000
FX_PARAM38=21920
FX_PARAM39=23824
FX_PARAM40=21920
FX_PARAM41=13024
FX_PARAM42=624
FX_PARAM43=592
FX_PARAM44=608
FX_PARAM45=672
FX_PARAM46=96000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=2459
FX_PARAM58=2243
FX_PARAM59=2330
FX_PARAM60=2588
FX_PARAM61=5495
FX_PARAM62=5495
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=0
FX_PARAM66=8388608
FX_PARAM67=0
FX_PARAM68=0
FX_PARAM69=2945709
FX_PARAM70=0
FX_PARAM71=0
FX_PARAM72=2945709
FX_PARAM73=0
FX_PARAM74=0
FX_PARAM75=2945709
FX_PARAM76=0
FX_PARAM77=0
FX_PARAM78=6587034
FX_PARAM79=0
FX_PARAM80=0
FX_PARAM81=6254461
FX_PARAM82=0
FX_PARAM83=0
FX_PARAM84=5877463
FX_PARAM85=0
FX_PARAM86=0
FX_PARAM87=5447408
FX_PARAM88=0
FX_PARAM89=0
FX_PARAM90=127552
FX_PARAM91=0
FX_PARAM92=0
FX_PARAM93=127552
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Parking Lot
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Plain_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=34368
FX_PARAM29=36384
FX_PARAM30=35664
FX_PARAM31=37696
FX_PARAM32=38976
FX_PARAM33=19200
FX_PARAM34=7456
FX_PARAM35=3952
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=42560
FX_PARAM39=46240
FX_PARAM40=42560
FX_PARAM41=25280
FX_PARAM42=5440
FX_PARAM43=4912
FX_PARAM44=5136
FX_PARAM45=5760
FX_PARAM46=186352
FX_PARAM47=1761607
FX_PARAM48=15015609
FX_PARAM49=15015609
FX_PARAM50=1761607
FX_PARAM51=1761607
FX_PARAM52=1761607
FX_PARAM53=15015609
FX_PARAM54=15015609
FX_PARAM55=6627000
FX_PARAM56=352321
FX_PARAM57=690
FX_PARAM58=630
FX_PARAM59=654
FX_PARAM60=727
FX_PARAM61=1146
FX_PARAM62=1146
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=7863832
FX_PARAM66=524775
FX_PARAM67=0
FX_PARAM68=6730228
FX_PARAM69=538497
FX_PARAM70=0
FX_PARAM71=6730228
FX_PARAM72=538497
FX_PARAM73=0
FX_PARAM74=6730228
FX_PARAM75=538497
FX_PARAM76=0
FX_PARAM77=3987980
FX_PARAM78=3365228
FX_PARAM79=0
FX_PARAM80=4341056
FX_PARAM81=2925448
FX_PARAM82=0
FX_PARAM83=4705847
FX_PARAM84=2484125
FX_PARAM85=0
FX_PARAM86=5077889
FX_PARAM87=2053157
FX_PARAM88=0
FX_PARAM89=8328864
FX_PARAM90=664
FX_PARAM91=0
FX_PARAM92=8328864
FX_PARAM93=664
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Plain
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Quarry_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=5856
FX_PARAM29=6112
FX_PARAM30=6016
FX_PARAM31=6272
FX_PARAM32=6432
FX_PARAM33=8256
FX_PARAM34=3728
FX_PARAM35=1968
FX_PARAM36=18080
FX_PARAM37=24000
FX_PARAM38=21280
FX_PARAM39=23120
FX_PARAM40=21280
FX_PARAM41=12640
FX_PARAM42=944
FX_PARAM43=864
FX_PARAM44=896
FX_PARAM45=1008
FX_PARAM46=93168
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=0
FX_PARAM58=0
FX_PARAM59=0
FX_PARAM60=0
FX_PARAM61=36853
FX_PARAM62=36853
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=5605613
FX_PARAM66=2782994
FX_PARAM67=0
FX_PARAM68=1949948
FX_PARAM69=2090718
FX_PARAM70=0
FX_PARAM71=1949948
FX_PARAM72=2090718
FX_PARAM73=0
FX_PARAM74=1949948
FX_PARAM75=2090718
FX_PARAM76=0
FX_PARAM77=573926
FX_PARAM78=5976009
FX_PARAM79=0
FX_PARAM80=682352
FX_PARAM81=5569848
FX_PARAM82=0
FX_PARAM83=818498
FX_PARAM84=5106251
FX_PARAM85=0
FX_PARAM86=959520
FX_PARAM87=4607183
FX_PARAM88=0
FX_PARAM89=4975145
FX_PARAM90=37948
FX_PARAM91=0
FX_PARAM92=4975145
FX_PARAM93=37948
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Quarry
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Quarry_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=11712
FX_PARAM29=12208
FX_PARAM30=12032
FX_PARAM31=12544
FX_PARAM32=12864
FX_PARAM33=4800
FX_PARAM34=7456
FX_PARAM35=3952
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=42560
FX_PARAM39=46240
FX_PARAM40=42560
FX_PARAM41=25280
FX_PARAM42=1888
FX_PARAM43=1728
FX_PARAM44=1808
FX_PARAM45=2000
FX_PARAM46=186352
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=0
FX_PARAM58=0
FX_PARAM59=0
FX_PARAM60=0
FX_PARAM61=36853
FX_PARAM62=36853
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=6773307
FX_PARAM66=1615300
FX_PARAM67=0
FX_PARAM68=3703351
FX_PARAM69=1521364
FX_PARAM70=0
FX_PARAM71=3703351
FX_PARAM72=1521364
FX_PARAM73=0
FX_PARAM74=3703351
FX_PARAM75=1521364
FX_PARAM76=0
FX_PARAM77=1568073
FX_PARAM78=5215769
FX_PARAM79=0
FX_PARAM80=1792859
FX_PARAM81=4767208
FX_PARAM82=0
FX_PARAM83=2054999
FX_PARAM84=4272196
FX_PARAM85=0
FX_PARAM86=2306602
FX_PARAM87=3771784
FX_PARAM88=0
FX_PARAM89=6352032
FX_PARAM90=22641
FX_PARAM91=0
FX_PARAM92=6352032
FX_PARAM93=22641
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Quarry
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Parking_Lot_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=1536
FX_PARAM29=1776
FX_PARAM30=1680
FX_PARAM31=1936
FX_PARAM32=2080
FX_PARAM33=2304
FX_PARAM34=7680
FX_PARAM35=4064
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=43840
FX_PARAM39=47632
FX_PARAM40=43840
FX_PARAM41=26048
FX_PARAM42=1264
FX_PARAM43=1184
FX_PARAM44=1232
FX_PARAM45=1360
FX_PARAM46=192000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=2459
FX_PARAM58=2243
FX_PARAM59=2330
FX_PARAM60=2588
FX_PARAM61=5495
FX_PARAM62=5495
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=0
FX_PARAM66=8388608
FX_PARAM67=0
FX_PARAM68=0
FX_PARAM69=2945709
FX_PARAM70=0
FX_PARAM71=0
FX_PARAM72=2945709
FX_PARAM73=0
FX_PARAM74=0
FX_PARAM75=2945709
FX_PARAM76=0
FX_PARAM77=0
FX_PARAM78=6587034
FX_PARAM79=0
FX_PARAM80=0
FX_PARAM81=6254461
FX_PARAM82=0
FX_PARAM83=0
FX_PARAM84=5877463
FX_PARAM85=0
FX_PARAM86=0
FX_PARAM87=5447408
FX_PARAM88=0
FX_PARAM89=0
FX_PARAM90=127552
FX_PARAM91=0
FX_PARAM92=0
FX_PARAM93=127552
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Parking Lot
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Padded_Cell_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=192
FX_PARAM29=224
FX_PARAM30=208
FX_PARAM31=256
FX_PARAM32=288
FX_PARAM33=384
FX_PARAM34=896
FX_PARAM35=464
FX_PARAM36=6032
FX_PARAM37=8016
FX_PARAM38=5152
FX_PARAM39=5600
FX_PARAM40=5152
FX_PARAM41=3056
FX_PARAM42=784
FX_PARAM43=752
FX_PARAM44=784
FX_PARAM45=848
FX_PARAM46=22576
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=2953
FX_PARAM58=2694
FX_PARAM59=2798
FX_PARAM60=3109
FX_PARAM61=26301
FX_PARAM62=26301
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=8383217
FX_PARAM66=5391
FX_PARAM67=0
FX_PARAM68=8388492
FX_PARAM69=35
FX_PARAM70=0
FX_PARAM71=8388492
FX_PARAM72=35
FX_PARAM73=0
FX_PARAM74=8388492
FX_PARAM75=35
FX_PARAM76=0
FX_PARAM77=8388608
FX_PARAM78=0
FX_PARAM79=0
FX_PARAM80=8388608
FX_PARAM81=0
FX_PARAM82=0
FX_PARAM83=8388608
FX_PARAM84=0
FX_PARAM85=0
FX_PARAM86=8388608
FX_PARAM87=0
FX_PARAM88=0
FX_PARAM89=8388608
FX_PARAM90=0
FX_PARAM91=0
FX_PARAM92=8388608
FX_PARAM93=0
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Padded Cell
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Plain_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=17184
FX_PARAM29=18192
FX_PARAM30=17824
FX_PARAM31=18848
FX_PARAM32=19488
FX_PARAM33=26784
FX_PARAM34=3728
FX_PARAM35=1968
FX_PARAM36=18080
FX_PARAM37=24000
FX_PARAM38=21280
FX_PARAM39=23120
FX_PARAM40=21280
FX_PARAM41=12640
FX_PARAM42=2720
FX_PARAM43=2448
FX_PARAM44=2560
FX_PARAM45=2880
FX_PARAM46=93168
FX_PARAM47=1761607
FX_PARAM48=15015609
FX_PARAM49=15015609
FX_PARAM50=1761607
FX_PARAM51=1761607
FX_PARAM52=1761607
FX_PARAM53=15015609
FX_PARAM54=15015609
FX_PARAM55=6627000
FX_PARAM56=352321
FX_PARAM57=690
FX_PARAM58=630
FX_PARAM59=654
FX_PARAM60=727
FX_PARAM61=1146
FX_PARAM62=1146
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=7423014
FX_PARAM66=965594
FX_PARAM67=0
FX_PARAM68=5539273
FX_PARAM69=925216
FX_PARAM70=0
FX_PARAM71=5539273
FX_PARAM72=925216
FX_PARAM73=0
FX_PARAM74=5539273
FX_PARAM75=925216
FX_PARAM76=0
FX_PARAM77=2199382
FX_PARAM78=4732998
FX_PARAM79=0
FX_PARAM80=2533073
FX_PARAM81=4232203
FX_PARAM82=0
FX_PARAM83=2906888
FX_PARAM84=3697573
FX_PARAM85=0
FX_PARAM86=3313906
FX_PARAM87=3147100
FX_PARAM88=0
FX_PARAM89=8275822
FX_PARAM90=1253
FX_PARAM91=0
FX_PARAM92=8275822
FX_PARAM93=1253
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Plain
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Room_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=192
FX_PARAM29=224
FX_PARAM30=208
FX_PARAM31=240
FX_PARAM32=256
FX_PARAM33=480
FX_PARAM34=448
FX_PARAM35=224
FX_PARAM36=3024
FX_PARAM37=4016
FX_PARAM38=2576
FX_PARAM39=2800
FX_PARAM40=2576
FX_PARAM41=1520
FX_PARAM42=416
FX_PARAM43=400
FX_PARAM44=416
FX_PARAM45=448
FX_PARAM46=11280
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=1775
FX_PARAM58=1619
FX_PARAM59=1682
FX_PARAM60=1869
FX_PARAM61=22028
FX_PARAM62=22028
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=3518317
FX_PARAM66=4870290
FX_PARAM67=0
FX_PARAM68=1008573
FX_PARAM69=4446910
FX_PARAM70=0
FX_PARAM71=1008573
FX_PARAM72=4446910
FX_PARAM73=0
FX_PARAM74=1008573
FX_PARAM75=4446910
FX_PARAM76=0
FX_PARAM77=1787451
FX_PARAM78=2427280
FX_PARAM79=0
FX_PARAM80=2069322
FX_PARAM81=1882209
FX_PARAM82=0
FX_PARAM83=2393498
FX_PARAM84=1378152
FX_PARAM85=0
FX_PARAM86=2749168
FX_PARAM87=950027
FX_PARAM88=0
FX_PARAM89=3012564
FX_PARAM90=707070
FX_PARAM91=0
FX_PARAM92=3012564
FX_PARAM93=707070
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Room
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Stone_Corridor_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=1248
FX_PARAM29=1440
FX_PARAM30=1376
FX_PARAM31=1568
FX_PARAM32=1696
FX_PARAM33=3152
FX_PARAM34=3840
FX_PARAM35=2032
FX_PARAM36=18096
FX_PARAM37=24000
FX_PARAM38=21920
FX_PARAM39=23824
FX_PARAM40=21920
FX_PARAM41=13024
FX_PARAM42=816
FX_PARAM43=752
FX_PARAM44=800
FX_PARAM45=880
FX_PARAM46=96000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=2919
FX_PARAM58=2663
FX_PARAM59=2766
FX_PARAM60=3073
FX_PARAM61=32657
FX_PARAM62=32657
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=2220644
FX_PARAM66=6167963
FX_PARAM67=0
FX_PARAM68=1534177
FX_PARAM69=3618023
FX_PARAM70=0
FX_PARAM71=1534177
FX_PARAM72=3618023
FX_PARAM73=0
FX_PARAM74=1534177
FX_PARAM75=3618023
FX_PARAM76=0
FX_PARAM77=427738
FX_PARAM78=6870059
FX_PARAM79=0
FX_PARAM80=507219
FX_PARAM81=6593299
FX_PARAM82=0
FX_PARAM83=595881
FX_PARAM84=6268872
FX_PARAM85=0
FX_PARAM86=714239
FX_PARAM87=5895799
FX_PARAM88=0
FX_PARAM89=4158783
FX_PARAM90=327583
FX_PARAM91=0
FX_PARAM92=4158783
FX_PARAM93=327583
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Stone Corridor
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Sewer_Pipe_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=2688
FX_PARAM29=3104
FX_PARAM30=2960
FX_PARAM31=3376
FX_PARAM32=3648
FX_PARAM33=4016
FX_PARAM34=7680
FX_PARAM35=4064
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=43840
FX_PARAM39=47632
FX_PARAM40=43840
FX_PARAM41=26048
FX_PARAM42=1696
FX_PARAM43=1568
FX_PARAM44=1632
FX_PARAM45=1808
FX_PARAM46=192000
FX_PARAM47=6710886
FX_PARAM48=10066330
FX_PARAM49=10066330
FX_PARAM50=6710886
FX_PARAM51=6710886
FX_PARAM52=6710886
FX_PARAM53=10066330
FX_PARAM54=10066330
FX_PARAM55=1677721
FX_PARAM56=1342177
FX_PARAM57=19357
FX_PARAM58=17659
FX_PARAM59=18338
FX_PARAM60=20376
FX_PARAM61=43699
FX_PARAM62=43699
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=6773307
FX_PARAM66=1615300
FX_PARAM67=0
FX_PARAM68=8265799
FX_PARAM69=66486
FX_PARAM70=0
FX_PARAM71=8265799
FX_PARAM72=66486
FX_PARAM73=0
FX_PARAM74=8265799
FX_PARAM75=66486
FX_PARAM76=0
FX_PARAM77=6255754
FX_PARAM78=1851233
FX_PARAM79=0
FX_PARAM80=6619935
FX_PARAM81=1488152
FX_PARAM82=0
FX_PARAM83=6974493
FX_PARAM84=1148113
FX_PARAM85=0
FX_PARAM86=7305599
FX_PARAM87=840682
FX_PARAM88=0
FX_PARAM89=8388606
FX_PARAM90=0
FX_PARAM91=0
FX_PARAM92=8388606
FX_PARAM93=0
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Sewer Pipe
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Room_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=384
FX_PARAM29=448
FX_PARAM30=416
FX_PARAM31=480
FX_PARAM32=512
FX_PARAM33=576
FX_PARAM34=896
FX_PARAM35=464
FX_PARAM36=6032
FX_PARAM37=8016
FX_PARAM38=5152
FX_PARAM39=5600
FX_PARAM40=5152
FX_PARAM41=3056
FX_PARAM42=832
FX_PARAM43=800
FX_PARAM44=832
FX_PARAM45=896
FX_PARAM46=22576
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=1775
FX_PARAM58=1619
FX_PARAM59=1682
FX_PARAM60=1869
FX_PARAM61=22028
FX_PARAM62=22028
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=5247874
FX_PARAM66=3140733
FX_PARAM67=0
FX_PARAM68=2406271
FX_PARAM69=3604714
FX_PARAM70=0
FX_PARAM71=2406271
FX_PARAM72=3604714
FX_PARAM73=0
FX_PARAM74=2406271
FX_PARAM75=3604714
FX_PARAM76=0
FX_PARAM77=3506603
FX_PARAM78=1795139
FX_PARAM79=0
FX_PARAM80=3842019
FX_PARAM81=1352650
FX_PARAM82=0
FX_PARAM83=4196861
FX_PARAM84=963596
FX_PARAM85=0
FX_PARAM86=4555473
FX_PARAM87=644991
FX_PARAM88=0
FX_PARAM89=4809278
FX_PARAM90=470220
FX_PARAM91=0
FX_PARAM92=4809278
FX_PARAM93=470220
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Room
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Stone_Room_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=1152
FX_PARAM29=1312
FX_PARAM30=1264
FX_PARAM31=1424
FX_PARAM32=1536
FX_PARAM33=2784
FX_PARAM34=3840
FX_PARAM35=2032
FX_PARAM36=18096
FX_PARAM37=24000
FX_PARAM38=21920
FX_PARAM39=23824
FX_PARAM40=21920
FX_PARAM41=13024
FX_PARAM42=752
FX_PARAM43=688
FX_PARAM44=720
FX_PARAM45=800
FX_PARAM46=96000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=5210
FX_PARAM58=4753
FX_PARAM59=4935
FX_PARAM60=5484
FX_PARAM61=22802
FX_PARAM62=22802
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=2642582
FX_PARAM66=5746025
FX_PARAM67=0
FX_PARAM68=3035675
FX_PARAM69=2535664
FX_PARAM70=0
FX_PARAM71=3035675
FX_PARAM72=2535664
FX_PARAM73=0
FX_PARAM74=3035675
FX_PARAM75=2535664
FX_PARAM76=0
FX_PARAM77=959520
FX_PARAM78=6250798
FX_PARAM79=0
FX_PARAM80=1123659
FX_PARAM81=5891590
FX_PARAM82=0
FX_PARAM83=1325676
FX_PARAM84=5476272
FX_PARAM85=0
FX_PARAM86=1559441
FX_PARAM87=5021896
FX_PARAM88=0
FX_PARAM89=6665250
FX_PARAM90=86671
FX_PARAM91=0
FX_PARAM92=6665250
FX_PARAM93=86671
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Stone Room
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Stone_Room_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=2304
FX_PARAM29=2640
FX_PARAM30=2512
FX_PARAM31=2864
FX_PARAM32=3088
FX_PARAM33=3264
FX_PARAM34=7680
FX_PARAM35=4064
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=43840
FX_PARAM39=47632
FX_PARAM40=43840
FX_PARAM41=26048
FX_PARAM42=1504
FX_PARAM43=1392
FX_PARAM44=1456
FX_PARAM45=1600
FX_PARAM46=192000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=5210
FX_PARAM58=4753
FX_PARAM59=4935
FX_PARAM60=5484
FX_PARAM61=22802
FX_PARAM62=22802
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=4450989
FX_PARAM66=3937618
FX_PARAM67=0
FX_PARAM68=4825150
FX_PARAM69=1687996
FX_PARAM70=0
FX_PARAM71=4825150
FX_PARAM72=1687996
FX_PARAM73=0
FX_PARAM74=4825150
FX_PARAM75=1687996
FX_PARAM76=0
FX_PARAM77=2306602
FX_PARAM78=5117370
FX_PARAM79=0
FX_PARAM80=2593054
FX_PARAM81=4699968
FX_PARAM82=0
FX_PARAM83=2886013
FX_PARAM84=4266459
FX_PARAM85=0
FX_PARAM86=3212807
FX_PARAM87=3801697
FX_PARAM88=0
FX_PARAM89=7427981
FX_PARAM90=48311
FX_PARAM91=0
FX_PARAM92=7427981
FX_PARAM93=48311
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Stone Room
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Sewer_Pipe_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=1344
FX_PARAM29=1552
FX_PARAM30=1472
FX_PARAM31=1680
FX_PARAM32=1824
FX_PARAM33=3344
FX_PARAM34=3840
FX_PARAM35=2032
FX_PARAM36=18096
FX_PARAM37=24000
FX_PARAM38=21920
FX_PARAM39=23824
FX_PARAM40=21920
FX_PARAM41=13024
FX_PARAM42=848
FX_PARAM43=784
FX_PARAM44=816
FX_PARAM45=896
FX_PARAM46=96000
FX_PARAM47=6710886
FX_PARAM48=10066330
FX_PARAM49=10066330
FX_PARAM50=6710886
FX_PARAM51=6710886
FX_PARAM52=6710886
FX_PARAM53=10066330
FX_PARAM54=10066330
FX_PARAM55=1677721
FX_PARAM56=1342177
FX_PARAM57=19357
FX_PARAM58=17659
FX_PARAM59=18338
FX_PARAM60=20376
FX_PARAM61=43699
FX_PARAM62=43699
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=5605613
FX_PARAM66=2782994
FX_PARAM67=0
FX_PARAM68=8157552
FX_PARAM69=125088
FX_PARAM70=0
FX_PARAM71=8157552
FX_PARAM72=125088
FX_PARAM73=0
FX_PARAM74=8157552
FX_PARAM75=125088
FX_PARAM76=0
FX_PARAM77=4836807
FX_PARAM78=3082823
FX_PARAM79=0
FX_PARAM80=5371362
FX_PARAM81=2541620
FX_PARAM82=0
FX_PARAM83=5921011
FX_PARAM84=2003430
FX_PARAM85=0
FX_PARAM86=6457884
FX_PARAM87=1498719
FX_PARAM88=0
FX_PARAM89=8388605
FX_PARAM90=0
FX_PARAM91=0
FX_PARAM92=8388605
FX_PARAM93=0
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Sewer Pipe
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\xtalkstate.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=0
FX_NUMINPUTS=4
FX_NUMOUTPUTS=4
FX_DSPCYCLES=3000
FX_YMEMSIZE=0
FX_NUMPARAMS=80
FX_NUMPUBLICPARAMS=0
FX_PARAM0=0
FX_PARAM1=0

; DSPBuilder settings
FX_NAME=XTalk
FX_DSPCODE=xtalk.scr
FX_INPUT0_NAME=Front Left
FX_INPUT1_NAME=Front Right
FX_INPUT2_NAME=Back Left
FX_INPUT3_NAME=Back Right
FX_OUTPUT0_NAME=Front Left
FX_OUTPUT1_NAME=Front Right
FX_OUTPUT2_NAME=Back Left
FX_OUTPUT3_NAME=Back Right
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Stone_Corridor_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=2496
FX_PARAM29=2896
FX_PARAM30=2752
FX_PARAM31=3152
FX_PARAM32=3408
FX_PARAM33=3824
FX_PARAM34=7680
FX_PARAM35=4064
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=43840
FX_PARAM39=47632
FX_PARAM40=43840
FX_PARAM41=26048
FX_PARAM42=1648
FX_PARAM43=1520
FX_PARAM44=1584
FX_PARAM45=1760
FX_PARAM46=192000
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=2919
FX_PARAM58=2663
FX_PARAM59=2766
FX_PARAM60=3073
FX_PARAM61=32657
FX_PARAM62=32657
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=4011366
FX_PARAM66=4377241
FX_PARAM67=0
FX_PARAM68=3178828
FX_PARAM69=2749915
FX_PARAM70=0
FX_PARAM71=3178828
FX_PARAM72=2749915
FX_PARAM73=0
FX_PARAM74=3178828
FX_PARAM75=2749915
FX_PARAM76=0
FX_PARAM77=1237827
FX_PARAM78=6170970
FX_PARAM79=0
FX_PARAM80=1396241
FX_PARAM81=5842842
FX_PARAM82=0
FX_PARAM83=1614860
FX_PARAM84=5449153
FX_PARAM85=0
FX_PARAM86=1856134
FX_PARAM87=5018543
FX_PARAM88=0
FX_PARAM89=5760114
FX_PARAM90=203566
FX_PARAM91=0
FX_PARAM92=5760114
FX_PARAM93=203566
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Stone Corridor
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Under_Water_24k_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=380000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=23999
FX_PARAM2=0
FX_PARAM3=23999
FX_PARAM4=0
FX_PARAM5=23999
FX_PARAM6=0
FX_PARAM7=23999
FX_PARAM8=0
FX_PARAM9=2719
FX_PARAM10=0
FX_PARAM11=2447
FX_PARAM12=0
FX_PARAM13=2559
FX_PARAM14=0
FX_PARAM15=2879
FX_PARAM16=0
FX_PARAM17=5567
FX_PARAM18=0
FX_PARAM19=6735
FX_PARAM20=0
FX_PARAM21=8175
FX_PARAM22=0
FX_PARAM23=9903
FX_PARAM24=0
FX_PARAM25=95999
FX_PARAM26=0
FX_PARAM27=95999
FX_PARAM28=672
FX_PARAM29=784
FX_PARAM30=736
FX_PARAM31=848
FX_PARAM32=912
FX_PARAM33=1712
FX_PARAM34=3728
FX_PARAM35=1968
FX_PARAM36=18080
FX_PARAM37=24000
FX_PARAM38=21280
FX_PARAM39=23120
FX_PARAM40=21280
FX_PARAM41=12640
FX_PARAM42=608
FX_PARAM43=560
FX_PARAM44=592
FX_PARAM45=656
FX_PARAM46=93168
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=7044
FX_PARAM58=6426
FX_PARAM59=6673
FX_PARAM60=7415
FX_PARAM61=146716
FX_PARAM62=146716
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=8287089
FX_PARAM66=101518
FX_PARAM67=0
FX_PARAM68=8388198
FX_PARAM69=133
FX_PARAM70=0
FX_PARAM71=8388198
FX_PARAM72=133
FX_PARAM73=0
FX_PARAM74=8388198
FX_PARAM75=133
FX_PARAM76=0
FX_PARAM77=7525033
FX_PARAM78=660389
FX_PARAM79=0
FX_PARAM80=7858794
FX_PARAM81=382933
FX_PARAM82=0
FX_PARAM83=8101345
FX_PARAM84=193766
FX_PARAM85=0
FX_PARAM86=8251792
FX_PARAM87=84846
FX_PARAM88=0
FX_PARAM89=8388608
FX_PARAM90=0
FX_PARAM91=0
FX_PARAM92=8388608
FX_PARAM93=0
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=232
FX_PARAM107=536
FX_PARAM108=928
FX_PARAM109=0
FX_PARAM110=232
FX_PARAM111=536
FX_PARAM112=928
 
;ShortReverbDelayList
 
FX_PARAM113=5568
FX_PARAM114=6736
FX_PARAM115=8176
FX_PARAM116=9904
 
; DSPBuilder settings
FX_NAME=I3DL2 24K Reverb
FX_CONFIG_NAME=Under Water
FX_DSPCODE=reverb24k.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\spliterstate.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=0
FX_NUMINPUTS=1
; this is the max number of outputs
FX_NUMOUTPUTS=8
FX_YMEMSIZE=0
FX_DSPCYCLES=1000
FX_NUMPARAMS=32

; Number of outputs
FX_PARAM0=8
; output gains
FX_PARAM1=4194000
FX_PARAM2=4194000
FX_PARAM3=4194000
FX_PARAM4=4194000
FX_PARAM5=4194000
FX_PARAM6=4194000
FX_PARAM7=4194000
FX_PARAM8=4194000

; DSPBuilder settings
FX_NAME=1xN Splitter
FX_DSPCODE=spliter.scr
FX_INPUT0_NAME=In
FX_OUTPUT0_NAME=Out0
FX_OUTPUT1_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT1_NAME=Out3
FX_OUTPUT1_NAME=Out4
FX_OUTPUT1_NAME=Out5
FX_OUTPUT1_NAME=Out6
FX_OUTPUT1_NAME=Out7
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\rmsstate.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=32
FX_NUMINPUTS=6
FX_NUMOUTPUTS=1
FX_DSPCYCLES=500
FX_YMEMSIZE=0
FX_NUMPARAMS=24
FX_NUMPUBLICPARAMS=1

; parameters and their descriptions

FX_PARAM0=6
FX_PARAM0_NAME=Mixbins
FX_PARAM0_DESCRIPTION=Number of Mixbins to monitor
FX_PARAM0_UNITS=Mixbins Count
FX_PARAM0_TYPE=INTEGER
FX_PARAM0_MIN=1
FX_PARAM0_MAX=6
FX_PARAM0_ATOMIC=1

; DSPBuilder settings
FX_NAME=Peak and Amplitude Realtime Monitor
FX_DSPCODE=rms.scr
FX_INPUT0_NAME=Front Left
FX_INPUT1_NAME=Front Right
FX_INPUT2_NAME=Center
FX_INPUT3_NAME=LFE
FX_INPUT4_NAME=Rear Left
FX_INPUT5_NAME=Rear Right

FX_OUTPUT0_NAME=Out
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\initlib\dsp\ini\reverb_Under_Water_state.ini ===
[FXSTATE]
FX_SCRATCHLENGTH=580000
FX_NUMINPUTS=2
FX_NUMOUTPUTS=35
FX_YMEMSIZE=0
FX_DSPCYCLES=31000
FX_NUMPARAMS=512
FX_NUMPUBLICPARAMS=0
 
FX_PARAM0=0
FX_PARAM1=47999
FX_PARAM2=0
FX_PARAM3=47999
FX_PARAM4=0
FX_PARAM5=47999
FX_PARAM6=0
FX_PARAM7=47999
FX_PARAM8=0
FX_PARAM9=5439
FX_PARAM10=0
FX_PARAM11=4911
FX_PARAM12=0
FX_PARAM13=5135
FX_PARAM14=0
FX_PARAM15=5759
FX_PARAM16=0
FX_PARAM17=11135
FX_PARAM18=0
FX_PARAM19=13487
FX_PARAM20=0
FX_PARAM21=16351
FX_PARAM22=0
FX_PARAM23=19823
FX_PARAM24=0
FX_PARAM25=191999
FX_PARAM26=0
FX_PARAM27=191999
FX_PARAM28=1344
FX_PARAM29=1568
FX_PARAM30=1488
FX_PARAM31=1712
FX_PARAM32=1840
FX_PARAM33=2096
FX_PARAM34=7456
FX_PARAM35=3952
FX_PARAM36=36176
FX_PARAM37=48000
FX_PARAM38=42560
FX_PARAM39=46240
FX_PARAM40=42560
FX_PARAM41=25280
FX_PARAM42=1216
FX_PARAM43=1136
FX_PARAM44=1184
FX_PARAM45=1312
FX_PARAM46=186352
FX_PARAM47=8388607
FX_PARAM48=8388609
FX_PARAM49=8388609
FX_PARAM50=8388607
FX_PARAM51=8388607
FX_PARAM52=8388607
FX_PARAM53=8388609
FX_PARAM54=8388609
FX_PARAM55=0
FX_PARAM56=1677721
FX_PARAM57=7044
FX_PARAM58=6426
FX_PARAM59=6673
FX_PARAM60=7415
FX_PARAM61=146716
FX_PARAM62=146716
FX_PARAM63=4
FX_PARAM64=0
FX_PARAM65=8334850
FX_PARAM66=53758
FX_PARAM67=0
FX_PARAM68=8388391
FX_PARAM69=70
FX_PARAM70=0
FX_PARAM71=8388391
FX_PARAM72=70
FX_PARAM73=0
FX_PARAM74=8388391
FX_PARAM75=70
FX_PARAM76=0
FX_PARAM77=7920784
FX_PARAM78=357751
FX_PARAM79=0
FX_PARAM80=8105480
FX_PARAM81=204636
FX_PARAM82=0
FX_PARAM83=8235675
FX_PARAM84=103157
FX_PARAM85=0
FX_PARAM86=8316334
FX_PARAM87=44820
FX_PARAM88=0
FX_PARAM89=8388608
FX_PARAM90=0
FX_PARAM91=0
FX_PARAM92=8388608
FX_PARAM93=0
;Constants
FX_PARAM94=12582912
FX_PARAM95=12582912
FX_PARAM96=12582912
FX_PARAM97=4194304
FX_PARAM98=12582912
FX_PARAM99=12582912
FX_PARAM100=12582912
 
;ReflectionsFeedbackGain
 
FX_PARAM101=13421773
FX_PARAM102=3355443
FX_PARAM103=13421773
FX_PARAM104=13421773
 
;ShortReverbInputDelayList
 
FX_PARAM105=0
FX_PARAM106=464
FX_PARAM107=1072
FX_PARAM108=1856
FX_PARAM109=0
FX_PARAM110=464
FX_PARAM111=1072
FX_PARAM112=1856
 
;ShortReverbDelayList
 
FX_PARAM113=11136
FX_PARAM114=13488
FX_PARAM115=16352
FX_PARAM116=19824
 
; DSPBuilder settings
FX_NAME=I3DL2 Reverb
FX_CONFIG_NAME=Under Water
FX_DSPCODE=reverb.scr
FX_INPUT0_NAME=Left
FX_INPUT1_NAME=Right
FX_OUTPUT0_NAME=Out1
FX_OUTPUT1_NAME=Out2
FX_OUTPUT2_NAME=Out3
FX_OUTPUT3_NAME=Out4
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dsound\tools\internal\DSP\cldtobin\readme.txt ===
CldToBin: Converts Motorola .cld files to binary or Hex text  files

Gints Klimanis
gklimanis@nvidia.com

***********************************************************

1) Use the -a option to generate your .cld files.  

asm56300 -a -Bb.cld file1.asm file2.asm file3.asm > err.txt

2) Use CldToBin (nVidia internal utility) to pack your P-memory
code into a hex binary or text file.  

3) The -24to32 option will pack your 24-bit words into the
lower 24 bits of a 32 bit container.  This is suitable for system
memory images.

Check out a.bat for example usage.
You may want to exclude some P Memory sections (256 word
Interrupt Vector Table, real-time interrupt service routine
code, etc.).  If you assemble with these sections as the last
files in the command line, it's easier to identify which 
sections to exclude.

Output to test file:
cldtobin.exe -v -noX -noY -asText b.cld out.txt
cldtobin.exe -v -noX -noY         b.cld out.bin

Output to binary file:
cldtobin.exe -v -noX -noY -excludeN 0 -excludeN 4 -asText b.cld out2.txt
cldtobin.exe -v -noX -noY -excludeN 0 -excludeN 4         b.cld out2.bin
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dxg\d3d8\se\cheatsheet.txt ===
1. Look at hardware's pointers for the push buffer
        dd fd003240 l2  
    
   DW1=HW_PUT 
   DW2=HW_GET
   If they are equal, DMA pusher is idle.
   Dump out contents of the push buffer at: 80000000+HW_GET or 80000000+HW_PUT

2. Look at CACHE1 content pointers.  This is what the GPU is actually processing.
        dd fd003210 l1  -- CACHE1_PUT: Where the parser is adding stuff
        dd fd003270 l1  -- CACHE1_GET: Where the PGRAPH is picking up stuff
   Disable the pusher
        ed fd003220 0
   Disable the puller
        ed fd003250 0
   Calculate the address in cache as: fd003800+CACHE1_PUT*2
   Dump out DWORDs at the address.  The first DWORD is the method followed by data
    
   Dump out the CACHE1_GET contents the same way

   If CACHE1_PUT and CACHE1_GET are the same then everything is caught up
   
   Cache1 is 1K (128 method/data DWORD pairs).  It is located at fd003800 and shadowed at fd003c00.
   The Get pionter can actually point into the the shadow.

3. Dump out PGRAPH status
        dd fd400700 l1
    0 indicates graphics is idle, 1s indicate modules that are busy or hung

4. Dump out interrupts are pending.  Look at NV_PMC_INTR_0_* in nv_ref_2a.h to see meanings of the bits
        dd fd000100 l1

5. Dump out the address where the CRTC is scanning out of
        dd fd600800 l1

6. Dump out instance memory
        dd fd710000

7. Dump out FIFO status
        dd fd002100 l1
   A value of 00001000 means parse error

8. Debugging parse errors
        dd fd0032a0 l3
   DW1=How many bytes transfered before parse error
   DW2=Last data the parser saw
   DW3=Command being processed when the parse error occured
   
9. Disable interrupts
        ed fd600140 0   --- disable vblanks
        ed fd000140 0   --- disable all other interrutps
        
10. To tell if its a Micron memory system
        dd fd101000 l1   --- STRAP_VALUE
        ? STRAP_VALUE & c0000
    If the value is 0, its a Micron system
    
11. Dump out the current class
        dd fd40014c l1  -- 97 is kelvin
        
12. Dump out the internal PGRAPH fifo cache:

        dd fd4007a0 l8  -- 8 method DWORDs 
        
        dd fd4007c0 l8  -- corresponding 8 data DWORDS
        
    The contents of this cache should match up to the CACHE1_GET - 0x40.
    
13. Dump PGRAPH fifo status
        
        dd fd400720 l1
        
14. Dump the PMC

        dd fd000200 l1
        
15. Dump the D3D device object

        dd d3d__g_pdevice l1 
        dt D3D::CDevice <result>   
           
16. To dump out the current Begin/End state

        dd fd400F5C l1
        
    1=means we are inside a begin/end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dxg\d3dx8\effect\effect.txt ===
---------------------------------
Structure of the effect text file
---------------------------------

Effect -
    Declarations
    Techniques


Declaration -
    Type Id;
    Type Id = Value;


    Type -
        dword -
            #
            0x# (hex)

        float -
            #f
            #.f
            .#f
            #.#f

        vector -
            ( float )
            ( float, float )
            ( float, float, float )
            ( float, float, float, float )

        matrix -
            [ float, .... ]

        texture -
            N/A

        vertexshader -
            decl { ... }
            decl { ... }, asm { ... }

            FVF -
                DwordExpression

            Declaration -
                decl {
                    stream n;
                    skip n;
                    dword v#;
                    float v#;
                    float v#[n];
                    fvf a|b|c;
                }


        pixelshader -
            asm { ... }




Technique
Technique name

    State    = const;
    State[n] = const;
    State    = <id>;
    State[n] = <id>;


    State -
        RS
        TSS[n]

        VertexShader
        PixelShader

        VertexShaderConstant[n]
        PixelShaderConstant[n]
        
        LightXxx[n]
            dword type
            float diffuse[4]
            float specular[4]
            float ambient[4]
            float position[3]
            float direction[3]
            float range
            float falloff
            float attenuation0
            float attenuation1
            float attenuation2
            float theta
            float phi

        LightEnable[n]

        MaterialXxx
            float diffuse[4]
            float ambient[4]
            float specular[4]
            float emissive[4]
            float power

        Texture[n]
        TextureTransform[n]

        ProjectionTransform
        ViewTransform
        WorldTransform[n]




    Pass
    Pass name
        State


--------------------------------
Examples of various declarations
--------------------------------

dword dw0;
dword dw1 = 0;

float f0;
float f1 = 0.0f;

vector vec0;
vector vec1 = (0.0f, 0.0f, 0.0f, 1.0f);

matrix mat0;
matrix mat1 = [1.0f, 0.0f, 0.0f, 0.0f,
              0.0f, 1.0f, 0.0f, 0.0f,
              0.0f, 0.0f, 1.0f, 0.0f,
              0.0f, 0.0f, 0.0f, 1.0f];

texture tex0;

vertexshader vs0;
vertexshader vs1 =
    decl {
	fvf position | normal | diffuse;
    };

vertexshader vs2 =
    decl {
       stream 0;
       float v0[3];
    };


vertexshader vs3 =
    decl {
        fvf position;
    }
    asm
    {
        vs.1.0
        mov oPos, v0
    };

pixelshader ps0;
pixelshader ps1 =
    asm
    {
        ps.1.0
        tex t0
        mov r0, t0
    }

-------------------------------------
List of states used in an effect file
-------------------------------------

//  RenderStates
    DWORD        ZEnable                        // D3DZB
    DWORD        FillMode                       // D3DFILL
    DWORD        ShadeMode                      // D3DSHADE
    DWORD        LinePattern                    
    DWORD        ZWriteEnable                   // TRUE/FALSE
    DWORD        AlphaTestEnable                // TRUE/FALSE
    DWORD        LastPixel                      // TRUE/FALSE
    DWORD        SrcBlend                       // D3DBLEND
    DWORD        DestBlend                      // D3DBLEND
    DWORD        CullMode                       // D3DCULL
    DWORD        ZFunc                          // D3DCMP
    DWORD        AlphaRef                       
    DWORD        AlphaFunc                      // D3DCMP
    DWORD        DitherEnable                   // TRUE/FALSE
    DWORD        AlphaBlendEnable               // TRUE/FALSE
    DWORD        FogEnable                      // TRUE/FALSE
    DWORD        SpecularEnable                 // TRUE/FALSE
    DWORD        ZVisible                       // TRUE/FALSE
    DWORD        FogColor                       
    DWORD        FogTableMode                   // D3DFOG
    FLOAT        FogStart                       
    FLOAT        FogEnd                         
    FLOAT        FogDensity                     
    DWORD        EdgeAntialias                  // TRUE/FALSE
    DWORD        ZBias                          
    DWORD        RangeFogEnable                 
    DWORD        StencilEnable                  // TRUE/FALSE
    DWORD        StencilFail                    // D3DSTENCILOP
    DWORD        StencilZFail                   // D3DSTENCILOP
    DWORD        StencilPass                    // D3DSTENCILOP
    DWORD        StencilFunc                    // D3DCMP
    DWORD        StencilRef                     
    DWORD        StencilMask                    
    DWORD        StencilWriteMask               
    DWORD        TextureFactor                  
    DWORD        Wrap0                          // D3DWRAP
    DWORD        Wrap1                          // D3DWRAP
    DWORD        Wrap2                          // D3DWRAP
    DWORD        Wrap3                          // D3DWRAP
    DWORD        Wrap4                          // D3DWRAP
    DWORD        Wrap5                          // D3DWRAP
    DWORD        Wrap6                          // D3DWRAP
    DWORD        Wrap7                          // D3DWRAP
    DWORD        Clipping                       // TRUE/FALSE
    DWORD        Lighting                       // TRUE/FALSE
    DWORD        Ambient                        
    DWORD        FogVertexMode                  
    DWORD        ColorVertex                    // TRUE/FALSE
    DWORD        LocalViewer                    // TRUE/FALSE
    DWORD        NormalizeNormals               // TRUE/FALSE
    DWORD        DiffuseMaterialSource          // D3DMCS
    DWORD        SpecularMaterialSource         // D3DMCS
    DWORD        AmbientMaterialSource          // D3DMCS
    DWORD        EmissiveMaterialSource         // D3DMCS
    DWORD        VertexBlend                    // D3DVBF
    DWORD        ClipPlaneEnable                // TRUE/FALSE
    DWORD        SoftwareVertexProcessing       // TRUE/FALSE
    FLOAT        PointSize                      
    FLOAT        PointSize_Min                  
    FLOAT        PointSize_Max                  
    DWORD        PointSpriteEnable              // TRUE/FALSE
    DWORD        PointScaleEnable               // TRUE/FALSE
    FLOAT        PointScale_A                   
    FLOAT        PointScale_B                   
    FLOAT        PointScale_C                   
    DWORD        MultiSampleAntialias           // TRUE/FALSE
    DWORD        MultiSampleMask                
    DWORD        PatchSegments                  
    DWORD        IndexedVertexBlendEnable       // TRUE/FALSE
    DWORD        ColorWriteEnable               // TRUE/FALSE
    FLOAT        TweenFactor                    
    DWORD        BlendOp                        // D3DBLENDOP

//  TSS  
    DWORD        ColorOp[8]                     // D3DTOP
    DWORD        ColorArg0[8]                   // D3DTA
    DWORD        ColorArg1[8]                   // D3DTA
    DWORD        ColorArg2[8]                   // D3DTA
    DWORD        AlphaOp[8]                     // D3DTOP
    DWORD        AlphaArg0[8]                   // D3DTA
    DWORD        AlphaArg1[8]                   // D3DTA
    DWORD        AlphaArg2[8]                   // D3DTA
    DWORD        ResultArg[8]                   // D3DTA
    DWORD        BumpEnvMat00[8]  
    DWORD        BumpEnvMat01[8]  
    DWORD        BumpEnvMat10[8]  
    DWORD        BumpEnvMat11[8]  
    DWORD        TexCoordIndex[8]               // D3DTSS_TCI
    DWORD        AddressU[8]                    // D3DTADDRESS
    DWORD        AddressV[8]                    // D3DTADDRESS
    DWORD        AddressW[8]                    // D3DTADDRESS
    DWORD        BorderColor[8]  
    DWORD        MagFilter[8]                   // D3DTEXF
    DWORD        MinFilter[8]                   // D3DTEXF
    DWORD        MipFilter[8]                   // D3DTEXF
    DWORD        MipMapLodBias[8]  
    DWORD        MaxMipLevel[8]  
    DWORD        MaxAnisotropy[8]  
    FLOAT        BumpEnvLScale[8]  
    FLOAT        BumpEnvLOffset[8]  
    DWORD        TextureTransformFlags[8]       // D3DTTFF

//  Light  
    DWORD        LightType[n]                   // D3DLT
    VECTOR       LightDiffuse[n]  
    VECTOR       LightSpecular[n]  
    VECTOR       LightAmbient[n]  
    VECTOR       LightPosition[n]  
    VECTOR       LightDirection[n]   
    FLOAT        LightRange[un]   
    FLOAT        LightFalloff[n]   
    FLOAT        LightAttenuation0[n]   
    FLOAT        LightAttenuation1[n]   
    FLOAT        LightAttenuation2[n]   
    FLOAT        LightTheta[n]   
    FLOAT        LightPhi[n]   
    DWORD        LightEnable[n]                 // TRUE/FALSE

//  Material  
    VECTOR       MaterialDiffuse
    VECTOR       MaterialAmbient
    VECTOR       MaterialSpecular
    VECTOR       MaterialEmissive
    FLOAT        MaterialPower

//  Misc  
    VERTEXSHADER VertexShader
    PIXELSHADER  PixelShader
    CONSTANT     VertexShaderConstant[n]  
    CONSTANT     PixelShaderConstant[n]  
    TEXTURE      Texture[8]  
    MATRIX       ProjectionTransform
    MATRIX       ViewTransform
    MATRIX       WorldTransform[256]  
    MATRIX       TextureTransform[8]
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dxg\d3dx8\misc\libtess\alg-outl.txt ===
This is only a very brief overview.  There is quite a bit of
additional documentation in the source code itself.


Goals of robust tesselation
---------------------------

The tesselation algorithm is fundamentally a 2D algorithm.  We
initially project all data into a plane; our goal is to robustly
tesselate the projected data.  The same topological tesselation is
then applied to the input data.

Topologically, the output should always be a tesselation.  If the
input is even slightly non-planar, then some triangles will
necessarily be back-facing when viewed from some angles, but the goal
is to minimize this effect.

The algorithm needs some capability of cleaning up the input data as
well as the numerical errors in its own calculations.  One way to do
this is to specify a tolerance as defined above, and clean up the
input and output during the line sweep process.  At the very least,
the algorithm must handle coincident vertices, vertices incident to an
edge, and coincident edges.


Phases of the algorithm
-----------------------

1. Find the polygon normal N.
2. Project the vertex data onto a plane.  It does not need to be
   perpendicular to the normal, eg. we can project onto the plane
   perpendicular to the coordinate axis whose dot product with N
   is largest.
3. Using a line-sweep algorithm, partition the plane into x-monotone
   regions.  Any vertical line intersects an x-monotone region in
   at most one interval.
4. Triangulate the x-monotone regions.
5. Group the triangles into strips and fans.


Finding the normal vector
-------------------------

A common way to find a polygon normal is to compute the signed area
when the polygon is projected along the three coordinate axes.  We
can't do this, since contours can have zero area without being
degenerate (eg. a bowtie).

We fit a plane to the vertex data, ignoring how they are connected
into contours.  Ideally this would be a least-squares fit; however for
our purpose the accuracy of the normal is not important.  Instead we
find three vertices which are widely separated, and compute the normal
to the triangle they form.  The vertices are chosen so that the
triangle has an area at least 1/sqrt(3) times the largest area of any
triangle formed using the input vertices.  

The contours do affect the orientation of the normal; after computing
the normal, we check that the sum of the signed contour areas is
non-negative, and reverse the normal if necessary.


Projecting the vertices
-----------------------

We project the vertices onto a plane perpendicular to one of the three
coordinate axes.  This helps numerical accuracy by removing a
transformation step between the original input data and the data
processed by the algorithm.  The projection also compresses the input
data; the 2D distance between vertices after projection may be smaller
than the original 2D distance.  However by choosing the coordinate
axis whose dot product with the normal is greatest, the compression
factor is at most 1/sqrt(3).

Even though the *accuracy* of the normal is not that important (since
we are projecting perpendicular to a coordinate axis anyway), the
*robustness* of the computation is important.  For example, if there
are many vertices which lie almost along a line, and one vertex V
which is well-separated from the line, then our normal computation
should involve V otherwise the results will be garbage.

The advantage of projecting perpendicular to the polygon normal is
that computed intersection points will be as close as possible to
their ideal locations.  To get this behavior, define TRUE_PROJECT.


The Line Sweep
--------------

There are three data structures: the mesh, the event queue, and the
edge dictionary.

The mesh is a "quad-edge" data structure which records the topology of
the current decomposition; for details see the include file "mesh.h".

The event queue simply holds all vertices (both original and computed
ones), organized so that we can quickly extract the vertex with the
minimum x-coord (and among those, the one with the minimum y-coord).

The edge dictionary describes the current intersection of the sweep
line with the regions of the polygon.  This is just an ordering of the
edges which intersect the sweep line, sorted by their current order of
intersection.  For each pair of edges, we store some information about
the monotone region between them -- these are call "active regions"
(since they are crossed by the current sweep line).

The basic algorithm is to sweep from left to right, processing each
vertex.  The processed portion of the mesh (left of the sweep line) is
a planar decomposition.  As we cross each vertex, we update the mesh
and the edge dictionary, then we check any newly adjacent pairs of
edges to see if they intersect.

A vertex can have any number of edges.  Vertices with many edges can
be created as vertices are merged and intersection points are
computed.  For unprocessed vertices (right of the sweep line), these
edges are in no particular order around the vertex; for processed
vertices, the topological ordering should match the geometric ordering.

The vertex processing happens in two phases: first we process are the
left-going edges (all these edges are currently in the edge
dictionary).  This involves:

 - deleting the left-going edges from the dictionary;
 - relinking the mesh if necessary, so that the order of these edges around
   the event vertex matches the order in the dictionary;
 - marking any terminated regions (regions which lie between two left-going
   edges) as either "inside" or "outside" according to their winding number.

When there are no left-going edges, and the event vertex is in an
"interior" region, we need to add an edge (to split the region into
monotone pieces).  To do this we simply join the event vertex to the
rightmost left endpoint of the upper or lower edge of the containing
region.

Then we process the right-going edges.  This involves:

 - inserting the edges in the edge dictionary;
 - computing the winding number of any newly created active regions.
   We can compute this incrementally using the winding of each edge
   that we cross as we walk through the dictionary.
 - relinking the mesh if necessary, so that the order of these edges around
   the event vertex matches the order in the dictionary;
 - checking any newly adjacent edges for intersection and/or merging.

If there are no right-going edges, again we need to add one to split
the containing region into monotone pieces.  In our case it is most
convenient to add an edge to the leftmost right endpoint of either
containing edge; however we may need to change this later (see the
code for details).


Invariants
----------

These are the most important invariants maintained during the sweep.
We define a function VertLeq(v1,v2) which defines the order in which
vertices cross the sweep line, and a function EdgeLeq(e1,e2; loc)
which says whether e1 is below e2 at the sweep event location "loc".
This function is defined only at sweep event locations which lie
between the rightmost left endpoint of {e1,e2}, and the leftmost right
endpoint of {e1,e2}.

Invariants for the Edge Dictionary.

 - Each pair of adjacent edges e2=Succ(e1) satisfies EdgeLeq(e1,e2)
   at any valid location of the sweep event.
 - If EdgeLeq(e2,e1) as well (at any valid sweep event), then e1 and e2
   share a common endpoint.
 - For each e in the dictionary, e->Dst has been processed but not e->Org.
 - Each edge e satisfies VertLeq(e->Dst,event) && VertLeq(event,e->Org)
   where "event" is the current sweep line event.
 - No edge e has zero length.
 - No two edges have identical left and right endpoints.
 
Invariants for the Mesh (the processed portion).

 - The portion of the mesh left of the sweep line is a planar graph,
   ie. there is *some* way to embed it in the plane.
 - No processed edge has zero length.
 - No two processed vertices have identical coordinates.
 - Each "inside" region is monotone, ie. can be broken into two chains
   of monotonically increasing vertices according to VertLeq(v1,v2)
   - a non-invariant: these chains may intersect (slightly) due to
     numerical errors, but this does not affect the algorithm's operation.

Invariants for the Sweep.

 - If a vertex has any left-going edges, then these must be in the edge
   dictionary at the time the vertex is processed.
 - If an edge is marked "fixUpperEdge" (it is a temporary edge introduced
   by ConnectRightVertex), then it is the only right-going edge from
   its associated vertex.  (This says that these edges exist only
   when it is necessary.)


Robustness
----------

The key to the robustness of the algorithm is maintaining the
invariants above, especially the correct ordering of the edge
dictionary.  We achieve this by:

  1. Writing the numerical computations for maximum precision rather
     than maximum speed.
     
  2. Making no assumptions at all about the results of the edge
     intersection calculations -- for sufficiently degenerate inputs,
     the computed location is not much better than a random number.
     
  3. When numerical errors violate the invariants, restore them
     by making *topological* changes when necessary (ie. relinking
     the mesh structure).
     
     
Triangulation and Grouping
--------------------------

We finish the line sweep before doing any triangulation.  This is
because even after a monotone region is complete, there can be further
changes to its vertex data because of further vertex merging.

After triangulating all monotone regions, we want to group the
triangles into fans and strips.  We do this using a greedy approach.
The triangulation itself is not optimized to reduce the number of
primitives; we just try to get a reasonable decomposition of the
computed triangulation.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dxg\d3dx8\misc\lpng105\libpng.txt ===
libpng.txt - A description on how to use and modify libpng

 libpng version 1.0.5 - October 15, 1999
 Updated and distributed by Glenn Randers-Pehrson
 <randeg@alum.rpi.edu>
 Copyright (c) 1998, 1999 Glenn Randers-Pehrson
 For conditions of distribution and use, see copyright
 notice in png.h.

 based on:

 libpng 1.0 beta 6  version 0.96 May 28, 1997
 Updated and distributed by Andreas Dilger
 Copyright (c) 1996, 1997 Andreas Dilger

 libpng 1.0 beta 2 - version 0.88  January 26, 1996
 For conditions of distribution and use, see copyright
 notice in png.h. Copyright (c) 1995, 1996 Guy Eric
 Schalnat, Group 42, Inc.

 Updated/rewritten per request in the libpng FAQ
 Copyright (c) 1995 Frank J. T. Wojcik
 December 18, 1995 && January 20, 1996

 *
I. Introduction

This file describes how to use and modify the PNG reference library
(known as libpng) for your own use.  There are five sections to this
file: introduction, structures, reading, writing, and modification and
configuration notes for various special platforms.  In addition to this
file, example.c is a good starting point for using the library, as
it is heavily commented and should include everything most people
will need.  We assume that libpng is already installed; see the
INSTALL file for instructions on how to install libpng.

Libpng was written as a companion to the PNG specification, as a way
of reducing the amount of time and effort it takes to support the PNG
file format in application programs.

The PNG-1.2 specification is available at <http://www.cdrom.com/png>.

The PNG-1.0 specification is available
as RFC 2083 <ftp://ftp.uu.net/graphics/png/documents/> and as a
W3C Recommendation <http://www.w3.org/TR/REC.png.html>. Some
additional chunks are described in the special-purpose public chunks
documents at <ftp://ftp.uu.net/graphics/png/documents/>.

Other information
about PNG, and the latest version of libpng, can be found at the PNG home
page, <http://www.cdrom.com/pub/png/>.

Most users will not have to modify the library significantly; advanced
users may want to modify it more.  All attempts were made to make it as
complete as possible, while keeping the code easy to understand.
Currently, this library only supports C.  Support for other languages
is being considered.

Libpng has been designed to handle multiple sessions at one time,
to be easily modifiable, to be portable to the vast majority of
machines (ANSI, K&R, 16-, 32-, and 64-bit) available, and to be easy
to use.  The ultimate goal of libpng is to promote the acceptance of
the PNG file format in whatever way possible.  While there is still
work to be done (see the TODO file), libpng should cover the
majority of the needs of its users.

Libpng uses zlib for its compression and decompression of PNG files.
Further information about zlib, and the latest version of zlib, can
be found at the zlib home page, <http://www.cdrom.com/pub/infozip/zlib/>.
The zlib compression utility is a general purpose utility that is
useful for more than PNG files, and can be used without libpng.
See the documentation delivered with zlib for more details.
You can usually find the source files for the zlib utility wherever you
find the libpng source files.

Libpng is thread safe, provided the threads are using different
instances of the structures.  Each thread should have its own
png_struct and png_info instances, and thus its own image.
Libpng does not protect itself against two threads using the
same instance of a structure.


II. Structures

There are two main structures that are important to libpng, png_struct
and png_info.  The first, png_struct, is an internal structure that
will not, for the most part, be used by a user except as the first
variable passed to every libpng function call.

The png_info structure is designed to provide information about the
PNG file.  At one time, the fields of png_info were intended to be
directly accessible to the user.  However, this tended to cause problems
with applications using dynamically loaded libraries, and as a result
a set of interface functions for png_info was developed.  The fields
of png_info are still available for older applications, but it is
suggested that applications use the new interfaces if at all possible.

The png.h header file is an invaluable reference for programming with libpng.
And while I'm on the topic, make sure you include the libpng header file:

#include <png.h>

III. Reading

Reading PNG files:

We'll now walk you through the possible functions to call when reading
in a PNG file, briefly explaining the syntax and purpose of each one.
See example.c and png.h for more detail.  While Progressive reading
is covered in the next section, you will still need some of the
functions discussed in this section to read a PNG file.

You will want to do the I/O initialization(*) before you get into libpng,
so if it doesn't work, you don't have much to undo.  Of course, you
will also want to insure that you are, in fact, dealing with a PNG
file.  Libpng provides a simple check to see if a file is a PNG file.
To use it, pass in the first 1 to 8 bytes of the file, and it will
return true or false (1 or 0) depending on whether the bytes could be
part of a PNG file.  Of course, the more bytes you pass in, the
greater the accuracy of the prediction.

If you are intending to keep the file pointer open for use in libpng,
you must ensure you don't read more than 8 bytes from the beginning
of the file, and you also have to make a call to png_set_sig_bytes_read()
with the number of bytes you read from the beginning.  Libpng will
then only check the bytes (if any) that your program didn't read.

(*): If you are not using the standard I/O functions, you will need
to replace them with custom functions.  See the discussion under
Customizing libpng.


    FILE *fp = fopen(file_name, "rb");
    if (!fp)
    {
        return;
    }
    fread(header, 1, number, fp);
    is_png = !png_sig_cmp(header, 0, number);
    if (!is_png)
    {
        return;
    }


Next, png_struct and png_info need to be allocated and initialized.  In
order to ensure that the size of these structures is correct even with a
dynamically linked libpng, there are functions to initialize and
allocate the structures.  We also pass the library version, optional
pointers to error handling functions, and a pointer to a data struct for
use by the error functions, if necessary (the pointer and functions can
be NULL if the default error handlers are to be used).  See the section
on Changes to Libpng below regarding the old initialization functions.

    png_structp png_ptr = png_create_read_struct
       (PNG_LIBPNG_VER_STRING, (png_voidp)user_error_ptr,
        user_error_fn, user_warning_fn);
    if (!png_ptr)
        return;

    png_infop info_ptr = png_create_info_struct(png_ptr);
    if (!info_ptr)
    {
        png_destroy_read_struct(&png_ptr,
           (png_infopp)NULL, (png_infopp)NULL);
        return;
    }

    png_infop end_info = png_create_info_struct(png_ptr);
    if (!end_info)
    {
        png_destroy_read_struct(&png_ptr, &info_ptr,
          (png_infopp)NULL);
        return;
    }

If you want to use your own memory allocation routines,
define PNG_USER_MEM_SUPPORTED and use
png_create_read_struct_2() instead of png_create_read_struct():

    png_structp png_ptr = png_create_read_struct_2
       (PNG_LIBPNG_VER_STRING, (png_voidp)user_error_ptr,
        user_error_fn, user_warning_fn, (png_voidp)
        user_mem_ptr, user_malloc_fn, user_free_fn);

The error handling routines passed to png_create_read_struct()
and the memory alloc/free routines passed to png_create_struct_2()
are only necessary if you are not using the libpng supplied error
handling and memory alloc/free functions.

When libpng encounters an error, it expects to longjmp back
to your routine.  Therefore, you will need to call setjmp and pass
your png_ptr->jmpbuf.  If you read the file from different
routines, you will need to update the jmpbuf field every time you enter
a new routine that will call a png_ function.

See your documentation of setjmp/longjmp for your compiler for more
handling in the Customizing Libpng section below for more information on
the libpng error handling.  If an error occurs, and libpng longjmp's
back to your setjmp, you will want to call png_destroy_read_struct() to
free any memory.

    if (setjmp(png_ptr->jmpbuf))
    {
        png_destroy_read_struct(&png_ptr, &info_ptr,
           &end_info);
        fclose(fp);
        return;
    }

Now you need to set up the input code.  The default for libpng is to
use the C function fread().  If you use this, you will need to pass a
valid FILE * in the function png_init_io().  Be sure that the file is
opened in binary mode.  If you wish to handle reading data in another
way, you need not call the png_init_io() function, but you must then
implement the libpng I/O methods discussed in the Customizing Libpng
section below.

    png_init_io(png_ptr, fp);

If you had previously opened the file and read any of the signature from
the beginning in order to see if this was a PNG file, you need to let
libpng know that there are some bytes missing from the start of the file.

    png_set_sig_bytes(png_ptr, number);

At this point, you can set up a callback function that will be
called after each row has been read, which you can use to control
a progress meter or the like.  It's demonstrated in pngtest.c.
You must supply a function

    void read_row_callback(png_ptr, png_uint_32 row, int pass);
    {
      /* put your code here */
    }

(You can give it another name that you like instead of "read_row_callback")

To inform libpng about your function, use

    png_set_read_status_fn(png_ptr, read_row_callback);

In PNG files, the alpha channel in an image is the level of opacity.
If you need the alpha channel in an image to be the level of transparency
instead of opacity, you can invert the alpha channel (or the tRNS chunk
data) after it's read, so that 0 is fully opaque and 255 (in 8-bit or
paletted images) or 65535 (in 16-bit images) is fully transparent, with

    png_set_invert_alpha(png_ptr);

This has to appear here rather than later with the other transformations
because the tRNS chunk data must be modified in the case of paletted images.
If your image is not a paletted image, the tRNS data (which in such cases
represents a single color to be rendered as transparent) won't be changed.

Finally, you can write your own transformation function if none of
the existing ones meets your needs.  This is done by setting a callback
with

    png_set_read_user_transform_fn(png_ptr,
       read_transform_fn);

You must supply the function

    void read_transform_fn(png_ptr ptr, row_info_ptr
       row_info, png_bytep data)

See pngtest.c for a working example.  Your function will be called
after all of the other transformations have been processed.

You can also set up a pointer to a user structure for use by your
callback function, and you can inform libpng that your transform
function will change the number of channels or bit depth with the
function

    png_set_user_transform_info(png_ptr, user_ptr,
       user_depth, user_channels);


You can retrieve the pointer via the function
png_get_user_transform_ptr().  For example:

    voidp read_user_transform_ptr =
       png_get_user_transform_ptr(png_ptr);

You are now ready to read all the file information up to the actual
image data.  You do this with a call to png_read_info().

    png_read_info(png_ptr, info_ptr);

Functions are used to get the information from the info_ptr:

    png_get_IHDR(png_ptr, info_ptr, &width, &height,
       &bit_depth, &color_type, &interlace_type,
       &compression_type, &filter_type);

    width          - holds the width of the image
                     in pixels (up to 2^31).
    height         - holds the height of the image
                     in pixels (up to 2^31).
    bit_depth      - holds the bit depth of one of the
                     image channels.  (valid values are
                     1, 2, 4, 8, 16 and depend also on
                     the color_type.  See also
                     significant bits (sBIT) below).
    color_type     - describes which color/alpha channels
                         are present.
                     PNG_COLOR_TYPE_GRAY
                        (bit depths 1, 2, 4, 8, 16)
                     PNG_COLOR_TYPE_GRAY_ALPHA
                        (bit depths 8, 16)
                     PNG_COLOR_TYPE_PALETTE
                        (bit depths 1, 2, 4, 8)
                     PNG_COLOR_TYPE_RGB
                        (bit_depths 8, 16)
                     PNG_COLOR_TYPE_RGB_ALPHA
                        (bit_depths 8, 16)

                     PNG_COLOR_MASK_PALETTE
                     PNG_COLOR_MASK_COLOR
                     PNG_COLOR_MASK_ALPHA

    filter_type    - (must be PNG_FILTER_TYPE_BASE
                     for PNG 1.0)
    compression_type - (must be PNG_COMPRESSION_TYPE_BASE
                     for PNG 1.0)
    interlace_type - (PNG_INTERLACE_NONE or
                     PNG_INTERLACE_ADAM7)
    Any or all of interlace_type, compression_type, of
                     filter_type can be
    NULL if you are not interested in their values.

    channels = png_get_channels(png_ptr, info_ptr);
    channels       - number of channels of info for the
                     color type (valid values are 1 (GRAY,
                     PALETTE), 2 (GRAY_ALPHA), 3 (RGB),
                     4 (RGB_ALPHA or RGB + filler byte))
    rowbytes = png_get_rowbytes(png_ptr, info_ptr);
    rowbytes       - number of bytes needed to hold a row

    signature = png_get_signature(png_ptr, info_ptr);
    signature      - holds the signature read from the
                     file (if any).  The data is kept in
                     the same offset it would be if the
                     whole signature were read (i.e. if an
                     application had already read in 4
                     bytes of signature before starting
                     libpng, the remaining 4 bytes would
                     be in signature[4] through signature[7]
                     (see png_set_sig_bytes())).


    width            = png_get_image_width(png_ptr,
                         info_ptr);
    height           = png_get_image_height(png_ptr,
                         info_ptr);
    bit_depth        = png_get_bit_depth(png_ptr,
                         info_ptr);
    color_type       = png_get_color_type(png_ptr,
                         info_ptr);
    filter_type      = png_get_filter_type(png_ptr,
                         info_ptr);
    compression_type = png_get_compression_type(png_ptr,
                         info_ptr);
    interlace_type   = png_get_interlace_type(png_ptr,
                         info_ptr);


These are also important, but their validity depends on whether the chunk
has been read.  The png_get_valid(png_ptr, info_ptr, PNG_INFO_<chunk>) and
png_get_<chunk>(png_ptr, info_ptr, ...) functions return non-zero if the
data has been read, or zero if it is missing.  The parameters to the
png_get_<chunk> are set directly if they are simple data types, or a pointer
into the info_ptr is returned for any complex types.

    png_get_PLTE(png_ptr, info_ptr, &palette,
                     &num_palette);
    palette        - the palette for the file
                     (array of png_color)
    num_palette    - number of entries in the palette

    png_get_gAMA(png_ptr, info_ptr, &gamma);
    gamma          - the gamma the file is written
                     at (PNG_INFO_gAMA)

    png_get_sRGB(png_ptr, info_ptr, &srgb_intent);
    srgb_intent    - the rendering intent (PNG_INFO_sRGB)
                     The presence of the sRGB chunk
                     means that the pixel data is in the
                     sRGB color space.  This chunk also
                     implies specific values of gAMA and
                     cHRM.

    png_get_sBIT(png_ptr, info_ptr, &sig_bit);
    sig_bit        - the number of significant bits for
                     (PNG_INFO_sBIT) each of the gray,
                     red, green, and blue channels,
                     whichever are appropriate for the
                     given color type (png_color_16)

    png_get_tRNS(png_ptr, info_ptr, &trans, &num_trans,
                     &trans_values);
    trans          - array of transparent entries for
                     palette (PNG_INFO_tRNS)
    trans_values   - transparent pixel for non-paletted
                     images (PNG_INFO_tRNS)
    num_trans      - number of transparent entries
                     (PNG_INFO_tRNS)

    png_get_hIST(png_ptr, info_ptr, &hist);
                     (PNG_INFO_hIST)
    hist           - histogram of palette (array of
                     png_color_16)

    png_get_tIME(png_ptr, info_ptr, &mod_time);
    mod_time       - time image was last modified
                    (PNG_VALID_tIME)

    png_get_bKGD(png_ptr, info_ptr, &background);
    background     - background color (PNG_VALID_bKGD)

    num_text = png_get_text(png_ptr, info_ptr, &text_ptr);
    text_ptr       - array of png_text holding image
                     comments
    text_ptr[i]->key   - keyword for comment.
    text_ptr[i]->text  - text comments for current
                         keyword.
    text_ptr[i]->compression - type of compression used
                     on "text" PNG_TEXT_COMPRESSION_NONE
                     or PNG_TEXT_COMPRESSION_zTXt
    num_text       - number of comments

    png_get_oFFs(png_ptr, info_ptr, &offset_x, &offset_y,
                     &unit_type);
    offset_x       - positive offset from the left edge
                     of the screen
    offset_y       - positive offset from the top edge
                     of the screen
    unit_type      - PNG_OFFSET_PIXEL, PNG_OFFSET_MICROMETER

    png_get_pHYs(png_ptr, info_ptr, &res_x, &res_y,
                     &unit_type);
    res_x          - pixels/unit physical resolution in
                     x direction
    res_y          - pixels/unit physical resolution in
                     x direction
    unit_type      - PNG_RESOLUTION_UNKNOWN,
                     PNG_RESOLUTION_METER

The data from the pHYs chunk can be retrieved in several convenient
forms:

    res_x = png_get_x_pixels_per_meter(png_ptr,
                  info_ptr)
    res_y = png_get_y_pixels_per_meter(png_ptr,
                  info_ptr)
    res_x_and_y = png_get_pixels_per_meter(png_ptr,
                  info_ptr)
    aspect_ratio = png_get_pixel_aspect_ratio(png_ptr,
                  info_ptr)

   (Each of these returns 0 [signifying "unknown"] if
       the data is not present or if res_x is 0;
       res_x_and_y is 0 if res_x != res_y)

For more information, see the png_info definition in png.h and the
PNG specification for chunk contents.  Be careful with trusting
rowbytes, as some of the transformations could increase the space
needed to hold a row (expand, filler, gray_to_rgb, etc.).
See png_read_update_info(), below.

A quick word about text_ptr and num_text.  PNG stores comments in
keyword/text pairs, one pair per chunk, with no limit on the number
of text chunks, and a 2^31 byte limit on their size.  While there are
suggested keywords, there is no requirement to restrict the use to these
strings.  It is strongly suggested that keywords and text be sensible
to humans (that's the point), so don't use abbreviations.  Non-printing
symbols are not allowed.  See the PNG specification for more details.
There is also no requirement to have text after the keyword.

Keywords should be limited to 79 Latin-1 characters without leading or
trailing spaces, but non-consecutive spaces are allowed within the
keyword.  It is possible to have the same keyword any number of times.
The text_ptr is an array of png_text structures, each holding pointer
to a keyword and a pointer to a text string.  Only the text string may
be null.  The keyword/text pairs are put into the array in the order
that they are received.  However, some or all of the text chunks may be
after the image, so, to make sure you have read all the text chunks,
don't mess with these until after you read the stuff after the image.
This will be mentioned again below in the discussion that goes with
png_read_end().

After you've read the header information, you can set up the library
to handle any special transformations of the image data.  The various
ways to transform the data will be described in the order that they
should occur.  This is important, as some of these change the color
type and/or bit depth of the data, and some others only work on
certain color types and bit depths.  Even though each transformation
checks to see if it has data that it can do something with, you should
make sure to only enable a transformation if it will be valid for the
data.  For example, don't swap red and blue on grayscale data.

The colors used for the background and transparency values should be
supplied in the same format/depth as the current image data.  They
are stored in the same format/depth as the image data in a bKGD or tRNS
chunk, so this is what libpng expects for this data.  The colors are
transformed to keep in sync with the image data when an application
calls the png_read_update_info() routine (see below).

Data will be decoded into the supplied row buffers packed into bytes
unless the library has been told to transform it into another format.
For example, 4 bit/pixel paletted or grayscale data will be returned
2 pixels/byte with the leftmost pixel in the high-order bits of the
byte, unless png_set_packing() is called.  8-bit RGB data will be stored
in RGB RGB RGB format unless png_set_filler() is called to insert filler
bytes, either before or after each RGB triplet.  16-bit RGB data will
be returned RRGGBB RRGGBB, with the most significant byte of the color
value first, unless png_set_strip_16() is called to transform it to
regular RGB RGB triplets, or png_set_filler() is called to insert
filler bytes, either before or after each RRGGBB triplet.  Similarly,
8-bit or 16-bit grayscale data can be modified with png_set_filler()
or png_set_strip_16().

The following code transforms grayscale images of less than 8 to 8 bits,
changes paletted images to RGB, and adds a full alpha channel if there is
transparency information in a tRNS chunk.  This is most useful on
grayscale images with bit depths of 2 or 4 or if there is a multiple-image
viewing application that wishes to treat all images in the same way.

    if (color_type == PNG_COLOR_TYPE_PALETTE &&
        bit_depth <= 8) png_set_palette_to_rgb(png_ptr);

    if (color_type == PNG_COLOR_TYPE_GRAY &&
        bit_depth < 8) png_set_gray_1_2_4_to_8(png_ptr);

    if (png_get_valid(png_ptr, info_ptr,
        PNG_INFO_tRNS)) png_set_tRNS_to_alpha(png_ptr);

These three functions are actually aliases for png_set_expand(), added
in libpng version 1.0.4, with the function names expanded to improve code
readability.  In some future version they may actually do different
things.

PNG can have files with 16 bits per channel.  If you only can handle
8 bits per channel, this will strip the pixels down to 8 bit.

    if (bit_depth == 16)
        png_set_strip_16(png_ptr);

The png_set_background() function tells libpng to composite images
with alpha or simple transparency against the supplied background
color.  If the PNG file contains a bKGD chunk (PNG_INFO_bKGD valid),
you may use this color, or supply another color more suitable for
the current display (e.g., the background color from a web page).  You
need to tell libpng whether the color is in the gamma space of the
display (PNG_BACKGROUND_GAMMA_SCREEN for colors you supply), the file
(PNG_BACKGROUND_GAMMA_FILE for colors from the bKGD chunk), or one
that is neither of these gammas (PNG_BACKGROUND_GAMMA_UNIQUE - I don't
know why anyone would use this, but it's here).

If, for some reason, you don't need the alpha channel on an image,
and you want to remove it rather than combining it with the background
(but the image author certainly had in mind that you *would* combine
it with the background, so that's what you should probably do):

    if (color_type & PNG_COLOR_MASK_ALPHA)
        png_set_strip_alpha(png_ptr);

PNG files pack pixels of bit depths 1, 2, and 4 into bytes as small as
they can, resulting in, for example, 8 pixels per byte for 1 bit
files.  This code expands to 1 pixel per byte without changing the
values of the pixels:

    if (bit_depth < 8)
        png_set_packing(png_ptr);

PNG files have possible bit depths of 1, 2, 4, 8, and 16.  All pixels
stored in a PNG image have been "scaled" or "shifted" up to the next
higher possible bit depth (e.g. from 5 bits/sample in the range [0,31] to
8 bits/sample in the range [0, 255]).  However, it is also possible to
convert the PNG pixel data back to the original bit depth of the image.
This call reduces the pixels back down to the original bit depth:

    png_color_16p sig_bit;

    if (png_get_sBIT(png_ptr, info_ptr, &sig_bit))
        png_set_shift(png_ptr, sig_bit);

PNG files store 3-color pixels in red, green, blue order.  This code
changes the storage of the pixels to blue, green, red:

    if (color_type == PNG_COLOR_TYPE_RGB ||
        color_type == PNG_COLOR_TYPE_RGB_ALPHA)
        png_set_bgr(png_ptr);

PNG files store RGB pixels packed into 3 bytes. This code expands them
into 4 bytes for windowing systems that need them in this format:

    if (bit_depth == 8 && color_type ==
        PNG_COLOR_TYPE_RGB) png_set_filler(png_ptr,
        filler, PNG_FILLER_BEFORE);

where "filler" is the 8 or 16-bit number to fill with, and the location is
either PNG_FILLER_BEFORE or PNG_FILLER_AFTER, depending upon whether
you want the filler before the RGB or after.  This transformation
does not affect images that already have full alpha channels.

If you are reading an image with an alpha channel, and you need the
data as ARGB instead of the normal PNG format RGBA:

    if (color_type == PNG_COLOR_TYPE_RGB_ALPHA)
        png_set_swap_alpha(png_ptr);

For some uses, you may want a grayscale image to be represented as
RGB.  This code will do that conversion:

    if (color_type == PNG_COLOR_TYPE_GRAY ||
        color_type == PNG_COLOR_TYPE_GRAY_ALPHA)
          png_set_gray_to_rgb(png_ptr);

Conversely, you can convert an RGB or RGBA image to grayscale or grayscale
with alpha.  This is intended for conversion of images that really are
gray (red == green == blue), so the function simply strips out the red
and blue channels, leaving the green channel in the gray position.

    if (color_type == PNG_COLOR_TYPE_RGB ||
        color_type == PNG_COLOR_TYPE_RGB_ALPHA)
          png_set_rgb_to_gray(png_ptr, error_action,
             double red_weight, double green_weight);

    error_action = 1: silently do the conversion
    error_action = 2: issue a warning if the original
                      image has any pixel where
                      red != green or red != blue
    error_action = 3: issue an error and abort the
                      conversion if the original
                      image has any pixel where
                      red != green or red != blue

    red_weight:       weight of red component
                      (NULL -> default 54/256)
    green_weight:     weight of green component
                      (NULL -> default 183/256)

If you have set error_action = 1 or 2, you can
later check whether the image really was gray, after processing
the image rows, with the png_get_rgb_to_gray_status(png_ptr) function.
It will return a png_byte that is zero if the image was gray or
1 if there were any non-gray pixels.  bKGD and sBIT data
will be silently converted to grayscale, using the green channel
data, regardless of the error_action setting.

With 0.0<=red_weight+green_weight<=1.0,
the normalized graylevel is computed:

    int rw = red_weight * 256;
    int gw = green_weight * 256;
    int bw = 256 - (rw + gw);
    gray = (rw*red + gw*green + bw*blue)/256;

The default values approximate those recommended in the Charles
Poynton's Color FAQ, <http://www.inforamp.net/~poynton/>
Copyright (c) 1998-01-04 Charles Poynton poynton@inforamp.net

    Y = 0.212671 * R + 0.715160 * G + 0.072169 * B

Libpng approximates this with

    Y = 0.211 * R    + 0.715 * G    + 0.074 * B

which can be expressed with integers as

    Y = (54 * R + 183 * G + 19 * B)/256

The calculation is done in a linear colorspace, if the image gamma
is known.

If you have a grayscale and you are using png_set_expand_depth() or
png_set_expand() to change to
a higher bit-depth, you must either supply the background color as a gray
value at the original file bit-depth (need_expand = 1) or else supply the
background color as an RGB triplet at the final, expanded bit depth
(need_expand = 0).  Similarly, if you are reading a paletted image, you
must either supply the background color as a palette index (need_expand = 1)
or as an RGB triplet that may or may not be in the palette (need_expand = 0).

    png_color_16 my_background;
    png_color_16p image_background;

    if (png_get_bKGD(png_ptr, info_ptr, &image_background))
        png_set_background(png_ptr, image_background,
          PNG_BACKGROUND_GAMMA_FILE, 1, 1.0);
    else
        png_set_background(png_ptr, &my_background,
          PNG_BACKGROUND_GAMMA_SCREEN, 0, 1.0);

To properly display PNG images on any kind of system, the application needs
to know what the display gamma is.  Ideally, the user will know this, and
the application will allow them to set it.  One method of allowing the user
to set the display gamma separately for each system is to check for a
SCREEN_GAMMA or DISPLAY_GAMMA environment variable, which will hopefully be
correctly set.

Note that display_gamma is the overall gamma correction required to produce
pleasing results, which depends on the lighting conditions in the surrounding
environment.  In a dim or brightly lit room, no compensation other than
the physical gamma exponent of the monitor is needed, while in a dark room
a slightly smaller exponent is better.

   double gamma, screen_gamma;

   if (/* We have a user-defined screen
       gamma value */)
   {
      screen_gamma = user_defined_screen_gamma;
   }
   /* One way that applications can share the same
      screen gamma value */
   else if ((gamma_str = getenv("SCREEN_GAMMA"))
      != NULL)
   {
      screen_gamma = (double)atof(gamma_str);
   }
   /* If we don't have another value */
   else
   {
      screen_gamma = 2.2; /* A good guess for a
           PC monitor in a bright office or a dim room */
      screen_gamma = 2.0; /* A good guess for a
           PC monitor in a dark room */
      screen_gamma = 1.7 or 1.0;  /* A good
           guess for Mac systems */
   }

The png_set_gamma() function handles gamma transformations of the data.
Pass both the file gamma and the current screen_gamma.  If the file does
not have a gamma value, you can pass one anyway if you have an idea what
it is (usually 0.45455 is a good guess for GIF images on PCs).  Note
that file gammas are inverted from screen gammas.  See the discussions
on gamma in the PNG specification for an excellent description of what
gamma is, and why all applications should support it.  It is strongly
recommended that PNG viewers support gamma correction.

   if (png_get_gAMA(png_ptr, info_ptr, &gamma))
      png_set_gamma(png_ptr, screen_gamma, gamma);
   else
      png_set_gamma(png_ptr, screen_gamma, 0.45455);

If you need to reduce an RGB file to a paletted file, or if a paletted
file has more entries then will fit on your screen, png_set_dither()
will do that.  Note that this is a simple match dither that merely
finds the closest color available.  This should work fairly well with
optimized palettes, and fairly badly with linear color cubes.  If you
pass a palette that is larger then maximum_colors, the file will
reduce the number of colors in the palette so it will fit into
maximum_colors.  If there is a histogram, it will use it to make
more intelligent choices when reducing the palette.  If there is no
histogram, it may not do as good a job.

   if (color_type & PNG_COLOR_MASK_COLOR)
   {
      if (png_get_valid(png_ptr, info_ptr,
         PNG_INFO_PLTE))
      {
         png_color_16p histogram;

         png_get_hIST(png_ptr, info_ptr,
            &histogram);
         png_set_dither(png_ptr, palette, num_palette,
            max_screen_colors, histogram, 1);
      }
      else
      {
         png_color std_color_cube[MAX_SCREEN_COLORS] =
            { ... colors ... };

         png_set_dither(png_ptr, std_color_cube,
            MAX_SCREEN_COLORS, MAX_SCREEN_COLORS,
            NULL,0);
      }
   }

PNG files describe monochrome as black being zero and white being one.
The following code will reverse this (make black be one and white be
zero):

   if (bit_depth == 1 && color_type == PNG_COLOR_GRAY)
      png_set_invert_mono(png_ptr);

PNG files store 16 bit pixels in network byte order (big-endian,
ie. most significant bits first).  This code changes the storage to the
other way (little-endian, i.e. least significant bits first, the
way PCs store them):

    if (bit_depth == 16)
        png_set_swap(png_ptr);

If you are using packed-pixel images (1, 2, or 4 bits/pixel), and you
need to change the order the pixels are packed into bytes, you can use:

    if (bit_depth < 8)
       png_set_packswap(png_ptr);

The last thing to handle is interlacing; this is covered in detail below,
but you must call the function here if you want libpng to handle expansion
of the interlaced image.

    number_of_passes = png_set_interlace_handling(png_ptr);

After setting the transformations, libpng can update your png_info
structure to reflect any transformations you've requested with this
call.  This is most useful to update the info structure's rowbytes
field so you can use it to allocate your image memory.  This function
will also update your palette with the correct screen_gamma and
background if these have been given with the calls above.

    png_read_update_info(png_ptr, info_ptr);

After you call png_read_update_info(), you can allocate any
memory you need to hold the image.  The row data is simply
raw byte data for all forms of images.  As the actual allocation
varies among applications, no example will be given.  If you
are allocating one large chunk, you will need to build an
array of pointers to each row, as it will be needed for some
of the functions below.

After you've allocated memory, you can read the image data.
The simplest way to do this is in one function call.  If you are
allocating enough memory to hold the whole image, you can just
call png_read_image() and libpng will read in all the image data
and put it in the memory area supplied.  You will need to pass in
an array of pointers to each row.

This function automatically handles interlacing, so you don't need
to call png_set_interlace_handling() or call this function multiple
times, or any of that other stuff necessary with png_read_rows().

   png_read_image(png_ptr, row_pointers);

where row_pointers is:

   png_bytep row_pointers[height];

You can point to void or char or whatever you use for pixels.

If you don't want to read in the whole image at once, you can
use png_read_rows() instead.  If there is no interlacing (check
interlace_type == PNG_INTERLACE_NONE), this is simple:

    png_read_rows(png_ptr, row_pointers, NULL,
       number_of_rows);

where row_pointers is the same as in the png_read_image() call.

If you are doing this just one row at a time, you can do this with
row_pointers:

    png_bytep row_pointers = row;
    png_read_row(png_ptr, &row_pointers, NULL);

If the file is interlaced (info_ptr->interlace_type != 0), things get
somewhat harder.  The only current (PNG Specification version 1.2)
interlacing type for PNG is (interlace_type == PNG_INTERLACE_ADAM7)
is a somewhat complicated 2D interlace scheme, known as Adam7, that
breaks down an image into seven smaller images of varying size, based
on an 8x8 grid.

libpng can fill out those images or it can give them to you "as is".
If you want them filled out, there are two ways to do that.  The one
mentioned in the PNG specification is to expand each pixel to cover
those pixels that have not been read yet (the "rectangle" method).
This results in a blocky image for the first pass, which gradually
smooths out as more pixels are read.  The other method is the "sparkle"
method, where pixels are drawn only in their final locations, with the
rest of the image remaining whatever colors they were initialized to
before the start of the read.  The first method usually looks better,
but tends to be slower, as there are more pixels to put in the rows.

If you don't want libpng to handle the interlacing details, just call
png_read_rows() seven times to read in all seven images.  Each of the
images is a valid image by itself, or they can all be combined on an
8x8 grid to form a single image (although if you intend to combine them
you would be far better off using the libpng interlace handling).

The first pass will return an image 1/8 as wide as the entire image
(every 8th column starting in column 0) and 1/8 as high as the original
(every 8th row starting in row 0), the second will be 1/8 as wide
(starting in column 4) and 1/8 as high (also starting in row 0).  The
third pass will be 1/4 as wide (every 4th pixel starting in column 0) and
1/8 as high (every 8th row starting in row 4), and the fourth pass will
be 1/4 as wide and 1/4 as high (every 4th column starting in column 2,
and every 4th row starting in row 0).  The fifth pass will return an
image 1/2 as wide, and 1/4 as high (starting at column 0 and row 2),
while the sixth pass will be 1/2 as wide and 1/2 as high as the original
(starting in column 1 and row 0).  The seventh and final pass will be as
wide as the original, and 1/2 as high, containing all of the odd
numbered scanlines.  Phew!

If you want libpng to expand the images, call this before calling
png_start_read_image() or png_read_update_info():

    if (interlace_type == PNG_INTERLACE_ADAM7)
        number_of_passes
           = png_set_interlace_handling(png_ptr);

This will return the number of passes needed.  Currently, this
is seven, but may change if another interlace type is added.
This function can be called even if the file is not interlaced,
where it will return one pass.

If you are not going to display the image after each pass, but are
going to wait until the entire image is read in, use the sparkle
effect.  This effect is faster and the end result of either method
is exactly the same.  If you are planning on displaying the image
after each pass, the "rectangle" effect is generally considered the
better looking one.

If you only want the "sparkle" effect, just call png_read_rows() as
normal, with the third parameter NULL.  Make sure you make pass over
the image number_of_passes times, and you don't change the data in the
rows between calls.  You can change the locations of the data, just
not the data.  Each pass only writes the pixels appropriate for that
pass, and assumes the data from previous passes is still valid.

    png_read_rows(png_ptr, row_pointers, NULL,
       number_of_rows);

If you only want the first effect (the rectangles), do the same as
before except pass the row buffer in the third parameter, and leave
the second parameter NULL.

    png_read_rows(png_ptr, NULL, row_pointers,
       number_of_rows);

After you are finished reading the image, you can finish reading
the file.  If you are interested in comments or time, which may be
stored either before or after the image data, you should pass the
separate png_info struct if you want to keep the comments from
before and after the image separate.  If you are not interested, you
can pass NULL.

   png_read_end(png_ptr, end_info);

When you are done, you can free all memory allocated by libpng like this:

   png_destroy_read_struct(&png_ptr, &info_ptr,
       &end_info);

For a more compact example of reading a PNG image, see the file example.c.


Reading PNG files progressively:

The progressive reader is slightly different then the non-progressive
reader.  Instead of calling png_read_info(), png_read_rows(), and
png_read_end(), you make one call to png_process_data(), which calls
callbacks when it has the info, a row, or the end of the image.  You
set up these callbacks with png_set_progressive_read_fn().  You don't
have to worry about the input/output functions of libpng, as you are
giving the library the data directly in png_process_data().  I will
assume that you have read the section on reading PNG files above,
so I will only highlight the differences (although I will show
all of the code).

png_structp png_ptr;
png_infop info_ptr;

 /*  An example code fragment of how you would
     initialize the progressive reader in your
     application. */
 int
 initialize_png_reader()
 {
    png_ptr = png_create_read_struct
        (PNG_LIBPNG_VER_STRING, (png_voidp)user_error_ptr,
         user_error_fn, user_warning_fn);
    if (!png_ptr)
        return -1;
    info_ptr = png_create_info_struct(png_ptr);
    if (!info_ptr)
    {
        png_destroy_read_struct(&png_ptr, (png_infopp)NULL,
           (png_infopp)NULL);
        return -1;
    }

    if (setjmp(png_ptr->jmpbuf))
    {
        png_destroy_read_struct(&png_ptr, &info_ptr,
           (png_infopp)NULL);
        return -1;
    }

    /* This one's new.  You can provide functions
       to be called when the header info is valid,
       when each row is completed, and when the image
       is finished.  If you aren't using all functions,
       you can specify NULL parameters.  Even when all
       three functions are NULL, you need to call
       png_set_progressive_read_fn().  You can use
       any struct as the user_ptr (cast to a void pointer
       for the function call), and retrieve the pointer
       from inside the callbacks using the function

          png_get_progressive_ptr(png_ptr);

       which will return a void pointer, which you have
       to cast appropriately.
     */
    png_set_progressive_read_fn(png_ptr, (void *)user_ptr,
        info_callback, row_callback, end_callback);

    return 0;
 }

 /* A code fragment that you call as you receive blocks
   of data */
 int
 process_data(png_bytep buffer, png_uint_32 length)
 {
    if (setjmp(png_ptr->jmpbuf))
    {
        png_destroy_read_struct(&png_ptr, &info_ptr,
           (png_infopp)NULL);
        return -1;
    }

    /* This one's new also.  Simply give it a chunk
       of data from the file stream (in order, of
       course).  On machines with segmented memory
       models machines, don't give it any more than
       64K.  The library seems to run fine with sizes
       of 4K. Although you can give it much less if
       necessary (I assume you can give it chunks of
       1 byte, I haven't tried less then 256 bytes
       yet).  When this function returns, you may
       want to display any rows that were generated
       in the row callback if you don't already do
       so there.
     */
    png_process_data(png_ptr, info_ptr, buffer, length);
    return 0;
 }

 /* This function is called (as set by
    png_set_progressive_read_fn() above) when enough data
    has been supplied so all of the header has been
    read.
 */
 void
 info_callback(png_structp png_ptr, png_infop info)
 {
    /* Do any setup here, including setting any of
       the transformations mentioned in the Reading
       PNG files section.  For now, you _must_ call
       either png_start_read_image() or
       png_read_update_info() after all the
       transformations are set (even if you don't set
       any).  You may start getting rows before
       png_process_data() returns, so this is your
       last chance to prepare for that.
     */
 }

 /* This function is called when each row of image
    data is complete */
 void
 row_callback(png_structp png_ptr, png_bytep new_row,
    png_uint_32 row_num, int pass)
 {
    /* If the image is interlaced, and you turned
       on the interlace handler, this function will
       be called for every row in every pass.  Some
       of these rows will not be changed from the
       previous pass.  When the row is not changed,
       the new_row variable will be NULL.  The rows
       and passes are called in order, so you don't
       really need the row_num and pass, but I'm
       supplying them because it may make your life
       easier.

       For the non-NULL rows of interlaced images,
       you must call png_progressive_combine_row()
       passing in the row and the old row.  You can
       call this function for NULL rows (it will just
       return) and for non-interlaced images (it just
       does the memcpy for you) if it will make the
       code easier.  Thus, you can just do this for
       all cases:
     */

        png_progressive_combine_row(png_ptr, old_row,
          new_row);

    /* where old_row is what was displayed for
       previously for the row.  Note that the first
       pass (pass == 0, really) will completely cover
       the old row, so the rows do not have to be
       initialized.  After the first pass (and only
       for interlaced images), you will have to pass
       the current row, and the function will combine
       the old row and the new row.
    */
 }

 void
 end_callback(png_structp png_ptr, png_infop info)
 {
    /* This function is called after the whole image
       has been read, including any chunks after the
       image (up to and including the IEND).  You
       will usually have the same info chunk as you
       had in the header, although some data may have
       been added to the comments and time fields.

       Most people won't do much here, perhaps setting
       a flag that marks the image as finished.
     */
 }



IV. Writing

Much of this is very similar to reading.  However, everything of
importance is repeated here, so you won't have to constantly look
back up in the reading section to understand writing.

You will want to do the I/O initialization before you get into libpng,
so if it doesn't work, you don't have anything to undo. If you are not
using the standard I/O functions, you will need to replace them with
custom writing functions.  See the discussion under Customizing libpng.

    FILE *fp = fopen(file_name, "wb");
    if (!fp)
    {
       return;
    }

Next, png_struct and png_info need to be allocated and initialized.
As these can be both relatively large, you may not want to store these
on the stack, unless you have stack space to spare.  Of course, you
will want to check if they return NULL.  If you are also reading,
you won't want to name your read structure and your write structure
both "png_ptr"; you can call them anything you like, such as
"read_ptr" and "write_ptr".  Look at pngtest.c, for example.

    png_structp png_ptr = png_create_write_struct
       (PNG_LIBPNG_VER_STRING, (png_voidp)user_error_ptr,
        user_error_fn, user_warning_fn);
    if (!png_ptr)
       return;

    png_infop info_ptr = png_create_info_struct(png_ptr);
    if (!info_ptr)
    {
       png_destroy_write_struct(&png_ptr,
         (png_infopp)NULL);
       return;
    }

If you want to use your own memory allocation routines,
define PNG_USER_MEM_SUPPORTED and use
png_create_write_struct_2() instead of png_create_read_struct():

    png_structp png_ptr = png_create_write_struct_2
       (PNG_LIBPNG_VER_STRING, (png_voidp)user_error_ptr,
        user_error_fn, user_warning_fn, (png_voidp)
        user_mem_ptr, user_malloc_fn, user_free_fn);

After you have these structures, you will need to set up the
error handling.  When libpng encounters an error, it expects to
longjmp() back to your routine.  Therefore, you will need to call
setjmp() and pass the png_ptr->jmpbuf.  If you
write the file from different routines, you will need to update
the jmpbuf field every time you enter a new routine that will
call a png_ function.  See your documentation of setjmp/longjmp
for your compiler for more information on setjmp/longjmp.  See
the discussion on libpng error handling in the Customizing Libpng
section below for more information on the libpng error handling.

    if (setjmp(png_ptr->jmpbuf))
    {
        png_destroy_write_struct(&png_ptr, &info_ptr);
        fclose(fp);
        return;
    }
    ...
    return;

Now you need to set up the output code.  The default for libpng is to
use the C function fwrite().  If you use this, you will need to pass a
valid FILE * in the function png_init_io().  Be sure that the file is
opened in binary mode.  Again, if you wish to handle writing data in
another way, see the discussion on libpng I/O handling in the Customizing
Libpng section below.

    png_init_io(png_ptr, fp);

At this point, you can set up a callback function that will be
called after each row has been written, which you can use to control
a progress meter or the like.  It's demonstrated in pngtest.c.
You must supply a function

    void write_row_callback(png_ptr, png_uint_32 row, int pass);
    {
      /* put your code here */
    }

(You can give it another name that you like instead of "write_row_callback")

To inform libpng about your function, use

    png_set_write_status_fn(png_ptr, write_row_callback);

You now have the option of modifying how the compression library will
run.  The following functions are mainly for testing, but may be useful
in some cases, like if you need to write PNG files extremely fast and
are willing to give up some compression, or if you want to get the
maximum possible compression at the expense of slower writing.  If you
have no special needs in this area, let the library do what it wants by
not calling this function at all, as it has been tuned to deliver a good
speed/compression ratio. The second parameter to png_set_filter() is
the filter method, for which the only valid value is '0' (as of the
July 1999 PNG specification, version 1.2).  The third parameter is a
flag that indicates which filter type(s) are to be tested for each
scanline.  See the Compression Library for details on the specific filter
types.


    /* turn on or off filtering, and/or choose
       specific filters */
    png_set_filter(png_ptr, 0,
       PNG_FILTER_NONE | PNG_FILTER_SUB |
       PNG_FILTER_PAETH);

The png_set_compression_???() functions interface to the zlib compression
library, and should mostly be ignored unless you really know what you are
doing.  The only generally useful call is png_set_compression_level()
which changes how much time zlib spends on trying to compress the image
data.  See the Compression Library for details on the compression levels.

    /* set the zlib compression level */
    png_set_compression_level(png_ptr,
        Z_BEST_COMPRESSION);

    /* set other zlib parameters */
    png_set_compression_mem_level(png_ptr, 8);
    png_set_compression_strategy(png_ptr,
        Z_DEFAULT_STRATEGY);
    png_set_compression_window_bits(png_ptr, 15);
    png_set_compression_method(png_ptr, 8);

You now need to fill in the png_info structure with all the data you
wish to write before the actual image.  Note that the only thing you
are allowed to write after the image is the text chunks and the time
chunk (as of PNG Specification 1.2, anyway).  See png_write_end() and
the latest PNG specification for more information on that.  If you
wish to write them before the image, fill them in now, and flag that
data as being valid.  If you want to wait until after the data, don't
fill them until png_write_end().  For all the fields in png_info and
their data types, see png.h.  For explanations of what the fields
contain, see the PNG specification.

Some of the more important parts of the png_info are:

    png_set_IHDR(png_ptr, info_ptr, width, height,
       bit_depth, color_type, interlace_type,
       compression_type, filter_type)
    width          - holds the width of the image
                     in pixels (up to 2^31).
    height         - holds the height of the image
                     in pixels (up to 2^31).
    bit_depth      - holds the bit depth of one of the
                     image channels.
                     (valid values are 1, 2, 4, 8, 16
                     and depend also on the
                     color_type.  See also significant
                     bits (sBIT) below).
    color_type     - describes which color/alpha
                     channels are present.
                     PNG_COLOR_TYPE_GRAY
                        (bit depths 1, 2, 4, 8, 16)
                     PNG_COLOR_TYPE_GRAY_ALPHA
                        (bit depths 8, 16)
                     PNG_COLOR_TYPE_PALETTE
                        (bit depths 1, 2, 4, 8)
                     PNG_COLOR_TYPE_RGB
                        (bit_depths 8, 16)
                     PNG_COLOR_TYPE_RGB_ALPHA
                        (bit_depths 8, 16)

                     PNG_COLOR_MASK_PALETTE
                     PNG_COLOR_MASK_COLOR
                     PNG_COLOR_MASK_ALPHA

    interlace_type - PNG_INTERLACE_NONE or
                     PNG_INTERLACE_ADAM7
    compression_type - (must be
                     PNG_COMPRESSION_TYPE_DEFAULT)
    filter_type    - (must be PNG_FILTER_TYPE_DEFAULT)

    png_set_PLTE(png_ptr, info_ptr, palette,
       num_palette);
    palette        - the palette for the file
                     (array of png_color)
    num_palette    - number of entries in the palette

    png_set_gAMA(png_ptr, info_ptr, gamma);
    gamma          - the gamma the image was created
                     at (PNG_INFO_gAMA)

    png_set_sRGB(png_ptr, info_ptr, srgb_intent);
    srgb_intent    - the rendering intent
                     (PNG_INFO_sRGB) The presence of
                     the sRGB chunk means that the pixel
                     data is in the sRGB color space.
                     This chunk also implies specific
                     values of gAMA and cHRM.  Rendering
                     intent is the CSS-1 property that
                     has been defined by the International
                     Color Consortium
                     (http://www.color.org).
                     It can be one of
                     PNG_SRGB_INTENT_SATURATION,
                     PNG_SRGB_INTENT_PERCEPTUAL,
                     PNG_SRGB_INTENT_ABSOLUTE, or
                     PNG_SRGB_INTENT_RELATIVE.


    png_set_sRGB_gAMA_and_cHRM(png_ptr, info_ptr,
       srgb_intent);
    srgb_intent    - the rendering intent
                     (PNG_INFO_sRGB) The presence of the
                     sRGB chunk means that the pixel
                     data is in the sRGB color space.
                     This function also causes gAMA and
                     cHRM chunks with the specific values
                     that are consistent with sRGB to be
                     written.

    png_set_sBIT(png_ptr, info_ptr, sig_bit);
    sig_bit        - the number of significant bits for
                     (PNG_INFO_sBIT) each of the gray, red,
                     green, and blue channels, whichever are
                     appropriate for the given color type
                     (png_color_16)

    png_set_tRNS(png_ptr, info_ptr, trans, num_trans,
       trans_values);
    trans          - array of transparent entries for
                     palette (PNG_INFO_tRNS)
    trans_values   - transparent pixel for non-paletted
                     images (PNG_INFO_tRNS)
    num_trans      - number of transparent entries
                     (PNG_INFO_tRNS)

    png_set_hIST(png_ptr, info_ptr, hist);
                    (PNG_INFO_hIST)
    hist           - histogram of palette (array of
                     png_color_16)

    png_set_tIME(png_ptr, info_ptr, mod_time);
    mod_time       - time image was last modified
                     (PNG_VALID_tIME)

    png_set_bKGD(png_ptr, info_ptr, background);
    background     - background color (PNG_VALID_bKGD)

    png_set_text(png_ptr, info_ptr, text_ptr, num_text);
    text_ptr       - array of png_text holding image
                     comments
    text_ptr[i]->key   - keyword for comment.
    text_ptr[i]->text  - text comments for current
                         keyword.
    text_ptr[i]->compression - type of compression used
         on "text" PNG_TEXT_COMPRESSION_NONE or
         PNG_TEXT_COMPRESSION_zTXt
    num_text    - number of comments in text_ptr

    png_set_oFFs(png_ptr, info_ptr, offset_x, offset_y,
        unit_type);
    offset_x  - positive offset from the left
                     edge of the screen
    offset_y  - positive offset from the top
                     edge of the screen
    unit_type - PNG_OFFSET_PIXEL, PNG_OFFSET_MICROMETER

    png_set_pHYs(png_ptr, info_ptr, res_x, res_y,
        unit_type);
    res_x       - pixels/unit physical resolution
                  in x direction
    res_y       - pixels/unit physical resolution
                  in y direction
    unit_type   - PNG_RESOLUTION_UNKNOWN,
                  PNG_RESOLUTION_METER

In PNG files, the alpha channel in an image is the level of opacity.
If your data is supplied as a level of transparency, you can invert the
alpha channel before you write it, so that 0 is fully transparent and 255
(in 8-bit or paletted images) or 65535 (in 16-bit images) is fully opaque,
with

    png_set_invert_alpha(png_ptr);

This must appear here instead of later with the other transformations
because in the case of paletted images the tRNS chunk data has to
be inverted before the tRNS chunk is written.  If your image is not a
paletted image, the tRNS data (which in such cases represents a single
color to be rendered as transparent) won't be changed.

A quick word about text and num_text.  text is an array of png_text
structures.  num_text is the number of valid structures in the array.
If you want, you can use max_text to hold the size of the array, but
libpng ignores it for writing (it does use it for reading).  Each
png_text structure holds a keyword-text value, and a compression type.
The compression types have the same valid numbers as the compression
types of the image data.  Currently, the only valid number is zero.
However, you can store text either compressed or uncompressed, unlike
images, which always have to be compressed.  So if you don't want the
text compressed, set the compression type to PNG_TEXT_COMPRESSION_NONE.
Until text gets around 1000 bytes, it is not worth compressing it.
After the text has been written out to the file, the compression type
is set to PNG_TEXT_COMPRESSION_NONE_WR or PNG_TEXT_COMPRESSION_zTXt_WR,
so that it isn't written out again at the end (in case you are calling
png_write_end() with the same struct.

The keywords that are given in the PNG Specification are:

    Title            Short (one line) title or
                     caption for image
    Author           Name of image's creator
    Description      Description of image (possibly long)
    Copyright        Copyright notice
    Creation Time    Time of original image creation
                     (usually RFC 1123 format, see below)
    Software         Software used to create the image
    Disclaimer       Legal disclaimer
    Warning          Warning of nature of content
    Source           Device used to create the image
    Comment          Miscellaneous comment; conversion
                     from other image format

The keyword-text pairs work like this.  Keywords should be short
simple descriptions of what the comment is about.  Some typical
keywords are found in the PNG specification, as is some recommendations
on keywords.  You can repeat keywords in a file.  You can even write
some text before the image and some after.  For example, you may want
to put a description of the image before the image, but leave the
disclaimer until after, so viewers working over modem connections
don't have to wait for the disclaimer to go over the modem before
they start seeing the image.  Finally, keywords should be full
words, not abbreviations.  Keywords and text are in the ISO 8859-1
(Latin-1) character set (a superset of regular ASCII) and can not
contain NUL characters, and should not contain control or other
unprintable characters.  To make the comments widely readable, stick
with basic ASCII, and avoid machine specific character set extensions
like the IBM-PC character set.  The keyword must be present, but
you can leave off the text string on non-compressed pairs.
Compressed pairs must have a text string, as only the text string
is compressed anyway, so the compression would be meaningless.

PNG supports modification time via the png_time structure.  Two
conversion routines are proved, png_convert_from_time_t() for
time_t and png_convert_from_struct_tm() for struct tm.  The
time_t routine uses gmtime().  You don't have to use either of
these, but if you wish to fill in the png_time structure directly,
you should provide the time in universal time (GMT) if possible
instead of your local time.  Note that the year number is the full
year (e.g. 1998, rather than 98 - PNG is year 2000 compliant!), and
that months start with 1.

If you want to store the time of the original image creation, you should
use a plain tEXt chunk with the "Creation Time" keyword.  This is
necessary because the "creation time" of a PNG image is somewhat vague,
depending on whether you mean the PNG file, the time the image was
created in a non-PNG format, a still photo from which the image was
scanned, or possibly the subject matter itself.  In order to facilitate
machine-readable dates, it is recommended that the "Creation Time"
tEXt chunk use RFC 1123 format dates (e.g. "22 May 1997 18:07:10 GMT"),
although this isn't a requirement.  Unlike the tIME chunk, the
"Creation Time" tEXt chunk is not expected to be automatically changed
by the software.  To facilitate the use of RFC 1123 dates, a function
png_convert_to_rfc1123(png_timep) is provided to convert from PNG
time to an RFC 1123 format string.

You are now ready to write all the file information up to the actual
image data.  You do this with a call to png_write_info().

    png_write_info(png_ptr, info_ptr);

After you've written the file information, you can set up the library
to handle any special transformations of the image data.  The various
ways to transform the data will be described in the order that they
should occur.  This is important, as some of these change the color
type and/or bit depth of the data, and some others only work on
certain color types and bit depths.  Even though each transformation
checks to see if it has data that it can do something with, you should
make sure to only enable a transformation if it will be valid for the
data.  For example, don't swap red and blue on grayscale data.

PNG files store RGB pixels packed into 3 or 6 bytes.  This code tells
the library to expand the input data to 4 or 8 bytes per pixel
(or expand 1 or 2-byte grayscale data to 2 or 4 bytes per pixel).

    png_set_filler(png_ptr, 0, PNG_FILLER_BEFORE);

where the 0 is the value that will be put in the 4th byte, and the
location is either PNG_FILLER_BEFORE or PNG_FILLER_AFTER, depending
upon whether the filler byte is stored XRGB or RGBX.

PNG files pack pixels of bit depths 1, 2, and 4 into bytes as small as
they can, resulting in, for example, 8 pixels per byte for 1 bit files.
If the data is supplied at 1 pixel per byte, use this code, which will
correctly pack the pixels into a single byte:

    png_set_packing(png_ptr);

PNG files reduce possible bit depths to 1, 2, 4, 8, and 16.  If your
data is of another bit depth, you can write an sBIT chunk into the
file so that decoders can get the original data if desired.

    /* Set the true bit depth of the image data */
    if (color_type & PNG_COLOR_MASK_COLOR)
    {
        sig_bit.red = true_bit_depth;
        sig_bit.green = true_bit_depth;
        sig_bit.blue = true_bit_depth;
    }
    else
    {
        sig_bit.gray = true_bit_depth;
    }
    if (color_type & PNG_COLOR_MASK_ALPHA)
    {
        sig_bit.alpha = true_bit_depth;
    }

    png_set_sBIT(png_ptr, info_ptr, &sig_bit);

If the data is stored in the row buffer in a bit depth other than
one supported by PNG (e.g. 3 bit data in the range 0-7 for a 4-bit PNG),
this will scale the values to appear to be the correct bit depth as
is required by PNG.

    png_set_shift(png_ptr, &sig_bit);

PNG files store 16 bit pixels in network byte order (big-endian,
ie. most significant bits first).  This code would be used if they are
supplied the other way (little-endian, i.e. least significant bits
first, the way PCs store them):

    if (bit_depth > 8)
       png_set_swap(png_ptr);

If you are using packed-pixel images (1, 2, or 4 bits/pixel), and you
need to change the order the pixels are packed into bytes, you can use:

    if (bit_depth < 8)
       png_set_packswap(png_ptr);

PNG files store 3 color pixels in red, green, blue order.  This code
would be used if they are supplied as blue, green, red:

    png_set_bgr(png_ptr);

PNG files describe monochrome as black being zero and white being
one. This code would be used if the pixels are supplied with this reversed
(black being one and white being zero):

    png_set_invert_mono(png_ptr);

Finally, you can write your own transformation function if none of
the existing ones meets your needs.  This is done by setting a callback
with

    png_set_write_user_transform_fn(png_ptr,
       write_transform_fn);

You must supply the function

    void write_transform_fn(png_ptr ptr, row_info_ptr
       row_info, png_bytep data)

See pngtest.c for a working example.  Your function will be called
before any of the other transformations are processed.

You can also set up a pointer to a user structure for use by your
callback function.

    png_set_user_transform_info(png_ptr, user_ptr, 0, 0);

The user_channels and user_depth parameters of this function are ignored
when writing; you can set them to zero as shown.

You can retrieve the pointer via the function
png_get_user_transform_ptr().  For example:

    voidp write_user_transform_ptr =
       png_get_user_transform_ptr(png_ptr);

It is possible to have libpng flush any pending output, either manually,
or automatically after a certain number of lines have been written.  To
flush the output stream a single time call:

    png_write_flush(png_ptr);

and to have libpng flush the output stream periodically after a certain
number of scanlines have been written, call:

    png_set_flush(png_ptr, nrows);

Note that the distance between rows is from the last time png_write_flush()
was called, or the first row of the image if it has never been called.
So if you write 50 lines, and then png_set_flush 25, it will flush the
output on the next scanline, and every 25 lines thereafter, unless
png_write_flush() is called before 25 more lines have been written.
If nrows is too small (less than about 10 lines for a 640 pixel wide
RGB image) the image compression may decrease noticeably (although this
may be acceptable for real-time applications).  Infrequent flushing will
only degrade the compression performance by a few percent over images
that do not use flushing.

That's it for the transformations.  Now you can write the image data.
The simplest way to do this is in one function call.  If have the
whole image in memory, you can just call png_write_image() and libpng
will write the image.  You will need to pass in an array of pointers to
each row.  This function automatically handles interlacing, so you don't
need to call png_set_interlace_handling() or call this function multiple
times, or any of that other stuff necessary with png_write_rows().

    png_write_image(png_ptr, row_pointers);

where row_pointers is:

    png_byte *row_pointers[height];

You can point to void or char or whatever you use for pixels.

If you don't want to write the whole image at once, you can
use png_write_rows() instead.  If the file is not interlaced,
this is simple:

    png_write_rows(png_ptr, row_pointers,
       number_of_rows);

row_pointers is the same as in the png_write_image() call.

If you are just writing one row at a time, you can do this with
row_pointers:

    png_bytep row_pointer = row;

    png_write_row(png_ptr, &row_pointer);

When the file is interlaced, things can get a good deal more
complicated.  The only currently (as of August 1999 -- PNG Specification
version 1.2, dated July 1999) defined interlacing scheme for PNG files
is the "Adam7" interlace scheme, that breaks down an
image into seven smaller images of varying size.  libpng will build
these images for you, or you can do them yourself.  If you want to
build them yourself, see the PNG specification for details of which
pixels to write when.

If you don't want libpng to handle the interlacing details, just
use png_set_interlace_handling() and call png_write_rows() the
correct number of times to write all seven sub-images.

If you want libpng to build the sub-images, call this before you start
writing any rows:

    number_of_passes =
       png_set_interlace_handling(png_ptr);

This will return the number of passes needed.  Currently, this
is seven, but may change if another interlace type is added.

Then write the complete image number_of_passes times.

    png_write_rows(png_ptr, row_pointers,
       number_of_rows);

As some of these rows are not used, and thus return immediately,
you may want to read about interlacing in the PNG specification,
and only update the rows that are actually used.

After you are finished writing the image, you should finish writing
the file.  If you are interested in writing comments or time, you should
pass an appropriately filled png_info pointer.  If you are not interested,
you can pass NULL.

    png_write_end(png_ptr, info_ptr);

When you are done, you can free all memory used by libpng like this:

    png_destroy_write_struct(&png_ptr, &info_ptr);

You must free any data you allocated for info_ptr, such as comments,
palette, or histogram, before the call to png_destroy_write_struct();

For a more compact example of writing a PNG image, see the file example.c.

V. Modifying/Customizing libpng:

There are two issues here.  The first is changing how libpng does
standard things like memory allocation, input/output, and error handling.
The second deals with more complicated things like adding new chunks,
adding new transformations, and generally changing how libpng works.

All of the memory allocation, input/output, and error handling in libpng
goes through callbacks that are user settable.  The default routines are
in pngmem.c, pngrio.c, pngwio.c, and pngerror.c respectively.  To change
these functions, call the appropriate png_set_???_fn() function.

Memory allocation is done through the functions png_large_malloc(),
png_malloc(), png_realloc(), png_large_free(), and png_free().  These
currently just call the standard C functions.  The large functions must
handle exactly 64K, but they don't have to handle more than that.  If
your pointers can't access more then 64K at a time, you will want to set
MAXSEG_64K in zlib.h.  Since it is unlikely that the method of handling
memory allocation on a platform will change between applications, these
functions must be modified in the library at compile time.

Input/Output in libpng is done through png_read() and png_write(),
which currently just call fread() and fwrite().  The FILE * is stored in
png_struct and is initialized via png_init_io().  If you wish to change
the method of I/O, the library supplies callbacks that you can set
through the function png_set_read_fn() and png_set_write_fn() at run
time, instead of calling the png_init_io() function.
These functions
also provide a void pointer that can be retrieved via the function
png_get_io_ptr().  For example:

    png_set_read_fn(png_structp read_ptr,
        voidp read_io_ptr, png_rw_ptr read_data_fn)

    png_set_write_fn(png_structp write_ptr,
        voidp write_io_ptr, png_rw_ptr write_data_fn,
        png_flush_ptr output_flush_fn);

    voidp read_io_ptr = png_get_io_ptr(read_ptr);
    voidp write_io_ptr = png_get_io_ptr(write_ptr);

The replacement I/O functions should have prototypes as follows:

    void user_read_data(png_structp png_ptr,
        png_bytep data, png_uint_32 length);
    void user_write_data(png_structp png_ptr,
        png_bytep data, png_uint_32 length);
    void user_flush_data(png_structp png_ptr);

Supplying NULL for the read, write, or flush functions sets them back
to using the default C stream functions.  It is an error to read from
a write stream, and vice versa.

Error handling in libpng is done through png_error() and png_warning().
Errors handled through png_error() are fatal, meaning that png_error()
should never return to its caller.  Currently, this is handled via
setjmp() and longjmp(), but you could change this to do things like
exit() if you should wish.  On non-fatal errors, png_warning() is called
to print a warning message, and then control returns to the calling code.
By default png_error() and png_warning() print a message on stderr via
fprintf() unless the library is compiled with PNG_NO_STDIO defined.  If
you wish to change the behavior of the error functions, you will need to
set up your own message callbacks.  These functions are normally supplied
at the time that the png_struct is created.  It is also possible to change
these functions after png_create_???_struct() has been called by calling:

    png_set_error_fn(png_structp png_ptr,
        png_voidp error_ptr, png_error_ptr error_fn,
        png_error_ptr warning_fn);

    png_voidp error_ptr = png_get_error_ptr(png_ptr);

If NULL is supplied for either error_fn or warning_fn, then the libpng
default function will be used, calling fprintf() and/or longjmp() if a
problem is encountered.  The replacement error functions should have
parameters as follows:

    void user_error_fn(png_structp png_ptr,
        png_const_charp error_msg);
    void user_warning_fn(png_structp png_ptr,
        png_const_charp warning_msg);

The motivation behind using setjmp() and longjmp() is the C++ throw and
catch exception handling methods.  This makes the code much easier to write,
as there is no need to check every return code of every function call.
However, there are some uncertainties about the status of local variables
after a longjmp, so the user may want to be careful about doing anything after
setjmp returns non-zero besides returning itself.  Consult your compiler
documentation for more details.

If you need to read or write custom chunks, you will need to get deeper
into the libpng code, as a mechanism has not yet been supplied for user
callbacks with custom chunks.  First, read the PNG specification, and have
a first level of understanding of how it works.  Pay particular attention
to the sections that describe chunk names, and look at how other chunks
were designed, so you can do things similarly.  Second, check out the
sections of libpng that read and write chunks.  Try to find a chunk that
is similar to yours and copy off of it.  More details can be found in the
comments inside the code.  A way of handling unknown chunks in a generic
method, potentially via callback functions, would be best.

If you wish to write your own transformation for the data, look through
the part of the code that does the transformations, and check out some of
the simpler ones to get an idea of how they work.  Try to find a similar
transformation to the one you want to add and copy off of it.  More details
can be found in the comments inside the code itself.

Configuring for 16 bit platforms:

You may need to change the png_large_malloc() and png_large_free()
routines in pngmem.c, as these are required to allocate 64K, although
there is already support for many of the common DOS compilers.  Also,
you will want to look into zconf.h to tell zlib (and thus libpng) that
it cannot allocate more then 64K at a time.  Even if you can, the memory
won't be accessible.  So limit zlib and libpng to 64K by defining MAXSEG_64K.

Configuring for DOS:

For DOS users who only have access to the lower 640K, you will
have to limit zlib's memory usage via a png_set_compression_mem_level()
call.  See zlib.h or zconf.h in the zlib library for more information.

Configuring for Medium Model:

Libpng's support for medium model has been tested on most of the popular
compilers.  Make sure MAXSEG_64K gets defined, USE_FAR_KEYWORD gets
defined, and FAR gets defined to far in pngconf.h, and you should be
all set.  Everything in the library (except for zlib's structure) is
expecting far data.  You must use the typedefs with the p or pp on
the end for pointers (or at least look at them and be careful).  Make
note that the row's of data are defined as png_bytepp, which is an
unsigned char far * far *.

Configuring for gui/windowing platforms:

You will need to write new error and warning functions that use the GUI
interface, as described previously, and set them to be the error and
warning functions at the time that png_create_???_struct() is called,
in order to have them available during the structure initialization.
They can be changed later via png_set_error_fn().  On some compilers,
you may also have to change the memory allocators (png_malloc, etc.).

Configuring for compiler xxx:

All includes for libpng are in pngconf.h.  If you need to add/change/delete
an include, this is the place to do it.  The includes that are not
needed outside libpng are protected by the PNG_INTERNAL definition,
which is only defined for those routines inside libpng itself.  The
files in libpng proper only include png.h, which includes pngconf.h.

Configuring zlib:

There are special functions to configure the compression.  Perhaps the
most useful one changes the compression level, which currently uses
input compression values in the range 0 - 9.  The library normally
uses the default compression level (Z_DEFAULT_COMPRESSION = 6).  Tests
have shown that for a large majority of images, compression values in
the range 3-6 compress nearly as well as higher levels, and do so much
faster.  For online applications it may be desirable to have maximum speed
(Z_BEST_SPEED = 1).  With versions of zlib after v0.99, you can also
specify no compression (Z_NO_COMPRESSION = 0), but this would create
files larger than just storing the raw bitmap.  You can specify the
compression level by calling:

    png_set_compression_level(png_ptr, level);

Another useful one is to reduce the memory level used by the library.
The memory level defaults to 8, but it can be lowered if you are
short on memory (running DOS, for example, where you only have 640K).

    png_set_compression_mem_level(png_ptr, level);

The other functions are for configuring zlib.  They are not recommended
for normal use and may result in writing an invalid PNG file.  See
zlib.h for more information on what these mean.

    png_set_compression_strategy(png_ptr,
        strategy);
    png_set_compression_window_bits(png_ptr,
        window_bits);
    png_set_compression_method(png_ptr, method);

Controlling row filtering:

If you want to control whether libpng uses filtering or not, which
filters are used, and how it goes about picking row filters, you
can call one of these functions.  The selection and configuration
of row filters can have a significant impact on the size and
encoding speed and a somewhat lesser impact on the decoding speed
of an image.  Filtering is enabled by default for RGB and grayscale
images (with and without alpha), but not for paletted images nor
for any images with bit depths less than 8 bits/pixel.

The 'method' parameter sets the main filtering method, which is
currently only '0' in the PNG 1.2 specification.  The 'filters'
parameter sets which filter(s), if any, should be used for each
scanline.  Possible values are PNG_ALL_FILTERS and PNG_NO_FILTERS
to turn filtering on and off, respectively.

Individual filter types are PNG_FILTER_NONE, PNG_FILTER_SUB,
PNG_FILTER_UP, PNG_FILTER_AVG, PNG_FILTER_PAETH, which can be bitwise
ORed together '|' to specify one or more filters to use.  These
filters are described in more detail in the PNG specification.  If
you intend to change the filter type during the course of writing
the image, you should start with flags set for all of the filters
you intend to use so that libpng can initialize its internal
structures appropriately for all of the filter types.

    filters = PNG_FILTER_NONE | PNG_FILTER_SUB
       | PNG_FILTER_UP;
    png_set_filter(png_ptr, PNG_FILTER_TYPE_BASE,
       filters);

It is also possible to influence how libpng chooses from among the
available filters.  This is done in two ways - by telling it how
important it is to keep the same filter for successive rows, and
by telling it the relative computational costs of the filters.

    double weights[3] = {1.5, 1.3, 1.1},
       costs[PNG_FILTER_VALUE_LAST] =
       {1.0, 1.3, 1.3, 1.5, 1.7};

    png_set_filter_selection(png_ptr,
       PNG_FILTER_SELECTION_WEIGHTED, 3,
       weights, costs);

The weights are multiplying factors that indicate to libpng that the
row filter should be the same for successive rows unless another row filter
is that many times better than the previous filter.  In the above example,
if the previous 3 filters were SUB, SUB, NONE, the SUB filter could have a
"sum of absolute differences" 1.5 x 1.3 times higher than other filters
and still be chosen, while the NONE filter could have a sum 1.1 times
higher than other filters and still be chosen.  Unspecified weights are
taken to be 1.0, and the specified weights should probably be declining
like those above in order to emphasize recent filters over older filters.

The filter costs specify for each filter type a relative decoding cost
to be considered when selecting row filters.  This means that filters
with higher costs are less likely to be chosen over filters with lower
costs, unless their "sum of absolute differences" is that much smaller.
The costs do not necessarily reflect the exact computational speeds of
the various filters, since this would unduly influence the final image
size.

Note that the numbers above were invented purely for this example and
are given only to help explain the function usage.  Little testing has
been done to find optimum values for either the costs or the weights.

Removing unwanted object code:

There are a bunch of #define's in pngconf.h that control what parts of
libpng are compiled.  All the defines end in _SUPPORTED.  If you are
never going to use a capability, you can change the #define to #undef
before recompiling libpng and save yourself code and data space, or
you can turn off individual capabilities with defines that begin with
PNG_NO_.

You can also turn all of the transforms and ancillary chunk capabilities
off en masse with  compiler directives that define
PNG_NO_READ[or WRITE]_TRANSFORMS, or PNG_NO_READ[or WRITE]_ANCILLARY_CHUNKS,
or all four,
along with directives to turn on any of the capabilities that you do
want.  The PNG_NO_READ[or WRITE]_TRANSFORMS directives disable
the extra transformations but still leave the library fully capable of reading
and writing PNG files with all known public chunks [except for sPLT].
Use of the PNG_NO_READ[or WRITE]_ANCILLARY_CHUNKS directive
produces a library that is incapable of reading or writing ancillary chunks.
If you are not using the progressive reading capability, you can
turn that off with PNG_NO_PROGRESSIVE_READ (don't confuse
this with the INTERLACING capability, which you'll still have).

All the reading and writing specific code are in separate files, so the
linker should only grab the files it needs.  However, if you want to
make sure, or if you are building a stand alone library, all the
reading files start with pngr and all the writing files start with
pngw.  The files that don't match either (like png.c, pngtrans.c, etc.)
are used for both reading and writing, and always need to be included.
The progressive reader is in pngpread.c

If you are creating or distributing a dynamically linked library (a .so
or DLL file), you should not remove or disable any parts of the library,
as this will cause applications linked with different versions of the
library to fail if they call functions not available in your library.
The size of the library itself should not be an issue, because only
those sections that are actually used will be loaded into memory.

Requesting debug printout:

The macro definition PNG_DEBUG can be used to request debugging
printout.  Set it to an integer value in the range 0 to 3.  Higher
numbers result in increasing amounts of debugging information.  The
information is printed to the "stderr" file, unless another file
name is specified in the PNG_DEBUG_FILE macro definition.

When PNG_DEBUG > 0, the following functions (macros) become available:

   png_debug(level, message)
   png_debug1(level, message, p1)
   png_debug2(level, message, p1, p2)

in which "level" is compared to PNG_DEBUG to decide whether to print
the message, "message" is the formatted string to be printed,
and p1 and p2 are parameters that are to be embedded in the string
according to printf-style formatting directives.  For example,

   png_debug1(2, "foo=%d\n", foo);

is expanded to

   if(PNG_DEBUG > 2)
     fprintf(PNG_DEBUG_FILE, "foo=%d\n", foo);

When PNG_DEBUG is defined but is zero, the macros aren't defined, but you
can still use PNG_DEBUG to control your own debugging:

   #ifdef PNG_DEBUG
       fprintf(stderr, ...
   #endif

When PNG_DEBUG = 1, the macros are defined, but only png_debug statements
having level = 0 will be printed.  There aren't any such statements in
this version of libpng, but if you insert some they will be printed.

VI.  Changes to Libpng from version 0.88

It should be noted that versions of libpng later than 0.96 are not
distributed by the original libpng author, Guy Schalnat, nor by
Andreas Dilger, who had taken over from Guy during 1996 and 1997, and
distributed versions 0.89 through 0.96, but rather by another member
of the original PNG Group, Glenn Randers-Pehrson.  Guy and Andreas are
still alive and well, but they have moved on to other things.

The old libpng functions png_read_init(), png_write_init(),
png_info_init(), png_read_destroy(), and png_write_destory() have been
moved to PNG_INTERNAL in version 0.95 to discourage their use.  The
preferred method of creating and initializing the libpng structures is
via the png_create_read_struct(), png_create_write_struct(), and
png_create_info_struct() because they isolate the size of the structures
from the application, allow version error checking, and also allow the
use of custom error handling routines during the initialization, which
the old functions do not.  The functions png_read_destroy() and
png_write_destroy() do not actually free the memory that libpng
allocated for these structs, but just reset the data structures, so they
can be used instead of png_destroy_read_struct() and
png_destroy_write_struct() if you feel there is too much system overhead
allocating and freeing the png_struct for each image read.

Setting the error callbacks via png_set_message_fn() before
png_read_init() as was suggested in libpng-0.88 is no longer supported
because this caused applications that do not use custom error functions
to fail if the png_ptr was not initialized to zero.  It is still possible
to set the error callbacks AFTER png_read_init(), or to change them with
png_set_error_fn(), which is essentially the same function, but with a
new name to force compilation errors with applications that try to use
the old method.

VII. Y2K Compliance in libpng

October 15, 1999

Since the PNG Development group is an ad-hoc body, we can't make
an official declaration.

This is your unofficial assurance that libpng from version 0.71 and
upward through 1.0.5 are Y2K compliant.  It is my belief that earlier
versions were also Y2K compliant.

Libpng only has three year fields.  One is a 2-byte unsigned integer that
will hold years up to 65535.  The other two hold the date in text
format, and will hold years up to 9999.

The integer is
    "png_uint_16 year" in png_time_struct.

The strings are
    "png_charp time_buffer" in png_struct and
    "near_time_buffer", which is a local character string in png.c.

There are seven time-related functions:

    png_convert_to_rfc_1123() in png.c 
      (formerly png_convert_to_rfc_1152() in error)
    png_convert_from_struct_tm() in pngwrite.c, called in pngwrite.c
    png_convert_from_time_t() in pngwrite.c
    png_get_tIME() in pngget.c
    png_handle_tIME() in pngrutil.c, called in pngread.c
    png_set_tIME() in pngset.c
    png_write_tIME() in pngwutil.c, called in pngwrite.c

All appear to handle dates properly in a Y2K environment.  The 
png_convert_from_time_t() function calls gmtime() to convert from system
clock time, which returns (year - 1900), which we properly convert to
the full 4-digit year.  There is a possibility that applications using
libpng are not passing 4-digit years into the png_convert_to_rfc_1123()
function, or that they are incorrectly passing only a 2-digit year
instead of "year - 1900" into the png_convert_from_struct_tm() function,
but this is not under our control.  The libpng documentation has always
stated that it works with 4-digit years, and the APIs have been
documented as such.

The tIME chunk itself is also Y2K compliant.  It uses a 2-byte unsigned
integer to hold the year, and can hold years as large as 65535.

zlib, upon which libpng depends, is also Y2K compliant.  It contains
no date-related code.


   Glenn Randers-Pehrson
   libpng maintainer
   PNG Development Group
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dxg\d3dx8\misc\zlib113\algorithm.txt ===
1. Compression algorithm (deflate)

The deflation algorithm used by gzip (also zip and zlib) is a variation of
LZ77 (Lempel-Ziv 1977, see reference below). It finds duplicated strings in
the input data.  The second occurrence of a string is replaced by a
pointer to the previous string, in the form of a pair (distance,
length).  Distances are limited to 32K bytes, and lengths are limited
to 258 bytes. When a string does not occur anywhere in the previous
32K bytes, it is emitted as a sequence of literal bytes.  (In this
description, `string' must be taken as an arbitrary sequence of bytes,
and is not restricted to printable characters.)

Literals or match lengths are compressed with one Huffman tree, and
match distances are compressed with another tree. The trees are stored
in a compact form at the start of each block. The blocks can have any
size (except that the compressed data for one block must fit in
available memory). A block is terminated when deflate() determines that
it would be useful to start another block with fresh trees. (This is
somewhat similar to the behavior of LZW-based _compress_.)

Duplicated strings are found using a hash table. All input strings of
length 3 are inserted in the hash table. A hash index is computed for
the next 3 bytes. If the hash chain for this index is not empty, all
strings in the chain are compared with the current input string, and
the longest match is selected.

The hash chains are searched starting with the most recent strings, to
favor small distances and thus take advantage of the Huffman encoding.
The hash chains are singly linked. There are no deletions from the
hash chains, the algorithm simply discards matches that are too old.

To avoid a worst-case situation, very long hash chains are arbitrarily
truncated at a certain length, determined by a runtime option (level
parameter of deflateInit). So deflate() does not always find the longest
possible match but generally finds a match which is long enough.

deflate() also defers the selection of matches with a lazy evaluation
mechanism. After a match of length N has been found, deflate() searches for
a longer match at the next input byte. If a longer match is found, the
previous match is truncated to a length of one (thus producing a single
literal byte) and the process of lazy evaluation begins again. Otherwise,
the original match is kept, and the next match search is attempted only N
steps later.

The lazy match evaluation is also subject to a runtime parameter. If
the current match is long enough, deflate() reduces the search for a longer
match, thus speeding up the whole process. If compression ratio is more
important than speed, deflate() attempts a complete second search even if
the first match is already long enough.

The lazy match evaluation is not performed for the fastest compression
modes (level parameter 1 to 3). For these fast modes, new strings
are inserted in the hash table only when no match was found, or
when the match is not too long. This degrades the compression ratio
but saves time since there are both fewer insertions and fewer searches.


2. Decompression algorithm (inflate)

2.1 Introduction

The real question is, given a Huffman tree, how to decode fast.  The most
important realization is that shorter codes are much more common than
longer codes, so pay attention to decoding the short codes fast, and let
the long codes take longer to decode.

inflate() sets up a first level table that covers some number of bits of
input less than the length of longest code.  It gets that many bits from the
stream, and looks it up in the table.  The table will tell if the next
code is that many bits or less and how many, and if it is, it will tell
the value, else it will point to the next level table for which inflate()
grabs more bits and tries to decode a longer code.

How many bits to make the first lookup is a tradeoff between the time it
takes to decode and the time it takes to build the table.  If building the
table took no time (and if you had infinite memory), then there would only
be a first level table to cover all the way to the longest code.  However,
building the table ends up taking a lot longer for more bits since short
codes are replicated many times in such a table.  What inflate() does is
simply to make the number of bits in the first table a variable, and set it
for the maximum speed.

inflate() sends new trees relatively often, so it is possibly set for a
smaller first level table than an application that has only one tree for
all the data.  For inflate, which has 286 possible codes for the
literal/length tree, the size of the first table is nine bits.  Also the
distance trees have 30 possible values, and the size of the first table is
six bits.  Note that for each of those cases, the table ended up one bit
longer than the ``average'' code length, i.e. the code length of an
approximately flat code which would be a little more than eight bits for
286 symbols and a little less than five bits for 30 symbols.  It would be
interesting to see if optimizing the first level table for other
applications gave values within a bit or two of the flat code size.


2.2 More details on the inflate table lookup

Ok, you want to know what this cleverly obfuscated inflate tree actually  
looks like.  You are correct that it's not a Huffman tree.  It is simply a  
lookup table for the first, let's say, nine bits of a Huffman symbol.  The  
symbol could be as short as one bit or as long as 15 bits.  If a particular  
symbol is shorter than nine bits, then that symbol's translation is duplicated
in all those entries that start with that symbol's bits.  For example, if the  
symbol is four bits, then it's duplicated 32 times in a nine-bit table.  If a  
symbol is nine bits long, it appears in the table once.

If the symbol is longer than nine bits, then that entry in the table points  
to another similar table for the remaining bits.  Again, there are duplicated  
entries as needed.  The idea is that most of the time the symbol will be short
and there will only be one table look up.  (That's whole idea behind data  
compression in the first place.)  For the less frequent long symbols, there  
will be two lookups.  If you had a compression method with really long  
symbols, you could have as many levels of lookups as is efficient.  For  
inflate, two is enough.

So a table entry either points to another table (in which case nine bits in  
the above example are gobbled), or it contains the translation for the symbol  
and the number of bits to gobble.  Then you start again with the next  
ungobbled bit.

You may wonder: why not just have one lookup table for how ever many bits the  
longest symbol is?  The reason is that if you do that, you end up spending  
more time filling in duplicate symbol entries than you do actually decoding.   
At least for deflate's output that generates new trees every several 10's of  
kbytes.  You can imagine that filling in a 2^15 entry table for a 15-bit code  
would take too long if you're only decoding several thousand symbols.  At the  
other extreme, you could make a new table for every bit in the code.  In fact,
that's essentially a Huffman tree.  But then you spend two much time  
traversing the tree while decoding, even for short symbols.

So the number of bits for the first lookup table is a trade of the time to  
fill out the table vs. the time spent looking at the second level and above of
the table.

Here is an example, scaled down:

The code being decoded, with 10 symbols, from 1 to 6 bits long:

A: 0
B: 10
C: 1100
D: 11010
E: 11011
F: 11100
G: 11101
H: 11110
I: 111110
J: 111111

Let's make the first table three bits long (eight entries):

000: A,1
001: A,1
010: A,1
011: A,1
100: B,2
101: B,2
110: -> table X (gobble 3 bits)
111: -> table Y (gobble 3 bits)

Each entry is what the bits decode to and how many bits that is, i.e. how  
many bits to gobble.  Or the entry points to another table, with the number of
bits to gobble implicit in the size of the table.

Table X is two bits long since the longest code starting with 110 is five bits
long:

00: C,1
01: C,1
10: D,2
11: E,2

Table Y is three bits long since the longest code starting with 111 is six  
bits long:

000: F,2
001: F,2
010: G,2
011: G,2
100: H,2
101: H,2
110: I,3
111: J,3

So what we have here are three tables with a total of 20 entries that had to  
be constructed.  That's compared to 64 entries for a single table.  Or  
compared to 16 entries for a Huffman tree (six two entry tables and one four  
entry table).  Assuming that the code ideally represents the probability of  
the symbols, it takes on the average 1.25 lookups per symbol.  That's compared
to one lookup for the single table, or 1.66 lookups per symbol for the  
Huffman tree.

There, I think that gives you a picture of what's going on.  For inflate, the  
meaning of a particular symbol is often more than just a letter.  It can be a  
byte (a "literal"), or it can be either a length or a distance which  
indicates a base value and a number of bits to fetch after the code that is  
added to the base value.  Or it might be the special end-of-block code.  The  
data structures created in inftrees.c try to encode all that information  
compactly in the tables.


Jean-loup Gailly        Mark Adler
jloup@gzip.org          madler@alumni.caltech.edu


References:

[LZ77] Ziv J., Lempel A., ``A Universal Algorithm for Sequential Data
Compression,'' IEEE Transactions on Information Theory, Vol. 23, No. 3,
pp. 337-343.

``DEFLATE Compressed Data Format Specification'' available in
ftp://ds.internic.net/rfc/rfc1951.txt
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dxg\d3dx8\misc\zlib113\contrib\visual-basic.txt ===
See below some functions declarations for Visual Basic.

Frequently Asked Question:

Q: Each time I use the compress function I get the -5 error (not enough
   room in the output buffer).

A: Make sure that the length of the compressed buffer is passed by
   reference ("as any"), not by value ("as long"). Also check that
   before the call of compress this length is equal to the total size of
   the compressed buffer and not zero.


From: "Jon Caruana" <jon-net@usa.net>
Subject: Re: How to port zlib declares to vb?
Date: Mon, 28 Oct 1996 18:33:03 -0600

Got the answer! (I haven't had time to check this but it's what I got, and
looks correct):

He has the following routines working:
        compress
        uncompress
        gzopen
        gzwrite
        gzread
        gzclose

Declares follow: (Quoted from Carlos Rios <c_rios@sonda.cl>, in Vb4 form)

#If Win16 Then   'Use Win16 calls.
Declare Function compress Lib "ZLIB.DLL" (ByVal compr As
        String, comprLen As Any, ByVal buf As String, ByVal buflen
        As Long) As Integer
Declare Function uncompress Lib "ZLIB.DLL" (ByVal uncompr
        As String, uncomprLen As Any, ByVal compr As String, ByVal
        lcompr As Long) As Integer
Declare Function gzopen Lib "ZLIB.DLL" (ByVal filePath As
        String, ByVal mode As String) As Long
Declare Function gzread Lib "ZLIB.DLL" (ByVal file As
        Long, ByVal uncompr As String, ByVal uncomprLen As Integer)
        As Integer
Declare Function gzwrite Lib "ZLIB.DLL" (ByVal file As
        Long, ByVal uncompr As String, ByVal uncomprLen As Integer)
        As Integer
Declare Function gzclose Lib "ZLIB.DLL" (ByVal file As
        Long) As Integer
#Else
Declare Function compress Lib "ZLIB32.DLL"
        (ByVal compr As String, comprLen As Any, ByVal buf As
        String, ByVal buflen As Long) As Integer
Declare Function uncompress Lib "ZLIB32.DLL"
        (ByVal uncompr As String, uncomprLen As Any, ByVal compr As
        String, ByVal lcompr As Long) As Long
Declare Function gzopen Lib "ZLIB32.DLL"
        (ByVal file As String, ByVal mode As String) As Long
Declare Function gzread Lib "ZLIB32.DLL"
        (ByVal file As Long, ByVal uncompr As String, ByVal
        uncomprLen As Long) As Long
Declare Function gzwrite Lib "ZLIB32.DLL"
        (ByVal file As Long, ByVal uncompr As String, ByVal
        uncomprLen As Long) As Long
Declare Function gzclose Lib "ZLIB32.DLL"
        (ByVal file As Long) As Long
#End If

-Jon Caruana
jon-net@usa.net
Microsoft Sitebuilder Network Level 1 Member - HTML Writer's Guild Member
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dxg\d3dx8\misc\zlib113\contrib\delphi2\readme.txt ===
These are files used to compile zlib under Borland C++ Builder 3.

zlib.bpg is the main project group that can be loaded in the BCB IDE and
loads all other *.bpr projects

zlib.bpr is a project used to create a static zlib.lib library with C calling
convention for functions.

zlib32.bpr creates a zlib32.dll dynamic link library with Windows standard
calling convention.

d_zlib.bpr creates a set of .obj files with register calling convention.
These files are used by zlib.pas to create a Delphi unit containing zlib.
The d_zlib.lib file generated isn't useful and can be deleted.

zlib.cpp, zlib32.cpp and d_zlib.cpp are used by the above projects.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dxg\d3dx8\misc\zlib113\contrib\minizip\readme.txt ===
UnZip 0.15 additionnal library


  This unzip package allow extract file from .ZIP file, compatible with 
PKZip 2.04g, WinZip, InfoZip tools and compatible.

  Multi volume ZipFile (span) are not supported, and old compression used by old 
PKZip 1.x are not supported.

See probdesc.zip from PKWare for specification of .ZIP format.

What is Unzip
  The Zlib library support the deflate compression and the creation of gzip (.gz) 
file. Zlib is free and small.
  The .Zip format, which can contain several compressed files (.gz can containt
only one file) is a very popular format. This is why I've written a package for reading file compressed in Zipfile.

Using Unzip package

You need source of Zlib (get zlib111.zip and read zlib.h).
Get unzlb015.zip and read unzip.h (whith documentation of unzip functions)

The Unzip package is only two file : unzip.h and unzip.c. But it use the Zlib 
  files.
unztst.c is a simple sample program, which list file in a zipfile and display
  README.TXT or FILE_ID.DIZ (if these files are found).
miniunz.c is a mini unzip program.

I'm also currenlyt writing a zipping portion (zip.h, zip.c and test with minizip.c)

Please email me for feedback.
I hope my source is compatible with Unix system, but I need your help for be sure

Latest revision : Mar 04th, 1998

Check http://www.winimage.com/zLibDll/unzip.html for up to date info.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dxg\d3dx8\plugins\3dsmax3\readme.txt ===
A 3DSMaxR3 -> X-file exporter with support for Physique modifiers.

Installation
------------

Copy XSkinExp.dle into <3DSMAXR3 path>\plugins

Usage
-----

1) Setup your scene.
2) Choose export (or export selected) from the File menu.
3) Select a filename through the standard dialog that should pop up.
4) Select an X-file data format to use (text, binary or binary+compressed).
5) Hit Go!

Notes
-----

1) The exporter currently only exports base objects (i.e. modifier stacks are ignored).  So any modifiers that you apply must be collapsed before export.  You can save your data to a MAX file before collapsing if you want to get your modifier stacks back.  The exception is the physique modifiers - see (2).

2) If you use physique, before export make sure that no modifiers exist below either one in the stack.  Any modifiers above or below physique are just ignored.

3) Currently only the diffuse texture is exported (absolute file path), and at most one set of texture coordinates (applied with a UVW modifier for example, and then collapsed before export).

4) Material properties exported are:
	- diffuse color
	- transparency
	- power (shininess strengh in 3DS... correct?)
	- specular color
	- emissive color
	- texture file name (diffuse texture absolute file path).

5) Materials may be per-mesh or per-face (multi-material).  

6) Faces are always triangles.

7) The export process guarantees that all frames (bones/nodes, whatever you want to call them) in the scene hierarchy get unique string names.  If a node has a name in 3DS, the exported name will use that, and append numbers if necessary to guarantee uniqueness.  3DS node names also have to be "censored" to support the character restrictions for strings in the x-file format.

8) See the Notes on New Templates to learn about extensions added to the X-File format...

9) The definitions of any new templates are always listed at the beginning of exported x-files.

Notes on New Templates
----------------------
The c header file appended to the bottom of this readme may be used to help read the custom templates added to the x-file format.

For now, these templates are:

1) VertexDuplicationIndices

        template VertexDuplicationIndices
        {
            <B8D65549-D7C9-4995-89CF-53A9A8B031E3>
            DWORD nIndices;
            DWORD nOriginalVertices;
            array DWORD indices[nIndices];
        }

This template is instantiated on a per-mesh basis, holding information about which vertices in the mesh are duplicates of each other.  Duplicates result when a vertex sits on a smoothing group or material boundary.  The purpose of this template is to allow the loader to determine which vertices exhibiting different peripheral parameters are actually the same vertex in the model.  Certain applications (mesh simplification for example) can make use of this information.

Fields: 

DWORD nIndices --  the number of indices in the array indices[nIndices].  This will be equal to the number of vertices in the current mesh.

DWORD nOriginalVertices -- the number of vertices in the mesh before any duplication occured.

array DWORD indices[nIndices] -- indices[n] holds the vertex index that vertex[n] in the vertex array for the mesh would have had if no duplication had occured.  So any indices in this array that are the same indicate duplicated vertices.

2) XSkinMeshHeader

        template XSkinMeshHeader
        {
            <3CF169CE-FF7C-44ab-93C0-F78F62D172E2>
            WORD nMaxSkinWeightsPerVertex;
            WORD nMaxSkinWeightsPerFace;
            WORD nBones; 
        }

This template is instantiated on a per-mesh basis only in meshes that contain exported skinning information.  The purpose of this template is to provide information about the nature of the skinning information that was exported.

Fields:
WORD nMaxSkinWeightsPerVertex -- the maximum number of transfoms that affect a vertex in the mesh.

WORD nMaxSkinWeightsPerFace -- the maximum number of unique transforms that affect the three vertices of any face.

WORD nBones -- the number of bones that affect vertices in this mesh

3) SkinWeights

        template SkinWeights
        { 
            <6F0D123B-BAD2-4167-A0D0-80224F25FABB> 
            STRING transformNodeName;
            DWORD nWeights; 
            array DWORD vertexIndices[nWeights]; 
            array float weights[nWeights]; 
            Matrix4x4 matrixOffset; 
        } 

This template is instantiated on a per-mesh basis.  Within a mesh, a sequence of n instances of this template will show up, where n is the number of bones (X file frames) which influence the vertices in the mesh.  Each instance of the template basically defines the influence of a particular bone on the mesh.  There is a list of vertex indices, and a corresponding list of weights.

Fields:
STRING transformNodeName -- the name of the bone whose influence we are defining.

DWORD nWeights -- the number of vertices affected by this bone

array DWORD vertexIndices[nWeights] -- the vertices influenced by this bone

array float weights[nWeights] -- the weights for each of the vertices influenced by this bone

Matrix4x4 matrixOffset -- this matrix transforms the mesh vertices to the space of the bone. This when cancatenated to the bone's transform will give the world space coordinates of the mesh as affected by the bone.

4) Addition to AnimationKey

	template AnimationKey
	{
	    <10DD46A8-775B-11cf-8F52-0040333594A3>
	    DWORD keyType;
	    DWORD nKeys;
	    array keys TimedFloatKeys[nKeys];
	}

This is an existing template in .X files. This has been extended to support a new key type of 4 which is a matrix key (in addition to position, rotation and scale). For example:

AnimationKey 
{
    4;
    2;
    0;16;   0.999841,-0.017505, 0.003500,0.000000,
            0.017664, 0.998492,-0.051979,0.000000,
           -0.002585, 0.052033, 0.998642,0.000000,
	   28.181364,-0.033845, 0.001760,1.000000;;,
    160;16; 0.999854,-0.016764, 0.003258,0.000000,
	    0.016922, 0.998239,-0.056864,0.000000,
	   -0.002299, 0.056911, 0.998377,0.000000,
	   28.181427,-0.033822, 0.001927,1.000000;;,
}
This was added to export animations from Biped plug-in. Biped does not give access to position / rotation / scale components of the animation. These matrices need to be decomposed by the application to get interpolable components.

Useful Header
-------------
The rest of this readme contains a useful header file, used in the export process, and useful for your loader, if you use the X File loading API in the DirectX SDK.

//-----------------------------------------------------------------------------
// File: XSkinExpTemplates.h
//
// Desc: Custom templates used for skin export format.
//
// Copyright (C) 1998-1999 Microsoft Corporation. All Rights Reserved.
//-----------------------------------------------------------------------------
#ifndef __XSKINEXPTEMPLATES_H__
#define __XSKINEXPTEMPLATES_H__

// {3CF169CE-FF7C-44ab-93C0-F78F62D172E2}
DEFINE_GUID(DXFILEOBJ_XSkinMeshHeader,
0x3cf169ce, 0xff7c, 0x44ab, 0x93, 0xc0, 0xf7, 0x8f, 0x62, 0xd1, 0x72, 0xe2);

// {B8D65549-D7C9-4995-89CF-53A9A8B031E3}
DEFINE_GUID(DXFILEOBJ_VertexDuplicationIndices, 
0xb8d65549, 0xd7c9, 0x4995, 0x89, 0xcf, 0x53, 0xa9, 0xa8, 0xb0, 0x31, 0xe3);

// {6F0D123B-BAD2-4167-A0D0-80224F25FABB}
DEFINE_GUID(DXFILEOBJ_SkinWeights, 
0x6f0d123b, 0xbad2, 0x4167, 0xa0, 0xd0, 0x80, 0x22, 0x4f, 0x25, 0xfa, 0xbb);

#define XSKINEXP_TEMPLATES \
        "xof 0303txt 0032\
        template XSkinMeshHeader \
        { \
            <3CF169CE-FF7C-44ab-93C0-F78F62D172E2> \
            WORD nMaxSkinWeightsPerVertex; \
            WORD nMaxSkinWeightsPerFace; \
        } \
        template VertexDuplicationIndices \
        { \
            <B8D65549-D7C9-4995-89CF-53A9A8B031E3> \
            DWORD nIndices; \
            DWORD nOriginalVertices; \
            array DWORD indices[nIndices]; \
        } \
        template SkinWeights \
        { \
            <6F0D123B-BAD2-4167-A0D0-80224F25FABB> \
            STRING transformNodeName;\
            DWORD nWeights; \
            array DWORD vertexIndices[nWeights]; \
            array float weights[nWeights]; \
            Matrix4x4 matrixOffset; \
        } \
#endif //__XSKINEXPTEMPLATES_H__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dxg\d3dx8\plugins\maya25\Readme.txt ===
======================
 MAYA X-FILE EXPORTER
======================


Installation
------------

	1] Make sure that Maya is not running
	2] Copy "xExport.mll" to "<mayapathname>\bin\plug-ins"
	3] Copy "xfileTranslatorOpts.mel" to "<mayapathname>\scripts\others"
	4] Copy "bicubicBezierPatches.mel" to "<mayapathname>\scripts\others"
	5] Run Maya
	6] Select "Window->General Editors->Plug-in Manager" from the main menu bar
	7] Turn on the "auto load" checkbox next to "xExport.mll"
	8] Turn on the "loaded" checkbox next to "xExport.mll"


Usage
-----

	1] Select "File->Export All" from the main menu bar
	2] Select "XFile (*.*)" from the "File of type" drop-down menu
	3] Select a file name from the browse window
	4] Click the "Export" button
		-OR-
	   Click the "Options..." button for further options (recommended)

Notes
-----
	- If a material contains a texture, then the diffuse factor is used for the RGB components
		of the face color.
	- See the notes on New Templates to learn about extensions added to the X-File format.
	- TRS animation (as opposed to vertex animation) is exported.
	- Polygons are not triangulated.
	- Use the MEL command bicubicBezierPatches() to convert a NURBS surface into a
		bicubic-bezier-quad-patch-mesh.  
	- If a NURBS surface is not bicubic-bezier-quad-patch-mesh then it will be tesselated.
	- Usually setting the display quality to 1 works best.  If the operation fails, try again
		with the display quality set to 2, and then if it still doesn't work, try with
		the display quality set to 3.


Issues
------
	- Unique names for meshes and joints are not checked for.
	- Scenes created with older versions of Maya may not be exported correctly.
	- Since different viewers may interpolate between TRS keyframes differently, animation of 	
		an object is not guaranteed to look the same as in Maya except at the keyframes of 
		that object.  To overcome this, choose Animation Mode to be "regular" instead of
		keyframed.
	- Currently bezier-patch exporting is limited to at most 1 material per mesh.
	- Currently bezier-patch exporting does not include skinning information.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dxg\d3dx8\plugins\maya30\readme.txt ===
======================
 MAYA X-FILE EXPORTER
======================


Installation
------------

	1] Make sure that Maya is not running
	2] Copy "xExport.mll" to "<mayapathname>\bin\plug-ins"
	3] Copy "xfileTranslatorOpts.mel" to "<mayapathname>\scripts\others"
	4] Copy "bicubicBezierPatches.mel" to "<mayapathname>\scripts\others"
	5] Run Maya
	6] Select "Window->General Editors->Plug-in Manager" from the main menu bar
	7] Turn on the "auto load" checkbox next to "xExport.mll"
	8] Turn on the "loaded" checkbox next to "xExport.mll"


Usage
-----

	1] Select "File->Export All" from the main menu bar
	2] Select "XFile (*.*)" from the "File of type" drop-down menu
	3] Select a file name from the browse window
	4] Click the "Export" button
		-OR-
	   Click the "Options..." button for further options (recommended)

Notes
-----
	- If a material contains a texture, then the diffuse factor is used for the RGB components
		of the face color.
	- See the notes on New Templates to learn about extensions added to the X-File format.
	- TRS animation (as opposed to vertex animation) is exported.
	- Polygons are not triangulated.
	- Use the MEL command bicubicBezierPatches() to convert a NURBS surface into a
		bicubic-bezier-quad-patch-mesh.  
	- If a NURBS surface is not bicubic-bezier-quad-patch-mesh then it will be tesselated.
	- Usually setting the display quality to 1 works best.  If the operation fails, try again
		with the display quality set to 2, and then if it still doesn't work, try with
		the display quality set to 3.
	- If you need to recompile the plugin recompile it against the libMDtAPI.lib that is contained 
	  in this directory otherwise output of texture references will not work.  Alias will be updating 
	  this in the near future so this will not be needed.


Issues
------
	- Unique names for meshes and joints are not checked for.
	- Scenes created with older versions of Maya may not be exported correctly.
	- Since different viewers may interpolate between TRS keyframes differently, animation of 	
		an object is not guaranteed to look the same as in Maya except at the keyframes of 
		that object.  To overcome this, choose Animation Mode to be "regular" instead of
		keyframed.
	- Currently bezier-patch exporting is limited to at most 1 material per mesh.
	- Currently bezier-patch exporting does not include skinning information.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dxg\doc\relnotes.txt ===
Beta One
========

Core DX8 functionality not yet supported:

        Full-screen antialiasing
        
        Cursor functionality
        
        Overlays
        
        Gamma correction
        
        High-order surfaces
        
Xbox extensions not yet supported:

        Compressed vertex attributes
        
        Shadows
        
        2-sided lighting
        
        Persistent vertex attributes
        
        Floating point fog
        
        Event notifiers
        
        Pre-compiled push-buffers
        
Need to talk about UMA support
        - Code snippets for building objects
        - How reference counts work with pre-built objects
        - How Get/SetPrivateData doesn't work (or does it?)
        - Alignment requirements
        - How cache has to be flushed for pre-built data (or DMAed in)
        
Talk about constant capabilities of driver (i.e., explain our D3DCAPS8 settings)
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dxg\doc\differences.txt ===
Xbox D3D Functionality Differences
----------------------------------

Private data does not persist on surface and volume objects obtained
from container textures

D3DLOCK_DISCARD is ignored for VBs and textures

D3DPOOL parameters are ignored

AddRef/Release return both internal and external reference counts

D3DSWAPEFFECT_DISCARD does no enforcement on debug builds

UP DrawPrimitive APIs do not set the stream zero settings to NULL

The dwFVF field for CreateVertexBuffer is ignored

The values of many #defines have changed (e.g., packed renderstates)

D3DDEVTYPE_HAL is the only allowed device type (or it is ignored)

D3DBACKBUFFER_TYPE is ignored

The formats passed to CreateDevice and Reset are always mapped to their linear equivalents.

Vertex buffers are limited to 65535 vertices, and D3DFMT_INDEX32 is not 
supported



Unsupported in Xbox D3D
-----------------------

Trivially unsupported:

        GetAdpaterMonitor()
        GetLOD()
        SetLOD
        QueryInterface
        TestCooperativeLevel
        RegisterSoftwareDevice
        GetAvailableTextureMem
        GetPriority
        SetPriority
        PreLoad
        AddDirtyRect
        AddDirtyBox
        D3DCREATE_SOFTWARE_VERTEXPROCESSING
        D3DCREATE_MIXED_MODE_VERTEXPROCESSING
        D3DCREATE_MULTI_THREADED
        D3DCREATE_FPU_PRESERVE
        
ProcessVertices() is unsupported

SwapChain objects are unsupported

Windowed mode is unsupported



Xbox D3D Extensions to Current APIs
-----------------------------------

GetBackBuffer(-1) gets the front buffer

Constant alpha blend thingie

D3DCLEAR_R, G, B, A

D3DTADDRESS_CLAMPTOEDGE

D3DPT_LINELOOP, D3DPT_QUADLIST, D3DPT_QUADSTRIP, D3DPT_POLYGON

D3DTSS_COLORKEYOP, D3DTSS_COLORKEYCOLOR for color keying

D3DTSS_COLORSIGN for sign texture color values

D3DTSS_ALPHAKILL 

D3DVSD_SKIPBYTES for skipping a number of bytes instead of dwords

Compressed D3DVSDT_ types for CreateVertexShader declaration (D3DVSDT_SHORT1,
etc.)

D3DVBF_2WEIGHTS2MATRICES, etc.


Xbox D3D New APIs
-----------------

SetPushBufferSize

CreatePalette, ?????????

IsBusy, BlockUntilIdle

MoveResourceMemory

Register, Deregister for prebuilt VBs and textures

MoveResourceMemory for promoting or demoting VBs and textures between AGP
and video memory

SetShaderConstantMode for giving access to 192 vertex shader constant registers

Draw[Indexed]Vertices[UP] same as Draw[Indexed]Primitive[UP] but takes vertex 
count









Something to set the swath width



Performance Differences
-----------------------

Vertex buffer switching (via SetStream) is very cheap

Perf overhead of primitives radically changed (e.g., SetTexture, SetTransform)

Xbox D3D is more immediate-mode, and less deferred-processing, than the PC
implementation.  Consequently, doing stuff like repeatedly setting the same states 
should be avoided

Get/SetPrivateData() are expensive for all objects even if they're only used on a few
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dxg\tests\readme.txt ===
Many of these tests requires the files located in the Media directory.  In order to run them, you need to:

xcopy /S X:\XBOX\private\windows\directx\dxg\tests\Media c:\tdata\{00000~1\Media
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dxg\tests\fillrate\fillrate.ini ===
;
; fillrate.ini
;

;
; some simple mappings
;

[defines]
$TEXINPUT = PS_REGISTER_T0
$COMPAREMODE = PS_COMPAREMODE_S_LT

;
; main fillrate options
;

[options]
; Which type of test to run. Also selectable by l/r triggers on gamepad.
;   0 - DoQuickTimedTest
;   1 - DoMultiSampleTimedTest
;   2 - DoCompleteTimedTest
;   3 - DoTextureTest
g_iCurTest = 0;

AutoDepthStencilFormat = D3DFMT_D24S8
BackBufferFormat = D3DFMT_A8R8G8B8;     // D3DFMT_R5G6B5

;; Number of samples, sample type, and filter:
;
;D3DMS_NONE
;D3DMS_2_SAMPLES_MULTISAMPLE_LINEAR
;D3DMS_2_SAMPLES_MULTISAMPLE_QUINCUNX
;D3DMS_4_SAMPLES_MULTISAMPLE_LINEAR
;D3DMS_4_SAMPLES_MULTISAMPLE_GAUSSIAN
;D3DMS_9_SAMPLES_MULTISAMPLE_GAUSSIAN
;D3DMS_2_SAMPLES_SUPERSAMPLE_HORIZONTAL_LINEAR
;D3DMS_2_SAMPLES_SUPERSAMPLE_VERTICAL_LINEAR
;D3DMS_4_SAMPLES_SUPERSAMPLE_LINEAR
;D3DMS_4_SAMPLES_SUPERSAMPLE_GAUSSIAN
;D3DMS_9_SAMPLES_SUPERSAMPLE_GAUSSIAN

;; Format of the pre-filter (big) color buffer
;D3DMS_PREFILTER_FORMAT_DEFAULT
;D3DMS_PREFILTER_FORMAT_X1R5G5B5
;D3DMS_PREFILTER_FORMAT_R5G6B5
;D3DMS_PREFILTER_FORMAT_X8R8G8B8
;D3DMS_PREFILTER_FORMAT_A8R8G8B8

MSType = D3DMS_NONE
MSFormat = D3DMS_PREFILTER_FORMAT_DEFAULT

numberscenes = 0        ; # of scenes to draw
                        ; (set to 0 to use testtime instead)
testtime = 5000         ; test time (ms)
timeflags = TIME_Render ; what to time (TIME_Present | TIME_Render)

zenable = 0
zwriteenable = 0
d3dcmpfunc = D3DCMP_NOTEQUAL

primez = 0;
primezcmpfunc = D3DCMP_ALWAYS;

alphablendenable = 0
alphatestenable = 0

tiltz = 0
rotatetex = 0
SwathWidth = D3DSWATH_128

clearflags = D3DCLEAR_TARGET | D3DCLEAR_ZBUFFER | D3DCLEAR_STENCIL
zclearval = 1.0f
sclearval = 0
cclearval = 0x00006688

specularenable = 0

quadwidth = 640
quadheight = 480
quadx = 0
quady = 0

FVF = D3DFVF_XYZRHW | D3DFVF_TEX4;// | D3DFVF_DIFFUSE;

userpixelshader = 0
runtestonreload = 1
verboselevel = 1
verboseinireads = 1

colorwriteenable = D3DCOLORWRITEENABLE_ALL;

;
; Texture stages
;

[texture0]
type        = TEX_2d;     ; TEX_None, TEX_2d, TEX_Cubemap, TEX_Volume
texsize     = 32
d3dFormat   = D3DFMT_A8R8G8B8
filtertype  = D3DTEXF_POINT
mipfilter   = D3DTEXF_NONE

[texture1]
type        = TEX_None
texsize     = 256
d3dFormat   = D3DFMT_A4R4G4B4
filtertype  = D3DTEXF_LINEAR
mipfilter   = D3DTEXF_NONE

[texture2]
type        = TEX_None
texsize     = 256
d3dFormat   = D3DFMT_A4R4G4B4
filtertype  = D3DTEXF_LINEAR
mipfilter   = D3DTEXF_NONE

[texture3]
type        = TEX_None
texsize     = 256
d3dFormat   = D3DFMT_A4R4G4B4
filtertype  = D3DTEXF_LINEAR
mipfilter   = D3DTEXF_NONE

;
; Texture addressing modes (user pixel shaders)
;

[PSTextureModes]
t0 = PS_TEXTUREMODES_PROJECT3D
t1 = PS_TEXTUREMODES_NONE
t2 = PS_TEXTUREMODES_NONE
t3 = PS_TEXTUREMODES_NONE

; Texture source for some texture modes
[PSInputTexture]
t2 = 0
t3 = 0

; Compare modes for clipplane texture mode
[PSCompareMode]
t0 = $COMPAREMODE
t1 = $COMPAREMODE
t2 = $COMPAREMODE
t3 = $COMPAREMODE

; Input mapping for dot product modes
[PSDotMapping]
t0 = PS_DOTMAPPING_MINUS1_TO_1_D3D
t1 = PS_DOTMAPPING_MINUS1_TO_1_D3D
t2 = PS_DOTMAPPING_MINUS1_TO_1_D3D
t3 = PS_DOTMAPPING_MINUS1_TO_1_D3D

; Active combiner count (Stages 0-7)
[PSCombinerCount]
count = 1
flags = PS_COMBINERCOUNT_MUX_LSB | PS_COMBINERCOUNT_SAME_C0 | PS_COMBINERCOUNT_SAME_C1

; C0 for each stage
[PSConstant0]
C0 = 0
C1 = 0
C2 = 0
C3 = 0
C4 = 0
C5 = 0
C6 = 0
C7 = 0

; C1 for each stage
[PSConstant1]
C0 = 0
C1 = 0
C2 = 0
C3 = 0
C4 = 0
C5 = 0
C6 = 0
C7 = 0

; RGB inputs for each stage
[PSRGBInputs]
A0 = $TEXINPUT | PS_INPUTMAPPING_SIGNED_IDENTITY | PS_CHANNEL_RGB
B0 = PS_REGISTER_ZERO | PS_INPUTMAPPING_UNSIGNED_INVERT
C0 = PS_REGISTER_ZERO
D0 = PS_REGISTER_ZERO
A1 = PS_REGISTER_ZERO
B1 = PS_REGISTER_ZERO
C1 = PS_REGISTER_ZERO
D1 = PS_REGISTER_ZERO
A2 = PS_REGISTER_ZERO
B2 = PS_REGISTER_ZERO
C2 = PS_REGISTER_ZERO
D2 = PS_REGISTER_ZERO
A3 = PS_REGISTER_ZERO
B3 = PS_REGISTER_ZERO
C3 = PS_REGISTER_ZERO
D3 = PS_REGISTER_ZERO
A4 = PS_REGISTER_ZERO
B4 = PS_REGISTER_ZERO
C4 = PS_REGISTER_ZERO
D4 = PS_REGISTER_ZERO
A5 = PS_REGISTER_ZERO
B5 = PS_REGISTER_ZERO
C5 = PS_REGISTER_ZERO
D5 = PS_REGISTER_ZERO
A6 = PS_REGISTER_ZERO
B6 = PS_REGISTER_ZERO
C6 = PS_REGISTER_ZERO
D6 = PS_REGISTER_ZERO
A7 = PS_REGISTER_ZERO
B7 = PS_REGISTER_ZERO
C7 = PS_REGISTER_ZERO
D7 = PS_REGISTER_ZERO

; Alpha inputs for each stage
[PSAlphaInputs]
A0 = $TEXINPUT | PS_INPUTMAPPING_UNSIGNED_IDENTITY | PS_CHANNEL_ALPHA
B0 = PS_REGISTER_ZERO | PS_INPUTMAPPING_UNSIGNED_INVERT
C0 = PS_REGISTER_ZERO
D0 = PS_REGISTER_ZERO
A1 = PS_REGISTER_ZERO
B1 = PS_REGISTER_ZERO
C1 = PS_REGISTER_ZERO
D1 = PS_REGISTER_ZERO
A2 = PS_REGISTER_ZERO
B2 = PS_REGISTER_ZERO
C2 = PS_REGISTER_ZERO
D2 = PS_REGISTER_ZERO
A3 = PS_REGISTER_ZERO
B3 = PS_REGISTER_ZERO
C3 = PS_REGISTER_ZERO
D3 = PS_REGISTER_ZERO
A4 = PS_REGISTER_ZERO
B4 = PS_REGISTER_ZERO
C4 = PS_REGISTER_ZERO
D4 = PS_REGISTER_ZERO
A5 = PS_REGISTER_ZERO
B5 = PS_REGISTER_ZERO
C5 = PS_REGISTER_ZERO
D5 = PS_REGISTER_ZERO
A6 = PS_REGISTER_ZERO
B6 = PS_REGISTER_ZERO
C6 = PS_REGISTER_ZERO
D6 = PS_REGISTER_ZERO
A7 = PS_REGISTER_ZERO
B7 = PS_REGISTER_ZERO
C7 = PS_REGISTER_ZERO
D7 = PS_REGISTER_ZERO

; Stage 0 RGB outputs
[PSRGBOutputs]
ab0         = PS_REGISTER_R0
cd0         = PS_REGISTER_DISCARD
mux_sum0    = PS_REGISTER_DISCARD
flags0      = PS_COMBINEROUTPUT_IDENTITY | PS_COMBINEROUTPUT_AB_MULTIPLY
ab1         = PS_REGISTER_ZERO
cd1         = PS_REGISTER_ZERO
mux_sum1    = PS_REGISTER_DISCARD
flags1      = PS_COMBINEROUTPUT_IDENTITY
ab2         = PS_REGISTER_ZERO
cd2         = PS_REGISTER_ZERO
mux_sum2    = PS_REGISTER_DISCARD
flags2      = PS_COMBINEROUTPUT_IDENTITY
ab3         = PS_REGISTER_ZERO
cd3         = PS_REGISTER_ZERO
mux_sum3    = PS_REGISTER_DISCARD
flags3      = PS_COMBINEROUTPUT_IDENTITY
ab4         = PS_REGISTER_ZERO
cd4         = PS_REGISTER_ZERO
mux_sum4    = PS_REGISTER_DISCARD
flags4      = PS_COMBINEROUTPUT_IDENTITY
ab5         = PS_REGISTER_ZERO
cd5         = PS_REGISTER_ZERO
mux_sum5    = PS_REGISTER_DISCARD
flags5      = PS_COMBINEROUTPUT_IDENTITY
ab6         = PS_REGISTER_ZERO
cd6         = PS_REGISTER_ZERO
mux_sum6    = PS_REGISTER_DISCARD
flags6      = PS_COMBINEROUTPUT_IDENTITY
ab7         = PS_REGISTER_ZERO
cd7         = PS_REGISTER_ZERO
mux_sum7    = PS_REGISTER_DISCARD
flags7      = PS_COMBINEROUTPUT_IDENTITY

; Alpha output for each stage
[PSAlphaOutputs]
ab0         = PS_REGISTER_R0
cd0         = PS_REGISTER_DISCARD
mux_sum0    = PS_REGISTER_DISCARD
flags0      = PS_COMBINEROUTPUT_IDENTITY | PS_COMBINEROUTPUT_AB_MULTIPLY
ab1         = PS_REGISTER_ZERO
cd1         = PS_REGISTER_ZERO
mux_sum1    = PS_REGISTER_DISCARD
flags1      = PS_COMBINEROUTPUT_IDENTITY
ab2         = PS_REGISTER_ZERO
cd2         = PS_REGISTER_ZERO
mux_sum2    = PS_REGISTER_DISCARD
flags2      = PS_COMBINEROUTPUT_IDENTITY
ab3         = PS_REGISTER_ZERO
cd3         = PS_REGISTER_ZERO
mux_sum3    = PS_REGISTER_DISCARD
flags3      = PS_COMBINEROUTPUT_IDENTITY
ab4         = PS_REGISTER_ZERO
cd4         = PS_REGISTER_ZERO
mux_sum4    = PS_REGISTER_DISCARD
flags4      = PS_COMBINEROUTPUT_IDENTITY
ab5         = PS_REGISTER_ZERO
cd5         = PS_REGISTER_ZERO
mux_sum5    = PS_REGISTER_DISCARD
flags5      = PS_COMBINEROUTPUT_IDENTITY
ab6         = PS_REGISTER_ZERO
cd6         = PS_REGISTER_ZERO
mux_sum6    = PS_REGISTER_DISCARD
flags6      = PS_COMBINEROUTPUT_IDENTITY
ab7         = PS_REGISTER_ZERO
cd7         = PS_REGISTER_ZERO
mux_sum7    = PS_REGISTER_DISCARD
flags7      = PS_COMBINEROUTPUT_IDENTITY

[PSFinalCombinerConstant0]
C = 0

[PSFinalCombinerConstant1]
C = 0

; Final combiner inputs (AB + (1-A)C + D)
[PSFinalCombinerInputsABCD]
A = PS_REGISTER_ZERO
B = PS_REGISTER_R0 | PS_INPUTMAPPING_UNSIGNED_IDENTITY | PS_CHANNEL_RGB
C = PS_REGISTER_R0 | PS_INPUTMAPPING_UNSIGNED_IDENTITY | PS_CHANNEL_RGB
D = PS_REGISTER_ZERO

; Final combiner inputs (continued)
[PSFinalCombinerInputsEFG]
E = PS_REGISTER_ZERO
F = PS_REGISTER_ZERO
G = PS_REGISTER_R0 | PS_INPUTMAPPING_UNSIGNED_IDENTITY | PS_CHANNEL_ALPHA
flags = PS_FINALCOMBINERSETTING_CLAMP_SUM
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dxg\tests\fillrate\vstune\vstune.ini ===
;
; vstune.ini
;

[options]
; Which type of test to run. Also selectable by trigger on gamepad.
;   0 - DoQuickTimedTest
;   1 - DoPushBufferCallTest
g_iCurTest = 0;

; total time (ms) to run the test
testtime = 2000;

; number of vertex buffers to draw per scene
vbdrawcount = 1;

; Precompiled avoids the CPU overhead of copying the indices by
; using a 32MB pre-compiled push-buffer.
precompiled = 1;

; 0 - blocks main thread until gpu completes
; 1 - does wc writes with main thread while gpu works
; 2 - does wc writes with low prio background thread while gpu works
wcwritesinbkgnd = 0;

; Maximum number of frames allowed per push buffer. This allows you
; to test smaller pushbuffers vs. the default 32MB dude.
;   0 - no limit. Use all 32 megs
framesperpushbuffermax = 0;

; Insert noops into the pushbuffer instead of draw routines. This
; is to test the pushbuffer call costs.
; Only works when precompiled = 1.
;   0 - uses indices
;   1 - uses Kelvin Nop command
pushbuffernops = 0;

; RunUsingCpuCopy flag passed to CreatePushBuffer when precompiled = 1
runusingcpucopy = 0;

; Number of pushbuffers to alloc and use. Maximum of 300. This should
; allow one to test smaller pushbuffers which don't all reside in the
; cpu cache.
numberofpushbuffers = 1;

primitivetype = D3DPT_TRIANGLELIST

; total count of indices per DrawIndexedPrimitive call
;   indices go from 0,1,2 .. indexcount-1
indexcount = 14994

; total vertices in VB.
;  anything <= 24 should be run entirely from the post t&l file cache
vertcount = 500

; use d:\vstune.xvu instead of fixed function pipe
uservertexshader = 1

; FVF code. If FVF == 0 stream definitions defined below are used
FVF = D3DFVF_XYZ | D3DFVF_DIFFUSE;// D3DFVF_SPECULAR; // | D3DFVF_TEX2 | T0_SIZE1 | T1_SIZE2;

; degenerates == 0 will pass little triangles in screenspace so you can
; verify things are drawing
degenerates = 1

AutoDepthStencilFormat = D3DFMT_D24S8
BackBufferFormat = D3DFMT_X8R8G8B8

MSType = D3DMS_NONE
MSFormat = D3DMS_PREFILTER_FORMAT_DEFAULT

zenable = 0
zwriteenable = 0
d3dcmpfunc = D3DCMP_NOTEQUAL
cullmode = D3DCULL_NONE
d3dfillmode = D3DFILL_SOLID

alphablendenable = 0
alphatestenable = 0

colorvertex = 0
normalizenormals = 0
fogenable = 0

specularenable = 0
localviewer = 0

lighting = 0
numDirectionalLights = 0
numSpotLights = 0
numPointLights = 0

numtextures = 1

clearflags = D3DCLEAR_TARGET | D3DCLEAR_ZBUFFER | D3DCLEAR_STENCIL
zclearval = 1.0f
sclearval = 0
cclearval = 0x00006688

runtestonreload = 1
verboselevel = 2
verboseinireads = 1

;
; Streams section. Used if FVF == 0
;

; Example:
;   [stream0]
;   Decl0 = 5 | VSDT_FLOAT2;    // register:5, type:float2
;   Decl1 = 0x10000000 | 2;     // skip 2 dwords
;   [stream1]
;   Decl0 = 0x18000000 | 3;     // skip 3 bytes

[stream0]
Decl0 = 1 | VSDT_FLOAT1;
;Decl1 = 2 | VSDT_FLOAT1
;Decl2 = 3 | VSDT_FLOAT3

[stream1]
Decl0 = 2 | VSDT_FLOAT3;
//Decl0 = 2 | VSDT_D3DCOLOR

[stream2]
Decl0 = 3 | VSDT_FLOAT2;

[stream3]
Decl0 = 4 | VSDT_FLOAT2;
//Decl0 = 4 | VSDT_SHORT2;

[stream4]
Decl0 = 5 | VSDT_FLOAT3;
Decl1 = 6 | VSDT_FLOAT3;
Decl2 = 7 | VSDT_FLOAT3;
//Decl0 = 5 | VSDT_D3DCOLOR;
//Decl1 = 6 | VSDT_D3DCOLOR;
//Decl2 = 7 | VSDT_D3DCOLOR;

[XXstream0]
Decl0 = 0 | VSDT_FLOAT3;
Decl1 = 0x18000000 | 3;
Decl2 = 1 | VSDT_FLOAT1;
Decl3 = 0x18000000 | 3;
Decl4 = 4 | VSDT_FLOAT2;
Decl5 = 0x18000000 | 3;
Decl6 = 5 | VSDT_FLOAT4;

[XXstream1]
Decl0 = 2 | VSDT_FLOAT3;
Decl1 = 3 | VSDT_FLOAT3;
Decl2 = 5 | VSDT_FLOAT3;

[pushbuffercalltest]
// default: 50,100,250,500,1000,1500,2000,2500,5000,10000,20000,40000;
indices = 50,100,250,500,1000,1500,2000,2500,5000,10000;//,20000,40000;
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dxg\tests\vshtimer\vstune.ini ===
;
; vstune.ini
;

[options]
; Which type of test to run. Also selectable by trigger on gamepad.
;   0 - DoQuickTimedTest
;   1 - DoPushBufferCallTest
;   2 - RandomVsh (generate random vertex shader, test that)
;   3 - nop-timer (tiems code with 1 - 8 nops before/after the code)
g_iCurTest = 0;

; total time (ms) to run the test
testtime = 1000;

dwRndShaderMin = 20;
dwRndShaderMax = 51;
dwRndShaderNops = 0;
dwRndShaderType	= 1;      //1 == SASMT_VERTEXSHADER, 2 == SASMT_READWRITE_VERTEXSHADER.
bRndShaderWriteConsts = 0;
bRndShaderXvs = 1;
bRndShaderIndex = 1;
bRndShaderAllowPair = 0;
bRndShaderScreenspace = 1;
bRndShaderAllowNop = 1;

; number of vertex buffers to draw per scene
vbdrawcount = 1;

; Precompiled avoids the CPU overhead of copying the indices by
; using a 32MB pre-compiled push-buffer.
precompiled = 1;

; 0 - blocks main thread until gpu completes
; 1 - does wc writes with main thread while gpu works
; 2 - does wc writes with low prio background thread while gpu works
wcwritesinbkgnd = 0;

; Maximum number of frames allowed per push buffer. This allows you
; to test smaller pushbuffers vs. the default 32MB dude.
;   0 - no limit. Use all 32 megs
framesperpushbuffermax = 0;

; Insert noops into the pushbuffer instead of draw routines. This
; is to test the pushbuffer call costs.
; Only works when precompiled = 1.
;   0 - uses indices
;   1 - uses Kelvin Nop command
pushbuffernops = 0;

; RunUsingCpuCopy flag passed to CreatePushBuffer when precompiled = 1
runusingcpucopy = 0;

; Number of pushbuffers to alloc and use. Maximum of 300. This should
; allow one to test smaller pushbuffers which don't all reside in the
; cpu cache.
numberofpushbuffers = 1;

primitivetype = D3DPT_TRIANGLELIST

; total count of indices per DrawIndexedPrimitive call
;   indices go from 0,1,2 .. indexcount-1
indexcount = 1494 ;was 14994

; total vertices in VB.
;  anything <= 24 should be run entirely from the post t&l file cache
vertcount = 500

; use d:\vstune.xvu instead of fixed function pipe
uservertexshader = 1

; FVF code. If FVF == 0 stream definitions defined below are used
FVF = D3DFVF_XYZ | D3DFVF_DIFFUSE;// D3DFVF_SPECULAR; // | D3DFVF_TEX2 | T0_SIZE1 | T1_SIZE2;

; degenerates == 0 will pass little triangles in screenspace so you can
; verify things are drawing
degenerates = 1

AutoDepthStencilFormat = D3DFMT_D24S8
BackBufferFormat = D3DFMT_X8R8G8B8

MSType = D3DMS_NONE
MSFormat = D3DMS_PREFILTER_FORMAT_DEFAULT

zenable = 0
zwriteenable = 0
d3dcmpfunc = D3DCMP_NOTEQUAL
cullmode = D3DCULL_NONE
d3dfillmode = D3DFILL_SOLID

alphablendenable = 0
alphatestenable = 0

colorvertex = 0
normalizenormals = 0
fogenable = 0

specularenable = 0
localviewer = 0

lighting = 0
numDirectionalLights = 0
numSpotLights = 0
numPointLights = 0

numtextures = 1

clearflags = D3DCLEAR_TARGET | D3DCLEAR_ZBUFFER | D3DCLEAR_STENCIL
zclearval = 1.0f
sclearval = 0
cclearval = 0x00006688

runtestonreload = 1
verboselevel = 2
verboseinireads = 1

;
; Streams section. Used if FVF == 0
;

; Example:
;   [stream0]
;   Decl0 = 5 | VSDT_FLOAT2;    // register:5, type:float2
;   Decl1 = 0x10000000 | 2;     // skip 2 dwords
;   [stream1]
;   Decl0 = 0x18000000 | 3;     // skip 3 bytes

[stream0]
Decl0 = 1 | VSDT_FLOAT1;
;Decl1 = 2 | VSDT_FLOAT1
;Decl2 = 3 | VSDT_FLOAT3

[stream1]
Decl0 = 2 | VSDT_FLOAT3;
//Decl0 = 2 | VSDT_D3DCOLOR

[stream2]
Decl0 = 3 | VSDT_FLOAT2;

[stream3]
Decl0 = 4 | VSDT_FLOAT2;
//Decl0 = 4 | VSDT_SHORT2;

[stream4]
Decl0 = 5 | VSDT_FLOAT3;
Decl1 = 6 | VSDT_FLOAT3;
Decl2 = 7 | VSDT_FLOAT3;
//Decl0 = 5 | VSDT_D3DCOLOR;
//Decl1 = 6 | VSDT_D3DCOLOR;
//Decl2 = 7 | VSDT_D3DCOLOR;

[XXstream0]
Decl0 = 0 | VSDT_FLOAT3;
Decl1 = 0x18000000 | 3;
Decl2 = 1 | VSDT_FLOAT1;
Decl3 = 0x18000000 | 3;
Decl4 = 4 | VSDT_FLOAT2;
Decl5 = 0x18000000 | 3;
Decl6 = 5 | VSDT_FLOAT4;

[XXstream1]
Decl0 = 2 | VSDT_FLOAT3;
Decl1 = 3 | VSDT_FLOAT3;
Decl2 = 5 | VSDT_FLOAT3;

[pushbuffercalltest]
// default: 50,100,250,500,1000,1500,2000,2500,5000,10000,20000,40000;
indices = 50,100,250,500,1000,1500,2000,2500,5000,10000;//,20000,40000;
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dxg\tools\XDxTex\ReadMe.txt ===
//-------------------------------------------------------------------------
//
// Tool Name: XDxTex
//
// Copyright (c) 1998-2001 Microsoft Corporation. All rights reserved.
//
//-------------------------------------------------------------------------


Description
===========
The purpose of this tool is to allow Xbox users to easily create texture
maps that use the new DXTn compression formats.  Creating a DXTn-compressed
texture is actually not that difficult to do: DirectDraw's Blt function can
do the conversion for you.  Advanced developers will probably want to write
their own tools that meet their specific needs.  But this tool provides useful
basic functionality.


XDxTex Functionality
===================
Opens BMP and DDS files (See below for a description of the DDS file format)
Opens BMP files as alpha channel, either explicitly or implicitly (via 
foo_a.bmp naming)
Saves textures in DDS format
Supports conversion to all five DXTn compression formats
Supports generation of mip maps (using a box filter)
Supports visualization of alpha channel as a greyscale image or via a user-
selectable background color
Supports easy visual comparison of image quality between formats


User Interface
==============
XDxTex uses a pretty traditional user interface.  Each texture map is a 
document, and several documents can be open at a time.  The one thing that
is a bit unusual about the UI is that each document can hold the texture
in either one or two formats at once while the document is open in XDxTex.
For instance, one could import a BMP file, which would automatically create
a 32-bit ARGB texture.  One could then choose to convert the texture to 
DXT1 format.  The document now remembers the image in *both* formats, and
the user can flip between the formats by clicking in the window or by 
choosing "Original" and "New" in the View menu.  This makes it easy for
the user to observe any artifacts introduced by image compression, and to
try several different compression formats without progressive degradation
of the image  For instance, if this technique were not used and the user
converted an image from ARGB to DXT1, all but one bit of alpha would be lost.
If the user then decided to convert to DXT2, there would still be only two
alpha levels.  With XDxTex's system, the second conversion is done from the
original ARGB format, and the DXT2 image will contain all 16 levels of alpha
supported by DXT2.  When the image is saved, the "original" format is 
discarded, and only the "new" format is stored.

There are a few consequences of this system that one must remember:
- If no format conversion has been requested since the document was opened,
  the one format is the "original" format and that is the format in which
  the image will be written when the document is saved.
- If format conversion has been requested since the document was opened, the
  converted format is the "new" format and that is the format in which the
  image will be written when the document is saved.
- If a second format conversion is requested, the "new" format from the first
  conversion is replaced with the second format.  The "original" format will
  be unchanged.
- Generating of mip maps applies to both formats simultaneously.
- If the original format has multiple mip maps, and conversion to a new format
  is requested, the new format will automatically have multiple mip maps as 
  well.
It's not as complicated as it sounds: with time, this two-format system 
becomes natural and efficient to use.

XDxTex can use the DXTn compression code in XGraphics.lib to compress textures.
If it is desired to use the original D3DX compression code, the XGraphics
compression option can be unchecked in either the New Texture dialog or the 
Convert Format dialog.


XDxTex Performance
=================
XDxTex uses the Direct3D Reference Rasterizer to draw the textures, 
regardless of what 3D hardware is available.  So with larger textures 
(greater than 256x256), the program may be somewhat slow, depending on your 
CPU speed.


DDS File Format
===============
XDxTex's native file format is called "DDS" file format, because it 
encapsulates the information in a DirectDrawSurface.  It has the following 
format:

    DWORD dwMagic (0x20534444, or "DDS ")
    DDSURFACEDESC2 ddsd (this provides information about the surface format)
    BYTE bData1[] (this is the surface data for the main surface)
    [BYTE bData2[]...] (surface data for attached surfaces, if any, follow)

This format is easy to read and write, and supports features such as alpha
and multiple mip levels, as well as DXTn compression.  The "Compress" sample 
application on the DXSDK demonstrates how to properly import a DDS file.

The user should note that it is not necessary to use the DDS format in order
to use DXTn-compressed textures, or vice-versa.  But the two work well 
together.


Mip Maps
========
Mip mapping is a technique that improves image quality and reduces texture
memory bandwidth by providing prefiltered versions of the texture image at
multiple resolutions.

To generate mip maps in XDxTex, the width and height of the source image must 
both be powers of 2.  Choose "Generate Mip Maps" from the Format menu.  
Filtering is done via a simple box filter, i.e., the four nearest pixels are
averaged to produce each destination pixel.  More sophisticated filtering can
be found in other image processing programs.


Alpha
=====
Many texture formats include an alpha channel, which provides opacity 
information at each pixel.  XDxTex fully supports alpha in textures.  When
importing a BMP file, if a file exists of the same size with "_a" at the end
(e.g., foo.bmp and foo_a.bmp), the second file will be loaded as an alpha
channel.  The blue channel of the second BMP is stored in the alpha channel.
Once a document is open, the user can explicitly load a BMP file as the alpha 
channel via the "Open As Alpha Channel" command on the File menu.

To view the alpha channel directly without the RGB channels, choose "Alpha
Channel Only" from the View menu.  The alpha channel will appear as a 
greyscale image.  Note that if no alpha channel has been loaded, the alpha
channel will be 100% everywhere and the image will appear solid white when
viewing "Alpha Channel Only".  To turn off "Alpha Channel Only", just choose
that menu item a second time.

In the usual view, the effect of the alpha channel is visible because the 
window has a solid background color which shows through the texture where the
alpha channel is less than 100%.  The user can change this background color
by choosing "Change Background Color" from the View menu.  This choice does
not affect the texture itself or the data that is written when the file is
saved.

The DXT2 and DXT4 formats use premultiplied alpha, which means that the
red, green, and blue values stored in the surface are already multiplied
by the corresponding alpha value.  DirectDraw cannot blit from a surface
containing premultiplied alpha to one containing non-premultiplied alpha,
so some XDxTex operations (Open as Alpha Channel, conversion to DXT3, and
conversion to DXT5) are not possible on DXT2 and DXT4 formats.  Supporting
textures using these formats is difficult on Direct3D devices which do
not support DXTn textures, because DirectDraw cannot handle blitting them
to a traditional ARGB surface either (unless that ARGB surface uses 
premultiplied alpha as well, which is rare).  So you may find it easier to
use DXT3 rather than DXT2 and DXT5 rather than DXT4 when possible.


Command-Line Options
====================
Command-line options can be used to pass input files, an output file name, and
processing options to XDxTex.  If an output file name is specified, the program
exits automatically after writing the output file, and no user interface is 
presented.

XDxTex [infilename] [-a alphaname] [-m] [DXT1|DXT2|DXT3|DXT4|DXT5] [outfilename]

infilename:               The name of the file to load.  This can be a BMP or 
                          DDS file.

-a alphaname:             If "-a" is specified, the next parameter is the name
                          of a BMP file to load as the alpha channel.  Note:
                          if no alpha filename is specified, XDxTex will still
                          look for a file named infilename_a.bmp and, if it 
                          exists, use that as the alpha channel.

-m:                       If this option is specified, mipmaps are generated.

DXT1|DXT2|DXT3|DXT4|DXT5: Specifies compression format.  If no format is 
                          specified, the image will be in ARGB-8888.

outfilename:              Specifies the name of the destination file.  If this
                          is not specified, the user interface will show the 
                          current file and all requested operations.  If an 
                          outfilename is specified, the app will exit after 
                          saving the processed file without presenting a user 
                          interface.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dxg\xfont\charsets\Arial-Western-16.txt ===
# Format
#
# FONT [style] <filename>
#
#   - style is one of NORMAL, BOLD, ITALICS or BOLDITALICS and indicates
#     that the TrueType scaler should simulate the appropriate style.  
#   - the filename points to the true-type file from which to extract the characters.
#
# HEIGHT <number>
#
#   - the height of the bitmap to generate
#
# DEFAULT <character>
#
#   - the value of the default character in hex
#
# ANTIALIASLEVEL <number>
#
#   - Sets the amount of antialias information to store with the bitmap.  May be
#     0 (no information), 2 or 4 (lots of information)
#
# <character>
#
#   - hex value (either #### or U+####) of the character in the imported
#     font to include the generated font

FONT ARIALUNI.TTF

HEIGHT 16
DEFAULT 001F
ANTIALIASLEVEL 0

# Default character

001F

# Western characters 

!include Western-Characters.txt
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dxg\xfont\charsets\Arial-Western-Katakana-Hiragana-16.txt ===
# Format
#
# FONT [style] <filename>
#
#   - style is one of NORMAL, BOLD, ITALICS or BOLDITALICS and indicates
#     that the TrueType scaler should simulate the appropriate style.  
#   - the filename points to the true-type file from which to extract the characters.
#
# HEIGHT <number>
#
#   - the height of the bitmap to generate
#
# DEFAULT <character>
#
#   - the value of the default character in hex
#
# ANTIALIASLEVEL <number>
#
#   - Sets the amount of antialias information to store with the bitmap.  May be
#     0 (no information), 2 or 4 (lots of information)
#
# <character>
#
#   - hex value (either #### or U+####) of the character in the imported
#     font to include the generated font

FONT ARIALUNI.TTF

HEIGHT 16
DEFAULT 001F
ANTIALIASLEVEL 0

# Default character

001F

# Western characters 

!include Western-Characters.txt

# Katakana characters

!include Katakana-Characters.txt

# Hiragana characters

!include Hiragana-Characters.txt
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dxg\xfont\charsets\Hiragana-Characters.txt ===
# The full list of Hiragana UNICODE characters.

3041
3042
3043
3044
3045
3046
3047
3048
3049
304A
304B
304C
304D
304E
304F
3050
3051
3052
3053
3054
3055
3056
3057
3058
3059
305A
305B
305C
305D
305E
305F
3060
3061
3062
3063
3064
3065
3066
3067
3068
3069
306A
306B
306C
306D
306E
306F
3070
3071
3072
3073
3074
3075
3076
3077
3078
3079
307A
307B
307C
307D
307E
307F
3080
3081
3082
3083
3084
3085
3086
3087
3088
3089
308A
308B
308C
308D
308E
308F
3090
3091
3092
3093
3094
3099
309A
309B
309C
309D
309E
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dxg\xfont\charsets\Arial-Worldwide-16.txt ===
# Format
#
# FONT [style] <filename>
#
#   - style is one of NORMAL, BOLD, ITALICS or BOLDITALICS and indicates
#     that the TrueType scaler should simulate the appropriate style.  
#   - the filename points to the true-type file from which to extract the characters.
#
# HEIGHT <number>
#
#   - the height of the bitmap to generate
#
# DEFAULT <character>
#
#   - the value of the default character in hex
#
# ANTIALIASLEVEL <number>
#
#   - Sets the amount of antialias information to store with the bitmap.  May be
#     0 (no information), 2 or 4 (lots of information)
#
# <character>
#
#   - hex value (either #### or U+####) of the character in the imported
#     font to include the generated font

FONT ARIALUNI.TTF

HEIGHT 16
DEFAULT 001F
ANTIALIASLEVEL 0

# Default character

001F

# Western characters 

!include Western-Characters.txt

# Katakana characters

!include Katakana-Characters.txt

# Hiragana characters

!include Hiragana-Characters.txt

# Kanji characters

!include Kanji-Characters.txt
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dxg\xfont\charsets\Katakana-Characters.txt ===
# The full list of Katakana characters

30A1
30A2
30A3
30A4
30A5
30A6
30A7
30A8
30A9
30AA
30AB
30AC
30AD
30AE
30AF
30B0
30B1
30B2
30B3
30B4
30B5
30B6
30B7
30B8
30B9
30BA
30BB
30BC
30BD
30BE
30BF
30C0
30C1
30C2
30C3
30C4
30C5
30C6
30C7
30C8
30C9
30CA
30CB
30CC
30CD
30CE
30CF
30D0
30D1
30D2
30D3
30D4
30D5
30D6
30D7
30D8
30D9
30DA
30DB
30DC
30DD
30DE
30DF
30E0
30E1
30E2
30E3
30E4
30E5
30E6
30E7
30E8
30E9
30EA
30EB
30EC
30ED
30EE
30EF
30F0
30F1
30F2
30F3
30F4
30F5
30F6
30F7
30F8
30F9
30FA
30FB
30FC
30FD
30FE
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dxg\xfont\charsets\numbers.txt ===
# Numbers

FONT TAHOMA.TTF

HEIGHT 20
DEFAULT 002E
ANTIALIASLEVEL 0

002E
0030
0031
0032
0033
0034
0035
0036
0037
0038
0039
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dxg\xfont\charsets\Western-Characters.txt ===
# The full list of 'Western' UNICODE characters.

0020
0021
0022
0023
0024
0025
0026
0027
0028
0029
002A
002B
002C
002D
002E
002F
0030
0031
0032
0033
0034
0035
0036
0037
0038
0039
003A
003B
003C
003D
003E
003F
0040
0041
0042
0043
0044
0045
0046
0047
0048
0049
004A
004B
004C
004D
004E
004F
0050
0051
0052
0053
0054
0055
0056
0057
0058
0059
005A
005B
005C
005D
005E
005F
0060
0061
0062
0063
0064
0065
0066
0067
0068
0069
006A
006B
006C
006D
006E
006F
0070
0071
0072
0073
0074
0075
0076
0077
0078
0079
007A
007B
007C
007D
007E
00A0
00A1
00A2
00A3
00A4
00A5
00A6
00A7
00A8
00A9
00AA
00AB
00AC
00AD
00AE
00AF
00B0
00B1
00B2
00B3
00B4
00B5
00B6
00B7
00B8
00B9
00BA
00BB
00BC
00BD
00BE
00BF
00C0
00C1
00C2
00C3
00C4
00C5
00C6
00C7
00C8
00C9
00CA
00CB
00CC
00CD
00CE
00CF
00D0
00D1
00D2
00D3
00D4
00D5
00D6
00D7
00D8
00D9
00DA
00DB
00DC
00DD
00DE
00DF
00E0
00E1
00E2
00E3
00E4
00E5
00E6
00E7
00E8
00E9
00EA
00EB
00EC
00ED
00EE
00EF
00F0
00F1
00F2
00F3
00F4
00F5
00F6
00F7
00F8
00F9
00FA
00FB
00FC
00FD
00FE
00FF
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dxg\xfont\charsets\Kanji-Characters.txt ===
# The full list of Kanji UNICODE characters

4E00	
4E01	
4E03	
4E07	
4E08	
4E09	
4E0A	
4E0B	
4E0D	
4E0E	
4E10	
4E11	
4E14	
4E15	
4E16	
4E17	
4E18	
4E19	
4E1E	
4E21	
4E26	
4E2A	
4E2D	
4E31	
4E32	
4E36	
4E38	
4E39	
4E3B	
4E3C	
4E3F	
4E42	
4E43	
4E45	
4E4B	
4E4D	
4E4E	
4E4F	
4E55	
4E56	
4E57	
4E58	
4E59	
4E5D	
4E5E	
4E5F	
4E62	
4E71	
4E73	
4E7E	
4E80	
4E82	
4E85	
4E86	
4E88	
4E89	
4E8A	
4E8B	
4E8C	
4E8E	
4E91	
4E92	
4E94	
4E95	
4E98	
4E99	
4E9B	
4E9C	
4E9E	
4E9F	
4EA0	
4EA1	
4EA2	
4EA4	
4EA5	
4EA6	
4EA8	
4EAB	
4EAC	
4EAD	
4EAE	
4EB0	
4EB3	
4EB6	
4EBA	
4EC0	
4EC1	
4EC2	
4EC4	
4EC6	
4EC7	
4ECA	
4ECB	
4ECD	
4ECE	
4ECF	
4ED4	
4ED5	
4ED6	
4ED7	
4ED8	
4ED9	
4EDD	
4EDE	
4EDF	
4EE3	
4EE4	
4EE5	
4EED	
4EEE	
4EF0	
4EF2	
4EF6	
4EF7	
4EFB	
4F01	
4F09	
4F0A	
4F0D	
4F0E	
4F0F	
4F10	
4F11	
4F1A	
4F1C	
4F1D	
4F2F	
4F30	
4F34	
4F36	
4F38	
4F3A	
4F3C	
4F3D	
4F43	
4F46	
4F47	
4F4D	
4F4E	
4F4F	
4F50	
4F51	
4F53	
4F55	
4F57	
4F59	
4F5A	
4F5B	
4F5C	
4F5D	
4F5E	
4F69	
4F6F	
4F70	
4F73	
4F75	
4F76	
4F7B	
4F7C	
4F7F	
4F83	
4F86	
4F88	
4F8B	
4F8D	
4F8F	
4F91	
4F96	
4F98	
4F9B	
4F9D	
4FA0	
4FA1	
4FAB	
4FAD	
4FAE	
4FAF	
4FB5	
4FB6	
4FBF	
4FC2	
4FC3	
4FC4	
4FCA	
4FCE	
4FD0	
4FD1	
4FD4	
4FD7	
4FD8	
4FDA	
4FDB	
4FDD	
4FDF	
4FE1	
4FE3	
4FE4	
4FE5	
4FEE	
4FEF	
4FF3	
4FF5	
4FF6	
4FF8	
4FFA	
4FFE	
5005	
5006	
5009	
500B	
500D	
500F	
5011	
5012	
5014	
5016	
5019	
501A	
501F	
5021	
5023	
5024	
5025	
5026	
5028	
5029	
502A	
502B	
502C	
502D	
5036	
5039	
5043	
5047	
5048	
5049	
504F	
5050	
5055	
5056	
505A	
505C	
5065	
506C	
5072	
5074	
5075	
5076	
5078	
507D	
5080	
5085	
508D	
5091	
5098	
5099	
509A	
50AC	
50AD	
50B2	
50B3	
50B4	
50B5	
50B7	
50BE	
50C2	
50C5	
50C9	
50CA	
50CD	
50CF	
50D1	
50D5	
50D6	
50DA	
50DE	
50E3	
50E5	
50E7	
50ED	
50EE	
50F5	
50F9	
50FB	
5100	
5101	
5102	
5104	
5109	
5112	
5114	
5115	
5116	
5118	
511A	
511F	
5121	
512A	
5132	
5137	
513A	
513B	
513C	
513F	
5140	
5141	
5143	
5144	
5145	
5146	
5147	
5148	
5149	
514B	
514C	
514D	
514E	
5150	
5152	
5154	
515A	
515C	
5162	
5165	
5168	
5169	
516A	
516B	
516C	
516D	
516E	
5171	
5175	
5176	
5177	
5178	
517C	
5180	
5182	
5185	
5186	
5189	
518A	
518C	
518D	
518F	
5190	
5191	
5192	
5193	
5195	
5196	
5197	
5199	
51A0	
51A2	
51A4	
51A5	
51A6	
51A8	
51A9	
51AA	
51AB	
51AC	
51B0	
51B1	
51B2	
51B3	
51B4	
51B5	
51B6	
51B7	
51BD	
51C4	
51C5	
51C6	
51C9	
51CB	
51CC	
51CD	
51D6	
51DB	
51DC	
51DD	
51E0	
51E1	
51E6	
51E7	
51E9	
51EA	
51ED	
51F0	
51F1	
51F5	
51F6	
51F8	
51F9	
51FA	
51FD	
51FE	
5200	
5203	
5204	
5206	
5207	
5208	
520A	
520B	
520E	
5211	
5214	
5217	
521D	
5224	
5225	
5227	
5229	
522A	
522E	
5230	
5233	
5236	
5237	
5238	
5239	
523A	
523B	
5243	
5244	
5247	
524A	
524B	
524C	
524D	
524F	
5254	
5256	
525B	
525E	
5263	
5264	
5265	
5269	
526A	
526F	
5270	
5271	
5272	
5273	
5274	
5275	
527D	
527F	
5283	
5287	
5288	
5289	
528D	
5291	
5292	
5294	
529B	
529F	
52A0	
52A3	
52A9	
52AA	
52AB	
52AC	
52AD	
52B1	
52B4	
52B5	
52B9	
52BC	
52BE	
52C1	
52C3	
52C5	
52C7	
52C9	
52CD	
52D2	
52D5	
52D7	
52D8	
52D9	
52DD	
52DE	
52DF	
52E0	
52E2	
52E3	
52E4	
52E6	
52E7	
52F2	
52F3	
52F5	
52F8	
52F9	
52FA	
52FE	
52FF	
5301	
5302	
5305	
5306	
5308	
530D	
530F	
5310	
5315	
5316	
5317	
5319	
531A	
531D	
5320	
5321	
5323	
532A	
532F	
5331	
5333	
5338	
5339	
533A	
533B	
533F	
5340	
5341	
5343	
5345	
5346	
5347	
5348	
5349	
534A	
534D	
5351	
5352	
5353	
5354	
5357	
5358	
535A	
535C	
535E	
5360	
5366	
5369	
536E	
536F	
5370	
5371	
5373	
5374	
5375	
5377	
5378	
537B	
537F	
5382	
5384	
5396	
5398	
539A	
539F	
53A0	
53A5	
53A6	
53A8	
53A9	
53AD	
53AE	
53B0	
53B3	
53B6	
53BB	
53C2	
53C3	
53C8	
53C9	
53CA	
53CB	
53CC	
53CD	
53CE	
53D4	
53D6	
53D7	
53D9	
53DB	
53DF	
53E1	
53E2	
53E3	
53E4	
53E5	
53E8	
53E9	
53EA	
53EB	
53EC	
53ED	
53EE	
53EF	
53F0	
53F1	
53F2	
53F3	
53F6	
53F7	
53F8	
53FA	
5401	
5403	
5404	
5408	
5409	
540A	
540B	
540C	
540D	
540E	
540F	
5410	
5411	
541B	
541D	
541F	
5420	
5426	
5429	
542B	
542C	
542D	
542E	
5436	
5438	
5439	
543B	
543C	
543D	
543E	
5440	
5442	
5446	
5448	
5449	
544A	
544E	
5451	
545F	
5468	
546A	
5470	
5471	
5473	
5475	
5476	
5477	
547B	
547C	
547D	
5480	
5484	
5486	
548B	
548C	
548E	
548F	
5490	
5492	
54A2	
54A4	
54A5	
54A8	
54AB	
54AC	
54AF	
54B2	
54B3	
54B8	
54BC	
54BD	
54BE	
54C0	
54C1	
54C2	
54C4	
54C7	
54C8	
54C9	
54D8	
54E1	
54E2	
54E5	
54E6	
54E8	
54E9	
54ED	
54EE	
54F2	
54FA	
54FD	
5504	
5506	
5507	
550F	
5510	
5514	
5516	
552E	
552F	
5531	
5533	
5538	
5539	
553E	
5540	
5544	
5545	
5546	
554C	
554F	
5553	
5556	
5557	
555C	
555D	
5563	
557B	
557C	
557E	
5580	
5583	
5584	
5587	
5589	
558A	
558B	
5598	
5599	
559A	
559C	
559D	
559E	
559F	
55A7	
55A8	
55A9	
55AA	
55AB	
55AC	
55AE	
55B0	
55B6	
55C4	
55C5	
55C7	
55D4	
55DA	
55DC	
55DF	
55E3	
55E4	
55F7	
55F9	
55FD	
55FE	
5606	
5609	
5614	
5616	
5617	
5618	
561B	
5629	
562F	
5631	
5632	
5634	
5636	
5638	
5642	
564C	
564E	
5650	
565B	
5664	
5668	
566A	
566B	
566C	
5674	
5678	
567A	
5680	
5686	
5687	
568A	
568F	
5694	
56A0	
56A2	
56A5	
56AE	
56B4	
56B6	
56BC	
56C0	
56C1	
56C2	
56C3	
56C8	
56CE	
56D1	
56D3	
56D7	
56D8	
56DA	
56DB	
56DE	
56E0	
56E3	
56EE	
56F0	
56F2	
56F3	
56F9	
56FA	
56FD	
56FF	
5700	
5703	
5704	
5708	
5709	
570B	
570D	
570F	
5712	
5713	
5716	
5718	
571C	
571F	
5726	
5727	
5728	
572D	
5730	
5737	
5738	
573B	
5740	
5742	
5747	
574A	
574E	
574F	
5750	
5751	
5761	
5764	
5766	
5769	
576A	
577F	
5782	
5788	
5789	
578B	
5793	
57A0	
57A2	
57A3	
57A4	
57AA	
57B0	
57B3	
57C0	
57C3	
57C6	
57CB	
57CE	
57D2	
57D3	
57D4	
57D6	
57DC	
57DF	
57E0	
57E3	
57F4	
57F7	
57F9	
57FA	
57FC	
5800	
5802	
5805	
5806	
580A	
580B	
5815	
5819	
581D	
5821	
5824	
582A	
582F	
5830	
5831	
5834	
5835	
583A	
583D	
5840	
5841	
584A	
584B	
5851	
5852	
5854	
5857	
5858	
5859	
585A	
585E	
5862	
5869	
586B	
5870	
5872	
5875	
5879	
587E	
5883	
5885	
5893	
5897	
589C	
589F	
58A8	
58AB	
58AE	
58B3	
58B8	
58B9	
58BA	
58BB	
58BE	
58C1	
58C5	
58C7	
58CA	
58CC	
58D1	
58D3	
58D5	
58D7	
58D8	
58D9	
58DC	
58DE	
58DF	
58E4	
58E5	
58EB	
58EC	
58EE	
58EF	
58F0	
58F1	
58F2	
58F7	
58F9	
58FA	
58FB	
58FC	
58FD	
5902	
5909	
590A	
590F	
5910	
5915	
5916	
5918	
5919	
591A	
591B	
591C	
5922	
5925	
5927	
5929	
592A	
592B	
592C	
592D	
592E	
5931	
5932	
5937	
5938	
593E	
5944	
5947	
5948	
5949	
594E	
594F	
5950	
5951	
5954	
5955	
5957	
5958	
595A	
5960	
5962	
5965	
5967	
5968	
5969	
596A	
596C	
596E	
5973	
5974	
5978	
597D	
5981	
5982	
5983	
5984	
598A	
598D	
5993	
5996	
5999	
599B	
599D	
59A3	
59A5	
59A8	
59AC	
59B2	
59B9	
59BB	
59BE	
59C6	
59C9	
59CB	
59D0	
59D1	
59D3	
59D4	
59D9	
59DA	
59DC	
59E5	
59E6	
59E8	
59EA	
59EB	
59F6	
59FB	
59FF	
5A01	
5A03	
5A09	
5A11	
5A18	
5A1A	
5A1C	
5A1F	
5A20	
5A25	
5A29	
5A2F	
5A35	
5A36	
5A3C	
5A40	
5A41	
5A46	
5A49	
5A5A	
5A62	
5A66	
5A6A	
5A6C	
5A7F	
5A92	
5A9A	
5A9B	
5ABC	
5ABD	
5ABE	
5AC1	
5AC2	
5AC9	
5ACB	
5ACC	
5AD0	
5AD6	
5AD7	
5AE1	
5AE3	
5AE6	
5AE9	
5AFA	
5AFB	
5B09	
5B0B	
5B0C	
5B16	
5B22	
5B2A	
5B2C	
5B30	
5B32	
5B36	
5B3E	
5B40	
5B43	
5B45	
5B50	
5B51	
5B54	
5B55	
5B57	
5B58	
5B5A	
5B5B	
5B5C	
5B5D	
5B5F	
5B63	
5B64	
5B65	
5B66	
5B69	
5B6B	
5B70	
5B71	
5B73	
5B75	
5B78	
5B7A	
5B80	
5B83	
5B85	
5B87	
5B88	
5B89	
5B8B	
5B8C	
5B8D	
5B8F	
5B95	
5B97	
5B98	
5B99	
5B9A	
5B9B	
5B9C	
5B9D	
5B9F	
5BA2	
5BA3	
5BA4	
5BA5	
5BA6	
5BAE	
5BB0	
5BB3	
5BB4	
5BB5	
5BB6	
5BB8	
5BB9	
5BBF	
5BC2	
5BC3	
5BC4	
5BC5	
5BC6	
5BC7	
5BC9	
5BCC	
5BD0	
5BD2	
5BD3	
5BD4	
5BDB	
5BDD	
5BDE	
5BDF	
5BE1	
5BE2	
5BE4	
5BE5	
5BE6	
5BE7	
5BE8	
5BE9	
5BEB	
5BEE	
5BF0	
5BF3	
5BF5	
5BF6	
5BF8	
5BFA	
5BFE	
5BFF	
5C01	
5C02	
5C04	
5C05	
5C06	
5C07	
5C08	
5C09	
5C0A	
5C0B	
5C0D	
5C0E	
5C0F	
5C11	
5C13	
5C16	
5C1A	
5C20	
5C22	
5C24	
5C28	
5C2D	
5C31	
5C38	
5C39	
5C3A	
5C3B	
5C3C	
5C3D	
5C3E	
5C3F	
5C40	
5C41	
5C45	
5C46	
5C48	
5C4A	
5C4B	
5C4D	
5C4E	
5C4F	
5C50	
5C51	
5C53	
5C55	
5C5E	
5C60	
5C61	
5C64	
5C65	
5C6C	
5C6E	
5C6F	
5C71	
5C76	
5C79	
5C8C	
5C90	
5C91	
5C94	
5CA1	
5CA8	
5CA9	
5CAB	
5CAC	
5CB1	
5CB3	
5CB6	
5CB7	
5CB8	
5CBB	
5CBC	
5CBE	
5CC5	
5CC7	
5CD9	
5CE0	
5CE1	
5CE8	
5CE9	
5CEA	
5CED	
5CEF	
5CF0	
5CF6	
5CFA	
5CFB	
5CFD	
5D07	
5D0B	
5D0E	
5D11	
5D14	
5D15	
5D16	
5D17	
5D18	
5D19	
5D1A	
5D1B	
5D1F	
5D22	
5D29	
5D4B	
5D4C	
5D4E	
5D50	
5D52	
5D5C	
5D69	
5D6C	
5D6F	
5D73	
5D76	
5D82	
5D84	
5D87	
5D8B	
5D8C	
5D90	
5D9D	
5DA2	
5DAC	
5DAE	
5DB7	
5DBA	
5DBC	
5DBD	
5DC9	
5DCC	
5DCD	
5DD2	
5DD3	
5DD6	
5DDB	
5DDD	
5DDE	
5DE1	
5DE3	
5DE5	
5DE6	
5DE7	
5DE8	
5DEB	
5DEE	
5DF1	
5DF2	
5DF3	
5DF4	
5DF5	
5DF7	
5DFB	
5DFD	
5DFE	
5E02	
5E03	
5E06	
5E0B	
5E0C	
5E11	
5E16	
5E19	
5E1A	
5E1B	
5E1D	
5E25	
5E2B	
5E2D	
5E2F	
5E30	
5E33	
5E36	
5E37	
5E38	
5E3D	
5E40	
5E43	
5E44	
5E45	
5E47	
5E4C	
5E4E	
5E54	
5E55	
5E57	
5E5F	
5E61	
5E62	
5E63	
5E64	
5E72	
5E73	
5E74	
5E75	
5E76	
5E78	
5E79	
5E7A	
5E7B	
5E7C	
5E7D	
5E7E	
5E7F	
5E81	
5E83	
5E84	
5E87	
5E8A	
5E8F	
5E95	
5E96	
5E97	
5E9A	
5E9C	
5EA0	
5EA6	
5EA7	
5EAB	
5EAD	
5EB5	
5EB6	
5EB7	
5EB8	
5EC1	
5EC2	
5EC3	
5EC8	
5EC9	
5ECA	
5ECF	
5ED0	
5ED3	
5ED6	
5EDA	
5EDB	
5EDD	
5EDF	
5EE0	
5EE1	
5EE2	
5EE3	
5EE8	
5EE9	
5EEC	
5EF0	
5EF1	
5EF3	
5EF4	
5EF6	
5EF7	
5EF8	
5EFA	
5EFB	
5EFC	
5EFE	
5EFF	
5F01	
5F03	
5F04	
5F09	
5F0A	
5F0B	
5F0C	
5F0D	
5F0F	
5F10	
5F11	
5F13	
5F14	
5F15	
5F16	
5F17	
5F18	
5F1B	
5F1F	
5F25	
5F26	
5F27	
5F29	
5F2D	
5F2F	
5F31	
5F35	
5F37	
5F38	
5F3C	
5F3E	
5F41	
5F48	
5F4A	
5F4C	
5F4E	
5F51	
5F53	
5F56	
5F57	
5F59	
5F5C	
5F5D	
5F61	
5F62	
5F66	
5F69	
5F6A	
5F6B	
5F6C	
5F6D	
5F70	
5F71	
5F73	
5F77	
5F79	
5F7C	
5F7F	
5F80	
5F81	
5F82	
5F83	
5F84	
5F85	
5F87	
5F88	
5F8A	
5F8B	
5F8C	
5F90	
5F91	
5F92	
5F93	
5F97	
5F98	
5F99	
5F9E	
5FA0	
5FA1	
5FA8	
5FA9	
5FAA	
5FAD	
5FAE	
5FB3	
5FB4	
5FB9	
5FBC	
5FBD	
5FC3	
5FC5	
5FCC	
5FCD	
5FD6	
5FD7	
5FD8	
5FD9	
5FDC	
5FDD	
5FE0	
5FE4	
5FEB	
5FF0	
5FF1	
5FF5	
5FF8	
5FFB	
5FFD	
5FFF	
600E	
600F	
6010	
6012	
6015	
6016	
6019	
601B	
601C	
601D	
6020	
6021	
6025	
6026	
6027	
6028	
6029	
602A	
602B	
602F	
6031	
603A	
6041	
6042	
6043	
6046	
604A	
604B	
604D	
6050	
6052	
6055	
6059	
605A	
605F	
6060	
6062	
6063	
6064	
6065	
6068	
6069	
606A	
606B	
606C	
606D	
606F	
6070	
6075	
6077	
6081	
6083	
6084	
6089	
608B	
608C	
608D	
6092	
6094	
6096	
6097	
609A	
609B	
609F	
60A0	
60A3	
60A6	
60A7	
60A9	
60AA	
60B2	
60B3	
60B4	
60B5	
60B6	
60B8	
60BC	
60BD	
60C5	
60C6	
60C7	
60D1	
60D3	
60D8	
60DA	
60DC	
60DF	
60E0	
60E1	
60E3	
60E7	
60E8	
60F0	
60F1	
60F3	
60F4	
60F6	
60F7	
60F9	
60FA	
60FB	
6100	
6101	
6103	
6106	
6108	
6109	
610D	
610E	
610F	
6115	
611A	
611B	
611F	
6121	
6127	
6128	
612C	
6134	
613C	
613D	
613E	
613F	
6142	
6144	
6147	
6148	
614A	
614B	
614C	
614D	
614E	
6153	
6155	
6158	
6159	
615A	
615D	
615F	
6162	
6163	
6165	
6167	
6168	
616B	
616E	
616F	
6170	
6171	
6173	
6174	
6175	
6176	
6177	
617E	
6182	
6187	
618A	
618E	
6190	
6191	
6194	
6196	
6199	
619A	
61A4	
61A7	
61A9	
61AB	
61AC	
61AE	
61B2	
61B6	
61BA	
61BE	
61C3	
61C6	
61C7	
61C8	
61C9	
61CA	
61CB	
61CC	
61CD	
61D0	
61E3	
61E6	
61F2	
61F4	
61F6	
61F7	
61F8	
61FA	
61FC	
61FD	
61FE	
61FF	
6200	
6208	
6209	
620A	
620C	
620D	
620E	
6210	
6211	
6212	
6214	
6216	
621A	
621B	
621D	
621E	
621F	
6221	
6226	
622A	
622E	
622F	
6230	
6232	
6233	
6234	
6238	
623B	
623F	
6240	
6241	
6247	
6248	
6249	
624B	
624D	
624E	
6253	
6255	
6258	
625B	
625E	
6260	
6263	
6268	
626E	
6271	
6276	
6279	
627C	
627E	
627F	
6280	
6282	
6283	
6284	
6289	
628A	
6291	
6292	
6293	
6294	
6295	
6296	
6297	
6298	
629B	
629C	
629E	
62AB	
62AC	
62B1	
62B5	
62B9	
62BB	
62BC	
62BD	
62C2	
62C5	
62C6	
62C7	
62C8	
62C9	
62CA	
62CC	
62CD	
62CF	
62D0	
62D1	
62D2	
62D3	
62D4	
62D7	
62D8	
62D9	
62DB	
62DC	
62DD	
62E0	
62E1	
62EC	
62ED	
62EE	
62EF	
62F1	
62F3	
62F5	
62F6	
62F7	
62FE	
62FF	
6301	
6302	
6307	
6308	
6309	
630C	
6311	
6319	
631F	
6327	
6328	
632B	
632F	
633A	
633D	
633E	
633F	
6349	
634C	
634D	
634F	
6350	
6355	
6357	
635C	
6367	
6368	
6369	
636B	
636E	
6372	
6376	
6377	
637A	
637B	
6380	
6383	
6388	
6389	
638C	
638E	
638F	
6392	
6396	
6398	
639B	
639F	
63A0	
63A1	
63A2	
63A3	
63A5	
63A7	
63A8	
63A9	
63AA	
63AB	
63AC	
63B2	
63B4	
63B5	
63BB	
63BE	
63C0	
63C3	
63C4	
63C6	
63C9	
63CF	
63D0	
63D2	
63D6	
63DA	
63DB	
63E1	
63E3	
63E9	
63EE	
63F4	
63F6	
63FA	
6406	
640D	
640F	
6413	
6416	
6417	
641C	
6426	
6428	
642C	
642D	
6434	
6436	
643A	
643E	
6442	
644E	
6458	
6467	
6469	
646F	
6476	
6478	
647A	
6483	
6488	
6492	
6493	
6495	
649A	
649E	
64A4	
64A5	
64A9	
64AB	
64AD	
64AE	
64B0	
64B2	
64B9	
64BB	
64BC	
64C1	
64C2	
64C5	
64C7	
64CD	
64D2	
64D4	
64D8	
64DA	
64E0	
64E1	
64E2	
64E3	
64E6	
64E7	
64EC	
64EF	
64F1	
64F2	
64F4	
64F6	
64FA	
64FD	
64FE	
6500	
6505	
6518	
651C	
651D	
6523	
6524	
652A	
652B	
652C	
652F	
6534	
6535	
6536	
6537	
6538	
6539	
653B	
653E	
653F	
6545	
6548	
654D	
654F	
6551	
6555	
6556	
6557	
6558	
6559	
655D	
655E	
6562	
6563	
6566	
656C	
6570	
6572	
6574	
6575	
6577	
6578	
6582	
6583	
6587	
6588	
6589	
658C	
658E	
6590	
6591	
6597	
6599	
659B	
659C	
659F	
65A1	
65A4	
65A5	
65A7	
65AB	
65AC	
65AD	
65AF	
65B0	
65B7	
65B9	
65BC	
65BD	
65C1	
65C3	
65C4	
65C5	
65C6	
65CB	
65CC	
65CF	
65D2	
65D7	
65D9	
65DB	
65E0	
65E1	
65E2	
65E5	
65E6	
65E7	
65E8	
65E9	
65EC	
65ED	
65F1	
65FA	
65FB	
6602	
6603	
6606	
6607	
660A	
660C	
660E	
660F	
6613	
6614	
661C	
661F	
6620	
6625	
6627	
6628	
662D	
662F	
6634	
6635	
6636	
663C	
663F	
6641	
6642	
6643	
6644	
6649	
664B	
664F	
6652	
665D	
665E	
665F	
6662	
6664	
6666	
6667	
6668	
6669	
666E	
666F	
6670	
6674	
6676	
667A	
6681	
6683	
6684	
6687	
6688	
6689	
668E	
6691	
6696	
6697	
6698	
669D	
66A2	
66A6	
66AB	
66AE	
66B4	
66B8	
66B9	
66BC	
66BE	
66C1	
66C4	
66C7	
66C9	
66D6	
66D9	
66DA	
66DC	
66DD	
66E0	
66E6	
66E9	
66F0	
66F2	
66F3	
66F4	
66F5	
66F7	
66F8	
66F9	
66FC	
66FD	
66FE	
66FF	
6700	
6703	
6708	
6709	
670B	
670D	
670F	
6714	
6715	
6716	
6717	
671B	
671D	
671E	
671F	
6726	
6727	
6728	
672A	
672B	
672C	
672D	
672E	
6731	
6734	
6736	
6737	
6738	
673A	
673D	
673F	
6741	
6746	
6749	
674E	
674F	
6750	
6751	
6753	
6756	
6759	
675C	
675E	
675F	
6760	
6761	
6762	
6763	
6764	
6765	
676A	
676D	
676F	
6770	
6771	
6772	
6773	
6775	
6777	
677C	
677E	
677F	
6785	
6787	
6789	
678B	
678C	
6790	
6795	
6797	
679A	
679C	
679D	
67A0	
67A1	
67A2	
67A6	
67A9	
67AF	
67B3	
67B4	
67B6	
67B7	
67B8	
67B9	
67C1	
67C4	
67C6	
67CA	
67CE	
67CF	
67D0	
67D1	
67D3	
67D4	
67D8	
67DA	
67DD	
67DE	
67E2	
67E4	
67E7	
67E9	
67EC	
67EE	
67EF	
67F1	
67F3	
67F4	
67F5	
67FB	
67FE	
67FF	
6802	
6803	
6804	
6813	
6816	
6817	
681E	
6821	
6822	
6829	
682A	
682B	
6832	
6834	
6838	
6839	
683C	
683D	
6840	
6841	
6842	
6843	
6846	
6848	
684D	
684E	
6850	
6851	
6853	
6854	
6859	
685C	
685D	
685F	
6863	
6867	
6874	
6876	
6877	
687E	
687F	
6881	
6883	
6885	
688D	
688F	
6893	
6894	
6897	
689B	
689D	
689F	
68A0	
68A2	
68A6	
68A7	
68A8	
68AD	
68AF	
68B0	
68B1	
68B3	
68B5	
68B6	
68B9	
68BA	
68BC	
68C4	
68C6	
68C9	
68CA	
68CB	
68CD	
68D2	
68D4	
68D5	
68D7	
68D8	
68DA	
68DF	
68E0	
68E1	
68E3	
68E7	
68EE	
68EF	
68F2	
68F9	
68FA	
6900	
6901	
6904	
6905	
6908	
690B	
690C	
690D	
690E	
690F	
6912	
6919	
691A	
691B	
691C	
6921	
6922	
6923	
6925	
6926	
6928	
692A	
6930	
6934	
6936	
6939	
693D	
693F	
694A	
6953	
6954	
6955	
6959	
695A	
695C	
695D	
695E	
6960	
6961	
6962	
696A	
696B	
696D	
696E	
696F	
6973	
6974	
6975	
6977	
6978	
6979	
697C	
697D	
697E	
6981	
6982	
698A	
698E	
6991	
6994	
6995	
699B	
699C	
69A0	
69A7	
69AE	
69B1	
69B2	
69B4	
69BB	
69BE	
69BF	
69C1	
69C3	
69C7	
69CA	
69CB	
69CC	
69CD	
69CE	
69D0	
69D3	
69D8	
69D9	
69DD	
69DE	
69E7	
69E8	
69EB	
69ED	
69F2	
69F9	
69FB	
69FD	
69FF	
6A02	
6A05	
6A0A	
6A0B	
6A0C	
6A12	
6A13	
6A14	
6A17	
6A19	
6A1B	
6A1E	
6A1F	
6A21	
6A22	
6A23	
6A29	
6A2A	
6A2B	
6A2E	
6A35	
6A36	
6A38	
6A39	
6A3A	
6A3D	
6A44	
6A47	
6A48	
6A4B	
6A58	
6A59	
6A5F	
6A61	
6A62	
6A66	
6A72	
6A78	
6A7F	
6A80	
6A84	
6A8D	
6A8E	
6A90	
6A97	
6A9C	
6AA0	
6AA2	
6AA3	
6AAA	
6AAC	
6AAE	
6AB3	
6AB8	
6ABB	
6AC1	
6AC2	
6AC3	
6AD1	
6AD3	
6ADA	
6ADB	
6ADE	
6ADF	
6AE8	
6AEA	
6AFA	
6AFB	
6B04	
6B05	
6B0A	
6B12	
6B16	
6B1D	
6B1F	
6B20	
6B21	
6B23	
6B27	
6B32	
6B37	
6B38	
6B39	
6B3A	
6B3D	
6B3E	
6B43	
6B47	
6B49	
6B4C	
6B4E	
6B50	
6B53	
6B54	
6B59	
6B5B	
6B5F	
6B61	
6B62	
6B63	
6B64	
6B66	
6B69	
6B6A	
6B6F	
6B73	
6B74	
6B78	
6B79	
6B7B	
6B7F	
6B80	
6B83	
6B84	
6B86	
6B89	
6B8A	
6B8B	
6B8D	
6B95	
6B96	
6B98	
6B9E	
6BA4	
6BAA	
6BAB	
6BAF	
6BB1	
6BB2	
6BB3	
6BB4	
6BB5	
6BB7	
6BBA	
6BBB	
6BBC	
6BBF	
6BC0	
6BC5	
6BC6	
6BCB	
6BCD	
6BCE	
6BD2	
6BD3	
6BD4	
6BD8	
6BDB	
6BDF	
6BEB	
6BEC	
6BEF	
6BF3	
6C08	
6C0F	
6C11	
6C13	
6C14	
6C17	
6C1B	
6C23	
6C24	
6C34	
6C37	
6C38	
6C3E	
6C40	
6C41	
6C42	
6C4E	
6C50	
6C55	
6C57	
6C5A	
6C5D	
6C5E	
6C5F	
6C60	
6C62	
6C68	
6C6A	
6C70	
6C72	
6C73	
6C7A	
6C7D	
6C7E	
6C81	
6C82	
6C83	
6C88	
6C8C	
6C8D	
6C90	
6C92	
6C93	
6C96	
6C99	
6C9A	
6C9B	
6CA1	
6CA2	
6CAB	
6CAE	
6CB1	
6CB3	
6CB8	
6CB9	
6CBA	
6CBB	
6CBC	
6CBD	
6CBE	
6CBF	
6CC1	
6CC4	
6CC5	
6CC9	
6CCA	
6CCC	
6CD3	
6CD5	
6CD7	
6CD9	
6CDB	
6CDD	
6CE1	
6CE2	
6CE3	
6CE5	
6CE8	
6CEA	
6CEF	
6CF0	
6CF1	
6CF3	
6D0B	
6D0C	
6D12	
6D17	
6D19	
6D1B	
6D1E	
6D1F	
6D25	
6D29	
6D2A	
6D2B	
6D32	
6D33	
6D35	
6D36	
6D38	
6D3B	
6D3D	
6D3E	
6D41	
6D44	
6D45	
6D59	
6D5A	
6D5C	
6D63	
6D64	
6D66	
6D69	
6D6A	
6D6C	
6D6E	
6D74	
6D77	
6D78	
6D79	
6D85	
6D88	
6D8C	
6D8E	
6D93	
6D95	
6D99	
6D9B	
6D9C	
6DAF	
6DB2	
6DB5	
6DB8	
6DBC	
6DC0	
6DC5	
6DC6	
6DC7	
6DCB	
6DCC	
6DD1	
6DD2	
6DD5	
6DD8	
6DD9	
6DDE	
6DE1	
6DE4	
6DE6	
6DE8	
6DEA	
6DEB	
6DEC	
6DEE	
6DF1	
6DF3	
6DF5	
6DF7	
6DF9	
6DFA	
6DFB	
6E05	
6E07	
6E08	
6E09	
6E0A	
6E0B	
6E13	
6E15	
6E19	
6E1A	
6E1B	
6E1D	
6E1F	
6E20	
6E21	
6E23	
6E24	
6E25	
6E26	
6E29	
6E2B	
6E2C	
6E2D	
6E2E	
6E2F	
6E38	
6E3A	
6E3E	
6E43	
6E4A	
6E4D	
6E4E	
6E56	
6E58	
6E5B	
6E5F	
6E67	
6E6B	
6E6E	
6E6F	
6E72	
6E76	
6E7E	
6E7F	
6E80	
6E82	
6E8C	
6E8F	
6E90	
6E96	
6E98	
6E9C	
6E9D	
6E9F	
6EA2	
6EA5	
6EAA	
6EAF	
6EB2	
6EB6	
6EB7	
6EBA	
6EBD	
6EC2	
6EC4	
6EC5	
6EC9	
6ECB	
6ECC	
6ED1	
6ED3	
6ED4	
6ED5	
6EDD	
6EDE	
6EEC	
6EEF	
6EF2	
6EF4	
6EF7	
6EF8	
6EFE	
6EFF	
6F01	
6F02	
6F06	
6F09	
6F0F	
6F11	
6F13	
6F14	
6F15	
6F20	
6F22	
6F23	
6F2B	
6F2C	
6F31	
6F32	
6F38	
6F3E	
6F3F	
6F41	
6F45	
6F54	
6F58	
6F5B	
6F5C	
6F5F	
6F64	
6F66	
6F6D	
6F6E	
6F6F	
6F70	
6F74	
6F78	
6F7A	
6F7C	
6F80	
6F81	
6F82	
6F84	
6F86	
6F8E	
6F91	
6F97	
6FA1	
6FA3	
6FA4	
6FAA	
6FB1	
6FB3	
6FB9	
6FC0	
6FC1	
6FC2	
6FC3	
6FC6	
6FD4	
6FD5	
6FD8	
6FDB	
6FDF	
6FE0	
6FE1	
6FE4	
6FEB	
6FEC	
6FEE	
6FEF	
6FF1	
6FF3	
6FF6	
6FFA	
6FFE	
7001	
7009	
700B	
700F	
7011	
7015	
7018	
701A	
701B	
701D	
701E	
701F	
7026	
7027	
702C	
7030	
7032	
703E	
704C	
7051	
7058	
7063	
706B	
706F	
7070	
7078	
707C	
707D	
7089	
708A	
708E	
7092	
7099	
70AC	
70AD	
70AE	
70AF	
70B3	
70B8	
70B9	
70BA	
70C8	
70CB	
70CF	
70D9	
70DD	
70DF	
70F1	
70F9	
70FD	
7109	
7114	
7119	
711A	
711C	
7121	
7126	
7136	
713C	
7149	
714C	
714E	
7155	
7156	
7159	
7162	
7164	
7165	
7166	
7167	
7169	
716C	
716E	
717D	
7184	
7188	
718A	
718F	
7194	
7195	
7199	
719F	
71A8	
71AC	
71B1	
71B9	
71BE	
71C3	
71C8	
71C9	
71CE	
71D0	
71D2	
71D4	
71D5	
71D7	
71DF	
71E0	
71E5	
71E6	
71E7	
71EC	
71ED	
71EE	
71F5	
71F9	
71FB	
71FC	
71FF	
7206	
720D	
7210	
721B	
7228	
722A	
722C	
722D	
7230	
7232	
7235	
7236	
723A	
723B	
723C	
723D	
723E	
723F	
7240	
7246	
7247	
7248	
724B	
724C	
7252	
7258	
7259	
725B	
725D	
725F	
7261	
7262	
7267	
7269	
7272	
7274	
7279	
727D	
727E	
7280	
7281	
7282	
7287	
7292	
7296	
72A0	
72A2	
72A7	
72AC	
72AF	
72B2	
72B6	
72B9	
72C2	
72C3	
72C4	
72C6	
72CE	
72D0	
72D2	
72D7	
72D9	
72DB	
72E0	
72E1	
72E2	
72E9	
72EC	
72ED	
72F7	
72F8	
72F9	
72FC	
72FD	
730A	
7316	
7317	
731B	
731C	
731D	
731F	
7325	
7329	
732A	
732B	
732E	
732F	
7334	
7336	
7337	
733E	
733F	
7344	
7345	
734E	
734F	
7357	
7363	
7368	
736A	
7370	
7372	
7375	
7378	
737A	
737B	
7384	
7387	
7389	
738B	
7396	
73A9	
73B2	
73B3	
73BB	
73C0	
73C2	
73C8	
73CA	
73CD	
73CE	
73DE	
73E0	
73E5	
73EA	
73ED	
73EE	
73F1	
73F8	
73FE	
7403	
7405	
7406	
7409	
7422	
7425	
7432	
7433	
7434	
7435	
7436	
743A	
743F	
7441	
7455	
7459	
745A	
745B	
745C	
745E	
745F	
7460	
7463	
7464	
7469	
746A	
746F	
7470	
7473	
7476	
747E	
7483	
748B	
749E	
74A2	
74A7	
74B0	
74BD	
74CA	
74CF	
74D4	
74DC	
74E0	
74E2	
74E3	
74E6	
74E7	
74E9	
74EE	
74F0	
74F1	
74F2	
74F6	
74F7	
74F8	
7503	
7504	
7505	
750C	
750D	
750E	
7511	
7513	
7515	
7518	
751A	
751C	
751E	
751F	
7523	
7525	
7526	
7528	
752B	
752C	
7530	
7531	
7532	
7533	
7537	
7538	
753A	
753B	
753C	
7544	
7546	
7549	
754A	
754B	
754C	
754D	
754F	
7551	
7554	
7559	
755A	
755B	
755C	
755D	
7560	
7562	
7564	
7565	
7566	
7567	
7569	
756A	
756B	
756D	
7570	
7573	
7574	
7576	
7577	
7578	
757F	
7582	
7586	
7587	
7589	
758A	
758B	
758E	
758F	
7591	
7594	
759A	
759D	
75A3	
75A5	
75AB	
75B1	
75B2	
75B3	
75B5	
75B8	
75B9	
75BC	
75BD	
75BE	
75C2	
75C3	
75C5	
75C7	
75CA	
75CD	
75D2	
75D4	
75D5	
75D8	
75D9	
75DB	
75DE	
75E2	
75E3	
75E9	
75F0	
75F2	
75F3	
75F4	
75FA	
75FC	
75FE	
75FF	
7601	
7609	
760B	
760D	
761F	
7620	
7621	
7622	
7624	
7627	
7630	
7634	
763B	
7642	
7646	
7647	
7648	
764C	
7652	
7656	
7658	
765C	
7661	
7662	
7667	
7668	
7669	
766A	
766C	
7670	
7672	
7676	
7678	
767A	
767B	
767C	
767D	
767E	
7680	
7683	
7684	
7686	
7687	
7688	
768B	
768E	
7690	
7693	
7696	
7699	
769A	
76AE	
76B0	
76B4	
76B7	
76B8	
76B9	
76BA	
76BF	
76C2	
76C3	
76C6	
76C8	
76CA	
76CD	
76D2	
76D6	
76D7	
76DB	
76DC	
76DE	
76DF	
76E1	
76E3	
76E4	
76E5	
76E7	
76EA	
76EE	
76F2	
76F4	
76F8	
76FB	
76FE	
7701	
7704	
7707	
7708	
7709	
770B	
770C	
771B	
771E	
771F	
7720	
7724	
7725	
7726	
7729	
7737	
7738	
773A	
773C	
7740	
7747	
775A	
775B	
7761	
7763	
7765	
7766	
7768	
776B	
7779	
777E	
777F	
778B	
778E	
7791	
779E	
77A0	
77A5	
77AC	
77AD	
77B0	
77B3	
77B6	
77B9	
77BB	
77BC	
77BD	
77BF	
77C7	
77CD	
77D7	
77DA	
77DB	
77DC	
77E2	
77E3	
77E5	
77E7	
77E9	
77ED	
77EE	
77EF	
77F3	
77FC	
7802	
780C	
7812	
7814	
7815	
7820	
7825	
7826	
7827	
7832	
7834	
783A	
783F	
7845	
785D	
786B	
786C	
786F	
7872	
7874	
787C	
7881	
7886	
7887	
788C	
788D	
788E	
7891	
7893	
7895	
7897	
789A	
78A3	
78A7	
78A9	
78AA	
78AF	
78B5	
78BA	
78BC	
78BE	
78C1	
78C5	
78C6	
78CA	
78CB	
78D0	
78D1	
78D4	
78DA	
78E7	
78E8	
78EC	
78EF	
78F4	
78FD	
7901	
7907	
790E	
7911	
7912	
7919	
7926	
792A	
792B	
792C	
793A	
793C	
793E	
7940	
7941	
7947	
7948	
7949	
7950	
7953	
7955	
7956	
7957	
795A	
795D	
795E	
795F	
7960	
7962	
7965	
7968	
796D	
7977	
797A	
797F	
7980	
7981	
7984	
7985	
798A	
798D	
798E	
798F	
799D	
79A6	
79A7	
79AA	
79AE	
79B0	
79B3	
79B9	
79BA	
79BD	
79BE	
79BF	
79C0	
79C1	
79C9	
79CB	
79D1	
79D2	
79D5	
79D8	
79DF	
79E1	
79E3	
79E4	
79E6	
79E7	
79E9	
79EC	
79F0	
79FB	
7A00	
7A08	
7A0B	
7A0D	
7A0E	
7A14	
7A17	
7A18	
7A19	
7A1A	
7A1C	
7A1F	
7A20	
7A2E	
7A31	
7A32	
7A37	
7A3B	
7A3C	
7A3D	
7A3E	
7A3F	
7A40	
7A42	
7A43	
7A46	
7A49	
7A4D	
7A4E	
7A4F	
7A50	
7A57	
7A61	
7A62	
7A63	
7A69	
7A6B	
7A70	
7A74	
7A76	
7A79	
7A7A	
7A7D	
7A7F	
7A81	
7A83	
7A84	
7A88	
7A92	
7A93	
7A95	
7A96	
7A97	
7A98	
7A9F	
7AA9	
7AAA	
7AAE	
7AAF	
7AB0	
7AB6	
7ABA	
7ABF	
7AC3	
7AC4	
7AC5	
7AC7	
7AC8	
7ACA	
7ACB	
7ACD	
7ACF	
7AD2	
7AD3	
7AD5	
7AD9	
7ADA	
7ADC	
7ADD	
7ADF	
7AE0	
7AE1	
7AE2	
7AE3	
7AE5	
7AE6	
7AEA	
7AED	
7AEF	
7AF0	
7AF6	
7AF8	
7AF9	
7AFA	
7AFF	
7B02	
7B04	
7B06	
7B08	
7B0A	
7B0B	
7B0F	
7B11	
7B18	
7B19	
7B1B	
7B1E	
7B20	
7B25	
7B26	
7B28	
7B2C	
7B33	
7B35	
7B36	
7B39	
7B45	
7B46	
7B48	
7B49	
7B4B	
7B4C	
7B4D	
7B4F	
7B50	
7B51	
7B52	
7B54	
7B56	
7B5D	
7B65	
7B67	
7B6C	
7B6E	
7B70	
7B71	
7B74	
7B75	
7B7A	
7B86	
7B87	
7B8B	
7B8D	
7B8F	
7B92	
7B94	
7B95	
7B97	
7B98	
7B99	
7B9A	
7B9C	
7B9D	
7B9F	
7BA1	
7BAA	
7BAD	
7BB1	
7BB4	
7BB8	
7BC0	
7BC1	
7BC4	
7BC6	
7BC7	
7BC9	
7BCB	
7BCC	
7BCF	
7BDD	
7BE0	
7BE4	
7BE5	
7BE6	
7BE9	
7BED	
7BF3	
7BF6	
7BF7	
7C00	
7C07	
7C0D	
7C11	
7C12	
7C13	
7C14	
7C17	
7C1F	
7C21	
7C23	
7C27	
7C2A	
7C2B	
7C37	
7C38	
7C3D	
7C3E	
7C3F	
7C40	
7C43	
7C4C	
7C4D	
7C4F	
7C50	
7C54	
7C56	
7C58	
7C5F	
7C60	
7C64	
7C65	
7C6C	
7C73	
7C75	
7C7E	
7C81	
7C82	
7C83	
7C89	
7C8B	
7C8D	
7C90	
7C92	
7C95	
7C97	
7C98	
7C9B	
7C9F	
7CA1	
7CA2	
7CA4	
7CA5	
7CA7	
7CA8	
7CAB	
7CAD	
7CAE	
7CB1	
7CB2	
7CB3	
7CB9	
7CBD	
7CBE	
7CC0	
7CC2	
7CC5	
7CCA	
7CCE	
7CD2	
7CD6	
7CD8	
7CDC	
7CDE	
7CDF	
7CE0	
7CE2	
7CE7	
7CEF	
7CF2	
7CF4	
7CF6	
7CF8	
7CFA	
7CFB	
7CFE	
7D00	
7D02	
7D04	
7D05	
7D06	
7D0A	
7D0B	
7D0D	
7D10	
7D14	
7D15	
7D17	
7D18	
7D19	
7D1A	
7D1B	
7D1C	
7D20	
7D21	
7D22	
7D2B	
7D2C	
7D2E	
7D2F	
7D30	
7D32	
7D33	
7D35	
7D39	
7D3A	
7D3F	
7D42	
7D43	
7D44	
7D45	
7D46	
7D4B	
7D4C	
7D4E	
7D4F	
7D50	
7D56	
7D5B	
7D5E	
7D61	
7D62	
7D63	
7D66	
7D68	
7D6E	
7D71	
7D72	
7D73	
7D75	
7D76	
7D79	
7D7D	
7D89	
7D8F	
7D93	
7D99	
7D9A	
7D9B	
7D9C	
7D9F	
7DA2	
7DA3	
7DAB	
7DAC	
7DAD	
7DAE	
7DAF	
7DB0	
7DB1	
7DB2	
7DB4	
7DB5	
7DB8	
7DBA	
7DBB	
7DBD	
7DBE	
7DBF	
7DC7	
7DCA	
7DCB	
7DCF	
7DD1	
7DD2	
7DD5	
7DD8	
7DDA	
7DDC	
7DDD	
7DDE	
7DE0	
7DE1	
7DE4	
7DE8	
7DE9	
7DEC	
7DEF	
7DF2	
7DF4	
7DFB	
7E01	
7E04	
7E05	
7E09	
7E0A	
7E0B	
7E12	
7E1B	
7E1E	
7E1F	
7E21	
7E22	
7E23	
7E26	
7E2B	
7E2E	
7E31	
7E32	
7E35	
7E37	
7E39	
7E3A	
7E3B	
7E3D	
7E3E	
7E41	
7E43	
7E46	
7E4A	
7E4B	
7E4D	
7E54	
7E55	
7E56	
7E59	
7E5A	
7E5D	
7E5E	
7E66	
7E67	
7E69	
7E6A	
7E6D	
7E70	
7E79	
7E7B	
7E7C	
7E7D	
7E7F	
7E82	
7E83	
7E88	
7E89	
7E8C	
7E8E	
7E8F	
7E90	
7E92	
7E93	
7E94	
7E96	
7E9B	
7E9C	
7F36	
7F38	
7F3A	
7F45	
7F4C	
7F4D	
7F4E	
7F50	
7F51	
7F54	
7F55	
7F58	
7F5F	
7F60	
7F67	
7F68	
7F69	
7F6A	
7F6B	
7F6E	
7F70	
7F72	
7F75	
7F77	
7F78	
7F79	
7F82	
7F83	
7F85	
7F86	
7F87	
7F88	
7F8A	
7F8C	
7F8E	
7F94	
7F9A	
7F9D	
7F9E	
7FA3	
7FA4	
7FA8	
7FA9	
7FAE	
7FAF	
7FB2	
7FB6	
7FB8	
7FB9	
7FBD	
7FC1	
7FC5	
7FC6	
7FCA	
7FCC	
7FD2	
7FD4	
7FD5	
7FE0	
7FE1	
7FE6	
7FE9	
7FEB	
7FF0	
7FF3	
7FF9	
7FFB	
7FFC	
8000	
8001	
8003	
8004	
8005	
8006	
800B	
800C	
8010	
8012	
8015	
8017	
8018	
8019	
801C	
8021	
8028	
8033	
8036	
803B	
803D	
803F	
8046	
804A	
8052	
8056	
8058	
805A	
805E	
805F	
8061	
8062	
8068	
806F	
8070	
8072	
8073	
8074	
8076	
8077	
8079	
807D	
807E	
807F	
8084	
8085	
8086	
8087	
8089	
808B	
808C	
8093	
8096	
8098	
809A	
809B	
809D	
80A1	
80A2	
80A5	
80A9	
80AA	
80AC	
80AD	
80AF	
80B1	
80B2	
80B4	
80BA	
80C3	
80C4	
80C6	
80CC	
80CE	
80D6	
80D9	
80DA	
80DB	
80DD	
80DE	
80E1	
80E4	
80E5	
80EF	
80F1	
80F4	
80F8	
80FC	
80FD	
8102	
8105	
8106	
8107	
8108	
8109	
810A	
811A	
811B	
8123	
8129	
812F	
8131	
8133	
8139	
813E	
8146	
814B	
814E	
8150	
8151	
8153	
8154	
8155	
815F	
8165	
8166	
816B	
816E	
8170	
8171	
8174	
8178	
8179	
817A	
817F	
8180	
8182	
8183	
8188	
818A	
818F	
8193	
8195	
819A	
819C	
819D	
81A0	
81A3	
81A4	
81A8	
81A9	
81B0	
81B3	
81B5	
81B8	
81BA	
81BD	
81BE	
81BF	
81C0	
81C2	
81C6	
81C8	
81C9	
81CD	
81D1	
81D3	
81D8	
81D9	
81DA	
81DF	
81E0	
81E3	
81E5	
81E7	
81E8	
81EA	
81ED	
81F3	
81F4	
81FA	
81FB	
81FC	
81FE	
8201	
8202	
8205	
8207	
8208	
8209	
820A	
820C	
820D	
820E	
8210	
8212	
8216	
8217	
8218	
821B	
821C	
821E	
821F	
8229	
822A	
822B	
822C	
822E	
8233	
8235	
8236	
8237	
8238	
8239	
8240	
8247	
8258	
8259	
825A	
825D	
825F	
8262	
8264	
8266	
8268	
826A	
826B	
826E	
826F	
8271	
8272	
8276	
8277	
8278	
827E	
828B	
828D	
8292	
8299	
829D	
829F	
82A5	
82A6	
82AB	
82AC	
82AD	
82AF	
82B1	
82B3	
82B8	
82B9	
82BB	
82BD	
82C5	
82D1	
82D2	
82D3	
82D4	
82D7	
82D9	
82DB	
82DC	
82DE	
82DF	
82E1	
82E3	
82E5	
82E6	
82E7	
82EB	
82F1	
82F3	
82F4	
82F9	
82FA	
82FB	
8302	
8303	
8304	
8305	
8306	
8309	
830E	
8316	
8317	
8318	
831C	
8323	
8328	
832B	
832F	
8331	
8332	
8334	
8335	
8336	
8338	
8339	
8340	
8345	
8349	
834A	
834F	
8350	
8352	
8358	
8373	
8375	
8377	
837B	
837C	
8385	
8387	
8389	
838A	
838E	
8393	
8396	
839A	
839E	
839F	
83A0	
83A2	
83A8	
83AA	
83AB	
83B1	
83B5	
83BD	
83C1	
83C5	
83CA	
83CC	
83CE	
83D3	
83D6	
83D8	
83DC	
83DF	
83E0	
83E9	
83EB	
83EF	
83F0	
83F1	
83F2	
83F4	
83F7	
83FB	
83FD	
8403	
8404	
8407	
840B	
840C	
840D	
840E	
8413	
8420	
8422	
8429	
842A	
842C	
8431	
8435	
8438	
843C	
843D	
8446	
8449	
844E	
8457	
845B	
8461	
8462	
8463	
8466	
8469	
846B	
846C	
846D	
846E	
846F	
8471	
8475	
8477	
8479	
847A	
8482	
8484	
848B	
8490	
8494	
8499	
849C	
849F	
84A1	
84AD	
84B2	
84B8	
84B9	
84BB	
84BC	
84BF	
84C1	
84C4	
84C6	
84C9	
84CA	
84CB	
84CD	
84D0	
84D1	
84D6	
84D9	
84DA	
84EC	
84EE	
84F4	
84FC	
84FF	
8500	
8506	
8511	
8513	
8514	
8515	
8517	
8518	
851A	
851F	
8521	
8526	
852C	
852D	
8535	
853D	
8540	
8541	
8543	
8548	
8549	
854A	
854B	
854E	
8555	
8557	
8558	
855A	
8563	
8568	
8569	
856A	
856D	
8577	
857E	
8580	
8584	
8587	
8588	
858A	
8590	
8591	
8594	
8597	
8599	
859B	
859C	
85A4	
85A6	
85A8	
85A9	
85AA	
85AB	
85AC	
85AE	
85AF	
85B9	
85BA	
85C1	
85C9	
85CD	
85CF	
85D0	
85D5	
85DC	
85DD	
85E4	
85E5	
85E9	
85EA	
85F7	
85F9	
85FA	
85FB	
85FE	
8602	
8606	
8607	
860A	
860B	
8613	
8616	
8617	
861A	
8622	
862D	
862F	
8630	
863F	
864D	
864E	
8650	
8654	
8655	
865A	
865C	
865E	
865F	
8667	
866B	
8671	
8679	
867B	
868A	
868B	
868C	
8693	
8695	
86A3	
86A4	
86A9	
86AA	
86AB	
86AF	
86B0	
86B6	
86C4	
86C6	
86C7	
86C9	
86CB	
86CD	
86CE	
86D4	
86D9	
86DB	
86DE	
86DF	
86E4	
86E9	
86EC	
86ED	
86EE	
86EF	
86F8	
86F9	
86FB	
86FE	
8700	
8702	
8703	
8706	
8708	
8709	
870A	
870D	
8711	
8712	
8718	
871A	
871C	
8725	
8729	
8734	
8737	
873B	
873F	
8749	
874B	
874C	
874E	
8753	
8755	
8757	
8759	
875F	
8760	
8763	
8766	
8768	
876A	
876E	
8774	
8776	
8778	
877F	
8782	
878D	
879F	
87A2	
87AB	
87AF	
87B3	
87BA	
87BB	
87BD	
87C0	
87C4	
87C6	
87C7	
87CB	
87D0	
87D2	
87E0	
87EF	
87F2	
87F6	
87F7	
87F9	
87FB	
87FE	
8805	
880D	
880E	
880F	
8811	
8815	
8816	
8821	
8822	
8823	
8827	
8831	
8836	
8839	
883B	
8840	
8842	
8844	
8846	
884C	
884D	
8852	
8853	
8857	
8859	
885B	
885D	
885E	
8861	
8862	
8863	
8868	
886B	
8870	
8872	
8875	
8877	
887D	
887E	
887F	
8881	
8882	
8888	
888B	
888D	
8892	
8896	
8897	
8899	
889E	
88A2	
88A4	
88AB	
88AE	
88B0	
88B1	
88B4	
88B5	
88B7	
88BF	
88C1	
88C2	
88C3	
88C4	
88C5	
88CF	
88D4	
88D5	
88D8	
88D9	
88DC	
88DD	
88DF	
88E1	
88E8	
88F2	
88F3	
88F4	
88F8	
88F9	
88FC	
88FD	
88FE	
8902	
8904	
8907	
890A	
890C	
8910	
8912	
8913	
891D	
891E	
8925	
892A	
892B	
8936	
8938	
893B	
8941	
8943	
8944	
894C	
894D	
8956	
895E	
895F	
8960	
8964	
8966	
896A	
896D	
896F	
8972	
8974	
8977	
897E	
897F	
8981	
8983	
8986	
8987	
8988	
898A	
898B	
898F	
8993	
8996	
8997	
8998	
899A	
89A1	
89A6	
89A7	
89A9	
89AA	
89AC	
89AF	
89B2	
89B3	
89BA	
89BD	
89BF	
89C0	
89D2	
89DA	
89DC	
89DD	
89E3	
89E6	
89E7	
89F4	
89F8	
8A00	
8A02	
8A03	
8A08	
8A0A	
8A0C	
8A0E	
8A10	
8A13	
8A16	
8A17	
8A18	
8A1B	
8A1D	
8A1F	
8A23	
8A25	
8A2A	
8A2D	
8A31	
8A33	
8A34	
8A36	
8A3A	
8A3B	
8A3C	
8A41	
8A46	
8A48	
8A50	
8A51	
8A52	
8A54	
8A55	
8A5B	
8A5E	
8A60	
8A62	
8A63	
8A66	
8A69	
8A6B	
8A6C	
8A6D	
8A6E	
8A70	
8A71	
8A72	
8A73	
8A7C	
8A82	
8A84	
8A85	
8A87	
8A89	
8A8C	
8A8D	
8A91	
8A93	
8A95	
8A98	
8A9A	
8A9E	
8AA0	
8AA1	
8AA3	
8AA4	
8AA5	
8AA6	
8AA8	
8AAC	
8AAD	
8AB0	
8AB2	
8AB9	
8ABC	
8ABF	
8AC2	
8AC4	
8AC7	
8ACB	
8ACC	
8ACD	
8ACF	
8AD2	
8AD6	
8ADA	
8ADB	
8ADC	
8ADE	
8AE0	
8AE1	
8AE2	
8AE4	
8AE6	
8AE7	
8AEB	
8AED	
8AEE	
8AF1	
8AF3	
8AF7	
8AF8	
8AFA	
8AFE	
8B00	
8B01	
8B02	
8B04	
8B07	
8B0C	
8B0E	
8B10	
8B14	
8B16	
8B17	
8B19	
8B1A	
8B1B	
8B1D	
8B20	
8B21	
8B26	
8B28	
8B2B	
8B2C	
8B33	
8B39	
8B3E	
8B41	
8B49	
8B4C	
8B4E	
8B4F	
8B56	
8B58	
8B5A	
8B5B	
8B5C	
8B5F	
8B66	
8B6B	
8B6C	
8B6F	
8B70	
8B71	
8B72	
8B74	
8B77	
8B7D	
8B80	
8B83	
8B8A	
8B8C	
8B8E	
8B90	
8B92	
8B93	
8B96	
8B99	
8B9A	
8C37	
8C3A	
8C3F	
8C41	
8C46	
8C48	
8C4A	
8C4C	
8C4E	
8C50	
8C55	
8C5A	
8C61	
8C62	
8C6A	
8C6B	
8C6C	
8C78	
8C79	
8C7A	
8C7C	
8C82	
8C85	
8C89	
8C8A	
8C8C	
8C8D	
8C8E	
8C94	
8C98	
8C9D	
8C9E	
8CA0	
8CA1	
8CA2	
8CA7	
8CA8	
8CA9	
8CAA	
8CAB	
8CAC	
8CAD	
8CAE	
8CAF	
8CB0	
8CB2	
8CB3	
8CB4	
8CB6	
8CB7	
8CB8	
8CBB	
8CBC	
8CBD	
8CBF	
8CC0	
8CC1	
8CC2	
8CC3	
8CC4	
8CC7	
8CC8	
8CCA	
8CCD	
8CCE	
8CD1	
8CD3	
8CDA	
8CDB	
8CDC	
8CDE	
8CE0	
8CE2	
8CE3	
8CE4	
8CE6	
8CEA	
8CED	
8CFA	
8CFB	
8CFC	
8CFD	
8D04	
8D05	
8D07	
8D08	
8D0A	
8D0B	
8D0D	
8D0F	
8D10	
8D13	
8D14	
8D16	
8D64	
8D66	
8D67	
8D6B	
8D6D	
8D70	
8D71	
8D73	
8D74	
8D77	
8D81	
8D85	
8D8A	
8D99	
8DA3	
8DA8	
8DB3	
8DBA	
8DBE	
8DC2	
8DCB	
8DCC	
8DCF	
8DD6	
8DDA	
8DDB	
8DDD	
8DDF	
8DE1	
8DE3	
8DE8	
8DEA	
8DEB	
8DEF	
8DF3	
8DF5	
8DFC	
8DFF	
8E08	
8E09	
8E0A	
8E0F	
8E10	
8E1D	
8E1E	
8E1F	
8E2A	
8E30	
8E34	
8E35	
8E42	
8E44	
8E47	
8E48	
8E49	
8E4A	
8E4C	
8E50	
8E55	
8E59	
8E5F	
8E60	
8E63	
8E64	
8E72	
8E74	
8E76	
8E7C	
8E81	
8E84	
8E85	
8E87	
8E8A	
8E8B	
8E8D	
8E91	
8E93	
8E94	
8E99	
8EA1	
8EAA	
8EAB	
8EAC	
8EAF	
8EB0	
8EB1	
8EBE	
8EC5	
8EC6	
8EC8	
8ECA	
8ECB	
8ECC	
8ECD	
8ED2	
8EDB	
8EDF	
8EE2	
8EE3	
8EEB	
8EF8	
8EFB	
8EFC	
8EFD	
8EFE	
8F03	
8F05	
8F09	
8F0A	
8F0C	
8F12	
8F13	
8F14	
8F15	
8F19	
8F1B	
8F1C	
8F1D	
8F1F	
8F26	
8F29	
8F2A	
8F2F	
8F33	
8F38	
8F39	
8F3B	
8F3E	
8F3F	
8F42	
8F44	
8F45	
8F46	
8F49	
8F4C	
8F4D	
8F4E	
8F57	
8F5C	
8F5F	
8F61	
8F62	
8F63	
8F64	
8F9B	
8F9C	
8F9E	
8F9F	
8FA3	
8FA7	
8FA8	
8FAD	
8FAE	
8FAF	
8FB0	
8FB1	
8FB2	
8FB7	
8FBA	
8FBB	
8FBC	
8FBF	
8FC2	
8FC4	
8FC5	
8FCE	
8FD1	
8FD4	
8FDA	
8FE2	
8FE5	
8FE6	
8FE9	
8FEA	
8FEB	
8FED	
8FEF	
8FF0	
8FF4	
8FF7	
8FF8	
8FF9	
8FFA	
8FFD	
9000	
9001	
9003	
9005	
9006	
900B	
900D	
900E	
900F	
9010	
9011	
9013	
9014	
9015	
9016	
9017	
9019	
901A	
901D	
901E	
901F	
9020	
9021	
9022	
9023	
9027	
902E	
9031	
9032	
9035	
9036	
9038	
9039	
903C	
903E	
9041	
9042	
9045	
9047	
9049	
904A	
904B	
904D	
904E	
904F	
9050	
9051	
9052	
9053	
9054	
9055	
9056	
9058	
9059	
905C	
905E	
9060	
9061	
9063	
9065	
9068	
9069	
906D	
906E	
906F	
9072	
9075	
9076	
9077	
9078	
907A	
907C	
907D	
907F	
9080	
9081	
9082	
9083	
9084	
9087	
9089	
908A	
908F	
9091	
90A3	
90A6	
90A8	
90AA	
90AF	
90B1	
90B5	
90B8	
90C1	
90CA	
90CE	
90DB	
90E1	
90E2	
90E4	
90E8	
90ED	
90F5	
90F7	
90FD	
9102	
9112	
9119	
912D	
9130	
9132	
9149	
914A	
914B	
914C	
914D	
914E	
9152	
9154	
9156	
9158	
9162	
9163	
9165	
9169	
916A	
916C	
9172	
9173	
9175	
9177	
9178	
9182	
9187	
9189	
918B	
918D	
9190	
9192	
9197	
919C	
91A2	
91A4	
91AA	
91AB	
91AF	
91B4	
91B5	
91B8	
91BA	
91C0	
91C1	
91C6	
91C7	
91C8	
91C9	
91CB	
91CC	
91CD	
91CE	
91CF	
91D0	
91D1	
91D6	
91D8	
91DB	
91DC	
91DD	
91DF	
91E1	
91E3	
91E6	
91E7	
91F5	
91F6	
91FC	
91FF	
920D	
920E	
9211	
9214	
9215	
921E	
9229	
922C	
9234	
9237	
923F	
9244	
9245	
9248	
9249	
924B	
9250	
9257	
925A	
925B	
925E	
9262	
9264	
9266	
9271	
927E	
9280	
9283	
9285	
9291	
9293	
9295	
9296	
9298	
929A	
929B	
929C	
92AD	
92B7	
92B9	
92CF	
92D2	
92E4	
92E9	
92EA	
92ED	
92F2	
92F3	
92F8	
92FA	
92FC	
9306	
930F	
9310	
9318	
9319	
931A	
9320	
9322	
9323	
9326	
9328	
932B	
932C	
932E	
932F	
9332	
9335	
933A	
933B	
9344	
934B	
934D	
9354	
9356	
935B	
935C	
9360	
936C	
936E	
9375	
937C	
937E	
938C	
9394	
9396	
9397	
939A	
93A7	
93AC	
93AD	
93AE	
93B0	
93B9	
93C3	
93C8	
93D0	
93D1	
93D6	
93D7	
93D8	
93DD	
93E1	
93E4	
93E5	
93E8	
9403	
9407	
9410	
9413	
9414	
9418	
9419	
941A	
9421	
942B	
9435	
9436	
9438	
943A	
9441	
9444	
9451	
9452	
9453	
945A	
945B	
945E	
9460	
9462	
946A	
9470	
9475	
9477	
947C	
947D	
947E	
947F	
9481	
9577	
9580	
9582	
9583	
9587	
9589	
958A	
958B	
958F	
9591	
9593	
9594	
9596	
9598	
9599	
95A0	
95A2	
95A3	
95A4	
95A5	
95A7	
95A8	
95AD	
95B2	
95B9	
95BB	
95BC	
95BE	
95C3	
95C7	
95CA	
95CC	
95CD	
95D4	
95D5	
95D6	
95D8	
95DC	
95E1	
95E2	
95E5	
961C	
9621	
9628	
962A	
962E	
962F	
9632	
963B	
963F	
9640	
9642	
9644	
964B	
964C	
964D	
964F	
9650	
965B	
965C	
965D	
965E	
965F	
9662	
9663	
9664	
9665	
9666	
966A	
966C	
9670	
9672	
9673	
9675	
9676	
9677	
9678	
967A	
967D	
9685	
9686	
9688	
968A	
968B	
968D	
968E	
968F	
9694	
9695	
9697	
9698	
9699	
969B	
969C	
96A0	
96A3	
96A7	
96A8	
96AA	
96B0	
96B1	
96B2	
96B4	
96B6	
96B7	
96B8	
96B9	
96BB	
96BC	
96C0	
96C1	
96C4	
96C5	
96C6	
96C7	
96C9	
96CB	
96CC	
96CD	
96CE	
96D1	
96D5	
96D6	
96D9	
96DB	
96DC	
96E2	
96E3	
96E8	
96EA	
96EB	
96F0	
96F2	
96F6	
96F7	
96F9	
96FB	
9700	
9704	
9706	
9707	
9708	
970A	
970D	
970E	
970F	
9711	
9713	
9716	
9719	
971C	
971E	
9724	
9727	
972A	
9730	
9732	
9738	
9739	
973D	
973E	
9742	
9744	
9746	
9748	
9749	
9752	
9756	
9759	
975C	
975E	
9760	
9761	
9762	
9764	
9766	
9768	
9769	
976B	
976D	
9771	
9774	
9779	
977A	
977C	
9781	
9784	
9785	
9786	
978B	
978D	
978F	
9790	
9798	
979C	
97A0	
97A3	
97A6	
97A8	
97AB	
97AD	
97B3	
97B4	
97C3	
97C6	
97C8	
97CB	
97D3	
97DC	
97ED	
97EE	
97F2	
97F3	
97F5	
97F6	
97FB	
97FF	
9801	
9802	
9803	
9805	
9806	
9808	
980C	
980F	
9810	
9811	
9812	
9813	
9817	
9818	
981A	
9821	
9824	
982C	
982D	
9834	
9837	
9838	
983B	
983C	
983D	
9846	
984B	
984C	
984D	
984E	
984F	
9854	
9855	
9858	
985B	
985E	
9867	
986B	
986F	
9870	
9871	
9873	
9874	
98A8	
98AA	
98AF	
98B1	
98B6	
98C3	
98C4	
98C6	
98DB	
98DC	
98DF	
98E2	
98E9	
98EB	
98ED	
98EE	
98EF	
98F2	
98F4	
98FC	
98FD	
98FE	
9903	
9905	
9909	
990A	
990C	
9910	
9912	
9913	
9914	
9918	
991D	
991E	
9920	
9921	
9924	
9928	
992C	
992E	
993D	
993E	
9942	
9945	
9949	
994B	
994C	
9950	
9951	
9952	
9955	
9957	
9996	
9997	
9998	
9999	
99A5	
99A8	
99AC	
99AD	
99AE	
99B3	
99B4	
99BC	
99C1	
99C4	
99C5	
99C6	
99C8	
99D0	
99D1	
99D2	
99D5	
99D8	
99DB	
99DD	
99DF	
99E2	
99ED	
99EE	
99F1	
99F2	
99F8	
99FB	
99FF	
9A01	
9A05	
9A0E	
9A0F	
9A12	
9A13	
9A19	
9A28	
9A2B	
9A30	
9A37	
9A3E	
9A40	
9A42	
9A43	
9A45	
9A4D	
9A55	
9A57	
9A5A	
9A5B	
9A5F	
9A62	
9A64	
9A65	
9A69	
9A6A	
9A6B	
9AA8	
9AAD	
9AB0	
9AB8	
9ABC	
9AC0	
9AC4	
9ACF	
9AD1	
9AD3	
9AD4	
9AD8	
9ADE	
9ADF	
9AE2	
9AE3	
9AE6	
9AEA	
9AEB	
9AED	
9AEE	
9AEF	
9AF1	
9AF4	
9AF7	
9AFB	
9B06	
9B18	
9B1A	
9B1F	
9B22	
9B23	
9B25	
9B27	
9B28	
9B29	
9B2A	
9B2E	
9B2F	
9B31	
9B32	
9B3B	
9B3C	
9B41	
9B42	
9B43	
9B44	
9B45	
9B4D	
9B4E	
9B4F	
9B51	
9B54	
9B58	
9B5A	
9B6F	
9B74	
9B83	
9B8E	
9B91	
9B92	
9B93	
9B96	
9B97	
9B9F	
9BA0	
9BA8	
9BAA	
9BAB	
9BAD	
9BAE	
9BB4	
9BB9	
9BC0	
9BC6	
9BC9	
9BCA	
9BCF	
9BD1	
9BD2	
9BD4	
9BD6	
9BDB	
9BE1	
9BE2	
9BE3	
9BE4	
9BE8	
9BF0	
9BF1	
9BF2	
9BF5	
9C04	
9C06	
9C08	
9C09	
9C0A	
9C0C	
9C0D	
9C10	
9C12	
9C13	
9C14	
9C15	
9C1B	
9C21	
9C24	
9C25	
9C2D	
9C2E	
9C2F	
9C30	
9C32	
9C39	
9C3A	
9C3B	
9C3E	
9C46	
9C47	
9C48	
9C52	
9C57	
9C5A	
9C60	
9C67	
9C76	
9C78	
9CE5	
9CE7	
9CE9	
9CEB	
9CEC	
9CF0	
9CF3	
9CF4	
9CF6	
9D03	
9D06	
9D07	
9D08	
9D09	
9D0E	
9D12	
9D15	
9D1B	
9D1F	
9D23	
9D26	
9D28	
9D2A	
9D2B	
9D2C	
9D3B	
9D3E	
9D3F	
9D41	
9D44	
9D46	
9D48	
9D50	
9D51	
9D59	
9D5C	
9D5D	
9D5E	
9D60	
9D61	
9D64	
9D6C	
9D6F	
9D72	
9D7A	
9D87	
9D89	
9D8F	
9D9A	
9DA4	
9DA9	
9DAB	
9DAF	
9DB2	
9DB4	
9DB8	
9DBA	
9DBB	
9DC1	
9DC2	
9DC4	
9DC6	
9DCF	
9DD3	
9DD9	
9DE6	
9DED	
9DEF	
9DF2	
9DF8	
9DF9	
9DFA	
9DFD	
9E1A	
9E1B	
9E1E	
9E75	
9E78	
9E79	
9E7D	
9E7F	
9E81	
9E88	
9E8B	
9E8C	
9E91	
9E92	
9E93	
9E95	
9E97	
9E9D	
9E9F	
9EA5	
9EA6	
9EA9	
9EAA	
9EAD	
9EB8	
9EB9	
9EBA	
9EBB	
9EBC	
9EBE	
9EBF	
9EC4	
9ECC	
9ECD	
9ECE	
9ECF	
9ED0	
9ED2	
9ED4	
9ED8	
9ED9	
9EDB	
9EDC	
9EDD	
9EDE	
9EE0	
9EE5	
9EE8	
9EEF	
9EF4	
9EF6	
9EF7	
9EF9	
9EFB	
9EFC	
9EFD	
9F07	
9F08	
9F0E	
9F13	
9F15	
9F20	
9F21	
9F2C	
9F3B	
9F3E	
9F4A	
9F4B	
9F4E	
9F4F	
9F52	
9F54	
9F5F	
9F60	
9F61	
9F62	
9F63	
9F66	
9F67	
9F6A	
9F6C	
9F72	
9F76	
9F77	
9F8D	
9F95	
9F9C	
9F9D	
9FA0
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dxg\xfont\scaler\clientif.doc ===
Microsoft Word 6.0 Document MSWordDoc Word.Document.6C:\OFFICE\WINWORD\TEMPLATE\NORMAL.DOT Font Scaler Client Interface Jeff Weaver Jeff Weaver Microsoft Word 6.0Font Scaler Client Interface Version 1.5 1/21/94 Microsoft Confidential ( 1989-1994 Microsoft Corporation and Apple Computer, Inc. All rights reserved.  Microsoft is a registered trademark of Microsoft Corporation. Apple, the Apple logo, Macintosh, MPW, and QuickDraw are registered trademarks of Apple Computer, Inc. Font Scaler Client Interface About This Document About the Font Scaler About the Font Scaler Client Interface Using the Font Scaler Client Interface Font Scaler Data Structures The fs_GlyphInputType record The fs_GlyphInfoType record The Graphics State The fnt_LocalGraphicStateType Data Structure The fnt_ElementType Data Structure The fnt_GlobalGraphicStateType Data Structure Font Scaler Routines fs_OpenFonts fs_Initialize fs_NewSfnt fs_NewTransformation fs_NewGlyph fs_GetAdvanceWidth fs_GetScaledAdvanceWidths fs_ContourGridFit fs_ContourNoGridFit fs_ContourGrayScan fs_FindBitMapSize fs_FindBandingSize fs_FindGrayBandingSize fs_FindGraySize fs_SizeOfOutlines fs_SaveOutlines fs_RestoreOutlines fs_ContourScan fs_CloseFonts Font Scaler Errors Sample of a Routine That Uses the Client Interface Summary of the Font Scaler Client Interface Constants Macros Data Types Functions About This Document The client interface to the Font Scaler has been released for those engineers who are writing system software, designing outline fonts, and writing font editors. About the Font Scaler The Font Scaler scales the outline font definition for a glyph to a specific point size, and then converts the outline into a bitmap at a particular resolution. The conversion of an outline into a bitmap is referred to as scan conversion. Each glyph in an outline font has a mathematical description as a set of straight lines and second-degree B-splines. Because the edges of the pixels (for a display screen) or dots (for a printer) might not correspond exactly to the lines and curves defining the glyph, a straight scan conversion of an outline into a bitmap is generally imperfect. This effect is most noticeable at low resolution, where there are relatively few pixels or dots per inch.  To correct for this problem, the description of each glyph can include a set of instructions that tell the Font Scaler how to modify the shape of the glyph before scan conversion for a particular point size and display resolution. The Font Scaler, therefore, includes an instruction interpreter in addition to a scan converter. About the Font Scaler Client Interface Routines that need to use the Font Scaler are referred to as Font Scaler clients. The client interface for the Font Scaler consists of 19 routines, as shown in Table 1. You can pass parameters to the Font Scaler through a data structure called the fs_GlyphInputType record and you can receive data from the Font Scaler through the fs_GlyphInfoType record. These records are described in the section  Font Scaler Data Structures,  later in this document. The Font Scaler routines are described in detail in the section  Font Scaler Routines,  later in this document. One of the fields in the fs_GlyphInputType record is a pointer to a function called the trace function that the Font Scaler calls before it executes each instruction. The Font Scaler passes one parameter to the trace function: a pointer to the local graphics state. The local graphics state contains several fields that can affect the execution of instructions, plus a pointer to the global graphics state. The local and global graphics states are described in the section  The Graphics State,  later in this document.  You can define the trace function in any way you wish; the purpose of the function is to allow you to trace through the instructions as the Font Scaler executes them and to examine the graphics state before and after each instruction is executed. If you do not want to use the trace feature, set the traceFunc field of the fs_GlyphInputType record to NULL (0). Table 1. Font Scaler Client Interface Routines  Routine fs_OpenFonts Opens the Font Scaler. This routine is required. fs_Initialize Initializes the Font Scaler. This routine is required. fs_NewSfnt Specifies which sfnt data structure to use. You must call this routine each time you have a new sfnt data structure or change the contents of the maxProfile table in the sfnt. fs_NewTransformation Specifies the point size, the transformation matrix, the pixel diameter, and the resolution to be used by the Font Scaler; provides a pointer to the trace function. You must call this routine any time you have a new value for one of these parameters. fs_NewGlyph Causes the Font Scaler to compute the glyph index value from the character code. You must call this routine each time you want to display a new glyph. fs_GetAdvancedWidth Extracts information about the advance width of a glyph from the sfnt data structure. You can use this routine instead of fs_ContourGridFit or fs_ContourNoGridFit if you do not want to create an outline. fs_GetScaledAdvanceWidths Returns the hinted advance widths for the range of glyphs specified. The routine takes advantage of the hdmx and LTSH tables if they are present in the font file. fs_ContourGridFit Executes the instructions for a glyph and creates an outline with the point size, display resolution, pixel diameter, and transformation specified with the fs_NewTransformation routine. You should use this routine instead of fs_ContourNoGridFit if you want the Font Scaler to perform grid fitting when it creates the outline of the glyph. fs_ContourNoGridFit Creates an outline for a glyph at the point size specified with the fs_NewTransformation routine. You can use this routine instead of fs_ContourGridFit  if you want to create an outline without executing the instructions for the glyph. fs_ContourGrayScan Converts an outline into a gray scale bitmap. fs_FindBitMapSize Calculates the amount of memory that the Font Scaler needs to create the glyph s bitmap, and returns the left side bearing and advance width. You must call this routine if you want to prepare a bitmap for the glyph. fs_FindBandingSize Determines the amount of memory needed by the Font Scaler to scan convert a glyph bitmap using banding. fs_FindGrayBandingSize Determines the amount of memory needed to create a gray scale bitmap using banding. fs_FindGraySize Determines the amount of memory needed to create a gray scale bitmap. fs_SizeOfOutlines Calculates the amount of memory that the Font Scaler needs to cache the outline. This routine is optional. Table 1 (continued). Font Scaler Client Interface Routines  Routine fs_SaveOutlines Stores the outline data in the outline cache. This routine is optional. fs_RestoreOutlines Recovers the outline data stored in the outline cache. This routine is optional. fs_ContourScan Converts the outline into a bitmap. You must call this routine if you want to prepare a bitmap for the glyph. fs_CloseFonts Closes the Font Scaler. Using the Font Scaler Client Interface Each of the routines for the client interface to the Font Scaler takes two parameters. The first parameter is a pointer to the fs_GlyphInputType record and the second is a pointer to the fs_GlyphInfoType record. To use the Font Scaler to create a bitmap for a particular glyph, use the following procedure: Allocate memory for and pointers to the fs_GlyphInputType and fs_GlyphInfoType records.  Set to 0 the fields flags, reserved0, platformID, ReleaseSfntFrag, and styleFunc in the fs_GlyphInputType record. The fields flags and reserved0 are reserved for future use; see the section  The fs_GlyphInputType record  for descriptions of the ReleaseSfntFrag, platformID, and styleFunc fields. Call the fs_OpenFonts routine. Each of the first three elements (elements 0, 1, and 2) of the memorySizes vector in the fs_GlyphInfoType record returns with a value that indicates an amount of memory in bytes. Allocate three blocks of memory with the sizes indicated by the first three elements of the memorySizes vector, and place pointers to these blocks in the first three elements of the memoryBases vector in the fs_GlyphInputType record.  Important:  Any block of memory that you allocate must start at a longword boundary; that is, the starting address of the block must be an even multiple of 4. Call the fs_Initialize routine. Locate the font description. You could read in the entire data structure, but typically you obtain the handle to an   resource. Initialize the following fields in the fs_GlyphInputType record: clientID, ReleaseSfntFrag, GetSfntFragmentPtr, and set SfntDirectory to NULL. Set the platformID field to the appropriate platform. See the following section for a description of these fields. Call the fs_NewSfnt routine to pass this information to the Font Scaler. Elements 3 and 4 of the memorySizes vector in the fs_GlyphInfoType record return with values that indicate an amount of memory in bytes. Allocate two blocks of memory with the sizes indicated by elements 3 and 4 of the memorySizes vector, and place pointers to these blocks in elements 3 and 4 of the memoryBases vector in the fs_GlyphInputType record.  Initialize the following fields in the fs_GlyphInputType record: xResolution, yResolution, pointsize, transformMatrix, pixelDiameter, and traceFunc. Set traceFunc to NULL if you do not want to activate the trace function.  Call the fs_NewTransformation routine to pass this information to the Font Scaler. Initialize the characterCode field in the fs_GlyphInputType record. Call the fs_NewGlyph routine. The Font Scaler uses the charToIndexMap table in the sfnt data structure to find the glyph index that corresponds to the character code you specified. Call the fs_ContourGridFit routine. The Font Scaler executes the instructions in the glyph description and returns the data that defines the outline for the glyph in the following fields of the fs_GlyphInfoType record: xPtr, yPtr, startPtr, endPtr, onCurve, and numberOfContours. Call the fs_FindBitMapSize routine. The Font Scaler places a value in elements 5 and 6 of the memorySizes vector in the fs_GlyphInfoType record. Allocate the amount of memory indicated by elements 5, 6 and 7 of the memorySizes vector, and place pointers to that memory in elements 5, 6 and 7 of the memoryBases vector in the fs_GlyphInputType record. This memory is used by the Font Scaler when it is creating a bitmap.  If there is insufficient memory available to process the entire bitmap, refer to the fs_FindBandingSize call notes. You then place a pointer to the amount of memory you have been able to allocate in memoryBases 5. It is important to understand that a memory request for memoryBase 5 is the only time you can partially fulfill a font scaler memory request. All other memory requests must be completely fulfilled. In short, if you are banding a glyph, you can provide a pointer to the amount of memory needed for the band (i.e. not all the memory requested by the scaler), but memoryBases 0, 1, 2, 3, 4, 6, and 7 must always point to enough memory to satisfy the scaler s requests. Initialize the bottomClip and topClip fields in the fs_GlyphInputType record. To process the entire glyph, set bottomClip equal to bitMapInfo.bounds.top and topClip equal to bitMapInfo.bounds.bottom. (Note that the bounding box returned by fs_FindBitMapSize is different than one might expect. The bounding box is upside down with respect to the glyph.) Call the fs_ContourScan routine. The Font Scaler converts the outline into a bitmap of the point size and resolution you specified in the fs_GlyphInputType record. The Font Scaler places a pointer to the bitmap and the dimensions of the bitmap in the bitMapInfo field of the fs_GlyphInfoType record. Each time you want to display a new character, you can change the characterCode field of the fs_GlyphInputType record and repeat steps 12 through 16. If you change the point size, transformation matrix, pixel diameter, or device resolution, you must return to step 10. If you change the font, you must return to step 6. If you have converted only a portion of the glyph into a bitmap, you can repeat step 16 with different values of bottomClip and topClip as many times as you like; be sure that you have allocated enough memory for the widest strip that you process. Call the fs_CloseFonts routine when you are finished using the Font Scaler, before your program quits.  You can use the fs_ContourNoGridFit routine instead of the fs_ContourGridFit routine to see what a glyph looks like when the instructions for that glyph are not executed. You can use the fs_GetAdvanceWidth routine instead of the fs_ContourGridFit or fs_ControurNoGridFit routines if you are only interested in character widths and do not want to calculate the outline of the character. The fs_SizeOfOutlines, fs_SaveOutlines, and fs_RestoreOutlines routines make it possible to implement a font cache. These routines are primarily for use by the Font Manager, not for other clients of the Font Scaler. The Font Manager can cache the outlines of several glyphs and then display them more quickly than would otherwise be possible, for example. These routines are used between steps 14 and 15. To use the font cache routines, include the following step between steps 14 and 15 in the preceding procedure: Call the fs_SizeofOutlines routine. The font scaler places a value in the outlineCacheSize field of the fs_GlyphInfoType record that indicates the amount of memory needed to cache the outline of the glyph. Allocate the amount of memory indicated by the outlineCacheSize field and place a pointer to the memory in the outlineCache field of the fs_GlyphInputType record. If you cache another character before you recover this one, you will have to repeat this process. Therefore, you should store the pointers to the cached glyphs in your program s own local memory. Call the fs_SaveOutlines routine. The Font Scaler stores the outline of the glyph in the memory pointed to by the outlineCache field. When you are ready to display the character, place the pointer to the memory cache for that character in the outlineCache field of the fs_GlyphInputType record and call the fs_RestoreOutlines routine. Then go on to step 15 as described earlier in this section. Font Scaler Data Structures The Font Scaler uses two data structures for exchanging information with your program: fs_GlyphInputType and fs_GlyphInfoType. These data structures are defined and described in this section. The Font Scaler also uses two data structures, referred to as the local graphics state and the global graphics state, that affect the way in which various instructions are interpreted. The Font Scaler passes a pointer to the local graphics state to your trace function, and the local graphics state includes a pointer to the global graphics state. The graphics state data structures are also described in this section. The fs_GlyphInputType record You place information needed by the Font Scaler in the fs_GlyphInputType record, which is defined as follows: /* banding type constants */ #define FS_BANDINGOLD       0 #define FS_BANDINGSMALL     1 #define FS_BANDINGFAST      2 #define FS_BANDINGFASTER    3 /* Dropout control values are now defined as bit masks to retain compatability */ /* with the old definition, and to allow for current and future expansion */ #define SK_STUBS          0x0001        /* leave stubs white */ #define SK_NODROPOUT      0x0002        /* disable all dropout control */ #define SK_SMART   0x0004  /* symmetrical dropout, closest pixel */ /* Values used to decode curves */ #define ONCURVE             0x01 typedef signed char int8; typedef unsigned char uint8; typedef short int16; typedef unsigned short uint16; typedef long int32; typedef unsigned long uint32; typedef long Fixed; #ifndef F26Dot6 #define F26Dot6 long #endif #ifndef boolean #define boolean int #endif /* QuickDraw Types */ #ifndef _MacTypes_ #ifndef __TYPES__     typedef struct Rect {         int16 top;         int16 left;         int16 bottom;         int16 right;     } Rect; #endif #endif typedef struct {     Fixed       transform[3][3]; } transMatrix; typedef struct {     Fixed       x, y; } vectorType; typedef void (*voidFunc) (); typedef void * voidPtr; typedef void (FS_CALLBACK_PROTO *ReleaseSFNTFunc) (voidPtr); typedef void * (FS_CALLBACK_PROTO *GetSFNTFunc) (int32, int32, int32); #endif  /* FSCDEFS_DEFINED */ /* QuickDraw Types */ #ifndef _Quickdraw_ #ifndef __QUICKDRAW__    typedef struct BitMap { char* baseAddr; int16 rowBytes; Rect bounds; } BitMap; #endif #endif #ifdef FSCFG_GRAY_SCALE #define MEMORYFRAGMENTS 9           /* extra memory base for overscaled bitmap */ #else #define MEMORYFRAGMENTS 8 #endif typedef struct { vectorType      advanceWidth, leftSideBearing; vectorType      leftSideBearingLine, devLeftSideBearingLine;/* along AW line */ vectorType      devAdvanceWidth, devLeftSideBearing; } metricsType; #define FS_MEMORY_SIZE  int32  * Output data structure to the Font Scaler. typedef struct { FS_MEMORY_SIZE  memorySizes[MEMORYFRAGMENTS]; uint16          glyphIndex; uint16          numberOfBytesTaken; /* from the character code */ metricsType     metricInfo; BitMap          bitMapInfo; /* Spline Data */ int32           outlineCacheSize; uint16          outlinesExist; uint16          numberOfContours; F26Dot6         *xPtr, *yPtr; int16           *startPtr; int16           *endPtr; uint8           *onCurve; /* End of spline data */ /* Only of interest to editors */ F26Dot6         *scaledCVT; #ifdef FSCFG_GRAY_SCALE /* gray scale outline magnification */ uint16          usOverScale; #endif } fs_GlyphInfoType;  * Input data structure to the Font Scaler.  * if styleFunc is set to non-zero it will be called just before the transformation  * will be applied, but after the grid-fitting with a pointer to fs_GlyphInfoType.  * so this is what styleFunc should be voidFunc StyleFunc (fs_GlyphInfoType *data);  * For normal operation set this function pointer to zero. #ifndef UNNAMED_UNION typedef struct { Fixed                   version; char*                   memoryBases[MEMORYFRAGMENTS]; int32                   *sfntDirectory; /* (sfnt_OffsetTable    *) always needs to be set, when we have the sfnt */ GetSFNTFunc             GetSfntFragmentPtr; /* (clientID, offset, length) */ ReleaseSFNTFunc         ReleaseSfntFrag; int32                   clientID; /* client private id/stamp (eg. handle for the sfnt) */ union { struct { uint16          platformID; uint16          specificID; } newsfnt; struct { Fixed           pointSize; int16           xResolution; int16           yResolution; Fixed           pixelDiameter;      /* compute engine char from this */ transMatrix*    transformMatrix; FntTraceFunc    traceFunc; } newtrans; struct { uint16          characterCode; uint16          glyphIndex; } newglyph; struct { void            (*styleFunc) (fs_GlyphInfoType*); FntTraceFunc    traceFunc; } gridfit; struct {                                    /* for fs_FindGraySize */ uint16          usOverScale;            /* outline magnification */ boolean         bMatchBBox;             /* force bounding box match */ } gray; int32*  outlineCache; struct {                                    /* for fs_FindBandingSize */ uint16          usBandType;             /* old, small or fast */ uint16          usBandWidth;            /* number of scanlines */ int32*          outlineCache;           /* cacheing works with banding */ } band; struct { int16           bottomClip; int16           topClip; int32*          outlineCache; } scan; } param; } fs_GlyphInputType; #else typedef struct { Fixed                   version; char*                   memoryBases[MEMORYFRAGMENTS]; int32                   *sfntDirectory; /* (sfnt_OffsetTable    *) always needs to be set, when we have the sfnt */ GetSFNTFunc             GetSfntFragmentPtr; /* (clientID, offset, length) */ ReleaseSFNTFunc         ReleaseSfntFrag; int32                   clientID; /* client private id/stamp (eg. handle for the sfnt) */ union { struct { uint16          platformID; uint16          specificID; struct { Fixed           pointSize; int16           xResolution; int16           yResolution; Fixed           pixelDiameter;      /* compute engine char from this */ transMatrix*    transformMatrix; FntTraceFunc    tracePreProgramFunc; struct { uint16          characterCode; uint16          glyphIndex; struct { void            (*styleFunc) (fs_GlyphInfoType*); FntTraceFunc    traceGridFitFunc; struct {                                    /* for fs_FindGraySize */ uint16          usOverScale;            /* outline magnification */ boolean         bMatchBBox;             /* force bounding box match */ int32*              outlineCache1; struct {                                    /* for fs_FindBandingSize */ uint16          usBandType;             /* old, small or fast */ uint16          usBandWidth;            /* number of scanlines */ int32*          outlineCache3;          /* cacheing works with banding */ struct { int16           bottomClip; int16           topClip; int32*          outlineCache2; } fs_GlyphInputType; #endif      /* unnamed union */ The fields in the fs_GlyphInputType record have the following significance: version Set to 1 for now. If there should be future versions of the Input record we can use this field to distinguish the different versions. *memoryBases A vector of pointers to blocks of memory. When the Font Scaler needs memory, it puts the sizes of the blocks of memory it needs into the vector memorySizes in the fs_GlyphInfoType record. You must allocate the requested memory and pass pointers to the memory blocks back to the Font Scaler through the *memoryBases field before calling the next client interface routine. The pointer to a block of memory must be in the element of the memoryBases vector that corresponds to the element of the memorySizes vector that contained the memory request.  *sfntDirectory This field is no longer used by the rasterizer and should be set to NULL.  GetSfntFragmentPtr A pointer to a function that the Font Scaler calls when it needs to extract data from the sfnt data structure. You must define this function in your program. The Font Scaler passes three long-word parameters to this function:  the client ID, the offset into the sfnt data structure, and the length of the data wanted. The function returns a pointer to the starting position in memory of the requested data. You must initialize this field before calling the fs_NewSfnt routine, and it must remain valid for all later calls to the Font Scaler. Important:  Your function must not move any memory blocks that you have allocated for the Font Scaler. Similarly, it must not move any data within those memory blocks. If you change the location in memory of any data needed by the Font Scaler while a Font Scaler routine is executing, the Font Scaler will crash. ReleaseSfntFrag A pointer to a function that the Font Scalar calls when memory for the sfnt data structure is no longer needed. The Font Scalar passes one longword parameter to this function: a pointer to the piece of the sfnt that was previously allocated with GetSfntFragmentPtr. This allows clients who only load in parts of the sfnt to reclaim that memory when the engine is through with it. clientID Any longword you want to use as an identifier. The Font Scaler passes the clientID field as a parameter to your GetSfntFragment function; the Font Scaler does not use this field for any purpose of its own. You might want to place the handle to the   resource in this field so that this handle is available to your GetSfntFragment function each time it is called by the Font Scaler. You must initialize this field before calling the fs_NewSfnt routine. platformID The subtable of the charToIndexMap table that you want the Font Converter to use. Set the platformID field to the Script code that describes the writing sytem the font was defined for (see description under Naming Table, pages 243-248 of TrueType specifications). You must initialize this field before calling the fs_NewSfnt routine. specific ID Platform specific ID (see platformID for more information). pointSize The point size, at 72 points per inch, at which you want to display the glyph. You must initialize this field before calling the fs_NewTransformation routine. xResolution The horizontal resolution in dots per inch of the display device. You must initialize this field before calling the fs_NewTransformation routine. yResolution The vertical resolution in dots per inch of the display device. You must initialize this field before calling the fs_NewTransformation routine. pixelDiameter The pixel size of the display device. The pixel size is defined as D * R, where D is the average pixel diameter and R is the resolution of the display device. An ideal pixel is defined as a circle that will just touch the diagonally adjacent pixels (see the figure). An ideal pixel has a diameter of (2, because (2 is the diagonal of a unit square (a square with sides equal to 1).  Ideal pixels The Font Scaler uses the pixel diameter to determine how much overlap or how wide a gap to expect between pixels, so that it can compensate for these defects when generating the outline of the glyph. In most cases, you can assume that a display screen has ideal pixels, so that the pixel diameter of a display screen is (2. This value is expressed in 16.16 fixed point, so the value for (2 is 0x00016A0A. You must initialize this field before calling the fs_NewTransformation routine. transformMatrix A 3x3 matrix that specifies any transformation of the glyph that you want the Font Scaler to perform. For example, you can stretch the glyph or rotate it.  The following transformation matrix stretches a glyph in the Y direction so that it is twice as tall as normal: The following transformation matrix skews a glyph to make an oblique character; a vertical line on the glyph is rotated by a degrees while the height of each point on the glyph remains constant: tan a The following transformation matrix rotates a glyph by a degrees: cos a sin a sin a cos a The transformation matrix is described by the struct transMatrix. The definition of a transMatrix struct is: typedef struct { Fixed      transform[HEIGHT][WIDTH] Please note that although the third column of the matrix is defined as Fixed numbers you will actually need to use  Fract numbers in that column. The higher resolution provided by Fracts is required to change the perspective of a glyph. Fracts are 2.30 fixed point numbers. Transformations are discussed in the following books: Principles of Interactive Computer Graphics, by Newman & Sproull, McGraw Hill, 2nd ed., 1979;  Fundamentals of Interactive Computer Graphics, by Foley & Van Dam, Addison Wesley, 1984. traceFunc A pointer to a routine (called the trace function) that the Font Scaler calls before it executes each instruction. You must define the trace function yourself. The Font Scaler passes one parameter to the trace function: a pointer to the Font Scaler s local graphics state. You must initialize this field before calling the fs_NewTransformation routine. The purpose of this function is to allow you to trace through the instructions for a glyph one at a time, examing the graphics state before each instruction is executed, as an aid to debugging the instructions for the glyph. If you do not want to define a trace function, set the traceFunc pointer to NULL. The Font Scaler runs much faster when no trace function is defined. characterCode The character code for the glyph used in the charToIndexMap table in the sfnt data structure. The character codes for the Apple standard character set are shown in Figure 1 of the preliminary developer note titled  Macintosh System Software Release 7.0 Outline Fonts.   You must initialize this field before calling the fs_NewGlyph routine. If you set the characterCode field to 0xFFFF, then the Font Scaler ignores the character code and uses the glyph index value that you specify in the glyphIndex field instead. glyphIndex The index value for the glyph as specified in the charToIndexMap table in the sfnt data structure.  If you specify 0xFFFF for the characterCode field and place a value in the glyphIndex field before you call the fs_NewGlyph routine, then the Font Scaler uses the glyph index value instead of the character code to find the glyph in the sfnt data structure. If you specify any other value for the characterCode field, then the glyphIndex field is ignored.  See also the description of the glyphIndex field in the fs_GlyphInfoType record. styleFunc Not supported in this version of the Font Scalar. Should be set to NULL. traceFunc Pointer to a routine called the trace function that the Font Scaler calls before it executes each instruction. You must define the trace function yourself. The Font Scaler passes one parameter to the trace function: a pointer to the FontScaler s local graphics state. You must initialize this field before calling the fs_NewTransformation routine. The purpose of this function is to allow you to trace through the instructions for a glyph one at a time, examining the graphics state before each instruction is executed, as an aid to debugging the instructions for the glyph. If you do not want to define a trace function, set the traceFunc pointer to 0. The Font Scaler runs much faster when no trace function is defined. *outlineCache A pointer to a block of memory that you have allocated for an outline cache. When you execute the fs_SizeOfOutlines routine, the Font Scaler places the amount of memory it needs in the outlineCacheSize field of the fs_GlyphInfoType record. You must allocate the memory and place a pointer to it in the *outlineCache field before you call the fs_SaveOutlines routine. bottomClip The bottom of the band to be processed, where the baseline of the bitmap is 0, the bottom of the next row of pixels is 1, and so forth. The purpose of the bottomClip and topClip fields is to allow you to specify a horizontal strip of the glyph to be converted to a bitmap in the case that you cannot allocate sufficient memory to process the entire glyph. For example, to process the strip that includes the 9th through 16th pixels from the basline of the bitmap, set bottomClip to 8 and topClip to 16. (Note that the baseline of the bitmap is not necessarily the bottom of the character; a character with a descender, for example, has pixels below the baseline.) You must initialize this field before calling the fs_ContourScan routine.  See also the discussion of steps 15 and 16 in the section  Using the Font Scaler Client Interface,  earlier in this document.  topClip The top of the band to be processed, where the top of the first row of pixels above the baseline is 1, the top of the second row is 2, and so forth. See the description of the bottomClip field for more information. *outlineCache A pointer to a block of memory that you have allocated for an outline cache. When you execute the fs_SizeOfOutlines routine, the Font Scaler places the amount of memory it needs in the outlineCacheSize field of the fs_GlyphInfoType record. You must allocate the memory and place a pointer to it in the *outlineCache field before you call the fs_SaveOutlines routine. The fs_GlyphInfoType record The Font Scaler places information in the fs_GlyphInfoType record, which is defined as follows: typedef struct { Fixed x, y; } vectorType; typedef struct { vectorType advanceWidth, leftSideBearing; vectorType devAdvanceWidth, devLeftSideBearing; /* experimental, do not use */ vectorType reserved3, reserved4; } metricsType;  * Output data structure to the Font Scaler. #define int16 short #define uint16 unsigned short #define int32 int #define uint32 unsigned long #define F26Dot6 long typedef uint8 *charPtr; typedef long (*longFunc) (); typedef int8 (*CharFunc) (); typedef charPtr (*CharPtrFunc) (); typedef void (*voidFunc) ();   typedef struct { int16 int16 left; int16 bottom; int16 right; } Rect; typedef struct { baseAddr; int16 rowBytes; bounds; } BitMap ; typedef struct { int32 memorySizes[MEMORYFRAGMENTS]; uint16 glyphIndex; uint16 numberOfBytesTaken; /* from the character code */ metricsType metricInfo; BitMap bitMapInfo; /* Spline Data */ int32 outlineCacheSize; uint16 outlinesExist; uint16 numberOfContours; F26Dot6 *xPtr, *yPtr; int16 *startPtr; int16 *endPtr; uint8 *onCurve; /* End of spline data */ /* Only of interest to editors */ F26Dot6 *scaledCVT; #ifdef FSCFG_GRAY_SCALE      uint16 usOverScale; #endif } fs_GlyphInfoType; The fields in the fs_GlyphInfoType record have the following significance: memorySizes A vector listing the sizes of blocks of memory needed by the Font Scaler. When the Font Scaler needs memory, it puts the sizes of the blocks of memory it needs into the vector memorySizes in the fs_GlyphInfoType record. You must allocate the requested memory and pass pointers to the memory blocks back to the Font Scaler through the *memoryBases field before calling the next client interface routine. The pointer to a block of memory must be in the element of the memoryBases vector that corresponds to the element of the memorySizes vector that contained the memory request. The Font Scaler uses the memorySizes field to request memory. It uses elements 0, 1, and 2 of this vector after you execute the fs_OpenFonts routine, elements 3 and 4 after you execute the fs_NewSfnt routine, and elements 5, 6 and 7 after you execute the fs_FindBitMapSize routine. glyphIndex The index value for the glyph returned by the fs_NewGlyph routine. If you specify 0xFFFF for the characterCode field in the fs_GlyphInfoType record and specify a value for the glyphIndex field in the fs_GlyphInfoType record, then that glyph index value is also returned in this field.  numberOfBytesTaken The number of bytes read by the Font Scaler for the character code. For certain character encoding schemes, the Font Scaler reads only 1 byte for some characters and reads 2 bytes for others. You can tell from this field how many bytes were taken by the Font Scaler. If only 1 byte was taken, you have to resend the second byte for the next character. If the character code was invalid, this field is set to 0. This field is returned by the fs_NewGlyph routine. metricInfo The first two elements of this structure contain the advance width and left side bearing. The advance width is returned by the fs_GetAdvanceWidth routine. Both the advance width and left side bearing are returned by the fs_ContourGridFit and fs_ContourNoGridFit routines. The other elements of this structure are reserved. Note that both the advance width and left side bearing have x and y components. The advance width vector goes from the current character s pen position to the next character s pen position. The left side bearing goes from the current character s pen position to the upper-left corner of the bitmap, no matter what transformation you are using.  bitMapInfo The bitmap returned by the fs_ContourScan routine. The bitmap structure consists of a pointer to the base address of the bitmap, a short integer that specifies the number of bytes of data per row of the bitmap, and four short integers that specify the corners of the bitmap in the following order: top, left, bottom, right. outlineCacheSize The amount of memory the Font Scaler needs for an outline cache. When you execute the fs_SizeOfOutlines routine, the Font Scaler places the amount of memory it needs in the outlineCacheSize field. You must allocate the memory and place a pointer to it in the *outlineCache field of the fs_GlyphInputType record before you call the fs_SaveOutlines routine. outlinesExists A Boolean value that indicates whether outlines exist for this glyph. If True (nonzero), outlines exist. If False (0), outlines do not exist. An example of a glyph for which no outlines exist is the space character. This field is returned by the fs_ContourGridFit and fs_ContourNoGridFit routines. numberOfContours The total number of contours that make up the outline of the glyph. This number is returned by the fs_ContourGridFit and fs_ContourNoGridFit routines. *xPtr A pointer to an array of fixed numbers that are in 26.6 format (that is, the first 26 bits represent the value before the decimal, and the last 6 bits represent the value after the decimal). These numbers are the x-coordinate values of the glyph s outline as returned by the fs_ContourGridFit and fs_ContourNoGridFit routines. *yPtr A pointer to an array of fixed numbers that are in 26.6 format. These numbers are the y-coordinate values of the glyph s outline as returned by the fs_ContourGridFit and fs_ContourNoGridFit routines. *startPtr A pointer to an array of short integers (16 bits) that identify the points that start the contours that make up the glyph outline. This data is returned by the fs_ContourGridFit and fs_ContourNoGridFit routines. *endPtr A pointer to an array of short integers (16 bits) that identify the points that end the contours that make up the glyph outline. This data is returned by the fs_ContourGridFit and fs_ContourNoGridFit routines. *onCurve A pointer to an array of unsigned characters (8 bits). The least significant bit of each character serves as a Boolean value. There are as many elements in this array as there are in the xPtr or yPtr arrays. If the least significant bit in a one-byte element in this array is 1, then the point specified by the corresponding elements in the xPtr and yPtr arrays lies on the curve. If a least significant bit is 0, then the corresponding point does not lie on the curve. The other bits in each byte are reserved. The *onCurve data is returned by the fs_ContourGridFit and fs_ContourNoGridFit routines. *scaledCVT A pointer to an array of fixed numbers that are in 26.6 format. The Font Scaler scales the values in the controlValue table in the sfnt data structure to the point size that you specify and returns the values in the scaledCVT array when you specify a trace function and execute the fs_NewTransformation routine.  If you have not specified a trace function (that is, if the traceFunc field in the fs_GlyphInputType record is 0), then the Font Scaler fs_NewTransformation routine does not fill in the scaledCVT array. The Graphics State The Font Scaler uses the local graphics state and the global graphics state to determine how to interpret certain instructions. The values of the variables defined in the local graphics state are valid only for the character with which they are associated; the variables defined in the global graphics state are valid for all characters in a font. The Font Scaler initializes the values in the local graphics state when it executes the fs_ContourGridFit routine. If you have specified a nonzero pointer to a trace function, the Font Scaler initializes the values in the global graphics state when it executes the fs_NewTransformation routine. If you have disabled the trace function, the Font Scaler initializes these values the first time it executes the fs_ContourGridFit routine after executing the fs_NewTransformation routine. The fnt_LocalGraphicStateType Data Structure The local graphics state is contained in the fnt_LocalGraphicStateType data strucure, which is defined as follows: typedef struct fnt_LocalGraphicStateType { fnt_ElementType *CE0, *CE1, *CE2;   /* The character element pointers */ VECTOR proj;                        /* Projection Vector */ VECTOR free;                        /* Freedom Vector */ VECTOR oldProj;                     /* Old Projection Vector */ F26Dot6 *stackPointer; uint8 *insPtr;                      /* Pointer to the instruction we are about to execute */ fnt_ElementType *elements; fnt_GlobalGraphicStateType *globalGS; FntTraceFunc TraceFunc; int32 Pt0, Pt1, Pt2;           /* The internal reference points */ int16 roundToGrid; int32 loop;                         /* The loop variable */ uint8 opCode;                       /* The instruction we are executing */ uint8 padByte; int16 padWord; /* Above is exported to client in FontScaler.h */ VECTORTYPE pfProj; /* = pvx * fvx + pvy * fvy */ FntMoveFunc MovePoint; FntProject Project; FntProject OldProject; InterpreterFunc Interpreter; #ifdef FSCFG_REENTRANT F26Dot6 (*GetCVTEntry) (struct fnt_LocalGraphicStateType*,int32); F26Dot6 (*GetSingleWidth) (struct fnt_LocalGraphicStateType*); #else  F26Dot6 (*GetCVTEntry) (int32 n); F26Dot6 (*GetSingleWidth) (void); #endif  FntMoveFunc ChangeCvt; Fixed       cvtDiagonalStretch; int16       MIRPCode;               /* for fast or slow MIRP's */ ErrorCode   ercReturn;              /* NO_ERR unless illegal instruction */ uint8       *pbyEndInst;            /* one past last instruction */ } fnt_LocalGraphicStateType; The fields in the fnt_LocalGraphicStateType data strucure have the following significance: *CE0, *CE1, *CE2 Pointers to character elements. There are two character elements, defined by the fnt_ElementType data structure shown at the beginning of this section. The fields in this data structure are described in the following section  The fnt_ElementType Data Structure.   The first character element (character element 0) contains points that are not included in the glyph definition, but that can be used by certain instructions for reference or for temporary storage. The second character element (character element 1) contains the points in the glyph definition. Each of the character element pointers (*CE0, *CE1, and *CE2) can point to either of the two character elements. Use the SCE0, SCE1, SCE2, and SCES instructions to set the character element pointers. Every instruction that acts on points uses one or more of the character element pointers to determine whether the points are in character element 0 or character element 1. The x and y components of a unit vector that points in the direction of the projection vector. The value used by the interpreter for the distance between two points is actually the projection of that distance along the projection vector. For example, if the projection vector is parallel to the x axis and a point is moved a distance of 1 pixel in a direction 60_ to the x axis, the distance along the projection vector is 0.5 pixel. Use the SVTCA, SPVTCA, SPVTL, and WPV instructions to set the projection vector. The x and y components of a unit vector that points in the direction of the freedom vector. Points are moved only in the direction of the freedom vector. Use the SVTCA, SFVTCA, SFVTL, SFVTPV, and WFV instructions to set the freedom vector. oldProj The x and y components of a unit vector that points in the direction of the old projection vector. *stackPointer The pointer to the next available location on the interpreter s private stack. For example, if the last byte pushed on the stack is at location stackBase + 3, then the value of *stackPointer is stackBase + 4. Each element on the stack is a long word (32 bits). *insPtr Pointer to the next instruction to be executed. *elements Pointer to character element 0. You can use this field to determine to which character element *CE0, *CE1, or *CE2 is pointing. For example, if *CE1 is equal to *elements, then *CE1 is pointing to character element 0; if they are not equal, then *CE1 is pointing to character element 1. *globalGS Pointer to the global graphics state. The global graphics state is described in the section  The fnt_GlobalGraphicStateType Data Structure,  later in this document. Pointer to a fnt_ParmeterBlock. pfProj Result of pvx*fvx+pvy*fvy. MovePoint Function that moves a point. *Project Function that returns F26Dot6 projection vector value. *OldProject Function that returns F26Dot6 projection vector value. Related to the old projection vector. Interpreter Interpreter function. TraceFunc TraceFunc. *GetCVTEntry Function that returns F26Dot6 CVTEntry value. *GetSingleWidth Function that returns F26Dot6 SingleWidth value. Array of 12 int pointers. Indicates which of the available rounding rules is to be used by the interpreter. Use the RTG, RDTG, RUTG, RTHG, RTDG, and ROFF instructions to set the rounding rule, as follows: The loop variable. Certain instructions automatically repeat the number of times specified by the loop variable. (If the loop variable is set to either 0 or 1, the instruction executes one time.)  Use the LLOOP instruction to set the loop variable. Pt0, Pt1, Pt2 Reference points used by certain instructions. The points referred to here are the sequence numbers of the points used in the sfnt data structure to define the glyph. The Pt0, Pt1, and Pt2 fields are used by some instructions to help determine the effect of the instruction. For example, the SHP instruction shifts a point by the same amount that one of the reference points has been shifted. Use the SRP0, SRP1, and SRP2 instructions to set reference points. Several other instructions change the values of the reference points.  opCode The instruction we are executing. padByte *changeCVT A function to change the contents of a CVT. cvtDiagonalStretch Used for non-square aspect ratio handling of CVTs. MIRPCode Indicator for type of MIRP code to use. ercReturn Set to NO_ERR unless there has been an illegal instruction. pbyEndInst Used for error handling. The fnt_ElementType Data Structure The fnt_LocalGraphicStateType data structure contains pointers *CE0, *CE1, *CE2, and *elements, each of which points to one or another of two data structures known as character elements. A character element is of type fnt_ElementType, defined as follows: typedef struct { F26Dot6 *x; /* The Points the Interpreter modifies */ F26Dot6 *y; /* The Points the Interpreter modifies */ F26Dot6 *ox; /* Old Points */ F26Dot6 *oy; /* Old Points */ F26Dot6 *oox; /* Old Unscaled Points, really ints */ F26Dot6 *ooy; /* Old Unscaled Points, really ints */ uint8   *onCurve; /* indicates if a point is on or off the curve */ int16   *sp; /* Start points */ int16   *ep; /* End points */ uint8   *f; /* Internal flags, one byte for every point */ int16   nc; /* Number of contours */ } fnt_ElementType; The fields in the fnt_ElementType data structure have the following significance: *x, *y Pointers to arrays that contain the current x and y coordinates for the points that define the outline. These coordinates include scaling and the effects of all the instructions the interpreter has executed so far.  *ox, *oy Pointers to arrays that contain old x and y coordinates for the points that define the outline. These coordinates include scaling but do not include the effects of any instructions.  *oox, *ooy Pointers to arrays that contain the original x and y coordinates for the points that define the outline. These coordinates do not include scaling or the effects of any instructions.  *onCurve A pointer to an array of unsigned characters (that is, bytes). The least significant bit of each byte serves as a Boolean value. There are as many elements in this array as there are in the x or y arrays. If the least significant bit in a one-byte element in this array is 1, then the point specified by the corresponding elements in the x and y arrays lies on the curve. If a least significant bit is 0, then the corresponding point does not lie on the curve. The other bits in each byte are reserved.  The total number of contours that make up the outline of the glyph.  A pointer to an array of short integers (16 bits) that identify the points that start the contours that make up the glyph outline. A pointer to an array of short integers (16 bits) that identify the points that end the contours that make up the glyph outline.  A pointer to an array of unsigned characters (that is, bytes). The least significant bit of each byte (bit 0) is a flag that indicates whether a point has been touched in the x direction; the next-least significant bit (bit 1) indicates whether a point has been touched in the y direction. If the bit is 1, then the point with the corresponding position in the x and y arrays has been touched. (A point is said to have been touched if an instruction acted on that point, whether or not the point was actually moved by the instruction.)  The other bits in each byte are reserved.  The IUP instruction acts only on untouched points, and only in the direction (x or y) specified by a Boolean parameter that you pass to the IUP instruction. The fnt_GlobalGraphicStateType Data Structure The global graphics state is contained in the fnt_GlobalGraphicStateType data structure, which is defined as follows: typedef struct fnt_GlobalGraphicStateType { F26Dot6* stackBase; /* the stack area */ F26Dot6* store; /* the storage area */ F26Dot6* controlValueTable; /* the control value table */ uint16  pixelsPerEm; /* number of pixels per em as an integer */ uint16  pointSize; /* the requested point size as an integer */ Fixed   fpem; /* fractional pixels per em    <3> */ F26Dot6 engine[4]; /* Engine Characteristics */ fnt_ParameterBlock defaultParBlock; /* variables settable by TT instructions */ fnt_ParameterBlock localParBlock; /* Only the above is exported to Client through FontScaler.h */ /* VARIABLES NOT DIRECTLY MANIPULABLE BY TT INSTRUCTIONS  */ fnt_funcDef*    funcDef; /* function Definitions identifiers */ fnt_instrDef*   instrDef; /* instruction Definitions identifiers */ GlobalGSScaleFunc ScaleFuncXBase; GlobalGSScaleFunc ScaleFuncYBase; GlobalGSScaleFunc ScaleFuncX; GlobalGSScaleFunc ScaleFuncY; GlobalGSScaleFunc ScaleFuncCVT; fnt_pgmList     pgmList[MAXPREPROGRAMS]; /* each program ptr is in here */ /* These are parameters used by the call back function */ fnt_ScaleRecord   scaleXBase; fnt_ScaleRecord   scaleYBase; fnt_ScaleRecord   scaleX; fnt_ScaleRecord   scaleY; fnt_ScaleRecord   scaleCVT; Fixed           cvtStretchX; Fixed           cvtStretchY; int8            identityTransformation;  /* true/false  (does not mean identity from a global sense) */ int8            non90DegreeTransformation; /* bit 0 is 1 if non-90 degree, bit 1 is 1 if x scale doesn't equal y scale */ Fixed           xStretch; /* Tweaking for glyphs under transformational stress <4> */ Fixed           yStretch; /* Tweaking for glyphs under transformational stress <4> */ int8            init; /* executing preprogram ?? */ /* !!! Should not be uint8, instead fnt_ProgramIndex */ uint8           pgmIndex; /* which preprogram is current */ int32           instrDefCount; /* number of currently defined IDefs */ uint8 bSameStretch; uint8 bCompositeGlyph; /* Flag that indicates composite glyph */ LocalMaxProfile *  maxp; uint16          cvtCount; Fixed           interpScalarX; /* scalar for instructable things */ Fixed           interpScalarY; /* scalar for instructable things */ Fixed           fxMetricScalarX; /* scalar for metric things */ Fixed           fxMetricScalarY; /* scalar for metric things */ /* int16  pad2; */ } fnt_GlobalGraphicStateType; The fields in the fnt_GlobalGraphicStateType data structure have the following significance: *function Pointer to the instruction definition area *stackBase Pointer to the stack area *store Pointer to a storage area that you can use for any purpose you like. You set the number of storage locations with the maxStorage field of the maxProfile table. Use the WS instruction to set the value of a storage location and the RS instruction to read a value. *funcDef A ptr to an array of fnt_FuncDef structs. Function definitions identifiers. *instrDef A ptr to an array of fnt_instrDef. Instruction definitions identifiers. *controlValueTable Pointer to the control value table. When you execute the fs_NewTransformation routine, the interpreter scales the values in the control value table to the point size that you specify. Use the WCVT and WCVTFOD instructions to set values in the control value table, and the RCVT instruction to read values in the control value table. *pgmList[ ] Array of program pointers. *ScaleFunc The callback function to do scaling. defaultParBlock fnt_ParameterBlock. Variables settable by TT instructions. localParBlock fnt_ParameterBlock. pixelsPerEm The resolution in pixels per em currently being used by the Font Scaler when scaling a glyph. pointSize The point size you specified, rounded to the closest integer. The pointSize field is used by the MPS instruction. ppemDot6 Fractional pixels per em. pointSizeDot6 Fractional user point size. engine[4] An array used by the Font Scaler to represent the pixel diameter for internal purposes. fixedScale Fixed scaling factor. nScale Numerator required to scale points to the correct size. dScale Denominator required to scale points to the correct size. shift log2 of dScale. identityTransformation Transform is identity true/false (does not mean identity from a global sense). non90DegreeTransformation Rotation component of transform is 0, 90, 180, or 270. xStretch Tweaking for glyphs under transformational stress. yStretch Tweaking for glyphs under transformational stress. *anglePoint Pointer to an fnt_FractPoint. Part of fnt_AngleInfo. *angleDistance Pointer to an int16. The other part of fnt_AngleInfo. Indicates whether the preprogram is being executed. This field is set to True (nonzero) while the preprogram is executing. pgmIndex Indicates which preprogram is currently executing. Currently, there are two possible preprograms: the Font program, which is executed only once, when the font is first used, and the Control Value Program which is executed whenever the font, point size or transformation matrix change. instrDefCount Count of IDEFs defined for this font. An IDEF is an instruction redefinition usually defined in the font program table. *maxp Pointer to MaxProfile data for font. cvtCount Number of CVT entries. bSameStretch Same stretch factor in x and y directions. bCompositeGlyph Flag that indicates this is a composite glyph. interpScalarX Scalar for instructable things in x. interpScalarY Scalar for instructable things in y. fxMetricScalarX Scalar for metric things in x. fxMetricScalarY Scalar for metric things in Y. Font Scaler Routines This section describes the routines that make up the client interface to the Font Scaler. For information about how to call these routines and the sequence in which you should call them, see the section  Using the Font Scaler Client Interface,  earlier in this document. The fields in the fs_GlyphInputType and fs_GlyphInfoType records are described in the section  Font Scaler Data Structures,  earlier in this document. The Font Scaler does not allocate the memory it needs to execute these routines. When the Font Scaler needs memory, it specifies the amount of memory, in bytes, in one or more elements of the memorySizes vector in the fs_GlyphInfoType record. You must allocate the memory and place pointers to the memory in the corresponding elements of the memoryBases vector in the fs_GlyphInputType record. Except for the OpenFonts and CloseFonts routines, no Font Scaler routine allocates memory, deallocates memory, or moves objects in memory. If you move any of the blocks of memory that you have allocated, be sure to update the pointers in the memoryBases vector before your next call to the Font Scaler. Every Font Scaler routine returns an error code as the function result. You must check the error after every call to the Font Scaler, and respond appropriately if the error is nonzero. The error codes are described in the section  Font Scaler Errors,  later in this document. fs_OpenFonts Description Opens the Font Scaler. Fields of the fs_GlyphInputType record to initialize before routine None necessary. Fields of the fs_GlyphInfoType record returned by routine memorySizes. The elements memorySizes[0..2] indicate the amount of memory needed. When to call Before any other Font Scaler routine. This routine does not ever have to be called again, unless the fs_CloseFonts routine is executed by your program. fs_Initialize Description Initializes the Font Scaler. Fields of the fs_GlyphInputType record to initialize before routine The memoryBases[0..2] fields must contain pointers to the memory blocks that were requested by the Font Scaler. The sizes of these memory blocks were specified by the memorySizes[0..2] fields of the fs_GlyphInfoType record after the fs_OpenFonts routine. Fields of the fs_GlyphInfoType record returned by routine None applicable. When to call After the fs_OpenFonts routine and before any other Font Scaler routine. This routine does not ever have to be called again, unless the fs_CloseFonts routine is executed by your program. fs_NewSfnt Description Indicates that there is a new sfnt data structure, and provides a pointer to the function that the Font Scaler uses to read data from the sfnt data structure. Specifies the amount of memory needed by the Font Scaler. Fields of the fs_GlyphInputType record to initialize before routine memoryBases, sfntDiriectory, GetSfntFunc, ReleaseSfntFrag, ClientID, platformID, specificID.  Fields of the fs_GlyphInfoType record returned by routine memorySizes.  The elements memorySizes[3] and memorySizes[4] indicate the amount of memory needed. When to call After the fs_Initialize routine and before the fs_NewTransformation routine. You must execute this routine each time you change to a different sfnt data structure or change the contents of the maxProfile table in the sfnt data structure.  fs_NewTransformation Description Informs the Font Scaler about the point size and device resolution; provides a pointer to your trace function (if any). See the description of the traceFunc field in the section  Font Scaler Data Structures  for information about the trace function. Fields of the fs_GlyphInputType record to initialize before routine xResolution, yResolution, pointsize, pixelDiameter, transformMatrix, and traceFunc. Set the traceFunc field to 0 if you do not want to activate the trace function.  Fields of the fs_GlyphInfoType record returned by routine scaledCVT. If you set the traceFunc field to a nonzero value, then the scaledCVT field contains the values from the controlValue table of the sfnt data structure scaled to the point size you specified. When to call After the fs_NewSfnt routine and before the fs_NewGlyph routine. You must execute this routine each time you change the point size, the resolution of the display device, the pixel diameter, or the transformation matrix. fs_NewGlyph Description Computes the glyph index value from the character code.  Fields of the fs_GlyphInputType record to initialize before routine characterCode. If you specify 0xFFFF for the character code, you must also initialize the glyphIndex field. In this case, the Font Scaler uses the glyph index value you specify rather than the character code. Fields of the fs_GlyphInfoType record returned by routine glyphIndex, numberOfBytesTaken When to call After the fs_NewTransformation routine and before the fs_GetAdvanceWidth, fs_ContourGridFit, or fs_ContourNoGridFit routines. You must call this routine each time you want to display a new glyph, or each time you change a glyph description in the sfnt data structure and want to recalculate the outline.  fs_GetAdvanceWidth Description Causes the Font Scaler to extract advance width from the sfnt data structure. Fields of the fs_GlyphInputType record to initialize before routine None. Fields of the fs_GlyphInfoType record returned by routine metricInfo. The first element of the metricInfo field contains the advance width. When to call Instead of the fs_ContourGridFit routine or the fs_ContourNoGridFit routine when you only want to know the width of the glyph and do not want to display it. (Note that widths returned by fs_GetAdvanceWidth do not take into account any hints that may change the advance width. fs_ContourGridFit should be called for that case.) fs_GetScaledAdvanceWidths Description Returns the hinted advance widths for the range of glyphs specified. The routine takes advantage of the hdmx and LTSH tables if they are present in the font file. Prototype FS_PUBLIC FS_ENTRY FS_ENTRY_PROTO fs_GetScaledAdvanceWidths (     fs_GlyphInputType * inputPtr,     uint16              usFirstGlyph,     uint16              usLastGlyph,     int16 *             psGlyphWidths); Fields of the fs_GlyphInputType record to initialize before routine MemoryBases[0]. Input Parameters inputPtr   Pointer to the Glyph Input Type used by other client interface calls; usFirstGlyph   Glyph index of the first glyph to return the hinted advance width; usLastGlyph   Glyph index of the last glyph to return the hinted advance width; pfxGlyphWidths   Pointer to the table to contain first glyph through last glyph advance widths. Returned Values pfxGlyphWidths   This array contains the fixed point representation of the hinted widths. Note that each glyph contains both an x and y position. When to call Anytime after the fs_NewTransformation routine. Notes This routine is different from other client interface routines, and should be considered more of a helper routine than a client interface call. The memory for the pfxGlyphWidths array must be allocated by the client. The glyph range is inclusive, returning both usFirstGlyph and usLastGlyph widths. usLastGlyph must not be less than usFirstGlyph. The possible errors returned by this routine would be consistent with the fs_ContourGridFit routine. fs_ContourGridFit Description Causes the Font Scaler to execute the instructions for the glyph and convert the glyph data into an outline. Compare this routine with the fs_ContourNoGridFit routine. Fields of the fs_GlyphInputType record to initialize before routine Fields of the fs_GlyphInfoType record returned by routine xPtr, yPtr, startPtr, endPtr, onCurve, numberOfContours, scaledCVT, outlinesExist. The fields xPtr, yPtr, startPtr, endPtr, onCurve, and numberOfContours contain the outline data. When to call After the fs_NewGlyph routine and before the fs_FindBitMapSize routine (if you want to prepare a bitmap). fs_ContourNoGridFit Description Causes the Font Scaler to convert the glyph description into an outline without executing the instructions. Compare this routine with the fs_ContourGridFit routine. Fields of the fs_GlyphInputType record to initialize before routine Fields of the fs_GlyphInfoType record returned by routine xPtr, yPtr, startPtr, endPtr, onCurve, numberOfContours scaledCVT, outlinesExist. The fields xPtr, yPtr, startPtr, endPtr, onCurve, and numberOfContours contain the outline data. When to call When you want to see what a glyph looks like when the instructions are not executed; after the fs_NewGlyph routine and before the fs_FindBitMapSize routine (if you want to prepare a bitmap). fs_ContourGrayScan Description Converts an outline into a gray scale bitmap. Fields of the fs_GlyphInputType record to initialize before routine The fields memoryBases[5], memoryBases[6], memoryBases[7], and memoryBases[8] must contain pointers to the memory blocks whose size is greater than or equal to the values returned by fs_FindGraySize or fs_FindGrayBandingSize. No pointers are required for memoryBases whose size is zero. The fields param.scan.topClip and param.scan.bottomClip define the range of lines to convert. Setting topClip to bitMapInfo.bounds.bottom and bottomClip to bitMapInfo.bounds.top (in accordance with the upside down convention of bitmap bounds) will scan convert the entire glyph. If topClip - bottomClip is smaller than the entire glyph, then a single band will be scan converted. The field topClip is the scan line above the top line of the resulting bitmap; bottomClip is the bottom scan line of the bitmap. Fields of the fs_GlyphInfoType record returned by routine The bitMapInfo structure contains a pointer to the gray scale bitmap, the number of bytes per row, and the bitmap bounds. The gray scale bitmap is an array of bytes, each containing the magnified pixel count of each pixel. The beginning of each scan line is double word (32 bits) aligned. When to call When ready to create a bitmap, after the last call of fs_FindGraySize, fs_RestoreOutlines, or fs_FindGrayBandingSize. Notes As with fs_ContourScan, dropout control may be disabled by returning a Null pointer for memoryBases[7]. Values of topClip and bottomClip outside the bounding box will be trimmed to the bounding box. Any illegal combination of topClip and bottomClip (such as topClip = bottomClip, or topClip < bottomClip) will cause the entire glyph to be scan converted. fs_FindBitMapSize Description Determines the amount of memory needed by the Font Scaler to create a bitmap of the glyph. Fields of the fs_GlyphInputType record to initialize before routine Fields of the fs_GlyphInfoType record returned by routine metricInfo, memorySizes. The element metricInfo[1] contains the advance width. The element metricInfo[2] contains the left side bearing. The elements memorySizes[5], memorySizes[6] and memorySizes[7] indicate the amount of memory needed. When to call After the fs_ContourGridFit or fs_ContourNoGridFit routine and before the fs_ContourScan routine.  fs_FindBandingSize Description Determines the amount of memory needed by the Font Scaler to scan convert a glyph bitmap using banding. Fields of the fs_GlyphInputType record to initialize before routine The field param.band.usBandType must be set to either FS_BANDINGSMALL or FS_BANDINGFAST (constants defined in fscaler.h). The field param.band.usBandWidth must contain the size in scanlines of the maximum band to be rasterized. If an outline has been cached, then the field param.band.outlineCache must contain a pointer to the current outline cache. If no outline has been cached it must be set to NULL. Fields of the fs_GlyphInfoType record returned by routine The elements memorySizes[5], memorySizes[6], and memorySizes[7] indicate the amount of memory needed to scan convert one band of the bitmap. When to call After the fs_FindBitMapSize routing and before the first call to fs_ContourScan. This routing may be called just prior to scan conversion to setup the Banding type and calculate new memory requirements. If no banding is being done then this call is not needed. Notes fs_FindBandingSize enables two new banding schemes. FS_BANDINGSMALL allows the client to rasterize a glyph with the minimum amount of workspace memory. It returns both memorySizes[5] and memorySizes[6], scaled down to the size of the band. FS_BANDINGSMALL does not work with dropout control on, so memorySizes[7] is always returned as zero. A client attempting to rasterize a large glyph in limited memory may make additional calls to fs_FindBandingSize with progressively smaller bands if the memory requirements from previous calls were still too great. When a band size small enough to use has been found, that size band (or smaller) should be used to rasterize the entire glyph. It should be understood that there is a substantial overhead per call to fs_ContourScan, so for performance reasons the band size should be kept as large as possible. FS_BANDINGFAST allows the client to rasterize a glyph more efficiently by using the full allocation of memoryBases[6] and memoryBases[7] to save the outline rendering data between banding calls. FS_BANDINGFAST also allows dropout control of any kind to work correctly. Dropout control was disabled during banding in the old rasterizer because the algorithm required access to the bitmap outside of the band. The new routine reserves extra work space in memoryBases[5] and memoryBases[7] for this requirement when dropout control is enabled. For exact pixel for pixel accuracy from banding with dropout control, the client must call the rasterizer with a series of consecutive non-overlapping bands from the top of the glyph to the bottom of the glyph (in the upside-down notation of the bounds structure, that s from bitMapInfo.bounds.bottom to bitMapInfo.bounds.top). The old banding scheme, whereby the client called fs_FindBitMapSize and then did its own calculation of memorySizes[5], is still supported. It still requires the full allocation of memoryBases[6], and it still forces dropout control off, so memoryBases[7] isn t used. The somewhat undocumented override feature, allowing a client to disable dropout control (and save some memory) by forcing memoryBases[7] equal to Null prior to the fs_ContourScan call, is still supported. fs_FindGrayBandingSize Description Determines the amount of memory needed to create a gray scale bitmap using banding. Fields of the fs_GlyphInputType record to initialize before routine The field param.band.usBandType must be set to either FS_BANDINGSMALL or FS_BANDINGFAST (constants defined in fscaler.h). The field param.band.usBandWidth must contain the size in scanlines of the maximum band to be rasterized. If an outline has been cached, then the field param.band.outlineCache must contain a pointer to the current outline cache. If no outline has been cached, it must be set to NULL. Fields of the fs_GlyphInfoType record returned by routine The elements memorySizes[5], memorySizes[6], memorySizes[7], and memorySizes[8] indicate the amount of memory needed to scan convert one band of the bitmap. When to call After fs_FindGraySize and before the first call to fs_ContourGrayScan. This routine is called just prior to scan conversion to set-up the banding type and calculate new memory requirements. If no banding is being done then, this call is not needed. Notes fs_FindGrayBandingSize used two banding schemes. FS_BANDINGSMALL allows the client to rasterize a glyph with the minimum amount of workspace memory. It returns memorySizes[5], memorySizes[6], and memorySizes[8], scaled down to the size of the band. FS_BANDINGSMALL does not work with dropout control on, so memorySizes[7] is always returned as zero. A client attempting to rasterize a large glyph in limited memory may make additional calls to fs_FindGrayBandingSize with progressively smaller bands if the memory requirements from previous calls were still too great. When a band size small enough to use has been found, that size band (or smaller) should be used to rasterize the entire glyph. It should be understood that there is a substantial overhead per call to fs_ContourGrayScan, so for performance reasons the band size should be kept as large as possible. FS_BANDINGFAST allows the client to rasterize a glyph more efficiently by using the full allocation of memoryBases[6] and memoryBases[7] to save the outline rendering data between banding calls. FS_BANDINGFAST also allows dropout control of any kind to work correctly. The routine reserves extra work space in memoryBases[7] and memoryBases[8] for this requirement when dropout control is enabled. For exact accuracy from banding with dropout control, the client must call the rasterizer with a series of consecutive non-overlapping bands from the top of the glyph to the bottom of the glyph (in the upside-down notation of the bounds structure, that s from bitMapInfo.bounds.bottom to bitMapInfo.bounds.top).  banding scheme is not supported for gray scale, since the client has no easy way to calculate the size requirements for memoryBases[8]. fs_FindGraySize Description Determines the amount of memory needed to create a gray scale bitmap. Fields of the fs_GlyphInputType record to initialize before routine The field param.gray.usOverScale contains the factor used to magnify the outline prior to scan conversion. The number of gray levels reported in the bitmap will be usOverScale2 + 1. The allowable values for this parameter will be indicated in the constant FS_GRAY_VALUE_MASK. The field param.gray.bMatchBBox is a boolean value which is set True to force the gray scale bounding box to match the bounding box of monochrome scan conversion. Setting this value to True has the benefit of guaranteeing identical bounding boxes at the cost of shaving off gray pixels at the extremes of the glyph. Fields of the fs_GlyphInfoType record returned by routine The elements memorySizes[5], memorySizes[6], memorySizes[7], and memorySizes[8] indicate the amount of memory needed to create the gray scale bitmap. MemoryBases[5] is used for the gray scale bitmap, memoryBases[6] and memoryBases[7] for workspace, and memoryBases[8] for the magnified bitmap. When to call fs_FindGraySize is called as an alternative to fs_FindBitMapSize. It should be called after fs_ContourGridFit of fs_ContourNoGridFit and before fs_SizeOfOutlines, fs_FindGrayBandingSize, or fs_ContourGrayScan. Notes Gray scaling is done by scan converting a magnified glyph outline and counting the number of magnified pixels which are turned on in each of the original pixels. This count is returned by fs_ContourGrayScan as an array of bytes; one byte per pixel. The magnification factor (usOverScale) determines the number of gray levels reported. For example, if usOverScale = 2, the number of magnified pixels per original pixel is 4 (2 x 2), and the number of these that may be turned on is 0, 1, 2, 3, or 4. So each byte in the array will contain one of these five values. Similarly, a magnification of 4 will yield 17 different values, and a magnification of 8 will yield 65. For reasons of efficiency, the best values for usOverScale are powers of 2. The values 2, 4, and 8 appear to be reasonable choices, depending upon how many gray levels the client can display. The allowable values of usOverScale for any particular implementation of the TrueType rasterizer will be indicated by a bitmask constant: FS_GRAY_VALUE_MASK. If, for instance, the rasterizer supports usOverScale values of 2, 4, and 8, then FS_GRAY_VALUE_MASK will have ones in bit poisitions 2, 4, and 8, giving a value of: 00000000 10001010 b = 008Ah. Note that for this constant, bit position 1 is the least significant bit, and bit position 16 is the most significant bit. fs_SizeOfOutlines Description Determines the amount of memory needed by the Font Scaler to cache an outline. Fields of the fs_GlyphInputType record to initialize before routine None. Fields of the fs_GlyphInfoType record returned by routine outlineCacheSize. The field outlineCacheSize contains the amount of memory needed. When to call After the fs_ContourGridFit routine or the fs_ContourNoGridFit routine and before the fs_SaveOutlines routine when you want to cache an outline instead of immediately preparing a bitmap. fs_SaveOutlines Description Caches an outline; that is, stores the outline in memory for later retrieval. Fields of the fs_GlyphInputType record to initialize before routine The outlineCache field must contain a pointer to the memory block that was requested by the Font Scaler. The size of this memory block was specified by the outlineCacheSize field of the fs_GlyphInfoType record after the fs_SizeOfOutlines routine. Fields of the fs_GlyphInfoType record returned by routine When to call After the fs_SizeOfOutlines routine when you want to cache an outline. Use the fs_RestoreOutlines routine to recover a cached outline. fs_RestoreOutlines Description Recovers a cached outline so that it can be used for preparing a bitmap of a glyph. Fields of the fs_GlyphInputType record to initialize before routine The outlineCache field must contain a pointer to the memory block that you used when you cached the outline with the fs_SaveOutlines routine. Fields of the fs_GlyphInfoType record returned by routine memorySizes. The elements memorySizes[5],  memorySizes[6] and memorySizes[7] indicate the amount of memory needed. Additionally, these fields are returned: outlinesExist, glyphIndex, outlineCacheSize, metricInfo, numberOfContours, xPtr, yPtr, startPtr, endPtr, onCurve. When to call When you are ready to prepare a bitmap from a cached outline; after the fs_SaveOutlines routine. fs_ContourScan Description Causes the Font Scaler to convert the outline into a bitmap. Fields of the fs_GlyphInputType record to initialize before routine The fields memoryBases[5],  memoryBases[6] and memoryBases[7] must contain pointers to the memory blocks that were requested by the Font Scaler. The sizes of these memory blocks were specified by the memorySizes[5],  memorySizes[6] and memorySizes[7] fields of the fs_GlyphInfoType record after the fs_FindBitMapSize or fs_RestoreOutlines routines   The fields bottomClip and topClip must contain the bottom and top scan lines (in pixels) of the glyph to be processed. To process the entire glyph, set bottomClip equal to yMin and topClip equal to yMax as returned by the fs_FindBitMapSize routine.  Set the field ReleaseSfntFrag to 0 unless you want to replace the Font Scaler s scan converter with your own routine. Fields of the fs_GlyphInfoType record returned by routine bitMapInfo. The bitMapInfo field contains a pointer to the bitmap data, i.e. the number of bytes per row, and the corners coordinates of the bitmap. When to call When you are ready to prepare a bitmap, after the fs_FindBitMapSize or fs_RestoreOutlines routines. fs_CloseFonts Description Closes the Font Scaler. Fields of the fs_GlyphInputType record to initialize before routine Fields of the fs_GlyphInfoType record returned by routine When to call At the end of your program, after the last call to the Font Scaler. Font Scaler Errors Each Font Scaler client interface routine returns an error code both as the function result and as the value of the error field in the fs_GlyphInfoType record. If this error code is anything other than 0, you should display an error message for the user and quit. This section lists and describes the errors that you can receive.  Error Explanation NULL_KEY_ERR 0x1001 Memory Base () unexpectedly contains a Null pointer. NULL_INPUT_PTR_ERR 0x1002 InputPtr is unexpectedly Null. NULL_MEMORY_BASES_ERR 0x1003 MemoryBases in InputPtr is Null. VOID_FUNC_PTR_BASE_ERR 0x1004 No longer used. OUT_OFF_SEQUENCE_CALL_ERR 0x1005 Client Interface call made out of sequence. BAD_CLIENT_ID_ERR 0x1006 No longer used. NULL_SFNT_DIR_ERR 0x1007 sfnt Directory is null from client callback routine. NULL_SFNT_FRAG_PTR_ERR 0x1008 GetSfntFragmentPtr is Null in InputPtr. NULL_OUTPUT_PTR_ERR 0x1009 OutputPtr is unexpectedly Null. INVALID_GLYPH_INDEX 0x100A Glyph requested exceeds MaxProfile entry for glyph index. BAND_TOO_BIG_ERR 0x100B Band is larger than was specified in the fs_FindBandingSize call. Error Explanation fnt_execute UNDEFINED_INSTRUCTION_ERR 0x1101 An illegal instruction is part of the TrueType program, or, more likely, the program has run amok. TRASHED_MEM_ERR 0x1102 No longer used. fsg_CalculateBBox POINT_MIGRATION_ERR 0x1201 A scaled and hinted point is outside the maximum bounding box (absolute value greater than 2^15 pixels). sc_ScanChar BAD_START_POINT_ERR 0x1301 No longer used. SCAN_ERR 0x1302 No longer used. BAD_SCAN_KIND_ERR 0x1302 No longer used. SFNT DATA ERROR and errors in sfntaccs.c SFNT_DATA_ERR 0x1400 Inconsistent glyph bounding box data in sfnt. POINTS_DATA_ERR 0x1401 Number of points in glyph exceeds MaxProfile data. INSTRUCTION_SIZE_ERR 0x1402 No longer used. CONTOUR_DATA_ERR 0x1403 Number of contours in glyph exceeds MaxProfile data. GLYPH_INDEX_ERR 0x1404 No longer used. Error Explanation BAD_MAGIC_ERR 0x1405 Problem with sfnt data, Magic number in   table not found. OUT_OF_RANGE_SUBTABLE 0x1406 Requested PlatformId/SpecificID not found in cmap. UNKNOWN_COMPOSITE_VERSION 0x1407 Illegal composite indicator in glyph data. CLIENT_RETURNED_NULL 0x1408 Client callback routine returned Null. MISSING_SFNT_TABLE 0x1409 Required table in sfnt not found. UNKNOWN_CMAP_FORMAT 0x140A Unknown cmap format. BAD_MAXP_DATA 0x140B Incorrect MaxProfile entries for maxComponentElements and maxComponentDepth. Spline call errors BAD_CALL_ERR 0x1500 No longer used. TRASHED_OUTLINE_CACHE 0x1600 Invalid outline cache stamp indicates that outline cache has been corrupted. Gray scale errors BAD_GRAY_LEVEL_ERR 0x1701 Requested gray level is not supported by this version of the rasterizer. GRAY_SEQUENCE_ERR 0x1702 Grayscale call made out of sequence or in a disallowed combination with a non-grayscale call. GRAY_OLD_BANDING_ERR 0x1703 Grayscale doesn t work with   banding mode. Sample of a Routine That Uses the Client Interface /***********************  Parameters  **************************/ #define CHAR_CODE #define POINT_SIZE #define FILE_NAME "times.ttf" #define PLATFORM_ID #define ENCODING_ID /***********************  Imports  ****************************/ #include <stdio.h>                      /* Standard imports */ #include <stdlib.h> #include <string.h> #include <errno.h> #include <assert.h> #include "fscdefs.h"                    /* TrueType imports */ #include "sfnt.h" #include "fscaler.h" /******************  Definitions and Prototypes  **********************/ typedef struct /* Client Data for a single job */ fs_GlyphInputType in; /* Client interface input */ fs_GlyphInfoType out; /* Client interface output */ transMatrix mat; /* Client Matrix Transform */ } CLIENTDATA; static CLIENTDATA cd;                   /* We support ONE client at a time */ static void NewClientData (size_t, size_t); static void* CallbackGetSfntFragment (long, long, long); static void CallbackReleaseSfntFragment (void*); static void* MyMalloc (size_t cb); static void MyFree (void* pv); static int DumpBitmap (char*, short, short, short, short, short, short, FILE*); #define SIGN(a)         ((a)<0 ? -1 : 1) #define ABS(a)          ((a) < 0 ? -(a) : (a)) #define ROUND_FIXPT(fx) ( (short) ( SIGN(fx) * (ONEFIX/2+ABS(fx)) / ONEFIX ) ) #define CHAR_CODE #define POINT_SIZE #define FILE_NAME "times.ttf" /*************************  Main Routine  *****************************/ int main() FILE* pfi; int32 lCode; short xLeft,sAdvanceWidth,cx; static char szFontFile[] = FILE_NAME; pfi = fopen (szFontFile, "rb"); if  (pfi == NULL) perror (szFontFile); return EXIT_FAILURE; lCode = fs_OpenFonts (&cd.in,&cd.out); assert (lCode == 0); NewClientData (0,2); lCode = fs_Initialize (&cd.in,&cd.out); assert (lCode == 0); cd.in.clientID = (int32)(pfi); cd.in.param.newsfnt.platformID = PLATFORM_ID; cd.in.param.newsfnt.specificID = ENCODING_ID; cd.in.GetSfntFragmentPtr = CallbackGetSfntFragment; cd.in.ReleaseSfntFrag = CallbackReleaseSfntFragment; cd.in.sfntDirectory = NULL; lCode = fs_NewSfnt (&cd.in, &cd.out); assert (lCode == 0); NewClientData (3,4); cd.mat.transform[0][0] = ONEFIX;    /* identity transform */ cd.mat.transform[0][1] = 0; cd.mat.transform[0][2] = 0; cd.mat.transform[1][0] = 0; cd.mat.transform[1][1] = ONEFIX; cd.mat.transform[1][2] = 0; cd.mat.transform[2][0] = 0; cd.mat.transform[2][1] = 0; cd.mat.transform[2][2] = ONEFIX; cd.in.param.newtrans.pointSize = (Fixed)(POINT_SIZE) << 16; cd.in.param.newtrans.xResolution = 72;              /* 1 pt = 1 ppem */ cd.in.param.newtrans.yResolution = 72; cd.in.param.newtrans.pixelDiameter = FIXEDSQRT2; cd.in.param.newtrans.transformMatrix = &cd.mat;    cd.in.param.newtrans.traceFunc = NULL; lCode = fs_NewTransformation (&cd.in,&cd.out); assert (lCode == 0); cd.in.param.newglyph.characterCode = CHAR_CODE; cd.in.param.newglyph.glyphIndex = 0; lCode = fs_NewGlyph (&cd.in,&cd.out); assert (lCode == 0); cd.in.param.gridfit.styleFunc = NULL; cd.in.param.gridfit.traceFunc = NULL; lCode = fs_ContourGridFit (&cd.in,&cd.out); assert (lCode == 0); lCode = fs_FindBitMapSize (&cd.in,&cd.out); assert (lCode == 0); NewClientData (5,7); xLeft =  ROUND_FIXPT(cd.out.metricInfo.devLeftSideBearing.x); sAdvanceWidth = ROUND_FIXPT(cd.out.metricInfo.devAdvanceWidth.x); cd.in.param.scan.bottomClip = cd.out.bitMapInfo.bounds.top; cd.in.param.scan.topClip = cd.out.bitMapInfo.bounds.bottom; cd.in.param.scan.outlineCache = NULL; lCode = fs_ContourScan (&cd.in,&cd.out); assert (lCode == 0); cx = cd.out.bitMapInfo.bounds.right - cd.out.bitMapInfo.bounds.left; DumpBitmap ((char*)cd.out.bitMapInfo.baseAddr,  xLeft, cd.out.bitMapInfo.bounds.bottom, (short)(xLeft + cx), cd.out.bitMapInfo.bounds.top, cd.out.bitMapInfo.rowBytes, sAdvanceWidth, stdout lCode = fs_CloseFonts (&cd.in,&cd.out); assert (lCode == 0); fclose (pfi); printf ("%s: Done\n", szFontFile); return EXIT_SUCCESS; /***********************  Memory Management  **************************/ NewClientData(): Call this function to allocate data in  the memoryBases[] rasterizer input array based on sizes found in the memorySizes[] rasterizer output array. static void NewClientData (size_t iLo, size_t iHi) size_t i, cbBuf; for (i=iLo;  i<=iHi;  i++) if  (cd.out.memorySizes[i] == 0) cd.in.memoryBases[i] = NULL; cbBuf = (size_t) cd.out.memorySizes[i]; assert ((FS_MEMORY_SIZE)cbBuf == cd.out.memorySizes[i]); cd.in.memoryBases[i] = MyMalloc (cbBuf); assert (cd.in.memoryBases[i] != NULL); static void* CallbackGetSfntFragment (long lClient, long lOff, long lSize) FILE* pfi = (FILE*) lClient; void* pvBuf; if  ((long)(size_t)lSize != lSize) return NULL; if  (fseek (pfi,lOff,SEEK_SET)) return NULL; pvBuf = MyMalloc ((size_t)lSize); if  (pvBuf == NULL) return NULL; if  (fread (pvBuf, 1, (size_t)lSize, pfi) != (size_t)lSize) MyFree (pvBuf); return NULL; return pvBuf; static void CallbackReleaseSfntFragment (void* pv) MyFree (pv); static void* MyMalloc (size_t cb) if  (cb == 0) return NULL; return malloc (cb); static void MyFree (void* pv) free (pv); /************************ Output Routines  ****************************/ static void DumpBinaryRaster (char*, unsigned short, FILE*); static void DumpBinaryShort (short, FILE*); static void DumpBinaryLong (long, FILE*); static void DumpPixels (FILE*, char*, unsigned short); static void DumpSpaces (FILE*, short); static void PutNewLine (FILE*); DumpBitmap(): Writes rasterizer output to the indicated file static int DumpBitmap (char* pchBits, /* The bitmap */ short xLeft, short yTop, short xRight, short yBottom, /* BoundBox */ short cbRaster, /* # bytes per row */ short sAdvWidth, /* integral advance width */ FILE* pfiOut /* Output file */ unsigned short i,cxWidth,cxBlack,cyBlack; short y,xRightSideBearing; unsigned short cxAdvWidth; cxBlack = xRight - xLeft; cyBlack = yTop - yBottom; fprintf (pfiOut, "\r\n[%hd %hd %hd %hd] %hd\r\n",  xLeft,yTop,xRight,yBottom,sAdvWidth cxAdvWidth = (unsigned short) (sAdvWidth); xRightSideBearing = cxAdvWidth - (xLeft + cxBlack); for (i=0;  i<cyBlack;  i++, pchBits+=cbRaster) DumpSpaces (pfiOut, xLeft); DumpPixels (pfiOut, pchBits, cxBlack); DumpSpaces (pfiOut, xRightSideBearing); PutNewLine (pfiOut); cxWidth = cxBlack + (xLeft + xRightSideBearing); for (y=0;  y<yBottom;  y++) DumpSpaces (pfiOut, (short)cxWidth); PutNewLine (pfiOut); if  (xLeft < 0) DumpSpaces (pfiOut,(short)-xLeft); putc ('L', pfiOut); DumpSpaces (pfiOut,(short)(((short)cxAdvWidth) - 1)); putc ('R', pfiOut); PutNewLine (pfiOut); return ferror(pfiOut)==0 && feof(pfiOut)==0; /*  DumpSpaces(): prints a given number of spaces to the indicated file static void DumpSpaces (FILE* pfiOut, short cxSpaces) short i; for (i=0;  i<cxSpaces;  i++) putc (' ', pfiOut); /*  DumpPixels(): emits an ASCII representation of a row of pixels static void DumpPixels (FILE* pfiOut, char* pchPels, unsigned short cxPels) unsigned short i,j; unsigned uBits,uMask; int iOut; for (i=0;  i<cxPels;  i+=8, pchPels++) uBits = (unsigned)(*pchPels); for (j=0, uMask = 0x80;  uMask && ((i+j) < cxPels);  uMask>>=1, j++) iOut = ( (uMask & uBits) == 0x00 ) ? (char)' ' : '#'; putc (iOut, pfiOut); static void PutNewLine (FILE* pfiOut) putc ('\r', pfiOut); putc ('\n', pfiOut); Summary of the Font Scaler Client Interface Constants #define FS_BANDINGOLD #define FS_BANDINGSMALL #define FS_BANDINGFAST #define FS_GRAY_VALUE_MASK 0x008B  #define ONCURVE  0x01      #ifdef FSCFG_GRAY_SCALE #define MEMORYFRAGMENTS 9 /* extra memory base for overscaled bitmap */ #else #define MEMORYFRAGMENTS #endif Macros #define F26Dot6 long #define boolean int #define FS_MEMORY_SIZE  int32 Data Types typedef signed char int8; typedef unsigned char uint8; typedef short int16; typedef unsigned short uint16; typedef long int32; typedef unsigned long uint32; typedef long Fixed; typedef void (*voidFunc) (); typedef void * voidPtr; typedef void (FS_CALLBACK_PROTO *ReleaseSFNTFunc) (voidPtr); typedef void * (FS_CALLBACK_PROTO *GetSFNTFunc) (int32, int32, int32); typedef struct Rect {     int16 top;     int16 left;     int16 bottom;     int16 right; } Rect; typedef struct {     Fixed       transform[3][3]; } transMatrix; typedef struct {     Fixed       x, y; } vectorType; typedef struct BitMap { char* baseAddr; int16 rowBytes; Rect bounds; } BitMap; typedef struct { vectorType      advanceWidth; vectorType      leftSideBearing; vectorType      leftSideBearingLine; vectorType      devLeftSideBearingLine; vectorType      devAdvanceWidth; vectorType      devLeftSideBearing; } metricsType; typedef struct { FS_MEMORY_SIZE  memorySizes[MEMORYFRAGMENTS]; uint16          glyphIndex; uint16          numberOfBytesTaken; /* from the character code */ metricsType     metricInfo; BitMap          bitMapInfo; /* Spline Data */ int32           outlineCacheSize; uint16          outlinesExist; uint16          numberOfContours; F26Dot6         *xPtr, *yPtr; int16           *startPtr; int16           *endPtr; uint8           *onCurve; /* End of spline data */ /* Only of interest to editors */ F26Dot6         *scaledCVT; #ifdef FSCFG_GRAY_SCALE /* gray scale outline magnification */ uint16          usOverScale; #endif } fs_GlyphInfoType; #ifndef UNNAMED_UNION typedef struct { Fixed version; char* memoryBases[MEMORYFRAGMENTS]; int32 *sfntDirectory; /* (sfnt_OffsetTable    *) always needs to be set, when we have the sfnt */ GetSFNTFunc GetSfntFragmentPtr; /* (clientID, offset, length) */ ReleaseSFNTFunc ReleaseSfntFrag; int32 clientID; /* client private id/stamp (eg. handle for the sfnt) */ union { struct { uint16          platformID; uint16          specificID; } newsfnt; struct { Fixed           pointSize; int16           xResolution; int16           yResolution; Fixed           pixelDiameter;      /* compute engine char from this */ transMatrix*    transformMatrix; FntTraceFunc    traceFunc; } newtrans; struct { uint16          characterCode; uint16          glyphIndex; } newglyph; struct { void            (*styleFunc) (fs_GlyphInfoType*); FntTraceFunc    traceFunc; } gridfit; struct {                                    /* for fs_FindGraySize */ uint16 usOverScale;  /* outline magnification */ boolean bMatchBBox;  /* force bounding box match */ } gray; int32*  outlineCache; struct {                                    /* for fs_FindBandingSize */ uint16          usBandType;             /* old, small or fast */ uint16          usBandWidth;            /* number of scanlines */ int32*          outlineCache;           /* cacheing works with banding */ } band; struct { int16           bottomClip; int16           topClip; int32*          outlineCache; } scan; } param; } fs_GlyphInputType; #else typedef struct { Fixed                   version; char*                   memoryBases[MEMORYFRAGMENTS]; int32                   *sfntDirectory; /* (sfnt_OffsetTable    *) always needs to be set, when we have the sfnt */ GetSFNTFunc             GetSfntFragmentPtr; /* (clientID, offset, length) */ ReleaseSFNTFunc         ReleaseSfntFrag; int32                   clientID; /* client private id/stamp (eg. handle for the sfnt) */ union { struct { uint16          platformID; uint16          specificID; struct { Fixed           pointSize; int16           xResolution; int16           yResolution; Fixed           pixelDiameter;      /* compute engine char from this */ transMatrix*    transformMatrix; FntTraceFunc    tracePreProgramFunc; struct { uint16          characterCode; uint16          glyphIndex; struct { void            (*styleFunc) (fs_GlyphInfoType*); FntTraceFunc    traceGridFitFunc; struct {                                    /* for fs_FindGraySize */ uint16          usOverScale;            /* outline magnification */ boolean         bMatchBBox;             /* force bounding box match */ int32*              outlineCache1; struct {                                    /* for fs_FindBandingSize */ uint16          usBandType;             /* old, small or fast */ uint16          usBandWidth;            /* number of scanlines */ int32*          outlineCache3;          /* cacheing works with banding */ struct { int16           bottomClip; int16           topClip; int32*          outlineCache2; } fs_GlyphInputType; #endif      /* unnamed union */ Functions fs_OpenFonts (fs_GlyphInputType *inputPtr, fs_GlyphInfoType *outputPtr); fs_Initialize (fs_GlyphInputType *inputPtr, fs_GlyphInfoType *outputPtr); fs_NewSfnt (fs_GlyphInputType *inputPtr, fs_GlyphInfoType *outputPtr); fs_NewTransformation (fs_GlyphInputType *inputPtr, fs_GlyphInfoType *outputPtr); fs_NewGlyph (fs_GlyphInputType *inputPtr, fs_GlyphInfoType *outputPtr); fs_GetAdvanceWidth (fs_GlyphInputType *inputPtr, fs_GlyphInfoType *outputPtr); fs_ContourGridFit (fs_GlyphInputType *inputPtr, fs_GlyphInfoType *outputPtr); fs_ContourNoGridFit (fs_GlyphInputType *inputPtr, fs_GlyphInfoType *outputPtr); fs_FindBitMapSize (fs_GlyphInputType *inputPtr, fs_GlyphInfoType *outputPtr); fs_FindBandingSize (fs_GlyphInputType *inputPtr, fs_GlyphInfoType *outputPtr); fs_SizeOfOutlines (fs_GlyphInputType *inputPtr, fs_GlyphInfoType *outputPtr); fs_SaveOutlines (fs_GlyphInputType *inputPtr, fs_GlyphInfoType *outputPtr); fs_RestoreOutlines (fs_GlyphInputType *inputPtr, fs_GlyphInfoType *outputPtr); fs_ContourScan (fs_GlyphInputType *inputPtr, fs_GlyphInfoType *outputPtr); fs_CloseFonts (fs_GlyphInputType *inputPtr, fs_GlyphInfoType *outputPtr); fs_FindGraySize (fs_GlyphInputType *inputPtr, fs_GlyphInfoType *outputPtr); fs_FindGrayBandingSize (fs_GlyphInputType *inputPtr, fs_GlyphInfoType *outputPtr); fs_ContourGrayScan (fs_GlyphInputType *inputPtr, fs_GlyphInfoType *outputPtr); fs_InitializeData (void); fs_GetScaledAdvanceWidths (fs_GlyphInputType * inputPtr,uint16 usFirstGlyph, uint16 usLastGlyph, int16 *psGlyphWidths); Font Scaler Client Interface  page \\* arabic Confidential Font Scaler Client Interface  page \\* arabic Font Scaler Client Interface  DATE  \l  1/21/94  DATE  \l  1/21/94 Font Scaler Client Interface page \\* arabic Microsoft Confidential Microsoft Confidential page \\* arabic Tms Rmn Unit square u Normal Heading 1 Heading 2 Heading 3 Heading 4 Heading 5 Heading 6 Heading 7 Heading 8 Heading 9 Default Paragraph Font TOC 8 TOC 7 TOC 6 TOC 5 TOC 4 TOC 3 TOC 2 TOC 1 Footer Header toc 9 Warning Important _ Apple Inc  Text  Text LAST 2 col Left Page Number Jeff Weaver C:\WORKING\FSCINTER\CLINTINT.DOC Jeff Weaver C:\WORKING\FSCINTER\CLINTINT.DOC Jeff Weaver C:\WORKING\FSCINTER\CLINTINT.DOC Jeff Weaver C:\WORKING\FSCINTER\CLINTINT.DOC Jeff Weaver C:\WORKING\FSCINTER\CLINTINT.DOC Jeff Weaver C:\WORKING\FSCINTER\CLINTINT.DOC Jeff Weaver C:\WORKING\FSCINTER\CLINTINT.DOC Jeff Weaver C:\WORKING\FSCINTER\CLINTINT.DOC Jeff Weaver C:\WORKING\FSCINTER\CLINTINT.DOC Jeff Weaver C:\WORKING\FSCINTER\CLINTINT.DOC @HP LaserJet 4Si/4Si MX LPT1: HPPCL5E HP LaserJet 4Si/4Si MX HP LaserJet 4Si/4Si MX Times New Roman Symbol Arial Courier New Times Times New Roman Helvetica Font Scaler Client Interface Jeff Weaver Jeff Weaver
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\dxg\xgraphics\misc\xg.txt ===
Dump of file .\xbox\obj\i386\misc.lib

File Type: LIBRARY

Archive member name at 8: /               
3CBBA79F time/date Mon Apr 15 21:25:03 2002
         uid
         gid
       0 mode
     4CD size
correct header end

    31 public symbols

      A86 ??_C@_0CF@GEEGBDKJ@Unable?5to?5open?5file?5?$CI?$CFs?$CJ?3?5?5error@
      A86 ?LockRect@D3DSurface@@QAGJPAU_D3DLOCKED_RECT@@PBUtagRECT@@K@Z
      A86 ?UnlockRect@D3DSurface@@QAGJXZ
      A86 ?g_TextureFormat@XGRAPHICS@@3QBEB
      A86 _D3DDIRTYFROMRENDERSTATE
      A86 _D3DDIRTYFROMTEXTURESTATE
      A86 _D3DPRIMITIVETOVERTEXCOUNT
      A86 _D3DSIMPLERENDERSTATEENCODE
      A86 _D3DTEXTUREDIRECTENCODE
      A86 _XGWriteSurfaceOrTextureToXPR@12
    12E36 ?GetDesc@D3DSurface@@QAGJPAU_D3DSURFACE_DESC@@@Z
    12E36 _XGWriteSurfaceToFile@8
    12E36 _XGraphicsBuildNumber
    256D0 ?BitsPerPixelOfD3DFORMAT@XGRAPHICS@@YGKK@Z
    256D0 ?CalcPitch@XGRAPHICS@@YGKKK@Z
    256D0 ?EncodeFormat@XGRAPHICS@@YGKKKKKW4_D3DFORMAT@@K_N1PAK2@Z
    256D0 ?EncodeTexture@XGRAPHICS@@YGXKKKKKW4_D3DFORMAT@@K_N1KPAUD3DBaseTexture@@@Z
    256D0 ?IsCompressedD3DFORMAT@XGRAPHICS@@YG_NK@Z
    256D0 ?IsSwizzledD3DFORMAT@XGRAPHICS@@YG_NW4_D3DFORMAT@@@Z
    256D0 ?IsValidDepthBufferD3DFORMAT@XGRAPHICS@@YGHK@Z
    256D0 ?Log2@XGRAPHICS@@YIKK@Z
    256D0 ?MinimumTextureSizeOfD3DFORMAT@XGRAPHICS@@YGKK@Z
    256D0 _XGSetCubeTextureHeader@32
    256D0 _XGSetFixupHeader@12
    256D0 _XGSetIndexBufferHeader@24
    256D0 _XGSetPaletteHeader@12
    256D0 _XGSetPushBufferHeader@16
    256D0 _XGSetSurfaceHeader@24
    256D0 _XGSetTextureHeader@36
    256D0 _XGSetVertexBufferHeader@24
    256D0 _XGSetVolumeTextureHeader@40

Archive member name at 512: /               
3CBBA79F time/date Mon Apr 15 21:25:03 2002
         uid
         gid
       0 mode
     4A3 size
correct header end

    4 offsets

        1      A86
        2    12E36
        3    256D0
        4    39EBE

    31 public symbols

        1 ??_C@_0CF@GEEGBDKJ@Unable?5to?5open?5file?5?$CI?$CFs?$CJ?3?5?5error@
        3 ?BitsPerPixelOfD3DFORMAT@XGRAPHICS@@YGKK@Z
        3 ?CalcPitch@XGRAPHICS@@YGKKK@Z
        3 ?EncodeFormat@XGRAPHICS@@YGKKKKKW4_D3DFORMAT@@K_N1PAK2@Z
        3 ?EncodeTexture@XGRAPHICS@@YGXKKKKKW4_D3DFORMAT@@K_N1KPAUD3DBaseTexture@@@Z
        2 ?GetDesc@D3DSurface@@QAGJPAU_D3DSURFACE_DESC@@@Z
        3 ?IsCompressedD3DFORMAT@XGRAPHICS@@YG_NK@Z
        3 ?IsSwizzledD3DFORMAT@XGRAPHICS@@YG_NW4_D3DFORMAT@@@Z
        3 ?IsValidDepthBufferD3DFORMAT@XGRAPHICS@@YGHK@Z
        1 ?LockRect@D3DSurface@@QAGJPAU_D3DLOCKED_RECT@@PBUtagRECT@@K@Z
        3 ?Log2@XGRAPHICS@@YIKK@Z
        3 ?MinimumTextureSizeOfD3DFORMAT@XGRAPHICS@@YGKK@Z
        1 ?UnlockRect@D3DSurface@@QAGJXZ
        1 ?g_TextureFormat@XGRAPHICS@@3QBEB
        1 _D3DDIRTYFROMRENDERSTATE
        1 _D3DDIRTYFROMTEXTURESTATE
        1 _D3DPRIMITIVETOVERTEXCOUNT
        1 _D3DSIMPLERENDERSTATEENCODE
        1 _D3DTEXTUREDIRECTENCODE
        3 _XGSetCubeTextureHeader@32
        3 _XGSetFixupHeader@12
        3 _XGSetIndexBufferHeader@24
        3 _XGSetPaletteHeader@12
        3 _XGSetPushBufferHeader@16
        3 _XGSetSurfaceHeader@24
        3 _XGSetTextureHeader@36
        3 _XGSetVertexBufferHeader@24
        3 _XGSetVolumeTextureHeader@40
        1 _XGWriteSurfaceOrTextureToXPR@12
        2 _XGWriteSurfaceToFile@8
        2 _XGraphicsBuildNumber

Archive member name at 9F2: //              
3CBBA79F time/date Mon Apr 15 21:25:03 2002
         uid
         gid
       0 mode
      58 size
correct header end

Archive member name at A86: /0              obj\i386\writexpr.obj
3CBBA79E time/date Mon Apr 15 21:25:02 2002
         uid
         gid
  100666 mode
   12373 size
correct header end

FILE HEADER VALUES
             14C machine (x86)
              1B number of sections
        3CBBA79C time date stamp Mon Apr 15 21:25:00 2002
           119DB file pointer to symbol table
              6B number of symbols
               0 size of optional header
               0 characteristics

SECTION HEADER #1
.debug$S name
       0 physical address
       0 virtual address
    1A7B size of raw data
     44C file pointer to raw data (0000044C to 00001EC6)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
42100040 flags
         Initialized Data
         Discardable
         1 byte align
         Read Only

RAW DATA #1
  00000000: 02 00 00 00 54 00 09 00 00 00 00 00 4D 44 3A 5C  ....T.......MD:\
  00000010: 78 62 6F 78 5C 70 72 69 76 61 74 65 5C 77 69 6E  xbox\private\win
  00000020: 64 6F 77 73 5C 64 69 72 65 63 74 78 5C 64 78 67  dows\directx\dxg
  00000030: 5C 78 67 72 61 70 68 69 63 73 5C 6D 69 73 63 5C  \xgraphics\misc\
  00000040: 78 62 6F 78 5C 6F 62 6A 5C 69 33 38 36 5C 77 72  xbox\obj\i386\wr
  00000050: 69 74 65 78 70 72 2E 6F 62 6A 38 00 13 10 01 00  itexpr.obj8.....
  00000060: 00 00 06 00 0D 00 00 00 26 24 0D 00 00 00 26 24  ........&$....&$
  00000070: 21 4D 69 63 72 6F 73 6F 66 74 20 28 52 29 20 4F  !Microsoft (R) O
  00000080: 70 74 69 6D 69 7A 69 6E 67 20 43 6F 6D 70 69 6C  ptimizing Compil
  00000090: 65 72 00 00 12 00 02 10 90 10 00 00 0A 00 09 44  er.............D
  000000A0: 33 44 54 53 5F 4D 41 58 1A 00 02 10 FA 14 00 00  3DTS_MAX........
  000000B0: F9 01 11 44 33 44 53 42 44 5F 54 52 41 4E 53 46  ...D3DSBD_TRANSF
  000000C0: 4F 52 4D 53 19 00 02 10 B6 10 00 00 52 00 10 44  ORMS........R..D
  000000D0: 33 44 52 53 5F 53 49 4D 50 4C 45 5F 4D 41 58 1B  3DRS_SIMPLE_MAX.
  000000E0: 00 02 10 B6 10 00 00 75 00 12 44 33 44 52 53 5F  .......u..D3DRS_
  000000F0: 44 45 46 45 52 52 45 44 5F 4D 41 58 1D 00 02 10  DEFERRED_MAX....
  00000100: B6 10 00 00 75 00 14 44 33 44 52 53 5F 50 53 54  ....u..D3DRS_PST
  00000110: 45 58 54 55 52 45 4D 4F 44 45 53 1A 00 02 10 B6  EXTUREMODES.....
  00000120: 10 00 00 76 00 11 44 33 44 52 53 5F 56 45 52 54  ...v..D3DRS_VERT
  00000130: 45 58 42 4C 45 4E 44 17 00 02 10 B6 10 00 00 77  EXBLEND........w
  00000140: 00 0E 44 33 44 52 53 5F 46 4F 47 43 4F 4C 4F 52  ..D3DRS_FOGCOLOR
  00000150: 17 00 02 10 B6 10 00 00 78 00 0E 44 33 44 52 53  ........x..D3DRS
  00000160: 5F 46 49 4C 4C 4D 4F 44 45 1B 00 02 10 B6 10 00  _FILLMODE.......
  00000170: 00 79 00 12 44 33 44 52 53 5F 42 41 43 4B 46 49  .y..D3DRS_BACKFI
  00000180: 4C 4C 4D 4F 44 45 1F 00 02 10 B6 10 00 00 7A 00  LLMODE........z.
  00000190: 16 44 33 44 52 53 5F 54 57 4F 53 49 44 45 44 4C  .D3DRS_TWOSIDEDL
  000001A0: 49 47 48 54 49 4E 47 1F 00 02 10 B6 10 00 00 7B  IGHTING........{
  000001B0: 00 16 44 33 44 52 53 5F 4E 4F 52 4D 41 4C 49 5A  ..D3DRS_NORMALIZ
  000001C0: 45 4E 4F 52 4D 41 4C 53 16 00 02 10 B6 10 00 00  ENORMALS........
  000001D0: 7C 00 0D 44 33 44 52 53 5F 5A 45 4E 41 42 4C 45  |..D3DRS_ZENABLE
  000001E0: 1C 00 02 10 B6 10 00 00 7D 00 13 44 33 44 52 53  ........}..D3DRS
  000001F0: 5F 53 54 45 4E 43 49 4C 45 4E 41 42 4C 45 1A 00  _STENCILENABLE..
  00000200: 02 10 B6 10 00 00 7E 00 11 44 33 44 52 53 5F 53  ......~..D3DRS_S
  00000210: 54 45 4E 43 49 4C 46 41 49 4C 18 00 02 10 B6 10  TENCILFAIL......
  00000220: 00 00 7F 00 0F 44 33 44 52 53 5F 46 52 4F 4E 54  .....D3DRS_FRONT
  00000230: 46 41 43 45 17 00 02 10 B6 10 00 00 80 00 0E 44  FACE...........D
  00000240: 33 44 52 53 5F 43 55 4C 4C 4D 4F 44 45 1C 00 02  3DRS_CULLMODE...
  00000250: 10 B6 10 00 00 81 00 13 44 33 44 52 53 5F 54 45  ........D3DRS_TE
  00000260: 58 54 55 52 45 46 41 43 54 4F 52 14 00 02 10 B6  XTUREFACTOR.....
  00000270: 10 00 00 82 00 0B 44 33 44 52 53 5F 5A 42 49 41  ......D3DRS_ZBIA
  00000280: 53 16 00 02 10 B6 10 00 00 83 00 0D 44 33 44 52  S...........D3DR
  00000290: 53 5F 4C 4F 47 49 43 4F 50 1C 00 02 10 B6 10 00  S_LOGICOP.......
  000002A0: 00 84 00 13 44 33 44 52 53 5F 45 44 47 45 41 4E  ....D3DRS_EDGEAN
  000002B0: 54 49 41 4C 49 41 53 23 00 02 10 B6 10 00 00 85  TIALIAS#........
  000002C0: 00 1A 44 33 44 52 53 5F 4D 55 4C 54 49 53 41 4D  ..D3DRS_MULTISAM
  000002D0: 50 4C 45 41 4E 54 49 41 4C 49 41 53 1E 00 02 10  PLEANTIALIAS....
  000002E0: B6 10 00 00 86 00 15 44 33 44 52 53 5F 4D 55 4C  .......D3DRS_MUL
  000002F0: 54 49 53 41 4D 50 4C 45 4D 41 53 4B 1E 00 02 10  TISAMPLEMASK....
  00000300: B6 10 00 00 87 00 15 44 33 44 52 53 5F 4D 55 4C  .......D3DRS_MUL
  00000310: 54 49 53 41 4D 50 4C 45 4D 4F 44 45 2A 00 02 10  TISAMPLEMODE*...
  00000320: B6 10 00 00 88 00 21 44 33 44 52 53 5F 4D 55 4C  ......!D3DRS_MUL
  00000330: 54 49 53 41 4D 50 4C 45 52 45 4E 44 45 52 54 41  TISAMPLERENDERTA
  00000340: 52 47 45 54 4D 4F 44 45 19 00 02 10 B6 10 00 00  RGETMODE........
  00000350: 89 00 10 44 33 44 52 53 5F 53 48 41 44 4F 57 46  ...D3DRS_SHADOWF
  00000360: 55 4E 43 18 00 02 10 B6 10 00 00 8A 00 0F 44 33  UNC...........D3
  00000370: 44 52 53 5F 4C 49 4E 45 57 49 44 54 48 1E 00 02  DRS_LINEWIDTH...
  00000380: 10 B6 10 00 00 8B 00 15 44 33 44 52 53 5F 44 58  ........D3DRS_DX
  00000390: 54 31 4E 4F 49 53 45 45 4E 41 42 4C 45 18 00 02  T1NOISEENABLE...
  000003A0: 10 B6 10 00 00 8C 00 0F 44 33 44 52 53 5F 59 55  ........D3DRS_YU
  000003B0: 56 45 4E 41 42 4C 45 22 00 02 10 B6 10 00 00 8D  VENABLE"........
  000003C0: 00 19 44 33 44 52 53 5F 4F 43 43 4C 55 53 49 4F  ..D3DRS_OCCLUSIO
  000003D0: 4E 43 55 4C 4C 45 4E 41 42 4C 45 20 00 02 10 B6  NCULLENABLE ....
  000003E0: 10 00 00 8E 00 17 44 33 44 52 53 5F 53 54 45 4E  ......D3DRS_STEN
  000003F0: 43 49 4C 43 55 4C 4C 45 4E 41 42 4C 45 20 00 02  CILCULLENABLE ..
  00000400: 10 B6 10 00 00 8F 00 17 44 33 44 52 53 5F 52 4F  ........D3DRS_RO
  00000410: 50 5A 43 4D 50 41 4C 57 41 59 53 52 45 41 44 17  PZCMPALWAYSREAD.
  00000420: 00 02 10 B6 10 00 00 90 00 0E 44 33 44 52 53 5F  ..........D3DRS_
  00000430: 52 4F 50 5A 52 45 41 44 24 00 02 10 B6 10 00 00  ROPZREAD$.......
  00000440: 91 00 1B 44 33 44 52 53 5F 44 4F 4E 4F 54 43 55  ...D3DRS_DONOTCU
  00000450: 4C 4C 55 4E 43 4F 4D 50 52 45 53 53 45 44 12 00  LLUNCOMPRESSED..
  00000460: 02 10 B6 10 00 00 92 00 09 44 33 44 52 53 5F 4D  .........D3DRS_M
  00000470: 41 58 2A 00 02 10 C9 10 00 00 0C 00 21 44 33 44  AX*.........!D3D
  00000480: 54 53 53 5F 44 45 46 45 52 52 45 44 5F 54 45 58  TSS_DEFERRED_TEX
  00000490: 54 55 52 45 5F 53 54 41 54 45 5F 4D 41 58 17 00  TURE_STATE_MAX..
  000004A0: 02 10 C9 10 00 00 0C 00 0E 44 33 44 54 53 53 5F  .........D3DTSS_
  000004B0: 43 4F 4C 4F 52 4F 50 1C 00 02 10 C9 10 00 00 16  COLOROP.........
  000004C0: 00 13 44 33 44 54 53 53 5F 44 45 46 45 52 52 45  ..D3DTSS_DEFERRE
  000004D0: 44 5F 4D 41 58 1C 00 02 10 C9 10 00 00 16 00 13  D_MAX...........
  000004E0: 44 33 44 54 53 53 5F 42 55 4D 50 45 4E 56 4D 41  D3DTSS_BUMPENVMA
  000004F0: 54 30 30 1E 00 02 10 C9 10 00 00 1B 00 15 44 33  T00...........D3
  00000500: 44 54 53 53 5F 42 55 4D 50 45 4E 56 4C 4F 46 46  DTSS_BUMPENVLOFF
  00000510: 53 45 54 1D 00 02 10 C9 10 00 00 1C 00 14 44 33  SET...........D3
  00000520: 44 54 53 53 5F 54 45 58 43 4F 4F 52 44 49 4E 44  DTSS_TEXCOORDIND
  00000530: 45 58 1B 00 02 10 C9 10 00 00 1D 00 12 44 33 44  EX...........D3D
  00000540: 54 53 53 5F 42 4F 52 44 45 52 43 4F 4C 4F 52 1D  TSS_BORDERCOLOR.
  00000550: 00 02 10 C9 10 00 00 1E 00 14 44 33 44 54 53 53  ..........D3DTSS
  00000560: 5F 43 4F 4C 4F 52 4B 45 59 43 4F 4C 4F 52 13 00  _COLORKEYCOLOR..
  00000570: 02 10 C9 10 00 00 20 00 0A 44 33 44 54 53 53 5F  ...... ..D3DTSS_
  00000580: 4D 41 58 1A 00 02 10 BA 14 00 00 19 00 11 44 33  MAX...........D3
  00000590: 44 54 4F 50 5F 42 55 4D 50 45 4E 56 4D 41 50 14  DTOP_BUMPENVMAP.
  000005A0: 00 02 10 1B 10 00 00 0C 00 0B 44 33 44 46 4D 54  ..........D3DFMT
  000005B0: 5F 44 58 54 31 14 00 02 10 1B 10 00 00 0E 00 0B  _DXT1...........
  000005C0: 44 33 44 46 4D 54 5F 44 58 54 32 14 00 02 10 1B  D3DFMT_DXT2.....
  000005D0: 10 00 00 0F 00 0B 44 33 44 46 4D 54 5F 44 58 54  ......D3DFMT_DXT
  000005E0: 34 28 00 02 10 AE 14 00 00 20 00 1F 50 53 5F 49  4(....... ..PS_I
  000005F0: 4E 50 55 54 4D 41 50 50 49 4E 47 5F 55 4E 53 49  NPUTMAPPING_UNSI
  00000600: 47 4E 45 44 5F 49 4E 56 45 52 54 26 00 02 10 AE  GNED_INVERT&....
  00000610: 14 00 00 40 00 1D 50 53 5F 49 4E 50 55 54 4D 41  ...@..PS_INPUTMA
  00000620: 50 50 49 4E 47 5F 45 58 50 41 4E 44 5F 4E 4F 52  PPING_EXPAND_NOR
  00000630: 4D 41 4C 28 00 02 10 AE 14 00 00 80 00 1F 50 53  MAL(..........PS
  00000640: 5F 49 4E 50 55 54 4D 41 50 50 49 4E 47 5F 48 41  _INPUTMAPPING_HA
  00000650: 4C 46 42 49 41 53 5F 4E 4F 52 4D 41 4C 28 00 02  LFBIAS_NORMAL(..
  00000660: 10 AE 14 00 00 A0 00 1F 50 53 5F 49 4E 50 55 54  ........PS_INPUT
  00000670: 4D 41 50 50 49 4E 47 5F 48 41 4C 46 42 49 41 53  MAPPING_HALFBIAS
  00000680: 5F 4E 45 47 41 54 45 0C 00 03 10 22 00 00 00 05  _NEGATE...."....
  00000690: 55 4C 4F 4E 47 17 00 03 10 D3 13 00 00 10 44 53  ULONG.........DS
  000006A0: 45 46 46 45 43 54 49 4D 41 47 45 4C 4F 43 12 00  EFFECTIMAGELOC..
  000006B0: 03 10 FF 14 00 00 0B 50 53 5F 52 45 47 49 53 54  .......PS_REGIST
  000006C0: 45 52 10 00 03 10 52 13 00 00 09 44 33 44 58 43  ER....R....D3DXC
  000006D0: 4F 4C 4F 52 0A 00 03 10 05 10 00 00 03 49 49 44  OLOR.........IID
  000006E0: 0F 00 03 10 13 00 00 00 08 4C 4F 4E 47 4C 4F 4E  .........LONGLON
  000006F0: 47 10 00 03 10 1B 10 00 00 09 44 33 44 46 4F 52  G.........D3DFOR
  00000700: 4D 41 54 12 00 03 10 CB 12 00 00 0B 44 33 44 58  MAT.........D3DX
  00000710: 56 45 43 54 4F 52 33 10 00 03 10 29 12 00 00 09  VECTOR3....)....
  00000720: 44 33 44 4C 49 47 48 54 38 17 00 03 10 7E 12 00  D3DLIGHT8....~..
  00000730: 00 10 5F 44 33 44 53 55 52 46 41 43 45 5F 44 45  .._D3DSURFACE_DE
  00000740: 53 43 1B 00 03 10 EA 14 00 00 14 44 33 44 56 45  SC.........D3DVE
  00000750: 52 54 45 58 53 48 41 44 45 52 49 4E 50 55 54 15  RTEXSHADERINPUT.
  00000760: 00 03 10 80 12 00 00 0E 44 33 44 4C 4F 43 4B 45  ........D3DLOCKE
  00000770: 44 5F 52 45 43 54 1F 00 03 10 FD 14 00 00 18 4C  D_RECT.........L
  00000780: 50 46 4E 58 4D 45 44 49 41 4F 42 4A 45 43 54 43  PFNXMEDIAOBJECTC
  00000790: 41 4C 4C 42 41 43 4B 15 00 03 10 2D 12 00 00 0E  ALLBACK....-....
  000007A0: 44 33 44 42 61 73 65 54 65 78 74 75 72 65 1A 00  D3DBaseTexture..
  000007B0: 03 10 FC 14 00 00 13 4C 50 44 53 45 46 46 45 43  .......LPDSEFFEC
  000007C0: 54 49 4D 41 47 45 44 45 53 43 0D 00 03 10 03 04  TIMAGEDESC......
  000007D0: 00 00 06 4C 50 56 4F 49 44 1C 00 03 10 B0 11 00  ...LPVOID.......
  000007E0: 00 15 44 33 44 50 52 45 53 45 4E 54 5F 50 41 52  ..D3DPRESENT_PAR
  000007F0: 41 4D 45 54 45 52 53 14 00 03 10 FB 14 00 00 0D  AMETERS.........
  00000800: 4C 50 43 44 53 33 44 42 55 46 46 45 52 16 00 03  LPCDS3DBUFFER...
  00000810: 10 1F 10 00 00 0F 44 33 44 52 45 53 4F 55 52 43  ......D3DRESOURC
  00000820: 45 54 59 50 45 1F 00 03 10 FA 14 00 00 18 5F 44  ETYPE........._D
  00000830: 33 44 53 54 41 54 45 42 4C 4F 43 4B 44 49 52 54  3DSTATEBLOCKDIRT
  00000840: 59 49 4E 44 45 58 19 00 03 10 F8 14 00 00 12 5F  YINDEX........._
  00000850: 4D 41 58 5F 46 56 46 5F 44 45 43 4C 5F 53 49 5A  MAX_FVF_DECL_SIZ
  00000860: 45 20 00 03 10 31 12 00 00 19 5F 44 33 44 56 45  E ...1...._D3DVE
  00000870: 52 54 45 58 41 54 54 52 49 42 55 54 45 46 4F 52  RTEXATTRIBUTEFOR
  00000880: 4D 41 54 10 00 03 10 1F 12 00 00 09 44 33 44 4D  MAT.........D3DM
  00000890: 41 54 52 49 58 19 00 03 10 22 00 00 00 12 44 33  ATRIX...."....D3
  000008A0: 44 42 41 43 4B 42 55 46 46 45 52 5F 54 59 50 45  DBACKBUFFER_TYPE
  000008B0: 1B 00 03 10 13 12 00 00 14 5F 44 33 44 43 4F 50  ........._D3DCOP
  000008C0: 59 52 45 43 54 52 4F 50 53 54 41 54 45 0E 00 03  YRECTROPSTATE...
  000008D0: 10 66 12 00 00 07 44 33 44 54 49 4C 45 15 00 03  .f....D3DTILE...
  000008E0: 10 8F 12 00 00 0E 5F 44 33 44 4C 4F 43 4B 45 44  ......_D3DLOCKED
  000008F0: 5F 42 4F 58 1A 00 03 10 F6 14 00 00 13 4C 50 44  _BOX.........LPD
  00000900: 49 52 45 43 54 53 4F 55 4E 44 53 54 52 45 41 4D  IRECTSOUNDSTREAM
  00000910: 18 00 03 10 19 12 00 00 11 5F 44 33 44 43 4F 50  ........._D3DCOP
  00000920: 59 52 45 43 54 53 54 41 54 45 1B 00 03 10 91 12  YRECTSTATE......
  00000930: 00 00 14 44 33 44 56 45 52 54 45 58 42 55 46 46  ...D3DVERTEXBUFF
  00000940: 45 52 5F 44 45 53 43 12 00 03 10 AF 12 00 00 0B  ER_DESC.........
  00000950: 44 33 44 58 56 45 43 54 4F 52 32 13 00 03 10 F5  D3DXVECTOR2.....
  00000960: 14 00 00 0C 4C 50 43 44 53 4C 46 4F 44 45 53 43  ....LPCDSLFODESC
  00000970: 10 00 03 10 23 00 00 00 09 55 4C 4F 4E 47 4C 4F  ....#....ULONGLO
  00000980: 4E 47 16 00 03 10 64 12 00 00 0F 44 33 44 53 54  NG....d....D3DST
  00000990: 52 45 41 4D 5F 49 4E 50 55 54 15 00 03 10 07 12  REAM_INPUT......
  000009A0: 00 00 0E 44 33 44 49 6E 64 65 78 42 75 66 66 65  ...D3DIndexBuffe
  000009B0: 72 0F 00 03 10 BF 13 00 00 08 49 55 6E 6B 6E 6F  r.........IUnkno
  000009C0: 77 6E 18 00 03 10 BE 10 00 00 11 44 33 44 53 54  wn.........D3DST
  000009D0: 41 54 45 42 4C 4F 43 4B 54 59 50 45 19 00 03 10  ATEBLOCKTYPE....
  000009E0: B7 14 00 00 12 44 53 49 33 44 4C 32 4F 42 53 54  .....DSI3DL2OBST
  000009F0: 52 55 43 54 49 4F 4E 14 00 03 10 34 14 00 00 0D  RUCTION....4....
  00000A00: 44 53 49 33 44 4C 32 42 55 46 46 45 52 18 00 03  DSI3DL2BUFFER...
  00000A10: 10 3C 12 00 00 11 5F 44 33 44 54 52 49 50 41 54  .<...._D3DTRIPAT
  00000A20: 43 48 5F 49 4E 46 4F 16 00 03 10 DB 13 00 00 0F  CH_INFO.........
  00000A30: 5F 44 53 4F 55 54 50 55 54 4C 45 56 45 4C 53 10  _DSOUTPUTLEVELS.
  00000A40: 00 03 10 8B 12 00 00 09 44 33 44 56 6F 6C 75 6D  ........D3DVolum
  00000A50: 65 1F 00 03 10 C9 10 00 00 18 44 33 44 54 45 58  e.........D3DTEX
  00000A60: 54 55 52 45 53 54 41 47 45 53 54 41 54 45 54 59  TURESTAGESTATETY
  00000A70: 50 45 17 00 03 10 C1 14 00 00 10 44 53 49 33 44  PE.........DSI3D
  00000A80: 4C 32 4F 43 43 4C 55 53 49 4F 4E 0E 00 03 10 22  L2OCCLUSION...."
  00000A90: 04 00 00 07 4C 50 44 57 4F 52 44 1C 00 03 10 F2  ....LPDWORD.....
  00000AA0: 14 00 00 15 4C 50 43 44 53 4D 49 58 42 49 4E 56  ....LPCDSMIXBINV
  00000AB0: 4F 4C 55 4D 45 50 41 49 52 14 00 03 10 21 12 00  OLUMEPAIR....!..
  00000AC0: 00 0D 5F 44 33 44 56 49 45 57 50 4F 52 54 38 20  .._D3DVIEWPORT8 
  00000AD0: 00 03 10 C9 10 00 00 19 5F 44 33 44 54 45 58 54  ........_D3DTEXT
  00000AE0: 55 52 45 53 54 41 47 45 53 54 41 54 45 54 59 50  URESTAGESTATETYP
  00000AF0: 45 15 00 03 10 82 12 00 00 0E 44 33 44 56 4F 4C  E.........D3DVOL
  00000B00: 55 4D 45 5F 44 45 53 43 13 00 03 10 20 14 00 00  UME_DESC.... ...
  00000B10: 0C 57 41 56 45 46 4F 52 4D 41 54 45 58 1C 00 03  .WAVEFORMATEX...
  00000B20: 10 90 10 00 00 15 44 33 44 54 52 41 4E 53 46 4F  ......D3DTRANSFO
  00000B30: 52 4D 53 54 41 54 45 54 59 50 45 1A 00 03 10 F1  RMSTATETYPE.....
  00000B40: 14 00 00 13 4C 50 44 49 52 45 43 54 53 4F 55 4E  ....LPDIRECTSOUN
  00000B50: 44 42 55 46 46 45 52 11 00 03 10 30 14 00 00 0A  DBUFFER....0....
  00000B60: 44 53 33 44 42 55 46 46 45 52 17 00 03 10 EA 11  DS3DBUFFER......
  00000B70: 00 00 10 44 33 44 43 55 42 45 4D 41 50 5F 46 41  ...D3DCUBEMAP_FA
  00000B80: 43 45 53 0B 00 03 10 74 00 00 00 04 42 4F 4F 4C  CES....t....BOOL
  00000B90: 11 00 03 10 1B 10 00 00 0A 5F 44 33 44 46 4F 52  ........._D3DFOR
  00000BA0: 4D 41 54 15 00 03 10 3A 10 00 00 0E 44 33 44 44  MAT....:....D3DD
  00000BB0: 49 53 50 4C 41 59 4D 4F 44 45 15 00 03 10 34 14  ISPLAYMODE....4.
  00000BC0: 00 00 0E 5F 44 53 49 33 44 4C 32 42 55 46 46 45  ..._DSI3DL2BUFFE
  00000BD0: 52 12 00 03 10 7C 12 00 00 0B 44 33 44 52 65 73  R....|....D3DRes
  00000BE0: 6F 75 72 63 65 14 00 03 10 CB 13 00 00 0D 5F 44  ource........._D
  00000BF0: 53 53 54 52 45 41 4D 44 45 53 43 0F 00 03 10 3C  SSTREAMDESC....<
  00000C00: 10 00 00 08 44 33 44 43 41 50 53 38 15 00 03 10  ....D3DCAPS8....
  00000C10: 1E 13 00 00 0E 44 33 44 58 51 55 41 54 45 52 4E  .....D3DXQUATERN
  00000C20: 49 4F 4E 0F 00 03 10 22 00 00 00 08 44 33 44 43  ION...."....D3DC
  00000C30: 4F 4C 4F 52 19 00 03 10 B0 14 00 00 12 44 53 4D  OLOR.........DSM
  00000C40: 49 58 42 49 4E 56 4F 4C 55 4D 45 50 41 49 52 10  IXBINVOLUMEPAIR.
  00000C50: 00 03 10 54 13 00 00 09 44 33 44 56 45 43 54 4F  ...T....D3DVECTO
  00000C60: 52 0E 00 03 10 22 00 00 00 07 44 33 44 50 4F 4F  R...."....D3DPOO
  00000C70: 4C 11 00 03 10 C3 11 00 00 0A 44 33 44 53 75 72  L.........D3DSur
  00000C80: 66 61 63 65 13 00 03 10 3E 12 00 00 0C 44 33 44  face....>....D3D
  00000C90: 46 49 45 4C 44 54 59 50 45 13 00 03 10 BC 14 00  FIELDTYPE.......
  00000CA0: 00 0C 5F 44 33 44 53 57 41 50 44 41 54 41 10 00  .._D3DSWAPDATA..
  00000CB0: 03 10 EF 14 00 00 09 4C 50 55 4E 4B 4E 4F 57 4E  .......LPUNKNOWN
  00000CC0: 19 00 03 10 EE 14 00 00 12 4C 50 43 44 53 49 33  .........LPCDSI3
  00000CD0: 44 4C 32 4C 49 53 54 45 4E 45 52 12 00 03 10 ED  DL2LISTENER.....
  00000CE0: 14 00 00 0B 44 33 44 43 41 4C 4C 42 41 43 4B 0D  ....D3DCALLBACK.
  00000CF0: 00 03 10 CD 13 00 00 06 48 57 4E 44 5F 5F 24 00  ........HWND__$.
  00000D00: 03 10 B2 11 00 00 1D 44 33 44 44 45 56 49 43 45  .......D3DDEVICE
  00000D10: 5F 43 52 45 41 54 49 4F 4E 5F 50 41 52 41 4D 45  _CREATION_PARAME
  00000D20: 54 45 52 53 15 00 03 10 E0 14 00 00 0E 5F 4C 41  TERS........._LA
  00000D30: 52 47 45 5F 49 4E 54 45 47 45 52 19 00 03 10 D1  RGE_INTEGER.....
  00000D40: 13 00 00 12 5F 44 53 45 46 46 45 43 54 49 4D 41  ...._DSEFFECTIMA
  00000D50: 47 45 44 45 53 43 1D 00 03 10 90 10 00 00 16 5F  GEDESC........._
  00000D60: 44 33 44 54 52 41 4E 53 46 4F 52 4D 53 54 41 54  D3DTRANSFORMSTAT
  00000D70: 45 54 59 50 45 1C 00 03 10 EA 14 00 00 15 5F 44  ETYPE........._D
  00000D80: 33 44 56 45 52 54 45 58 53 48 41 44 45 52 49 4E  3DVERTEXSHADERIN
  00000D90: 50 55 54 15 00 03 10 DB 13 00 00 0E 44 53 4F 55  PUT.........DSOU
  00000DA0: 54 50 55 54 4C 45 56 45 4C 53 11 00 03 10 1F 12  TPUTLEVELS......
  00000DB0: 00 00 0A 5F 44 33 44 4D 41 54 52 49 58 13 00 03  ..._D3DMATRIX...
  00000DC0: 10 E4 14 00 00 0C 4C 50 43 44 53 4D 49 58 42 49  ......LPCDSMIXBI
  00000DD0: 4E 53 11 00 03 10 19 10 00 00 0A 44 33 44 44 45  NS.........D3DDE
  00000DE0: 56 54 59 50 45 0C 00 03 10 11 12 00 00 05 50 4F  VTYPE.........PO
  00000DF0: 49 4E 54 15 00 03 10 56 13 00 00 0E 5F 44 33 44  INT....V...._D3D
  00000E00: 43 4F 4C 4F 52 56 41 4C 55 45 17 00 03 10 D9 13  COLORVALUE......
  00000E10: 00 00 10 5F 44 53 49 33 44 4C 32 4C 49 53 54 45  ..._DSI3DL2LISTE
  00000E20: 4E 45 52 11 00 03 10 0F 12 00 00 0A 44 33 44 50  NER.........D3DP
  00000E30: 61 6C 65 74 74 65 16 00 03 10 24 14 00 00 0F 5F  alette....$...._
  00000E40: 44 53 45 4E 56 45 4C 4F 50 45 44 45 53 43 14 00  DSENVELOPEDESC..
  00000E50: 03 10 C8 11 00 00 0D 5F 44 33 44 47 41 4D 4D 41  ......._D3DGAMMA
  00000E60: 52 41 4D 50 19 00 03 10 B6 10 00 00 12 44 33 44  RAMP.........D3D
  00000E70: 52 45 4E 44 45 52 53 54 41 54 45 54 59 50 45 11  RENDERSTATETYPE.
  00000E80: 00 03 10 29 12 00 00 0A 5F 44 33 44 4C 49 47 48  ...)...._D3DLIGH
  00000E90: 54 38 19 00 03 10 5F 14 00 00 12 49 44 69 72 65  T8...._....IDire
  00000EA0: 63 74 53 6F 75 6E 64 53 74 72 65 61 6D 1B 00 03  ctSoundStream...
  00000EB0: 10 E2 14 00 00 14 4C 50 43 44 53 42 50 4F 53 49  ......LPCDSBPOSI
  00000EC0: 54 49 4F 4E 4E 4F 54 49 46 59 0E 00 03 10 8D 12  TIONNOTIFY......
  00000ED0: 00 00 07 5F 44 33 44 42 4F 58 16 00 03 10 E1 14  ..._D3DBOX......
  00000EE0: 00 00 0F 4C 50 43 44 53 53 54 52 45 41 4D 44 45  ...LPCDSSTREAMDE
  00000EF0: 53 43 17 00 03 10 E6 11 00 00 10 44 33 44 56 6F  SC.........D3DVo
  00000F00: 6C 75 6D 65 54 65 78 74 75 72 65 19 00 03 10 36  lumeTexture....6
  00000F10: 14 00 00 12 5F 44 53 42 50 4F 53 49 54 49 4F 4E  ...._DSBPOSITION
  00000F20: 4E 4F 54 49 46 59 0F 00 03 10 6C 14 00 00 08 53  NOTIFY....l....S
  00000F30: 77 69 7A 7A 6C 65 72 15 00 03 10 13 00 00 00 0E  wizzler.........
  00000F40: 52 45 46 45 52 45 4E 43 45 5F 54 49 4D 45 14 00  REFERENCE_TIME..
  00000F50: 03 10 CB 14 00 00 0D 44 33 44 56 42 4C 41 4E 4B  .......D3DVBLANK
  00000F60: 44 41 54 41 13 00 03 10 A9 14 00 00 0C 5F 44 53  DATA........._DS
  00000F70: 45 46 46 45 43 54 4D 41 50 14 00 03 10 E0 14 00  EFFECTMAP.......
  00000F80: 00 0D 4C 41 52 47 45 5F 49 4E 54 45 47 45 52 15  ..LARGE_INTEGER.
  00000F90: 00 03 10 F2 11 00 00 0E 44 33 44 43 75 62 65 54  ........D3DCubeT
  00000FA0: 65 78 74 75 72 65 13 00 03 10 DC 14 00 00 0C 58  exture.........X
  00000FB0: 4D 65 64 69 61 4F 62 6A 65 63 74 18 00 03 10 C5  MediaObject.....
  00000FC0: 11 00 00 11 5F 44 33 44 52 41 53 54 45 52 5F 53  ...._D3DRASTER_S
  00000FD0: 54 41 54 55 53 14 00 03 10 AB 11 00 00 0D 44 33  TATUS.........D3
  00000FE0: 44 53 57 41 50 45 46 46 45 43 54 16 00 03 10 D9  DSWAPEFFECT.....
  00000FF0: 13 00 00 0F 44 53 49 33 44 4C 32 4C 49 53 54 45  ....DSI3DL2LISTE
  00001000: 4E 45 52 0C 00 03 10 03 04 00 00 05 50 56 4F 49  NER.........PVOI
  00001010: 44 15 00 03 10 CB 14 00 00 0E 5F 44 33 44 56 42  D........._D3DVB
  00001020: 4C 41 4E 4B 44 41 54 41 15 00 03 10 23 11 00 00  LANKDATA....#...
  00001030: 0E 44 33 44 50 41 4C 45 54 54 45 53 49 5A 45 14  .D3DPALETTESIZE.
  00001040: 00 03 10 24 12 00 00 0D 5F 44 33 44 4D 41 54 45  ...$...._D3DMATE
  00001050: 52 49 41 4C 38 15 00 03 10 24 14 00 00 0E 44 53  RIAL8....$....DS
  00001060: 45 4E 56 45 4C 4F 50 45 44 45 53 43 0E 00 03 10  ENVELOPEDESC....
  00001070: 22 00 00 00 07 53 57 49 5A 4E 55 4D 17 00 03 10  "....SWIZNUM....
  00001080: 64 12 00 00 10 5F 44 33 44 53 54 52 45 41 4D 5F  d...._D3DSTREAM_
  00001090: 49 4E 50 55 54 13 00 03 10 36 12 00 00 0C 44 33  INPUT....6....D3
  000010A0: 44 42 41 53 49 53 54 59 50 45 16 00 03 10 40 12  DBASISTYPE....@.
  000010B0: 00 00 0F 44 33 44 46 49 45 4C 44 5F 53 54 41 54  ...D3DFIELD_STAT
  000010C0: 55 53 16 00 03 10 82 12 00 00 0F 5F 44 33 44 56  US........._D3DV
  000010D0: 4F 4C 55 4D 45 5F 44 45 53 43 1D 00 03 10 15 12  OLUME_DESC......
  000010E0: 00 00 16 44 33 44 43 4F 50 59 52 45 43 54 43 4F  ...D3DCOPYRECTCO
  000010F0: 4C 4F 52 46 4F 52 4D 41 54 17 00 03 10 19 12 00  LORFORMAT.......
  00001100: 00 10 44 33 44 43 4F 50 59 52 45 43 54 53 54 41  ..D3DCOPYRECTSTA
  00001110: 54 45 16 00 03 10 C9 14 00 00 0F 44 33 44 53 57  TE.........D3DSW
  00001120: 41 50 43 41 4C 4C 42 41 43 4B 1E 00 03 10 B0 11  APCALLBACK......
  00001130: 00 00 17 5F 44 33 44 50 52 45 53 45 4E 54 5F 50  ..._D3DPRESENT_P
  00001140: 41 52 41 4D 45 54 45 52 53 5F 19 00 03 10 3A 12  ARAMETERS_....:.
  00001150: 00 00 12 5F 44 33 44 52 45 43 54 50 41 54 43 48  ..._D3DRECTPATCH
  00001160: 5F 49 4E 46 4F 0C 00 03 10 22 00 00 00 05 44 57  _INFO...."....DW
  00001170: 4F 52 44 13 00 03 10 38 12 00 00 0C 44 33 44 4F  ORD....8....D3DO
  00001180: 52 44 45 52 54 59 50 45 18 00 03 10 3A 12 00 00  RDERTYPE....:...
  00001190: 11 44 33 44 52 45 43 54 50 41 54 43 48 5F 49 4E  .D3DRECTPATCH_IN
  000011A0: 46 4F 0D 00 03 10 03 04 00 00 06 48 41 4E 44 4C  FO.........HANDL
  000011B0: 45 12 00 03 10 E3 12 00 00 0B 44 33 44 58 56 45  E.........D3DXVE
  000011C0: 43 54 4F 52 34 17 00 03 10 40 12 00 00 10 5F 44  CTOR4....@...._D
  000011D0: 33 44 46 49 45 4C 44 5F 53 54 41 54 55 53 0B 00  3DFIELD_STATUS..
  000011E0: 03 10 21 00 00 00 04 57 4F 52 44 13 00 03 10 21  ..!....WORD....!
  000011F0: 12 00 00 0C 44 33 44 56 49 45 57 50 4F 52 54 38  ....D3DVIEWPORT8
  00001200: 0B 00 03 10 20 00 00 00 04 42 59 54 45 12 00 03  .... ....BYTE...
  00001210: 10 30 14 00 00 0B 5F 44 53 33 44 42 55 46 46 45  .0...._DS3DBUFFE
  00001220: 52 16 00 03 10 8E 11 00 00 0F 44 33 44 43 41 4C  R.........D3DCAL
  00001230: 4C 42 41 43 4B 54 59 50 45 0E 00 03 10 D5 10 00  LBACKTYPE.......
  00001240: 00 07 4C 50 43 56 4F 49 44 0E 00 03 10 1B 12 00  ..LPCVOID.......
  00001250: 00 07 44 33 44 52 45 43 54 0F 00 03 10 C7 14 00  ..D3DRECT.......
  00001260: 00 08 4C 50 44 53 43 41 50 53 12 00 03 10 C4 14  ..LPDSCAPS......
  00001270: 00 00 0B 5F 58 4D 45 44 49 41 49 4E 46 4F 17 00  ..._XMEDIAINFO..
  00001280: 03 10 C5 11 00 00 10 44 33 44 52 41 53 54 45 52  .......D3DRASTER
  00001290: 5F 53 54 41 54 55 53 14 00 03 10 20 14 00 00 0D  _STATUS.... ....
  000012A0: 74 57 41 56 45 46 4F 52 4D 41 54 45 58 0B 00 03  tWAVEFORMATEX...
  000012B0: 10 C6 14 00 00 04 48 57 4E 44 18 00 03 10 36 14  ......HWND....6.
  000012C0: 00 00 11 44 53 42 50 4F 53 49 54 49 4F 4E 4E 4F  ...DSBPOSITIONNO
  000012D0: 54 49 46 59 10 00 03 10 A9 11 00 00 09 44 33 44  TIFY.........D3D
  000012E0: 44 65 76 69 63 65 16 00 03 10 C5 14 00 00 0F 4C  Device.........L
  000012F0: 50 43 44 53 46 49 4C 54 45 52 44 45 53 43 13 00  PCDSFILTERDESC..
  00001300: 03 10 C2 14 00 00 0C 4C 50 58 4D 45 44 49 41 49  .......LPXMEDIAI
  00001310: 4E 46 4F 1E 00 03 10 38 10 00 00 17 5F 44 33 44  NFO....8...._D3D
  00001320: 41 44 41 50 54 45 52 5F 49 44 45 4E 54 49 46 49  ADAPTER_IDENTIFI
  00001330: 45 52 38 0C 00 03 10 11 00 00 00 05 53 48 4F 52  ER8.........SHOR
  00001340: 54 0B 00 03 10 12 00 00 00 04 4C 4F 4E 47 13 00  T.........LONG..
  00001350: 03 10 24 12 00 00 0C 44 33 44 4D 41 54 45 52 49  ..$....D3DMATERI
  00001360: 41 4C 38 10 00 03 10 22 14 00 00 09 44 53 4C 46  AL8...."....DSLF
  00001370: 4F 44 45 53 43 0C 00 03 10 40 00 00 00 05 46 4C  ODESC....@....FL
  00001380: 4F 41 54 1B 00 03 10 93 12 00 00 14 5F 44 33 44  OAT........._D3D
  00001390: 49 4E 44 45 58 42 55 46 46 45 52 5F 44 45 53 43  INDEXBUFFER_DESC
  000013A0: 18 00 03 10 C1 14 00 00 11 5F 44 53 49 33 44 4C  ........._DSI3DL
  000013B0: 32 4F 43 43 4C 55 53 49 4F 4E 1B 00 03 10 17 12  2OCCLUSION......
  000013C0: 00 00 14 44 33 44 43 4F 50 59 52 45 43 54 4F 50  ...D3DCOPYRECTOP
  000013D0: 45 52 41 54 49 4F 4E 11 00 03 10 7C 14 00 00 0A  ERATION....|....
  000013E0: 58 50 52 5F 48 45 41 44 45 52 11 00 03 10 7C 14  XPR_HEADER....|.
  000013F0: 00 00 0A 58 50 52 5F 48 45 41 44 45 52 11 00 03  ...XPR_HEADER...
  00001400: 10 05 13 00 00 0A 44 33 44 58 4D 41 54 52 49 58  ......D3DXMATRIX
  00001410: 14 00 03 10 8F 12 00 00 0D 44 33 44 4C 4F 43 4B  .........D3DLOCK
  00001420: 45 44 5F 42 4F 58 0F 00 03 10 1B 12 00 00 08 5F  ED_BOX........._
  00001430: 44 33 44 52 45 43 54 18 00 03 10 BF 14 00 00 11  D3DRECT.........
  00001440: 44 33 44 56 42 4C 41 4E 4B 43 41 4C 4C 42 41 43  D3DVBLANKCALLBAC
  00001450: 4B 13 00 03 10 D7 13 00 00 0C 44 53 33 44 4C 49  K.........DS3DLI
  00001460: 53 54 45 4E 45 52 1C 00 03 10 22 00 00 00 15 44  STENER...."....D
  00001470: 33 44 53 48 41 44 45 52 43 4F 4E 53 54 41 4E 54  3DSHADERCONSTANT
  00001480: 4D 4F 44 45 16 00 03 10 13 04 00 00 0F 50 52 45  MODE.........PRE
  00001490: 46 45 52 45 4E 43 45 5F 54 49 4D 45 12 00 03 10  FERENCE_TIME....
  000014A0: BC 14 00 00 0B 44 33 44 53 57 41 50 44 41 54 41  .....D3DSWAPDATA
  000014B0: 0D 00 03 10 8D 12 00 00 06 44 33 44 42 4F 58 14  .........D3DBOX.
  000014C0: 00 03 10 BA 14 00 00 0D 5F 44 33 44 54 45 58 54  ........_D3DTEXT
  000014D0: 55 52 45 4F 50 0B 00 03 10 B4 11 00 00 04 52 45  UREOP.........RE
  000014E0: 43 54 18 00 03 10 34 12 00 00 11 44 33 44 50 49  CT....4....D3DPI
  000014F0: 58 45 4C 53 48 41 44 45 52 44 45 46 13 00 03 10  XELSHADERDEF....
  00001500: CB 13 00 00 0C 44 53 53 54 52 45 41 4D 44 45 53  .....DSSTREAMDES
  00001510: 43 17 00 03 10 B8 14 00 00 10 4C 50 43 44 53 49  C.........LPCDSI
  00001520: 33 44 4C 32 42 55 46 46 45 52 16 00 03 10 80 12  3DL2BUFFER......
  00001530: 00 00 0F 5F 44 33 44 4C 4F 43 4B 45 44 5F 52 45  ..._D3DLOCKED_RE
  00001540: 43 54 19 00 03 10 34 12 00 00 12 5F 44 33 44 50  CT....4...._D3DP
  00001550: 69 78 65 6C 53 68 61 64 65 72 44 65 66 1A 00 03  ixelShaderDef...
  00001560: 10 B7 14 00 00 13 5F 44 53 49 33 44 4C 32 4F 42  ......_DSI3DL2OB
  00001570: 53 54 52 55 43 54 49 4F 4E 0E 00 03 10 AF 13 00  STRUCTION.......
  00001580: 00 07 5F 44 53 43 41 50 53 16 00 03 10 B5 14 00  .._DSCAPS.......
  00001590: 00 0F 4C 50 43 58 4D 45 44 49 41 50 41 43 4B 45  ..LPCXMEDIAPACKE
  000015A0: 54 13 00 03 10 AD 13 00 00 0C 49 44 69 72 65 63  T.........IDirec
  000015B0: 74 53 6F 75 6E 64 0C 00 03 10 05 10 00 00 05 5F  tSound........._
  000015C0: 47 55 49 44 0F 00 03 10 66 12 00 00 08 5F 44 33  GUID....f...._D3
  000015D0: 44 54 49 4C 45 0E 00 03 10 B4 11 00 00 07 74 61  DTILE.........ta
  000015E0: 67 52 45 43 54 17 00 03 10 3C 12 00 00 10 44 33  gRECT....<....D3
  000015F0: 44 54 52 49 50 41 54 43 48 5F 49 4E 46 4F 10 00  DTRIPATCH_INFO..
  00001600: 03 10 68 12 00 00 09 44 33 44 4D 45 4D 4F 52 59  ..h....D3DMEMORY
  00001610: 11 00 03 10 54 13 00 00 0A 5F 44 33 44 56 45 43  ....T...._D3DVEC
  00001620: 54 4F 52 18 00 03 10 D3 13 00 00 11 5F 44 53 45  TOR........._DSE
  00001630: 46 46 45 43 54 49 4D 41 47 45 4C 4F 43 13 00 03  FFECTIMAGELOC...
  00001640: 10 C6 13 00 00 0C 44 53 42 55 46 46 45 52 44 45  ......DSBUFFERDE
  00001650: 53 43 14 00 03 10 27 14 00 00 0D 5F 44 53 46 49  SC....'...._DSFI
  00001660: 4C 54 45 52 44 45 53 43 16 00 03 10 7E 12 00 00  LTERDESC....~...
  00001670: 0F 44 33 44 53 55 52 46 41 43 45 5F 44 45 53 43  .D3DSURFACE_DESC
  00001680: 16 00 03 10 B2 14 00 00 0F 4C 50 43 44 53 33 44  .........LPCDS3D
  00001690: 4C 49 53 54 45 4E 45 52 13 00 03 10 27 14 00 00  LISTENER....'...
  000016A0: 0C 44 53 46 49 4C 54 45 52 44 45 53 43 13 00 03  .DSFILTERDESC...
  000016B0: 10 A1 14 00 00 0C 58 4D 45 44 49 41 50 41 43 4B  ......XMEDIAPACK
  000016C0: 45 54 19 00 03 10 1E 14 00 00 12 49 44 69 72 65  ET.........IDire
  000016D0: 63 74 53 6F 75 6E 64 42 75 66 66 65 72 11 00 03  ctSoundBuffer...
  000016E0: 10 2C 14 00 00 0A 5F 44 53 4D 49 58 42 49 4E 53  .,...._DSMIXBINS
  000016F0: 10 00 03 10 3C 10 00 00 09 5F 44 33 44 43 41 50  ....<...._D3DCAP
  00001700: 53 38 13 00 03 10 26 12 00 00 0C 44 33 44 4C 49  S8....&....D3DLI
  00001710: 47 48 54 54 59 50 45 16 00 03 10 FE 11 00 00 0F  GHTTYPE.........
  00001720: 44 33 44 56 65 72 74 65 78 42 75 66 66 65 72 1C  D3DVertexBuffer.
  00001730: 00 03 10 91 12 00 00 15 5F 44 33 44 56 45 52 54  ........_D3DVERT
  00001740: 45 58 42 55 46 46 45 52 5F 44 45 53 43 1A 00 03  EXBUFFER_DESC...
  00001750: 10 93 12 00 00 13 44 33 44 49 4E 44 45 58 42 55  ......D3DINDEXBU
  00001760: 46 46 45 52 5F 44 45 53 43 1A 00 03 10 22 00 00  FFER_DESC...."..
  00001770: 00 13 44 33 44 4D 55 4C 54 49 53 41 4D 50 4C 45  ..D3DMULTISAMPLE
  00001780: 5F 54 59 50 45 10 00 03 10 2E 13 00 00 09 44 33  _TYPE.........D3
  00001790: 44 58 50 4C 41 4E 45 0A 00 03 10 74 00 00 00 03  DXPLANE....t....
  000017A0: 49 4E 54 16 00 03 10 3A 10 00 00 0F 5F 44 33 44  INT....:...._D3D
  000017B0: 44 49 53 50 4C 41 59 4D 4F 44 45 0F 00 03 10 34  DISPLAYMODE....4
  000017C0: 10 00 00 08 44 69 72 65 63 74 33 44 16 00 03 10  ....Direct3D....
  000017D0: B1 14 00 00 0F 4C 50 43 44 53 42 55 46 46 45 52  .....LPCDSBUFFER
  000017E0: 44 45 53 43 1F 00 03 10 31 12 00 00 18 44 33 44  DESC....1....D3D
  000017F0: 56 45 52 54 45 58 41 54 54 52 49 42 55 54 45 46  VERTEXATTRIBUTEF
  00001800: 4F 52 4D 41 54 1A 00 03 10 B0 14 00 00 13 5F 44  ORMAT........._D
  00001810: 53 4D 49 58 42 49 4E 56 4F 4C 55 4D 45 50 41 49  SMIXBINVOLUMEPAI
  00001820: 52 0B 00 03 10 05 10 00 00 04 47 55 49 44 14 00  R.........GUID..
  00001830: 03 10 62 12 00 00 0D 44 33 44 50 75 73 68 42 75  ..b....D3DPushBu
  00001840: 66 66 65 72 1A 00 03 10 13 12 00 00 13 44 33 44  ffer.........D3D
  00001850: 43 4F 50 59 52 45 43 54 52 4F 50 53 54 41 54 45  COPYRECTROPSTATE
  00001860: 10 00 03 10 2C 14 00 00 09 44 53 4D 49 58 42 49  ....,....DSMIXBI
  00001870: 4E 53 0F 00 03 10 73 14 00 00 08 58 47 42 75 66  NS....s....XGBuf
  00001880: 66 65 72 18 00 03 10 78 14 00 00 11 44 33 44 50  fer....x....D3DP
  00001890: 69 78 65 6C 43 6F 6E 74 61 69 6E 65 72 14 00 03  ixelContainer...
  000018A0: 10 D7 13 00 00 0D 5F 44 53 33 44 4C 49 53 54 45  ......_DS3DLISTE
  000018B0: 4E 45 52 13 00 03 10 C8 11 00 00 0C 44 33 44 47  NER.........D3DG
  000018C0: 41 4D 4D 41 52 41 4D 50 25 00 03 10 B2 11 00 00  AMMARAMP%.......
  000018D0: 1E 5F 44 33 44 44 45 56 49 43 45 5F 43 52 45 41  ._D3DDEVICE_CREA
  000018E0: 54 49 4F 4E 5F 50 41 52 41 4D 45 54 45 52 53 16  TION_PARAMETERS.
  000018F0: 00 03 10 AE 14 00 00 0F 50 53 5F 49 4E 50 55 54  ........PS_INPUT
  00001900: 4D 41 50 50 49 4E 47 15 00 03 10 AC 14 00 00 0E  MAPPING.........
  00001910: 4C 50 57 41 56 45 46 4F 52 4D 41 54 45 58 1D 00  LPWAVEFORMATEX..
  00001920: 03 10 38 10 00 00 16 44 33 44 41 44 41 50 54 45  ..8....D3DADAPTE
  00001930: 52 5F 49 44 45 4E 54 49 46 49 45 52 38 1A 00 03  R_IDENTIFIER8...
  00001940: 10 B6 10 00 00 13 5F 44 33 44 52 45 4E 44 45 52  ......_D3DRENDER
  00001950: 53 54 41 54 45 54 59 50 45 11 00 03 10 22 14 00  STATETYPE...."..
  00001960: 00 0A 5F 44 53 4C 46 4F 44 45 53 43 16 00 03 10  .._DSLFODESC....
  00001970: AB 14 00 00 0F 4C 50 43 57 41 56 45 46 4F 52 4D  .....LPCWAVEFORM
  00001980: 41 54 45 58 14 00 03 10 56 13 00 00 0D 44 33 44  ATEX....V....D3D
  00001990: 43 4F 4C 4F 52 56 41 4C 55 45 0F 00 03 10 11 12  COLORVALUE......
  000019A0: 00 00 08 74 61 67 50 4F 49 4E 54 1A 00 03 10 AA  ...tagPOINT.....
  000019B0: 14 00 00 13 4C 50 43 44 53 45 46 46 45 43 54 49  ....LPCDSEFFECTI
  000019C0: 4D 41 47 45 4C 4F 43 0E 00 03 10 12 00 00 00 07  MAGELOC.........
  000019D0: 48 52 45 53 55 4C 54 12 00 03 10 A9 14 00 00 0B  HRESULT.........
  000019E0: 44 53 45 46 46 45 43 54 4D 41 50 0B 00 03 10 75  DSEFFECTMAP....u
  000019F0: 00 00 00 04 55 49 4E 54 14 00 03 10 C6 13 00 00  ....UINT........
  00001A00: 0D 5F 44 53 42 55 46 46 45 52 44 45 53 43 18 00  ._DSBUFFERDESC..
  00001A10: 03 10 A7 14 00 00 11 4C 50 43 44 53 45 4E 56 45  .......LPCDSENVE
  00001A20: 4C 4F 50 45 44 45 53 43 11 00 03 10 D2 11 00 00  LOPEDESC........
  00001A30: 0A 44 33 44 54 65 78 74 75 72 65 0F 00 03 10 45  .D3DTexture....E
  00001A40: 12 00 00 08 44 33 44 46 69 78 75 70 14 00 03 10  ....D3DFixup....
  00001A50: A1 14 00 00 0D 5F 58 4D 45 44 49 41 50 41 43 4B  ....._XMEDIAPACK
  00001A60: 45 54 17 00 03 10 CF 10 00 00 10 44 33 44 50 52  ET.........D3DPR
  00001A70: 49 4D 49 54 49 56 45 54 59 50 45                 IMITIVETYPE

SECTION HEADER #2
  .rdata name
       0 physical address
       0 virtual address
      42 size of raw data
    1EC7 file pointer to raw data (00001EC7 to 00001F08)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
40401040 flags
         Initialized Data
         COMDAT; sym= "unsigned char const * const XGRAPHICS::g_TextureFormat" (?g_TextureFormat@XGRAPHICS@@3QBEB)
         8 byte align
         Read Only

RAW DATA #2
  00000000: 09 09 11 91 11 91 A1 A1 00 00 00 09 04 00 08 08  ................
  00000010: 12 92 A2 0A 00 00 12 12 00 09 11 0A 92 12 A2 0A  ................
  00000020: 12 00 00 00 20 20 00 11 11 11 61 61 51 51 62 62  ....  ....aaQQbb
  00000030: 52 52 11 21 00 12 00 12 11 11 21 21 21 12 12 22  RR.!......!!!.."
  00000040: 22 22                                            ""

SECTION HEADER #3
  .rdata name
       0 physical address
       0 virtual address
      58 size of raw data
    1F09 file pointer to raw data (00001F09 to 00001F60)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
40401040 flags
         Initialized Data
         COMDAT; sym= _D3DDIRTYFROMTEXTURESTATE
         8 byte align
         Read Only

RAW DATA #3
  00000000: 0F 00 00 00 0F 00 00 00 0F 00 00 00 0F 00 00 00  ................
  00000010: 0F 00 00 00 0F 00 00 00 0F 00 00 00 0F 00 00 00  ................
  00000020: 0F 00 00 00 0F 00 00 00 0F 00 00 00 0F 00 00 00  ................
  00000030: 0F 48 00 00 00 08 00 00 00 08 00 00 00 08 00 00  .H..............
  00000040: 00 08 00 00 00 08 00 00 00 08 00 00 00 08 00 00  ................
  00000050: 00 08 00 00 00 04 00 00                          ........

SECTION HEADER #4
  .rdata name
       0 physical address
       0 virtual address
      8C size of raw data
    1F61 file pointer to raw data (00001F61 to 00001FEC)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
40401040 flags
         Initialized Data
         COMDAT; sym= _D3DDIRTYFROMRENDERSTATE
         8 byte align
         Read Only

RAW DATA #4
  00000000: 00 20 00 00 00 20 00 00 00 20 00 00 00 20 00 00  . ... ... ... ..
  00000010: 00 20 00 00 00 20 00 00 0F 00 00 00 0F 00 00 00  . ... ..........
  00000020: 0F 00 00 00 0F 00 00 00 00 12 00 00 00 30 00 00  .............0..
  00000030: 00 10 00 00 00 10 00 00 00 10 00 00 00 10 00 00  ................
  00000040: 00 10 00 00 00 10 00 00 00 10 00 00 00 10 00 00  ................
  00000050: 00 10 00 00 00 10 00 00 00 10 00 00 00 10 00 00  ................
  00000060: 00 01 00 00 00 01 00 00 00 09 00 00 00 01 00 00  ................
  00000070: 00 01 00 00 00 01 00 00 00 01 00 00 00 01 00 00  ................
  00000080: 00 00 00 00 00 00 00 00 00 00 00 00              ............

SECTION HEADER #5
  .rdata name
       0 physical address
       0 virtual address
      10 size of raw data
    1FED file pointer to raw data (00001FED to 00001FFC)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
40301040 flags
         Initialized Data
         COMDAT; sym= _D3DTEXTUREDIRECTENCODE
         4 byte align
         Read Only

RAW DATA #5
  00000000: 00 1B 08 00 40 1B 08 00 80 1B 08 00 C0 1B 08 00  ....@...........

SECTION HEADER #6
  .rdata name
       0 physical address
       0 virtual address
     148 size of raw data
    1FFD file pointer to raw data (00001FFD to 00002144)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
40401040 flags
         Initialized Data
         COMDAT; sym= _D3DSIMPLERENDERSTATEENCODE
         8 byte align
         Read Only

RAW DATA #6
  00000000: 60 02 04 00 64 02 04 00 68 02 04 00 6C 02 04 00  `...d...h...l...
  00000010: 70 02 04 00 74 02 04 00 78 02 04 00 7C 02 04 00  p...t...x...|...
  00000020: 88 02 04 00 8C 02 04 00 60 0A 04 00 64 0A 04 00  ........`...d...
  00000030: 68 0A 04 00 6C 0A 04 00 70 0A 04 00 74 0A 04 00  h...l...p...t...
  00000040: 78 0A 04 00 7C 0A 04 00 80 0A 04 00 84 0A 04 00  x...|...........
  00000050: 88 0A 04 00 8C 0A 04 00 90 0A 04 00 94 0A 04 00  ................
  00000060: 98 0A 04 00 9C 0A 04 00 A0 0A 04 00 A4 0A 04 00  ................
  00000070: A8 0A 04 00 AC 0A 04 00 B0 0A 04 00 B4 0A 04 00  ................
  00000080: B8 0A 04 00 BC 0A 04 00 C0 0A 04 00 C4 0A 04 00  ................
  00000090: C8 0A 04 00 CC 0A 04 00 D0 0A 04 00 D4 0A 04 00  ................
  000000A0: D8 0A 04 00 DC 0A 04 00 F8 17 04 00 20 1E 04 00  ............ ...
  000000B0: 24 1E 04 00 40 1E 04 00 44 1E 04 00 48 1E 04 00  $...@...D...H...
  000000C0: 4C 1E 04 00 50 1E 04 00 54 1E 04 00 58 1E 04 00  L...P...T...X...
  000000D0: 5C 1E 04 00 60 1E 04 00 90 1D 04 00 74 1E 04 00  \...`.......t...
  000000E0: 78 1E 04 00 54 03 04 00 3C 03 04 00 04 03 04 00  x...T...<.......
  000000F0: 00 03 04 00 40 03 04 00 44 03 04 00 48 03 04 00  ....@...D...H...
  00000100: 5C 03 04 00 10 03 04 00 7C 03 04 00 58 03 04 00  \.......|...X...
  00000110: 74 03 04 00 78 03 04 00 64 03 04 00 68 03 04 00  t...x...d...h...
  00000120: 6C 03 04 00 60 03 04 00 50 03 04 00 4C 03 04 00  l...`...P...L...
  00000130: F8 09 04 00 84 03 04 00 88 03 04 00 30 03 04 00  ............0...
  00000140: 34 03 04 00 38 03 04 00                          4...8...

SECTION HEADER #7
  .rdata name
       0 physical address
       0 virtual address
      58 size of raw data
    2145 file pointer to raw data (00002145 to 0000219C)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
40401040 flags
         Initialized Data
         COMDAT; sym= _D3DPRIMITIVETOVERTEXCOUNT
         8 byte align
         Read Only

RAW DATA #7
  00000000: 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  ................
  00000010: 02 00 00 00 00 00 00 00 01 00 00 00 01 00 00 00  ................
  00000020: 01 00 00 00 01 00 00 00 03 00 00 00 00 00 00 00  ................
  00000030: 01 00 00 00 02 00 00 00 01 00 00 00 02 00 00 00  ................
  00000040: 04 00 00 00 00 00 00 00 02 00 00 00 02 00 00 00  ................
  00000050: 00 00 00 00 00 00 00 00                          ........

SECTION HEADER #8
   .text name
       0 physical address
       0 virtual address
       3 size of raw data
    219D file pointer to raw data (0000219D to 0000219F)
       0 file pointer to relocation table
    21A0 file pointer to line numbers
       0 number of relocations
       1 number of line numbers
60101020 flags
         Code
         COMDAT; sym= _D3DSurface_UnlockRect@4
         1 byte align
         Execute Read

RAW DATA #8
  00000000: C2 04 00                                         ...

LINENUMBERS #8

 Symbol index:       1C Base line number:  2678
 Symbol name = _D3DSurface_UnlockRect@4

SECTION HEADER #9
.debug$S name
       0 physical address
       0 virtual address
      53 size of raw data
    21A6 file pointer to raw data (000021A6 to 000021F8)
    21F9 file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #9
  00000000: 3B 00 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  ;...............
  00000010: 03 00 00 00 00 00 00 00 00 00 00 00 98 14 00 00  ................
  00000020: 00 00 00 00 00 00 00 15 44 33 44 53 75 72 66 61  ........D3DSurfa
  00000030: 63 65 5F 55 6E 6C 6F 63 6B 52 65 63 74 10 00 06  ce_UnlockRect...
  00000040: 10 04 00 00 00 51 10 00 00 05 70 54 68 69 73 02  .....Q....pThis.
  00000050: 00 06 00                                         ...

RELOCATIONS #9
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000020  SECREL                     00000000        1C  _D3DSurface_UnlockRect@4
 00000024  SECTION                        0000        1C  _D3DSurface_UnlockRect@4

SECTION HEADER #A
.debug$F name
       0 physical address
       0 virtual address
      10 size of raw data
    220D file pointer to raw data (0000220D to 0000221C)
    221D file pointer to relocation table
       0 file pointer to line numbers
       1 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #A
  00000000: 00 00 00 00 03 00 00 00 00 00 00 00 01 00 00 00  ................

FPO Data (1)
                                             Use Has  Frame
 RVA      Proc Size   Locals  Regs   Prolog  BP  SEH  Type   Params
 00000000         3        0     0        0   N   N    fpo        4

RELOCATIONS #A
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000000  DIR32NB                    00000000        1C  _D3DSurface_UnlockRect@4

SECTION HEADER #B
   .text name
       0 physical address
       0 virtual address
      1A size of raw data
    2227 file pointer to raw data (00002227 to 00002240)
    2241 file pointer to relocation table
    224B file pointer to line numbers
       1 number of relocations
       1 number of line numbers
60101020 flags
         Code
         COMDAT; sym= "public: long __stdcall D3DSurface::LockRect(struct _D3DLOCKED_RECT *,struct tagRECT const *,unsigned long)" (?LockRect@D3DSurface@@QAGJPAU_D3DLOCKED_RECT@@PBUtagRECT@@K@Z)
         1 byte align
         Execute Read

RAW DATA #B
  00000000: FF 74 24 10 FF 74 24 10 FF 74 24 10 FF 74 24 10  .t$..t$..t$..t$.
  00000010: E8 00 00 00 00 33 C0 C2 10 00                    .....3....

RELOCATIONS #B
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000011  REL32                      00000000        2B  _D3DSurface_LockRect@16

LINENUMBERS #B

 Symbol index:       29 Base line number:  2700
 Symbol name = ?LockRect@D3DSurface@@QAGJPAU_D3DLOCKED_RECT@@PBUtagRECT@@K@Z (public: long __stdcall D3DSurface::LockRect(struct _D3DLOCKED_RECT *,struct tagRECT const *,unsigned long))

SECTION HEADER #C
.debug$S name
       0 physical address
       0 virtual address
      8D size of raw data
    2251 file pointer to raw data (00002251 to 000022DD)
    22DE file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #C
  00000000: 3A 00 0B 10 00 00 00 00 00 00 00 00 00 00 00 00  :...............
  00000010: 1A 00 00 00 00 00 00 00 17 00 00 00 C0 11 00 00  ................
  00000020: 00 00 00 00 00 00 00 14 44 33 44 53 75 72 66 61  ........D3DSurfa
  00000030: 63 65 3A 3A 4C 6F 63 6B 52 65 63 74 0F 00 06 10  ce::LockRect....
  00000040: 04 00 00 00 B7 11 00 00 04 74 68 69 73 16 00 06  .........this...
  00000050: 10 08 00 00 00 BE 11 00 00 0B 70 4C 6F 63 6B 65  ..........pLocke
  00000060: 64 52 65 63 74 10 00 06 10 0C 00 00 00 4D 10 00  dRect........M..
  00000070: 00 05 70 52 65 63 74 10 00 06 10 10 00 00 00 22  ..pRect........"
  00000080: 00 00 00 05 46 6C 61 67 73 02 00 06 00           ....Flags....

RELOCATIONS #C
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000020  SECREL                     00000000        29  ?LockRect@D3DSurface@@QAGJPAU_D3DLOCKED_RECT@@PBUtagRECT@@K@Z (public: long __stdcall D3DSurface::LockRect(struct _D3DLOCKED_RECT *,struct tagRECT const *,unsigned long))
 00000024  SECTION                        0000        29  ?LockRect@D3DSurface@@QAGJPAU_D3DLOCKED_RECT@@PBUtagRECT@@K@Z (public: long __stdcall D3DSurface::LockRect(struct _D3DLOCKED_RECT *,struct tagRECT const *,unsigned long))

SECTION HEADER #D
.debug$F name
       0 physical address
       0 virtual address
      10 size of raw data
    22F2 file pointer to raw data (000022F2 to 00002301)
    2302 file pointer to relocation table
       0 file pointer to line numbers
       1 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #D
  00000000: 00 00 00 00 1A 00 00 00 00 00 00 00 04 00 00 00  ................

FPO Data (1)
                                             Use Has  Frame
 RVA      Proc Size   Locals  Regs   Prolog  BP  SEH  Type   Params
 00000000        26        0     0        0   N   N    fpo       16

RELOCATIONS #D
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000000  DIR32NB                    00000000        29  ?LockRect@D3DSurface@@QAGJPAU_D3DLOCKED_RECT@@PBUtagRECT@@K@Z (public: long __stdcall D3DSurface::LockRect(struct _D3DLOCKED_RECT *,struct tagRECT const *,unsigned long))

SECTION HEADER #E
   .text name
       0 physical address
       0 virtual address
       5 size of raw data
    230C file pointer to raw data (0000230C to 00002310)
       0 file pointer to relocation table
    2311 file pointer to line numbers
       0 number of relocations
       1 number of line numbers
60101020 flags
         Code
         COMDAT; sym= "public: long __stdcall D3DSurface::UnlockRect(void)" (?UnlockRect@D3DSurface@@QAGJXZ)
         1 byte align
         Execute Read

RAW DATA #E
  00000000: 33 C0 C2 04 00                                   3....

LINENUMBERS #E

 Symbol index:       37 Base line number:  2701
 Symbol name = ?UnlockRect@D3DSurface@@QAGJXZ (public: long __stdcall D3DSurface::UnlockRect(void))

SECTION HEADER #F
.debug$S name
       0 physical address
       0 virtual address
      53 size of raw data
    2317 file pointer to raw data (00002317 to 00002369)
    236A file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #F
  00000000: 3C 00 0B 10 00 00 00 00 00 00 00 00 00 00 00 00  <...............
  00000010: 05 00 00 00 00 00 00 00 02 00 00 00 C1 11 00 00  ................
  00000020: 00 00 00 00 00 00 00 16 44 33 44 53 75 72 66 61  ........D3DSurfa
  00000030: 63 65 3A 3A 55 6E 6C 6F 63 6B 52 65 63 74 0F 00  ce::UnlockRect..
  00000040: 06 10 04 00 00 00 B7 11 00 00 04 74 68 69 73 02  ...........this.
  00000050: 00 06 00                                         ...

RELOCATIONS #F
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000020  SECREL                     00000000        37  ?UnlockRect@D3DSurface@@QAGJXZ (public: long __stdcall D3DSurface::UnlockRect(void))
 00000024  SECTION                        0000        37  ?UnlockRect@D3DSurface@@QAGJXZ (public: long __stdcall D3DSurface::UnlockRect(void))

SECTION HEADER #10
.debug$F name
       0 physical address
       0 virtual address
      10 size of raw data
    237E file pointer to raw data (0000237E to 0000238D)
    238E file pointer to relocation table
       0 file pointer to line numbers
       1 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #10
  00000000: 00 00 00 00 05 00 00 00 00 00 00 00 01 00 00 00  ................

FPO Data (1)
                                             Use Has  Frame
 RVA      Proc Size   Locals  Regs   Prolog  BP  SEH  Type   Params
 00000000         5        0     0        0   N   N    fpo        4

RELOCATIONS #10
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000000  DIR32NB                    00000000        37  ?UnlockRect@D3DSurface@@QAGJXZ (public: long __stdcall D3DSurface::UnlockRect(void))

SECTION HEADER #11
   .text name
       0 physical address
       0 virtual address
     297 size of raw data
    2398 file pointer to raw data (00002398 to 0000262E)
    262F file pointer to relocation table
    26D9 file pointer to line numbers
      11 number of relocations
      33 number of line numbers
60101020 flags
         Code
         COMDAT; sym= _XGWriteSurfaceOrTextureToXPR@12
         1 byte align
         Execute Read

RAW DATA #11
  00000000: 55 8B EC 81 EC 30 09 00 00 57 8B 7D 08 8B 07 25  U....0...W.}...%
  00000010: 00 00 07 00 3D 00 00 04 00 89 45 EC 74 11 3D 00  ....=.....E.t.=.
  00000020: 00 05 00 74 0A B8 05 40 00 80 E9 63 02 00 00 8B  ...t...@...c....
  00000030: 57 0C 8B C2 C1 E8 04 8A CA C0 E9 02 53 83 E0 0F  W...........S...
  00000040: 80 E1 01 33 DB 83 F8 03 56 88 4D F0 75 08 3A CB  ...3....V.M.u.:.
  00000050: C6 45 F4 01 74 03 88 5D F4 8B 4F 10 3B CB 75 34  .E..t..]..O.;.u4
  00000060: 8B CA C1 E9 14 83 E1 0F 33 C0 40 D3 E0 8B CA C1  ........3.@.....
  00000070: E9 18 33 FF 83 E1 0F 47 D3 E7 8B F2 8B CA 33 D2  ..3....G......3.
  00000080: C1 EE 10 C1 E9 1C 42 83 E6 0F 89 7D FC 8B 7D 08  ......B....}..}.
  00000090: D3 E2 EB 19 8B C1 33 F6 BA FF 0F 00 00 23 C2 C1  ......3......#..
  000000A0: E9 0C 46 23 CA 40 41 33 D2 89 4D FC 42 8D 4D F0  ..F#.@A3..M.B.M.
  000000B0: 51 8D 4D F0 51 FF 75 F4 0F B6 4F 0D FF 75 F0 53  Q.M.Q.u...O..u.S
  000000C0: 51 56 52 FF 75 FC 50 E8 00 00 00 00 53 53 6A 02  QVR.u.P.....SSj.
  000000D0: 53 53 68 00 00 00 40 FF 75 0C 89 45 FC E8 00 00  SSh...@.u..E....
  000000E0: 00 00 8B F0 83 FE FF 89 75 E8 75 27 E8 00 00 00  ........u.u'....
  000000F0: 00 50 FF 75 0C 8D 85 D0 FE FF FF 68 00 00 00 00  .P.u.......h....
  00000100: 50 E8 00 00 00 00 83 C4 10 B8 05 40 00 80 E9 7D  P..........@...}
  00000110: 01 00 00 8B 45 FC 05 00 08 00 00 53 89 45 DC 8D  ....E......S.E..
  00000120: 45 08 50 6A 0C 8D 45 D8 50 56 C7 45 D8 58 50 52  E.Pj..E.PV.E.XPR
  00000130: 30 C7 45 E0 00 08 00 00 E8 00 00 00 00 81 7D EC  0.E...........}.
  00000140: 00 00 05 00 8B 07 75 0F 39 5D 10 74 0A 25 FF FF  ......u.9].t.%..
  00000150: FC FF 0D 00 00 04 00 25 FF FF FF FE 53 89 45 E4  .......%....S.E.
  00000160: 8D 45 08 50 6A 04 8D 45 E4 50 56 E8 00 00 00 00  .E.Pj..E.PV.....
  00000170: 53 8D 45 08 50 6A 04 8D 45 F8 50 56 89 5D F8 E8  S.E.Pj..E.PV.]..
  00000180: 00 00 00 00 53 8D 45 08 50 6A 04 8D 45 F8 50 56  ....S.E.Pj..E.PV
  00000190: C7 45 F8 01 00 00 00 E8 00 00 00 00 53 8D 45 08  .E..........S.E.
  000001A0: 50 6A 08 8D 47 0C 50 56 E8 00 00 00 00 6A 40 53  Pj..G.PV.....j@S
  000001B0: 8D 45 D0 50 57 E8 00 00 00 00 81 7D EC 00 00 04  .E.PW......}....
  000001C0: 00 8B 45 D4 89 45 F4 74 3A 39 5D 10 75 35 53 8D  ..E..E.t:9].u5S.
  000001D0: 45 08 50 6A 04 8D 45 F8 50 56 89 5D F8 E8 00 00  E.Pj..E.PV.]....
  000001E0: 00 00 83 4D F8 FF 53 8D 45 08 50 6A 04 8D 45 F8  ...M..S.E.Pj..E.
  000001F0: 50 56 E8 00 00 00 00 53 8D 45 08 50 68 D8 07 00  PV.....S.E.Ph...
  00000200: 00 EB 1F 83 4D F8 FF 53 8D 45 08 50 6A 04 8D 45  ....M..S.E.Pj..E
  00000210: F8 50 56 E8 00 00 00 00 53 8D 45 08 50 68 DC 07  .PV.....S.E.Ph..
  00000220: 00 00 8D 85 D0 F6 FF FF 50 56 E8 00 00 00 00 39  ........PV.....9
  00000230: 5D FC 7E 54 8B 4D FC B8 00 08 00 00 3B C8 89 45  ].~T.M......;..E
  00000240: 0C 7F 03 89 4D 0C 8B 4D 0C 8B 75 F4 8B C1 C1 E9  ....M..M..u.....
  00000250: 02 8D BD D0 F6 FF FF F3 A5 8B C8 53 8D 45 08 50  ...........S.E.P
  00000260: FF 75 0C 8D 85 D0 F6 FF FF 50 FF 75 E8 83 E1 03  .u.......P.u....
  00000270: F3 A4 E8 00 00 00 00 8B 45 0C 29 45 FC 01 45 F4  ........E.)E..E.
  00000280: 39 5D FC 7F AF 8B 75 E8 56 E8 00 00 00 00 33 C0  9]....u.V.....3.
  00000290: 5E 5B 5F C9 C2 0C 00                             ^[_....

RELOCATIONS #11
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 000000C8  REL32                      00000000        53  ?EncodeFormat@XGRAPHICS@@YGKKKKKW4_D3DFORMAT@@K_N1PAK2@Z (unsigned long __stdcall XGRAPHICS::EncodeFormat(unsigned long,unsigned long,unsigned long,unsigned long,enum _D3DFORMAT,unsigned long,bool,bool,unsigned long *,unsigned long *))
 000000DE  REL32                      00000000        52  _CreateFileA@28
 000000ED  REL32                      00000000        51  _GetLastError@0
 000000FC  DIR32                      00000000        50  ??_C@_0CF@GEEGBDKJ@Unable?5to?5open?5file?5?$CI?$CFs?$CJ?3?5?5error@ (`string')
 00000102  REL32                      00000000        4D  _sprintf
 00000139  REL32                      00000000        4C  _WriteFile@20
 0000016C  REL32                      00000000        4C  _WriteFile@20
 00000180  REL32                      00000000        4C  _WriteFile@20
 00000198  REL32                      00000000        4C  _WriteFile@20
 000001A9  REL32                      00000000        4C  _WriteFile@20
 000001B6  REL32                      00000000        2B  _D3DSurface_LockRect@16
 000001DE  REL32                      00000000        4C  _WriteFile@20
 000001F3  REL32                      00000000        4C  _WriteFile@20
 00000214  REL32                      00000000        4C  _WriteFile@20
 0000022B  REL32                      00000000        4C  _WriteFile@20
 00000273  REL32                      00000000        4C  _WriteFile@20
 0000028A  REL32                      00000000        4B  _CloseHandle@4

LINENUMBERS #11

 Symbol index:       49 Base line number:    33
 Symbol name = _XGWriteSurfaceOrTextureToXPR@12
 0000000A(   41)  00000014(   42)  00000025(   45)  0000002F(   49)
 00000037(   50)  00000043(   55)  00000050(   56)  00000056(   58)
 00000059(   64)  00000060(   68)  0000006D(   69)  0000007C(   70)
 0000008D(   72)  00000094(   76)  0000009F(   77)  000000A7(   78)
 000000AD(   91)  000000CC(  104)  000000E4(  106)  000000EC(  109)
 00000109(  111)  00000113(  119)  0000011B(  122)  0000013D(  125)
 0000014D(  128)  00000152(  130)  00000157(  133)  0000015C(  135)
 00000170(  139)  00000184(  143)  0000019C(  146)  000001AD(  151)
 000001BA(  154)  000001CE(  166)  000001E2(  168)  000001E6(  169)
 000001F7(  171)  00000203(  157)  00000207(  158)  00000218(  160)
 0000022F(  173)  00000234(  176)  00000246(  177)  0000025B(  178)
 00000277(  179)  0000027D(  180)  00000285(  173)  00000288(  184)
 0000028E(  187)  00000293(  188)

SECTION HEADER #12
  .rdata name
       0 physical address
       0 virtual address
      25 size of raw data
    280B file pointer to raw data (0000280B to 0000282F)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
40301040 flags
         Initialized Data
         COMDAT; sym= "`string'" (??_C@_0CF@GEEGBDKJ@Unable?5to?5open?5file?5?$CI?$CFs?$CJ?3?5?5error@)
         4 byte align
         Read Only

RAW DATA #12
  00000000: 55 6E 61 62 6C 65 20 74 6F 20 6F 70 65 6E 20 66  Unable to open f
  00000010: 69 6C 65 20 28 25 73 29 3A 20 20 65 72 72 6F 72  ile (%s):  error
  00000020: 20 25 78 0A 00                                    %x..

SECTION HEADER #13
.debug$S name
       0 physical address
       0 virtual address
     1C9 size of raw data
    2830 file pointer to raw data (00002830 to 000029F8)
    29F9 file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #13
  00000000: 42 00 0B 10 00 00 00 00 00 00 00 00 00 00 00 00  B...............
  00000010: 97 02 00 00 0A 00 00 00 93 02 00 00 9F 14 00 00  ................
  00000020: 00 00 00 00 00 00 01 1C 58 47 57 72 69 74 65 53  ........XGWriteS
  00000030: 75 72 66 61 63 65 4F 72 54 65 78 74 75 72 65 54  urfaceOrTextureT
  00000040: 6F 58 50 52 14 00 06 10 08 00 00 00 69 12 00 00  oXPR........i...
  00000050: 09 70 52 65 73 6F 75 72 63 65 10 00 06 10 0C 00  .pResource......
  00000060: 00 00 75 14 00 00 05 63 50 61 74 68 21 00 06 10  ..u....cPath!...
  00000070: 10 00 00 00 74 00 00 00 16 62 57 72 69 74 65 53  ....t....bWriteS
  00000080: 75 72 66 61 63 65 41 73 54 65 78 74 75 72 65 0F  urfaceAsTexture.
  00000090: 00 06 10 EC FF FF FF 22 00 00 00 04 54 79 70 65  ......."....Type
  000000A0: 0F 00 06 10 D8 FF FF FF 7C 14 00 00 04 78 70 72  ........|....xpr
  000000B0: 68 17 00 06 10 08 00 00 00 22 00 00 00 0C 42 79  h........"....By
  000000C0: 74 65 73 57 72 69 74 74 65 6E 14 00 06 10 F0 FF  tesWritten......
  000000D0: FF FF 70 00 00 00 09 69 73 43 75 62 65 4D 61 70  ..p....isCubeMap
  000000E0: 10 00 06 10 E8 FF FF FF 03 04 00 00 05 68 46 69  .............hFi
  000000F0: 6C 65 10 00 06 10 D0 F6 FF FF 79 14 00 00 05 63  le........y....c
  00000100: 68 75 6E 6B 0F 00 06 10 F0 FF FF FF 22 00 00 00  hunk........"...
  00000110: 04 74 65 6D 70 11 00 06 10 FC FF FF FF 22 00 00  .temp........"..
  00000120: 00 06 48 65 69 67 68 74 10 00 06 10 F4 FF FF FF  ..Height........
  00000130: 20 04 00 00 05 70 42 69 74 73 13 00 06 10 F4 FF   ....pBits......
  00000140: FF FF 70 00 00 00 08 69 73 56 6F 6C 75 6D 65 11  ..p....isVolume.
  00000150: 00 06 10 E4 FF FF FF 22 00 00 00 06 43 6F 6D 6D  ......."....Comm
  00000160: 6F 6E 1A 00 06 10 FC FF FF FF 74 00 00 00 0F 64  on........t....d
  00000170: 77 52 65 73 6F 75 72 63 65 42 79 74 65 73 10 00  wResourceBytes..
  00000180: 06 10 F8 FF FF FF 22 00 00 00 05 64 77 56 61 6C  ......"....dwVal
  00000190: 0D 00 06 10 D0 FF FF FF 80 12 00 00 02 6C 72 0E  .............lr.
  000001A0: 00 06 10 D0 FE FF FF 7D 14 00 00 03 62 75 66 14  .......}....buf.
  000001B0: 00 06 10 0C 00 00 00 22 00 00 00 09 63 68 75 6E  ......."....chun
  000001C0: 6B 73 69 7A 65 02 00 06 00                       ksize....

RELOCATIONS #13
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000020  SECREL                     00000000        49  _XGWriteSurfaceOrTextureToXPR@12
 00000024  SECTION                        0000        49  _XGWriteSurfaceOrTextureToXPR@12

SECTION HEADER #14
.debug$F name
       0 physical address
       0 virtual address
      10 size of raw data
    2A0D file pointer to raw data (00002A0D to 00002A1C)
    2A1D file pointer to relocation table
       0 file pointer to line numbers
       1 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #14
  00000000: 00 00 00 00 97 02 00 00 4D 02 00 00 03 00 0A D3  ........M.......

FPO Data (1)
                                             Use Has  Frame
 RVA      Proc Size   Locals  Regs   Prolog  BP  SEH  Type   Params
 00000000       663     2356     3       10   Y   N    std       12

RELOCATIONS #14
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000000  DIR32NB                    00000000        49  _XGWriteSurfaceOrTextureToXPR@12

SECTION HEADER #15
.debug$T name
       0 physical address
       0 virtual address
    EE50 size of raw data
    2A27 file pointer to raw data (00002A27 to 00011876)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
42100040 flags
         Initialized Data
         Discardable
         1 byte align
         Read Only

RAW DATA #15
  00000000: 02 00 00 00 1A 00 05 10 00 00 80 00 00 00 00 00  ................
  00000010: 00 00 00 00 00 00 00 00 00 00 05 5F 47 55 49 44  ..........._GUID
  00000020: 0A 00 01 10 00 10 00 00 01 00 F2 F1 0A 00 02 10  ................
  00000030: 01 10 00 00 2A 00 00 00 0E 00 03 10 20 00 00 00  ....*....... ...
  00000040: 11 00 00 00 08 00 00 F1 42 00 03 12 05 14 03 00  ........B.......
  00000050: 22 00 00 00 00 00 05 44 61 74 61 31 05 14 03 00  "......Data1....
  00000060: 21 00 00 00 04 00 05 44 61 74 61 32 05 14 03 00  !......Data2....
  00000070: 21 00 00 00 06 00 05 44 61 74 61 33 05 14 03 00  !......Data3....
  00000080: 03 10 00 00 08 00 05 44 61 74 61 34 1A 00 05 10  .......Data4....
  00000090: 04 00 00 00 04 10 00 00 00 00 00 00 00 00 00 00  ................
  000000A0: 10 00 05 5F 47 55 49 44 0A 00 02 10 03 04 00 00  ..._GUID........
  000000B0: 0A 00 00 00 1E 00 05 10 00 00 80 00 00 00 00 00  ................
  000000C0: 00 00 00 00 00 00 00 00 00 00 08 44 69 72 65 63  ...........Direc
  000000D0: 74 33 44 F1 0A 00 02 10 07 10 00 00 0A 00 00 00  t3D.............
  000000E0: 06 00 01 12 00 00 00 00 1A 00 09 10 22 00 00 00  ............"...
  000000F0: 07 10 00 00 00 00 00 00 07 00 00 00 09 10 00 00  ................
  00000100: 00 00 00 00 1A 00 09 10 75 00 00 00 07 10 00 00  ........u.......
  00000110: 00 00 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  00000120: 2E 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  ................
  00000130: 00 00 00 00 00 00 17 5F 44 33 44 41 44 41 50 54  ......._D3DADAPT
  00000140: 45 52 5F 49 44 45 4E 54 49 46 49 45 52 38 F2 F1  ER_IDENTIFIER8..
  00000150: 0A 00 02 10 0C 10 00 00 0A 00 00 00 12 00 01 12  ................
  00000160: 03 00 00 00 75 00 00 00 22 00 00 00 0D 10 00 00  ....u...".......
  00000170: 1A 00 09 10 12 00 00 00 07 10 00 00 00 00 00 00  ................
  00000180: 07 00 03 00 0E 10 00 00 00 00 00 00 0A 00 01 12  ................
  00000190: 01 00 00 00 75 00 00 00 1A 00 09 10 75 00 00 00  ....u.......u...
  000001A0: 07 10 00 00 00 00 00 00 07 00 01 00 10 10 00 00  ................
  000001B0: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  000001C0: 00 00 00 00 00 00 00 00 00 00 0F 5F 44 33 44 44  ..........._D3DD
  000001D0: 49 53 50 4C 41 59 4D 4F 44 45 F2 F1 0A 00 02 10  ISPLAYMODE......
  000001E0: 12 10 00 00 0A 00 00 00 12 00 01 12 03 00 00 00  ................
  000001F0: 75 00 00 00 75 00 00 00 13 10 00 00 1A 00 09 10  u...u...........
  00000200: 12 00 00 00 07 10 00 00 00 00 00 00 07 00 03 00  ................
  00000210: 14 10 00 00 00 00 00 00 0E 00 01 12 02 00 00 00  ................
  00000220: 75 00 00 00 13 10 00 00 1A 00 09 10 12 00 00 00  u...............
  00000230: 07 10 00 00 00 00 00 00 07 00 02 00 16 10 00 00  ................
  00000240: 00 00 00 00 6A 00 03 12 03 04 03 00 01 00 0E 44  ....j..........D
  00000250: 33 44 44 45 56 54 59 50 45 5F 48 41 4C F3 F2 F1  3DDEVTYPE_HAL...
  00000260: 03 04 03 00 02 00 0E 44 33 44 44 45 56 54 59 50  .......D3DDEVTYP
  00000270: 45 5F 52 45 46 F3 F2 F1 03 04 03 00 03 00 0D 44  E_REF..........D
  00000280: 33 44 44 45 56 54 59 50 45 5F 53 57 03 04 03 00  3DDEVTYPE_SW....
  00000290: 04 80 FF FF FF 7F 16 44 33 44 44 45 56 54 59 50  .......D3DDEVTYP
  000002A0: 45 5F 46 4F 52 43 45 5F 44 57 4F 52 44 F3 F2 F1  E_FORCE_DWORD...
  000002B0: 1A 00 07 10 04 00 00 00 74 00 00 00 18 10 00 00  ........t.......
  000002C0: 0B 5F 44 33 44 44 45 56 54 59 50 45 42 06 03 12  ._D3DDEVTYPEB...
  000002D0: 03 04 03 00 00 80 FF 0E 44 33 44 46 4D 54 5F 55  ........D3DFMT_U
  000002E0: 4E 4B 4E 4F 57 4E F2 F1 03 04 03 00 06 00 0F 44  NKNOWN.........D
  000002F0: 33 44 46 4D 54 5F 41 38 52 38 47 38 42 38 F2 F1  3DFMT_A8R8G8B8..
  00000300: 03 04 03 00 07 00 0F 44 33 44 46 4D 54 5F 58 38  .......D3DFMT_X8
  00000310: 52 38 47 38 42 38 F2 F1 03 04 03 00 05 00 0D 44  R8G8B8.........D
  00000320: 33 44 46 4D 54 5F 52 35 47 36 42 35 03 04 03 00  3DFMT_R5G6B5....
  00000330: 27 00 0D 44 33 44 46 4D 54 5F 52 36 47 35 42 35  '..D3DFMT_R6G5B5
  00000340: 03 04 03 00 03 00 0F 44 33 44 46 4D 54 5F 58 31  .......D3DFMT_X1
  00000350: 52 35 47 35 42 35 F2 F1 03 04 03 00 02 00 0F 44  R5G5B5.........D
  00000360: 33 44 46 4D 54 5F 41 31 52 35 47 35 42 35 F2 F1  3DFMT_A1R5G5B5..
  00000370: 03 04 03 00 04 00 0F 44 33 44 46 4D 54 5F 41 34  .......D3DFMT_A4
  00000380: 52 34 47 34 42 34 F2 F1 03 04 03 00 19 00 09 44  R4G4B4.........D
  00000390: 33 44 46 4D 54 5F 41 38 03 04 03 00 3A 00 0F 44  3DFMT_A8....:..D
  000003A0: 33 44 46 4D 54 5F 41 38 42 38 47 38 52 38 F2 F1  3DFMT_A8B8G8R8..
  000003B0: 03 04 03 00 3B 00 0F 44 33 44 46 4D 54 5F 42 38  ....;..D3DFMT_B8
  000003C0: 47 38 52 38 41 38 F2 F1 03 04 03 00 39 00 0F 44  G8R8A8......9..D
  000003D0: 33 44 46 4D 54 5F 52 34 47 34 42 34 41 34 F2 F1  3DFMT_R4G4B4A4..
  000003E0: 03 04 03 00 38 00 0F 44 33 44 46 4D 54 5F 52 35  ....8..D3DFMT_R5
  000003F0: 47 35 42 35 41 31 F2 F1 03 04 03 00 3C 00 0F 44  G5B5A1......<..D
  00000400: 33 44 46 4D 54 5F 52 38 47 38 42 38 41 38 F2 F1  3DFMT_R8G8B8A8..
  00000410: 03 04 03 00 29 00 0B 44 33 44 46 4D 54 5F 52 38  ....)..D3DFMT_R8
  00000420: 42 38 F2 F1 03 04 03 00 28 00 0B 44 33 44 46 4D  B8......(..D3DFM
  00000430: 54 5F 47 38 42 38 F2 F1 03 04 03 00 0B 00 09 44  T_G8B8.........D
  00000440: 33 44 46 4D 54 5F 50 38 03 04 03 00 00 00 09 44  3DFMT_P8.......D
  00000450: 33 44 46 4D 54 5F 4C 38 03 04 03 00 1A 00 0B 44  3DFMT_L8.......D
  00000460: 33 44 46 4D 54 5F 41 38 4C 38 F2 F1 03 04 03 00  3DFMT_A8L8......
  00000470: 01 00 0A 44 33 44 46 4D 54 5F 41 4C 38 F3 F2 F1  ...D3DFMT_AL8...
  00000480: 03 04 03 00 32 00 0A 44 33 44 46 4D 54 5F 4C 31  ....2..D3DFMT_L1
  00000490: 36 F3 F2 F1 03 04 03 00 28 00 0B 44 33 44 46 4D  6.......(..D3DFM
  000004A0: 54 5F 56 38 55 38 F2 F1 03 04 03 00 27 00 0D 44  T_V8U8......'..D
  000004B0: 33 44 46 4D 54 5F 4C 36 56 35 55 35 03 04 03 00  3DFMT_L6V5U5....
  000004C0: 07 00 0F 44 33 44 46 4D 54 5F 58 38 4C 38 56 38  ...D3DFMT_X8L8V8
  000004D0: 55 38 F2 F1 03 04 03 00 3A 00 0F 44 33 44 46 4D  U8......:..D3DFM
  000004E0: 54 5F 51 38 57 38 56 38 55 38 F2 F1 03 04 03 00  T_Q8W8V8U8......
  000004F0: 33 00 0D 44 33 44 46 4D 54 5F 56 31 36 55 31 36  3..D3DFMT_V16U16
  00000500: 03 04 03 00 2C 00 13 44 33 44 46 4D 54 5F 44 31  ....,..D3DFMT_D1
  00000510: 36 5F 4C 4F 43 4B 41 42 4C 45 F2 F1 03 04 03 00  6_LOCKABLE......
  00000520: 2C 00 0A 44 33 44 46 4D 54 5F 44 31 36 F3 F2 F1  ,..D3DFMT_D16...
  00000530: 03 04 03 00 2A 00 0C 44 33 44 46 4D 54 5F 44 32  ....*..D3DFMT_D2
  00000540: 34 53 38 F1 03 04 03 00 2D 00 0A 44 33 44 46 4D  4S8.....-..D3DFM
  00000550: 54 5F 46 31 36 F3 F2 F1 03 04 03 00 2B 00 0C 44  T_F16.......+..D
  00000560: 33 44 46 4D 54 5F 46 32 34 53 38 F1 03 04 03 00  3DFMT_F24S8.....
  00000570: 24 00 0B 44 33 44 46 4D 54 5F 59 55 59 32 F2 F1  $..D3DFMT_YUY2..
  00000580: 03 04 03 00 25 00 0B 44 33 44 46 4D 54 5F 55 59  ....%..D3DFMT_UY
  00000590: 56 59 F2 F1 03 04 03 00 0C 00 0B 44 33 44 46 4D  VY.........D3DFM
  000005A0: 54 5F 44 58 54 31 F2 F1 03 04 03 00 0E 00 0B 44  T_DXT1.........D
  000005B0: 33 44 46 4D 54 5F 44 58 54 32 F2 F1 03 04 03 00  3DFMT_DXT2......
  000005C0: 0E 00 0B 44 33 44 46 4D 54 5F 44 58 54 33 F2 F1  ...D3DFMT_DXT3..
  000005D0: 03 04 03 00 0F 00 0B 44 33 44 46 4D 54 5F 44 58  .......D3DFMT_DX
  000005E0: 54 34 F2 F1 03 04 03 00 0F 00 0B 44 33 44 46 4D  T4.........D3DFM
  000005F0: 54 5F 44 58 54 35 F2 F1 03 04 03 00 10 00 13 44  T_DXT5.........D
  00000600: 33 44 46 4D 54 5F 4C 49 4E 5F 41 31 52 35 47 35  3DFMT_LIN_A1R5G5
  00000610: 42 35 F2 F1 03 04 03 00 1D 00 13 44 33 44 46 4D  B5.........D3DFM
  00000620: 54 5F 4C 49 4E 5F 41 34 52 34 47 34 42 34 F2 F1  T_LIN_A4R4G4B4..
  00000630: 03 04 03 00 1F 00 0D 44 33 44 46 4D 54 5F 4C 49  .......D3DFMT_LI
  00000640: 4E 5F 41 38 03 04 03 00 3F 00 13 44 33 44 46 4D  N_A8....?..D3DFM
  00000650: 54 5F 4C 49 4E 5F 41 38 42 38 47 38 52 38 F2 F1  T_LIN_A8B8G8R8..
  00000660: 03 04 03 00 12 00 13 44 33 44 46 4D 54 5F 4C 49  .......D3DFMT_LI
  00000670: 4E 5F 41 38 52 38 47 38 42 38 F2 F1 03 04 03 00  N_A8R8G8B8......
  00000680: 40 00 13 44 33 44 46 4D 54 5F 4C 49 4E 5F 42 38  @..D3DFMT_LIN_B8
  00000690: 47 38 52 38 41 38 F2 F1 03 04 03 00 17 00 0F 44  G8R8A8.........D
  000006A0: 33 44 46 4D 54 5F 4C 49 4E 5F 47 38 42 38 F2 F1  3DFMT_LIN_G8B8..
  000006B0: 03 04 03 00 3E 00 13 44 33 44 46 4D 54 5F 4C 49  ....>..D3DFMT_LI
  000006C0: 4E 5F 52 34 47 34 42 34 41 34 F2 F1 03 04 03 00  N_R4G4B4A4......
  000006D0: 3D 00 13 44 33 44 46 4D 54 5F 4C 49 4E 5F 52 35  =..D3DFMT_LIN_R5
  000006E0: 47 35 42 35 41 31 F2 F1 03 04 03 00 11 00 11 44  G5B5A1.........D
  000006F0: 33 44 46 4D 54 5F 4C 49 4E 5F 52 35 47 36 42 35  3DFMT_LIN_R5G6B5
  00000700: 03 04 03 00 37 00 11 44 33 44 46 4D 54 5F 4C 49  ....7..D3DFMT_LI
  00000710: 4E 5F 52 36 47 35 42 35 03 04 03 00 16 00 0F 44  N_R6G5B5.......D
  00000720: 33 44 46 4D 54 5F 4C 49 4E 5F 52 38 42 38 F2 F1  3DFMT_LIN_R8B8..
  00000730: 03 04 03 00 41 00 13 44 33 44 46 4D 54 5F 4C 49  ....A..D3DFMT_LI
  00000740: 4E 5F 52 38 47 38 42 38 41 38 F2 F1 03 04 03 00  N_R8G8B8A8......
  00000750: 1C 00 13 44 33 44 46 4D 54 5F 4C 49 4E 5F 58 31  ...D3DFMT_LIN_X1
  00000760: 52 35 47 35 42 35 F2 F1 03 04 03 00 1E 00 13 44  R5G5B5.........D
  00000770: 33 44 46 4D 54 5F 4C 49 4E 5F 58 38 52 38 47 38  3DFMT_LIN_X8R8G8
  00000780: 42 38 F2 F1 03 04 03 00 20 00 0F 44 33 44 46 4D  B8...... ..D3DFM
  00000790: 54 5F 4C 49 4E 5F 41 38 4C 38 F2 F1 03 04 03 00  T_LIN_A8L8......
  000007A0: 1B 00 0E 44 33 44 46 4D 54 5F 4C 49 4E 5F 41 4C  ...D3DFMT_LIN_AL
  000007B0: 38 F3 F2 F1 03 04 03 00 35 00 0E 44 33 44 46 4D  8.......5..D3DFM
  000007C0: 54 5F 4C 49 4E 5F 4C 31 36 F3 F2 F1 03 04 03 00  T_LIN_L16.......
  000007D0: 13 00 0D 44 33 44 46 4D 54 5F 4C 49 4E 5F 4C 38  ...D3DFMT_LIN_L8
  000007E0: 03 04 03 00 36 00 11 44 33 44 46 4D 54 5F 4C 49  ....6..D3DFMT_LI
  000007F0: 4E 5F 56 31 36 55 31 36 03 04 03 00 17 00 0F 44  N_V16U16.......D
  00000800: 33 44 46 4D 54 5F 4C 49 4E 5F 56 38 55 38 F2 F1  3DFMT_LIN_V8U8..
  00000810: 03 04 03 00 37 00 11 44 33 44 46 4D 54 5F 4C 49  ....7..D3DFMT_LI
  00000820: 4E 5F 4C 36 56 35 55 35 03 04 03 00 1E 00 13 44  N_L6V5U5.......D
  00000830: 33 44 46 4D 54 5F 4C 49 4E 5F 58 38 4C 38 56 38  3DFMT_LIN_X8L8V8
  00000840: 55 38 F2 F1 03 04 03 00 12 00 13 44 33 44 46 4D  U8.........D3DFM
  00000850: 54 5F 4C 49 4E 5F 51 38 57 38 56 38 55 38 F2 F1  T_LIN_Q8W8V8U8..
  00000860: 03 04 03 00 2E 00 10 44 33 44 46 4D 54 5F 4C 49  .......D3DFMT_LI
  00000870: 4E 5F 44 32 34 53 38 F1 03 04 03 00 2F 00 10 44  N_D24S8...../..D
  00000880: 33 44 46 4D 54 5F 4C 49 4E 5F 46 32 34 53 38 F1  3DFMT_LIN_F24S8.
  00000890: 03 04 03 00 30 00 0E 44 33 44 46 4D 54 5F 4C 49  ....0..D3DFMT_LI
  000008A0: 4E 5F 44 31 36 F3 F2 F1 03 04 03 00 31 00 0E 44  N_D16.......1..D
  000008B0: 33 44 46 4D 54 5F 4C 49 4E 5F 46 31 36 F3 F2 F1  3DFMT_LIN_F16...
  000008C0: 03 04 03 00 64 00 11 44 33 44 46 4D 54 5F 56 45  ....d..D3DFMT_VE
  000008D0: 52 54 45 58 44 41 54 41 03 04 03 00 65 00 0E 44  RTEXDATA....e..D
  000008E0: 33 44 46 4D 54 5F 49 4E 44 45 58 31 36 F3 F2 F1  3DFMT_INDEX16...
  000008F0: 03 04 03 00 04 80 FF FF FF 7F 12 44 33 44 46 4D  ...........D3DFM
  00000900: 54 5F 46 4F 52 43 45 5F 44 57 4F 52 44 F3 F2 F1  T_FORCE_DWORD...
  00000910: 1A 00 07 10 45 00 00 00 74 00 00 00 1A 10 00 00  ....E...t.......
  00000920: 0A 5F 44 33 44 46 4F 52 4D 41 54 F1 1A 00 01 12  ._D3DFORMAT.....
  00000930: 05 00 00 00 75 00 00 00 19 10 00 00 1B 10 00 00  ....u...........
  00000940: 1B 10 00 00 74 00 00 00 1A 00 09 10 12 00 00 00  ....t...........
  00000950: 07 10 00 00 00 00 00 00 07 00 05 00 1C 10 00 00  ................
  00000960: 00 00 00 00 3E 01 03 12 03 04 03 00 00 00 0D 44  ....>..........D
  00000970: 33 44 52 54 59 50 45 5F 4E 4F 4E 45 03 04 03 00  3DRTYPE_NONE....
  00000980: 01 00 10 44 33 44 52 54 59 50 45 5F 53 55 52 46  ...D3DRTYPE_SURF
  00000990: 41 43 45 F1 03 04 03 00 02 00 0F 44 33 44 52 54  ACE........D3DRT
  000009A0: 59 50 45 5F 56 4F 4C 55 4D 45 F2 F1 03 04 03 00  YPE_VOLUME......
  000009B0: 03 00 10 44 33 44 52 54 59 50 45 5F 54 45 58 54  ...D3DRTYPE_TEXT
  000009C0: 55 52 45 F1 03 04 03 00 04 00 16 44 33 44 52 54  URE........D3DRT
  000009D0: 59 50 45 5F 56 4F 4C 55 4D 45 54 45 58 54 55 52  YPE_VOLUMETEXTUR
  000009E0: 45 F3 F2 F1 03 04 03 00 05 00 14 44 33 44 52 54  E..........D3DRT
  000009F0: 59 50 45 5F 43 55 42 45 54 45 58 54 55 52 45 F1  YPE_CUBETEXTURE.
  00000A00: 03 04 03 00 06 00 15 44 33 44 52 54 59 50 45 5F  .......D3DRTYPE_
  00000A10: 56 45 52 54 45 58 42 55 46 46 45 52 03 04 03 00  VERTEXBUFFER....
  00000A20: 07 00 14 44 33 44 52 54 59 50 45 5F 49 4E 44 45  ...D3DRTYPE_INDE
  00000A30: 58 42 55 46 46 45 52 F1 03 04 03 00 08 00 13 44  XBUFFER........D
  00000A40: 33 44 52 54 59 50 45 5F 50 55 53 48 42 55 46 46  3DRTYPE_PUSHBUFF
  00000A50: 45 52 F2 F1 03 04 03 00 09 00 10 44 33 44 52 54  ER.........D3DRT
  00000A60: 59 50 45 5F 50 41 4C 45 54 54 45 F1 03 04 03 00  YPE_PALETTE.....
  00000A70: 0A 00 0E 44 33 44 52 54 59 50 45 5F 46 49 58 55  ...D3DRTYPE_FIXU
  00000A80: 50 F3 F2 F1 03 04 03 00 04 80 FF FF FF 7F 14 44  P..............D
  00000A90: 33 44 52 54 59 50 45 5F 46 4F 52 43 45 5F 44 57  3DRTYPE_FORCE_DW
  00000AA0: 4F 52 44 F1 22 00 07 10 0C 00 00 00 74 00 00 00  ORD.".......t...
  00000AB0: 1E 10 00 00 10 5F 44 33 44 52 45 53 4F 55 52 43  ....._D3DRESOURC
  00000AC0: 45 54 59 50 45 F3 F2 F1 1E 00 01 12 06 00 00 00  ETYPE...........
  00000AD0: 75 00 00 00 19 10 00 00 1B 10 00 00 22 00 00 00  u..........."...
  00000AE0: 1F 10 00 00 1B 10 00 00 1A 00 09 10 12 00 00 00  ................
  00000AF0: 07 10 00 00 00 00 00 00 07 00 06 00 20 10 00 00  ............ ...
  00000B00: 00 00 00 00 1A 00 01 12 05 00 00 00 75 00 00 00  ............u...
  00000B10: 19 10 00 00 1B 10 00 00 74 00 00 00 22 00 00 00  ........t..."...
  00000B20: 1A 00 09 10 12 00 00 00 07 10 00 00 00 00 00 00  ................
  00000B30: 07 00 05 00 22 10 00 00 00 00 00 00 1A 00 01 12  ...."...........
  00000B40: 05 00 00 00 75 00 00 00 19 10 00 00 1B 10 00 00  ....u...........
  00000B50: 1B 10 00 00 1B 10 00 00 1A 00 09 10 12 00 00 00  ................
  00000B60: 07 10 00 00 00 00 00 00 07 00 05 00 24 10 00 00  ............$...
  00000B70: 00 00 00 00 1E 00 05 10 00 00 80 00 00 00 00 00  ................
  00000B80: 00 00 00 00 00 00 00 00 00 00 09 5F 44 33 44 43  ..........._D3DC
  00000B90: 41 50 53 38 0A 00 02 10 26 10 00 00 0A 00 00 00  APS8....&.......
  00000BA0: 12 00 01 12 03 00 00 00 75 00 00 00 19 10 00 00  ........u.......
  00000BB0: 27 10 00 00 1A 00 09 10 12 00 00 00 07 10 00 00  '...............
  00000BC0: 00 00 00 00 07 00 03 00 28 10 00 00 00 00 00 00  ........(.......
  00000BD0: 2E 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  ................
  00000BE0: 00 00 00 00 00 00 17 5F 44 33 44 50 52 45 53 45  ......._D3DPRESE
  00000BF0: 4E 54 5F 50 41 52 41 4D 45 54 45 52 53 5F F2 F1  NT_PARAMETERS_..
  00000C00: 0A 00 02 10 2A 10 00 00 0A 00 00 00 1E 00 05 10  ....*...........
  00000C10: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00000C20: 00 00 09 44 33 44 44 65 76 69 63 65 0A 00 02 10  ...D3DDevice....
  00000C30: 2C 10 00 00 0A 00 00 00 0A 00 02 10 2D 10 00 00  ,...........-...
  00000C40: 0A 00 00 00 1E 00 01 12 06 00 00 00 75 00 00 00  ............u...
  00000C50: 19 10 00 00 03 04 00 00 22 00 00 00 2B 10 00 00  ........"...+...
  00000C60: 2E 10 00 00 1A 00 09 10 12 00 00 00 07 10 00 00  ................
  00000C70: 00 00 00 00 07 00 06 00 2F 10 00 00 00 00 00 00  ......../.......
  00000C80: 0E 00 01 12 02 00 00 00 22 00 00 00 22 00 00 00  ........"..."...
  00000C90: 1A 00 09 10 12 00 00 00 07 10 00 00 00 00 00 00  ................
  00000CA0: 07 00 02 00 31 10 00 00 00 00 00 00 76 01 03 12  ....1.......v...
  00000CB0: 0B 14 0B 00 0A 10 00 00 06 41 64 64 52 65 66 F1  .........AddRef.
  00000CC0: 0B 14 0B 00 0A 10 00 00 07 52 65 6C 65 61 73 65  .........Release
  00000CD0: 0B 14 0B 00 0B 10 00 00 0F 47 65 74 41 64 61 70  .........GetAdap
  00000CE0: 74 65 72 43 6F 75 6E 74 0B 14 0B 00 0F 10 00 00  terCount........
  00000CF0: 14 47 65 74 41 64 61 70 74 65 72 49 64 65 6E 74  .GetAdapterIdent
  00000D00: 69 66 69 65 72 F3 F2 F1 0B 14 0B 00 11 10 00 00  ifier...........
  00000D10: 13 47 65 74 41 64 61 70 74 65 72 4D 6F 64 65 43  .GetAdapterModeC
  00000D20: 6F 75 6E 74 0B 14 0B 00 15 10 00 00 10 45 6E 75  ount.........Enu
  00000D30: 6D 41 64 61 70 74 65 72 4D 6F 64 65 73 F3 F2 F1  mAdapterModes...
  00000D40: 0B 14 0B 00 17 10 00 00 15 47 65 74 41 64 61 70  .........GetAdap
  00000D50: 74 65 72 44 69 73 70 6C 61 79 4D 6F 64 65 F2 F1  terDisplayMode..
  00000D60: 0B 14 0B 00 1D 10 00 00 0F 43 68 65 63 6B 44 65  .........CheckDe
  00000D70: 76 69 63 65 54 79 70 65 0B 14 0B 00 21 10 00 00  viceType....!...
  00000D80: 11 43 68 65 63 6B 44 65 76 69 63 65 46 6F 72 6D  .CheckDeviceForm
  00000D90: 61 74 F2 F1 0B 14 0B 00 23 10 00 00 1A 43 68 65  at......#....Che
  00000DA0: 63 6B 44 65 76 69 63 65 4D 75 6C 74 69 53 61 6D  ckDeviceMultiSam
  00000DB0: 70 6C 65 54 79 70 65 F1 0B 14 0B 00 25 10 00 00  pleType.....%...
  00000DC0: 16 43 68 65 63 6B 44 65 70 74 68 53 74 65 6E 63  .CheckDepthStenc
  00000DD0: 69 6C 4D 61 74 63 68 F1 0B 14 0B 00 29 10 00 00  ilMatch.....)...
  00000DE0: 0D 47 65 74 44 65 76 69 63 65 43 61 70 73 F2 F1  .GetDeviceCaps..
  00000DF0: 0B 14 0B 00 30 10 00 00 0C 43 72 65 61 74 65 44  ....0....CreateD
  00000E00: 65 76 69 63 65 F3 F2 F1 0B 14 0B 00 32 10 00 00  evice.......2...
  00000E10: 11 53 65 74 50 75 73 68 42 75 66 66 65 72 53 69  .SetPushBufferSi
  00000E20: 7A 65 F2 F1 1E 00 05 10 0E 00 00 00 33 10 00 00  ze..........3...
  00000E30: 00 00 00 00 00 00 00 00 01 00 08 44 69 72 65 63  ...........Direc
  00000E40: 74 33 44 F1 0E 00 03 10 70 00 00 00 11 00 00 00  t3D.....p.......
  00000E50: 00 02 00 F1 1E 00 06 10 00 00 80 00 00 00 00 00  ................
  00000E60: 00 00 0E 5F 4C 41 52 47 45 5F 49 4E 54 45 47 45  ..._LARGE_INTEGE
  00000E70: 52 F3 F2 F1 C6 00 03 12 05 14 03 00 35 10 00 00  R...........5...
  00000E80: 00 00 06 44 72 69 76 65 72 F3 F2 F1 05 14 03 00  ...Driver.......
  00000E90: 35 10 00 00 00 02 0B 44 65 73 63 72 69 70 74 69  5......Descripti
  00000EA0: 6F 6E F2 F1 05 14 03 00 36 10 00 00 00 04 0D 44  on......6......D
  00000EB0: 72 69 76 65 72 56 65 72 73 69 6F 6E 05 14 03 00  riverVersion....
  00000EC0: 22 00 00 00 08 04 08 56 65 6E 64 6F 72 49 64 F1  "......VendorId.
  00000ED0: 05 14 03 00 22 00 00 00 0C 04 08 44 65 76 69 63  ...."......Devic
  00000EE0: 65 49 64 F1 05 14 03 00 22 00 00 00 10 04 08 53  eId....."......S
  00000EF0: 75 62 53 79 73 49 64 F1 05 14 03 00 22 00 00 00  ubSysId....."...
  00000F00: 14 04 08 52 65 76 69 73 69 6F 6E F1 05 14 03 00  ...Revision.....
  00000F10: 00 10 00 00 18 04 10 44 65 76 69 63 65 49 64 65  .......DeviceIde
  00000F20: 6E 74 69 66 69 65 72 F1 05 14 03 00 22 00 00 00  ntifier....."...
  00000F30: 28 04 09 57 48 51 4C 4C 65 76 65 6C 2E 00 05 10  (..WHQLLevel....
  00000F40: 09 00 00 00 37 10 00 00 00 00 00 00 00 00 00 00  ....7...........
  00000F50: 2C 04 17 5F 44 33 44 41 44 41 50 54 45 52 5F 49  ,.._D3DADAPTER_I
  00000F60: 44 45 4E 54 49 46 49 45 52 38 F2 F1 62 00 03 12  DENTIFIER8..b...
  00000F70: 05 14 03 00 75 00 00 00 00 00 05 57 69 64 74 68  ....u......Width
  00000F80: 05 14 03 00 75 00 00 00 04 00 06 48 65 69 67 68  ....u......Heigh
  00000F90: 74 F3 F2 F1 05 14 03 00 75 00 00 00 08 00 0B 52  t.......u......R
  00000FA0: 65 66 72 65 73 68 52 61 74 65 F2 F1 05 14 03 00  efreshRate......
  00000FB0: 22 00 00 00 0C 00 05 46 6C 61 67 73 05 14 03 00  "......Flags....
  00000FC0: 1B 10 00 00 10 00 06 46 6F 72 6D 61 74 F3 F2 F1  .......Format...
  00000FD0: 26 00 05 10 05 00 00 00 39 10 00 00 00 00 00 00  &.......9.......
  00000FE0: 00 00 00 00 14 00 0F 5F 44 33 44 44 49 53 50 4C  ......._D3DDISPL
  00000FF0: 41 59 4D 4F 44 45 F2 F1 92 05 03 12 05 14 03 00  AYMODE..........
  00001000: 19 10 00 00 00 00 0A 44 65 76 69 63 65 54 79 70  .......DeviceTyp
  00001010: 65 F3 F2 F1 05 14 03 00 75 00 00 00 04 00 0E 41  e.......u......A
  00001020: 64 61 70 74 65 72 4F 72 64 69 6E 61 6C F3 F2 F1  dapterOrdinal...
  00001030: 05 14 03 00 22 00 00 00 08 00 04 43 61 70 73 F1  ...."......Caps.
  00001040: 05 14 03 00 22 00 00 00 0C 00 05 43 61 70 73 32  ...."......Caps2
  00001050: 05 14 03 00 22 00 00 00 10 00 05 43 61 70 73 33  ...."......Caps3
  00001060: 05 14 03 00 22 00 00 00 14 00 15 50 72 65 73 65  ...."......Prese
  00001070: 6E 74 61 74 69 6F 6E 49 6E 74 65 72 76 61 6C 73  ntationIntervals
  00001080: 05 14 03 00 22 00 00 00 18 00 0A 43 75 72 73 6F  ...."......Curso
  00001090: 72 43 61 70 73 F3 F2 F1 05 14 03 00 22 00 00 00  rCaps......."...
  000010A0: 1C 00 07 44 65 76 43 61 70 73 F2 F1 05 14 03 00  ...DevCaps......
  000010B0: 22 00 00 00 20 00 11 50 72 69 6D 69 74 69 76 65  "... ..Primitive
  000010C0: 4D 69 73 63 43 61 70 73 05 14 03 00 22 00 00 00  MiscCaps...."...
  000010D0: 24 00 0A 52 61 73 74 65 72 43 61 70 73 F3 F2 F1  $..RasterCaps...
  000010E0: 05 14 03 00 22 00 00 00 28 00 08 5A 43 6D 70 43  ...."...(..ZCmpC
  000010F0: 61 70 73 F1 05 14 03 00 22 00 00 00 2C 00 0C 53  aps....."...,..S
  00001100: 72 63 42 6C 65 6E 64 43 61 70 73 F1 05 14 03 00  rcBlendCaps.....
  00001110: 22 00 00 00 30 00 0D 44 65 73 74 42 6C 65 6E 64  "...0..DestBlend
  00001120: 43 61 70 73 05 14 03 00 22 00 00 00 34 00 0C 41  Caps...."...4..A
  00001130: 6C 70 68 61 43 6D 70 43 61 70 73 F1 05 14 03 00  lphaCmpCaps.....
  00001140: 22 00 00 00 38 00 09 53 68 61 64 65 43 61 70 73  "...8..ShadeCaps
  00001150: 05 14 03 00 22 00 00 00 3C 00 0B 54 65 78 74 75  ...."...<..Textu
  00001160: 72 65 43 61 70 73 F2 F1 05 14 03 00 22 00 00 00  reCaps......"...
  00001170: 40 00 11 54 65 78 74 75 72 65 46 69 6C 74 65 72  @..TextureFilter
  00001180: 43 61 70 73 05 14 03 00 22 00 00 00 44 00 15 43  Caps...."...D..C
  00001190: 75 62 65 54 65 78 74 75 72 65 46 69 6C 74 65 72  ubeTextureFilter
  000011A0: 43 61 70 73 05 14 03 00 22 00 00 00 48 00 17 56  Caps...."...H..V
  000011B0: 6F 6C 75 6D 65 54 65 78 74 75 72 65 46 69 6C 74  olumeTextureFilt
  000011C0: 65 72 43 61 70 73 F2 F1 05 14 03 00 22 00 00 00  erCaps......"...
  000011D0: 4C 00 12 54 65 78 74 75 72 65 41 64 64 72 65 73  L..TextureAddres
  000011E0: 73 43 61 70 73 F3 F2 F1 05 14 03 00 22 00 00 00  sCaps......."...
  000011F0: 50 00 18 56 6F 6C 75 6D 65 54 65 78 74 75 72 65  P..VolumeTexture
  00001200: 41 64 64 72 65 73 73 43 61 70 73 F1 05 14 03 00  AddressCaps.....
  00001210: 22 00 00 00 54 00 08 4C 69 6E 65 43 61 70 73 F1  "...T..LineCaps.
  00001220: 05 14 03 00 22 00 00 00 58 00 0F 4D 61 78 54 65  ...."...X..MaxTe
  00001230: 78 74 75 72 65 57 69 64 74 68 F2 F1 05 14 03 00  xtureWidth......
  00001240: 22 00 00 00 5C 00 10 4D 61 78 54 65 78 74 75 72  "...\..MaxTextur
  00001250: 65 48 65 69 67 68 74 F1 05 14 03 00 22 00 00 00  eHeight....."...
  00001260: 60 00 0F 4D 61 78 56 6F 6C 75 6D 65 45 78 74 65  `..MaxVolumeExte
  00001270: 6E 74 F2 F1 05 14 03 00 22 00 00 00 64 00 10 4D  nt......"...d..M
  00001280: 61 78 54 65 78 74 75 72 65 52 65 70 65 61 74 F1  axTextureRepeat.
  00001290: 05 14 03 00 22 00 00 00 68 00 15 4D 61 78 54 65  ...."...h..MaxTe
  000012A0: 78 74 75 72 65 41 73 70 65 63 74 52 61 74 69 6F  xtureAspectRatio
  000012B0: 05 14 03 00 22 00 00 00 6C 00 0D 4D 61 78 41 6E  ...."...l..MaxAn
  000012C0: 69 73 6F 74 72 6F 70 79 05 14 03 00 40 00 00 00  isotropy....@...
  000012D0: 70 00 0A 4D 61 78 56 65 72 74 65 78 57 F3 F2 F1  p..MaxVertexW...
  000012E0: 05 14 03 00 40 00 00 00 74 00 0D 47 75 61 72 64  ....@...t..Guard
  000012F0: 42 61 6E 64 4C 65 66 74 05 14 03 00 40 00 00 00  BandLeft....@...
  00001300: 78 00 0C 47 75 61 72 64 42 61 6E 64 54 6F 70 F1  x..GuardBandTop.
  00001310: 05 14 03 00 40 00 00 00 7C 00 0E 47 75 61 72 64  ....@...|..Guard
  00001320: 42 61 6E 64 52 69 67 68 74 F3 F2 F1 05 14 03 00  BandRight.......
  00001330: 40 00 00 00 80 00 0F 47 75 61 72 64 42 61 6E 64  @......GuardBand
  00001340: 42 6F 74 74 6F 6D F2 F1 05 14 03 00 40 00 00 00  Bottom......@...
  00001350: 84 00 0D 45 78 74 65 6E 74 73 41 64 6A 75 73 74  ...ExtentsAdjust
  00001360: 05 14 03 00 22 00 00 00 88 00 0B 53 74 65 6E 63  ...."......Stenc
  00001370: 69 6C 43 61 70 73 F2 F1 05 14 03 00 22 00 00 00  ilCaps......"...
  00001380: 8C 00 07 46 56 46 43 61 70 73 F2 F1 05 14 03 00  ...FVFCaps......
  00001390: 22 00 00 00 90 00 0D 54 65 78 74 75 72 65 4F 70  "......TextureOp
  000013A0: 43 61 70 73 05 14 03 00 22 00 00 00 94 00 15 4D  Caps...."......M
  000013B0: 61 78 54 65 78 74 75 72 65 42 6C 65 6E 64 53 74  axTextureBlendSt
  000013C0: 61 67 65 73 05 14 03 00 22 00 00 00 98 00 17 4D  ages...."......M
  000013D0: 61 78 53 69 6D 75 6C 74 61 6E 65 6F 75 73 54 65  axSimultaneousTe
  000013E0: 78 74 75 72 65 73 F2 F1 05 14 03 00 22 00 00 00  xtures......"...
  000013F0: 9C 00 14 56 65 72 74 65 78 50 72 6F 63 65 73 73  ...VertexProcess
  00001400: 69 6E 67 43 61 70 73 F1 05 14 03 00 22 00 00 00  ingCaps....."...
  00001410: A0 00 0F 4D 61 78 41 63 74 69 76 65 4C 69 67 68  ...MaxActiveLigh
  00001420: 74 73 F2 F1 05 14 03 00 22 00 00 00 A4 00 11 4D  ts......"......M
  00001430: 61 78 55 73 65 72 43 6C 69 70 50 6C 61 6E 65 73  axUserClipPlanes
  00001440: 05 14 03 00 22 00 00 00 A8 00 16 4D 61 78 56 65  ...."......MaxVe
  00001450: 72 74 65 78 42 6C 65 6E 64 4D 61 74 72 69 63 65  rtexBlendMatrice
  00001460: 73 F3 F2 F1 05 14 03 00 22 00 00 00 AC 00 19 4D  s......."......M
  00001470: 61 78 56 65 72 74 65 78 42 6C 65 6E 64 4D 61 74  axVertexBlendMat
  00001480: 72 69 78 49 6E 64 65 78 05 14 03 00 40 00 00 00  rixIndex....@...
  00001490: B0 00 0C 4D 61 78 50 6F 69 6E 74 53 69 7A 65 F1  ...MaxPointSize.
  000014A0: 05 14 03 00 22 00 00 00 B4 00 11 4D 61 78 50 72  ...."......MaxPr
  000014B0: 69 6D 69 74 69 76 65 43 6F 75 6E 74 05 14 03 00  imitiveCount....
  000014C0: 22 00 00 00 B8 00 0E 4D 61 78 56 65 72 74 65 78  "......MaxVertex
  000014D0: 49 6E 64 65 78 F3 F2 F1 05 14 03 00 22 00 00 00  Index......."...
  000014E0: BC 00 0A 4D 61 78 53 74 72 65 61 6D 73 F3 F2 F1  ...MaxStreams...
  000014F0: 05 14 03 00 22 00 00 00 C0 00 0F 4D 61 78 53 74  ...."......MaxSt
  00001500: 72 65 61 6D 53 74 72 69 64 65 F2 F1 05 14 03 00  reamStride......
  00001510: 22 00 00 00 C4 00 13 56 65 72 74 65 78 53 68 61  "......VertexSha
  00001520: 64 65 72 56 65 72 73 69 6F 6E F2 F1 05 14 03 00  derVersion......
  00001530: 22 00 00 00 C8 00 14 4D 61 78 56 65 72 74 65 78  "......MaxVertex
  00001540: 53 68 61 64 65 72 43 6F 6E 73 74 F1 05 14 03 00  ShaderConst.....
  00001550: 22 00 00 00 CC 00 12 50 69 78 65 6C 53 68 61 64  "......PixelShad
  00001560: 65 72 56 65 72 73 69 6F 6E F3 F2 F1 05 14 03 00  erVersion.......
  00001570: 40 00 00 00 D0 00 13 4D 61 78 50 69 78 65 6C 53  @......MaxPixelS
  00001580: 68 61 64 65 72 56 61 6C 75 65 F2 F1 1E 00 05 10  haderValue......
  00001590: 35 00 00 00 3B 10 00 00 00 00 00 00 00 00 00 00  5...;...........
  000015A0: D4 00 09 5F 44 33 44 43 41 50 53 38 1A 00 09 10  ..._D3DCAPS8....
  000015B0: 22 00 00 00 2C 10 00 00 00 00 00 00 07 00 00 00  "...,...........
  000015C0: 09 10 00 00 00 00 00 00 0A 00 02 10 08 10 00 00  ................
  000015D0: 0A 00 00 00 0A 00 01 12 01 00 00 00 3E 10 00 00  ............>...
  000015E0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  000015F0: 07 00 01 00 3F 10 00 00 00 00 00 00 0A 00 01 12  ....?...........
  00001600: 01 00 00 00 27 10 00 00 1A 00 09 10 12 00 00 00  ....'...........
  00001610: 2C 10 00 00 00 00 00 00 07 00 01 00 41 10 00 00  ,...........A...
  00001620: 00 00 00 00 0A 00 01 12 01 00 00 00 13 10 00 00  ................
  00001630: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00001640: 07 00 01 00 43 10 00 00 00 00 00 00 36 00 05 10  ....C.......6...
  00001650: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00001660: 00 00 1E 5F 44 33 44 44 45 56 49 43 45 5F 43 52  ..._D3DDEVICE_CR
  00001670: 45 41 54 49 4F 4E 5F 50 41 52 41 4D 45 54 45 52  EATION_PARAMETER
  00001680: 53 F3 F2 F1 0A 00 02 10 45 10 00 00 0A 00 00 00  S.......E.......
  00001690: 0A 00 01 12 01 00 00 00 46 10 00 00 1A 00 09 10  ........F.......
  000016A0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 01 00  ....,...........
  000016B0: 47 10 00 00 00 00 00 00 0A 00 01 12 01 00 00 00  G...............
  000016C0: 2B 10 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  +...........,...
  000016D0: 00 00 00 00 07 00 01 00 49 10 00 00 00 00 00 00  ........I.......
  000016E0: 1E 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  ................
  000016F0: 00 00 00 00 00 00 07 74 61 67 52 45 43 54 F2 F1  .......tagRECT..
  00001700: 0A 00 01 10 4B 10 00 00 01 00 F2 F1 0A 00 02 10  ....K...........
  00001710: 4C 10 00 00 0A 00 00 00 16 00 01 12 04 00 00 00  L...............
  00001720: 4D 10 00 00 4D 10 00 00 03 04 00 00 03 04 00 00  M...M...........
  00001730: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00001740: 07 00 04 00 4E 10 00 00 00 00 00 00 22 00 05 10  ....N......."...
  00001750: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00001760: 00 00 0A 44 33 44 53 75 72 66 61 63 65 F3 F2 F1  ...D3DSurface...
  00001770: 0A 00 02 10 50 10 00 00 0A 00 00 00 0A 00 02 10  ....P...........
  00001780: 51 10 00 00 0A 00 00 00 12 00 01 12 03 00 00 00  Q...............
  00001790: 74 00 00 00 22 00 00 00 52 10 00 00 1A 00 09 10  t..."...R.......
  000017A0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  000017B0: 53 10 00 00 00 00 00 00 26 00 05 10 00 00 80 00  S.......&.......
  000017C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 11 5F  ..............._
  000017D0: 44 33 44 52 41 53 54 45 52 5F 53 54 41 54 55 53  D3DRASTER_STATUS
  000017E0: 0A 00 02 10 55 10 00 00 0A 00 00 00 0A 00 01 12  ....U...........
  000017F0: 01 00 00 00 56 10 00 00 1A 00 09 10 12 00 00 00  ....V...........
  00001800: 2C 10 00 00 00 00 00 00 07 00 01 00 57 10 00 00  ,...........W...
  00001810: 00 00 00 00 22 00 05 10 00 00 80 00 00 00 00 00  ...."...........
  00001820: 00 00 00 00 00 00 00 00 00 00 0D 5F 44 33 44 47  ..........._D3DG
  00001830: 41 4D 4D 41 52 41 4D 50 0A 00 01 10 59 10 00 00  AMMARAMP....Y...
  00001840: 01 00 F2 F1 0A 00 02 10 5A 10 00 00 0A 00 00 00  ........Z.......
  00001850: 0E 00 01 12 02 00 00 00 22 00 00 00 5B 10 00 00  ........"...[...
  00001860: 1A 00 09 10 03 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00001870: 07 00 02 00 5C 10 00 00 00 00 00 00 0A 00 02 10  ....\...........
  00001880: 59 10 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  Y...............
  00001890: 5E 10 00 00 1A 00 09 10 03 00 00 00 2C 10 00 00  ^...........,...
  000018A0: 00 00 00 00 07 00 01 00 5F 10 00 00 00 00 00 00  ........_.......
  000018B0: 22 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  "...............
  000018C0: 00 00 00 00 00 00 0A 44 33 44 54 65 78 74 75 72  .......D3DTextur
  000018D0: 65 F3 F2 F1 0A 00 02 10 61 10 00 00 0A 00 00 00  e.......a.......
  000018E0: 0A 00 02 10 62 10 00 00 0A 00 00 00 22 00 01 12  ....b......."...
  000018F0: 07 00 00 00 75 00 00 00 75 00 00 00 75 00 00 00  ....u...u...u...
  00001900: 22 00 00 00 1B 10 00 00 22 00 00 00 63 10 00 00  "......."...c...
  00001910: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00001920: 07 00 07 00 64 10 00 00 00 00 00 00 26 00 05 10  ....d.......&...
  00001930: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00001940: 00 00 10 44 33 44 56 6F 6C 75 6D 65 54 65 78 74  ...D3DVolumeText
  00001950: 75 72 65 F1 0A 00 02 10 66 10 00 00 0A 00 00 00  ure.....f.......
  00001960: 0A 00 02 10 67 10 00 00 0A 00 00 00 26 00 01 12  ....g.......&...
  00001970: 08 00 00 00 75 00 00 00 75 00 00 00 75 00 00 00  ....u...u...u...
  00001980: 75 00 00 00 22 00 00 00 1B 10 00 00 22 00 00 00  u..."......."...
  00001990: 68 10 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  h...........,...
  000019A0: 00 00 00 00 07 00 08 00 69 10 00 00 00 00 00 00  ........i.......
  000019B0: 26 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  &...............
  000019C0: 00 00 00 00 00 00 0E 44 33 44 43 75 62 65 54 65  .......D3DCubeTe
  000019D0: 78 74 75 72 65 F3 F2 F1 0A 00 02 10 6B 10 00 00  xture.......k...
  000019E0: 0A 00 00 00 0A 00 02 10 6C 10 00 00 0A 00 00 00  ........l.......
  000019F0: 1E 00 01 12 06 00 00 00 75 00 00 00 75 00 00 00  ........u...u...
  00001A00: 22 00 00 00 1B 10 00 00 22 00 00 00 6D 10 00 00  "......."...m...
  00001A10: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00001A20: 07 00 06 00 6E 10 00 00 00 00 00 00 26 00 05 10  ....n.......&...
  00001A30: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00001A40: 00 00 0F 44 33 44 56 65 72 74 65 78 42 75 66 66  ...D3DVertexBuff
  00001A50: 65 72 F2 F1 0A 00 02 10 70 10 00 00 0A 00 00 00  er......p.......
  00001A60: 0A 00 02 10 71 10 00 00 0A 00 00 00 1A 00 01 12  ....q...........
  00001A70: 05 00 00 00 75 00 00 00 22 00 00 00 22 00 00 00  ....u..."..."...
  00001A80: 22 00 00 00 72 10 00 00 1A 00 09 10 12 00 00 00  "...r...........
  00001A90: 2C 10 00 00 00 00 00 00 07 00 05 00 73 10 00 00  ,...........s...
  00001AA0: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  00001AB0: 00 00 00 00 00 00 00 00 00 00 0E 44 33 44 49 6E  ...........D3DIn
  00001AC0: 64 65 78 42 75 66 66 65 72 F3 F2 F1 0A 00 02 10  dexBuffer.......
  00001AD0: 75 10 00 00 0A 00 00 00 0A 00 02 10 76 10 00 00  u...........v...
  00001AE0: 0A 00 00 00 1A 00 01 12 05 00 00 00 75 00 00 00  ............u...
  00001AF0: 22 00 00 00 1B 10 00 00 22 00 00 00 77 10 00 00  "......."...w...
  00001B00: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00001B10: 07 00 05 00 78 10 00 00 00 00 00 00 1E 00 01 12  ....x...........
  00001B20: 06 00 00 00 75 00 00 00 75 00 00 00 1B 10 00 00  ....u...u.......
  00001B30: 22 00 00 00 74 00 00 00 52 10 00 00 1A 00 09 10  "...t...R.......
  00001B40: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 06 00  ....,...........
  00001B50: 7A 10 00 00 00 00 00 00 1A 00 01 12 05 00 00 00  z...............
  00001B60: 75 00 00 00 75 00 00 00 1B 10 00 00 22 00 00 00  u...u......."...
  00001B70: 52 10 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  R...........,...
  00001B80: 00 00 00 00 07 00 05 00 7C 10 00 00 00 00 00 00  ........|.......
  00001B90: 16 00 01 12 04 00 00 00 75 00 00 00 75 00 00 00  ........u...u...
  00001BA0: 1B 10 00 00 52 10 00 00 1A 00 09 10 12 00 00 00  ....R...........
  00001BB0: 2C 10 00 00 00 00 00 00 07 00 04 00 7E 10 00 00  ,...........~...
  00001BC0: 00 00 00 00 1E 00 05 10 00 00 80 00 00 00 00 00  ................
  00001BD0: 00 00 00 00 00 00 00 00 00 00 08 74 61 67 50 4F  ...........tagPO
  00001BE0: 49 4E 54 F1 0A 00 01 10 80 10 00 00 01 00 F2 F1  INT.............
  00001BF0: 0A 00 02 10 81 10 00 00 0A 00 00 00 1A 00 01 12  ................
  00001C00: 05 00 00 00 51 10 00 00 4D 10 00 00 75 00 00 00  ....Q...M...u...
  00001C10: 51 10 00 00 82 10 00 00 1A 00 09 10 12 00 00 00  Q...............
  00001C20: 2C 10 00 00 00 00 00 00 07 00 05 00 83 10 00 00  ,...............
  00001C30: 00 00 00 00 0E 00 01 12 02 00 00 00 51 10 00 00  ............Q...
  00001C40: 51 10 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  Q...........,...
  00001C50: 00 00 00 00 07 00 02 00 85 10 00 00 00 00 00 00  ................
  00001C60: 0A 00 01 12 01 00 00 00 52 10 00 00 1A 00 09 10  ........R.......
  00001C70: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 01 00  ....,...........
  00001C80: 87 10 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  00001C90: 2C 10 00 00 00 00 00 00 07 00 00 00 09 10 00 00  ,...............
  00001CA0: 00 00 00 00 1E 00 05 10 00 00 80 00 00 00 00 00  ................
  00001CB0: 00 00 00 00 00 00 00 00 00 00 08 5F 44 33 44 52  ..........._D3DR
  00001CC0: 45 43 54 F1 0A 00 01 10 8A 10 00 00 01 00 F2 F1  ECT.............
  00001CD0: 0A 00 02 10 8B 10 00 00 0A 00 00 00 1E 00 01 12  ................
  00001CE0: 06 00 00 00 22 00 00 00 8C 10 00 00 22 00 00 00  ...."......."...
  00001CF0: 22 00 00 00 40 00 00 00 22 00 00 00 1A 00 09 10  "...@...".......
  00001D00: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 06 00  ....,...........
  00001D10: 8D 10 00 00 00 00 00 00 0A 01 03 12 03 04 03 00  ................
  00001D20: 00 00 0A 44 33 44 54 53 5F 56 49 45 57 F3 F2 F1  ...D3DTS_VIEW...
  00001D30: 03 04 03 00 01 00 10 44 33 44 54 53 5F 50 52 4F  .......D3DTS_PRO
  00001D40: 4A 45 43 54 49 4F 4E F1 03 04 03 00 02 00 0E 44  JECTION........D
  00001D50: 33 44 54 53 5F 54 45 58 54 55 52 45 30 F3 F2 F1  3DTS_TEXTURE0...
  00001D60: 03 04 03 00 03 00 0E 44 33 44 54 53 5F 54 45 58  .......D3DTS_TEX
  00001D70: 54 55 52 45 31 F3 F2 F1 03 04 03 00 04 00 0E 44  TURE1..........D
  00001D80: 33 44 54 53 5F 54 45 58 54 55 52 45 32 F3 F2 F1  3DTS_TEXTURE2...
  00001D90: 03 04 03 00 05 00 0E 44 33 44 54 53 5F 54 45 58  .......D3DTS_TEX
  00001DA0: 54 55 52 45 33 F3 F2 F1 03 04 03 00 06 00 0B 44  TURE3..........D
  00001DB0: 33 44 54 53 5F 57 4F 52 4C 44 F2 F1 03 04 03 00  3DTS_WORLD......
  00001DC0: 07 00 0C 44 33 44 54 53 5F 57 4F 52 4C 44 31 F1  ...D3DTS_WORLD1.
  00001DD0: 03 04 03 00 08 00 0C 44 33 44 54 53 5F 57 4F 52  .......D3DTS_WOR
  00001DE0: 4C 44 32 F1 03 04 03 00 09 00 0C 44 33 44 54 53  LD2........D3DTS
  00001DF0: 5F 57 4F 52 4C 44 33 F1 03 04 03 00 0A 00 09 44  _WORLD3........D
  00001E00: 33 44 54 53 5F 4D 41 58 03 04 03 00 04 80 FF FF  3DTS_MAX........
  00001E10: FF 7F 11 44 33 44 54 53 5F 46 4F 52 43 45 5F 44  ...D3DTS_FORCE_D
  00001E20: 57 4F 52 44 26 00 07 10 0C 00 00 00 74 00 00 00  WORD&.......t...
  00001E30: 8F 10 00 00 16 5F 44 33 44 54 52 41 4E 53 46 4F  ....._D3DTRANSFO
  00001E40: 52 4D 53 54 41 54 45 54 59 50 45 F1 22 00 05 10  RMSTATETYPE."...
  00001E50: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00001E60: 00 00 0A 5F 44 33 44 4D 41 54 52 49 58 F3 F2 F1  ..._D3DMATRIX...
  00001E70: 0A 00 01 10 91 10 00 00 01 00 F2 F1 0A 00 02 10  ................
  00001E80: 92 10 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  00001E90: 90 10 00 00 93 10 00 00 1A 00 09 10 12 00 00 00  ................
  00001EA0: 2C 10 00 00 00 00 00 00 07 00 02 00 94 10 00 00  ,...............
  00001EB0: 00 00 00 00 0A 00 02 10 91 10 00 00 0A 00 00 00  ................
  00001EC0: 0E 00 01 12 02 00 00 00 90 10 00 00 96 10 00 00  ................
  00001ED0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00001EE0: 07 00 02 00 97 10 00 00 00 00 00 00 22 00 05 10  ............"...
  00001EF0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00001F00: 00 00 0D 5F 44 33 44 56 49 45 57 50 4F 52 54 38  ..._D3DVIEWPORT8
  00001F10: 0A 00 01 10 99 10 00 00 01 00 F2 F1 0A 00 02 10  ................
  00001F20: 9A 10 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  ................
  00001F30: 9B 10 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  ............,...
  00001F40: 00 00 00 00 07 00 01 00 9C 10 00 00 00 00 00 00  ................
  00001F50: 0A 00 02 10 99 10 00 00 0A 00 00 00 0A 00 01 12  ................
  00001F60: 01 00 00 00 9E 10 00 00 1A 00 09 10 12 00 00 00  ................
  00001F70: 2C 10 00 00 00 00 00 00 07 00 01 00 9F 10 00 00  ,...............
  00001F80: 00 00 00 00 22 00 05 10 00 00 80 00 00 00 00 00  ...."...........
  00001F90: 00 00 00 00 00 00 00 00 00 00 0D 5F 44 33 44 4D  ..........._D3DM
  00001FA0: 41 54 45 52 49 41 4C 38 0A 00 01 10 A1 10 00 00  ATERIAL8........
  00001FB0: 01 00 F2 F1 0A 00 02 10 A2 10 00 00 0A 00 00 00  ................
  00001FC0: 0A 00 01 12 01 00 00 00 A3 10 00 00 1A 00 09 10  ................
  00001FD0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 01 00  ....,...........
  00001FE0: A4 10 00 00 00 00 00 00 0A 00 02 10 A1 10 00 00  ................
  00001FF0: 0A 00 00 00 0A 00 01 12 01 00 00 00 A6 10 00 00  ................
  00002000: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00002010: 07 00 01 00 A7 10 00 00 00 00 00 00 22 00 05 10  ............"...
  00002020: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00002030: 00 00 0A 5F 44 33 44 4C 49 47 48 54 38 F3 F2 F1  ..._D3DLIGHT8...
  00002040: 0A 00 01 10 A9 10 00 00 01 00 F2 F1 0A 00 02 10  ................
  00002050: AA 10 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  00002060: 22 00 00 00 AB 10 00 00 1A 00 09 10 12 00 00 00  "...............
  00002070: 2C 10 00 00 00 00 00 00 07 00 02 00 AC 10 00 00  ,...............
  00002080: 00 00 00 00 0A 00 02 10 A9 10 00 00 0A 00 00 00  ................
  00002090: 0E 00 01 12 02 00 00 00 22 00 00 00 AE 10 00 00  ........".......
  000020A0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  000020B0: 07 00 02 00 AF 10 00 00 00 00 00 00 0E 00 01 12  ................
  000020C0: 02 00 00 00 22 00 00 00 74 00 00 00 1A 00 09 10  ...."...t.......
  000020D0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  ....,...........
  000020E0: B1 10 00 00 00 00 00 00 0E 00 01 12 02 00 00 00  ................
  000020F0: 22 00 00 00 74 04 00 00 1A 00 09 10 12 00 00 00  "...t...........
  00002100: 2C 10 00 00 00 00 00 00 07 00 02 00 B3 10 00 00  ,...............
  00002110: 00 00 00 00 7E 10 03 12 03 04 03 00 00 00 0C 44  ....~..........D
  00002120: 33 44 52 53 5F 50 53 5F 4D 49 4E F1 03 04 03 00  3DRS_PS_MIN.....
  00002130: 00 00 14 44 33 44 52 53 5F 50 53 41 4C 50 48 41  ...D3DRS_PSALPHA
  00002140: 49 4E 50 55 54 53 30 F1 03 04 03 00 01 00 14 44  INPUTS0........D
  00002150: 33 44 52 53 5F 50 53 41 4C 50 48 41 49 4E 50 55  3DRS_PSALPHAINPU
  00002160: 54 53 31 F1 03 04 03 00 02 00 14 44 33 44 52 53  TS1........D3DRS
  00002170: 5F 50 53 41 4C 50 48 41 49 4E 50 55 54 53 32 F1  _PSALPHAINPUTS2.
  00002180: 03 04 03 00 03 00 14 44 33 44 52 53 5F 50 53 41  .......D3DRS_PSA
  00002190: 4C 50 48 41 49 4E 50 55 54 53 33 F1 03 04 03 00  LPHAINPUTS3.....
  000021A0: 04 00 14 44 33 44 52 53 5F 50 53 41 4C 50 48 41  ...D3DRS_PSALPHA
  000021B0: 49 4E 50 55 54 53 34 F1 03 04 03 00 05 00 14 44  INPUTS4........D
  000021C0: 33 44 52 53 5F 50 53 41 4C 50 48 41 49 4E 50 55  3DRS_PSALPHAINPU
  000021D0: 54 53 35 F1 03 04 03 00 06 00 14 44 33 44 52 53  TS5........D3DRS
  000021E0: 5F 50 53 41 4C 50 48 41 49 4E 50 55 54 53 36 F1  _PSALPHAINPUTS6.
  000021F0: 03 04 03 00 07 00 14 44 33 44 52 53 5F 50 53 41  .......D3DRS_PSA
  00002200: 4C 50 48 41 49 4E 50 55 54 53 37 F1 03 04 03 00  LPHAINPUTS7.....
  00002210: 08 00 1F 44 33 44 52 53 5F 50 53 46 49 4E 41 4C  ...D3DRS_PSFINAL
  00002220: 43 4F 4D 42 49 4E 45 52 49 4E 50 55 54 53 41 42  COMBINERINPUTSAB
  00002230: 43 44 F2 F1 03 04 03 00 09 00 1E 44 33 44 52 53  CD.........D3DRS
  00002240: 5F 50 53 46 49 4E 41 4C 43 4F 4D 42 49 4E 45 52  _PSFINALCOMBINER
  00002250: 49 4E 50 55 54 53 45 46 47 F3 F2 F1 03 04 03 00  INPUTSEFG.......
  00002260: 0A 00 13 44 33 44 52 53 5F 50 53 43 4F 4E 53 54  ...D3DRS_PSCONST
  00002270: 41 4E 54 30 5F 30 F2 F1 03 04 03 00 0B 00 13 44  ANT0_0.........D
  00002280: 33 44 52 53 5F 50 53 43 4F 4E 53 54 41 4E 54 30  3DRS_PSCONSTANT0
  00002290: 5F 31 F2 F1 03 04 03 00 0C 00 13 44 33 44 52 53  _1.........D3DRS
  000022A0: 5F 50 53 43 4F 4E 53 54 41 4E 54 30 5F 32 F2 F1  _PSCONSTANT0_2..
  000022B0: 03 04 03 00 0D 00 13 44 33 44 52 53 5F 50 53 43  .......D3DRS_PSC
  000022C0: 4F 4E 53 54 41 4E 54 30 5F 33 F2 F1 03 04 03 00  ONSTANT0_3......
  000022D0: 0E 00 13 44 33 44 52 53 5F 50 53 43 4F 4E 53 54  ...D3DRS_PSCONST
  000022E0: 41 4E 54 30 5F 34 F2 F1 03 04 03 00 0F 00 13 44  ANT0_4.........D
  000022F0: 33 44 52 53 5F 50 53 43 4F 4E 53 54 41 4E 54 30  3DRS_PSCONSTANT0
  00002300: 5F 35 F2 F1 03 04 03 00 10 00 13 44 33 44 52 53  _5.........D3DRS
  00002310: 5F 50 53 43 4F 4E 53 54 41 4E 54 30 5F 36 F2 F1  _PSCONSTANT0_6..
  00002320: 03 04 03 00 11 00 13 44 33 44 52 53 5F 50 53 43  .......D3DRS_PSC
  00002330: 4F 4E 53 54 41 4E 54 30 5F 37 F2 F1 03 04 03 00  ONSTANT0_7......
  00002340: 12 00 13 44 33 44 52 53 5F 50 53 43 4F 4E 53 54  ...D3DRS_PSCONST
  00002350: 41 4E 54 31 5F 30 F2 F1 03 04 03 00 13 00 13 44  ANT1_0.........D
  00002360: 33 44 52 53 5F 50 53 43 4F 4E 53 54 41 4E 54 31  3DRS_PSCONSTANT1
  00002370: 5F 31 F2 F1 03 04 03 00 14 00 13 44 33 44 52 53  _1.........D3DRS
  00002380: 5F 50 53 43 4F 4E 53 54 41 4E 54 31 5F 32 F2 F1  _PSCONSTANT1_2..
  00002390: 03 04 03 00 15 00 13 44 33 44 52 53 5F 50 53 43  .......D3DRS_PSC
  000023A0: 4F 4E 53 54 41 4E 54 31 5F 33 F2 F1 03 04 03 00  ONSTANT1_3......
  000023B0: 16 00 13 44 33 44 52 53 5F 50 53 43 4F 4E 53 54  ...D3DRS_PSCONST
  000023C0: 41 4E 54 31 5F 34 F2 F1 03 04 03 00 17 00 13 44  ANT1_4.........D
  000023D0: 33 44 52 53 5F 50 53 43 4F 4E 53 54 41 4E 54 31  3DRS_PSCONSTANT1
  000023E0: 5F 35 F2 F1 03 04 03 00 18 00 13 44 33 44 52 53  _5.........D3DRS
  000023F0: 5F 50 53 43 4F 4E 53 54 41 4E 54 31 5F 36 F2 F1  _PSCONSTANT1_6..
  00002400: 03 04 03 00 19 00 13 44 33 44 52 53 5F 50 53 43  .......D3DRS_PSC
  00002410: 4F 4E 53 54 41 4E 54 31 5F 37 F2 F1 03 04 03 00  ONSTANT1_7......
  00002420: 1A 00 15 44 33 44 52 53 5F 50 53 41 4C 50 48 41  ...D3DRS_PSALPHA
  00002430: 4F 55 54 50 55 54 53 30 03 04 03 00 1B 00 15 44  OUTPUTS0.......D
  00002440: 33 44 52 53 5F 50 53 41 4C 50 48 41 4F 55 54 50  3DRS_PSALPHAOUTP
  00002450: 55 54 53 31 03 04 03 00 1C 00 15 44 33 44 52 53  UTS1.......D3DRS
  00002460: 5F 50 53 41 4C 50 48 41 4F 55 54 50 55 54 53 32  _PSALPHAOUTPUTS2
  00002470: 03 04 03 00 1D 00 15 44 33 44 52 53 5F 50 53 41  .......D3DRS_PSA
  00002480: 4C 50 48 41 4F 55 54 50 55 54 53 33 03 04 03 00  LPHAOUTPUTS3....
  00002490: 1E 00 15 44 33 44 52 53 5F 50 53 41 4C 50 48 41  ...D3DRS_PSALPHA
  000024A0: 4F 55 54 50 55 54 53 34 03 04 03 00 1F 00 15 44  OUTPUTS4.......D
  000024B0: 33 44 52 53 5F 50 53 41 4C 50 48 41 4F 55 54 50  3DRS_PSALPHAOUTP
  000024C0: 55 54 53 35 03 04 03 00 20 00 15 44 33 44 52 53  UTS5.... ..D3DRS
  000024D0: 5F 50 53 41 4C 50 48 41 4F 55 54 50 55 54 53 36  _PSALPHAOUTPUTS6
  000024E0: 03 04 03 00 21 00 15 44 33 44 52 53 5F 50 53 41  ....!..D3DRS_PSA
  000024F0: 4C 50 48 41 4F 55 54 50 55 54 53 37 03 04 03 00  LPHAOUTPUTS7....
  00002500: 22 00 12 44 33 44 52 53 5F 50 53 52 47 42 49 4E  "..D3DRS_PSRGBIN
  00002510: 50 55 54 53 30 F3 F2 F1 03 04 03 00 23 00 12 44  PUTS0.......#..D
  00002520: 33 44 52 53 5F 50 53 52 47 42 49 4E 50 55 54 53  3DRS_PSRGBINPUTS
  00002530: 31 F3 F2 F1 03 04 03 00 24 00 12 44 33 44 52 53  1.......$..D3DRS
  00002540: 5F 50 53 52 47 42 49 4E 50 55 54 53 32 F3 F2 F1  _PSRGBINPUTS2...
  00002550: 03 04 03 00 25 00 12 44 33 44 52 53 5F 50 53 52  ....%..D3DRS_PSR
  00002560: 47 42 49 4E 50 55 54 53 33 F3 F2 F1 03 04 03 00  GBINPUTS3.......
  00002570: 26 00 12 44 33 44 52 53 5F 50 53 52 47 42 49 4E  &..D3DRS_PSRGBIN
  00002580: 50 55 54 53 34 F3 F2 F1 03 04 03 00 27 00 12 44  PUTS4.......'..D
  00002590: 33 44 52 53 5F 50 53 52 47 42 49 4E 50 55 54 53  3DRS_PSRGBINPUTS
  000025A0: 35 F3 F2 F1 03 04 03 00 28 00 12 44 33 44 52 53  5.......(..D3DRS
  000025B0: 5F 50 53 52 47 42 49 4E 50 55 54 53 36 F3 F2 F1  _PSRGBINPUTS6...
  000025C0: 03 04 03 00 29 00 12 44 33 44 52 53 5F 50 53 52  ....)..D3DRS_PSR
  000025D0: 47 42 49 4E 50 55 54 53 37 F3 F2 F1 03 04 03 00  GBINPUTS7.......
  000025E0: 2A 00 13 44 33 44 52 53 5F 50 53 43 4F 4D 50 41  *..D3DRS_PSCOMPA
  000025F0: 52 45 4D 4F 44 45 F2 F1 03 04 03 00 2B 00 1E 44  REMODE......+..D
  00002600: 33 44 52 53 5F 50 53 46 49 4E 41 4C 43 4F 4D 42  3DRS_PSFINALCOMB
  00002610: 49 4E 45 52 43 4F 4E 53 54 41 4E 54 30 F3 F2 F1  INERCONSTANT0...
  00002620: 03 04 03 00 2C 00 1E 44 33 44 52 53 5F 50 53 46  ....,..D3DRS_PSF
  00002630: 49 4E 41 4C 43 4F 4D 42 49 4E 45 52 43 4F 4E 53  INALCOMBINERCONS
  00002640: 54 41 4E 54 31 F3 F2 F1 03 04 03 00 2D 00 13 44  TANT1.......-..D
  00002650: 33 44 52 53 5F 50 53 52 47 42 4F 55 54 50 55 54  3DRS_PSRGBOUTPUT
  00002660: 53 30 F2 F1 03 04 03 00 2E 00 13 44 33 44 52 53  S0.........D3DRS
  00002670: 5F 50 53 52 47 42 4F 55 54 50 55 54 53 31 F2 F1  _PSRGBOUTPUTS1..
  00002680: 03 04 03 00 2F 00 13 44 33 44 52 53 5F 50 53 52  ..../..D3DRS_PSR
  00002690: 47 42 4F 55 54 50 55 54 53 32 F2 F1 03 04 03 00  GBOUTPUTS2......
  000026A0: 30 00 13 44 33 44 52 53 5F 50 53 52 47 42 4F 55  0..D3DRS_PSRGBOU
  000026B0: 54 50 55 54 53 33 F2 F1 03 04 03 00 31 00 13 44  TPUTS3......1..D
  000026C0: 33 44 52 53 5F 50 53 52 47 42 4F 55 54 50 55 54  3DRS_PSRGBOUTPUT
  000026D0: 53 34 F2 F1 03 04 03 00 32 00 13 44 33 44 52 53  S4......2..D3DRS
  000026E0: 5F 50 53 52 47 42 4F 55 54 50 55 54 53 35 F2 F1  _PSRGBOUTPUTS5..
  000026F0: 03 04 03 00 33 00 13 44 33 44 52 53 5F 50 53 52  ....3..D3DRS_PSR
  00002700: 47 42 4F 55 54 50 55 54 53 36 F2 F1 03 04 03 00  GBOUTPUTS6......
  00002710: 34 00 13 44 33 44 52 53 5F 50 53 52 47 42 4F 55  4..D3DRS_PSRGBOU
  00002720: 54 50 55 54 53 37 F2 F1 03 04 03 00 35 00 15 44  TPUTS7......5..D
  00002730: 33 44 52 53 5F 50 53 43 4F 4D 42 49 4E 45 52 43  3DRS_PSCOMBINERC
  00002740: 4F 55 4E 54 03 04 03 00 37 00 12 44 33 44 52 53  OUNT....7..D3DRS
  00002750: 5F 50 53 44 4F 54 4D 41 50 50 49 4E 47 F3 F2 F1  _PSDOTMAPPING...
  00002760: 03 04 03 00 38 00 14 44 33 44 52 53 5F 50 53 49  ....8..D3DRS_PSI
  00002770: 4E 50 55 54 54 45 58 54 55 52 45 F1 03 04 03 00  NPUTTEXTURE.....
  00002780: 39 00 0C 44 33 44 52 53 5F 50 53 5F 4D 41 58 F1  9..D3DRS_PS_MAX.
  00002790: 03 04 03 00 39 00 0B 44 33 44 52 53 5F 5A 46 55  ....9..D3DRS_ZFU
  000027A0: 4E 43 F2 F1 03 04 03 00 3A 00 0F 44 33 44 52 53  NC......:..D3DRS
  000027B0: 5F 41 4C 50 48 41 46 55 4E 43 F2 F1 03 04 03 00  _ALPHAFUNC......
  000027C0: 3B 00 16 44 33 44 52 53 5F 41 4C 50 48 41 42 4C  ;..D3DRS_ALPHABL
  000027D0: 45 4E 44 45 4E 41 42 4C 45 F3 F2 F1 03 04 03 00  ENDENABLE.......
  000027E0: 3C 00 15 44 33 44 52 53 5F 41 4C 50 48 41 54 45  <..D3DRS_ALPHATE
  000027F0: 53 54 45 4E 41 42 4C 45 03 04 03 00 3D 00 0E 44  STENABLE....=..D
  00002800: 33 44 52 53 5F 41 4C 50 48 41 52 45 46 F3 F2 F1  3DRS_ALPHAREF...
  00002810: 03 04 03 00 3E 00 0E 44 33 44 52 53 5F 53 52 43  ....>..D3DRS_SRC
  00002820: 42 4C 45 4E 44 F3 F2 F1 03 04 03 00 3F 00 0F 44  BLEND.......?..D
  00002830: 33 44 52 53 5F 44 45 53 54 42 4C 45 4E 44 F2 F1  3DRS_DESTBLEND..
  00002840: 03 04 03 00 40 00 12 44 33 44 52 53 5F 5A 57 52  ....@..D3DRS_ZWR
  00002850: 49 54 45 45 4E 41 42 4C 45 F3 F2 F1 03 04 03 00  ITEENABLE.......
  00002860: 41 00 12 44 33 44 52 53 5F 44 49 54 48 45 52 45  A..D3DRS_DITHERE
  00002870: 4E 41 42 4C 45 F3 F2 F1 03 04 03 00 42 00 0F 44  NABLE.......B..D
  00002880: 33 44 52 53 5F 53 48 41 44 45 4D 4F 44 45 F2 F1  3DRS_SHADEMODE..
  00002890: 03 04 03 00 43 00 16 44 33 44 52 53 5F 43 4F 4C  ....C..D3DRS_COL
  000028A0: 4F 52 57 52 49 54 45 45 4E 41 42 4C 45 F3 F2 F1  ORWRITEENABLE...
  000028B0: 03 04 03 00 44 00 12 44 33 44 52 53 5F 53 54 45  ....D..D3DRS_STE
  000028C0: 4E 43 49 4C 5A 46 41 49 4C F3 F2 F1 03 04 03 00  NCILZFAIL.......
  000028D0: 45 00 11 44 33 44 52 53 5F 53 54 45 4E 43 49 4C  E..D3DRS_STENCIL
  000028E0: 50 41 53 53 03 04 03 00 46 00 11 44 33 44 52 53  PASS....F..D3DRS
  000028F0: 5F 53 54 45 4E 43 49 4C 46 55 4E 43 03 04 03 00  _STENCILFUNC....
  00002900: 47 00 10 44 33 44 52 53 5F 53 54 45 4E 43 49 4C  G..D3DRS_STENCIL
  00002910: 52 45 46 F1 03 04 03 00 48 00 11 44 33 44 52 53  REF.....H..D3DRS
  00002920: 5F 53 54 45 4E 43 49 4C 4D 41 53 4B 03 04 03 00  _STENCILMASK....
  00002930: 49 00 16 44 33 44 52 53 5F 53 54 45 4E 43 49 4C  I..D3DRS_STENCIL
  00002940: 57 52 49 54 45 4D 41 53 4B F3 F2 F1 03 04 03 00  WRITEMASK.......
  00002950: 4A 00 0D 44 33 44 52 53 5F 42 4C 45 4E 44 4F 50  J..D3DRS_BLENDOP
  00002960: 03 04 03 00 4B 00 10 44 33 44 52 53 5F 42 4C 45  ....K..D3DRS_BLE
  00002970: 4E 44 43 4F 4C 4F 52 F1 03 04 03 00 4C 00 10 44  NDCOLOR.....L..D
  00002980: 33 44 52 53 5F 53 57 41 54 48 57 49 44 54 48 F1  3DRS_SWATHWIDTH.
  00002990: 03 04 03 00 4D 00 1E 44 33 44 52 53 5F 50 4F 4C  ....M..D3DRS_POL
  000029A0: 59 47 4F 4E 4F 46 46 53 45 54 5A 53 4C 4F 50 45  YGONOFFSETZSLOPE
  000029B0: 53 43 41 4C 45 F3 F2 F1 03 04 03 00 4E 00 1A 44  SCALE.......N..D
  000029C0: 33 44 52 53 5F 50 4F 4C 59 47 4F 4E 4F 46 46 53  3DRS_POLYGONOFFS
  000029D0: 45 54 5A 4F 46 46 53 45 54 F3 F2 F1 03 04 03 00  ETZOFFSET.......
  000029E0: 4F 00 17 44 33 44 52 53 5F 50 4F 49 4E 54 4F 46  O..D3DRS_POINTOF
  000029F0: 46 53 45 54 45 4E 41 42 4C 45 F2 F1 03 04 03 00  FSETENABLE......
  00002A00: 50 00 1B 44 33 44 52 53 5F 57 49 52 45 46 52 41  P..D3DRS_WIREFRA
  00002A10: 4D 45 4F 46 46 53 45 54 45 4E 41 42 4C 45 F2 F1  MEOFFSETENABLE..
  00002A20: 03 04 03 00 51 00 17 44 33 44 52 53 5F 53 4F 4C  ....Q..D3DRS_SOL
  00002A30: 49 44 4F 46 46 53 45 54 45 4E 41 42 4C 45 F2 F1  IDOFFSETENABLE..
  00002A40: 03 04 03 00 52 00 10 44 33 44 52 53 5F 53 49 4D  ....R..D3DRS_SIM
  00002A50: 50 4C 45 5F 4D 41 58 F1 03 04 03 00 52 00 0F 44  PLE_MAX.....R..D
  00002A60: 33 44 52 53 5F 46 4F 47 45 4E 41 42 4C 45 F2 F1  3DRS_FOGENABLE..
  00002A70: 03 04 03 00 53 00 12 44 33 44 52 53 5F 46 4F 47  ....S..D3DRS_FOG
  00002A80: 54 41 42 4C 45 4D 4F 44 45 F3 F2 F1 03 04 03 00  TABLEMODE.......
  00002A90: 54 00 0E 44 33 44 52 53 5F 46 4F 47 53 54 41 52  T..D3DRS_FOGSTAR
  00002AA0: 54 F3 F2 F1 03 04 03 00 55 00 0C 44 33 44 52 53  T.......U..D3DRS
  00002AB0: 5F 46 4F 47 45 4E 44 F1 03 04 03 00 56 00 10 44  _FOGEND.....V..D
  00002AC0: 33 44 52 53 5F 46 4F 47 44 45 4E 53 49 54 59 F1  3DRS_FOGDENSITY.
  00002AD0: 03 04 03 00 57 00 14 44 33 44 52 53 5F 52 41 4E  ....W..D3DRS_RAN
  00002AE0: 47 45 46 4F 47 45 4E 41 42 4C 45 F1 03 04 03 00  GEFOGENABLE.....
  00002AF0: 58 00 0B 44 33 44 52 53 5F 57 52 41 50 30 F2 F1  X..D3DRS_WRAP0..
  00002B00: 03 04 03 00 59 00 0B 44 33 44 52 53 5F 57 52 41  ....Y..D3DRS_WRA
  00002B10: 50 31 F2 F1 03 04 03 00 5A 00 0B 44 33 44 52 53  P1......Z..D3DRS
  00002B20: 5F 57 52 41 50 32 F2 F1 03 04 03 00 5B 00 0B 44  _WRAP2......[..D
  00002B30: 33 44 52 53 5F 57 52 41 50 33 F2 F1 03 04 03 00  3DRS_WRAP3......
  00002B40: 5C 00 0E 44 33 44 52 53 5F 4C 49 47 48 54 49 4E  \..D3DRS_LIGHTIN
  00002B50: 47 F3 F2 F1 03 04 03 00 5D 00 14 44 33 44 52 53  G.......]..D3DRS
  00002B60: 5F 53 50 45 43 55 4C 41 52 45 4E 41 42 4C 45 F1  _SPECULARENABLE.
  00002B70: 03 04 03 00 5E 00 11 44 33 44 52 53 5F 4C 4F 43  ....^..D3DRS_LOC
  00002B80: 41 4C 56 49 45 57 45 52 03 04 03 00 5F 00 11 44  ALVIEWER...._..D
  00002B90: 33 44 52 53 5F 43 4F 4C 4F 52 56 45 52 54 45 58  3DRS_COLORVERTEX
  00002BA0: 03 04 03 00 60 00 20 44 33 44 52 53 5F 42 41 43  ....`. D3DRS_BAC
  00002BB0: 4B 53 50 45 43 55 4C 41 52 4D 41 54 45 52 49 41  KSPECULARMATERIA
  00002BC0: 4C 53 4F 55 52 43 45 F1 03 04 03 00 61 00 1F 44  LSOURCE.....a..D
  00002BD0: 33 44 52 53 5F 42 41 43 4B 44 49 46 46 55 53 45  3DRS_BACKDIFFUSE
  00002BE0: 4D 41 54 45 52 49 41 4C 53 4F 55 52 43 45 F2 F1  MATERIALSOURCE..
  00002BF0: 03 04 03 00 62 00 1F 44 33 44 52 53 5F 42 41 43  ....b..D3DRS_BAC
  00002C00: 4B 41 4D 42 49 45 4E 54 4D 41 54 45 52 49 41 4C  KAMBIENTMATERIAL
  00002C10: 53 4F 55 52 43 45 F2 F1 03 04 03 00 63 00 20 44  SOURCE......c. D
  00002C20: 33 44 52 53 5F 42 41 43 4B 45 4D 49 53 53 49 56  3DRS_BACKEMISSIV
  00002C30: 45 4D 41 54 45 52 49 41 4C 53 4F 55 52 43 45 F1  EMATERIALSOURCE.
  00002C40: 03 04 03 00 64 00 1C 44 33 44 52 53 5F 53 50 45  ....d..D3DRS_SPE
  00002C50: 43 55 4C 41 52 4D 41 54 45 52 49 41 4C 53 4F 55  CULARMATERIALSOU
  00002C60: 52 43 45 F1 03 04 03 00 65 00 1B 44 33 44 52 53  RCE.....e..D3DRS
  00002C70: 5F 44 49 46 46 55 53 45 4D 41 54 45 52 49 41 4C  _DIFFUSEMATERIAL
  00002C80: 53 4F 55 52 43 45 F2 F1 03 04 03 00 66 00 1B 44  SOURCE......f..D
  00002C90: 33 44 52 53 5F 41 4D 42 49 45 4E 54 4D 41 54 45  3DRS_AMBIENTMATE
  00002CA0: 52 49 41 4C 53 4F 55 52 43 45 F2 F1 03 04 03 00  RIALSOURCE......
  00002CB0: 67 00 1C 44 33 44 52 53 5F 45 4D 49 53 53 49 56  g..D3DRS_EMISSIV
  00002CC0: 45 4D 41 54 45 52 49 41 4C 53 4F 55 52 43 45 F1  EMATERIALSOURCE.
  00002CD0: 03 04 03 00 68 00 11 44 33 44 52 53 5F 42 41 43  ....h..D3DRS_BAC
  00002CE0: 4B 41 4D 42 49 45 4E 54 03 04 03 00 69 00 0D 44  KAMBIENT....i..D
  00002CF0: 33 44 52 53 5F 41 4D 42 49 45 4E 54 03 04 03 00  3DRS_AMBIENT....
  00002D00: 6A 00 0F 44 33 44 52 53 5F 50 4F 49 4E 54 53 49  j..D3DRS_POINTSI
  00002D10: 5A 45 F2 F1 03 04 03 00 6B 00 13 44 33 44 52 53  ZE......k..D3DRS
  00002D20: 5F 50 4F 49 4E 54 53 49 5A 45 5F 4D 49 4E F2 F1  _POINTSIZE_MIN..
  00002D30: 03 04 03 00 6C 00 17 44 33 44 52 53 5F 50 4F 49  ....l..D3DRS_POI
  00002D40: 4E 54 53 50 52 49 54 45 45 4E 41 42 4C 45 F2 F1  NTSPRITEENABLE..
  00002D50: 03 04 03 00 6D 00 16 44 33 44 52 53 5F 50 4F 49  ....m..D3DRS_POI
  00002D60: 4E 54 53 43 41 4C 45 45 4E 41 42 4C 45 F3 F2 F1  NTSCALEENABLE...
  00002D70: 03 04 03 00 6E 00 12 44 33 44 52 53 5F 50 4F 49  ....n..D3DRS_POI
  00002D80: 4E 54 53 43 41 4C 45 5F 41 F3 F2 F1 03 04 03 00  NTSCALE_A.......
  00002D90: 6F 00 12 44 33 44 52 53 5F 50 4F 49 4E 54 53 43  o..D3DRS_POINTSC
  00002DA0: 41 4C 45 5F 42 F3 F2 F1 03 04 03 00 70 00 12 44  ALE_B.......p..D
  00002DB0: 33 44 52 53 5F 50 4F 49 4E 54 53 43 41 4C 45 5F  3DRS_POINTSCALE_
  00002DC0: 43 F3 F2 F1 03 04 03 00 71 00 13 44 33 44 52 53  C.......q..D3DRS
  00002DD0: 5F 50 4F 49 4E 54 53 49 5A 45 5F 4D 41 58 F2 F1  _POINTSIZE_MAX..
  00002DE0: 03 04 03 00 72 00 14 44 33 44 52 53 5F 50 41 54  ....r..D3DRS_PAT
  00002DF0: 43 48 45 44 47 45 53 54 59 4C 45 F1 03 04 03 00  CHEDGESTYLE.....
  00002E00: 73 00 13 44 33 44 52 53 5F 50 41 54 43 48 53 45  s..D3DRS_PATCHSE
  00002E10: 47 4D 45 4E 54 53 F2 F1 03 04 03 00 74 00 10 44  GMENTS......t..D
  00002E20: 33 44 52 53 5F 53 57 41 50 46 49 4C 54 45 52 F1  3DRS_SWAPFILTER.
  00002E30: 03 04 03 00 75 00 12 44 33 44 52 53 5F 44 45 46  ....u..D3DRS_DEF
  00002E40: 45 52 52 45 44 5F 4D 41 58 F3 F2 F1 03 04 03 00  ERRED_MAX.......
  00002E50: 75 00 14 44 33 44 52 53 5F 50 53 54 45 58 54 55  u..D3DRS_PSTEXTU
  00002E60: 52 45 4D 4F 44 45 53 F1 03 04 03 00 76 00 11 44  REMODES.....v..D
  00002E70: 33 44 52 53 5F 56 45 52 54 45 58 42 4C 45 4E 44  3DRS_VERTEXBLEND
  00002E80: 03 04 03 00 77 00 0E 44 33 44 52 53 5F 46 4F 47  ....w..D3DRS_FOG
  00002E90: 43 4F 4C 4F 52 F3 F2 F1 03 04 03 00 78 00 0E 44  COLOR.......x..D
  00002EA0: 33 44 52 53 5F 46 49 4C 4C 4D 4F 44 45 F3 F2 F1  3DRS_FILLMODE...
  00002EB0: 03 04 03 00 79 00 12 44 33 44 52 53 5F 42 41 43  ....y..D3DRS_BAC
  00002EC0: 4B 46 49 4C 4C 4D 4F 44 45 F3 F2 F1 03 04 03 00  KFILLMODE.......
  00002ED0: 7A 00 16 44 33 44 52 53 5F 54 57 4F 53 49 44 45  z..D3DRS_TWOSIDE
  00002EE0: 44 4C 49 47 48 54 49 4E 47 F3 F2 F1 03 04 03 00  DLIGHTING.......
  00002EF0: 7B 00 16 44 33 44 52 53 5F 4E 4F 52 4D 41 4C 49  {..D3DRS_NORMALI
  00002F00: 5A 45 4E 4F 52 4D 41 4C 53 F3 F2 F1 03 04 03 00  ZENORMALS.......
  00002F10: 7C 00 0D 44 33 44 52 53 5F 5A 45 4E 41 42 4C 45  |..D3DRS_ZENABLE
  00002F20: 03 04 03 00 7D 00 13 44 33 44 52 53 5F 53 54 45  ....}..D3DRS_STE
  00002F30: 4E 43 49 4C 45 4E 41 42 4C 45 F2 F1 03 04 03 00  NCILENABLE......
  00002F40: 7E 00 11 44 33 44 52 53 5F 53 54 45 4E 43 49 4C  ~..D3DRS_STENCIL
  00002F50: 46 41 49 4C 03 04 03 00 7F 00 0F 44 33 44 52 53  FAIL.......D3DRS
  00002F60: 5F 46 52 4F 4E 54 46 41 43 45 F2 F1 03 04 03 00  _FRONTFACE......
  00002F70: 80 00 0E 44 33 44 52 53 5F 43 55 4C 4C 4D 4F 44  ...D3DRS_CULLMOD
  00002F80: 45 F3 F2 F1 03 04 03 00 81 00 13 44 33 44 52 53  E..........D3DRS
  00002F90: 5F 54 45 58 54 55 52 45 46 41 43 54 4F 52 F2 F1  _TEXTUREFACTOR..
  00002FA0: 03 04 03 00 82 00 0B 44 33 44 52 53 5F 5A 42 49  .......D3DRS_ZBI
  00002FB0: 41 53 F2 F1 03 04 03 00 83 00 0D 44 33 44 52 53  AS.........D3DRS
  00002FC0: 5F 4C 4F 47 49 43 4F 50 03 04 03 00 84 00 13 44  _LOGICOP.......D
  00002FD0: 33 44 52 53 5F 45 44 47 45 41 4E 54 49 41 4C 49  3DRS_EDGEANTIALI
  00002FE0: 41 53 F2 F1 03 04 03 00 85 00 1A 44 33 44 52 53  AS.........D3DRS
  00002FF0: 5F 4D 55 4C 54 49 53 41 4D 50 4C 45 41 4E 54 49  _MULTISAMPLEANTI
  00003000: 41 4C 49 41 53 F3 F2 F1 03 04 03 00 86 00 15 44  ALIAS..........D
  00003010: 33 44 52 53 5F 4D 55 4C 54 49 53 41 4D 50 4C 45  3DRS_MULTISAMPLE
  00003020: 4D 41 53 4B 03 04 03 00 87 00 15 44 33 44 52 53  MASK.......D3DRS
  00003030: 5F 4D 55 4C 54 49 53 41 4D 50 4C 45 4D 4F 44 45  _MULTISAMPLEMODE
  00003040: 03 04 03 00 88 00 21 44 33 44 52 53 5F 4D 55 4C  ......!D3DRS_MUL
  00003050: 54 49 53 41 4D 50 4C 45 52 45 4E 44 45 52 54 41  TISAMPLERENDERTA
  00003060: 52 47 45 54 4D 4F 44 45 03 04 03 00 89 00 10 44  RGETMODE.......D
  00003070: 33 44 52 53 5F 53 48 41 44 4F 57 46 55 4E 43 F1  3DRS_SHADOWFUNC.
  00003080: 03 04 03 00 8A 00 0F 44 33 44 52 53 5F 4C 49 4E  .......D3DRS_LIN
  00003090: 45 57 49 44 54 48 F2 F1 03 04 03 00 8B 00 15 44  EWIDTH.........D
  000030A0: 33 44 52 53 5F 44 58 54 31 4E 4F 49 53 45 45 4E  3DRS_DXT1NOISEEN
  000030B0: 41 42 4C 45 03 04 03 00 8C 00 0F 44 33 44 52 53  ABLE.......D3DRS
  000030C0: 5F 59 55 56 45 4E 41 42 4C 45 F2 F1 03 04 03 00  _YUVENABLE......
  000030D0: 8D 00 19 44 33 44 52 53 5F 4F 43 43 4C 55 53 49  ...D3DRS_OCCLUSI
  000030E0: 4F 4E 43 55 4C 4C 45 4E 41 42 4C 45 03 04 03 00  ONCULLENABLE....
  000030F0: 8E 00 17 44 33 44 52 53 5F 53 54 45 4E 43 49 4C  ...D3DRS_STENCIL
  00003100: 43 55 4C 4C 45 4E 41 42 4C 45 F2 F1 03 04 03 00  CULLENABLE......
  00003110: 8F 00 17 44 33 44 52 53 5F 52 4F 50 5A 43 4D 50  ...D3DRS_ROPZCMP
  00003120: 41 4C 57 41 59 53 52 45 41 44 F2 F1 03 04 03 00  ALWAYSREAD......
  00003130: 90 00 0E 44 33 44 52 53 5F 52 4F 50 5A 52 45 41  ...D3DRS_ROPZREA
  00003140: 44 F3 F2 F1 03 04 03 00 91 00 1B 44 33 44 52 53  D..........D3DRS
  00003150: 5F 44 4F 4E 4F 54 43 55 4C 4C 55 4E 43 4F 4D 50  _DONOTCULLUNCOMP
  00003160: 52 45 53 53 45 44 F2 F1 03 04 03 00 92 00 09 44  RESSED.........D
  00003170: 33 44 52 53 5F 4D 41 58 03 04 03 00 04 80 FF FF  3DRS_MAX........
  00003180: FF 7F 11 44 33 44 52 53 5F 46 4F 52 43 45 5F 44  ...D3DRS_FORCE_D
  00003190: 57 4F 52 44 22 00 07 10 97 00 00 00 74 00 00 00  WORD".......t...
  000031A0: B5 10 00 00 13 5F 44 33 44 52 45 4E 44 45 52 53  ....._D3DRENDERS
  000031B0: 54 41 54 45 54 59 50 45 0E 00 01 12 02 00 00 00  TATETYPE........
  000031C0: B6 10 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  ...."...........
  000031D0: 2C 10 00 00 00 00 00 00 07 00 02 00 B7 10 00 00  ,...............
  000031E0: 00 00 00 00 0E 00 01 12 02 00 00 00 B6 10 00 00  ................
  000031F0: 22 04 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  "...........,...
  00003200: 00 00 00 00 07 00 02 00 B9 10 00 00 00 00 00 00  ................
  00003210: 0A 00 01 12 01 00 00 00 22 00 00 00 1A 00 09 10  ........".......
  00003220: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 01 00  ....,...........
  00003230: BB 10 00 00 00 00 00 00 6A 00 03 12 03 04 03 00  ........j.......
  00003240: 01 00 0A 44 33 44 53 42 54 5F 41 4C 4C F3 F2 F1  ...D3DSBT_ALL...
  00003250: 03 04 03 00 02 00 11 44 33 44 53 42 54 5F 50 49  .......D3DSBT_PI
  00003260: 58 45 4C 53 54 41 54 45 03 04 03 00 03 00 12 44  XELSTATE.......D
  00003270: 33 44 53 42 54 5F 56 45 52 54 45 58 53 54 41 54  3DSBT_VERTEXSTAT
  00003280: 45 F3 F2 F1 03 04 03 00 04 80 FF FF FF 7F 12 44  E..............D
  00003290: 33 44 53 42 54 5F 46 4F 52 43 45 5F 44 57 4F 52  3DSBT_FORCE_DWOR
  000032A0: 44 F3 F2 F1 22 00 07 10 04 00 00 00 74 00 00 00  D...".......t...
  000032B0: BD 10 00 00 12 5F 44 33 44 53 54 41 54 45 42 4C  ....._D3DSTATEBL
  000032C0: 4F 43 4B 54 59 50 45 F1 0E 00 01 12 02 00 00 00  OCKTYPE.........
  000032D0: BE 10 00 00 22 04 00 00 1A 00 09 10 12 00 00 00  ...."...........
  000032E0: 2C 10 00 00 00 00 00 00 07 00 02 00 BF 10 00 00  ,...............
  000032F0: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  00003300: 00 00 00 00 00 00 00 00 00 00 0E 44 33 44 42 61  ...........D3DBa
  00003310: 73 65 54 65 78 74 75 72 65 F3 F2 F1 0A 00 02 10  seTexture.......
  00003320: C1 10 00 00 0A 00 00 00 0A 00 02 10 C2 10 00 00  ................
  00003330: 0A 00 00 00 0E 00 01 12 02 00 00 00 22 00 00 00  ............"...
  00003340: C3 10 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  ............,...
  00003350: 00 00 00 00 07 00 02 00 C4 10 00 00 00 00 00 00  ................
  00003360: 0E 00 01 12 02 00 00 00 22 00 00 00 C2 10 00 00  ........".......
  00003370: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003380: 07 00 02 00 C6 10 00 00 00 00 00 00 9E 03 03 12  ................
  00003390: 03 04 03 00 00 00 0F 44 33 44 54 53 53 5F 41 44  .......D3DTSS_AD
  000033A0: 44 52 45 53 53 55 F2 F1 03 04 03 00 01 00 0F 44  DRESSU.........D
  000033B0: 33 44 54 53 53 5F 41 44 44 52 45 53 53 56 F2 F1  3DTSS_ADDRESSV..
  000033C0: 03 04 03 00 02 00 0F 44 33 44 54 53 53 5F 41 44  .......D3DTSS_AD
  000033D0: 44 52 45 53 53 57 F2 F1 03 04 03 00 03 00 10 44  DRESSW.........D
  000033E0: 33 44 54 53 53 5F 4D 41 47 46 49 4C 54 45 52 F1  3DTSS_MAGFILTER.
  000033F0: 03 04 03 00 04 00 10 44 33 44 54 53 53 5F 4D 49  .......D3DTSS_MI
  00003400: 4E 46 49 4C 54 45 52 F1 03 04 03 00 05 00 10 44  NFILTER........D
  00003410: 33 44 54 53 53 5F 4D 49 50 46 49 4C 54 45 52 F1  3DTSS_MIPFILTER.
  00003420: 03 04 03 00 06 00 14 44 33 44 54 53 53 5F 4D 49  .......D3DTSS_MI
  00003430: 50 4D 41 50 4C 4F 44 42 49 41 53 F1 03 04 03 00  PMAPLODBIAS.....
  00003440: 07 00 12 44 33 44 54 53 53 5F 4D 41 58 4D 49 50  ...D3DTSS_MAXMIP
  00003450: 4C 45 56 45 4C F3 F2 F1 03 04 03 00 08 00 14 44  LEVEL..........D
  00003460: 33 44 54 53 53 5F 4D 41 58 41 4E 49 53 4F 54 52  3DTSS_MAXANISOTR
  00003470: 4F 50 59 F1 03 04 03 00 09 00 11 44 33 44 54 53  OPY........D3DTS
  00003480: 53 5F 43 4F 4C 4F 52 4B 45 59 4F 50 03 04 03 00  S_COLORKEYOP....
  00003490: 0A 00 10 44 33 44 54 53 53 5F 43 4F 4C 4F 52 53  ...D3DTSS_COLORS
  000034A0: 49 47 4E F1 03 04 03 00 0B 00 10 44 33 44 54 53  IGN........D3DTS
  000034B0: 53 5F 41 4C 50 48 41 4B 49 4C 4C F1 03 04 03 00  S_ALPHAKILL.....
  000034C0: 0C 00 21 44 33 44 54 53 53 5F 44 45 46 45 52 52  ..!D3DTSS_DEFERR
  000034D0: 45 44 5F 54 45 58 54 55 52 45 5F 53 54 41 54 45  ED_TEXTURE_STATE
  000034E0: 5F 4D 41 58 03 04 03 00 0C 00 0E 44 33 44 54 53  _MAX.......D3DTS
  000034F0: 53 5F 43 4F 4C 4F 52 4F 50 F3 F2 F1 03 04 03 00  S_COLOROP.......
  00003500: 0D 00 10 44 33 44 54 53 53 5F 43 4F 4C 4F 52 41  ...D3DTSS_COLORA
  00003510: 52 47 30 F1 03 04 03 00 0E 00 10 44 33 44 54 53  RG0........D3DTS
  00003520: 53 5F 43 4F 4C 4F 52 41 52 47 31 F1 03 04 03 00  S_COLORARG1.....
  00003530: 0F 00 10 44 33 44 54 53 53 5F 43 4F 4C 4F 52 41  ...D3DTSS_COLORA
  00003540: 52 47 32 F1 03 04 03 00 10 00 0E 44 33 44 54 53  RG2........D3DTS
  00003550: 53 5F 41 4C 50 48 41 4F 50 F3 F2 F1 03 04 03 00  S_ALPHAOP.......
  00003560: 11 00 10 44 33 44 54 53 53 5F 41 4C 50 48 41 41  ...D3DTSS_ALPHAA
  00003570: 52 47 30 F1 03 04 03 00 12 00 10 44 33 44 54 53  RG0........D3DTS
  00003580: 53 5F 41 4C 50 48 41 41 52 47 31 F1 03 04 03 00  S_ALPHAARG1.....
  00003590: 13 00 10 44 33 44 54 53 53 5F 41 4C 50 48 41 41  ...D3DTSS_ALPHAA
  000035A0: 52 47 32 F1 03 04 03 00 14 00 10 44 33 44 54 53  RG2........D3DTS
  000035B0: 53 5F 52 45 53 55 4C 54 41 52 47 F1 03 04 03 00  S_RESULTARG.....
  000035C0: 15 00 1C 44 33 44 54 53 53 5F 54 45 58 54 55 52  ...D3DTSS_TEXTUR
  000035D0: 45 54 52 41 4E 53 46 4F 52 4D 46 4C 41 47 53 F1  ETRANSFORMFLAGS.
  000035E0: 03 04 03 00 16 00 13 44 33 44 54 53 53 5F 44 45  .......D3DTSS_DE
  000035F0: 46 45 52 52 45 44 5F 4D 41 58 F2 F1 03 04 03 00  FERRED_MAX......
  00003600: 16 00 13 44 33 44 54 53 53 5F 42 55 4D 50 45 4E  ...D3DTSS_BUMPEN
  00003610: 56 4D 41 54 30 30 F2 F1 03 04 03 00 17 00 13 44  VMAT00.........D
  00003620: 33 44 54 53 53 5F 42 55 4D 50 45 4E 56 4D 41 54  3DTSS_BUMPENVMAT
  00003630: 30 31 F2 F1 03 04 03 00 18 00 13 44 33 44 54 53  01.........D3DTS
  00003640: 53 5F 42 55 4D 50 45 4E 56 4D 41 54 31 31 F2 F1  S_BUMPENVMAT11..
  00003650: 03 04 03 00 19 00 13 44 33 44 54 53 53 5F 42 55  .......D3DTSS_BU
  00003660: 4D 50 45 4E 56 4D 41 54 31 30 F2 F1 03 04 03 00  MPENVMAT10......
  00003670: 1A 00 14 44 33 44 54 53 53 5F 42 55 4D 50 45 4E  ...D3DTSS_BUMPEN
  00003680: 56 4C 53 43 41 4C 45 F1 03 04 03 00 1B 00 15 44  VLSCALE........D
  00003690: 33 44 54 53 53 5F 42 55 4D 50 45 4E 56 4C 4F 46  3DTSS_BUMPENVLOF
  000036A0: 46 53 45 54 03 04 03 00 1C 00 14 44 33 44 54 53  FSET.......D3DTS
  000036B0: 53 5F 54 45 58 43 4F 4F 52 44 49 4E 44 45 58 F1  S_TEXCOORDINDEX.
  000036C0: 03 04 03 00 1D 00 12 44 33 44 54 53 53 5F 42 4F  .......D3DTSS_BO
  000036D0: 52 44 45 52 43 4F 4C 4F 52 F3 F2 F1 03 04 03 00  RDERCOLOR.......
  000036E0: 1E 00 14 44 33 44 54 53 53 5F 43 4F 4C 4F 52 4B  ...D3DTSS_COLORK
  000036F0: 45 59 43 4F 4C 4F 52 F1 03 04 03 00 20 00 0A 44  EYCOLOR..... ..D
  00003700: 33 44 54 53 53 5F 4D 41 58 F3 F2 F1 03 04 03 00  3DTSS_MAX.......
  00003710: 04 80 FF FF FF 7F 12 44 33 44 54 53 53 5F 46 4F  .......D3DTSS_FO
  00003720: 52 43 45 5F 44 57 4F 52 44 F3 F2 F1 2A 00 07 10  RCE_DWORD...*...
  00003730: 23 00 00 00 74 00 00 00 C8 10 00 00 19 5F 44 33  #...t........_D3
  00003740: 44 54 45 58 54 55 52 45 53 54 41 47 45 53 54 41  DTEXTURESTAGESTA
  00003750: 54 45 54 59 50 45 F2 F1 12 00 01 12 03 00 00 00  TETYPE..........
  00003760: 22 00 00 00 C9 10 00 00 22 04 00 00 1A 00 09 10  ".......".......
  00003770: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  00003780: CA 10 00 00 00 00 00 00 12 00 01 12 03 00 00 00  ................
  00003790: 22 00 00 00 C9 10 00 00 22 00 00 00 1A 00 09 10  ".......".......
  000037A0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  000037B0: CC 10 00 00 00 00 00 00 22 01 03 12 03 04 03 00  ........".......
  000037C0: 01 00 0F 44 33 44 50 54 5F 50 4F 49 4E 54 4C 49  ...D3DPT_POINTLI
  000037D0: 53 54 F2 F1 03 04 03 00 02 00 0E 44 33 44 50 54  ST.........D3DPT
  000037E0: 5F 4C 49 4E 45 4C 49 53 54 F3 F2 F1 03 04 03 00  _LINELIST.......
  000037F0: 03 00 0E 44 33 44 50 54 5F 4C 49 4E 45 4C 4F 4F  ...D3DPT_LINELOO
  00003800: 50 F3 F2 F1 03 04 03 00 04 00 0F 44 33 44 50 54  P..........D3DPT
  00003810: 5F 4C 49 4E 45 53 54 52 49 50 F2 F1 03 04 03 00  _LINESTRIP......
  00003820: 05 00 12 44 33 44 50 54 5F 54 52 49 41 4E 47 4C  ...D3DPT_TRIANGL
  00003830: 45 4C 49 53 54 F3 F2 F1 03 04 03 00 06 00 13 44  ELIST..........D
  00003840: 33 44 50 54 5F 54 52 49 41 4E 47 4C 45 53 54 52  3DPT_TRIANGLESTR
  00003850: 49 50 F2 F1 03 04 03 00 07 00 11 44 33 44 50 54  IP.........D3DPT
  00003860: 5F 54 52 49 41 4E 47 4C 45 46 41 4E 03 04 03 00  _TRIANGLEFAN....
  00003870: 08 00 0E 44 33 44 50 54 5F 51 55 41 44 4C 49 53  ...D3DPT_QUADLIS
  00003880: 54 F3 F2 F1 03 04 03 00 09 00 0F 44 33 44 50 54  T..........D3DPT
  00003890: 5F 51 55 41 44 53 54 52 49 50 F2 F1 03 04 03 00  _QUADSTRIP......
  000038A0: 0A 00 0D 44 33 44 50 54 5F 50 4F 4C 59 47 4F 4E  ...D3DPT_POLYGON
  000038B0: 03 04 03 00 0B 00 09 44 33 44 50 54 5F 4D 41 58  .......D3DPT_MAX
  000038C0: 03 04 03 00 04 80 FF FF FF 7F 11 44 33 44 50 54  ...........D3DPT
  000038D0: 5F 46 4F 52 43 45 5F 44 57 4F 52 44 22 00 07 10  _FORCE_DWORD"...
  000038E0: 0C 00 00 00 74 00 00 00 CE 10 00 00 11 5F 44 33  ....t........_D3
  000038F0: 44 50 52 49 4D 49 54 49 56 45 54 59 50 45 F2 F1  DPRIMITIVETYPE..
  00003900: 12 00 01 12 03 00 00 00 CF 10 00 00 75 00 00 00  ............u...
  00003910: 75 00 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  u...........,...
  00003920: 00 00 00 00 07 00 03 00 D0 10 00 00 00 00 00 00  ................
  00003930: 1A 00 01 12 05 00 00 00 CF 10 00 00 75 00 00 00  ............u...
  00003940: 75 00 00 00 75 00 00 00 75 00 00 00 1A 00 09 10  u...u...u.......
  00003950: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 05 00  ....,...........
  00003960: D2 10 00 00 00 00 00 00 0A 00 01 10 03 00 00 00  ................
  00003970: 01 00 F2 F1 0A 00 02 10 D4 10 00 00 0A 00 00 00  ................
  00003980: 16 00 01 12 04 00 00 00 CF 10 00 00 75 00 00 00  ............u...
  00003990: D5 10 00 00 75 00 00 00 1A 00 09 10 12 00 00 00  ....u...........
  000039A0: 2C 10 00 00 00 00 00 00 07 00 04 00 D6 10 00 00  ,...............
  000039B0: 00 00 00 00 26 00 01 12 08 00 00 00 CF 10 00 00  ....&...........
  000039C0: 75 00 00 00 75 00 00 00 75 00 00 00 D5 10 00 00  u...u...u.......
  000039D0: 1B 10 00 00 D5 10 00 00 75 00 00 00 1A 00 09 10  ........u.......
  000039E0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 08 00  ....,...........
  000039F0: D8 10 00 00 00 00 00 00 0A 00 01 10 22 00 00 00  ............"...
  00003A00: 01 00 F2 F1 0A 00 02 10 DA 10 00 00 0A 00 00 00  ................
  00003A10: 16 00 01 12 04 00 00 00 DB 10 00 00 DB 10 00 00  ................
  00003A20: 22 04 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  "..."...........
  00003A30: 2C 10 00 00 00 00 00 00 07 00 04 00 DC 10 00 00  ,...............
  00003A40: 00 00 00 00 0A 00 01 12 01 00 00 00 22 04 00 00  ............"...
  00003A50: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003A60: 07 00 01 00 DE 10 00 00 00 00 00 00 12 00 01 12  ................
  00003A70: 03 00 00 00 74 00 00 00 D5 10 00 00 22 00 00 00  ....t......."...
  00003A80: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003A90: 07 00 03 00 E0 10 00 00 00 00 00 00 12 00 01 12  ................
  00003AA0: 03 00 00 00 74 00 00 00 03 04 00 00 22 00 00 00  ....t......."...
  00003AB0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003AC0: 07 00 03 00 E2 10 00 00 00 00 00 00 12 00 01 12  ................
  00003AD0: 03 00 00 00 22 00 00 00 03 04 00 00 22 04 00 00  ...."......."...
  00003AE0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003AF0: 07 00 03 00 E4 10 00 00 00 00 00 00 12 00 01 12  ................
  00003B00: 03 00 00 00 75 00 00 00 71 10 00 00 75 00 00 00  ....u...q...u...
  00003B10: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003B20: 07 00 03 00 E6 10 00 00 00 00 00 00 12 00 01 12  ................
  00003B30: 03 00 00 00 75 00 00 00 72 10 00 00 75 04 00 00  ....u...r...u...
  00003B40: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003B50: 07 00 03 00 E8 10 00 00 00 00 00 00 0E 00 01 12  ................
  00003B60: 02 00 00 00 76 10 00 00 75 00 00 00 1A 00 09 10  ....v...u.......
  00003B70: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  ....,...........
  00003B80: EA 10 00 00 00 00 00 00 0E 00 01 12 02 00 00 00  ................
  00003B90: 77 10 00 00 75 04 00 00 1A 00 09 10 12 00 00 00  w...u...........
  00003BA0: 2C 10 00 00 00 00 00 00 07 00 02 00 EC 10 00 00  ,...............
  00003BB0: 00 00 00 00 2A 00 05 10 00 00 80 00 00 00 00 00  ....*...........
  00003BC0: 00 00 00 00 00 00 00 00 00 00 12 5F 44 33 44 50  ..........._D3DP
  00003BD0: 69 78 65 6C 53 68 61 64 65 72 44 65 66 F3 F2 F1  ixelShaderDef...
  00003BE0: 0A 00 01 10 EE 10 00 00 01 00 F2 F1 0A 00 02 10  ................
  00003BF0: EF 10 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  00003C00: F0 10 00 00 22 04 00 00 1A 00 09 10 12 00 00 00  ...."...........
  00003C10: 2C 10 00 00 00 00 00 00 07 00 02 00 F1 10 00 00  ,...............
  00003C20: 00 00 00 00 0A 00 01 12 01 00 00 00 F0 10 00 00  ................
  00003C30: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003C40: 07 00 01 00 F3 10 00 00 00 00 00 00 12 00 01 12  ................
  00003C50: 03 00 00 00 22 00 00 00 D5 10 00 00 22 00 00 00  ...."......."...
  00003C60: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003C70: 07 00 03 00 F5 10 00 00 00 00 00 00 12 00 01 12  ................
  00003C80: 03 00 00 00 22 00 00 00 03 04 00 00 22 00 00 00  ...."......."...
  00003C90: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003CA0: 07 00 03 00 F7 10 00 00 00 00 00 00 0A 00 02 10  ................
  00003CB0: EE 10 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  00003CC0: 22 00 00 00 F9 10 00 00 1A 00 09 10 12 00 00 00  "...............
  00003CD0: 2C 10 00 00 00 00 00 00 07 00 02 00 FA 10 00 00  ,...............
  00003CE0: 00 00 00 00 0A 00 01 10 40 00 00 00 01 00 F2 F1  ........@.......
  00003CF0: 0A 00 02 10 FC 10 00 00 0A 00 00 00 2A 00 05 10  ............*...
  00003D00: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00003D10: 00 00 12 5F 44 33 44 52 45 43 54 50 41 54 43 48  ..._D3DRECTPATCH
  00003D20: 5F 49 4E 46 4F F3 F2 F1 0A 00 01 10 FE 10 00 00  _INFO...........
  00003D30: 01 00 F2 F1 0A 00 02 10 FF 10 00 00 0A 00 00 00  ................
  00003D40: 12 00 01 12 03 00 00 00 75 00 00 00 FD 10 00 00  ........u.......
  00003D50: 00 11 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  ............,...
  00003D60: 00 00 00 00 07 00 03 00 01 11 00 00 00 00 00 00  ................
  00003D70: 26 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  &...............
  00003D80: 00 00 00 00 00 00 11 5F 44 33 44 54 52 49 50 41  ......._D3DTRIPA
  00003D90: 54 43 48 5F 49 4E 46 4F 0A 00 01 10 03 11 00 00  TCH_INFO........
  00003DA0: 01 00 F2 F1 0A 00 02 10 04 11 00 00 0A 00 00 00  ................
  00003DB0: 12 00 01 12 03 00 00 00 75 00 00 00 FD 10 00 00  ........u.......
  00003DC0: 05 11 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  ............,...
  00003DD0: 00 00 00 00 07 00 03 00 06 11 00 00 00 00 00 00  ................
  00003DE0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003DF0: 07 00 01 00 10 10 00 00 00 00 00 00 0A 00 01 12  ................
  00003E00: 01 00 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  ...."...........
  00003E10: 2C 10 00 00 00 00 00 00 07 00 01 00 09 11 00 00  ,...............
  00003E20: 00 00 00 00 0A 00 01 12 01 00 00 00 22 04 00 00  ............"...
  00003E30: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003E40: 07 00 01 00 0B 11 00 00 00 00 00 00 1A 00 09 10  ................
  00003E50: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  ....,...........
  00003E60: 31 10 00 00 00 00 00 00 0E 00 01 12 02 00 00 00  1...............
  00003E70: DB 10 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  ...."...........
  00003E80: 2C 10 00 00 00 00 00 00 07 00 02 00 0E 11 00 00  ,...............
  00003E90: 00 00 00 00 2E 00 05 10 00 00 80 00 00 00 00 00  ................
  00003EA0: 00 00 00 00 00 00 00 00 00 00 19 5F 44 33 44 56  ..........._D3DV
  00003EB0: 45 52 54 45 58 41 54 54 52 49 42 55 54 45 46 4F  ERTEXATTRIBUTEFO
  00003EC0: 52 4D 41 54 0A 00 02 10 10 11 00 00 0A 00 00 00  RMAT............
  00003ED0: 0E 00 01 12 02 00 00 00 11 11 00 00 22 00 00 00  ............"...
  00003EE0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003EF0: 07 00 02 00 12 11 00 00 00 00 00 00 0E 00 01 12  ................
  00003F00: 02 00 00 00 22 00 00 00 FD 10 00 00 1A 00 09 10  ...."...........
  00003F10: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  ....,...........
  00003F20: 14 11 00 00 00 00 00 00 0E 00 01 12 02 00 00 00  ................
  00003F30: 22 00 00 00 75 04 00 00 1A 00 09 10 12 00 00 00  "...u...........
  00003F40: 2C 10 00 00 00 00 00 00 07 00 02 00 16 11 00 00  ,...............
  00003F50: 00 00 00 00 0E 00 01 12 02 00 00 00 22 00 00 00  ............"...
  00003F60: 22 04 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  "...........,...
  00003F70: 00 00 00 00 07 00 02 00 18 11 00 00 00 00 00 00  ................
  00003F80: 0A 00 01 10 21 00 00 00 01 00 F2 F1 0A 00 02 10  ....!...........
  00003F90: 1A 11 00 00 0A 00 00 00 12 00 01 12 03 00 00 00  ................
  00003FA0: CF 10 00 00 75 00 00 00 1B 11 00 00 1A 00 09 10  ....u...........
  00003FB0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  00003FC0: 1C 11 00 00 00 00 00 00 1A 00 01 12 05 00 00 00  ................
  00003FD0: CF 10 00 00 75 00 00 00 D5 10 00 00 D5 10 00 00  ....u...........
  00003FE0: 75 00 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  u...........,...
  00003FF0: 00 00 00 00 07 00 05 00 1E 11 00 00 00 00 00 00  ................
  00004000: 0E 00 01 12 02 00 00 00 75 00 00 00 1B 11 00 00  ........u.......
  00004010: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00004020: 07 00 02 00 20 11 00 00 00 00 00 00 96 00 03 12  .... ...........
  00004030: 03 04 03 00 00 00 0E 44 33 44 50 41 4C 45 54 54  .......D3DPALETT
  00004040: 45 5F 32 35 36 F3 F2 F1 03 04 03 00 01 00 0E 44  E_256..........D
  00004050: 33 44 50 41 4C 45 54 54 45 5F 31 32 38 F3 F2 F1  3DPALETTE_128...
  00004060: 03 04 03 00 02 00 0D 44 33 44 50 41 4C 45 54 54  .......D3DPALETT
  00004070: 45 5F 36 34 03 04 03 00 03 00 0D 44 33 44 50 41  E_64.......D3DPA
  00004080: 4C 45 54 54 45 5F 33 32 03 04 03 00 04 00 0E 44  LETTE_32.......D
  00004090: 33 44 50 41 4C 45 54 54 45 5F 4D 41 58 F3 F2 F1  3DPALETTE_MAX...
  000040A0: 03 04 03 00 04 80 FF FF FF 7F 16 44 33 44 50 41  ...........D3DPA
  000040B0: 4C 45 54 54 45 5F 46 4F 52 43 45 5F 44 57 4F 52  LETTE_FORCE_DWOR
  000040C0: 44 F3 F2 F1 1E 00 07 10 06 00 00 00 74 00 00 00  D...........t...
  000040D0: 22 11 00 00 0F 5F 44 33 44 50 41 4C 45 54 54 45  "...._D3DPALETTE
  000040E0: 53 49 5A 45 22 00 05 10 00 00 80 00 00 00 00 00  SIZE"...........
  000040F0: 00 00 00 00 00 00 00 00 00 00 0A 44 33 44 50 61  ...........D3DPa
  00004100: 6C 65 74 74 65 F3 F2 F1 0A 00 02 10 24 11 00 00  lette.......$...
  00004110: 0A 00 00 00 0A 00 02 10 25 11 00 00 0A 00 00 00  ........%.......
  00004120: 0E 00 01 12 02 00 00 00 23 11 00 00 26 11 00 00  ........#...&...
  00004130: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00004140: 07 00 02 00 27 11 00 00 00 00 00 00 0E 00 01 12  ....'...........
  00004150: 02 00 00 00 22 00 00 00 26 11 00 00 1A 00 09 10  ...."...&.......
  00004160: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  ....,...........
  00004170: 29 11 00 00 00 00 00 00 0E 00 01 12 02 00 00 00  )...............
  00004180: 22 00 00 00 25 11 00 00 1A 00 09 10 12 00 00 00  "...%...........
  00004190: 2C 10 00 00 00 00 00 00 07 00 02 00 2B 11 00 00  ,...........+...
  000041A0: 00 00 00 00 1A 00 01 12 05 00 00 00 51 10 00 00  ............Q...
  000041B0: 4D 10 00 00 4D 10 00 00 74 00 00 00 22 00 00 00  M...M...t..."...
  000041C0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  000041D0: 07 00 05 00 2D 11 00 00 00 00 00 00 0A 00 01 12  ....-...........
  000041E0: 01 00 00 00 74 00 00 00 1A 00 09 10 12 00 00 00  ....t...........
  000041F0: 2C 10 00 00 00 00 00 00 07 00 01 00 2F 11 00 00  ,.........../...
  00004200: 00 00 00 00 12 00 01 12 03 00 00 00 22 00 00 00  ............"...
  00004210: 75 04 00 00 23 04 00 00 1A 00 09 10 12 00 00 00  u...#...........
  00004220: 2C 10 00 00 00 00 00 00 07 00 03 00 31 11 00 00  ,...........1...
  00004230: 00 00 00 00 1A 00 09 10 74 00 00 00 2C 10 00 00  ........t...,...
  00004240: 00 00 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  00004250: 26 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  &...............
  00004260: 00 00 00 00 00 00 10 5F 44 33 44 46 49 45 4C 44  ......._D3DFIELD
  00004270: 5F 53 54 41 54 55 53 F1 0A 00 02 10 34 11 00 00  _STATUS.....4...
  00004280: 0A 00 00 00 0A 00 01 12 01 00 00 00 35 11 00 00  ............5...
  00004290: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  000042A0: 07 00 01 00 36 11 00 00 00 00 00 00 12 00 01 12  ....6...........
  000042B0: 03 00 00 00 74 00 00 00 40 00 00 00 40 00 00 00  ....t...@...@...
  000042C0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  000042D0: 07 00 03 00 38 11 00 00 00 00 00 00 1A 00 01 12  ....8...........
  000042E0: 05 00 00 00 74 00 00 00 40 00 00 00 40 00 00 00  ....t...@...@...
  000042F0: 40 00 00 00 40 00 00 00 1A 00 09 10 12 00 00 00  @...@...........
  00004300: 2C 10 00 00 00 00 00 00 07 00 05 00 3A 11 00 00  ,...........:...
  00004310: 00 00 00 00 12 00 01 12 03 00 00 00 74 00 00 00  ............t...
  00004320: 11 00 00 00 11 00 00 00 1A 00 09 10 12 00 00 00  ................
  00004330: 2C 10 00 00 00 00 00 00 07 00 03 00 3C 11 00 00  ,...........<...
  00004340: 00 00 00 00 1A 00 01 12 05 00 00 00 74 00 00 00  ............t...
  00004350: 11 00 00 00 11 00 00 00 11 00 00 00 11 00 00 00  ................
  00004360: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00004370: 07 00 05 00 3E 11 00 00 00 00 00 00 1A 00 01 12  ....>...........
  00004380: 05 00 00 00 74 00 00 00 20 00 00 00 20 00 00 00  ....t... ... ...
  00004390: 20 00 00 00 20 00 00 00 1A 00 09 10 12 00 00 00   ... ...........
  000043A0: 2C 10 00 00 00 00 00 00 07 00 05 00 40 11 00 00  ,...........@...
  000043B0: 00 00 00 00 0E 00 01 12 02 00 00 00 74 00 00 00  ............t...
  000043C0: 22 00 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  "...........,...
  000043D0: 00 00 00 00 07 00 02 00 42 11 00 00 00 00 00 00  ........B.......
  000043E0: 0A 00 01 12 01 00 00 00 CF 10 00 00 1A 00 09 10  ................
  000043F0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 01 00  ....,...........
  00004400: 44 11 00 00 00 00 00 00 1E 00 05 10 00 00 80 00  D...............
  00004410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 08 44  ...............D
  00004420: 33 44 46 69 78 75 70 F1 0A 00 02 10 46 11 00 00  3DFixup.....F...
  00004430: 0A 00 00 00 0A 00 02 10 47 11 00 00 0A 00 00 00  ........G.......
  00004440: 0E 00 01 12 02 00 00 00 75 00 00 00 48 11 00 00  ........u...H...
  00004450: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00004460: 07 00 02 00 49 11 00 00 00 00 00 00 22 00 05 10  ....I......."...
  00004470: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00004480: 00 00 0D 44 33 44 50 75 73 68 42 75 66 66 65 72  ...D3DPushBuffer
  00004490: 0A 00 02 10 4B 11 00 00 0A 00 00 00 0A 00 02 10  ....K...........
  000044A0: 4C 11 00 00 0A 00 00 00 12 00 01 12 03 00 00 00  L...............
  000044B0: 75 00 00 00 74 00 00 00 4D 11 00 00 1A 00 09 10  u...t...M.......
  000044C0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  000044D0: 4E 11 00 00 00 00 00 00 0A 00 01 12 01 00 00 00  N...............
  000044E0: 4C 11 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  L...........,...
  000044F0: 00 00 00 00 07 00 01 00 50 11 00 00 00 00 00 00  ........P.......
  00004500: 0E 00 01 12 02 00 00 00 4C 11 00 00 47 11 00 00  ........L...G...
  00004510: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00004520: 07 00 02 00 52 11 00 00 00 00 00 00 0A 00 01 12  ....R...........
  00004530: 01 00 00 00 96 10 00 00 1A 00 09 10 12 00 00 00  ................
  00004540: 2C 10 00 00 00 00 00 00 07 00 01 00 54 11 00 00  ,...........T...
  00004550: 00 00 00 00 12 00 01 12 03 00 00 00 93 10 00 00  ................
  00004560: 93 10 00 00 93 10 00 00 1A 00 09 10 12 00 00 00  ................
  00004570: 2C 10 00 00 00 00 00 00 07 00 03 00 56 11 00 00  ,...........V...
  00004580: 00 00 00 00 16 00 01 12 04 00 00 00 75 00 00 00  ............u...
  00004590: 93 10 00 00 93 10 00 00 93 10 00 00 1A 00 09 10  ................
  000045A0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 04 00  ....,...........
  000045B0: 58 11 00 00 00 00 00 00 12 00 01 12 03 00 00 00  X...............
  000045C0: 75 00 00 00 96 10 00 00 96 10 00 00 1A 00 09 10  u...............
  000045D0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  000045E0: 5A 11 00 00 00 00 00 00 26 00 05 10 00 00 80 00  Z.......&.......
  000045F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10 5F  ..............._
  00004600: 44 33 44 53 54 52 45 41 4D 5F 49 4E 50 55 54 F1  D3DSTREAM_INPUT.
  00004610: 0A 00 01 10 5C 11 00 00 01 00 F2 F1 0A 00 02 10  ....\...........
  00004620: 5D 11 00 00 0A 00 00 00 12 00 01 12 03 00 00 00  ]...............
  00004630: 22 00 00 00 75 00 00 00 5E 11 00 00 1A 00 09 10  "...u...^.......
  00004640: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  00004650: 5F 11 00 00 00 00 00 00 12 00 01 12 03 00 00 00  _...............
  00004660: 11 11 00 00 75 00 00 00 5E 11 00 00 1A 00 09 10  ....u...^.......
  00004670: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  00004680: 61 11 00 00 00 00 00 00 0A 00 02 10 5C 11 00 00  a...........\...
  00004690: 0A 00 00 00 12 00 01 12 03 00 00 00 22 04 00 00  ............"...
  000046A0: 75 04 00 00 63 11 00 00 1A 00 09 10 12 00 00 00  u...c...........
  000046B0: 2C 10 00 00 00 00 00 00 07 00 03 00 64 11 00 00  ,...........d...
  000046C0: 00 00 00 00 12 00 01 12 03 00 00 00 22 00 00 00  ............"...
  000046D0: 74 00 00 00 8C 10 00 00 1A 00 09 10 12 00 00 00  t...............
  000046E0: 2C 10 00 00 00 00 00 00 07 00 03 00 66 11 00 00  ,...........f...
  000046F0: 00 00 00 00 0A 00 02 10 8A 10 00 00 0A 00 00 00  ................
  00004700: 12 00 01 12 03 00 00 00 22 04 00 00 74 04 00 00  ........"...t...
  00004710: 68 11 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  h...........,...
  00004720: 00 00 00 00 07 00 03 00 69 11 00 00 00 00 00 00  ........i.......
  00004730: 1E 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  ................
  00004740: 00 00 00 00 00 00 08 5F 44 33 44 54 49 4C 45 F1  ......._D3DTILE.
  00004750: 0A 00 01 10 6B 11 00 00 01 00 F2 F1 0A 00 02 10  ....k...........
  00004760: 6C 11 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  l...............
  00004770: 22 00 00 00 6D 11 00 00 1A 00 09 10 12 00 00 00  "...m...........
  00004780: 2C 10 00 00 00 00 00 00 07 00 02 00 6E 11 00 00  ,...........n...
  00004790: 00 00 00 00 0A 00 02 10 6B 11 00 00 0A 00 00 00  ........k.......
  000047A0: 0E 00 01 12 02 00 00 00 22 00 00 00 70 11 00 00  ........"...p...
  000047B0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  000047C0: 07 00 02 00 71 11 00 00 00 00 00 00 1A 00 09 10  ....q...........
  000047D0: 22 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  "...,...........
  000047E0: 31 10 00 00 00 00 00 00 16 00 01 12 04 00 00 00  1...............
  000047F0: 22 00 00 00 22 00 00 00 DB 10 00 00 22 00 00 00  "..."......."...
  00004800: 1A 00 09 10 03 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00004810: 07 00 04 00 74 11 00 00 00 00 00 00 16 00 01 12  ....t...........
  00004820: 04 00 00 00 22 00 00 00 22 00 00 00 22 04 00 00  ...."..."..."...
  00004830: 22 00 00 00 1A 00 09 10 03 00 00 00 2C 10 00 00  "...........,...
  00004840: 00 00 00 00 07 00 04 00 76 11 00 00 00 00 00 00  ........v.......
  00004850: 0A 00 02 10 22 04 00 00 0A 00 00 00 0E 00 01 12  ...."...........
  00004860: 02 00 00 00 22 00 00 00 78 11 00 00 1A 00 09 10  ...."...x.......
  00004870: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  ....,...........
  00004880: 79 11 00 00 00 00 00 00 1A 00 09 10 03 00 00 00  y...............
  00004890: 2C 10 00 00 00 00 00 00 07 00 00 00 09 10 00 00  ,...............
  000048A0: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  000048B0: 00 00 00 00 00 00 00 00 00 00 0E 5F 44 33 44 56  ..........._D3DV
  000048C0: 42 4C 41 4E 4B 44 41 54 41 F3 F2 F1 0A 00 02 10  BLANKDATA.......
  000048D0: 7C 11 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  |...............
  000048E0: 7D 11 00 00 0E 00 08 10 03 00 00 00 00 00 01 00  }...............
  000048F0: 7E 11 00 00 0A 00 02 10 7F 11 00 00 0A 00 00 00  ~...............
  00004900: 0A 00 01 12 01 00 00 00 80 11 00 00 1A 00 09 10  ................
  00004910: 03 00 00 00 2C 10 00 00 00 00 00 00 07 00 01 00  ....,...........
  00004920: 81 11 00 00 00 00 00 00 22 00 05 10 00 00 80 00  ........".......
  00004930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0C 5F  ..............._
  00004940: 44 33 44 53 57 41 50 44 41 54 41 F1 0A 00 02 10  D3DSWAPDATA.....
  00004950: 83 11 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  ................
  00004960: 84 11 00 00 0E 00 08 10 03 00 00 00 00 00 01 00  ................
  00004970: 85 11 00 00 0A 00 02 10 86 11 00 00 0A 00 00 00  ................
  00004980: 0A 00 01 12 01 00 00 00 87 11 00 00 1A 00 09 10  ................
  00004990: 03 00 00 00 2C 10 00 00 00 00 00 00 07 00 01 00  ....,...........
  000049A0: 88 11 00 00 00 00 00 00 1A 00 09 10 22 00 00 00  ............"...
  000049B0: 2C 10 00 00 00 00 00 00 07 00 00 00 09 10 00 00  ,...............
  000049C0: 00 00 00 00 1A 00 09 10 74 00 00 00 2C 10 00 00  ........t...,...
  000049D0: 00 00 00 00 07 00 01 00 BB 10 00 00 00 00 00 00  ................
  000049E0: 1A 00 09 10 03 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  000049F0: 07 00 01 00 BB 10 00 00 00 00 00 00 5A 00 03 12  ............Z...
  00004A00: 03 04 03 00 00 00 10 44 33 44 43 41 4C 4C 42 41  .......D3DCALLBA
  00004A10: 43 4B 5F 52 45 41 44 F1 03 04 03 00 01 00 11 44  CK_READ........D
  00004A20: 33 44 43 41 4C 4C 42 41 43 4B 5F 57 52 49 54 45  3DCALLBACK_WRITE
  00004A30: 03 04 03 00 04 80 FF FF FF 7F 1B 44 33 44 43 41  ...........D3DCA
  00004A40: 4C 4C 42 41 43 4B 54 59 50 45 5F 46 4F 52 43 45  LLBACKTYPE_FORCE
  00004A50: 5F 44 57 4F 52 44 F2 F1 22 00 07 10 03 00 00 00  _DWORD..".......
  00004A60: 74 00 00 00 8D 11 00 00 10 5F 44 33 44 43 41 4C  t........_D3DCAL
  00004A70: 4C 42 41 43 4B 54 59 50 45 F3 F2 F1 0E 00 08 10  LBACKTYPE.......
  00004A80: 03 00 00 00 00 00 01 00 BB 10 00 00 0A 00 02 10  ................
  00004A90: 8F 11 00 00 0A 00 00 00 12 00 01 12 03 00 00 00  ................
  00004AA0: 8E 11 00 00 90 11 00 00 22 00 00 00 1A 00 09 10  ........".......
  00004AB0: 03 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  00004AC0: 91 11 00 00 00 00 00 00 1A 00 09 10 03 00 00 00  ................
  00004AD0: 2C 10 00 00 00 00 00 00 07 00 01 00 2F 11 00 00  ,.........../...
  00004AE0: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  00004AF0: 00 00 00 00 00 00 00 00 00 00 11 5F 44 33 44 43  ..........._D3DC
  00004B00: 4F 50 59 52 45 43 54 53 54 41 54 45 0A 00 01 10  OPYRECTSTATE....
  00004B10: 94 11 00 00 01 00 F2 F1 0A 00 02 10 95 11 00 00  ................
  00004B20: 0A 00 00 00 2A 00 05 10 00 00 80 00 00 00 00 00  ....*...........
  00004B30: 00 00 00 00 00 00 00 00 00 00 14 5F 44 33 44 43  ..........._D3DC
  00004B40: 4F 50 59 52 45 43 54 52 4F 50 53 54 41 54 45 F1  OPYRECTROPSTATE.
  00004B50: 0A 00 01 10 97 11 00 00 01 00 F2 F1 0A 00 02 10  ................
  00004B60: 98 11 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  00004B70: 96 11 00 00 99 11 00 00 1A 00 09 10 12 00 00 00  ................
  00004B80: 2C 10 00 00 00 00 00 00 07 00 02 00 9A 11 00 00  ,...............
  00004B90: 00 00 00 00 0A 00 02 10 94 11 00 00 0A 00 00 00  ................
  00004BA0: 0A 00 02 10 97 11 00 00 0A 00 00 00 0E 00 01 12  ................
  00004BB0: 02 00 00 00 9C 11 00 00 9D 11 00 00 1A 00 09 10  ................
  00004BC0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  ....,...........
  00004BD0: 9E 11 00 00 00 00 00 00 1A 00 09 10 22 00 00 00  ............"...
  00004BE0: 2C 10 00 00 00 00 00 00 07 00 01 00 BB 10 00 00  ,...............
  00004BF0: 00 00 00 00 0E 00 01 12 02 00 00 00 40 00 00 00  ............@...
  00004C00: 40 00 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  @...........,...
  00004C10: 00 00 00 00 07 00 02 00 A1 11 00 00 00 00 00 00  ................
  00004C20: 0E 00 01 12 02 00 00 00 40 04 00 00 40 04 00 00  ........@...@...
  00004C30: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00004C40: 07 00 02 00 A3 11 00 00 00 00 00 00 0A 00 01 12  ................
  00004C50: 01 00 00 00 22 00 00 00 1A 00 09 10 03 00 00 00  ...."...........
  00004C60: 2C 10 00 00 00 00 00 00 07 00 01 00 A5 11 00 00  ,...............
  00004C70: 00 00 00 00 1A 00 09 10 22 00 00 00 2C 10 00 00  ........"...,...
  00004C80: 00 00 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  00004C90: 7A 10 03 12 0B 14 0B 00 3D 10 00 00 06 41 64 64  z.......=....Add
  00004CA0: 52 65 66 F1 0B 14 0B 00 3D 10 00 00 07 52 65 6C  Ref.....=....Rel
  00004CB0: 65 61 73 65 0B 14 0B 00 40 10 00 00 0B 47 65 74  ease....@....Get
  00004CC0: 44 69 72 65 63 74 33 44 0B 14 0B 00 42 10 00 00  Direct3D....B...
  00004CD0: 0D 47 65 74 44 65 76 69 63 65 43 61 70 73 F2 F1  .GetDeviceCaps..
  00004CE0: 0B 14 0B 00 44 10 00 00 0E 47 65 74 44 69 73 70  ....D....GetDisp
  00004CF0: 6C 61 79 4D 6F 64 65 F1 0B 14 0B 00 48 10 00 00  layMode.....H...
  00004D00: 15 47 65 74 43 72 65 61 74 69 6F 6E 50 61 72 61  .GetCreationPara
  00004D10: 6D 65 74 65 72 73 F2 F1 0B 14 0B 00 4A 10 00 00  meters......J...
  00004D20: 05 52 65 73 65 74 F2 F1 0B 14 0B 00 4F 10 00 00  .Reset......O...
  00004D30: 07 50 72 65 73 65 6E 74 0B 14 0B 00 54 10 00 00  .Present....T...
  00004D40: 0D 47 65 74 42 61 63 6B 42 75 66 66 65 72 F2 F1  .GetBackBuffer..
  00004D50: 0B 14 0B 00 58 10 00 00 0F 47 65 74 52 61 73 74  ....X....GetRast
  00004D60: 65 72 53 74 61 74 75 73 0B 14 0B 00 5D 10 00 00  erStatus....]...
  00004D70: 0C 53 65 74 47 61 6D 6D 61 52 61 6D 70 F3 F2 F1  .SetGammaRamp...
  00004D80: 0B 14 0B 00 60 10 00 00 0C 47 65 74 47 61 6D 6D  ....`....GetGamm
  00004D90: 61 52 61 6D 70 F3 F2 F1 0B 14 0B 00 65 10 00 00  aRamp.......e...
  00004DA0: 0D 43 72 65 61 74 65 54 65 78 74 75 72 65 F2 F1  .CreateTexture..
  00004DB0: 0B 14 0B 00 6A 10 00 00 13 43 72 65 61 74 65 56  ....j....CreateV
  00004DC0: 6F 6C 75 6D 65 54 65 78 74 75 72 65 0B 14 0B 00  olumeTexture....
  00004DD0: 6F 10 00 00 11 43 72 65 61 74 65 43 75 62 65 54  o....CreateCubeT
  00004DE0: 65 78 74 75 72 65 F2 F1 0B 14 0B 00 74 10 00 00  exture......t...
  00004DF0: 12 43 72 65 61 74 65 56 65 72 74 65 78 42 75 66  .CreateVertexBuf
  00004E00: 66 65 72 F1 0B 14 0B 00 79 10 00 00 11 43 72 65  fer.....y....Cre
  00004E10: 61 74 65 49 6E 64 65 78 42 75 66 66 65 72 F2 F1  ateIndexBuffer..
  00004E20: 0B 14 0B 00 7B 10 00 00 12 43 72 65 61 74 65 52  ....{....CreateR
  00004E30: 65 6E 64 65 72 54 61 72 67 65 74 F1 0B 14 0B 00  enderTarget.....
  00004E40: 7D 10 00 00 19 43 72 65 61 74 65 44 65 70 74 68  }....CreateDepth
  00004E50: 53 74 65 6E 63 69 6C 53 75 72 66 61 63 65 F2 F1  StencilSurface..
  00004E60: 0B 14 0B 00 7F 10 00 00 12 43 72 65 61 74 65 49  .........CreateI
  00004E70: 6D 61 67 65 53 75 72 66 61 63 65 F1 0B 14 0B 00  mageSurface.....
  00004E80: 84 10 00 00 09 43 6F 70 79 52 65 63 74 73 F2 F1  .....CopyRects..
  00004E90: 0B 14 0B 00 86 10 00 00 0F 53 65 74 52 65 6E 64  .........SetRend
  00004EA0: 65 72 54 61 72 67 65 74 0B 14 0B 00 88 10 00 00  erTarget........
  00004EB0: 0F 47 65 74 52 65 6E 64 65 72 54 61 72 67 65 74  .GetRenderTarget
  00004EC0: 0B 14 0B 00 88 10 00 00 16 47 65 74 44 65 70 74  .........GetDept
  00004ED0: 68 53 74 65 6E 63 69 6C 53 75 72 66 61 63 65 F1  hStencilSurface.
  00004EE0: 0B 14 0B 00 89 10 00 00 0A 42 65 67 69 6E 53 63  .........BeginSc
  00004EF0: 65 6E 65 F1 0B 14 0B 00 89 10 00 00 08 45 6E 64  ene..........End
  00004F00: 53 63 65 6E 65 F3 F2 F1 0B 14 0B 00 8E 10 00 00  Scene...........
  00004F10: 05 43 6C 65 61 72 F2 F1 0B 14 0B 00 95 10 00 00  .Clear..........
  00004F20: 0C 53 65 74 54 72 61 6E 73 66 6F 72 6D F3 F2 F1  .SetTransform...
  00004F30: 0B 14 0B 00 98 10 00 00 0C 47 65 74 54 72 61 6E  .........GetTran
  00004F40: 73 66 6F 72 6D F3 F2 F1 0B 14 0B 00 95 10 00 00  sform...........
  00004F50: 11 4D 75 6C 74 69 70 6C 79 54 72 61 6E 73 66 6F  .MultiplyTransfo
  00004F60: 72 6D F2 F1 0B 14 0B 00 9D 10 00 00 0B 53 65 74  rm...........Set
  00004F70: 56 69 65 77 70 6F 72 74 0B 14 0B 00 A0 10 00 00  Viewport........
  00004F80: 0B 47 65 74 56 69 65 77 70 6F 72 74 0B 14 0B 00  .GetViewport....
  00004F90: A5 10 00 00 0B 53 65 74 4D 61 74 65 72 69 61 6C  .....SetMaterial
  00004FA0: 0B 14 0B 00 A8 10 00 00 0B 47 65 74 4D 61 74 65  .........GetMate
  00004FB0: 72 69 61 6C 0B 14 0B 00 AD 10 00 00 08 53 65 74  rial.........Set
  00004FC0: 4C 69 67 68 74 F3 F2 F1 0B 14 0B 00 B0 10 00 00  Light...........
  00004FD0: 08 47 65 74 4C 69 67 68 74 F3 F2 F1 0B 14 0B 00  .GetLight.......
  00004FE0: B2 10 00 00 0B 4C 69 67 68 74 45 6E 61 62 6C 65  .....LightEnable
  00004FF0: 0B 14 0B 00 B4 10 00 00 0E 47 65 74 4C 69 67 68  .........GetLigh
  00005000: 74 45 6E 61 62 6C 65 F1 0B 14 0B 00 B8 10 00 00  tEnable.........
  00005010: 0E 53 65 74 52 65 6E 64 65 72 53 74 61 74 65 F1  .SetRenderState.
  00005020: 0B 14 0B 00 BA 10 00 00 0E 47 65 74 52 65 6E 64  .........GetRend
  00005030: 65 72 53 74 61 74 65 F1 0B 14 0B 00 BC 10 00 00  erState.........
  00005040: 0F 41 70 70 6C 79 53 74 61 74 65 42 6C 6F 63 6B  .ApplyStateBlock
  00005050: 0B 14 0B 00 BC 10 00 00 11 43 61 70 74 75 72 65  .........Capture
  00005060: 53 74 61 74 65 42 6C 6F 63 6B F2 F1 0B 14 0B 00  StateBlock......
  00005070: BC 10 00 00 10 44 65 6C 65 74 65 53 74 61 74 65  .....DeleteState
  00005080: 42 6C 6F 63 6B F3 F2 F1 0B 14 0B 00 C0 10 00 00  Block...........
  00005090: 10 43 72 65 61 74 65 53 74 61 74 65 42 6C 6F 63  .CreateStateBloc
  000050A0: 6B F3 F2 F1 0B 14 0B 00 C5 10 00 00 0A 47 65 74  k............Get
  000050B0: 54 65 78 74 75 72 65 F1 0B 14 0B 00 C7 10 00 00  Texture.........
  000050C0: 0A 53 65 74 54 65 78 74 75 72 65 F1 0B 14 0B 00  .SetTexture.....
  000050D0: CB 10 00 00 14 47 65 74 54 65 78 74 75 72 65 53  .....GetTextureS
  000050E0: 74 61 67 65 53 74 61 74 65 F3 F2 F1 0B 14 0B 00  tageState.......
  000050F0: CD 10 00 00 14 53 65 74 54 65 78 74 75 72 65 53  .....SetTextureS
  00005100: 74 61 67 65 53 74 61 74 65 F3 F2 F1 0B 14 0B 00  tageState.......
  00005110: D1 10 00 00 0D 44 72 61 77 50 72 69 6D 69 74 69  .....DrawPrimiti
  00005120: 76 65 F2 F1 0B 14 0B 00 D3 10 00 00 14 44 72 61  ve...........Dra
  00005130: 77 49 6E 64 65 78 65 64 50 72 69 6D 69 74 69 76  wIndexedPrimitiv
  00005140: 65 F3 F2 F1 0B 14 0B 00 D7 10 00 00 0F 44 72 61  e............Dra
  00005150: 77 50 72 69 6D 69 74 69 76 65 55 50 0B 14 0B 00  wPrimitiveUP....
  00005160: D9 10 00 00 16 44 72 61 77 49 6E 64 65 78 65 64  .....DrawIndexed
  00005170: 50 72 69 6D 69 74 69 76 65 55 50 F1 0B 14 0B 00  PrimitiveUP.....
  00005180: DD 10 00 00 12 43 72 65 61 74 65 56 65 72 74 65  .....CreateVerte
  00005190: 78 53 68 61 64 65 72 F1 0B 14 0B 00 BC 10 00 00  xShader.........
  000051A0: 0F 53 65 74 56 65 72 74 65 78 53 68 61 64 65 72  .SetVertexShader
  000051B0: 0B 14 0B 00 DF 10 00 00 0F 47 65 74 56 65 72 74  .........GetVert
  000051C0: 65 78 53 68 61 64 65 72 0B 14 0B 00 BC 10 00 00  exShader........
  000051D0: 12 44 65 6C 65 74 65 56 65 72 74 65 78 53 68 61  .DeleteVertexSha
  000051E0: 64 65 72 F1 0B 14 0B 00 E1 10 00 00 17 53 65 74  der..........Set
  000051F0: 56 65 72 74 65 78 53 68 61 64 65 72 43 6F 6E 73  VertexShaderCons
  00005200: 74 61 6E 74 0B 14 0B 00 E3 10 00 00 17 47 65 74  tant.........Get
  00005210: 56 65 72 74 65 78 53 68 61 64 65 72 43 6F 6E 73  VertexShaderCons
  00005220: 74 61 6E 74 0B 14 0B 00 E5 10 00 00 1A 47 65 74  tant.........Get
  00005230: 56 65 72 74 65 78 53 68 61 64 65 72 44 65 63 6C  VertexShaderDecl
  00005240: 61 72 61 74 69 6F 6E F1 0B 14 0B 00 E5 10 00 00  aration.........
  00005250: 17 47 65 74 56 65 72 74 65 78 53 68 61 64 65 72  .GetVertexShader
  00005260: 46 75 6E 63 74 69 6F 6E 0B 14 0B 00 E7 10 00 00  Function........
  00005270: 0F 53 65 74 53 74 72 65 61 6D 53 6F 75 72 63 65  .SetStreamSource
  00005280: 0B 14 0B 00 E9 10 00 00 0F 47 65 74 53 74 72 65  .........GetStre
  00005290: 61 6D 53 6F 75 72 63 65 0B 14 0B 00 EB 10 00 00  amSource........
  000052A0: 0A 53 65 74 49 6E 64 69 63 65 73 F1 0B 14 0B 00  .SetIndices.....
  000052B0: ED 10 00 00 0A 47 65 74 49 6E 64 69 63 65 73 F1  .....GetIndices.
  000052C0: 0B 14 0B 00 F2 10 00 00 11 43 72 65 61 74 65 50  .........CreateP
  000052D0: 69 78 65 6C 53 68 61 64 65 72 F2 F1 0B 14 0B 00  ixelShader......
  000052E0: BC 10 00 00 0E 53 65 74 50 69 78 65 6C 53 68 61  .....SetPixelSha
  000052F0: 64 65 72 F1 0B 14 0B 00 F4 10 00 00 15 53 65 74  der..........Set
  00005300: 50 69 78 65 6C 53 68 61 64 65 72 50 72 6F 67 72  PixelShaderProgr
  00005310: 61 6D F2 F1 0B 14 0B 00 DF 10 00 00 0E 47 65 74  am...........Get
  00005320: 50 69 78 65 6C 53 68 61 64 65 72 F1 0B 14 0B 00  PixelShader.....
  00005330: BC 10 00 00 11 44 65 6C 65 74 65 50 69 78 65 6C  .....DeletePixel
  00005340: 53 68 61 64 65 72 F2 F1 0B 14 0B 00 F6 10 00 00  Shader..........
  00005350: 16 53 65 74 50 69 78 65 6C 53 68 61 64 65 72 43  .SetPixelShaderC
  00005360: 6F 6E 73 74 61 6E 74 F1 0B 14 0B 00 F8 10 00 00  onstant.........
  00005370: 16 47 65 74 50 69 78 65 6C 53 68 61 64 65 72 43  .GetPixelShaderC
  00005380: 6F 6E 73 74 61 6E 74 F1 0B 14 0B 00 FB 10 00 00  onstant.........
  00005390: 16 47 65 74 50 69 78 65 6C 53 68 61 64 65 72 46  .GetPixelShaderF
  000053A0: 75 6E 63 74 69 6F 6E F1 0B 14 0B 00 02 11 00 00  unction.........
  000053B0: 0D 44 72 61 77 52 65 63 74 50 61 74 63 68 F2 F1  .DrawRectPatch..
  000053C0: 0B 14 0B 00 07 11 00 00 0C 44 72 61 77 54 72 69  .........DrawTri
  000053D0: 50 61 74 63 68 F3 F2 F1 0B 14 0B 00 08 11 00 00  Patch...........
  000053E0: 0B 44 65 6C 65 74 65 50 61 74 63 68 0B 14 0B 00  .DeletePatch....
  000053F0: 0A 11 00 00 15 53 65 74 53 68 61 64 65 72 43 6F  .....SetShaderCo
  00005400: 6E 73 74 61 6E 74 4D 6F 64 65 F2 F1 0B 14 0B 00  nstantMode......
  00005410: 0C 11 00 00 15 47 65 74 53 68 61 64 65 72 43 6F  .....GetShaderCo
  00005420: 6E 73 74 61 6E 74 4D 6F 64 65 F2 F1 0B 14 0B 00  nstantMode......
  00005430: 0D 11 00 00 10 4C 6F 61 64 56 65 72 74 65 78 53  .....LoadVertexS
  00005440: 68 61 64 65 72 F3 F2 F1 0B 14 0B 00 0F 11 00 00  hader...........
  00005450: 17 4C 6F 61 64 56 65 72 74 65 78 53 68 61 64 65  .LoadVertexShade
  00005460: 72 50 72 6F 67 72 61 6D 0B 14 0B 00 0D 11 00 00  rProgram........
  00005470: 12 53 65 6C 65 63 74 56 65 72 74 65 78 53 68 61  .SelectVertexSha
  00005480: 64 65 72 F1 0B 14 0B 00 13 11 00 00 18 53 65 6C  der..........Sel
  00005490: 65 63 74 56 65 72 74 65 78 53 68 61 64 65 72 44  ectVertexShaderD
  000054A0: 69 72 65 63 74 F3 F2 F1 0B 14 0B 00 15 11 00 00  irect...........
  000054B0: 14 52 75 6E 56 65 72 74 65 78 53 74 61 74 65 53  .RunVertexStateS
  000054C0: 68 61 64 65 72 F3 F2 F1 0B 14 0B 00 17 11 00 00  hader...........
  000054D0: 13 47 65 74 56 65 72 74 65 78 53 68 61 64 65 72  .GetVertexShader
  000054E0: 53 69 7A 65 0B 14 0B 00 19 11 00 00 13 47 65 74  Size.........Get
  000054F0: 56 65 72 74 65 78 53 68 61 64 65 72 54 79 70 65  VertexShaderType
  00005500: 0B 14 0B 00 D1 10 00 00 0C 44 72 61 77 56 65 72  .........DrawVer
  00005510: 74 69 63 65 73 F3 F2 F1 0B 14 0B 00 1D 11 00 00  tices...........
  00005520: 13 44 72 61 77 49 6E 64 65 78 65 64 56 65 72 74  .DrawIndexedVert
  00005530: 69 63 65 73 0B 14 0B 00 D7 10 00 00 0E 44 72 61  ices.........Dra
  00005540: 77 56 65 72 74 69 63 65 73 55 50 F1 0B 14 0B 00  wVerticesUP.....
  00005550: 1F 11 00 00 15 44 72 61 77 49 6E 64 65 78 65 64  .....DrawIndexed
  00005560: 56 65 72 74 69 63 65 73 55 50 F2 F1 0B 14 0B 00  VerticesUP......
  00005570: 21 11 00 00 10 50 72 69 6D 65 56 65 72 74 65 78  !....PrimeVertex
  00005580: 43 61 63 68 65 F3 F2 F1 0B 14 0B 00 28 11 00 00  Cache.......(...
  00005590: 0D 43 72 65 61 74 65 50 61 6C 65 74 74 65 F2 F1  .CreatePalette..
  000055A0: 0B 14 0B 00 2A 11 00 00 0A 47 65 74 50 61 6C 65  ....*....GetPale
  000055B0: 74 74 65 F1 0B 14 0B 00 2C 11 00 00 0A 53 65 74  tte.....,....Set
  000055C0: 50 61 6C 65 74 74 65 F1 0B 14 0B 00 CD 10 00 00  Palette.........
  000055D0: 1D 53 65 74 54 65 78 74 75 72 65 53 74 61 67 65  .SetTextureStage
  000055E0: 53 74 61 74 65 4E 6F 74 49 6E 6C 69 6E 65 F2 F1  StateNotInline..
  000055F0: 0B 14 0B 00 B8 10 00 00 17 53 65 74 52 65 6E 64  .........SetRend
  00005600: 65 72 53 74 61 74 65 4E 6F 74 49 6E 6C 69 6E 65  erStateNotInline
  00005610: 0B 14 0B 00 A5 10 00 00 0F 53 65 74 42 61 63 6B  .........SetBack
  00005620: 4D 61 74 65 72 69 61 6C 0B 14 0B 00 A8 10 00 00  Material........
  00005630: 0F 47 65 74 42 61 63 6B 4D 61 74 65 72 69 61 6C  .GetBackMaterial
  00005640: 0B 14 0B 00 2E 11 00 00 0D 55 70 64 61 74 65 4F  .........UpdateO
  00005650: 76 65 72 6C 61 79 F2 F1 0B 14 0B 00 30 11 00 00  verlay......0...
  00005660: 0D 45 6E 61 62 6C 65 4F 76 65 72 6C 61 79 F2 F1  .EnableOverlay..
  00005670: 0B 14 0B 00 89 10 00 00 13 42 65 67 69 6E 56 69  .........BeginVi
  00005680: 73 69 62 69 6C 69 74 79 54 65 73 74 0B 14 0B 00  sibilityTest....
  00005690: BC 10 00 00 11 45 6E 64 56 69 73 69 62 69 6C 69  .....EndVisibili
  000056A0: 74 79 54 65 73 74 F2 F1 0B 14 0B 00 32 11 00 00  tyTest......2...
  000056B0: 17 47 65 74 56 69 73 69 62 69 6C 69 74 79 54 65  .GetVisibilityTe
  000056C0: 73 74 52 65 73 75 6C 74 0B 14 0B 00 33 11 00 00  stResult....3...
  000056D0: 16 47 65 74 4F 76 65 72 6C 61 79 55 70 64 61 74  .GetOverlayUpdat
  000056E0: 65 53 74 61 74 75 73 F1 0B 14 0B 00 37 11 00 00  eStatus.....7...
  000056F0: 15 47 65 74 44 69 73 70 6C 61 79 46 69 65 6C 64  .GetDisplayField
  00005700: 53 74 61 74 75 73 F2 F1 0B 14 0B 00 39 11 00 00  Status......9...
  00005710: 0F 53 65 74 56 65 72 74 65 78 44 61 74 61 32 66  .SetVertexData2f
  00005720: 0B 14 0B 00 3B 11 00 00 0F 53 65 74 56 65 72 74  ....;....SetVert
  00005730: 65 78 44 61 74 61 34 66 0B 14 0B 00 3D 11 00 00  exData4f....=...
  00005740: 0F 53 65 74 56 65 72 74 65 78 44 61 74 61 32 73  .SetVertexData2s
  00005750: 0B 14 0B 00 3F 11 00 00 0F 53 65 74 56 65 72 74  ....?....SetVert
  00005760: 65 78 44 61 74 61 34 73 0B 14 0B 00 41 11 00 00  exData4s....A...
  00005770: 10 53 65 74 56 65 72 74 65 78 44 61 74 61 34 75  .SetVertexData4u
  00005780: 62 F3 F2 F1 0B 14 0B 00 43 11 00 00 12 53 65 74  b.......C....Set
  00005790: 56 65 72 74 65 78 44 61 74 61 43 6F 6C 6F 72 F1  VertexDataColor.
  000057A0: 0B 14 0B 00 45 11 00 00 05 42 65 67 69 6E F2 F1  ....E....Begin..
  000057B0: 0B 14 0B 00 89 10 00 00 03 45 6E 64 0B 14 0B 00  .........End....
  000057C0: 4A 11 00 00 0B 43 72 65 61 74 65 46 69 78 75 70  J....CreateFixup
  000057D0: 0B 14 0B 00 4F 11 00 00 10 43 72 65 61 74 65 50  ....O....CreateP
  000057E0: 75 73 68 42 75 66 66 65 72 F3 F2 F1 0B 14 0B 00  ushBuffer.......
  000057F0: 51 11 00 00 0F 42 65 67 69 6E 50 75 73 68 42 75  Q....BeginPushBu
  00005800: 66 66 65 72 0B 14 0B 00 89 10 00 00 0D 45 6E 64  ffer.........End
  00005810: 50 75 73 68 42 75 66 66 65 72 F2 F1 0B 14 0B 00  PushBuffer......
  00005820: 53 11 00 00 0D 52 75 6E 50 75 73 68 42 75 66 66  S....RunPushBuff
  00005830: 65 72 F2 F1 0B 14 0B 00 DF 10 00 00 13 47 65 74  er...........Get
  00005840: 50 75 73 68 42 75 66 66 65 72 4F 66 66 73 65 74  PushBufferOffset
  00005850: 0B 14 0B 00 89 10 00 00 03 4E 6F 70 0B 14 0B 00  .........Nop....
  00005860: 55 11 00 00 1B 47 65 74 50 72 6F 6A 65 63 74 69  U....GetProjecti
  00005870: 6F 6E 56 69 65 77 70 6F 72 74 4D 61 74 72 69 78  onViewportMatrix
  00005880: 0B 14 0B 00 57 11 00 00 0C 53 65 74 4D 6F 64 65  ....W....SetMode
  00005890: 6C 56 69 65 77 F3 F2 F1 0B 14 0B 00 55 11 00 00  lView.......U...
  000058A0: 0C 47 65 74 4D 6F 64 65 6C 56 69 65 77 F3 F2 F1  .GetModelView...
  000058B0: 0B 14 0B 00 59 11 00 00 17 53 65 74 56 65 72 74  ....Y....SetVert
  000058C0: 65 78 42 6C 65 6E 64 4D 6F 64 65 6C 56 69 65 77  exBlendModelView
  000058D0: 0B 14 0B 00 5B 11 00 00 17 47 65 74 56 65 72 74  ....[....GetVert
  000058E0: 65 78 42 6C 65 6E 64 4D 6F 64 65 6C 56 69 65 77  exBlendModelView
  000058F0: 0B 14 0B 00 60 11 00 00 14 53 65 74 56 65 72 74  ....`....SetVert
  00005900: 65 78 53 68 61 64 65 72 49 6E 70 75 74 F3 F2 F1  exShaderInput...
  00005910: 0B 14 0B 00 62 11 00 00 1A 53 65 74 56 65 72 74  ....b....SetVert
  00005920: 65 78 53 68 61 64 65 72 49 6E 70 75 74 44 69 72  exShaderInputDir
  00005930: 65 63 74 F1 0B 14 0B 00 65 11 00 00 14 47 65 74  ect.....e....Get
  00005940: 56 65 72 74 65 78 53 68 61 64 65 72 49 6E 70 75  VertexShaderInpu
  00005950: 74 F3 F2 F1 0B 14 0B 00 C7 10 00 00 0D 53 77 69  t............Swi
  00005960: 74 63 68 54 65 78 74 75 72 65 F2 F1 0B 14 0B 00  tchTexture......
  00005970: 89 10 00 00 07 53 75 73 70 65 6E 64 0B 14 0B 00  .....Suspend....
  00005980: 30 11 00 00 06 52 65 73 75 6D 65 F1 0B 14 0B 00  0....Resume.....
  00005990: 67 11 00 00 0B 53 65 74 53 63 69 73 73 6F 72 73  g....SetScissors
  000059A0: 0B 14 0B 00 6A 11 00 00 0B 47 65 74 53 63 69 73  ....j....GetScis
  000059B0: 73 6F 72 73 0B 14 0B 00 6F 11 00 00 07 53 65 74  sors....o....Set
  000059C0: 54 69 6C 65 0B 14 0B 00 72 11 00 00 07 47 65 74  Tile....r....Get
  000059D0: 54 69 6C 65 0B 14 0B 00 73 11 00 00 16 47 65 74  Tile....s....Get
  000059E0: 54 69 6C 65 43 6F 6D 70 72 65 73 73 69 6F 6E 54  TileCompressionT
  000059F0: 61 67 73 F1 0B 14 0B 00 75 11 00 00 19 53 65 74  ags.....u....Set
  00005A00: 54 69 6C 65 43 6F 6D 70 72 65 73 73 69 6F 6E 54  TileCompressionT
  00005A10: 61 67 42 69 74 73 F2 F1 0B 14 0B 00 77 11 00 00  agBits......w...
  00005A20: 19 47 65 74 54 69 6C 65 43 6F 6D 70 72 65 73 73  .GetTileCompress
  00005A30: 69 6F 6E 54 61 67 42 69 74 73 F2 F1 0B 14 0B 00  ionTagBits......
  00005A40: 7A 11 00 00 09 42 65 67 69 6E 50 75 73 68 F2 F1  z....BeginPush..
  00005A50: 0B 14 0B 00 DF 10 00 00 07 45 6E 64 50 75 73 68  .........EndPush
  00005A60: 0B 14 0B 00 33 11 00 00 06 49 73 42 75 73 79 F1  ....3....IsBusy.
  00005A70: 0B 14 0B 00 7B 11 00 00 0E 42 6C 6F 63 6B 55 6E  ....{....BlockUn
  00005A80: 74 69 6C 49 64 6C 65 F1 0B 14 0B 00 7B 11 00 00  tilIdle.....{...
  00005A90: 0E 4B 69 63 6B 50 75 73 68 42 75 66 66 65 72 F1  .KickPushBuffer.
  00005AA0: 0B 14 0B 00 82 11 00 00 18 53 65 74 56 65 72 74  .........SetVert
  00005AB0: 69 63 61 6C 42 6C 61 6E 6B 43 61 6C 6C 62 61 63  icalBlankCallbac
  00005AC0: 6B F3 F2 F1 0B 14 0B 00 89 11 00 00 0F 53 65 74  k............Set
  00005AD0: 53 77 61 70 43 61 6C 6C 62 61 63 6B 0B 14 0B 00  SwapCallback....
  00005AE0: 7B 11 00 00 17 42 6C 6F 63 6B 55 6E 74 69 6C 56  {....BlockUntilV
  00005AF0: 65 72 74 69 63 61 6C 42 6C 61 6E 6B 0B 14 0B 00  erticalBlank....
  00005B00: 8A 11 00 00 0B 49 6E 73 65 72 74 46 65 6E 63 65  .....InsertFence
  00005B10: 0B 14 0B 00 8B 11 00 00 0E 49 73 46 65 6E 63 65  .........IsFence
  00005B20: 50 65 6E 64 69 6E 67 F1 0B 14 0B 00 8C 11 00 00  Pending.........
  00005B30: 0C 42 6C 6F 63 6B 4F 6E 46 65 6E 63 65 F3 F2 F1  .BlockOnFence...
  00005B40: 0B 14 0B 00 92 11 00 00 0E 49 6E 73 65 72 74 43  .........InsertC
  00005B50: 61 6C 6C 62 61 63 6B F1 0B 14 0B 00 7B 11 00 00  allback.....{...
  00005B60: 10 46 6C 75 73 68 56 65 72 74 65 78 43 61 63 68  .FlushVertexCach
  00005B70: 65 F3 F2 F1 0B 14 0B 00 8C 11 00 00 10 53 65 74  e............Set
  00005B80: 46 6C 69 63 6B 65 72 46 69 6C 74 65 72 F3 F2 F1  FlickerFilter...
  00005B90: 0B 14 0B 00 93 11 00 00 14 53 65 74 53 6F 66 74  .........SetSoft
  00005BA0: 44 69 73 70 6C 61 79 46 69 6C 74 65 72 F3 F2 F1  DisplayFilter...
  00005BB0: 0B 14 0B 00 9B 11 00 00 11 53 65 74 43 6F 70 79  .........SetCopy
  00005BC0: 52 65 63 74 73 53 74 61 74 65 F2 F1 0B 14 0B 00  RectsState......
  00005BD0: 9F 11 00 00 11 47 65 74 43 6F 70 79 52 65 63 74  .....GetCopyRect
  00005BE0: 73 53 74 61 74 65 F2 F1 0B 14 0B 00 89 10 00 00  sState..........
  00005BF0: 0E 50 65 72 73 69 73 74 44 69 73 70 6C 61 79 F1  .PersistDisplay.
  00005C00: 0B 14 0B 00 88 10 00 00 13 47 65 74 50 65 72 73  .........GetPers
  00005C10: 69 73 74 65 64 53 75 72 66 61 63 65 0B 14 0B 00  istedSurface....
  00005C20: A0 11 00 00 04 53 77 61 70 F3 F2 F1 0B 14 0B 00  .....Swap.......
  00005C30: A2 11 00 00 12 53 65 74 42 61 63 6B 42 75 66 66  .....SetBackBuff
  00005C40: 65 72 53 63 61 6C 65 F1 0B 14 0B 00 A4 11 00 00  erScale.........
  00005C50: 12 47 65 74 42 61 63 6B 42 75 66 66 65 72 53 63  .GetBackBufferSc
  00005C60: 61 6C 65 F1 0B 14 0B 00 A2 11 00 00 14 53 65 74  ale..........Set
  00005C70: 53 63 72 65 65 6E 53 70 61 63 65 4F 66 66 73 65  ScreenSpaceOffse
  00005C80: 74 F3 F2 F1 0B 14 0B 00 A4 11 00 00 14 47 65 74  t............Get
  00005C90: 53 63 72 65 65 6E 53 70 61 63 65 4F 66 66 73 65  ScreenSpaceOffse
  00005CA0: 74 F3 F2 F1 0B 14 0B 00 A6 11 00 00 10 53 65 74  t............Set
  00005CB0: 4F 76 65 72 73 63 61 6E 43 6F 6C 6F 72 F3 F2 F1  OverscanColor...
  00005CC0: 0B 14 0B 00 A7 11 00 00 10 47 65 74 4F 76 65 72  .........GetOver
  00005CD0: 73 63 61 6E 43 6F 6C 6F 72 F3 F2 F1 0B 14 0B 00  scanColor.......
  00005CE0: A0 11 00 00 0E 53 65 74 44 65 62 75 67 4D 61 72  .....SetDebugMar
  00005CF0: 6B 65 72 F1 0B 14 0B 00 8A 11 00 00 0E 47 65 74  ker..........Get
  00005D00: 44 65 62 75 67 4D 61 72 6B 65 72 F1 1E 00 05 10  DebugMarker.....
  00005D10: A4 00 00 00 A8 11 00 00 00 00 00 00 00 00 00 00  ................
  00005D20: 01 00 09 44 33 44 44 65 76 69 63 65 9A 00 03 12  ...D3DDevice....
  00005D30: 03 04 03 00 01 00 15 44 33 44 53 57 41 50 45 46  .......D3DSWAPEF
  00005D40: 46 45 43 54 5F 44 49 53 43 41 52 44 03 04 03 00  FECT_DISCARD....
  00005D50: 02 00 12 44 33 44 53 57 41 50 45 46 46 45 43 54  ...D3DSWAPEFFECT
  00005D60: 5F 46 4C 49 50 F3 F2 F1 03 04 03 00 03 00 12 44  _FLIP..........D
  00005D70: 33 44 53 57 41 50 45 46 46 45 43 54 5F 43 4F 50  3DSWAPEFFECT_COP
  00005D80: 59 F3 F2 F1 03 04 03 00 04 00 18 44 33 44 53 57  Y..........D3DSW
  00005D90: 41 50 45 46 46 45 43 54 5F 43 4F 50 59 5F 56 53  APEFFECT_COPY_VS
  00005DA0: 59 4E 43 F1 03 04 03 00 04 80 FF FF FF 7F 19 44  YNC............D
  00005DB0: 33 44 53 57 41 50 45 46 46 45 43 54 5F 46 4F 52  3DSWAPEFFECT_FOR
  00005DC0: 43 45 5F 44 57 4F 52 44 1E 00 07 10 05 00 00 00  CE_DWORD........
  00005DD0: 74 00 00 00 AA 11 00 00 0E 5F 44 33 44 53 57 41  t........_D3DSWA
  00005DE0: 50 45 46 46 45 43 54 F1 1E 00 05 10 00 00 80 00  PEFFECT.........
  00005DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 06 48  ...............H
  00005E00: 57 4E 44 5F 5F F3 F2 F1 0A 00 02 10 AC 11 00 00  WND__...........
  00005E10: 0A 00 00 00 0E 00 03 10 51 10 00 00 11 00 00 00  ........Q.......
  00005E20: 0C 00 00 F1 BA 01 03 12 05 14 03 00 75 00 00 00  ............u...
  00005E30: 00 00 0F 42 61 63 6B 42 75 66 66 65 72 57 69 64  ...BackBufferWid
  00005E40: 74 68 F2 F1 05 14 03 00 75 00 00 00 04 00 10 42  th......u......B
  00005E50: 61 63 6B 42 75 66 66 65 72 48 65 69 67 68 74 F1  ackBufferHeight.
  00005E60: 05 14 03 00 1B 10 00 00 08 00 10 42 61 63 6B 42  ...........BackB
  00005E70: 75 66 66 65 72 46 6F 72 6D 61 74 F1 05 14 03 00  ufferFormat.....
  00005E80: 75 00 00 00 0C 00 0F 42 61 63 6B 42 75 66 66 65  u......BackBuffe
  00005E90: 72 43 6F 75 6E 74 F2 F1 05 14 03 00 22 00 00 00  rCount......"...
  00005EA0: 10 00 0F 4D 75 6C 74 69 53 61 6D 70 6C 65 54 79  ...MultiSampleTy
  00005EB0: 70 65 F2 F1 05 14 03 00 AB 11 00 00 14 00 0A 53  pe.............S
  00005EC0: 77 61 70 45 66 66 65 63 74 F3 F2 F1 05 14 03 00  wapEffect.......
  00005ED0: AD 11 00 00 18 00 0D 68 44 65 76 69 63 65 57 69  .......hDeviceWi
  00005EE0: 6E 64 6F 77 05 14 03 00 74 00 00 00 1C 00 08 57  ndow....t......W
  00005EF0: 69 6E 64 6F 77 65 64 F1 05 14 03 00 74 00 00 00  indowed.....t...
  00005F00: 20 00 16 45 6E 61 62 6C 65 41 75 74 6F 44 65 70   ..EnableAutoDep
  00005F10: 74 68 53 74 65 6E 63 69 6C F3 F2 F1 05 14 03 00  thStencil.......
  00005F20: 1B 10 00 00 24 00 16 41 75 74 6F 44 65 70 74 68  ....$..AutoDepth
  00005F30: 53 74 65 6E 63 69 6C 46 6F 72 6D 61 74 F3 F2 F1  StencilFormat...
  00005F40: 05 14 03 00 22 00 00 00 28 00 05 46 6C 61 67 73  ...."...(..Flags
  00005F50: 05 14 03 00 75 00 00 00 2C 00 1A 46 75 6C 6C 53  ....u...,..FullS
  00005F60: 63 72 65 65 6E 5F 52 65 66 72 65 73 68 52 61 74  creen_RefreshRat
  00005F70: 65 49 6E 48 7A F3 F2 F1 05 14 03 00 75 00 00 00  eInHz.......u...
  00005F80: 30 00 1F 46 75 6C 6C 53 63 72 65 65 6E 5F 50 72  0..FullScreen_Pr
  00005F90: 65 73 65 6E 74 61 74 69 6F 6E 49 6E 74 65 72 76  esentationInterv
  00005FA0: 61 6C F2 F1 05 14 03 00 AE 11 00 00 34 00 0E 42  al..........4..B
  00005FB0: 75 66 66 65 72 53 75 72 66 61 63 65 73 F3 F2 F1  ufferSurfaces...
  00005FC0: 05 14 03 00 51 10 00 00 40 00 13 44 65 70 74 68  ....Q...@..Depth
  00005FD0: 53 74 65 6E 63 69 6C 53 75 72 66 61 63 65 F2 F1  StencilSurface..
  00005FE0: 2E 00 05 10 0F 00 00 00 AF 11 00 00 00 00 00 00  ................
  00005FF0: 00 00 00 00 44 00 17 5F 44 33 44 50 52 45 53 45  ....D.._D3DPRESE
  00006000: 4E 54 5F 50 41 52 41 4D 45 54 45 52 53 5F F2 F1  NT_PARAMETERS_..
  00006010: 66 00 03 12 05 14 03 00 75 00 00 00 00 00 0E 41  f.......u......A
  00006020: 64 61 70 74 65 72 4F 72 64 69 6E 61 6C F3 F2 F1  dapterOrdinal...
  00006030: 05 14 03 00 19 10 00 00 04 00 0A 44 65 76 69 63  ...........Devic
  00006040: 65 54 79 70 65 F3 F2 F1 05 14 03 00 AD 11 00 00  eType...........
  00006050: 08 00 0C 68 46 6F 63 75 73 57 69 6E 64 6F 77 F1  ...hFocusWindow.
  00006060: 05 14 03 00 22 00 00 00 0C 00 0D 42 65 68 61 76  ...."......Behav
  00006070: 69 6F 72 46 6C 61 67 73 36 00 05 10 04 00 00 00  iorFlags6.......
  00006080: B1 11 00 00 00 00 00 00 00 00 00 00 10 00 1E 5F  ..............._
  00006090: 44 33 44 44 45 56 49 43 45 5F 43 52 45 41 54 49  D3DDEVICE_CREATI
  000060A0: 4F 4E 5F 50 41 52 41 4D 45 54 45 52 53 F3 F2 F1  ON_PARAMETERS...
  000060B0: 46 00 03 12 05 14 03 00 12 00 00 00 00 00 04 6C  F..............l
  000060C0: 65 66 74 F1 05 14 03 00 12 00 00 00 04 00 03 74  eft............t
  000060D0: 6F 70 F2 F1 05 14 03 00 12 00 00 00 08 00 05 72  op.............r
  000060E0: 69 67 68 74 05 14 03 00 12 00 00 00 0C 00 06 62  ight...........b
  000060F0: 6F 74 74 6F 6D F3 F2 F1 1E 00 05 10 04 00 00 00  ottom...........
  00006100: B3 11 00 00 00 00 00 00 00 00 00 00 10 00 07 74  ...............t
  00006110: 61 67 52 45 43 54 F2 F1 26 00 05 10 00 00 80 00  agRECT..&.......
  00006120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 11 44  ...............D
  00006130: 33 44 50 69 78 65 6C 43 6F 6E 74 61 69 6E 65 72  3DPixelContainer
  00006140: 0A 00 01 12 01 00 00 00 C3 10 00 00 0A 00 02 10  ................
  00006150: 50 10 00 00 0A 04 00 00 1A 00 09 10 12 00 00 00  P...............
  00006160: 50 10 00 00 B7 11 00 00 07 00 01 00 B6 11 00 00  P...............
  00006170: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  00006180: 00 00 00 00 00 00 00 00 00 00 10 5F 44 33 44 53  ..........._D3DS
  00006190: 55 52 46 41 43 45 5F 44 45 53 43 F1 0A 00 02 10  URFACE_DESC.....
  000061A0: B9 11 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  ................
  000061B0: BA 11 00 00 1A 00 09 10 12 00 00 00 50 10 00 00  ............P...
  000061C0: B7 11 00 00 07 00 01 00 BB 11 00 00 00 00 00 00  ................
  000061D0: 26 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  &...............
  000061E0: 00 00 00 00 00 00 0F 5F 44 33 44 4C 4F 43 4B 45  ......._D3DLOCKE
  000061F0: 44 5F 52 45 43 54 F2 F1 0A 00 02 10 BD 11 00 00  D_RECT..........
  00006200: 0A 00 00 00 12 00 01 12 03 00 00 00 BE 11 00 00  ................
  00006210: 4D 10 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  M..."...........
  00006220: 50 10 00 00 B7 11 00 00 07 00 03 00 BF 11 00 00  P...............
  00006230: 00 00 00 00 1A 00 09 10 12 00 00 00 50 10 00 00  ............P...
  00006240: B7 11 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  00006250: 72 00 03 12 00 14 03 00 B5 11 00 00 00 00 F2 F1  r...............
  00006260: 0B 14 03 00 B8 11 00 00 0C 47 65 74 43 6F 6E 74  .........GetCont
  00006270: 61 69 6E 65 72 F3 F2 F1 0B 14 03 00 BC 11 00 00  ainer...........
  00006280: 07 47 65 74 44 65 73 63 0B 14 03 00 C0 11 00 00  .GetDesc........
  00006290: 08 4C 6F 63 6B 52 65 63 74 F3 F2 F1 0B 14 03 00  .LockRect.......
  000062A0: C1 11 00 00 0A 55 6E 6C 6F 63 6B 52 65 63 74 F1  .....UnlockRect.
  000062B0: 05 14 03 00 C2 10 00 00 14 00 06 50 61 72 65 6E  ...........Paren
  000062C0: 74 F3 F2 F1 22 00 05 10 06 00 00 00 C2 11 00 00  t..."...........
  000062D0: 00 00 00 00 00 00 00 00 18 00 0A 44 33 44 53 75  ...........D3DSu
  000062E0: 72 66 61 63 65 F3 F2 F1 2A 00 03 12 05 14 03 00  rface...*.......
  000062F0: 74 00 00 00 00 00 08 49 6E 56 42 6C 61 6E 6B F1  t......InVBlank.
  00006300: 05 14 03 00 75 00 00 00 04 00 08 53 63 61 6E 4C  ....u......ScanL
  00006310: 69 6E 65 F1 26 00 05 10 02 00 00 00 C4 11 00 00  ine.&...........
  00006320: 00 00 00 00 00 00 00 00 08 00 11 5F 44 33 44 52  ..........._D3DR
  00006330: 41 53 54 45 52 5F 53 54 41 54 55 53 0E 00 03 10  ASTER_STATUS....
  00006340: 20 00 00 00 11 00 00 00 00 01 00 F1 32 00 03 12   ...........2...
  00006350: 05 14 03 00 C6 11 00 00 00 00 03 72 65 64 F2 F1  ...........red..
  00006360: 05 14 03 00 C6 11 00 00 00 01 05 67 72 65 65 6E  ...........green
  00006370: 05 14 03 00 C6 11 00 00 00 02 04 62 6C 75 65 F1  ...........blue.
  00006380: 22 00 05 10 03 00 00 00 C7 11 00 00 00 00 00 00  "...............
  00006390: 00 00 00 00 00 03 0D 5F 44 33 44 47 41 4D 4D 41  ......._D3DGAMMA
  000063A0: 52 41 4D 50 0E 00 01 12 02 00 00 00 75 00 00 00  RAMP........u...
  000063B0: BA 11 00 00 0A 00 02 10 61 10 00 00 0A 04 00 00  ........a.......
  000063C0: 1A 00 09 10 12 00 00 00 61 10 00 00 CA 11 00 00  ........a.......
  000063D0: 07 00 02 00 C9 11 00 00 00 00 00 00 0E 00 01 12  ................
  000063E0: 02 00 00 00 75 00 00 00 52 10 00 00 1A 00 09 10  ....u...R.......
  000063F0: 12 00 00 00 61 10 00 00 CA 11 00 00 07 00 02 00  ....a...........
  00006400: CC 11 00 00 00 00 00 00 16 00 01 12 04 00 00 00  ................
  00006410: 75 00 00 00 BE 11 00 00 4D 10 00 00 22 00 00 00  u.......M..."...
  00006420: 1A 00 09 10 12 00 00 00 61 10 00 00 CA 11 00 00  ........a.......
  00006430: 07 00 04 00 CE 11 00 00 00 00 00 00 1A 00 09 10  ................
  00006440: 12 00 00 00 61 10 00 00 CA 11 00 00 07 00 01 00  ....a...........
  00006450: 10 10 00 00 00 00 00 00 66 00 03 12 00 14 03 00  ........f.......
  00006460: C1 10 00 00 00 00 F2 F1 0B 14 03 00 CB 11 00 00  ................
  00006470: 0C 47 65 74 4C 65 76 65 6C 44 65 73 63 F3 F2 F1  .GetLevelDesc...
  00006480: 0B 14 03 00 CD 11 00 00 0F 47 65 74 53 75 72 66  .........GetSurf
  00006490: 61 63 65 4C 65 76 65 6C 0B 14 03 00 CF 11 00 00  aceLevel........
  000064A0: 08 4C 6F 63 6B 52 65 63 74 F3 F2 F1 0B 14 03 00  .LockRect.......
  000064B0: D0 11 00 00 0A 55 6E 6C 6F 63 6B 52 65 63 74 F1  .....UnlockRect.
  000064C0: 22 00 05 10 05 00 00 00 D1 11 00 00 00 00 00 00  "...............
  000064D0: 00 00 00 00 14 00 0A 44 33 44 54 65 78 74 75 72  .......D3DTextur
  000064E0: 65 F3 F2 F1 26 00 05 10 00 00 80 00 00 00 00 00  e...&...........
  000064F0: 00 00 00 00 00 00 00 00 00 00 0F 5F 44 33 44 56  ..........._D3DV
  00006500: 4F 4C 55 4D 45 5F 44 45 53 43 F2 F1 0A 00 02 10  OLUME_DESC......
  00006510: D3 11 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  00006520: 75 00 00 00 D4 11 00 00 0A 00 02 10 66 10 00 00  u...........f...
  00006530: 0A 04 00 00 1A 00 09 10 12 00 00 00 66 10 00 00  ............f...
  00006540: D6 11 00 00 07 00 02 00 D5 11 00 00 00 00 00 00  ................
  00006550: 1E 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  ................
  00006560: 00 00 00 00 00 00 09 44 33 44 56 6F 6C 75 6D 65  .......D3DVolume
  00006570: 0A 00 02 10 D8 11 00 00 0A 00 00 00 0A 00 02 10  ................
  00006580: D9 11 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  00006590: 75 00 00 00 DA 11 00 00 1A 00 09 10 12 00 00 00  u...............
  000065A0: 66 10 00 00 D6 11 00 00 07 00 02 00 DB 11 00 00  f...............
  000065B0: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  000065C0: 00 00 00 00 00 00 00 00 00 00 0E 5F 44 33 44 4C  ..........._D3DL
  000065D0: 4F 43 4B 45 44 5F 42 4F 58 F3 F2 F1 0A 00 02 10  OCKED_BOX.......
  000065E0: DD 11 00 00 0A 00 00 00 1E 00 05 10 00 00 80 00  ................
  000065F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 07 5F  ..............._
  00006600: 44 33 44 42 4F 58 F2 F1 0A 00 01 10 DF 11 00 00  D3DBOX..........
  00006610: 01 00 F2 F1 0A 00 02 10 E0 11 00 00 0A 00 00 00  ................
  00006620: 16 00 01 12 04 00 00 00 75 00 00 00 DE 11 00 00  ........u.......
  00006630: E1 11 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  ...."...........
  00006640: 66 10 00 00 D6 11 00 00 07 00 04 00 E2 11 00 00  f...............
  00006650: 00 00 00 00 1A 00 09 10 12 00 00 00 66 10 00 00  ............f...
  00006660: D6 11 00 00 07 00 01 00 10 10 00 00 00 00 00 00  ................
  00006670: 62 00 03 12 00 14 03 00 C1 10 00 00 00 00 F2 F1  b...............
  00006680: 0B 14 03 00 D7 11 00 00 0C 47 65 74 4C 65 76 65  .........GetLeve
  00006690: 6C 44 65 73 63 F3 F2 F1 0B 14 03 00 DC 11 00 00  lDesc...........
  000066A0: 0E 47 65 74 56 6F 6C 75 6D 65 4C 65 76 65 6C F1  .GetVolumeLevel.
  000066B0: 0B 14 03 00 E3 11 00 00 07 4C 6F 63 6B 42 6F 78  .........LockBox
  000066C0: 0B 14 03 00 E4 11 00 00 09 55 6E 6C 6F 63 6B 42  .........UnlockB
  000066D0: 6F 78 F2 F1 26 00 05 10 05 00 00 00 E5 11 00 00  ox..&...........
  000066E0: 00 00 00 00 00 00 00 00 14 00 10 44 33 44 56 6F  ...........D3DVo
  000066F0: 6C 75 6D 65 54 65 78 74 75 72 65 F1 0A 00 02 10  lumeTexture.....
  00006700: 6B 10 00 00 0A 04 00 00 1A 00 09 10 12 00 00 00  k...............
  00006710: 6B 10 00 00 E7 11 00 00 07 00 02 00 C9 11 00 00  k...............
  00006720: 00 00 00 00 02 01 03 12 03 04 03 00 00 00 1A 44  ...............D
  00006730: 33 44 43 55 42 45 4D 41 50 5F 46 41 43 45 5F 50  3DCUBEMAP_FACE_P
  00006740: 4F 53 49 54 49 56 45 5F 58 F3 F2 F1 03 04 03 00  OSITIVE_X.......
  00006750: 01 00 1A 44 33 44 43 55 42 45 4D 41 50 5F 46 41  ...D3DCUBEMAP_FA
  00006760: 43 45 5F 4E 45 47 41 54 49 56 45 5F 58 F3 F2 F1  CE_NEGATIVE_X...
  00006770: 03 04 03 00 02 00 1A 44 33 44 43 55 42 45 4D 41  .......D3DCUBEMA
  00006780: 50 5F 46 41 43 45 5F 50 4F 53 49 54 49 56 45 5F  P_FACE_POSITIVE_
  00006790: 59 F3 F2 F1 03 04 03 00 03 00 1A 44 33 44 43 55  Y..........D3DCU
  000067A0: 42 45 4D 41 50 5F 46 41 43 45 5F 4E 45 47 41 54  BEMAP_FACE_NEGAT
  000067B0: 49 56 45 5F 59 F3 F2 F1 03 04 03 00 04 00 1A 44  IVE_Y..........D
  000067C0: 33 44 43 55 42 45 4D 41 50 5F 46 41 43 45 5F 50  3DCUBEMAP_FACE_P
  000067D0: 4F 53 49 54 49 56 45 5F 5A F3 F2 F1 03 04 03 00  OSITIVE_Z.......
  000067E0: 05 00 1A 44 33 44 43 55 42 45 4D 41 50 5F 46 41  ...D3DCUBEMAP_FA
  000067F0: 43 45 5F 4E 45 47 41 54 49 56 45 5F 5A F3 F2 F1  CE_NEGATIVE_Z...
  00006800: 03 04 03 00 04 80 FF FF FF 7F 1B 44 33 44 43 55  ...........D3DCU
  00006810: 42 45 4D 41 50 5F 46 41 43 45 5F 46 4F 52 43 45  BEMAP_FACE_FORCE
  00006820: 5F 44 57 4F 52 44 F2 F1 22 00 07 10 07 00 00 00  _DWORD..".......
  00006830: 74 00 00 00 E9 11 00 00 11 5F 44 33 44 43 55 42  t........_D3DCUB
  00006840: 45 4D 41 50 5F 46 41 43 45 53 F2 F1 12 00 01 12  EMAP_FACES......
  00006850: 03 00 00 00 EA 11 00 00 75 00 00 00 52 10 00 00  ........u...R...
  00006860: 1A 00 09 10 12 00 00 00 6B 10 00 00 E7 11 00 00  ........k.......
  00006870: 07 00 03 00 EB 11 00 00 00 00 00 00 1A 00 01 12  ................
  00006880: 05 00 00 00 EA 11 00 00 75 00 00 00 BE 11 00 00  ........u.......
  00006890: 4D 10 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  M..."...........
  000068A0: 6B 10 00 00 E7 11 00 00 07 00 05 00 ED 11 00 00  k...............
  000068B0: 00 00 00 00 0E 00 01 12 02 00 00 00 EA 11 00 00  ................
  000068C0: 75 00 00 00 1A 00 09 10 12 00 00 00 6B 10 00 00  u...........k...
  000068D0: E7 11 00 00 07 00 02 00 EF 11 00 00 00 00 00 00  ................
  000068E0: 6A 00 03 12 00 14 03 00 C1 10 00 00 00 00 F2 F1  j...............
  000068F0: 0B 14 03 00 E8 11 00 00 0C 47 65 74 4C 65 76 65  .........GetLeve
  00006900: 6C 44 65 73 63 F3 F2 F1 0B 14 03 00 EC 11 00 00  lDesc...........
  00006910: 11 47 65 74 43 75 62 65 4D 61 70 53 75 72 66 61  .GetCubeMapSurfa
  00006920: 63 65 F2 F1 0B 14 03 00 EE 11 00 00 08 4C 6F 63  ce...........Loc
  00006930: 6B 52 65 63 74 F3 F2 F1 0B 14 03 00 F0 11 00 00  kRect...........
  00006940: 0A 55 6E 6C 6F 63 6B 52 65 63 74 F1 26 00 05 10  .UnlockRect.&...
  00006950: 05 00 00 00 F1 11 00 00 00 00 00 00 00 00 00 00  ................
  00006960: 14 00 0E 44 33 44 43 75 62 65 54 65 78 74 75 72  ...D3DCubeTextur
  00006970: 65 F3 F2 F1 22 00 05 10 00 00 80 00 00 00 00 00  e..."...........
  00006980: 00 00 00 00 00 00 00 00 00 00 0B 44 33 44 52 65  ...........D3DRe
  00006990: 73 6F 75 72 63 65 F2 F1 0A 00 02 10 20 04 00 00  source...... ...
  000069A0: 0A 00 00 00 16 00 01 12 04 00 00 00 75 00 00 00  ............u...
  000069B0: 75 00 00 00 F4 11 00 00 22 00 00 00 0A 00 02 10  u.......".......
  000069C0: 70 10 00 00 0A 04 00 00 1A 00 09 10 12 00 00 00  p...............
  000069D0: 70 10 00 00 F6 11 00 00 07 00 04 00 F5 11 00 00  p...............
  000069E0: 00 00 00 00 1A 00 09 10 12 00 00 00 70 10 00 00  ............p...
  000069F0: F6 11 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  00006A00: 2A 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  *...............
  00006A10: 00 00 00 00 00 00 15 5F 44 33 44 56 45 52 54 45  ......._D3DVERTE
  00006A20: 58 42 55 46 46 45 52 5F 44 45 53 43 0A 00 02 10  XBUFFER_DESC....
  00006A30: F9 11 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  ................
  00006A40: FA 11 00 00 1A 00 09 10 12 00 00 00 70 10 00 00  ............p...
  00006A50: F6 11 00 00 07 00 01 00 FB 11 00 00 00 00 00 00  ................
  00006A60: 3E 00 03 12 00 14 03 00 F3 11 00 00 00 00 F2 F1  >...............
  00006A70: 0B 14 03 00 F7 11 00 00 04 4C 6F 63 6B F3 F2 F1  .........Lock...
  00006A80: 0B 14 03 00 F8 11 00 00 06 55 6E 6C 6F 63 6B F1  .........Unlock.
  00006A90: 0B 14 03 00 FC 11 00 00 07 47 65 74 44 65 73 63  .........GetDesc
  00006AA0: 26 00 05 10 04 00 00 00 FD 11 00 00 00 00 00 00  &...............
  00006AB0: 00 00 00 00 0C 00 0F 44 33 44 56 65 72 74 65 78  .......D3DVertex
  00006AC0: 42 75 66 66 65 72 F2 F1 0A 00 02 10 75 10 00 00  Buffer......u...
  00006AD0: 0A 04 00 00 1A 00 09 10 12 00 00 00 75 10 00 00  ............u...
  00006AE0: FF 11 00 00 07 00 04 00 F5 11 00 00 00 00 00 00  ................
  00006AF0: 1A 00 09 10 12 00 00 00 75 10 00 00 FF 11 00 00  ........u.......
  00006B00: 07 00 00 00 09 10 00 00 00 00 00 00 2A 00 05 10  ............*...
  00006B10: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00006B20: 00 00 14 5F 44 33 44 49 4E 44 45 58 42 55 46 46  ..._D3DINDEXBUFF
  00006B30: 45 52 5F 44 45 53 43 F1 0A 00 02 10 02 12 00 00  ER_DESC.........
  00006B40: 0A 00 00 00 0A 00 01 12 01 00 00 00 03 12 00 00  ................
  00006B50: 1A 00 09 10 12 00 00 00 75 10 00 00 FF 11 00 00  ........u.......
  00006B60: 07 00 01 00 04 12 00 00 00 00 00 00 3E 00 03 12  ............>...
  00006B70: 00 14 03 00 F3 11 00 00 00 00 F2 F1 0B 14 03 00  ................
  00006B80: 00 12 00 00 04 4C 6F 63 6B F3 F2 F1 0B 14 03 00  .....Lock.......
  00006B90: 01 12 00 00 06 55 6E 6C 6F 63 6B F1 0B 14 03 00  .....Unlock.....
  00006BA0: 05 12 00 00 07 47 65 74 44 65 73 63 26 00 05 10  .....GetDesc&...
  00006BB0: 04 00 00 00 06 12 00 00 00 00 00 00 00 00 00 00  ................
  00006BC0: 0C 00 0E 44 33 44 49 6E 64 65 78 42 75 66 66 65  ...D3DIndexBuffe
  00006BD0: 72 F3 F2 F1 0A 00 02 10 22 04 00 00 0A 00 00 00  r.......".......
  00006BE0: 0E 00 01 12 02 00 00 00 08 12 00 00 22 00 00 00  ............"...
  00006BF0: 0A 00 02 10 24 11 00 00 0A 04 00 00 1A 00 09 10  ....$...........
  00006C00: 12 00 00 00 24 11 00 00 0A 12 00 00 07 00 02 00  ....$...........
  00006C10: 09 12 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  00006C20: 24 11 00 00 0A 12 00 00 07 00 00 00 09 10 00 00  $...............
  00006C30: 00 00 00 00 1A 00 09 10 23 11 00 00 24 11 00 00  ........#...$...
  00006C40: 0A 12 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  00006C50: 3E 00 03 12 00 14 03 00 F3 11 00 00 00 00 F2 F1  >...............
  00006C60: 0B 14 03 00 0B 12 00 00 04 4C 6F 63 6B F3 F2 F1  .........Lock...
  00006C70: 0B 14 03 00 0C 12 00 00 06 55 6E 6C 6F 63 6B F1  .........Unlock.
  00006C80: 0B 14 03 00 0D 12 00 00 07 47 65 74 53 69 7A 65  .........GetSize
  00006C90: 22 00 05 10 04 00 00 00 0E 12 00 00 00 00 00 00  "...............
  00006CA0: 00 00 00 00 0C 00 0A 44 33 44 50 61 6C 65 74 74  .......D3DPalett
  00006CB0: 65 F3 F2 F1 1A 00 03 12 05 14 03 00 12 00 00 00  e...............
  00006CC0: 00 00 01 78 05 14 03 00 12 00 00 00 04 00 01 79  ...x...........y
  00006CD0: 1E 00 05 10 02 00 00 00 10 12 00 00 00 00 00 00  ................
  00006CE0: 00 00 00 00 08 00 08 74 61 67 50 4F 49 4E 54 F1  .......tagPOINT.
  00006CF0: B2 00 03 12 05 14 03 00 22 00 00 00 00 00 03 52  ........"......R
  00006D00: 6F 70 F2 F1 05 14 03 00 22 00 00 00 04 00 05 53  op......"......S
  00006D10: 68 61 70 65 05 14 03 00 22 00 00 00 08 00 0D 50  hape...."......P
  00006D20: 61 74 74 65 72 6E 53 65 6C 65 63 74 05 14 03 00  atternSelect....
  00006D30: 22 00 00 00 0C 00 0A 4D 6F 6E 6F 43 6F 6C 6F 72  "......MonoColor
  00006D40: 30 F3 F2 F1 05 14 03 00 22 00 00 00 10 00 0A 4D  0......."......M
  00006D50: 6F 6E 6F 43 6F 6C 6F 72 31 F3 F2 F1 05 14 03 00  onoColor1.......
  00006D60: 22 00 00 00 14 00 0C 4D 6F 6E 6F 50 61 74 74 65  "......MonoPatte
  00006D70: 72 6E 30 F1 05 14 03 00 22 00 00 00 18 00 0C 4D  rn0....."......M
  00006D80: 6F 6E 6F 50 61 74 74 65 72 6E 31 F1 05 14 03 00  onoPattern1.....
  00006D90: DB 10 00 00 1C 00 0C 43 6F 6C 6F 72 50 61 74 74  .......ColorPatt
  00006DA0: 65 72 6E F1 2A 00 05 10 08 00 00 00 12 12 00 00  ern.*...........
  00006DB0: 00 00 00 00 00 00 00 00 20 00 14 5F 44 33 44 43  ........ .._D3DC
  00006DC0: 4F 50 59 52 45 43 54 52 4F 50 53 54 41 54 45 F1  OPYRECTROPSTATE.
  00006DD0: 56 02 03 12 03 04 03 00 00 00 20 44 33 44 43 4F  V......... D3DCO
  00006DE0: 50 59 52 45 43 54 5F 43 4F 4C 4F 52 5F 46 4F 52  PYRECT_COLOR_FOR
  00006DF0: 4D 41 54 5F 44 45 46 41 55 4C 54 F1 03 04 03 00  MAT_DEFAULT.....
  00006E00: 01 00 1B 44 33 44 43 4F 50 59 52 45 43 54 5F 43  ...D3DCOPYRECT_C
  00006E10: 4F 4C 4F 52 5F 46 4F 52 4D 41 54 5F 59 38 F2 F1  OLOR_FORMAT_Y8..
  00006E20: 03 04 03 00 02 00 2A 44 33 44 43 4F 50 59 52 45  ......*D3DCOPYRE
  00006E30: 43 54 5F 43 4F 4C 4F 52 5F 46 4F 52 4D 41 54 5F  CT_COLOR_FORMAT_
  00006E40: 58 31 52 35 47 35 42 35 5F 5A 31 52 35 47 35 42  X1R5G5B5_Z1R5G5B
  00006E50: 35 F3 F2 F1 03 04 03 00 03 00 2A 44 33 44 43 4F  5.........*D3DCO
  00006E60: 50 59 52 45 43 54 5F 43 4F 4C 4F 52 5F 46 4F 52  PYRECT_COLOR_FOR
  00006E70: 4D 41 54 5F 58 31 52 35 47 35 42 35 5F 4F 31 52  MAT_X1R5G5B5_O1R
  00006E80: 35 47 35 42 35 F3 F2 F1 03 04 03 00 04 00 1F 44  5G5B5..........D
  00006E90: 33 44 43 4F 50 59 52 45 43 54 5F 43 4F 4C 4F 52  3DCOPYRECT_COLOR
  00006EA0: 5F 46 4F 52 4D 41 54 5F 52 35 47 36 42 35 F2 F1  _FORMAT_R5G6B5..
  00006EB0: 03 04 03 00 05 00 1C 44 33 44 43 4F 50 59 52 45  .......D3DCOPYRE
  00006EC0: 43 54 5F 43 4F 4C 4F 52 5F 46 4F 52 4D 41 54 5F  CT_COLOR_FORMAT_
  00006ED0: 59 31 36 F1 03 04 03 00 06 00 2A 44 33 44 43 4F  Y16.......*D3DCO
  00006EE0: 50 59 52 45 43 54 5F 43 4F 4C 4F 52 5F 46 4F 52  PYRECT_COLOR_FOR
  00006EF0: 4D 41 54 5F 58 38 52 38 47 38 42 38 5F 5A 38 52  MAT_X8R8G8B8_Z8R
  00006F00: 38 47 38 42 38 F3 F2 F1 03 04 03 00 07 00 2A 44  8G8B8.........*D
  00006F10: 33 44 43 4F 50 59 52 45 43 54 5F 43 4F 4C 4F 52  3DCOPYRECT_COLOR
  00006F20: 5F 46 4F 52 4D 41 54 5F 58 38 52 38 47 38 42 38  _FORMAT_X8R8G8B8
  00006F30: 5F 4F 38 52 38 47 38 42 38 F3 F2 F1 03 04 03 00  _O8R8G8B8.......
  00006F40: 08 00 2E 44 33 44 43 4F 50 59 52 45 43 54 5F 43  ...D3DCOPYRECT_C
  00006F50: 4F 4C 4F 52 5F 46 4F 52 4D 41 54 5F 58 31 41 37  OLOR_FORMAT_X1A7
  00006F60: 52 38 47 38 42 38 5F 5A 31 41 37 52 38 47 38 42  R8G8B8_Z1A7R8G8B
  00006F70: 38 F3 F2 F1 03 04 03 00 09 00 2E 44 33 44 43 4F  8..........D3DCO
  00006F80: 50 59 52 45 43 54 5F 43 4F 4C 4F 52 5F 46 4F 52  PYRECT_COLOR_FOR
  00006F90: 4D 41 54 5F 58 31 41 37 52 38 47 38 42 38 5F 4F  MAT_X1A7R8G8B8_O
  00006FA0: 31 41 37 52 38 47 38 42 38 F3 F2 F1 03 04 03 00  1A7R8G8B8.......
  00006FB0: 0A 00 21 44 33 44 43 4F 50 59 52 45 43 54 5F 43  ..!D3DCOPYRECT_C
  00006FC0: 4F 4C 4F 52 5F 46 4F 52 4D 41 54 5F 41 38 52 38  OLOR_FORMAT_A8R8
  00006FD0: 47 38 42 38 03 04 03 00 0B 00 1C 44 33 44 43 4F  G8B8.......D3DCO
  00006FE0: 50 59 52 45 43 54 5F 43 4F 4C 4F 52 5F 46 4F 52  PYRECT_COLOR_FOR
  00006FF0: 4D 41 54 5F 59 33 32 F1 03 04 03 00 04 80 FF FF  MAT_Y32.........
  00007000: FF 7F 24 44 33 44 43 4F 50 59 52 45 43 54 5F 43  ..$D3DCOPYRECT_C
  00007010: 4F 4C 4F 52 5F 46 4F 52 4D 41 54 5F 46 4F 52 43  OLOR_FORMAT_FORC
  00007020: 45 5F 44 57 4F 52 44 F1 26 00 07 10 0D 00 00 00  E_DWORD.&.......
  00007030: 74 00 00 00 14 12 00 00 17 5F 44 33 44 43 4F 50  t........_D3DCOP
  00007040: 59 52 45 43 54 43 4F 4C 4F 52 46 4F 52 4D 41 54  YRECTCOLORFORMAT
  00007050: DE 00 03 12 03 04 03 00 00 00 17 44 33 44 43 4F  ...........D3DCO
  00007060: 50 59 52 45 43 54 5F 53 52 43 43 4F 50 59 5F 41  PYRECT_SRCCOPY_A
  00007070: 4E 44 F2 F1 03 04 03 00 01 00 13 44 33 44 43 4F  ND.........D3DCO
  00007080: 50 59 52 45 43 54 5F 52 4F 50 5F 41 4E 44 F2 F1  PYRECT_ROP_AND..
  00007090: 03 04 03 00 02 00 15 44 33 44 43 4F 50 59 52 45  .......D3DCOPYRE
  000070A0: 43 54 5F 42 4C 45 4E 44 5F 41 4E 44 03 04 03 00  CT_BLEND_AND....
  000070B0: 03 00 13 44 33 44 43 4F 50 59 52 45 43 54 5F 53  ...D3DCOPYRECT_S
  000070C0: 52 43 43 4F 50 59 F2 F1 03 04 03 00 04 00 1B 44  RCCOPY.........D
  000070D0: 33 44 43 4F 50 59 52 45 43 54 5F 53 52 43 43 4F  3DCOPYRECT_SRCCO
  000070E0: 50 59 5F 50 52 45 4D 55 4C 54 F2 F1 03 04 03 00  PY_PREMULT......
  000070F0: 05 00 19 44 33 44 43 4F 50 59 52 45 43 54 5F 42  ...D3DCOPYRECT_B
  00007100: 4C 45 4E 44 5F 50 52 45 4D 55 4C 54 03 04 03 00  LEND_PREMULT....
  00007110: 04 80 FF FF FF 7F 17 44 33 44 43 4F 50 59 52 45  .......D3DCOPYRE
  00007120: 43 54 5F 46 4F 52 43 45 5F 44 57 4F 52 44 F2 F1  CT_FORCE_DWORD..
  00007130: 26 00 07 10 07 00 00 00 74 00 00 00 16 12 00 00  &.......t.......
  00007140: 15 5F 44 33 44 43 4F 50 59 52 45 43 54 4F 50 45  ._D3DCOPYRECTOPE
  00007150: 52 41 54 49 4F 4E F2 F1 C2 00 03 12 05 14 03 00  RATION..........
  00007160: 15 12 00 00 00 00 0B 43 6F 6C 6F 72 46 6F 72 6D  .......ColorForm
  00007170: 61 74 F2 F1 05 14 03 00 17 12 00 00 04 00 09 4F  at.............O
  00007180: 70 65 72 61 74 69 6F 6E 05 14 03 00 74 00 00 00  peration....t...
  00007190: 08 00 0E 43 6F 6C 6F 72 4B 65 79 45 6E 61 62 6C  ...ColorKeyEnabl
  000071A0: 65 F3 F2 F1 05 14 03 00 22 00 00 00 0C 00 0D 43  e......."......C
  000071B0: 6F 6C 6F 72 4B 65 79 56 61 6C 75 65 05 14 03 00  olorKeyValue....
  000071C0: 22 00 00 00 10 00 0A 42 6C 65 6E 64 41 6C 70 68  "......BlendAlph
  000071D0: 61 F3 F2 F1 05 14 03 00 22 00 00 00 14 00 0C 50  a......."......P
  000071E0: 72 65 6D 75 6C 74 41 6C 70 68 61 F1 05 14 03 00  remultAlpha.....
  000071F0: 22 00 00 00 18 00 0D 43 6C 69 70 70 69 6E 67 50  "......ClippingP
  00007200: 6F 69 6E 74 05 14 03 00 22 00 00 00 1C 00 0C 43  oint...."......C
  00007210: 6C 69 70 70 69 6E 67 53 69 7A 65 F1 26 00 05 10  lippingSize.&...
  00007220: 08 00 00 00 18 12 00 00 00 00 00 00 00 00 00 00  ................
  00007230: 20 00 11 5F 44 33 44 43 4F 50 59 52 45 43 54 53   .._D3DCOPYRECTS
  00007240: 54 41 54 45 42 00 03 12 05 14 03 00 12 00 00 00  TATEB...........
  00007250: 00 00 02 78 31 F3 F2 F1 05 14 03 00 12 00 00 00  ...x1...........
  00007260: 04 00 02 79 31 F3 F2 F1 05 14 03 00 12 00 00 00  ...y1...........
  00007270: 08 00 02 78 32 F3 F2 F1 05 14 03 00 12 00 00 00  ...x2...........
  00007280: 0C 00 02 79 32 F3 F2 F1 1E 00 05 10 04 00 00 00  ...y2...........
  00007290: 1A 12 00 00 00 00 00 00 00 00 00 00 10 00 08 5F  ..............._
  000072A0: 44 33 44 52 45 43 54 F1 0E 00 03 10 40 00 00 00  D3DRECT.....@...
  000072B0: 11 00 00 00 10 00 00 F1 0E 00 03 10 1C 12 00 00  ................
  000072C0: 11 00 00 00 40 00 00 F1 0E 01 03 12 05 14 03 00  ....@...........
  000072D0: 40 00 00 00 00 00 03 5F 31 31 F2 F1 05 14 03 00  @......_11......
  000072E0: 40 00 00 00 04 00 03 5F 31 32 F2 F1 05 14 03 00  @......_12......
  000072F0: 40 00 00 00 08 00 03 5F 31 33 F2 F1 05 14 03 00  @......_13......
  00007300: 40 00 00 00 0C 00 03 5F 31 34 F2 F1 05 14 03 00  @......_14......
  00007310: 40 00 00 00 10 00 03 5F 32 31 F2 F1 05 14 03 00  @......_21......
  00007320: 40 00 00 00 14 00 03 5F 32 32 F2 F1 05 14 03 00  @......_22......
  00007330: 40 00 00 00 18 00 03 5F 32 33 F2 F1 05 14 03 00  @......_23......
  00007340: 40 00 00 00 1C 00 03 5F 32 34 F2 F1 05 14 03 00  @......_24......
  00007350: 40 00 00 00 20 00 03 5F 33 31 F2 F1 05 14 03 00  @... .._31......
  00007360: 40 00 00 00 24 00 03 5F 33 32 F2 F1 05 14 03 00  @...$.._32......
  00007370: 40 00 00 00 28 00 03 5F 33 33 F2 F1 05 14 03 00  @...(.._33......
  00007380: 40 00 00 00 2C 00 03 5F 33 34 F2 F1 05 14 03 00  @...,.._34......
  00007390: 40 00 00 00 30 00 03 5F 34 31 F2 F1 05 14 03 00  @...0.._41......
  000073A0: 40 00 00 00 34 00 03 5F 34 32 F2 F1 05 14 03 00  @...4.._42......
  000073B0: 40 00 00 00 38 00 03 5F 34 33 F2 F1 05 14 03 00  @...8.._43......
  000073C0: 40 00 00 00 3C 00 03 5F 34 34 F2 F1 05 14 03 00  @...<.._44......
  000073D0: 1D 12 00 00 00 00 01 6D 22 00 05 10 11 00 00 00  .......m".......
  000073E0: 1E 12 00 00 00 00 00 00 00 00 00 00 40 00 0A 5F  ............@.._
  000073F0: 44 33 44 4D 41 54 52 49 58 F3 F2 F1 5E 00 03 12  D3DMATRIX...^...
  00007400: 05 14 03 00 22 00 00 00 00 00 01 58 05 14 03 00  ...."......X....
  00007410: 22 00 00 00 04 00 01 59 05 14 03 00 22 00 00 00  "......Y...."...
  00007420: 08 00 05 57 69 64 74 68 05 14 03 00 22 00 00 00  ...Width...."...
  00007430: 0C 00 06 48 65 69 67 68 74 F3 F2 F1 05 14 03 00  ...Height.......
  00007440: 40 00 00 00 10 00 04 4D 69 6E 5A F1 05 14 03 00  @......MinZ.....
  00007450: 40 00 00 00 14 00 04 4D 61 78 5A F1 22 00 05 10  @......MaxZ."...
  00007460: 06 00 00 00 20 12 00 00 00 00 00 00 00 00 00 00  .... ...........
  00007470: 18 00 0D 5F 44 33 44 56 49 45 57 50 4F 52 54 38  ..._D3DVIEWPORT8
  00007480: 26 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  &...............
  00007490: 00 00 00 00 00 00 0E 5F 44 33 44 43 4F 4C 4F 52  ......._D3DCOLOR
  000074A0: 56 41 4C 55 45 F3 F2 F1 62 00 03 12 05 14 03 00  VALUE...b.......
  000074B0: 22 12 00 00 00 00 07 44 69 66 66 75 73 65 F2 F1  "......Diffuse..
  000074C0: 05 14 03 00 22 12 00 00 10 00 07 41 6D 62 69 65  ...."......Ambie
  000074D0: 6E 74 F2 F1 05 14 03 00 22 12 00 00 20 00 08 53  nt......"... ..S
  000074E0: 70 65 63 75 6C 61 72 F1 05 14 03 00 22 12 00 00  pecular....."...
  000074F0: 30 00 08 45 6D 69 73 73 69 76 65 F1 05 14 03 00  0..Emissive.....
  00007500: 40 00 00 00 40 00 05 50 6F 77 65 72 22 00 05 10  @...@..Power"...
  00007510: 05 00 00 00 23 12 00 00 00 00 00 00 00 00 00 00  ....#...........
  00007520: 44 00 0D 5F 44 33 44 4D 41 54 45 52 49 41 4C 38  D.._D3DMATERIAL8
  00007530: 6A 00 03 12 03 04 03 00 01 00 0E 44 33 44 4C 49  j..........D3DLI
  00007540: 47 48 54 5F 50 4F 49 4E 54 F3 F2 F1 03 04 03 00  GHT_POINT.......
  00007550: 02 00 0D 44 33 44 4C 49 47 48 54 5F 53 50 4F 54  ...D3DLIGHT_SPOT
  00007560: 03 04 03 00 03 00 14 44 33 44 4C 49 47 48 54 5F  .......D3DLIGHT_
  00007570: 44 49 52 45 43 54 49 4F 4E 41 4C F1 03 04 03 00  DIRECTIONAL.....
  00007580: 04 80 FF FF FF 7F 14 44 33 44 4C 49 47 48 54 5F  .......D3DLIGHT_
  00007590: 46 4F 52 43 45 5F 44 57 4F 52 44 F1 1E 00 07 10  FORCE_DWORD.....
  000075A0: 04 00 00 00 74 00 00 00 25 12 00 00 0D 5F 44 33  ....t...%...._D3
  000075B0: 44 4C 49 47 48 54 54 59 50 45 F2 F1 22 00 05 10  DLIGHTTYPE.."...
  000075C0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  000075D0: 00 00 0A 5F 44 33 44 56 45 43 54 4F 52 F3 F2 F1  ..._D3DVECTOR...
  000075E0: 02 01 03 12 05 14 03 00 26 12 00 00 00 00 04 54  ........&......T
  000075F0: 79 70 65 F1 05 14 03 00 22 12 00 00 04 00 07 44  ype....."......D
  00007600: 69 66 66 75 73 65 F2 F1 05 14 03 00 22 12 00 00  iffuse......"...
  00007610: 14 00 08 53 70 65 63 75 6C 61 72 F1 05 14 03 00  ...Specular.....
  00007620: 22 12 00 00 24 00 07 41 6D 62 69 65 6E 74 F2 F1  "...$..Ambient..
  00007630: 05 14 03 00 27 12 00 00 34 00 08 50 6F 73 69 74  ....'...4..Posit
  00007640: 69 6F 6E F1 05 14 03 00 27 12 00 00 40 00 09 44  ion.....'...@..D
  00007650: 69 72 65 63 74 69 6F 6E 05 14 03 00 40 00 00 00  irection....@...
  00007660: 4C 00 05 52 61 6E 67 65 05 14 03 00 40 00 00 00  L..Range....@...
  00007670: 50 00 07 46 61 6C 6C 6F 66 66 F2 F1 05 14 03 00  P..Falloff......
  00007680: 40 00 00 00 54 00 0C 41 74 74 65 6E 75 61 74 69  @...T..Attenuati
  00007690: 6F 6E 30 F1 05 14 03 00 40 00 00 00 58 00 0C 41  on0.....@...X..A
  000076A0: 74 74 65 6E 75 61 74 69 6F 6E 31 F1 05 14 03 00  ttenuation1.....
  000076B0: 40 00 00 00 5C 00 0C 41 74 74 65 6E 75 61 74 69  @...\..Attenuati
  000076C0: 6F 6E 32 F1 05 14 03 00 40 00 00 00 60 00 05 54  on2.....@...`..T
  000076D0: 68 65 74 61 05 14 03 00 40 00 00 00 64 00 03 50  heta....@...d..P
  000076E0: 68 69 F2 F1 22 00 05 10 0D 00 00 00 28 12 00 00  hi..".......(...
  000076F0: 00 00 00 00 00 00 00 00 68 00 0A 5F 44 33 44 4C  ........h.._D3DL
  00007700: 49 47 48 54 38 F3 F2 F1 0A 00 02 10 C1 10 00 00  IGHT8...........
  00007710: 0A 04 00 00 1A 00 09 10 22 00 00 00 C1 10 00 00  ........".......
  00007720: 2A 12 00 00 07 00 00 00 09 10 00 00 00 00 00 00  *...............
  00007730: 26 00 03 12 00 14 03 00 B5 11 00 00 00 00 F2 F1  &...............
  00007740: 0B 14 03 00 2B 12 00 00 0D 47 65 74 4C 65 76 65  ....+....GetLeve
  00007750: 6C 43 6F 75 6E 74 F2 F1 26 00 05 10 02 00 00 00  lCount..&.......
  00007760: 2C 12 00 00 00 00 00 00 00 00 00 00 14 00 0E 44  ,..............D
  00007770: 33 44 42 61 73 65 54 65 78 74 75 72 65 F3 F2 F1  3DBaseTexture...
  00007780: 2A 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  *...............
  00007790: 00 00 00 00 00 00 15 5F 44 33 44 56 45 52 54 45  ......._D3DVERTE
  000077A0: 58 53 48 41 44 45 52 49 4E 50 55 54 0E 00 03 10  XSHADERINPUT....
  000077B0: 2E 12 00 00 11 00 00 00 00 01 00 F1 12 00 03 12  ................
  000077C0: 05 14 03 00 2F 12 00 00 00 00 05 49 6E 70 75 74  ..../......Input
  000077D0: 2E 00 05 10 01 00 00 00 30 12 00 00 00 00 00 00  ........0.......
  000077E0: 00 00 00 00 00 01 19 5F 44 33 44 56 45 52 54 45  ......._D3DVERTE
  000077F0: 58 41 54 54 52 49 42 55 54 45 46 4F 52 4D 41 54  XATTRIBUTEFORMAT
  00007800: 0E 00 03 10 22 00 00 00 11 00 00 00 20 00 00 F1  ...."....... ...
  00007810: FE 01 03 12 05 14 03 00 32 12 00 00 00 00 0D 50  ........2......P
  00007820: 53 41 6C 70 68 61 49 6E 70 75 74 73 05 14 03 00  SAlphaInputs....
  00007830: 22 00 00 00 20 00 19 50 53 46 69 6E 61 6C 43 6F  "... ..PSFinalCo
  00007840: 6D 62 69 6E 65 72 49 6E 70 75 74 73 41 42 43 44  mbinerInputsABCD
  00007850: 05 14 03 00 22 00 00 00 24 00 18 50 53 46 69 6E  ...."...$..PSFin
  00007860: 61 6C 43 6F 6D 62 69 6E 65 72 49 6E 70 75 74 73  alCombinerInputs
  00007870: 45 46 47 F1 05 14 03 00 32 12 00 00 28 00 0B 50  EFG.....2...(..P
  00007880: 53 43 6F 6E 73 74 61 6E 74 30 F2 F1 05 14 03 00  SConstant0......
  00007890: 32 12 00 00 48 00 0B 50 53 43 6F 6E 73 74 61 6E  2...H..PSConstan
  000078A0: 74 31 F2 F1 05 14 03 00 32 12 00 00 68 00 0E 50  t1......2...h..P
  000078B0: 53 41 6C 70 68 61 4F 75 74 70 75 74 73 F3 F2 F1  SAlphaOutputs...
  000078C0: 05 14 03 00 32 12 00 00 88 00 0B 50 53 52 47 42  ....2......PSRGB
  000078D0: 49 6E 70 75 74 73 F2 F1 05 14 03 00 22 00 00 00  Inputs......"...
  000078E0: A8 00 0D 50 53 43 6F 6D 70 61 72 65 4D 6F 64 65  ...PSCompareMode
  000078F0: 05 14 03 00 22 00 00 00 AC 00 18 50 53 46 69 6E  ...."......PSFin
  00007900: 61 6C 43 6F 6D 62 69 6E 65 72 43 6F 6E 73 74 61  alCombinerConsta
  00007910: 6E 74 30 F1 05 14 03 00 22 00 00 00 B0 00 18 50  nt0....."......P
  00007920: 53 46 69 6E 61 6C 43 6F 6D 62 69 6E 65 72 43 6F  SFinalCombinerCo
  00007930: 6E 73 74 61 6E 74 31 F1 05 14 03 00 32 12 00 00  nstant1.....2...
  00007940: B4 00 0C 50 53 52 47 42 4F 75 74 70 75 74 73 F1  ...PSRGBOutputs.
  00007950: 05 14 03 00 22 00 00 00 D4 00 0F 50 53 43 6F 6D  ...."......PSCom
  00007960: 62 69 6E 65 72 43 6F 75 6E 74 F2 F1 05 14 03 00  binerCount......
  00007970: 22 00 00 00 D8 00 0E 50 53 54 65 78 74 75 72 65  "......PSTexture
  00007980: 4D 6F 64 65 73 F3 F2 F1 05 14 03 00 22 00 00 00  Modes......."...
  00007990: DC 00 0C 50 53 44 6F 74 4D 61 70 70 69 6E 67 F1  ...PSDotMapping.
  000079A0: 05 14 03 00 22 00 00 00 E0 00 0E 50 53 49 6E 70  ...."......PSInp
  000079B0: 75 74 54 65 78 74 75 72 65 F3 F2 F1 05 14 03 00  utTexture.......
  000079C0: 22 00 00 00 E4 00 0B 50 53 43 30 4D 61 70 70 69  "......PSC0Mappi
  000079D0: 6E 67 F2 F1 05 14 03 00 22 00 00 00 E8 00 0B 50  ng......"......P
  000079E0: 53 43 31 4D 61 70 70 69 6E 67 F2 F1 05 14 03 00  SC1Mapping......
  000079F0: 22 00 00 00 EC 00 18 50 53 46 69 6E 61 6C 43 6F  "......PSFinalCo
  00007A00: 6D 62 69 6E 65 72 43 6F 6E 73 74 61 6E 74 73 F1  mbinerConstants.
  00007A10: 2A 00 05 10 12 00 00 00 33 12 00 00 00 00 00 00  *.......3.......
  00007A20: 00 00 00 00 F0 00 12 5F 44 33 44 50 69 78 65 6C  ......._D3DPixel
  00007A30: 53 68 61 64 65 72 44 65 66 F3 F2 F1 6E 00 03 12  ShaderDef...n...
  00007A40: 03 04 03 00 00 00 0F 44 33 44 42 41 53 49 53 5F  .......D3DBASIS_
  00007A50: 42 45 5A 49 45 52 F2 F1 03 04 03 00 01 00 10 44  BEZIER.........D
  00007A60: 33 44 42 41 53 49 53 5F 42 53 50 4C 49 4E 45 F1  3DBASIS_BSPLINE.
  00007A70: 03 04 03 00 02 00 14 44 33 44 42 41 53 49 53 5F  .......D3DBASIS_
  00007A80: 49 4E 54 45 52 50 4F 4C 41 54 45 F1 03 04 03 00  INTERPOLATE.....
  00007A90: 04 80 FF FF FF 7F 14 44 33 44 42 41 53 49 53 5F  .......D3DBASIS_
  00007AA0: 46 4F 52 43 45 5F 44 57 4F 52 44 F1 1E 00 07 10  FORCE_DWORD.....
  00007AB0: 04 00 00 00 74 00 00 00 35 12 00 00 0D 5F 44 33  ....t...5...._D3
  00007AC0: 44 42 41 53 49 53 54 59 50 45 F2 F1 6A 00 03 12  DBASISTYPE..j...
  00007AD0: 03 04 03 00 01 00 0F 44 33 44 4F 52 44 45 52 5F  .......D3DORDER_
  00007AE0: 4C 49 4E 45 41 52 F2 F1 03 04 03 00 03 00 0E 44  LINEAR.........D
  00007AF0: 33 44 4F 52 44 45 52 5F 43 55 42 49 43 F3 F2 F1  3DORDER_CUBIC...
  00007B00: 03 04 03 00 05 00 10 44 33 44 4F 52 44 45 52 5F  .......D3DORDER_
  00007B10: 51 55 49 4E 54 49 43 F1 03 04 03 00 04 80 FF FF  QUINTIC.........
  00007B20: FF 7F 14 44 33 44 4F 52 44 45 52 5F 46 4F 52 43  ...D3DORDER_FORC
  00007B30: 45 5F 44 57 4F 52 44 F1 1E 00 07 10 04 00 00 00  E_DWORD.........
  00007B40: 74 00 00 00 37 12 00 00 0D 5F 44 33 44 4F 52 44  t...7...._D3DORD
  00007B50: 45 52 54 59 50 45 F2 F1 A2 00 03 12 05 14 03 00  ERTYPE..........
  00007B60: 75 00 00 00 00 00 16 53 74 61 72 74 56 65 72 74  u......StartVert
  00007B70: 65 78 4F 66 66 73 65 74 57 69 64 74 68 F3 F2 F1  exOffsetWidth...
  00007B80: 05 14 03 00 75 00 00 00 04 00 17 53 74 61 72 74  ....u......Start
  00007B90: 56 65 72 74 65 78 4F 66 66 73 65 74 48 65 69 67  VertexOffsetHeig
  00007BA0: 68 74 F2 F1 05 14 03 00 75 00 00 00 08 00 05 57  ht......u......W
  00007BB0: 69 64 74 68 05 14 03 00 75 00 00 00 0C 00 06 48  idth....u......H
  00007BC0: 65 69 67 68 74 F3 F2 F1 05 14 03 00 75 00 00 00  eight.......u...
  00007BD0: 10 00 06 53 74 72 69 64 65 F3 F2 F1 05 14 03 00  ...Stride.......
  00007BE0: 36 12 00 00 14 00 05 42 61 73 69 73 05 14 03 00  6......Basis....
  00007BF0: 38 12 00 00 18 00 05 4F 72 64 65 72 2A 00 05 10  8......Order*...
  00007C00: 07 00 00 00 39 12 00 00 00 00 00 00 00 00 00 00  ....9...........
  00007C10: 1C 00 12 5F 44 33 44 52 45 43 54 50 41 54 43 48  ..._D3DRECTPATCH
  00007C20: 5F 49 4E 46 4F F3 F2 F1 56 00 03 12 05 14 03 00  _INFO...V.......
  00007C30: 75 00 00 00 00 00 11 53 74 61 72 74 56 65 72 74  u......StartVert
  00007C40: 65 78 4F 66 66 73 65 74 05 14 03 00 75 00 00 00  exOffset....u...
  00007C50: 04 00 0B 4E 75 6D 56 65 72 74 69 63 65 73 F2 F1  ...NumVertices..
  00007C60: 05 14 03 00 36 12 00 00 08 00 05 42 61 73 69 73  ....6......Basis
  00007C70: 05 14 03 00 38 12 00 00 0C 00 05 4F 72 64 65 72  ....8......Order
  00007C80: 26 00 05 10 04 00 00 00 3B 12 00 00 00 00 00 00  &.......;.......
  00007C90: 00 00 00 00 10 00 11 5F 44 33 44 54 52 49 50 41  ......._D3DTRIPA
  00007CA0: 54 43 48 5F 49 4E 46 4F 66 00 03 12 03 04 03 00  TCH_INFOf.......
  00007CB0: 01 00 0C 44 33 44 46 49 45 4C 44 5F 4F 44 44 F1  ...D3DFIELD_ODD.
  00007CC0: 03 04 03 00 02 00 0D 44 33 44 46 49 45 4C 44 5F  .......D3DFIELD_
  00007CD0: 45 56 45 4E 03 04 03 00 03 00 14 44 33 44 46 49  EVEN.......D3DFI
  00007CE0: 45 4C 44 5F 50 52 4F 47 52 45 53 53 49 56 45 F1  ELD_PROGRESSIVE.
  00007CF0: 03 04 03 00 04 80 FF FF FF 7F 14 44 33 44 46 49  ...........D3DFI
  00007D00: 45 4C 44 5F 46 4F 52 43 45 5F 44 57 4F 52 44 F1  ELD_FORCE_DWORD.
  00007D10: 1E 00 07 10 04 00 00 00 74 00 00 00 3D 12 00 00  ........t...=...
  00007D20: 0D 5F 44 33 44 46 49 45 4C 44 54 59 50 45 F2 F1  ._D3DFIELDTYPE..
  00007D30: 2A 00 03 12 05 14 03 00 3E 12 00 00 00 00 05 46  *.......>......F
  00007D40: 69 65 6C 64 05 14 03 00 75 00 00 00 04 00 0B 56  ield....u......V
  00007D50: 42 6C 61 6E 6B 43 6F 75 6E 74 F2 F1 26 00 05 10  BlankCount..&...
  00007D60: 02 00 00 00 3F 12 00 00 00 00 00 00 00 00 00 00  ....?...........
  00007D70: 08 00 10 5F 44 33 44 46 49 45 4C 44 5F 53 54 41  ..._D3DFIELD_STA
  00007D80: 54 55 53 F1 0A 00 02 10 46 11 00 00 0A 04 00 00  TUS.....F.......
  00007D90: 1A 00 09 10 12 00 00 00 46 11 00 00 41 12 00 00  ........F...A...
  00007DA0: 07 00 00 00 09 10 00 00 00 00 00 00 1A 00 09 10  ................
  00007DB0: 12 00 00 00 46 11 00 00 41 12 00 00 07 00 01 00  ....F...A.......
  00007DC0: DE 10 00 00 00 00 00 00 72 00 03 12 00 14 03 00  ........r.......
  00007DD0: F3 11 00 00 00 00 F2 F1 0B 14 03 00 42 12 00 00  ............B...
  00007DE0: 05 52 65 73 65 74 F2 F1 0B 14 03 00 43 12 00 00  .Reset......C...
  00007DF0: 07 47 65 74 53 69 7A 65 0B 14 03 00 43 12 00 00  .GetSize....C...
  00007E00: 08 47 65 74 53 70 61 63 65 F3 F2 F1 05 14 03 00  .GetSpace.......
  00007E10: 22 00 00 00 0C 00 03 52 75 6E F2 F1 05 14 03 00  "......Run......
  00007E20: 22 00 00 00 10 00 04 4E 65 78 74 F1 05 14 03 00  "......Next.....
  00007E30: 22 00 00 00 14 00 04 53 69 7A 65 F1 1E 00 05 10  "......Size.....
  00007E40: 07 00 00 00 44 12 00 00 00 00 00 00 00 00 00 00  ....D...........
  00007E50: 18 00 08 44 33 44 46 69 78 75 70 F1 0A 00 02 10  ...D3DFixup.....
  00007E60: 4B 11 00 00 0A 04 00 00 1A 00 09 10 12 00 00 00  K...............
  00007E70: 4B 11 00 00 46 12 00 00 07 00 01 00 2F 11 00 00  K...F......./...
  00007E80: 00 00 00 00 0E 00 01 12 02 00 00 00 47 11 00 00  ............G...
  00007E90: 74 00 00 00 1A 00 09 10 12 00 00 00 4B 11 00 00  t...........K...
  00007EA0: 46 12 00 00 07 00 02 00 48 12 00 00 00 00 00 00  F.......H.......
  00007EB0: 1A 00 09 10 12 00 00 00 4B 11 00 00 46 12 00 00  ........K...F...
  00007EC0: 07 00 00 00 09 10 00 00 00 00 00 00 12 00 01 12  ................
  00007ED0: 03 00 00 00 22 00 00 00 4C 11 00 00 47 11 00 00  ...."...L...G...
  00007EE0: 1A 00 09 10 12 00 00 00 4B 11 00 00 46 12 00 00  ........K...F...
  00007EF0: 07 00 03 00 4B 12 00 00 00 00 00 00 16 00 01 12  ....K...........
  00007F00: 04 00 00 00 22 00 00 00 93 10 00 00 93 10 00 00  ...."...........
  00007F10: 93 10 00 00 1A 00 09 10 12 00 00 00 4B 11 00 00  ............K...
  00007F20: 46 12 00 00 07 00 04 00 4D 12 00 00 00 00 00 00  F.......M.......
  00007F30: 1A 00 01 12 05 00 00 00 22 00 00 00 75 00 00 00  ........"...u...
  00007F40: 93 10 00 00 93 10 00 00 93 10 00 00 1A 00 09 10  ................
  00007F50: 12 00 00 00 4B 11 00 00 46 12 00 00 07 00 05 00  ....K...F.......
  00007F60: 4F 12 00 00 00 00 00 00 16 00 01 12 04 00 00 00  O...............
  00007F70: 22 00 00 00 22 00 00 00 75 00 00 00 5E 11 00 00  "..."...u...^...
  00007F80: 1A 00 09 10 12 00 00 00 4B 11 00 00 46 12 00 00  ........K...F...
  00007F90: 07 00 04 00 51 12 00 00 00 00 00 00 16 00 01 12  ....Q...........
  00007FA0: 04 00 00 00 22 00 00 00 11 11 00 00 75 00 00 00  ....".......u...
  00007FB0: 5E 11 00 00 1A 00 09 10 12 00 00 00 4B 11 00 00  ^...........K...
  00007FC0: 46 12 00 00 07 00 04 00 53 12 00 00 00 00 00 00  F.......S.......
  00007FD0: 12 00 01 12 03 00 00 00 22 00 00 00 51 10 00 00  ........"...Q...
  00007FE0: 51 10 00 00 1A 00 09 10 12 00 00 00 4B 11 00 00  Q...........K...
  00007FF0: 46 12 00 00 07 00 03 00 55 12 00 00 00 00 00 00  F.......U.......
  00008000: 12 00 01 12 03 00 00 00 22 00 00 00 22 00 00 00  ........"..."...
  00008010: C2 10 00 00 1A 00 09 10 12 00 00 00 4B 11 00 00  ............K...
  00008020: 46 12 00 00 07 00 03 00 57 12 00 00 00 00 00 00  F.......W.......
  00008030: 12 00 01 12 03 00 00 00 22 00 00 00 22 00 00 00  ........"..."...
  00008040: 25 11 00 00 1A 00 09 10 12 00 00 00 4B 11 00 00  %...........K...
  00008050: 46 12 00 00 07 00 03 00 59 12 00 00 00 00 00 00  F.......Y.......
  00008060: 1A 00 09 10 12 00 00 00 4B 11 00 00 46 12 00 00  ........K...F...
  00008070: 07 00 02 00 31 10 00 00 00 00 00 00 16 00 01 12  ....1...........
  00008080: 04 00 00 00 22 00 00 00 74 00 00 00 D5 10 00 00  ...."...t.......
  00008090: 22 00 00 00 1A 00 09 10 12 00 00 00 4B 11 00 00  "...........K...
  000080A0: 46 12 00 00 07 00 04 00 5C 12 00 00 00 00 00 00  F.......\.......
  000080B0: 0E 00 01 12 02 00 00 00 22 00 00 00 75 00 00 00  ........"...u...
  000080C0: 1A 00 09 10 12 00 00 00 4B 11 00 00 46 12 00 00  ........K...F...
  000080D0: 07 00 02 00 5E 12 00 00 00 00 00 00 1A 00 09 10  ....^...........
  000080E0: 12 00 00 00 4B 11 00 00 46 12 00 00 07 00 01 00  ....K...F.......
  000080F0: DE 10 00 00 00 00 00 00 A2 01 03 12 00 14 03 00  ................
  00008100: F3 11 00 00 00 00 F2 F1 0B 14 03 00 47 12 00 00  ............G...
  00008110: 06 56 65 72 69 66 79 F1 0B 14 03 00 49 12 00 00  .Verify.....I...
  00008120: 0A 42 65 67 69 6E 46 69 78 75 70 F1 0B 14 03 00  .BeginFixup.....
  00008130: 4A 12 00 00 08 45 6E 64 46 69 78 75 70 F3 F2 F1  J....EndFixup...
  00008140: 0B 14 03 00 4C 12 00 00 0D 52 75 6E 50 75 73 68  ....L....RunPush
  00008150: 42 75 66 66 65 72 F2 F1 0B 14 03 00 4E 12 00 00  Buffer......N...
  00008160: 0C 53 65 74 4D 6F 64 65 6C 56 69 65 77 F3 F2 F1  .SetModelView...
  00008170: 0B 14 03 00 50 12 00 00 17 53 65 74 56 65 72 74  ....P....SetVert
  00008180: 65 78 42 6C 65 6E 64 4D 6F 64 65 6C 56 69 65 77  exBlendModelView
  00008190: 0B 14 03 00 52 12 00 00 14 53 65 74 56 65 72 74  ....R....SetVert
  000081A0: 65 78 53 68 61 64 65 72 49 6E 70 75 74 F3 F2 F1  exShaderInput...
  000081B0: 0B 14 03 00 54 12 00 00 1A 53 65 74 56 65 72 74  ....T....SetVert
  000081C0: 65 78 53 68 61 64 65 72 49 6E 70 75 74 44 69 72  exShaderInputDir
  000081D0: 65 63 74 F1 0B 14 03 00 56 12 00 00 0F 53 65 74  ect.....V....Set
  000081E0: 52 65 6E 64 65 72 54 61 72 67 65 74 0B 14 03 00  RenderTarget....
  000081F0: 58 12 00 00 0A 53 65 74 54 65 78 74 75 72 65 F1  X....SetTexture.
  00008200: 0B 14 03 00 5A 12 00 00 0A 53 65 74 50 61 6C 65  ....Z....SetPale
  00008210: 74 74 65 F1 0B 14 03 00 5B 12 00 00 11 45 6E 64  tte.....[....End
  00008220: 56 69 73 69 62 69 6C 69 74 79 54 65 73 74 F2 F1  VisibilityTest..
  00008230: 0B 14 03 00 5D 12 00 00 17 53 65 74 56 65 72 74  ....]....SetVert
  00008240: 65 78 53 68 61 64 65 72 43 6F 6E 73 74 61 6E 74  exShaderConstant
  00008250: 0B 14 03 00 5F 12 00 00 04 4A 75 6D 70 F3 F2 F1  ...._....Jump...
  00008260: 0B 14 03 00 60 12 00 00 07 47 65 74 53 69 7A 65  ....`....GetSize
  00008270: 05 14 03 00 22 00 00 00 0C 00 04 53 69 7A 65 F1  ...."......Size.
  00008280: 05 14 03 00 22 00 00 00 10 00 0E 41 6C 6C 6F 63  ...."......Alloc
  00008290: 61 74 69 6F 6E 53 69 7A 65 F3 F2 F1 22 00 05 10  ationSize..."...
  000082A0: 12 00 00 00 61 12 00 00 00 00 00 00 00 00 00 00  ....a...........
  000082B0: 14 00 0D 44 33 44 50 75 73 68 42 75 66 66 65 72  ...D3DPushBuffer
  000082C0: 42 00 03 12 05 14 03 00 71 10 00 00 00 00 0C 56  B.......q......V
  000082D0: 65 72 74 65 78 42 75 66 66 65 72 F1 05 14 03 00  ertexBuffer.....
  000082E0: 75 00 00 00 04 00 06 53 74 72 69 64 65 F3 F2 F1  u......Stride...
  000082F0: 05 14 03 00 75 00 00 00 08 00 06 4F 66 66 73 65  ....u......Offse
  00008300: 74 F3 F2 F1 26 00 05 10 03 00 00 00 63 12 00 00  t...&.......c...
  00008310: 00 00 00 00 00 00 00 00 0C 00 10 5F 44 33 44 53  ..........._D3DS
  00008320: 54 52 45 41 4D 5F 49 4E 50 55 54 F1 6E 00 03 12  TREAM_INPUT.n...
  00008330: 05 14 03 00 22 00 00 00 00 00 05 46 6C 61 67 73  ...."......Flags
  00008340: 05 14 03 00 03 04 00 00 04 00 07 70 4D 65 6D 6F  ...........pMemo
  00008350: 72 79 F2 F1 05 14 03 00 22 00 00 00 08 00 04 53  ry......"......S
  00008360: 69 7A 65 F1 05 14 03 00 22 00 00 00 0C 00 05 50  ize....."......P
  00008370: 69 74 63 68 05 14 03 00 22 00 00 00 10 00 09 5A  itch...."......Z
  00008380: 53 74 61 72 74 54 61 67 05 14 03 00 22 00 00 00  StartTag...."...
  00008390: 14 00 07 5A 4F 66 66 73 65 74 F2 F1 1E 00 05 10  ...ZOffset......
  000083A0: 06 00 00 00 65 12 00 00 00 00 00 00 00 00 00 00  ....e...........
  000083B0: 18 00 08 5F 44 33 44 54 49 4C 45 F1 2A 00 03 12  ..._D3DTILE.*...
  000083C0: 03 04 03 00 00 00 0A 44 33 44 4D 45 4D 5F 41 47  .......D3DMEM_AG
  000083D0: 50 F3 F2 F1 03 04 03 00 01 00 0C 44 33 44 4D 45  P..........D3DME
  000083E0: 4D 5F 56 49 44 45 4F F1 1A 00 07 10 02 00 00 00  M_VIDEO.........
  000083F0: 74 00 00 00 67 12 00 00 0A 5F 44 33 44 4D 45 4D  t...g...._D3DMEM
  00008400: 4F 52 59 F1 0A 00 02 10 F3 11 00 00 0A 00 00 00  ORY.............
  00008410: 0A 00 02 10 F3 11 00 00 0A 04 00 00 1A 00 09 10  ................
  00008420: 22 00 00 00 F3 11 00 00 6A 12 00 00 07 00 00 00  ".......j.......
  00008430: 09 10 00 00 00 00 00 00 0A 00 01 12 01 00 00 00  ................
  00008440: 2E 10 00 00 1A 00 09 10 12 00 00 00 F3 11 00 00  ................
  00008450: 6A 12 00 00 07 00 01 00 6C 12 00 00 00 00 00 00  j.......l.......
  00008460: 1A 00 09 10 1F 10 00 00 F3 11 00 00 6A 12 00 00  ............j...
  00008470: 07 00 00 00 09 10 00 00 00 00 00 00 16 00 01 12  ................
  00008480: 04 00 00 00 02 10 00 00 D5 10 00 00 22 00 00 00  ............"...
  00008490: 22 00 00 00 1A 00 09 10 12 00 00 00 F3 11 00 00  "...............
  000084A0: 6A 12 00 00 07 00 04 00 6F 12 00 00 00 00 00 00  j.......o.......
  000084B0: 12 00 01 12 03 00 00 00 02 10 00 00 03 04 00 00  ................
  000084C0: 22 04 00 00 1A 00 09 10 12 00 00 00 F3 11 00 00  "...............
  000084D0: 6A 12 00 00 07 00 03 00 71 12 00 00 00 00 00 00  j.......q.......
  000084E0: 0A 00 01 12 01 00 00 00 02 10 00 00 1A 00 09 10  ................
  000084F0: 12 00 00 00 F3 11 00 00 6A 12 00 00 07 00 01 00  ........j.......
  00008500: 73 12 00 00 00 00 00 00 1A 00 09 10 74 00 00 00  s...........t...
  00008510: F3 11 00 00 6A 12 00 00 07 00 00 00 09 10 00 00  ....j...........
  00008520: 00 00 00 00 1A 00 09 10 03 00 00 00 F3 11 00 00  ................
  00008530: 6A 12 00 00 07 00 00 00 09 10 00 00 00 00 00 00  j...............
  00008540: 0A 00 01 12 01 00 00 00 68 12 00 00 1A 00 09 10  ........h.......
  00008550: 03 00 00 00 F3 11 00 00 6A 12 00 00 07 00 01 00  ........j.......
  00008560: 77 12 00 00 00 00 00 00 0A 00 01 12 01 00 00 00  w...............
  00008570: 03 04 00 00 1A 00 09 10 03 00 00 00 F3 11 00 00  ................
  00008580: 6A 12 00 00 07 00 01 00 79 12 00 00 00 00 00 00  j.......y.......
  00008590: 1E 01 03 12 0B 14 03 00 6B 12 00 00 06 41 64 64  ........k....Add
  000085A0: 52 65 66 F1 0B 14 03 00 6B 12 00 00 07 52 65 6C  Ref.....k....Rel
  000085B0: 65 61 73 65 0B 14 03 00 6D 12 00 00 09 47 65 74  ease....m....Get
  000085C0: 44 65 76 69 63 65 F2 F1 0B 14 03 00 6E 12 00 00  Device......n...
  000085D0: 07 47 65 74 54 79 70 65 0B 14 03 00 70 12 00 00  .GetType....p...
  000085E0: 0E 53 65 74 50 72 69 76 61 74 65 44 61 74 61 F1  .SetPrivateData.
  000085F0: 0B 14 03 00 72 12 00 00 0E 47 65 74 50 72 69 76  ....r....GetPriv
  00008600: 61 74 65 44 61 74 61 F1 0B 14 03 00 74 12 00 00  ateData.....t...
  00008610: 0F 46 72 65 65 50 72 69 76 61 74 65 44 61 74 61  .FreePrivateData
  00008620: 0B 14 03 00 75 12 00 00 06 49 73 42 75 73 79 F1  ....u....IsBusy.
  00008630: 0B 14 03 00 76 12 00 00 11 42 6C 6F 63 6B 55 6E  ....v....BlockUn
  00008640: 74 69 6C 4E 6F 74 42 75 73 79 F2 F1 0B 14 03 00  tilNotBusy......
  00008650: 78 12 00 00 12 4D 6F 76 65 52 65 73 6F 75 72 63  x....MoveResourc
  00008660: 65 4D 65 6D 6F 72 79 F1 0B 14 03 00 7A 12 00 00  eMemory.....z...
  00008670: 08 52 65 67 69 73 74 65 72 F3 F2 F1 05 14 03 00  .Register.......
  00008680: 22 00 00 00 00 00 06 43 6F 6D 6D 6F 6E F3 F2 F1  "......Common...
  00008690: 05 14 03 00 22 00 00 00 04 00 04 44 61 74 61 F1  ...."......Data.
  000086A0: 05 14 03 00 22 00 00 00 08 00 04 4C 6F 63 6B F1  ...."......Lock.
  000086B0: 22 00 05 10 0E 00 00 00 7B 12 00 00 00 00 00 00  ".......{.......
  000086C0: 00 00 00 00 0C 00 0B 44 33 44 52 65 73 6F 75 72  .......D3DResour
  000086D0: 63 65 F2 F1 86 00 03 12 05 14 03 00 1B 10 00 00  ce..............
  000086E0: 00 00 06 46 6F 72 6D 61 74 F3 F2 F1 05 14 03 00  ...Format.......
  000086F0: 1F 10 00 00 04 00 04 54 79 70 65 F1 05 14 03 00  .......Type.....
  00008700: 22 00 00 00 08 00 05 55 73 61 67 65 05 14 03 00  "......Usage....
  00008710: 75 00 00 00 0C 00 04 53 69 7A 65 F1 05 14 03 00  u......Size.....
  00008720: 22 00 00 00 10 00 0F 4D 75 6C 74 69 53 61 6D 70  "......MultiSamp
  00008730: 6C 65 54 79 70 65 F2 F1 05 14 03 00 75 00 00 00  leType......u...
  00008740: 14 00 05 57 69 64 74 68 05 14 03 00 75 00 00 00  ...Width....u...
  00008750: 18 00 06 48 65 69 67 68 74 F3 F2 F1 26 00 05 10  ...Height...&...
  00008760: 07 00 00 00 7D 12 00 00 00 00 00 00 00 00 00 00  ....}...........
  00008770: 1C 00 10 5F 44 33 44 53 55 52 46 41 43 45 5F 44  ..._D3DSURFACE_D
  00008780: 45 53 43 F1 22 00 03 12 05 14 03 00 74 00 00 00  ESC.".......t...
  00008790: 00 00 05 50 69 74 63 68 05 14 03 00 03 04 00 00  ...Pitch........
  000087A0: 04 00 05 70 42 69 74 73 26 00 05 10 02 00 00 00  ...pBits&.......
  000087B0: 7F 12 00 00 00 00 00 00 00 00 00 00 08 00 0F 5F  ..............._
  000087C0: 44 33 44 4C 4F 43 4B 45 44 5F 52 45 43 54 F2 F1  D3DLOCKED_RECT..
  000087D0: 7A 00 03 12 05 14 03 00 1B 10 00 00 00 00 06 46  z..............F
  000087E0: 6F 72 6D 61 74 F3 F2 F1 05 14 03 00 1F 10 00 00  ormat...........
  000087F0: 04 00 04 54 79 70 65 F1 05 14 03 00 22 00 00 00  ...Type....."...
  00008800: 08 00 05 55 73 61 67 65 05 14 03 00 75 00 00 00  ...Usage....u...
  00008810: 0C 00 04 53 69 7A 65 F1 05 14 03 00 75 00 00 00  ...Size.....u...
  00008820: 10 00 05 57 69 64 74 68 05 14 03 00 75 00 00 00  ...Width....u...
  00008830: 14 00 06 48 65 69 67 68 74 F3 F2 F1 05 14 03 00  ...Height.......
  00008840: 75 00 00 00 18 00 05 44 65 70 74 68 26 00 05 10  u......Depth&...
  00008850: 07 00 00 00 81 12 00 00 00 00 00 00 00 00 00 00  ................
  00008860: 1C 00 0F 5F 44 33 44 56 4F 4C 55 4D 45 5F 44 45  ..._D3DVOLUME_DE
  00008870: 53 43 F2 F1 0A 00 02 10 D8 11 00 00 0A 04 00 00  SC..............
  00008880: 1A 00 09 10 12 00 00 00 D8 11 00 00 83 12 00 00  ................
  00008890: 07 00 01 00 B6 11 00 00 00 00 00 00 0A 00 01 12  ................
  000088A0: 01 00 00 00 D4 11 00 00 1A 00 09 10 12 00 00 00  ................
  000088B0: D8 11 00 00 83 12 00 00 07 00 01 00 85 12 00 00  ................
  000088C0: 00 00 00 00 12 00 01 12 03 00 00 00 DE 11 00 00  ................
  000088D0: E1 11 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  ...."...........
  000088E0: D8 11 00 00 83 12 00 00 07 00 03 00 87 12 00 00  ................
  000088F0: 00 00 00 00 1A 00 09 10 12 00 00 00 D8 11 00 00  ................
  00008900: 83 12 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  00008910: 6E 00 03 12 00 14 03 00 B5 11 00 00 00 00 F2 F1  n...............
  00008920: 0B 14 03 00 84 12 00 00 0C 47 65 74 43 6F 6E 74  .........GetCont
  00008930: 61 69 6E 65 72 F3 F2 F1 0B 14 03 00 86 12 00 00  ainer...........
  00008940: 07 47 65 74 44 65 73 63 0B 14 03 00 88 12 00 00  .GetDesc........
  00008950: 07 4C 6F 63 6B 42 6F 78 0B 14 03 00 89 12 00 00  .LockBox........
  00008960: 09 55 6E 6C 6F 63 6B 42 6F 78 F2 F1 05 14 03 00  .UnlockBox......
  00008970: C2 10 00 00 14 00 06 50 61 72 65 6E 74 F3 F2 F1  .......Parent...
  00008980: 1E 00 05 10 06 00 00 00 8A 12 00 00 00 00 00 00  ................
  00008990: 00 00 00 00 18 00 09 44 33 44 56 6F 6C 75 6D 65  .......D3DVolume
  000089A0: 66 00 03 12 05 14 03 00 75 00 00 00 00 00 04 4C  f.......u......L
  000089B0: 65 66 74 F1 05 14 03 00 75 00 00 00 04 00 03 54  eft.....u......T
  000089C0: 6F 70 F2 F1 05 14 03 00 75 00 00 00 08 00 05 52  op......u......R
  000089D0: 69 67 68 74 05 14 03 00 75 00 00 00 0C 00 06 42  ight....u......B
  000089E0: 6F 74 74 6F 6D F3 F2 F1 05 14 03 00 75 00 00 00  ottom.......u...
  000089F0: 10 00 05 46 72 6F 6E 74 05 14 03 00 75 00 00 00  ...Front....u...
  00008A00: 14 00 04 42 61 63 6B F1 1E 00 05 10 06 00 00 00  ...Back.........
  00008A10: 8C 12 00 00 00 00 00 00 00 00 00 00 18 00 07 5F  ..............._
  00008A20: 44 33 44 42 4F 58 F2 F1 3E 00 03 12 05 14 03 00  D3DBOX..>.......
  00008A30: 74 00 00 00 00 00 08 52 6F 77 50 69 74 63 68 F1  t......RowPitch.
  00008A40: 05 14 03 00 74 00 00 00 04 00 0A 53 6C 69 63 65  ....t......Slice
  00008A50: 50 69 74 63 68 F3 F2 F1 05 14 03 00 03 04 00 00  Pitch...........
  00008A60: 08 00 05 70 42 69 74 73 26 00 05 10 03 00 00 00  ...pBits&.......
  00008A70: 8E 12 00 00 00 00 00 00 00 00 00 00 0C 00 0E 5F  ..............._
  00008A80: 44 33 44 4C 4F 43 4B 45 44 5F 42 4F 58 F3 F2 F1  D3DLOCKED_BOX...
  00008A90: 26 00 03 12 05 14 03 00 1B 10 00 00 00 00 06 46  &..............F
  00008AA0: 6F 72 6D 61 74 F3 F2 F1 05 14 03 00 1F 10 00 00  ormat...........
  00008AB0: 04 00 04 54 79 70 65 F1 2A 00 05 10 02 00 00 00  ...Type.*.......
  00008AC0: 90 12 00 00 00 00 00 00 00 00 00 00 08 00 15 5F  ..............._
  00008AD0: 44 33 44 56 45 52 54 45 58 42 55 46 46 45 52 5F  D3DVERTEXBUFFER_
  00008AE0: 44 45 53 43 26 00 03 12 05 14 03 00 1B 10 00 00  DESC&...........
  00008AF0: 00 00 06 46 6F 72 6D 61 74 F3 F2 F1 05 14 03 00  ...Format.......
  00008B00: 1F 10 00 00 04 00 04 54 79 70 65 F1 2A 00 05 10  .......Type.*...
  00008B10: 02 00 00 00 92 12 00 00 00 00 00 00 00 00 00 00  ................
  00008B20: 08 00 14 5F 44 33 44 49 4E 44 45 58 42 55 46 46  ..._D3DINDEXBUFF
  00008B30: 45 52 5F 44 45 53 43 F1 22 00 05 10 00 00 80 00  ER_DESC.".......
  00008B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0B 44  ...............D
  00008B50: 33 44 58 56 45 43 54 4F 52 32 F2 F1 0A 00 02 10  3DXVECTOR2......
  00008B60: 94 12 00 00 0A 04 00 00 0E 00 01 12 02 00 00 00  ................
  00008B70: 40 00 00 00 40 00 00 00 1A 00 09 10 03 00 00 00  @...@...........
  00008B80: 94 12 00 00 95 12 00 00 0B 00 02 00 96 12 00 00  ................
  00008B90: 00 00 00 00 0A 00 01 10 40 00 00 00 01 00 F2 F1  ........@.......
  00008BA0: 0A 00 02 10 98 12 00 00 0A 00 00 00 0A 00 01 12  ................
  00008BB0: 01 00 00 00 99 12 00 00 1A 00 09 10 03 00 00 00  ................
  00008BC0: 94 12 00 00 95 12 00 00 0B 00 01 00 9A 12 00 00  ................
  00008BD0: 00 00 00 00 1A 00 09 10 03 00 00 00 94 12 00 00  ................
  00008BE0: 95 12 00 00 0B 00 00 00 09 10 00 00 00 00 00 00  ................
  00008BF0: 1A 00 06 12 03 00 00 00 97 12 00 00 03 00 00 00  ................
  00008C00: 9B 12 00 00 03 00 00 00 9C 12 00 00 1A 00 09 10  ................
  00008C10: 40 04 00 00 94 12 00 00 95 12 00 00 0B 00 00 00  @...............
  00008C20: 09 10 00 00 00 00 00 00 0A 00 01 10 94 12 00 00  ................
  00008C30: 01 00 F2 F1 0A 00 02 10 9F 12 00 00 0A 04 00 00  ................
  00008C40: 1A 00 09 10 99 12 00 00 94 12 00 00 A0 12 00 00  ................
  00008C50: 0B 00 00 00 09 10 00 00 00 00 00 00 0A 00 02 10  ................
  00008C60: 94 12 00 00 2A 00 00 00 0A 00 02 10 9F 12 00 00  ....*...........
  00008C70: 2A 00 00 00 0A 00 01 12 01 00 00 00 A3 12 00 00  *...............
  00008C80: 1A 00 09 10 A2 12 00 00 94 12 00 00 95 12 00 00  ................
  00008C90: 0B 00 01 00 A4 12 00 00 00 00 00 00 0A 00 01 12  ................
  00008CA0: 01 00 00 00 40 00 00 00 1A 00 09 10 A2 12 00 00  ....@...........
  00008CB0: 94 12 00 00 95 12 00 00 0B 00 01 00 A6 12 00 00  ................
  00008CC0: 00 00 00 00 1A 00 09 10 94 12 00 00 94 12 00 00  ................
  00008CD0: A0 12 00 00 0B 00 01 00 A4 12 00 00 00 00 00 00  ................
  00008CE0: 1A 00 09 10 94 12 00 00 94 12 00 00 A0 12 00 00  ................
  00008CF0: 0B 00 00 00 09 10 00 00 00 00 00 00 12 00 06 12  ................
  00008D00: 03 00 00 00 A8 12 00 00 03 00 00 00 A9 12 00 00  ................
  00008D10: 12 00 06 12 03 00 00 00 A8 12 00 00 03 00 00 00  ................
  00008D20: A9 12 00 00 1A 00 09 10 94 12 00 00 94 12 00 00  ................
  00008D30: A0 12 00 00 0B 00 01 00 A6 12 00 00 00 00 00 00  ................
  00008D40: 1A 00 09 10 74 00 00 00 94 12 00 00 A0 12 00 00  ....t...........
  00008D50: 0B 00 01 00 A4 12 00 00 00 00 00 00 32 01 03 12  ............2...
  00008D60: 07 14 03 00 9D 12 00 00 0B 44 33 44 58 56 45 43  .........D3DXVEC
  00008D70: 54 4F 52 32 0B 14 03 00 9E 12 00 00 10 6F 70 65  TOR2.........ope
  00008D80: 72 61 74 6F 72 20 66 6C 6F 61 74 20 2A F3 F2 F1  rator float *...
  00008D90: 0B 14 03 00 A1 12 00 00 16 6F 70 65 72 61 74 6F  .........operato
  00008DA0: 72 20 63 6F 6E 73 74 20 66 6C 6F 61 74 20 2A F1  r const float *.
  00008DB0: 0B 14 03 00 A5 12 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  00008DC0: 72 2B 3D F1 0B 14 03 00 A5 12 00 00 0A 6F 70 65  r+=..........ope
  00008DD0: 72 61 74 6F 72 2D 3D F1 0B 14 03 00 A7 12 00 00  rator-=.........
  00008DE0: 0A 6F 70 65 72 61 74 6F 72 2A 3D F1 0B 14 03 00  .operator*=.....
  00008DF0: A7 12 00 00 0A 6F 70 65 72 61 74 6F 72 2F 3D F1  .....operator/=.
  00008E00: 07 14 02 00 AA 12 00 00 09 6F 70 65 72 61 74 6F  .........operato
  00008E10: 72 2B F2 F1 07 14 02 00 AB 12 00 00 09 6F 70 65  r+...........ope
  00008E20: 72 61 74 6F 72 2D F2 F1 0B 14 03 00 AC 12 00 00  rator-..........
  00008E30: 09 6F 70 65 72 61 74 6F 72 2A F2 F1 0B 14 03 00  .operator*......
  00008E40: AC 12 00 00 09 6F 70 65 72 61 74 6F 72 2F F2 F1  .....operator/..
  00008E50: 0B 14 03 00 AD 12 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  00008E60: 72 3D 3D F1 0B 14 03 00 AD 12 00 00 0A 6F 70 65  r==..........ope
  00008E70: 72 61 74 6F 72 21 3D F1 05 14 03 00 40 00 00 00  rator!=.....@...
  00008E80: 00 00 01 78 05 14 03 00 40 00 00 00 04 00 01 79  ...x....@......y
  00008E90: 22 00 05 10 13 00 46 00 AE 12 00 00 00 00 00 00  ".....F.........
  00008EA0: 00 00 00 00 08 00 0B 44 33 44 58 56 45 43 54 4F  .......D3DXVECTO
  00008EB0: 52 32 F2 F1 22 00 05 10 00 00 80 00 00 00 00 00  R2.."...........
  00008EC0: 00 00 00 00 00 00 00 00 00 00 0B 44 33 44 58 56  ...........D3DXV
  00008ED0: 45 43 54 4F 52 33 F2 F1 0A 00 02 10 B0 12 00 00  ECTOR3..........
  00008EE0: 0A 04 00 00 12 00 01 12 03 00 00 00 40 00 00 00  ............@...
  00008EF0: 40 00 00 00 40 00 00 00 1A 00 09 10 03 00 00 00  @...@...........
  00008F00: B0 12 00 00 B1 12 00 00 0B 00 03 00 B2 12 00 00  ................
  00008F10: 00 00 00 00 0A 00 01 10 27 12 00 00 01 00 F2 F1  ........'.......
  00008F20: 0A 00 02 10 B4 12 00 00 2A 00 00 00 0A 00 01 12  ........*.......
  00008F30: 01 00 00 00 B5 12 00 00 1A 00 09 10 03 00 00 00  ................
  00008F40: B0 12 00 00 B1 12 00 00 0B 00 01 00 B6 12 00 00  ................
  00008F50: 00 00 00 00 1A 00 09 10 03 00 00 00 B0 12 00 00  ................
  00008F60: B1 12 00 00 0B 00 01 00 9A 12 00 00 00 00 00 00  ................
  00008F70: 1A 00 09 10 03 00 00 00 B0 12 00 00 B1 12 00 00  ................
  00008F80: 0B 00 00 00 09 10 00 00 00 00 00 00 22 00 06 12  ............"...
  00008F90: 03 00 00 00 B3 12 00 00 03 00 00 00 B7 12 00 00  ................
  00008FA0: 03 00 00 00 B8 12 00 00 03 00 00 00 B9 12 00 00  ................
  00008FB0: 1A 00 09 10 40 04 00 00 B0 12 00 00 B1 12 00 00  ....@...........
  00008FC0: 0B 00 00 00 09 10 00 00 00 00 00 00 0A 00 01 10  ................
  00008FD0: B0 12 00 00 01 00 F2 F1 0A 00 02 10 BC 12 00 00  ................
  00008FE0: 0A 04 00 00 1A 00 09 10 99 12 00 00 B0 12 00 00  ................
  00008FF0: BD 12 00 00 0B 00 00 00 09 10 00 00 00 00 00 00  ................
  00009000: 0A 00 02 10 B0 12 00 00 2A 00 00 00 0A 00 02 10  ........*.......
  00009010: BC 12 00 00 2A 00 00 00 0A 00 01 12 01 00 00 00  ....*...........
  00009020: C0 12 00 00 1A 00 09 10 BF 12 00 00 B0 12 00 00  ................
  00009030: B1 12 00 00 0B 00 01 00 C1 12 00 00 00 00 00 00  ................
  00009040: 1A 00 09 10 BF 12 00 00 B0 12 00 00 B1 12 00 00  ................
  00009050: 0B 00 01 00 A6 12 00 00 00 00 00 00 1A 00 09 10  ................
  00009060: B0 12 00 00 B0 12 00 00 BD 12 00 00 0B 00 01 00  ................
  00009070: C1 12 00 00 00 00 00 00 1A 00 09 10 B0 12 00 00  ................
  00009080: B0 12 00 00 BD 12 00 00 0B 00 00 00 09 10 00 00  ................
  00009090: 00 00 00 00 12 00 06 12 03 00 00 00 C4 12 00 00  ................
  000090A0: 03 00 00 00 C5 12 00 00 12 00 06 12 03 00 00 00  ................
  000090B0: C4 12 00 00 03 00 00 00 C5 12 00 00 1A 00 09 10  ................
  000090C0: B0 12 00 00 B0 12 00 00 BD 12 00 00 0B 00 01 00  ................
  000090D0: A6 12 00 00 00 00 00 00 1A 00 09 10 74 00 00 00  ............t...
  000090E0: B0 12 00 00 BD 12 00 00 0B 00 01 00 C1 12 00 00  ................
  000090F0: 00 00 00 00 26 01 03 12 00 14 03 00 27 12 00 00  ....&.......'...
  00009100: 00 00 F2 F1 07 14 04 00 BA 12 00 00 0B 44 33 44  .............D3D
  00009110: 58 56 45 43 54 4F 52 33 0B 14 03 00 BB 12 00 00  XVECTOR3........
  00009120: 10 6F 70 65 72 61 74 6F 72 20 66 6C 6F 61 74 20  .operator float 
  00009130: 2A F3 F2 F1 0B 14 03 00 BE 12 00 00 16 6F 70 65  *............ope
  00009140: 72 61 74 6F 72 20 63 6F 6E 73 74 20 66 6C 6F 61  rator const floa
  00009150: 74 20 2A F1 0B 14 03 00 C2 12 00 00 0A 6F 70 65  t *..........ope
  00009160: 72 61 74 6F 72 2B 3D F1 0B 14 03 00 C2 12 00 00  rator+=.........
  00009170: 0A 6F 70 65 72 61 74 6F 72 2D 3D F1 0B 14 03 00  .operator-=.....
  00009180: C3 12 00 00 0A 6F 70 65 72 61 74 6F 72 2A 3D F1  .....operator*=.
  00009190: 0B 14 03 00 C3 12 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  000091A0: 72 2F 3D F1 07 14 02 00 C6 12 00 00 09 6F 70 65  r/=..........ope
  000091B0: 72 61 74 6F 72 2B F2 F1 07 14 02 00 C7 12 00 00  rator+..........
  000091C0: 09 6F 70 65 72 61 74 6F 72 2D F2 F1 0B 14 03 00  .operator-......
  000091D0: C8 12 00 00 09 6F 70 65 72 61 74 6F 72 2A F2 F1  .....operator*..
  000091E0: 0B 14 03 00 C8 12 00 00 09 6F 70 65 72 61 74 6F  .........operato
  000091F0: 72 2F F2 F1 0B 14 03 00 C9 12 00 00 0A 6F 70 65  r/...........ope
  00009200: 72 61 74 6F 72 3D 3D F1 0B 14 03 00 C9 12 00 00  rator==.........
  00009210: 0A 6F 70 65 72 61 74 6F 72 21 3D F1 22 00 05 10  .operator!=."...
  00009220: 13 00 46 00 CA 12 00 00 00 00 00 00 00 00 00 00  ..F.............
  00009230: 0C 00 0B 44 33 44 58 56 45 43 54 4F 52 33 F2 F1  ...D3DXVECTOR3..
  00009240: 22 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  "...............
  00009250: 00 00 00 00 00 00 0B 44 33 44 58 56 45 43 54 4F  .......D3DXVECTO
  00009260: 52 34 F2 F1 0A 00 02 10 CC 12 00 00 0A 04 00 00  R4..............
  00009270: 16 00 01 12 04 00 00 00 40 00 00 00 40 00 00 00  ........@...@...
  00009280: 40 00 00 00 40 00 00 00 1A 00 09 10 03 00 00 00  @...@...........
  00009290: CC 12 00 00 CD 12 00 00 0B 00 04 00 CE 12 00 00  ................
  000092A0: 00 00 00 00 1A 00 09 10 03 00 00 00 CC 12 00 00  ................
  000092B0: CD 12 00 00 0B 00 01 00 9A 12 00 00 00 00 00 00  ................
  000092C0: 1A 00 09 10 03 00 00 00 CC 12 00 00 CD 12 00 00  ................
  000092D0: 0B 00 00 00 09 10 00 00 00 00 00 00 1A 00 06 12  ................
  000092E0: 03 00 00 00 CF 12 00 00 03 00 00 00 D0 12 00 00  ................
  000092F0: 03 00 00 00 D1 12 00 00 1A 00 09 10 40 04 00 00  ............@...
  00009300: CC 12 00 00 CD 12 00 00 0B 00 00 00 09 10 00 00  ................
  00009310: 00 00 00 00 0A 00 01 10 CC 12 00 00 01 00 F2 F1  ................
  00009320: 0A 00 02 10 D4 12 00 00 0A 04 00 00 1A 00 09 10  ................
  00009330: 99 12 00 00 CC 12 00 00 D5 12 00 00 0B 00 00 00  ................
  00009340: 09 10 00 00 00 00 00 00 0A 00 02 10 CC 12 00 00  ................
  00009350: 2A 00 00 00 0A 00 02 10 D4 12 00 00 2A 00 00 00  *...........*...
  00009360: 0A 00 01 12 01 00 00 00 D8 12 00 00 1A 00 09 10  ................
  00009370: D7 12 00 00 CC 12 00 00 CD 12 00 00 0B 00 01 00  ................
  00009380: D9 12 00 00 00 00 00 00 1A 00 09 10 D7 12 00 00  ................
  00009390: CC 12 00 00 CD 12 00 00 0B 00 01 00 A6 12 00 00  ................
  000093A0: 00 00 00 00 1A 00 09 10 CC 12 00 00 CC 12 00 00  ................
  000093B0: D5 12 00 00 0B 00 01 00 D9 12 00 00 00 00 00 00  ................
  000093C0: 1A 00 09 10 CC 12 00 00 CC 12 00 00 D5 12 00 00  ................
  000093D0: 0B 00 00 00 09 10 00 00 00 00 00 00 12 00 06 12  ................
  000093E0: 03 00 00 00 DC 12 00 00 03 00 00 00 DD 12 00 00  ................
  000093F0: 12 00 06 12 03 00 00 00 DC 12 00 00 03 00 00 00  ................
  00009400: DD 12 00 00 1A 00 09 10 CC 12 00 00 CC 12 00 00  ................
  00009410: D5 12 00 00 0B 00 01 00 A6 12 00 00 00 00 00 00  ................
  00009420: 1A 00 09 10 74 00 00 00 CC 12 00 00 D5 12 00 00  ....t...........
  00009430: 0B 00 01 00 D9 12 00 00 00 00 00 00 4A 01 03 12  ............J...
  00009440: 07 14 03 00 D2 12 00 00 0B 44 33 44 58 56 45 43  .........D3DXVEC
  00009450: 54 4F 52 34 0B 14 03 00 D3 12 00 00 10 6F 70 65  TOR4.........ope
  00009460: 72 61 74 6F 72 20 66 6C 6F 61 74 20 2A F3 F2 F1  rator float *...
  00009470: 0B 14 03 00 D6 12 00 00 16 6F 70 65 72 61 74 6F  .........operato
  00009480: 72 20 63 6F 6E 73 74 20 66 6C 6F 61 74 20 2A F1  r const float *.
  00009490: 0B 14 03 00 DA 12 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  000094A0: 72 2B 3D F1 0B 14 03 00 DA 12 00 00 0A 6F 70 65  r+=..........ope
  000094B0: 72 61 74 6F 72 2D 3D F1 0B 14 03 00 DB 12 00 00  rator-=.........
  000094C0: 0A 6F 70 65 72 61 74 6F 72 2A 3D F1 0B 14 03 00  .operator*=.....
  000094D0: DB 12 00 00 0A 6F 70 65 72 61 74 6F 72 2F 3D F1  .....operator/=.
  000094E0: 07 14 02 00 DE 12 00 00 09 6F 70 65 72 61 74 6F  .........operato
  000094F0: 72 2B F2 F1 07 14 02 00 DF 12 00 00 09 6F 70 65  r+...........ope
  00009500: 72 61 74 6F 72 2D F2 F1 0B 14 03 00 E0 12 00 00  rator-..........
  00009510: 09 6F 70 65 72 61 74 6F 72 2A F2 F1 0B 14 03 00  .operator*......
  00009520: E0 12 00 00 09 6F 70 65 72 61 74 6F 72 2F F2 F1  .....operator/..
  00009530: 0B 14 03 00 E1 12 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  00009540: 72 3D 3D F1 0B 14 03 00 E1 12 00 00 0A 6F 70 65  r==..........ope
  00009550: 72 61 74 6F 72 21 3D F1 05 14 03 00 40 00 00 00  rator!=.....@...
  00009560: 00 00 01 78 05 14 03 00 40 00 00 00 04 00 01 79  ...x....@......y
  00009570: 05 14 03 00 40 00 00 00 08 00 01 7A 05 14 03 00  ....@......z....
  00009580: 40 00 00 00 0C 00 01 77 22 00 05 10 15 00 46 00  @......w".....F.
  00009590: E2 12 00 00 00 00 00 00 00 00 00 00 10 00 0B 44  ...............D
  000095A0: 33 44 58 56 45 43 54 4F 52 34 F2 F1 22 00 05 10  3DXVECTOR4.."...
  000095B0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  000095C0: 00 00 0A 44 33 44 58 4D 41 54 52 49 58 F3 F2 F1  ...D3DXMATRIX...
  000095D0: 0A 00 02 10 E4 12 00 00 0A 04 00 00 46 00 01 12  ............F...
  000095E0: 10 00 00 00 40 00 00 00 40 00 00 00 40 00 00 00  ....@...@...@...
  000095F0: 40 00 00 00 40 00 00 00 40 00 00 00 40 00 00 00  @...@...@...@...
  00009600: 40 00 00 00 40 00 00 00 40 00 00 00 40 00 00 00  @...@...@...@...
  00009610: 40 00 00 00 40 00 00 00 40 00 00 00 40 00 00 00  @...@...@...@...
  00009620: 40 00 00 00 1A 00 09 10 03 00 00 00 E4 12 00 00  @...............
  00009630: E5 12 00 00 0B 00 10 00 E6 12 00 00 00 00 00 00  ................
  00009640: 0A 00 02 10 92 10 00 00 2A 00 00 00 0A 00 01 12  ........*.......
  00009650: 01 00 00 00 E8 12 00 00 1A 00 09 10 03 00 00 00  ................
  00009660: E4 12 00 00 E5 12 00 00 0B 00 01 00 E9 12 00 00  ................
  00009670: 00 00 00 00 1A 00 09 10 03 00 00 00 E4 12 00 00  ................
  00009680: E5 12 00 00 0B 00 01 00 9A 12 00 00 00 00 00 00  ................
  00009690: 1A 00 09 10 03 00 00 00 E4 12 00 00 E5 12 00 00  ................
  000096A0: 0B 00 00 00 09 10 00 00 00 00 00 00 22 00 06 12  ............"...
  000096B0: 03 00 00 00 E7 12 00 00 03 00 00 00 EA 12 00 00  ................
  000096C0: 03 00 00 00 EB 12 00 00 03 00 00 00 EC 12 00 00  ................
  000096D0: 0E 00 01 12 02 00 00 00 75 00 00 00 75 00 00 00  ........u...u...
  000096E0: 0A 00 01 10 E4 12 00 00 01 00 F2 F1 0A 00 02 10  ................
  000096F0: EF 12 00 00 0A 04 00 00 1A 00 09 10 40 00 00 00  ............@...
  00009700: E4 12 00 00 F0 12 00 00 0B 00 02 00 EE 12 00 00  ................
  00009710: 00 00 00 00 0A 00 02 10 40 00 00 00 2A 00 00 00  ........@...*...
  00009720: 1A 00 09 10 F2 12 00 00 E4 12 00 00 E5 12 00 00  ................
  00009730: 0B 00 02 00 EE 12 00 00 00 00 00 00 12 00 06 12  ................
  00009740: 03 00 00 00 F1 12 00 00 03 00 00 00 F3 12 00 00  ................
  00009750: 1A 00 09 10 40 04 00 00 E4 12 00 00 E5 12 00 00  ....@...........
  00009760: 0B 00 00 00 09 10 00 00 00 00 00 00 1A 00 09 10  ................
  00009770: 99 12 00 00 E4 12 00 00 F0 12 00 00 0B 00 00 00  ................
  00009780: 09 10 00 00 00 00 00 00 0A 00 02 10 E4 12 00 00  ................
  00009790: 2A 00 00 00 1A 00 09 10 F7 12 00 00 E4 12 00 00  *...............
  000097A0: E5 12 00 00 0B 00 01 00 A6 12 00 00 00 00 00 00  ................
  000097B0: 0A 00 02 10 EF 12 00 00 2A 00 00 00 0A 00 01 12  ........*.......
  000097C0: 01 00 00 00 F9 12 00 00 1A 00 09 10 F7 12 00 00  ................
  000097D0: E4 12 00 00 E5 12 00 00 0B 00 01 00 FA 12 00 00  ................
  000097E0: 00 00 00 00 12 00 06 12 03 00 00 00 F8 12 00 00  ................
  000097F0: 03 00 00 00 FB 12 00 00 1A 00 09 10 E4 12 00 00  ................
  00009800: E4 12 00 00 F0 12 00 00 0B 00 01 00 FA 12 00 00  ................
  00009810: 00 00 00 00 1A 00 09 10 E4 12 00 00 E4 12 00 00  ................
  00009820: F0 12 00 00 0B 00 00 00 09 10 00 00 00 00 00 00  ................
  00009830: 12 00 06 12 03 00 00 00 FD 12 00 00 03 00 00 00  ................
  00009840: FE 12 00 00 12 00 06 12 03 00 00 00 FD 12 00 00  ................
  00009850: 03 00 00 00 FE 12 00 00 1A 00 09 10 E4 12 00 00  ................
  00009860: E4 12 00 00 F0 12 00 00 0B 00 01 00 A6 12 00 00  ................
  00009870: 00 00 00 00 12 00 06 12 03 00 00 00 01 13 00 00  ................
  00009880: 03 00 00 00 FD 12 00 00 1A 00 09 10 74 00 00 00  ............t...
  00009890: E4 12 00 00 F0 12 00 00 0B 00 01 00 FA 12 00 00  ................
  000098A0: 00 00 00 00 3A 01 03 12 00 14 03 00 91 10 00 00  ....:...........
  000098B0: 00 00 F2 F1 07 14 04 00 ED 12 00 00 0A 44 33 44  .............D3D
  000098C0: 58 4D 41 54 52 49 58 F1 07 14 02 00 F4 12 00 00  XMATRIX.........
  000098D0: 0A 6F 70 65 72 61 74 6F 72 28 29 F1 0B 14 03 00  .operator().....
  000098E0: F5 12 00 00 10 6F 70 65 72 61 74 6F 72 20 66 6C  .....operator fl
  000098F0: 6F 61 74 20 2A F3 F2 F1 0B 14 03 00 F6 12 00 00  oat *...........
  00009900: 16 6F 70 65 72 61 74 6F 72 20 63 6F 6E 73 74 20  .operator const 
  00009910: 66 6C 6F 61 74 20 2A F1 07 14 02 00 FC 12 00 00  float *.........
  00009920: 0A 6F 70 65 72 61 74 6F 72 2A 3D F1 0B 14 03 00  .operator*=.....
  00009930: FB 12 00 00 0A 6F 70 65 72 61 74 6F 72 2B 3D F1  .....operator+=.
  00009940: 0B 14 03 00 FB 12 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  00009950: 72 2D 3D F1 0B 14 03 00 F8 12 00 00 0A 6F 70 65  r-=..........ope
  00009960: 72 61 74 6F 72 2F 3D F1 07 14 02 00 FF 12 00 00  rator/=.........
  00009970: 09 6F 70 65 72 61 74 6F 72 2B F2 F1 07 14 02 00  .operator+......
  00009980: 00 13 00 00 09 6F 70 65 72 61 74 6F 72 2D F2 F1  .....operator-..
  00009990: 07 14 02 00 02 13 00 00 09 6F 70 65 72 61 74 6F  .........operato
  000099A0: 72 2A F2 F1 0B 14 03 00 01 13 00 00 09 6F 70 65  r*...........ope
  000099B0: 72 61 74 6F 72 2F F2 F1 0B 14 03 00 03 13 00 00  rator/..........
  000099C0: 0A 6F 70 65 72 61 74 6F 72 3D 3D F1 0B 14 03 00  .operator==.....
  000099D0: 03 13 00 00 0A 6F 70 65 72 61 74 6F 72 21 3D F1  .....operator!=.
  000099E0: 22 00 05 10 17 00 46 00 04 13 00 00 00 00 00 00  ".....F.........
  000099F0: 00 00 00 00 40 00 0A 44 33 44 58 4D 41 54 52 49  ....@..D3DXMATRI
  00009A00: 58 F3 F2 F1 26 00 05 10 00 00 80 00 00 00 00 00  X...&...........
  00009A10: 00 00 00 00 00 00 00 00 00 00 0E 44 33 44 58 51  ...........D3DXQ
  00009A20: 55 41 54 45 52 4E 49 4F 4E F3 F2 F1 0A 00 02 10  UATERNION.......
  00009A30: 06 13 00 00 0A 04 00 00 1A 00 09 10 03 00 00 00  ................
  00009A40: 06 13 00 00 07 13 00 00 0B 00 04 00 CE 12 00 00  ................
  00009A50: 00 00 00 00 1A 00 09 10 03 00 00 00 06 13 00 00  ................
  00009A60: 07 13 00 00 0B 00 01 00 9A 12 00 00 00 00 00 00  ................
  00009A70: 1A 00 09 10 03 00 00 00 06 13 00 00 07 13 00 00  ................
  00009A80: 0B 00 00 00 09 10 00 00 00 00 00 00 1A 00 06 12  ................
  00009A90: 03 00 00 00 08 13 00 00 03 00 00 00 09 13 00 00  ................
  00009AA0: 03 00 00 00 0A 13 00 00 1A 00 09 10 40 04 00 00  ............@...
  00009AB0: 06 13 00 00 07 13 00 00 0B 00 00 00 09 10 00 00  ................
  00009AC0: 00 00 00 00 0A 00 01 10 06 13 00 00 01 00 F2 F1  ................
  00009AD0: 0A 00 02 10 0D 13 00 00 0A 04 00 00 1A 00 09 10  ................
  00009AE0: 99 12 00 00 06 13 00 00 0E 13 00 00 0B 00 00 00  ................
  00009AF0: 09 10 00 00 00 00 00 00 0A 00 02 10 06 13 00 00  ................
  00009B00: 2A 00 00 00 0A 00 02 10 0D 13 00 00 2A 00 00 00  *...........*...
  00009B10: 0A 00 01 12 01 00 00 00 11 13 00 00 1A 00 09 10  ................
  00009B20: 10 13 00 00 06 13 00 00 07 13 00 00 0B 00 01 00  ................
  00009B30: 12 13 00 00 00 00 00 00 1A 00 09 10 10 13 00 00  ................
  00009B40: 06 13 00 00 07 13 00 00 0B 00 01 00 A6 12 00 00  ................
  00009B50: 00 00 00 00 12 00 06 12 03 00 00 00 14 13 00 00  ................
  00009B60: 03 00 00 00 13 13 00 00 1A 00 09 10 06 13 00 00  ................
  00009B70: 06 13 00 00 0E 13 00 00 0B 00 01 00 12 13 00 00  ................
  00009B80: 00 00 00 00 1A 00 09 10 06 13 00 00 06 13 00 00  ................
  00009B90: 0E 13 00 00 0B 00 00 00 09 10 00 00 00 00 00 00  ................
  00009BA0: 12 00 06 12 03 00 00 00 16 13 00 00 03 00 00 00  ................
  00009BB0: 17 13 00 00 12 00 06 12 03 00 00 00 16 13 00 00  ................
  00009BC0: 03 00 00 00 17 13 00 00 1A 00 09 10 06 13 00 00  ................
  00009BD0: 06 13 00 00 0E 13 00 00 0B 00 01 00 A6 12 00 00  ................
  00009BE0: 00 00 00 00 12 00 06 12 03 00 00 00 1A 13 00 00  ................
  00009BF0: 03 00 00 00 16 13 00 00 1A 00 09 10 74 00 00 00  ............t...
  00009C00: 06 13 00 00 0E 13 00 00 0B 00 01 00 12 13 00 00  ................
  00009C10: 00 00 00 00 4E 01 03 12 07 14 03 00 0B 13 00 00  ....N...........
  00009C20: 0E 44 33 44 58 51 55 41 54 45 52 4E 49 4F 4E F1  .D3DXQUATERNION.
  00009C30: 0B 14 03 00 0C 13 00 00 10 6F 70 65 72 61 74 6F  .........operato
  00009C40: 72 20 66 6C 6F 61 74 20 2A F3 F2 F1 0B 14 03 00  r float *.......
  00009C50: 0F 13 00 00 16 6F 70 65 72 61 74 6F 72 20 63 6F  .....operator co
  00009C60: 6E 73 74 20 66 6C 6F 61 74 20 2A F1 0B 14 03 00  nst float *.....
  00009C70: 13 13 00 00 0A 6F 70 65 72 61 74 6F 72 2B 3D F1  .....operator+=.
  00009C80: 0B 14 03 00 13 13 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  00009C90: 72 2D 3D F1 07 14 02 00 15 13 00 00 0A 6F 70 65  r-=..........ope
  00009CA0: 72 61 74 6F 72 2A 3D F1 0B 14 03 00 14 13 00 00  rator*=.........
  00009CB0: 0A 6F 70 65 72 61 74 6F 72 2F 3D F1 07 14 02 00  .operator/=.....
  00009CC0: 18 13 00 00 09 6F 70 65 72 61 74 6F 72 2B F2 F1  .....operator+..
  00009CD0: 07 14 02 00 19 13 00 00 09 6F 70 65 72 61 74 6F  .........operato
  00009CE0: 72 2D F2 F1 07 14 02 00 1B 13 00 00 09 6F 70 65  r-...........ope
  00009CF0: 72 61 74 6F 72 2A F2 F1 0B 14 03 00 1A 13 00 00  rator*..........
  00009D00: 09 6F 70 65 72 61 74 6F 72 2F F2 F1 0B 14 03 00  .operator/......
  00009D10: 1C 13 00 00 0A 6F 70 65 72 61 74 6F 72 3D 3D F1  .....operator==.
  00009D20: 0B 14 03 00 1C 13 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  00009D30: 72 21 3D F1 05 14 03 00 40 00 00 00 00 00 01 78  r!=.....@......x
  00009D40: 05 14 03 00 40 00 00 00 04 00 01 79 05 14 03 00  ....@......y....
  00009D50: 40 00 00 00 08 00 01 7A 05 14 03 00 40 00 00 00  @......z....@...
  00009D60: 0C 00 01 77 26 00 05 10 17 00 46 00 1D 13 00 00  ...w&.....F.....
  00009D70: 00 00 00 00 00 00 00 00 10 00 0E 44 33 44 58 51  ...........D3DXQ
  00009D80: 55 41 54 45 52 4E 49 4F 4E F3 F2 F1 1E 00 05 10  UATERNION.......
  00009D90: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00009DA0: 00 00 09 44 33 44 58 50 4C 41 4E 45 0A 00 02 10  ...D3DXPLANE....
  00009DB0: 1F 13 00 00 0A 04 00 00 1A 00 09 10 03 00 00 00  ................
  00009DC0: 1F 13 00 00 20 13 00 00 0B 00 04 00 CE 12 00 00  .... ...........
  00009DD0: 00 00 00 00 1A 00 09 10 03 00 00 00 1F 13 00 00  ................
  00009DE0: 20 13 00 00 0B 00 01 00 9A 12 00 00 00 00 00 00   ...............
  00009DF0: 1A 00 09 10 03 00 00 00 1F 13 00 00 20 13 00 00  ............ ...
  00009E00: 0B 00 00 00 09 10 00 00 00 00 00 00 1A 00 06 12  ................
  00009E10: 03 00 00 00 21 13 00 00 03 00 00 00 22 13 00 00  ....!......."...
  00009E20: 03 00 00 00 23 13 00 00 1A 00 09 10 40 04 00 00  ....#.......@...
  00009E30: 1F 13 00 00 20 13 00 00 0B 00 00 00 09 10 00 00  .... ...........
  00009E40: 00 00 00 00 0A 00 01 10 1F 13 00 00 01 00 F2 F1  ................
  00009E50: 0A 00 02 10 26 13 00 00 0A 04 00 00 1A 00 09 10  ....&...........
  00009E60: 99 12 00 00 1F 13 00 00 27 13 00 00 0B 00 00 00  ........'.......
  00009E70: 09 10 00 00 00 00 00 00 1A 00 09 10 1F 13 00 00  ................
  00009E80: 1F 13 00 00 27 13 00 00 0B 00 00 00 09 10 00 00  ....'...........
  00009E90: 00 00 00 00 0A 00 02 10 26 13 00 00 2A 00 00 00  ........&...*...
  00009EA0: 0A 00 01 12 01 00 00 00 2A 13 00 00 1A 00 09 10  ........*.......
  00009EB0: 74 00 00 00 1F 13 00 00 27 13 00 00 0B 00 01 00  t.......'.......
  00009EC0: 2B 13 00 00 00 00 00 00 D2 00 03 12 07 14 03 00  +...............
  00009ED0: 24 13 00 00 09 44 33 44 58 50 4C 41 4E 45 F2 F1  $....D3DXPLANE..
  00009EE0: 0B 14 03 00 25 13 00 00 10 6F 70 65 72 61 74 6F  ....%....operato
  00009EF0: 72 20 66 6C 6F 61 74 20 2A F3 F2 F1 0B 14 03 00  r float *.......
  00009F00: 28 13 00 00 16 6F 70 65 72 61 74 6F 72 20 63 6F  (....operator co
  00009F10: 6E 73 74 20 66 6C 6F 61 74 20 2A F1 0B 14 03 00  nst float *.....
  00009F20: 29 13 00 00 09 6F 70 65 72 61 74 6F 72 2B F2 F1  )....operator+..
  00009F30: 0B 14 03 00 29 13 00 00 09 6F 70 65 72 61 74 6F  ....)....operato
  00009F40: 72 2D F2 F1 0B 14 03 00 2C 13 00 00 0A 6F 70 65  r-......,....ope
  00009F50: 72 61 74 6F 72 3D 3D F1 0B 14 03 00 2C 13 00 00  rator==.....,...
  00009F60: 0A 6F 70 65 72 61 74 6F 72 21 3D F1 05 14 03 00  .operator!=.....
  00009F70: 40 00 00 00 00 00 01 61 05 14 03 00 40 00 00 00  @......a....@...
  00009F80: 04 00 01 62 05 14 03 00 40 00 00 00 08 00 01 63  ...b....@......c
  00009F90: 05 14 03 00 40 00 00 00 0C 00 01 64 1E 00 05 10  ....@......d....
  00009FA0: 0D 00 46 00 2D 13 00 00 00 00 00 00 00 00 00 00  ..F.-...........
  00009FB0: 10 00 09 44 33 44 58 50 4C 41 4E 45 1E 00 05 10  ...D3DXPLANE....
  00009FC0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00009FD0: 00 00 09 44 33 44 58 43 4F 4C 4F 52 0A 00 02 10  ...D3DXCOLOR....
  00009FE0: 2F 13 00 00 0A 04 00 00 1A 00 09 10 03 00 00 00  /...............
  00009FF0: 2F 13 00 00 30 13 00 00 0B 00 04 00 CE 12 00 00  /...0...........
  0000A000: 00 00 00 00 0A 00 01 10 22 12 00 00 01 00 F2 F1  ........".......
  0000A010: 0A 00 02 10 32 13 00 00 2A 00 00 00 0A 00 01 12  ....2...*.......
  0000A020: 01 00 00 00 33 13 00 00 1A 00 09 10 03 00 00 00  ....3...........
  0000A030: 2F 13 00 00 30 13 00 00 0B 00 01 00 34 13 00 00  /...0.......4...
  0000A040: 00 00 00 00 1A 00 09 10 03 00 00 00 2F 13 00 00  ............/...
  0000A050: 30 13 00 00 0B 00 01 00 9A 12 00 00 00 00 00 00  0...............
  0000A060: 1A 00 09 10 03 00 00 00 2F 13 00 00 30 13 00 00  ......../...0...
  0000A070: 0B 00 01 00 BB 10 00 00 00 00 00 00 1A 00 09 10  ................
  0000A080: 03 00 00 00 2F 13 00 00 30 13 00 00 0B 00 00 00  ..../...0.......
  0000A090: 09 10 00 00 00 00 00 00 2A 00 06 12 03 00 00 00  ........*.......
  0000A0A0: 31 13 00 00 03 00 00 00 35 13 00 00 03 00 00 00  1.......5.......
  0000A0B0: 36 13 00 00 03 00 00 00 37 13 00 00 03 00 00 00  6.......7.......
  0000A0C0: 38 13 00 00 0A 00 01 10 2F 13 00 00 01 00 F2 F1  8......./.......
  0000A0D0: 0A 00 02 10 3A 13 00 00 0A 04 00 00 1A 00 09 10  ....:...........
  0000A0E0: 22 00 00 00 2F 13 00 00 3B 13 00 00 0B 00 00 00  ".../...;.......
  0000A0F0: 09 10 00 00 00 00 00 00 1A 00 09 10 40 04 00 00  ............@...
  0000A100: 2F 13 00 00 30 13 00 00 0B 00 00 00 09 10 00 00  /...0...........
  0000A110: 00 00 00 00 1A 00 09 10 99 12 00 00 2F 13 00 00  ............/...
  0000A120: 3B 13 00 00 0B 00 00 00 09 10 00 00 00 00 00 00  ;...............
  0000A130: 0A 00 02 10 22 12 00 00 0A 00 00 00 1A 00 09 10  ...."...........
  0000A140: 3F 13 00 00 2F 13 00 00 30 13 00 00 0B 00 00 00  ?.../...0.......
  0000A150: 09 10 00 00 00 00 00 00 0A 00 02 10 32 13 00 00  ............2...
  0000A160: 0A 00 00 00 1A 00 09 10 41 13 00 00 2F 13 00 00  ........A.../...
  0000A170: 3B 13 00 00 0B 00 00 00 09 10 00 00 00 00 00 00  ;...............
  0000A180: 0A 00 02 10 22 12 00 00 2A 00 00 00 1A 00 09 10  ...."...*.......
  0000A190: 43 13 00 00 2F 13 00 00 30 13 00 00 0B 00 00 00  C.../...0.......
  0000A1A0: 09 10 00 00 00 00 00 00 1A 00 09 10 33 13 00 00  ............3...
  0000A1B0: 2F 13 00 00 3B 13 00 00 0B 00 00 00 09 10 00 00  /...;...........
  0000A1C0: 00 00 00 00 0A 00 02 10 2F 13 00 00 2A 00 00 00  ......../...*...
  0000A1D0: 0A 00 02 10 3A 13 00 00 2A 00 00 00 0A 00 01 12  ....:...*.......
  0000A1E0: 01 00 00 00 47 13 00 00 1A 00 09 10 46 13 00 00  ....G.......F...
  0000A1F0: 2F 13 00 00 30 13 00 00 0B 00 01 00 48 13 00 00  /...0.......H...
  0000A200: 00 00 00 00 1A 00 09 10 46 13 00 00 2F 13 00 00  ........F.../...
  0000A210: 30 13 00 00 0B 00 01 00 A6 12 00 00 00 00 00 00  0...............
  0000A220: 1A 00 09 10 2F 13 00 00 2F 13 00 00 3B 13 00 00  ..../.../...;...
  0000A230: 0B 00 01 00 48 13 00 00 00 00 00 00 1A 00 09 10  ....H...........
  0000A240: 2F 13 00 00 2F 13 00 00 3B 13 00 00 0B 00 00 00  /.../...;.......
  0000A250: 09 10 00 00 00 00 00 00 12 00 06 12 03 00 00 00  ................
  0000A260: 4B 13 00 00 03 00 00 00 4C 13 00 00 12 00 06 12  K.......L.......
  0000A270: 03 00 00 00 4B 13 00 00 03 00 00 00 4C 13 00 00  ....K.......L...
  0000A280: 1A 00 09 10 2F 13 00 00 2F 13 00 00 3B 13 00 00  ..../.../...;...
  0000A290: 0B 00 01 00 A6 12 00 00 00 00 00 00 1A 00 09 10  ................
  0000A2A0: 74 00 00 00 2F 13 00 00 3B 13 00 00 0B 00 01 00  t.../...;.......
  0000A2B0: 48 13 00 00 00 00 00 00 22 02 03 12 07 14 05 00  H.......".......
  0000A2C0: 39 13 00 00 09 44 33 44 58 43 4F 4C 4F 52 F2 F1  9....D3DXCOLOR..
  0000A2D0: 0B 14 03 00 3C 13 00 00 16 6F 70 65 72 61 74 6F  ....<....operato
  0000A2E0: 72 20 75 6E 73 69 67 6E 65 64 20 6C 6F 6E 67 F1  r unsigned long.
  0000A2F0: 0B 14 03 00 3D 13 00 00 10 6F 70 65 72 61 74 6F  ....=....operato
  0000A300: 72 20 66 6C 6F 61 74 20 2A F3 F2 F1 0B 14 03 00  r float *.......
  0000A310: 3E 13 00 00 16 6F 70 65 72 61 74 6F 72 20 63 6F  >....operator co
  0000A320: 6E 73 74 20 66 6C 6F 61 74 20 2A F1 0B 14 03 00  nst float *.....
  0000A330: 40 13 00 00 20 6F 70 65 72 61 74 6F 72 20 73 74  @... operator st
  0000A340: 72 75 63 74 20 5F 44 33 44 43 4F 4C 4F 52 56 41  ruct _D3DCOLORVA
  0000A350: 4C 55 45 20 2A F3 F2 F1 0B 14 03 00 42 13 00 00  LUE *.......B...
  0000A360: 26 6F 70 65 72 61 74 6F 72 20 63 6F 6E 73 74 20  &operator const 
  0000A370: 73 74 72 75 63 74 20 5F 44 33 44 43 4F 4C 4F 52  struct _D3DCOLOR
  0000A380: 56 41 4C 55 45 20 2A F1 0B 14 03 00 44 13 00 00  VALUE *.....D...
  0000A390: 20 6F 70 65 72 61 74 6F 72 20 73 74 72 75 63 74   operator struct
  0000A3A0: 20 5F 44 33 44 43 4F 4C 4F 52 56 41 4C 55 45 20   _D3DCOLORVALUE 
  0000A3B0: 26 F3 F2 F1 0B 14 03 00 45 13 00 00 26 6F 70 65  &.......E...&ope
  0000A3C0: 72 61 74 6F 72 20 63 6F 6E 73 74 20 73 74 72 75  rator const stru
  0000A3D0: 63 74 20 5F 44 33 44 43 4F 4C 4F 52 56 41 4C 55  ct _D3DCOLORVALU
  0000A3E0: 45 20 26 F1 0B 14 03 00 49 13 00 00 0A 6F 70 65  E &.....I....ope
  0000A3F0: 72 61 74 6F 72 2B 3D F1 0B 14 03 00 49 13 00 00  rator+=.....I...
  0000A400: 0A 6F 70 65 72 61 74 6F 72 2D 3D F1 0B 14 03 00  .operator-=.....
  0000A410: 4A 13 00 00 0A 6F 70 65 72 61 74 6F 72 2A 3D F1  J....operator*=.
  0000A420: 0B 14 03 00 4A 13 00 00 0A 6F 70 65 72 61 74 6F  ....J....operato
  0000A430: 72 2F 3D F1 07 14 02 00 4D 13 00 00 09 6F 70 65  r/=.....M....ope
  0000A440: 72 61 74 6F 72 2B F2 F1 07 14 02 00 4E 13 00 00  rator+......N...
  0000A450: 09 6F 70 65 72 61 74 6F 72 2D F2 F1 0B 14 03 00  .operator-......
  0000A460: 4F 13 00 00 09 6F 70 65 72 61 74 6F 72 2A F2 F1  O....operator*..
  0000A470: 0B 14 03 00 4F 13 00 00 09 6F 70 65 72 61 74 6F  ....O....operato
  0000A480: 72 2F F2 F1 0B 14 03 00 50 13 00 00 0A 6F 70 65  r/......P....ope
  0000A490: 72 61 74 6F 72 3D 3D F1 0B 14 03 00 50 13 00 00  rator==.....P...
  0000A4A0: 0A 6F 70 65 72 61 74 6F 72 21 3D F1 05 14 03 00  .operator!=.....
  0000A4B0: 40 00 00 00 00 00 01 72 05 14 03 00 40 00 00 00  @......r....@...
  0000A4C0: 04 00 01 67 05 14 03 00 40 00 00 00 08 00 01 62  ...g....@......b
  0000A4D0: 05 14 03 00 40 00 00 00 0C 00 01 61 1E 00 05 10  ....@......a....
  0000A4E0: 1C 00 46 00 51 13 00 00 00 00 00 00 00 00 00 00  ..F.Q...........
  0000A4F0: 10 00 09 44 33 44 58 43 4F 4C 4F 52 26 00 03 12  ...D3DXCOLOR&...
  0000A500: 05 14 03 00 40 00 00 00 00 00 01 78 05 14 03 00  ....@......x....
  0000A510: 40 00 00 00 04 00 01 79 05 14 03 00 40 00 00 00  @......y....@...
  0000A520: 08 00 01 7A 22 00 05 10 03 00 00 00 53 13 00 00  ...z".......S...
  0000A530: 00 00 00 00 00 00 00 00 0C 00 0A 5F 44 33 44 56  ..........._D3DV
  0000A540: 45 43 54 4F 52 F3 F2 F1 32 00 03 12 05 14 03 00  ECTOR...2.......
  0000A550: 40 00 00 00 00 00 01 72 05 14 03 00 40 00 00 00  @......r....@...
  0000A560: 04 00 01 67 05 14 03 00 40 00 00 00 08 00 01 62  ...g....@......b
  0000A570: 05 14 03 00 40 00 00 00 0C 00 01 61 26 00 05 10  ....@......a&...
  0000A580: 04 00 00 00 55 13 00 00 00 00 00 00 00 00 00 00  ....U...........
  0000A590: 10 00 0E 5F 44 33 44 43 4F 4C 4F 52 56 41 4C 55  ..._D3DCOLORVALU
  0000A5A0: 45 F3 F2 F1 0A 00 02 10 9F 12 00 00 0A 00 00 00  E...............
  0000A5B0: 0A 00 02 10 94 12 00 00 0A 00 00 00 0A 00 02 10  ................
  0000A5C0: BC 12 00 00 0A 00 00 00 0A 00 02 10 B0 12 00 00  ................
  0000A5D0: 0A 00 00 00 0A 00 02 10 D4 12 00 00 0A 00 00 00  ................
  0000A5E0: 0A 00 02 10 CC 12 00 00 0A 00 00 00 0A 00 02 10  ................
  0000A5F0: E4 12 00 00 0A 00 00 00 0A 00 02 10 EF 12 00 00  ................
  0000A600: 0A 00 00 00 0A 00 02 10 0D 13 00 00 0A 00 00 00  ................
  0000A610: 0A 00 02 10 06 13 00 00 0A 00 00 00 0A 00 02 10  ................
  0000A620: 26 13 00 00 0A 00 00 00 0A 00 02 10 3A 13 00 00  &...........:...
  0000A630: 0A 00 00 00 0A 00 02 10 2F 13 00 00 0A 00 00 00  ......../.......
  0000A640: 0A 00 02 10 03 04 00 00 0A 00 00 00 0A 00 01 10  ................
  0000A650: 00 10 00 00 01 00 F2 F1 0A 00 02 10 65 13 00 00  ............e...
  0000A660: 2A 00 00 00 22 00 05 10 00 00 80 00 00 00 00 00  *..."...........
  0000A670: 00 00 00 00 00 00 00 00 00 00 0C 49 44 69 72 65  ...........IDire
  0000A680: 63 74 53 6F 75 6E 64 F1 0A 00 02 10 67 13 00 00  ctSound.....g...
  0000A690: 0A 04 00 00 0E 00 01 12 02 00 00 00 66 13 00 00  ............f...
  0000A6A0: 64 13 00 00 1A 00 09 10 12 00 00 00 67 13 00 00  d...........g...
  0000A6B0: 68 13 00 00 07 00 02 00 69 13 00 00 00 00 00 00  h.......i.......
  0000A6C0: 1A 00 09 10 22 00 00 00 67 13 00 00 68 13 00 00  ...."...g...h...
  0000A6D0: 07 00 00 00 09 10 00 00 00 00 00 00 1E 00 05 10  ................
  0000A6E0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000A6F0: 00 00 07 5F 44 53 43 41 50 53 F2 F1 0A 00 02 10  ..._DSCAPS......
  0000A700: 6C 13 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  l...............
  0000A710: 6D 13 00 00 1A 00 09 10 12 00 00 00 67 13 00 00  m...........g...
  0000A720: 68 13 00 00 07 00 01 00 6E 13 00 00 00 00 00 00  h.......n.......
  0000A730: 22 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  "...............
  0000A740: 00 00 00 00 00 00 0D 5F 44 53 42 55 46 46 45 52  ......._DSBUFFER
  0000A750: 44 45 53 43 0A 00 01 10 70 13 00 00 01 00 F2 F1  DESC....p.......
  0000A760: 0A 00 02 10 71 13 00 00 0A 00 00 00 2A 00 05 10  ....q.......*...
  0000A770: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000A780: 00 00 12 49 44 69 72 65 63 74 53 6F 75 6E 64 42  ...IDirectSoundB
  0000A790: 75 66 66 65 72 F3 F2 F1 0A 00 02 10 73 13 00 00  uffer.......s...
  0000A7A0: 0A 00 00 00 0A 00 02 10 74 13 00 00 0A 00 00 00  ........t.......
  0000A7B0: 1E 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  ................
  0000A7C0: 00 00 00 00 00 00 08 49 55 6E 6B 6E 6F 77 6E F1  .......IUnknown.
  0000A7D0: 0A 00 02 10 76 13 00 00 0A 00 00 00 12 00 01 12  ....v...........
  0000A7E0: 03 00 00 00 72 13 00 00 75 13 00 00 77 13 00 00  ....r...u...w...
  0000A7F0: 1A 00 09 10 12 00 00 00 67 13 00 00 68 13 00 00  ........g...h...
  0000A800: 07 00 03 00 78 13 00 00 00 00 00 00 22 00 05 10  ....x......."...
  0000A810: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000A820: 00 00 0D 5F 44 53 53 54 52 45 41 4D 44 45 53 43  ..._DSSTREAMDESC
  0000A830: 0A 00 01 10 7A 13 00 00 01 00 F2 F1 0A 00 02 10  ....z...........
  0000A840: 7B 13 00 00 0A 00 00 00 2A 00 05 10 00 00 80 00  {.......*.......
  0000A850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 12 49  ...............I
  0000A860: 44 69 72 65 63 74 53 6F 75 6E 64 53 74 72 65 61  DirectSoundStrea
  0000A870: 6D F3 F2 F1 0A 00 02 10 7D 13 00 00 0A 00 00 00  m.......}.......
  0000A880: 0A 00 02 10 7E 13 00 00 0A 00 00 00 12 00 01 12  ....~...........
  0000A890: 03 00 00 00 7C 13 00 00 7F 13 00 00 77 13 00 00  ....|.......w...
  0000A8A0: 1A 00 09 10 12 00 00 00 67 13 00 00 68 13 00 00  ........g...h...
  0000A8B0: 07 00 03 00 80 13 00 00 00 00 00 00 0A 00 01 12  ................
  0000A8C0: 01 00 00 00 22 04 00 00 1A 00 09 10 12 00 00 00  ...."...........
  0000A8D0: 67 13 00 00 68 13 00 00 07 00 01 00 82 13 00 00  g...h...........
  0000A8E0: 00 00 00 00 0E 00 01 12 02 00 00 00 AD 11 00 00  ................
  0000A8F0: 22 00 00 00 1A 00 09 10 12 00 00 00 67 13 00 00  "...........g...
  0000A900: 68 13 00 00 07 00 02 00 84 13 00 00 00 00 00 00  h...............
  0000A910: 1A 00 09 10 12 00 00 00 67 13 00 00 68 13 00 00  ........g...h...
  0000A920: 07 00 00 00 09 10 00 00 00 00 00 00 0A 00 02 10  ................
  0000A930: D4 10 00 00 0A 00 00 00 26 00 05 10 00 00 80 00  ........&.......
  0000A940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 11 5F  ..............._
  0000A950: 44 53 45 46 46 45 43 54 49 4D 41 47 45 4C 4F 43  DSEFFECTIMAGELOC
  0000A960: 0A 00 01 10 88 13 00 00 01 00 F2 F1 0A 00 02 10  ................
  0000A970: 89 13 00 00 0A 00 00 00 2A 00 05 10 00 00 80 00  ........*.......
  0000A980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 12 5F  ..............._
  0000A990: 44 53 45 46 46 45 43 54 49 4D 41 47 45 44 45 53  DSEFFECTIMAGEDES
  0000A9A0: 43 F3 F2 F1 0A 00 02 10 8B 13 00 00 0A 00 00 00  C...............
  0000A9B0: 0A 00 02 10 8C 13 00 00 0A 00 00 00 16 00 01 12  ................
  0000A9C0: 04 00 00 00 87 13 00 00 22 00 00 00 8A 13 00 00  ........".......
  0000A9D0: 8D 13 00 00 1A 00 09 10 12 00 00 00 67 13 00 00  ............g...
  0000A9E0: 68 13 00 00 07 00 04 00 8E 13 00 00 00 00 00 00  h...............
  0000A9F0: 16 00 01 12 04 00 00 00 22 00 00 00 22 00 00 00  ........"..."...
  0000AA00: 03 04 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  ...."...........
  0000AA10: 67 13 00 00 68 13 00 00 07 00 04 00 90 13 00 00  g...h...........
  0000AA20: 00 00 00 00 1A 00 01 12 05 00 00 00 22 00 00 00  ............"...
  0000AA30: 22 00 00 00 87 13 00 00 22 00 00 00 22 00 00 00  "......."..."...
  0000AA40: 1A 00 09 10 12 00 00 00 67 13 00 00 68 13 00 00  ........g...h...
  0000AA50: 07 00 05 00 92 13 00 00 00 00 00 00 1A 00 09 10  ................
  0000AA60: 12 00 00 00 67 13 00 00 68 13 00 00 07 00 01 00  ....g...h.......
  0000AA70: 2F 11 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  /...............
  0000AA80: 67 13 00 00 68 13 00 00 07 00 02 00 31 10 00 00  g...h.......1...
  0000AA90: 00 00 00 00 22 00 05 10 00 00 80 00 00 00 00 00  ...."...........
  0000AAA0: 00 00 00 00 00 00 00 00 00 00 0D 5F 44 53 33 44  ..........._DS3D
  0000AAB0: 4C 49 53 54 45 4E 45 52 0A 00 01 10 96 13 00 00  LISTENER........
  0000AAC0: 01 00 F2 F1 0A 00 02 10 97 13 00 00 0A 00 00 00  ................
  0000AAD0: 0E 00 01 12 02 00 00 00 98 13 00 00 22 00 00 00  ............"...
  0000AAE0: 1A 00 09 10 12 00 00 00 67 13 00 00 68 13 00 00  ........g...h...
  0000AAF0: 07 00 02 00 99 13 00 00 00 00 00 00 0E 00 01 12  ................
  0000AB00: 02 00 00 00 40 00 00 00 22 00 00 00 1A 00 09 10  ....@...".......
  0000AB10: 12 00 00 00 67 13 00 00 68 13 00 00 07 00 02 00  ....g...h.......
  0000AB20: 9B 13 00 00 00 00 00 00 22 00 01 12 07 00 00 00  ........".......
  0000AB30: 40 00 00 00 40 00 00 00 40 00 00 00 40 00 00 00  @...@...@...@...
  0000AB40: 40 00 00 00 40 00 00 00 22 00 00 00 1A 00 09 10  @...@...".......
  0000AB50: 12 00 00 00 67 13 00 00 68 13 00 00 07 00 07 00  ....g...h.......
  0000AB60: 9D 13 00 00 00 00 00 00 16 00 01 12 04 00 00 00  ................
  0000AB70: 40 00 00 00 40 00 00 00 40 00 00 00 22 00 00 00  @...@...@..."...
  0000AB80: 1A 00 09 10 12 00 00 00 67 13 00 00 68 13 00 00  ........g...h...
  0000AB90: 07 00 04 00 9F 13 00 00 00 00 00 00 26 00 05 10  ............&...
  0000ABA0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000ABB0: 00 00 10 5F 44 53 49 33 44 4C 32 4C 49 53 54 45  ..._DSI3DL2LISTE
  0000ABC0: 4E 45 52 F1 0A 00 01 10 A1 13 00 00 01 00 F2 F1  NER.............
  0000ABD0: 0A 00 02 10 A2 13 00 00 0A 00 00 00 0E 00 01 12  ................
  0000ABE0: 02 00 00 00 A3 13 00 00 22 00 00 00 1A 00 09 10  ........".......
  0000ABF0: 12 00 00 00 67 13 00 00 68 13 00 00 07 00 02 00  ....g...h.......
  0000AC00: A4 13 00 00 00 00 00 00 0A 00 01 12 01 00 00 00  ................
  0000AC10: 13 04 00 00 1A 00 09 10 12 00 00 00 67 13 00 00  ............g...
  0000AC20: 68 13 00 00 07 00 01 00 A6 13 00 00 00 00 00 00  h...............
  0000AC30: 26 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  &...............
  0000AC40: 00 00 00 00 00 00 0F 5F 44 53 4F 55 54 50 55 54  ......._DSOUTPUT
  0000AC50: 4C 45 56 45 4C 53 F2 F1 0A 00 02 10 A8 13 00 00  LEVELS..........
  0000AC60: 0A 00 00 00 0E 00 01 12 02 00 00 00 A9 13 00 00  ................
  0000AC70: 74 00 00 00 1A 00 09 10 12 00 00 00 67 13 00 00  t...........g...
  0000AC80: 68 13 00 00 07 00 02 00 AA 13 00 00 00 00 00 00  h...............
  0000AC90: 82 02 03 12 0B 14 03 00 6A 13 00 00 0E 51 75 65  ........j....Que
  0000ACA0: 72 79 49 6E 74 65 72 66 61 63 65 F1 0B 14 03 00  ryInterface.....
  0000ACB0: 6B 13 00 00 06 41 64 64 52 65 66 F1 0B 14 03 00  k....AddRef.....
  0000ACC0: 6B 13 00 00 07 52 65 6C 65 61 73 65 0B 14 03 00  k....Release....
  0000ACD0: 6F 13 00 00 07 47 65 74 43 61 70 73 0B 14 03 00  o....GetCaps....
  0000ACE0: 79 13 00 00 11 43 72 65 61 74 65 53 6F 75 6E 64  y....CreateSound
  0000ACF0: 42 75 66 66 65 72 F2 F1 0B 14 03 00 81 13 00 00  Buffer..........
  0000AD00: 11 43 72 65 61 74 65 53 6F 75 6E 64 53 74 72 65  .CreateSoundStre
  0000AD10: 61 6D F2 F1 0B 14 03 00 83 13 00 00 10 47 65 74  am...........Get
  0000AD20: 53 70 65 61 6B 65 72 43 6F 6E 66 69 67 F3 F2 F1  SpeakerConfig...
  0000AD30: 0B 14 03 00 85 13 00 00 13 53 65 74 43 6F 6F 70  .........SetCoop
  0000AD40: 65 72 61 74 69 76 65 4C 65 76 65 6C 0B 14 03 00  erativeLevel....
  0000AD50: 86 13 00 00 07 43 6F 6D 70 61 63 74 0B 14 03 00  .....Compact....
  0000AD60: 8F 13 00 00 14 44 6F 77 6E 6C 6F 61 64 45 66 66  .....DownloadEff
  0000AD70: 65 63 74 73 49 6D 61 67 65 F3 F2 F1 0B 14 03 00  ectsImage.......
  0000AD80: 91 13 00 00 0D 47 65 74 45 66 66 65 63 74 44 61  .....GetEffectDa
  0000AD90: 74 61 F2 F1 0B 14 03 00 93 13 00 00 0D 53 65 74  ta...........Set
  0000ADA0: 45 66 66 65 63 74 44 61 74 61 F2 F1 0B 14 03 00  EffectData......
  0000ADB0: 86 13 00 00 10 43 6F 6D 6D 69 74 45 66 66 65 63  .....CommitEffec
  0000ADC0: 74 44 61 74 61 F3 F2 F1 0B 14 03 00 94 13 00 00  tData...........
  0000ADD0: 10 45 6E 61 62 6C 65 48 65 61 64 70 68 6F 6E 65  .EnableHeadphone
  0000ADE0: 73 F3 F2 F1 0B 14 03 00 95 13 00 00 11 53 65 74  s............Set
  0000ADF0: 4D 69 78 42 69 6E 48 65 61 64 72 6F 6F 6D F2 F1  MixBinHeadroom..
  0000AE00: 0B 14 03 00 9A 13 00 00 10 53 65 74 41 6C 6C 50  .........SetAllP
  0000AE10: 61 72 61 6D 65 74 65 72 73 F3 F2 F1 0B 14 03 00  arameters.......
  0000AE20: 9C 13 00 00 11 53 65 74 44 69 73 74 61 6E 63 65  .....SetDistance
  0000AE30: 46 61 63 74 6F 72 F2 F1 0B 14 03 00 9C 13 00 00  Factor..........
  0000AE40: 10 53 65 74 44 6F 70 70 6C 65 72 46 61 63 74 6F  .SetDopplerFacto
  0000AE50: 72 F3 F2 F1 0B 14 03 00 9E 13 00 00 0E 53 65 74  r............Set
  0000AE60: 4F 72 69 65 6E 74 61 74 69 6F 6E F1 0B 14 03 00  Orientation.....
  0000AE70: A0 13 00 00 0B 53 65 74 50 6F 73 69 74 69 6F 6E  .....SetPosition
  0000AE80: 0B 14 03 00 9C 13 00 00 10 53 65 74 52 6F 6C 6C  .........SetRoll
  0000AE90: 6F 66 66 46 61 63 74 6F 72 F3 F2 F1 0B 14 03 00  offFactor.......
  0000AEA0: A0 13 00 00 0B 53 65 74 56 65 6C 6F 63 69 74 79  .....SetVelocity
  0000AEB0: 0B 14 03 00 A5 13 00 00 10 53 65 74 49 33 44 4C  .........SetI3DL
  0000AEC0: 32 4C 69 73 74 65 6E 65 72 F3 F2 F1 0B 14 03 00  2Listener.......
  0000AED0: 86 13 00 00 16 43 6F 6D 6D 69 74 44 65 66 65 72  .....CommitDefer
  0000AEE0: 72 65 64 53 65 74 74 69 6E 67 73 F1 0B 14 03 00  redSettings.....
  0000AEF0: A7 13 00 00 07 47 65 74 54 69 6D 65 0B 14 03 00  .....GetTime....
  0000AF00: AB 13 00 00 0F 47 65 74 4F 75 74 70 75 74 4C 65  .....GetOutputLe
  0000AF10: 76 65 6C 73 22 00 05 10 1A 00 00 00 AC 13 00 00  vels"...........
  0000AF20: 00 00 00 00 00 00 00 00 01 00 0C 49 44 69 72 65  ...........IDire
  0000AF30: 63 74 53 6F 75 6E 64 F1 72 00 03 12 05 14 03 00  ctSound.r.......
  0000AF40: 22 00 00 00 00 00 0F 64 77 46 72 65 65 32 44 42  "......dwFree2DB
  0000AF50: 75 66 66 65 72 73 F2 F1 05 14 03 00 22 00 00 00  uffers......"...
  0000AF60: 04 00 0F 64 77 46 72 65 65 33 44 42 75 66 66 65  ...dwFree3DBuffe
  0000AF70: 72 73 F2 F1 05 14 03 00 22 00 00 00 08 00 10 64  rs......"......d
  0000AF80: 77 46 72 65 65 42 75 66 66 65 72 53 47 45 73 F1  wFreeBufferSGEs.
  0000AF90: 05 14 03 00 22 00 00 00 0C 00 11 64 77 4D 65 6D  ...."......dwMem
  0000AFA0: 6F 72 79 41 6C 6C 6F 63 61 74 65 64 1E 00 05 10  oryAllocated....
  0000AFB0: 04 00 00 00 AE 13 00 00 00 00 00 00 00 00 00 00  ................
  0000AFC0: 10 00 07 5F 44 53 43 41 50 53 F2 F1 06 00 0A 00  ..._DSCAPS......
  0000AFD0: 03 00 55 50 0A 00 02 10 B0 13 00 00 0A 00 00 00  ..UP............
  0000AFE0: 0A 00 02 10 03 04 00 00 0A 00 00 00 0E 00 01 12  ................
  0000AFF0: 02 00 00 00 66 13 00 00 B2 13 00 00 0A 00 02 10  ....f...........
  0000B000: 76 13 00 00 0A 04 00 00 1A 00 09 10 12 00 00 00  v...............
  0000B010: 76 13 00 00 B4 13 00 00 07 00 02 00 B3 13 00 00  v...............
  0000B020: 00 00 00 00 1A 00 09 10 22 00 00 00 76 13 00 00  ........"...v...
  0000B030: B4 13 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  0000B040: 0A 00 01 10 76 13 00 00 01 00 F2 F1 0A 00 02 10  ....v...........
  0000B050: B7 13 00 00 2A 00 00 00 0A 00 01 12 01 00 00 00  ....*...........
  0000B060: B8 13 00 00 1A 00 09 10 03 00 00 00 76 13 00 00  ............v...
  0000B070: B4 13 00 00 0B 00 01 00 B9 13 00 00 00 00 00 00  ................
  0000B080: 1A 00 09 10 03 00 00 00 76 13 00 00 B4 13 00 00  ........v.......
  0000B090: 0B 00 00 00 09 10 00 00 00 00 00 00 12 00 06 12  ................
  0000B0A0: 03 01 00 00 BA 13 00 00 03 01 00 00 BB 13 00 00  ................
  0000B0B0: 62 00 03 12 09 14 00 00 B1 13 00 00 0B 14 1B 00  b...............
  0000B0C0: B5 13 00 00 00 00 00 00 0E 51 75 65 72 79 49 6E  .........QueryIn
  0000B0D0: 74 65 72 66 61 63 65 F1 0B 14 1B 00 B6 13 00 00  terface.........
  0000B0E0: 04 00 00 00 06 41 64 64 52 65 66 F1 0B 14 1B 00  .....AddRef.....
  0000B0F0: B6 13 00 00 08 00 00 00 07 52 65 6C 65 61 73 65  .........Release
  0000B100: 07 14 02 00 BC 13 00 00 08 49 55 6E 6B 6E 6F 77  .........IUnknow
  0000B110: 6E F3 F2 F1 06 00 0A 00 03 00 55 50 1E 00 05 10  n.........UP....
  0000B120: 06 00 02 00 BD 13 00 00 00 00 00 00 BE 13 00 00  ................
  0000B130: 04 00 08 49 55 6E 6B 6E 6F 77 6E F1 22 00 05 10  ...IUnknown."...
  0000B140: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000B150: 00 00 0D 74 57 41 56 45 46 4F 52 4D 41 54 45 58  ...tWAVEFORMATEX
  0000B160: 0A 00 02 10 C0 13 00 00 0A 00 00 00 22 00 05 10  ............"...
  0000B170: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000B180: 00 00 0A 5F 44 53 4D 49 58 42 49 4E 53 F3 F2 F1  ..._DSMIXBINS...
  0000B190: 0A 00 01 10 C2 13 00 00 01 00 F2 F1 0A 00 02 10  ................
  0000B1A0: C3 13 00 00 0A 00 00 00 86 00 03 12 05 14 03 00  ................
  0000B1B0: 22 00 00 00 00 00 06 64 77 53 69 7A 65 F3 F2 F1  "......dwSize...
  0000B1C0: 05 14 03 00 22 00 00 00 04 00 07 64 77 46 6C 61  ...."......dwFla
  0000B1D0: 67 73 F2 F1 05 14 03 00 22 00 00 00 08 00 0D 64  gs......"......d
  0000B1E0: 77 42 75 66 66 65 72 42 79 74 65 73 05 14 03 00  wBufferBytes....
  0000B1F0: C1 13 00 00 0C 00 0B 6C 70 77 66 78 46 6F 72 6D  .......lpwfxForm
  0000B200: 61 74 F2 F1 05 14 03 00 C4 13 00 00 10 00 09 6C  at.............l
  0000B210: 70 4D 69 78 42 69 6E 73 05 14 03 00 22 00 00 00  pMixBins...."...
  0000B220: 14 00 0D 64 77 49 6E 70 75 74 4D 69 78 42 69 6E  ...dwInputMixBin
  0000B230: 22 00 05 10 06 00 00 00 C5 13 00 00 00 00 00 00  "...............
  0000B240: 00 00 00 00 18 00 0D 5F 44 53 42 55 46 46 45 52  ......._DSBUFFER
  0000B250: 44 45 53 43 12 00 01 12 03 00 00 00 03 04 00 00  DESC............
  0000B260: 03 04 00 00 22 00 00 00 0E 00 08 10 03 00 00 00  ...."...........
  0000B270: 07 00 03 00 C7 13 00 00 0A 00 02 10 C8 13 00 00  ................
  0000B280: 0A 00 00 00 92 00 03 12 05 14 03 00 22 00 00 00  ............"...
  0000B290: 00 00 07 64 77 46 6C 61 67 73 F2 F1 05 14 03 00  ...dwFlags......
  0000B2A0: 22 00 00 00 04 00 14 64 77 4D 61 78 41 74 74 61  "......dwMaxAtta
  0000B2B0: 63 68 65 64 50 61 63 6B 65 74 73 F1 05 14 03 00  chedPackets.....
  0000B2C0: C1 13 00 00 08 00 0B 6C 70 77 66 78 46 6F 72 6D  .......lpwfxForm
  0000B2D0: 61 74 F2 F1 05 14 03 00 C9 13 00 00 0C 00 0C 6C  at.............l
  0000B2E0: 70 66 6E 43 61 6C 6C 62 61 63 6B F1 05 14 03 00  pfnCallback.....
  0000B2F0: 03 04 00 00 10 00 0A 6C 70 76 43 6F 6E 74 65 78  .......lpvContex
  0000B300: 74 F3 F2 F1 05 14 03 00 C4 13 00 00 14 00 09 6C  t..............l
  0000B310: 70 4D 69 78 42 69 6E 73 22 00 05 10 06 00 00 00  pMixBins".......
  0000B320: CA 13 00 00 00 00 00 00 00 00 00 00 18 00 0D 5F  ..............._
  0000B330: 44 53 53 54 52 45 41 4D 44 45 53 43 16 00 03 12  DSSTREAMDESC....
  0000B340: 05 14 03 00 74 00 00 00 00 00 06 75 6E 75 73 65  ....t......unuse
  0000B350: 64 F3 F2 F1 1E 00 05 10 01 00 00 00 CC 13 00 00  d...............
  0000B360: 00 00 00 00 00 00 00 00 04 00 06 48 57 4E 44 5F  ...........HWND_
  0000B370: 5F F3 F2 F1 22 00 05 10 00 00 80 00 00 00 00 00  _..."...........
  0000B380: 00 00 00 00 00 00 00 00 00 00 0C 5F 44 53 45 46  ..........._DSEF
  0000B390: 46 45 43 54 4D 41 50 F1 0E 00 03 10 CE 13 00 00  FECTMAP.........
  0000B3A0: 11 00 00 00 20 00 00 F1 52 00 03 12 05 14 03 00  .... ...R.......
  0000B3B0: 22 00 00 00 00 00 0D 64 77 45 66 66 65 63 74 43  "......dwEffectC
  0000B3C0: 6F 75 6E 74 05 14 03 00 22 00 00 00 04 00 12 64  ount...."......d
  0000B3D0: 77 54 6F 74 61 6C 53 63 72 61 74 63 68 53 69 7A  wTotalScratchSiz
  0000B3E0: 65 F3 F2 F1 05 14 03 00 CF 13 00 00 08 00 0B 61  e..............a
  0000B3F0: 45 66 66 65 63 74 4D 61 70 73 F2 F1 2A 00 05 10  EffectMaps..*...
  0000B400: 03 00 00 00 D0 13 00 00 00 00 00 00 00 00 00 00  ................
  0000B410: 28 00 12 5F 44 53 45 46 46 45 43 54 49 4D 41 47  (.._DSEFFECTIMAG
  0000B420: 45 44 45 53 43 F3 F2 F1 3E 00 03 12 05 14 03 00  EDESC...>.......
  0000B430: 22 00 00 00 00 00 12 64 77 49 33 44 4C 32 52 65  "......dwI3DL2Re
  0000B440: 76 65 72 62 49 6E 64 65 78 F3 F2 F1 05 14 03 00  verbIndex.......
  0000B450: 22 00 00 00 04 00 10 64 77 43 72 6F 73 73 74 61  "......dwCrossta
  0000B460: 6C 6B 49 6E 64 65 78 F1 26 00 05 10 02 00 00 00  lkIndex.&.......
  0000B470: D2 13 00 00 00 00 00 00 00 00 00 00 08 00 11 5F  ..............._
  0000B480: 44 53 45 46 46 45 43 54 49 4D 41 47 45 4C 4F 43  DSEFFECTIMAGELOC
  0000B490: 0A 00 02 10 96 13 00 00 0A 04 00 00 1A 00 09 10  ................
  0000B4A0: 03 00 00 00 96 13 00 00 D4 13 00 00 0B 00 00 00  ................
  0000B4B0: 09 10 00 00 00 00 00 00 DA 00 03 12 05 14 03 00  ................
  0000B4C0: 22 00 00 00 00 00 06 64 77 53 69 7A 65 F3 F2 F1  "......dwSize...
  0000B4D0: 05 14 03 00 B0 12 00 00 04 00 09 76 50 6F 73 69  ...........vPosi
  0000B4E0: 74 69 6F 6E 05 14 03 00 B0 12 00 00 10 00 09 76  tion...........v
  0000B4F0: 56 65 6C 6F 63 69 74 79 05 14 03 00 B0 12 00 00  Velocity........
  0000B500: 1C 00 0C 76 4F 72 69 65 6E 74 46 72 6F 6E 74 F1  ...vOrientFront.
  0000B510: 05 14 03 00 B0 12 00 00 28 00 0A 76 4F 72 69 65  ........(..vOrie
  0000B520: 6E 74 54 6F 70 F3 F2 F1 05 14 03 00 40 00 00 00  ntTop.......@...
  0000B530: 34 00 10 66 6C 44 69 73 74 61 6E 63 65 46 61 63  4..flDistanceFac
  0000B540: 74 6F 72 F1 05 14 03 00 40 00 00 00 38 00 0F 66  tor.....@...8..f
  0000B550: 6C 52 6F 6C 6C 6F 66 66 46 61 63 74 6F 72 F2 F1  lRolloffFactor..
  0000B560: 05 14 03 00 40 00 00 00 3C 00 0F 66 6C 44 6F 70  ....@...<..flDop
  0000B570: 70 6C 65 72 46 61 63 74 6F 72 F2 F1 0B 14 03 01  plerFactor......
  0000B580: D5 13 00 00 0D 5F 44 53 33 44 4C 49 53 54 45 4E  ....._DS3DLISTEN
  0000B590: 45 52 F2 F1 22 00 05 10 09 00 02 00 D6 13 00 00  ER.."...........
  0000B5A0: 00 00 00 00 00 00 00 00 40 00 0D 5F 44 53 33 44  ........@.._DS3D
  0000B5B0: 4C 49 53 54 45 4E 45 52 22 01 03 12 05 14 03 00  LISTENER".......
  0000B5C0: 12 00 00 00 00 00 05 6C 52 6F 6F 6D 05 14 03 00  .......lRoom....
  0000B5D0: 12 00 00 00 04 00 07 6C 52 6F 6F 6D 48 46 F2 F1  .......lRoomHF..
  0000B5E0: 05 14 03 00 40 00 00 00 08 00 13 66 6C 52 6F 6F  ....@......flRoo
  0000B5F0: 6D 52 6F 6C 6C 6F 66 66 46 61 63 74 6F 72 F2 F1  mRolloffFactor..
  0000B600: 05 14 03 00 40 00 00 00 0C 00 0B 66 6C 44 65 63  ....@......flDec
  0000B610: 61 79 54 69 6D 65 F2 F1 05 14 03 00 40 00 00 00  ayTime......@...
  0000B620: 10 00 0E 66 6C 44 65 63 61 79 48 46 52 61 74 69  ...flDecayHFRati
  0000B630: 6F F3 F2 F1 05 14 03 00 12 00 00 00 14 00 0C 6C  o..............l
  0000B640: 52 65 66 6C 65 63 74 69 6F 6E 73 F1 05 14 03 00  Reflections.....
  0000B650: 40 00 00 00 18 00 12 66 6C 52 65 66 6C 65 63 74  @......flReflect
  0000B660: 69 6F 6E 73 44 65 6C 61 79 F3 F2 F1 05 14 03 00  ionsDelay.......
  0000B670: 12 00 00 00 1C 00 07 6C 52 65 76 65 72 62 F2 F1  .......lReverb..
  0000B680: 05 14 03 00 40 00 00 00 20 00 0D 66 6C 52 65 76  ....@... ..flRev
  0000B690: 65 72 62 44 65 6C 61 79 05 14 03 00 40 00 00 00  erbDelay....@...
  0000B6A0: 24 00 0B 66 6C 44 69 66 66 75 73 69 6F 6E F2 F1  $..flDiffusion..
  0000B6B0: 05 14 03 00 40 00 00 00 28 00 09 66 6C 44 65 6E  ....@...(..flDen
  0000B6C0: 73 69 74 79 05 14 03 00 40 00 00 00 2C 00 0D 66  sity....@...,..f
  0000B6D0: 6C 48 46 52 65 66 65 72 65 6E 63 65 26 00 05 10  lHFReference&...
  0000B6E0: 0C 00 00 00 D8 13 00 00 00 00 00 00 00 00 00 00  ................
  0000B6F0: 30 00 10 5F 44 53 49 33 44 4C 32 4C 49 53 54 45  0.._DSI3DL2LISTE
  0000B700: 4E 45 52 F1 26 02 03 12 05 14 03 00 22 00 00 00  NER.&......."...
  0000B710: 00 00 15 64 77 41 6E 61 6C 6F 67 4C 65 66 74 54  ...dwAnalogLeftT
  0000B720: 6F 74 61 6C 50 65 61 6B 05 14 03 00 22 00 00 00  otalPeak...."...
  0000B730: 04 00 16 64 77 41 6E 61 6C 6F 67 52 69 67 68 74  ...dwAnalogRight
  0000B740: 54 6F 74 61 6C 50 65 61 6B F3 F2 F1 05 14 03 00  TotalPeak.......
  0000B750: 22 00 00 00 08 00 14 64 77 41 6E 61 6C 6F 67 4C  "......dwAnalogL
  0000B760: 65 66 74 54 6F 74 61 6C 52 4D 53 F1 05 14 03 00  eftTotalRMS.....
  0000B770: 22 00 00 00 0C 00 15 64 77 41 6E 61 6C 6F 67 52  "......dwAnalogR
  0000B780: 69 67 68 74 54 6F 74 61 6C 52 4D 53 05 14 03 00  ightTotalRMS....
  0000B790: 22 00 00 00 10 00 16 64 77 44 69 67 69 74 61 6C  "......dwDigital
  0000B7A0: 46 72 6F 6E 74 4C 65 66 74 50 65 61 6B F3 F2 F1  FrontLeftPeak...
  0000B7B0: 05 14 03 00 22 00 00 00 14 00 18 64 77 44 69 67  ...."......dwDig
  0000B7C0: 69 74 61 6C 46 72 6F 6E 74 43 65 6E 74 65 72 50  italFrontCenterP
  0000B7D0: 65 61 6B F1 05 14 03 00 22 00 00 00 18 00 17 64  eak....."......d
  0000B7E0: 77 44 69 67 69 74 61 6C 46 72 6F 6E 74 52 69 67  wDigitalFrontRig
  0000B7F0: 68 74 50 65 61 6B F2 F1 05 14 03 00 22 00 00 00  htPeak......"...
  0000B800: 1C 00 15 64 77 44 69 67 69 74 61 6C 42 61 63 6B  ...dwDigitalBack
  0000B810: 4C 65 66 74 50 65 61 6B 05 14 03 00 22 00 00 00  LeftPeak...."...
  0000B820: 20 00 16 64 77 44 69 67 69 74 61 6C 42 61 63 6B   ..dwDigitalBack
  0000B830: 52 69 67 68 74 50 65 61 6B F3 F2 F1 05 14 03 00  RightPeak.......
  0000B840: 22 00 00 00 24 00 19 64 77 44 69 67 69 74 61 6C  "...$..dwDigital
  0000B850: 4C 6F 77 46 72 65 71 75 65 6E 63 79 50 65 61 6B  LowFrequencyPeak
  0000B860: 05 14 03 00 22 00 00 00 28 00 15 64 77 44 69 67  ...."...(..dwDig
  0000B870: 69 74 61 6C 46 72 6F 6E 74 4C 65 66 74 52 4D 53  italFrontLeftRMS
  0000B880: 05 14 03 00 22 00 00 00 2C 00 17 64 77 44 69 67  ...."...,..dwDig
  0000B890: 69 74 61 6C 46 72 6F 6E 74 43 65 6E 74 65 72 52  italFrontCenterR
  0000B8A0: 4D 53 F2 F1 05 14 03 00 22 00 00 00 30 00 16 64  MS......"...0..d
  0000B8B0: 77 44 69 67 69 74 61 6C 46 72 6F 6E 74 52 69 67  wDigitalFrontRig
  0000B8C0: 68 74 52 4D 53 F3 F2 F1 05 14 03 00 22 00 00 00  htRMS......."...
  0000B8D0: 34 00 14 64 77 44 69 67 69 74 61 6C 42 61 63 6B  4..dwDigitalBack
  0000B8E0: 4C 65 66 74 52 4D 53 F1 05 14 03 00 22 00 00 00  LeftRMS....."...
  0000B8F0: 38 00 15 64 77 44 69 67 69 74 61 6C 42 61 63 6B  8..dwDigitalBack
  0000B900: 52 69 67 68 74 52 4D 53 05 14 03 00 22 00 00 00  RightRMS...."...
  0000B910: 3C 00 18 64 77 44 69 67 69 74 61 6C 4C 6F 77 46  <..dwDigitalLowF
  0000B920: 72 65 71 75 65 6E 63 79 52 4D 53 F1 26 00 05 10  requencyRMS.&...
  0000B930: 10 00 00 00 DA 13 00 00 00 00 00 00 00 00 00 00  ................
  0000B940: 40 00 0F 5F 44 53 4F 55 54 50 55 54 4C 45 56 45  @.._DSOUTPUTLEVE
  0000B950: 4C 53 F2 F1 0A 00 02 10 73 13 00 00 0A 04 00 00  LS......s.......
  0000B960: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000B970: 07 00 02 00 69 13 00 00 00 00 00 00 1A 00 09 10  ....i...........
  0000B980: 22 00 00 00 73 13 00 00 DC 13 00 00 07 00 00 00  "...s...........
  0000B990: 09 10 00 00 00 00 00 00 0A 00 01 10 C0 13 00 00  ................
  0000B9A0: 01 00 F2 F1 0A 00 02 10 DF 13 00 00 0A 00 00 00  ................
  0000B9B0: 0A 00 01 12 01 00 00 00 E0 13 00 00 1A 00 09 10  ................
  0000B9C0: 12 00 00 00 73 13 00 00 DC 13 00 00 07 00 01 00  ....s...........
  0000B9D0: E1 13 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000B9E0: 73 13 00 00 DC 13 00 00 07 00 01 00 BB 10 00 00  s...............
  0000B9F0: 00 00 00 00 0A 00 01 12 01 00 00 00 12 00 00 00  ................
  0000BA00: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000BA10: 07 00 01 00 E4 13 00 00 00 00 00 00 22 00 05 10  ............"...
  0000BA20: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000BA30: 00 00 0A 5F 44 53 4C 46 4F 44 45 53 43 F3 F2 F1  ..._DSLFODESC...
  0000BA40: 0A 00 01 10 E6 13 00 00 01 00 F2 F1 0A 00 02 10  ................
  0000BA50: E7 13 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  ................
  0000BA60: E8 13 00 00 1A 00 09 10 12 00 00 00 73 13 00 00  ............s...
  0000BA70: DC 13 00 00 07 00 01 00 E9 13 00 00 00 00 00 00  ................
  0000BA80: 26 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  &...............
  0000BA90: 00 00 00 00 00 00 0F 5F 44 53 45 4E 56 45 4C 4F  ......._DSENVELO
  0000BAA0: 50 45 44 45 53 43 F2 F1 0A 00 01 10 EB 13 00 00  PEDESC..........
  0000BAB0: 01 00 F2 F1 0A 00 02 10 EC 13 00 00 0A 00 00 00  ................
  0000BAC0: 0A 00 01 12 01 00 00 00 ED 13 00 00 1A 00 09 10  ................
  0000BAD0: 12 00 00 00 73 13 00 00 DC 13 00 00 07 00 01 00  ....s...........
  0000BAE0: EE 13 00 00 00 00 00 00 22 00 05 10 00 00 80 00  ........".......
  0000BAF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0D 5F  ..............._
  0000BB00: 44 53 46 49 4C 54 45 52 44 45 53 43 0A 00 01 10  DSFILTERDESC....
  0000BB10: F0 13 00 00 01 00 F2 F1 0A 00 02 10 F1 13 00 00  ................
  0000BB20: 0A 00 00 00 0A 00 01 12 01 00 00 00 F2 13 00 00  ................
  0000BB30: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000BB40: 07 00 01 00 F3 13 00 00 00 00 00 00 0A 00 01 12  ................
  0000BB50: 01 00 00 00 74 13 00 00 1A 00 09 10 12 00 00 00  ....t...........
  0000BB60: 73 13 00 00 DC 13 00 00 07 00 01 00 F5 13 00 00  s...............
  0000BB70: 00 00 00 00 0A 00 01 12 01 00 00 00 C4 13 00 00  ................
  0000BB80: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000BB90: 07 00 01 00 F7 13 00 00 00 00 00 00 22 00 05 10  ............"...
  0000BBA0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000BBB0: 00 00 0B 5F 44 53 33 44 42 55 46 46 45 52 F2 F1  ..._DS3DBUFFER..
  0000BBC0: 0A 00 01 10 F9 13 00 00 01 00 F2 F1 0A 00 02 10  ................
  0000BBD0: FA 13 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  0000BBE0: FB 13 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  ...."...........
  0000BBF0: 73 13 00 00 DC 13 00 00 07 00 02 00 FC 13 00 00  s...............
  0000BC00: 00 00 00 00 12 00 01 12 03 00 00 00 22 00 00 00  ............"...
  0000BC10: 22 00 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  "..."...........
  0000BC20: 73 13 00 00 DC 13 00 00 07 00 03 00 FE 13 00 00  s...............
  0000BC30: 00 00 00 00 1A 00 09 10 12 00 00 00 73 13 00 00  ............s...
  0000BC40: DC 13 00 00 07 00 04 00 9F 13 00 00 00 00 00 00  ................
  0000BC50: 0E 00 01 12 02 00 00 00 12 00 00 00 22 00 00 00  ............"...
  0000BC60: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000BC70: 07 00 02 00 01 14 00 00 00 00 00 00 1A 00 09 10  ................
  0000BC80: 12 00 00 00 73 13 00 00 DC 13 00 00 07 00 02 00  ....s...........
  0000BC90: 9B 13 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000BCA0: 73 13 00 00 DC 13 00 00 07 00 02 00 31 10 00 00  s...........1...
  0000BCB0: 00 00 00 00 12 00 01 12 03 00 00 00 99 12 00 00  ................
  0000BCC0: 22 00 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  "..."...........
  0000BCD0: 73 13 00 00 DC 13 00 00 07 00 03 00 05 14 00 00  s...............
  0000BCE0: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  0000BCF0: 00 00 00 00 00 00 00 00 00 00 0E 5F 44 53 49 33  ..........._DSI3
  0000BD00: 44 4C 32 42 55 46 46 45 52 F3 F2 F1 0A 00 01 10  DL2BUFFER.......
  0000BD10: 07 14 00 00 01 00 F2 F1 0A 00 02 10 08 14 00 00  ................
  0000BD20: 0A 00 00 00 0E 00 01 12 02 00 00 00 09 14 00 00  ................
  0000BD30: 22 00 00 00 1A 00 09 10 12 00 00 00 73 13 00 00  "...........s...
  0000BD40: DC 13 00 00 07 00 02 00 0A 14 00 00 00 00 00 00  ................
  0000BD50: 0E 00 01 12 02 00 00 00 13 00 00 00 22 00 00 00  ............"...
  0000BD60: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000BD70: 07 00 02 00 0C 14 00 00 00 00 00 00 1A 00 09 10  ................
  0000BD80: 12 00 00 00 73 13 00 00 DC 13 00 00 07 00 00 00  ....s...........
  0000BD90: 09 10 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000BDA0: 73 13 00 00 DC 13 00 00 07 00 01 00 82 13 00 00  s...............
  0000BDB0: 00 00 00 00 0E 00 01 12 02 00 00 00 22 04 00 00  ............"...
  0000BDC0: 22 04 00 00 1A 00 09 10 12 00 00 00 73 13 00 00  "...........s...
  0000BDD0: DC 13 00 00 07 00 02 00 10 14 00 00 00 00 00 00  ................
  0000BDE0: 0E 00 01 12 02 00 00 00 03 04 00 00 22 00 00 00  ............"...
  0000BDF0: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000BE00: 07 00 02 00 12 14 00 00 00 00 00 00 22 00 01 12  ............"...
  0000BE10: 07 00 00 00 22 00 00 00 22 00 00 00 64 13 00 00  ...."..."...d...
  0000BE20: 22 04 00 00 64 13 00 00 22 04 00 00 22 00 00 00  "...d..."..."...
  0000BE30: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000BE40: 07 00 07 00 14 14 00 00 00 00 00 00 16 00 01 12  ................
  0000BE50: 04 00 00 00 03 04 00 00 22 00 00 00 03 04 00 00  ........".......
  0000BE60: 22 00 00 00 1A 00 09 10 12 00 00 00 73 13 00 00  "...........s...
  0000BE70: DC 13 00 00 07 00 04 00 16 14 00 00 00 00 00 00  ................
  0000BE80: 2A 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  *...............
  0000BE90: 00 00 00 00 00 00 12 5F 44 53 42 50 4F 53 49 54  ......._DSBPOSIT
  0000BEA0: 49 4F 4E 4E 4F 54 49 46 59 F3 F2 F1 0A 00 01 10  IONNOTIFY.......
  0000BEB0: 18 14 00 00 01 00 F2 F1 0A 00 02 10 19 14 00 00  ................
  0000BEC0: 0A 00 00 00 0E 00 01 12 02 00 00 00 22 00 00 00  ............"...
  0000BED0: 1A 14 00 00 1A 00 09 10 12 00 00 00 73 13 00 00  ............s...
  0000BEE0: DC 13 00 00 07 00 02 00 1B 14 00 00 00 00 00 00  ................
  0000BEF0: A2 03 03 12 0B 14 03 00 DD 13 00 00 0E 51 75 65  .............Que
  0000BF00: 72 79 49 6E 74 65 72 66 61 63 65 F1 0B 14 03 00  ryInterface.....
  0000BF10: DE 13 00 00 06 41 64 64 52 65 66 F1 0B 14 03 00  .....AddRef.....
  0000BF20: DE 13 00 00 07 52 65 6C 65 61 73 65 0B 14 03 00  .....Release....
  0000BF30: E2 13 00 00 09 53 65 74 46 6F 72 6D 61 74 F2 F1  .....SetFormat..
  0000BF40: 0B 14 03 00 E3 13 00 00 0C 53 65 74 46 72 65 71  .........SetFreq
  0000BF50: 75 65 6E 63 79 F3 F2 F1 0B 14 03 00 E5 13 00 00  uency...........
  0000BF60: 09 53 65 74 56 6F 6C 75 6D 65 F2 F1 0B 14 03 00  .SetVolume......
  0000BF70: E5 13 00 00 08 53 65 74 50 69 74 63 68 F3 F2 F1  .....SetPitch...
  0000BF80: 0B 14 03 00 EA 13 00 00 06 53 65 74 4C 46 4F F1  .........SetLFO.
  0000BF90: 0B 14 03 00 EF 13 00 00 05 53 65 74 45 47 F2 F1  .........SetEG..
  0000BFA0: 0B 14 03 00 F4 13 00 00 09 53 65 74 46 69 6C 74  .........SetFilt
  0000BFB0: 65 72 F2 F1 0B 14 03 00 E3 13 00 00 0B 53 65 74  er...........Set
  0000BFC0: 48 65 61 64 72 6F 6F 6D 0B 14 03 00 F6 13 00 00  Headroom........
  0000BFD0: 0F 53 65 74 4F 75 74 70 75 74 42 75 66 66 65 72  .SetOutputBuffer
  0000BFE0: 0B 14 03 00 F8 13 00 00 0A 53 65 74 4D 69 78 42  .........SetMixB
  0000BFF0: 69 6E 73 F1 0B 14 03 00 F8 13 00 00 10 53 65 74  ins..........Set
  0000C000: 4D 69 78 42 69 6E 56 6F 6C 75 6D 65 73 F3 F2 F1  MixBinVolumes...
  0000C010: 0B 14 03 00 FD 13 00 00 10 53 65 74 41 6C 6C 50  .........SetAllP
  0000C020: 61 72 61 6D 65 74 65 72 73 F3 F2 F1 0B 14 03 00  arameters.......
  0000C030: FF 13 00 00 0D 53 65 74 43 6F 6E 65 41 6E 67 6C  .....SetConeAngl
  0000C040: 65 73 F2 F1 0B 14 03 00 00 14 00 00 12 53 65 74  es...........Set
  0000C050: 43 6F 6E 65 4F 72 69 65 6E 74 61 74 69 6F 6E F1  ConeOrientation.
  0000C060: 0B 14 03 00 02 14 00 00 14 53 65 74 43 6F 6E 65  .........SetCone
  0000C070: 4F 75 74 73 69 64 65 56 6F 6C 75 6D 65 F3 F2 F1  OutsideVolume...
  0000C080: 0B 14 03 00 03 14 00 00 0E 53 65 74 4D 61 78 44  .........SetMaxD
  0000C090: 69 73 74 61 6E 63 65 F1 0B 14 03 00 03 14 00 00  istance.........
  0000C0A0: 0E 53 65 74 4D 69 6E 44 69 73 74 61 6E 63 65 F1  .SetMinDistance.
  0000C0B0: 0B 14 03 00 04 14 00 00 07 53 65 74 4D 6F 64 65  .........SetMode
  0000C0C0: 0B 14 03 00 00 14 00 00 0B 53 65 74 50 6F 73 69  .........SetPosi
  0000C0D0: 74 69 6F 6E 0B 14 03 00 00 14 00 00 0B 53 65 74  tion.........Set
  0000C0E0: 56 65 6C 6F 63 69 74 79 0B 14 03 00 03 14 00 00  Velocity........
  0000C0F0: 11 53 65 74 44 69 73 74 61 6E 63 65 46 61 63 74  .SetDistanceFact
  0000C100: 6F 72 F2 F1 0B 14 03 00 03 14 00 00 10 53 65 74  or...........Set
  0000C110: 44 6F 70 70 6C 65 72 46 61 63 74 6F 72 F3 F2 F1  DopplerFactor...
  0000C120: 0B 14 03 00 03 14 00 00 10 53 65 74 52 6F 6C 6C  .........SetRoll
  0000C130: 6F 66 66 46 61 63 74 6F 72 F3 F2 F1 0B 14 03 00  offFactor.......
  0000C140: 06 14 00 00 0F 53 65 74 52 6F 6C 6C 6F 66 66 43  .....SetRolloffC
  0000C150: 75 72 76 65 0B 14 03 00 0B 14 00 00 0E 53 65 74  urve.........Set
  0000C160: 49 33 44 4C 32 53 6F 75 72 63 65 F1 0B 14 03 00  I3DL2Source.....
  0000C170: FF 13 00 00 04 50 6C 61 79 F3 F2 F1 0B 14 03 00  .....Play.......
  0000C180: 0D 14 00 00 06 50 6C 61 79 45 78 F1 0B 14 03 00  .....PlayEx.....
  0000C190: 0E 14 00 00 04 53 74 6F 70 F3 F2 F1 0B 14 03 00  .....Stop.......
  0000C1A0: 0D 14 00 00 06 53 74 6F 70 45 78 F1 0B 14 03 00  .....StopEx.....
  0000C1B0: 04 14 00 00 0D 53 65 74 50 6C 61 79 52 65 67 69  .....SetPlayRegi
  0000C1C0: 6F 6E F2 F1 0B 14 03 00 04 14 00 00 0D 53 65 74  on...........Set
  0000C1D0: 4C 6F 6F 70 52 65 67 69 6F 6E F2 F1 0B 14 03 00  LoopRegion......
  0000C1E0: 0F 14 00 00 09 47 65 74 53 74 61 74 75 73 F2 F1  .....GetStatus..
  0000C1F0: 0B 14 03 00 11 14 00 00 12 47 65 74 43 75 72 72  .........GetCurr
  0000C200: 65 6E 74 50 6F 73 69 74 69 6F 6E F1 0B 14 03 00  entPosition.....
  0000C210: E3 13 00 00 12 53 65 74 43 75 72 72 65 6E 74 50  .....SetCurrentP
  0000C220: 6F 73 69 74 69 6F 6E F1 0B 14 03 00 13 14 00 00  osition.........
  0000C230: 0D 53 65 74 42 75 66 66 65 72 44 61 74 61 F2 F1  .SetBufferData..
  0000C240: 0B 14 03 00 15 14 00 00 04 4C 6F 63 6B F3 F2 F1  .........Lock...
  0000C250: 0B 14 03 00 17 14 00 00 06 55 6E 6C 6F 63 6B F1  .........Unlock.
  0000C260: 0B 14 03 00 0E 14 00 00 07 52 65 73 74 6F 72 65  .........Restore
  0000C270: 0B 14 03 00 1C 14 00 00 18 53 65 74 4E 6F 74 69  .........SetNoti
  0000C280: 66 69 63 61 74 69 6F 6E 50 6F 73 69 74 69 6F 6E  ficationPosition
  0000C290: 73 F3 F2 F1 2A 00 05 10 2A 00 00 00 1D 14 00 00  s...*...*.......
  0000C2A0: 00 00 00 00 00 00 00 00 01 00 12 49 44 69 72 65  ...........IDire
  0000C2B0: 63 74 53 6F 75 6E 64 42 75 66 66 65 72 F3 F2 F1  ctSoundBuffer...
  0000C2C0: AE 00 03 12 05 14 03 00 21 00 00 00 00 00 0A 77  ........!......w
  0000C2D0: 46 6F 72 6D 61 74 54 61 67 F3 F2 F1 05 14 03 00  FormatTag.......
  0000C2E0: 21 00 00 00 02 00 09 6E 43 68 61 6E 6E 65 6C 73  !......nChannels
  0000C2F0: 05 14 03 00 22 00 00 00 04 00 0E 6E 53 61 6D 70  ...."......nSamp
  0000C300: 6C 65 73 50 65 72 53 65 63 F3 F2 F1 05 14 03 00  lesPerSec.......
  0000C310: 22 00 00 00 08 00 0F 6E 41 76 67 42 79 74 65 73  "......nAvgBytes
  0000C320: 50 65 72 53 65 63 F2 F1 05 14 03 00 21 00 00 00  PerSec......!...
  0000C330: 0C 00 0B 6E 42 6C 6F 63 6B 41 6C 69 67 6E F2 F1  ...nBlockAlign..
  0000C340: 05 14 03 00 21 00 00 00 0E 00 0E 77 42 69 74 73  ....!......wBits
  0000C350: 50 65 72 53 61 6D 70 6C 65 F3 F2 F1 05 14 03 00  PerSample.......
  0000C360: 21 00 00 00 10 00 06 63 62 53 69 7A 65 F3 F2 F1  !......cbSize...
  0000C370: 22 00 05 10 07 00 00 00 1F 14 00 00 00 00 00 00  "...............
  0000C380: 00 00 00 00 12 00 0D 74 57 41 56 45 46 4F 52 4D  .......tWAVEFORM
  0000C390: 41 54 45 58 96 00 03 12 05 14 03 00 22 00 00 00  ATEX........"...
  0000C3A0: 00 00 05 64 77 4C 46 4F 05 14 03 00 22 00 00 00  ...dwLFO...."...
  0000C3B0: 04 00 07 64 77 44 65 6C 61 79 F2 F1 05 14 03 00  ...dwDelay......
  0000C3C0: 22 00 00 00 08 00 07 64 77 44 65 6C 74 61 F2 F1  "......dwDelta..
  0000C3D0: 05 14 03 00 12 00 00 00 0C 00 10 6C 50 69 74 63  ...........lPitc
  0000C3E0: 68 4D 6F 64 75 6C 61 74 69 6F 6E F1 05 14 03 00  hModulation.....
  0000C3F0: 12 00 00 00 10 00 12 6C 46 69 6C 74 65 72 43 75  .......lFilterCu
  0000C400: 74 4F 66 66 52 61 6E 67 65 F3 F2 F1 05 14 03 00  tOffRange.......
  0000C410: 12 00 00 00 14 00 14 6C 41 6D 70 6C 69 74 75 64  .......lAmplitud
  0000C420: 65 4D 6F 64 75 6C 61 74 69 6F 6E F1 22 00 05 10  eModulation."...
  0000C430: 06 00 00 00 21 14 00 00 00 00 00 00 00 00 00 00  ....!...........
  0000C440: 18 00 0A 5F 44 53 4C 46 4F 44 45 53 43 F3 F2 F1  ..._DSLFODESC...
  0000C450: CE 00 03 12 05 14 03 00 22 00 00 00 00 00 04 64  ........"......d
  0000C460: 77 45 47 F1 05 14 03 00 22 00 00 00 04 00 06 64  wEG....."......d
  0000C470: 77 4D 6F 64 65 F3 F2 F1 05 14 03 00 22 00 00 00  wMode......."...
  0000C480: 08 00 07 64 77 44 65 6C 61 79 F2 F1 05 14 03 00  ...dwDelay......
  0000C490: 22 00 00 00 0C 00 08 64 77 41 74 74 61 63 6B F1  "......dwAttack.
  0000C4A0: 05 14 03 00 22 00 00 00 10 00 06 64 77 48 6F 6C  ...."......dwHol
  0000C4B0: 64 F3 F2 F1 05 14 03 00 22 00 00 00 14 00 07 64  d......."......d
  0000C4C0: 77 44 65 63 61 79 F2 F1 05 14 03 00 22 00 00 00  wDecay......"...
  0000C4D0: 18 00 09 64 77 52 65 6C 65 61 73 65 05 14 03 00  ...dwRelease....
  0000C4E0: 22 00 00 00 1C 00 09 64 77 53 75 73 74 61 69 6E  "......dwSustain
  0000C4F0: 05 14 03 00 12 00 00 00 20 00 0B 6C 50 69 74 63  ........ ..lPitc
  0000C500: 68 53 63 61 6C 65 F2 F1 05 14 03 00 12 00 00 00  hScale..........
  0000C510: 24 00 0D 6C 46 69 6C 74 65 72 43 75 74 4F 66 66  $..lFilterCutOff
  0000C520: 26 00 05 10 0A 00 00 00 23 14 00 00 00 00 00 00  &.......#.......
  0000C530: 00 00 00 00 28 00 0F 5F 44 53 45 4E 56 45 4C 4F  ....(.._DSENVELO
  0000C540: 50 45 44 45 53 43 F2 F1 0E 00 03 10 22 00 00 00  PEDESC......"...
  0000C550: 11 00 00 00 10 00 00 F1 4E 00 03 12 05 14 03 00  ........N.......
  0000C560: 22 00 00 00 00 00 06 64 77 4D 6F 64 65 F3 F2 F1  "......dwMode...
  0000C570: 05 14 03 00 22 00 00 00 04 00 0E 64 77 51 43 6F  ...."......dwQCo
  0000C580: 65 66 66 69 63 69 65 6E 74 F3 F2 F1 05 14 03 00  efficient.......
  0000C590: 25 14 00 00 08 00 0F 61 64 77 43 6F 65 66 66 69  %......adwCoeffi
  0000C5A0: 63 69 65 6E 74 73 F2 F1 22 00 05 10 03 00 00 00  cients..".......
  0000C5B0: 26 14 00 00 00 00 00 00 00 00 00 00 18 00 0D 5F  &.............._
  0000C5C0: 44 53 46 49 4C 54 45 52 44 45 53 43 2A 00 05 10  DSFILTERDESC*...
  0000C5D0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000C5E0: 00 00 13 5F 44 53 4D 49 58 42 49 4E 56 4F 4C 55  ..._DSMIXBINVOLU
  0000C5F0: 4D 45 50 41 49 52 F2 F1 0A 00 01 10 28 14 00 00  MEPAIR......(...
  0000C600: 01 00 F2 F1 0A 00 02 10 29 14 00 00 0A 00 00 00  ........).......
  0000C610: 3A 00 03 12 05 14 03 00 22 00 00 00 00 00 0D 64  :......."......d
  0000C620: 77 4D 69 78 42 69 6E 43 6F 75 6E 74 05 14 03 00  wMixBinCount....
  0000C630: 2A 14 00 00 04 00 13 6C 70 4D 69 78 42 69 6E 56  *......lpMixBinV
  0000C640: 6F 6C 75 6D 65 50 61 69 72 73 F2 F1 22 00 05 10  olumePairs.."...
  0000C650: 02 00 00 00 2B 14 00 00 00 00 00 00 00 00 00 00  ....+...........
  0000C660: 08 00 0A 5F 44 53 4D 49 58 42 49 4E 53 F3 F2 F1  ..._DSMIXBINS...
  0000C670: 0A 00 02 10 F9 13 00 00 0A 04 00 00 1A 00 09 10  ................
  0000C680: 03 00 00 00 F9 13 00 00 2D 14 00 00 0B 00 00 00  ........-.......
  0000C690: 09 10 00 00 00 00 00 00 62 01 03 12 05 14 03 00  ........b.......
  0000C6A0: 22 00 00 00 00 00 06 64 77 53 69 7A 65 F3 F2 F1  "......dwSize...
  0000C6B0: 05 14 03 00 B0 12 00 00 04 00 09 76 50 6F 73 69  ...........vPosi
  0000C6C0: 74 69 6F 6E 05 14 03 00 B0 12 00 00 10 00 09 76  tion...........v
  0000C6D0: 56 65 6C 6F 63 69 74 79 05 14 03 00 22 00 00 00  Velocity...."...
  0000C6E0: 1C 00 11 64 77 49 6E 73 69 64 65 43 6F 6E 65 41  ...dwInsideConeA
  0000C6F0: 6E 67 6C 65 05 14 03 00 22 00 00 00 20 00 12 64  ngle...."... ..d
  0000C700: 77 4F 75 74 73 69 64 65 43 6F 6E 65 41 6E 67 6C  wOutsideConeAngl
  0000C710: 65 F3 F2 F1 05 14 03 00 B0 12 00 00 24 00 10 76  e...........$..v
  0000C720: 43 6F 6E 65 4F 72 69 65 6E 74 61 74 69 6F 6E F1  ConeOrientation.
  0000C730: 05 14 03 00 12 00 00 00 30 00 12 6C 43 6F 6E 65  ........0..lCone
  0000C740: 4F 75 74 73 69 64 65 56 6F 6C 75 6D 65 F3 F2 F1  OutsideVolume...
  0000C750: 05 14 03 00 40 00 00 00 34 00 0D 66 6C 4D 69 6E  ....@...4..flMin
  0000C760: 44 69 73 74 61 6E 63 65 05 14 03 00 40 00 00 00  Distance....@...
  0000C770: 38 00 0D 66 6C 4D 61 78 44 69 73 74 61 6E 63 65  8..flMaxDistance
  0000C780: 05 14 03 00 22 00 00 00 3C 00 06 64 77 4D 6F 64  ...."...<..dwMod
  0000C790: 65 F3 F2 F1 05 14 03 00 40 00 00 00 40 00 10 66  e.......@...@..f
  0000C7A0: 6C 44 69 73 74 61 6E 63 65 46 61 63 74 6F 72 F1  lDistanceFactor.
  0000C7B0: 05 14 03 00 40 00 00 00 44 00 0F 66 6C 52 6F 6C  ....@...D..flRol
  0000C7C0: 6C 6F 66 66 46 61 63 74 6F 72 F2 F1 05 14 03 00  loffFactor......
  0000C7D0: 40 00 00 00 48 00 0F 66 6C 44 6F 70 70 6C 65 72  @...H..flDoppler
  0000C7E0: 46 61 63 74 6F 72 F2 F1 0B 14 03 01 2E 14 00 00  Factor..........
  0000C7F0: 0B 5F 44 53 33 44 42 55 46 46 45 52 22 00 05 10  ._DS3DBUFFER"...
  0000C800: 0E 00 02 00 2F 14 00 00 00 00 00 00 00 00 00 00  ..../...........
  0000C810: 4C 00 0B 5F 44 53 33 44 42 55 46 46 45 52 F2 F1  L.._DS3DBUFFER..
  0000C820: 2A 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  *...............
  0000C830: 00 00 00 00 00 00 13 5F 44 53 49 33 44 4C 32 4F  ......._DSI3DL2O
  0000C840: 42 53 54 52 55 43 54 49 4F 4E F2 F1 26 00 05 10  BSTRUCTION..&...
  0000C850: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000C860: 00 00 11 5F 44 53 49 33 44 4C 32 4F 43 43 4C 55  ..._DSI3DL2OCCLU
  0000C870: 53 49 4F 4E 9A 00 03 12 05 14 03 00 12 00 00 00  SION............
  0000C880: 00 00 07 6C 44 69 72 65 63 74 F2 F1 05 14 03 00  ...lDirect......
  0000C890: 12 00 00 00 04 00 09 6C 44 69 72 65 63 74 48 46  .......lDirectHF
  0000C8A0: 05 14 03 00 12 00 00 00 08 00 05 6C 52 6F 6F 6D  ...........lRoom
  0000C8B0: 05 14 03 00 12 00 00 00 0C 00 07 6C 52 6F 6F 6D  ...........lRoom
  0000C8C0: 48 46 F2 F1 05 14 03 00 40 00 00 00 10 00 13 66  HF......@......f
  0000C8D0: 6C 52 6F 6F 6D 52 6F 6C 6C 6F 66 66 46 61 63 74  lRoomRolloffFact
  0000C8E0: 6F 72 F2 F1 05 14 03 00 31 14 00 00 14 00 0B 4F  or......1......O
  0000C8F0: 62 73 74 72 75 63 74 69 6F 6E F2 F1 05 14 03 00  bstruction......
  0000C900: 32 14 00 00 1C 00 09 4F 63 63 6C 75 73 69 6F 6E  2......Occlusion
  0000C910: 26 00 05 10 07 00 00 00 33 14 00 00 00 00 00 00  &.......3.......
  0000C920: 00 00 00 00 24 00 0E 5F 44 53 49 33 44 4C 32 42  ....$.._DSI3DL2B
  0000C930: 55 46 46 45 52 F3 F2 F1 2E 00 03 12 05 14 03 00  UFFER...........
  0000C940: 22 00 00 00 00 00 08 64 77 4F 66 66 73 65 74 F1  "......dwOffset.
  0000C950: 05 14 03 00 03 04 00 00 04 00 0C 68 45 76 65 6E  ...........hEven
  0000C960: 74 4E 6F 74 69 66 79 F1 2A 00 05 10 02 00 00 00  tNotify.*.......
  0000C970: 35 14 00 00 00 00 00 00 00 00 00 00 08 00 12 5F  5.............._
  0000C980: 44 53 42 50 4F 53 49 54 49 4F 4E 4E 4F 54 49 46  DSBPOSITIONNOTIF
  0000C990: 59 F3 F2 F1 0A 00 02 10 7D 13 00 00 0A 04 00 00  Y.......}.......
  0000C9A0: 22 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  "...............
  0000C9B0: 00 00 00 00 00 00 0C 58 4D 65 64 69 61 4F 62 6A  .......XMediaObj
  0000C9C0: 65 63 74 F1 1A 00 09 10 22 00 00 00 7D 13 00 00  ect....."...}...
  0000C9D0: 37 14 00 00 07 00 00 00 09 10 00 00 00 00 00 00  7...............
  0000C9E0: 22 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  "...............
  0000C9F0: 00 00 00 00 00 00 0B 5F 58 4D 45 44 49 41 49 4E  ......._XMEDIAIN
  0000CA00: 46 4F F2 F1 0A 00 02 10 3A 14 00 00 0A 00 00 00  FO......:.......
  0000CA10: 0A 00 01 12 01 00 00 00 3B 14 00 00 1A 00 09 10  ........;.......
  0000CA20: 12 00 00 00 7D 13 00 00 37 14 00 00 07 00 01 00  ....}...7.......
  0000CA30: 3C 14 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  <...............
  0000CA40: 7D 13 00 00 37 14 00 00 07 00 01 00 82 13 00 00  }...7...........
  0000CA50: 00 00 00 00 22 00 05 10 00 00 80 00 00 00 00 00  ...."...........
  0000CA60: 00 00 00 00 00 00 00 00 00 00 0D 5F 58 4D 45 44  ..........._XMED
  0000CA70: 49 41 50 41 43 4B 45 54 0A 00 01 10 3F 14 00 00  IAPACKET....?...
  0000CA80: 01 00 F2 F1 0A 00 02 10 40 14 00 00 0A 00 00 00  ........@.......
  0000CA90: 0E 00 01 12 02 00 00 00 41 14 00 00 41 14 00 00  ........A...A...
  0000CAA0: 1A 00 09 10 12 00 00 00 7D 13 00 00 37 14 00 00  ........}...7...
  0000CAB0: 07 00 02 00 42 14 00 00 00 00 00 00 1A 00 09 10  ....B...........
  0000CAC0: 12 00 00 00 7D 13 00 00 37 14 00 00 07 00 00 00  ....}...7.......
  0000CAD0: 09 10 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000CAE0: 7D 13 00 00 37 14 00 00 07 00 02 00 69 13 00 00  }...7.......i...
  0000CAF0: 00 00 00 00 1A 00 09 10 12 00 00 00 7D 13 00 00  ............}...
  0000CB00: 37 14 00 00 07 00 01 00 E1 13 00 00 00 00 00 00  7...............
  0000CB10: 1A 00 09 10 12 00 00 00 7D 13 00 00 37 14 00 00  ........}...7...
  0000CB20: 07 00 01 00 BB 10 00 00 00 00 00 00 1A 00 09 10  ................
  0000CB30: 12 00 00 00 7D 13 00 00 37 14 00 00 07 00 01 00  ....}...7.......
  0000CB40: E4 13 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000CB50: 7D 13 00 00 37 14 00 00 07 00 01 00 E9 13 00 00  }...7...........
  0000CB60: 00 00 00 00 1A 00 09 10 12 00 00 00 7D 13 00 00  ............}...
  0000CB70: 37 14 00 00 07 00 01 00 EE 13 00 00 00 00 00 00  7...............
  0000CB80: 1A 00 09 10 12 00 00 00 7D 13 00 00 37 14 00 00  ........}...7...
  0000CB90: 07 00 01 00 F3 13 00 00 00 00 00 00 1A 00 09 10  ................
  0000CBA0: 12 00 00 00 7D 13 00 00 37 14 00 00 07 00 01 00  ....}...7.......
  0000CBB0: F5 13 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000CBC0: 7D 13 00 00 37 14 00 00 07 00 01 00 F7 13 00 00  }...7...........
  0000CBD0: 00 00 00 00 1A 00 09 10 12 00 00 00 7D 13 00 00  ............}...
  0000CBE0: 37 14 00 00 07 00 02 00 FC 13 00 00 00 00 00 00  7...............
  0000CBF0: 1A 00 09 10 12 00 00 00 7D 13 00 00 37 14 00 00  ........}...7...
  0000CC00: 07 00 03 00 FE 13 00 00 00 00 00 00 1A 00 09 10  ................
  0000CC10: 12 00 00 00 7D 13 00 00 37 14 00 00 07 00 04 00  ....}...7.......
  0000CC20: 9F 13 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000CC30: 7D 13 00 00 37 14 00 00 07 00 02 00 01 14 00 00  }...7...........
  0000CC40: 00 00 00 00 1A 00 09 10 12 00 00 00 7D 13 00 00  ............}...
  0000CC50: 37 14 00 00 07 00 02 00 9B 13 00 00 00 00 00 00  7...............
  0000CC60: 1A 00 09 10 12 00 00 00 7D 13 00 00 37 14 00 00  ........}...7...
  0000CC70: 07 00 02 00 31 10 00 00 00 00 00 00 1A 00 09 10  ....1...........
  0000CC80: 12 00 00 00 7D 13 00 00 37 14 00 00 07 00 03 00  ....}...7.......
  0000CC90: 05 14 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000CCA0: 7D 13 00 00 37 14 00 00 07 00 02 00 0A 14 00 00  }...7...........
  0000CCB0: 00 00 00 00 1A 00 09 10 12 00 00 00 7D 13 00 00  ............}...
  0000CCC0: 37 14 00 00 07 00 02 00 0C 14 00 00 00 00 00 00  7...............
  0000CCD0: 0A 00 01 10 7D 13 00 00 01 00 F2 F1 0A 00 02 10  ....}...........
  0000CCE0: 57 14 00 00 2A 00 00 00 0A 00 01 12 01 00 00 00  W...*...........
  0000CCF0: 58 14 00 00 1A 00 09 10 03 00 00 00 7D 13 00 00  X...........}...
  0000CD00: 37 14 00 00 0B 00 01 00 59 14 00 00 00 00 00 00  7.......Y.......
  0000CD10: 1A 00 09 10 03 00 00 00 7D 13 00 00 37 14 00 00  ........}...7...
  0000CD20: 0B 00 00 00 09 10 00 00 00 00 00 00 12 00 06 12  ................
  0000CD30: 03 01 00 00 5A 14 00 00 03 01 00 00 5B 14 00 00  ....Z.......[...
  0000CD40: 2E 03 03 12 00 14 03 00 38 14 00 00 00 00 F2 F1  ........8.......
  0000CD50: 0B 14 17 00 39 14 00 00 06 41 64 64 52 65 66 F1  ....9....AddRef.
  0000CD60: 0B 14 17 00 39 14 00 00 07 52 65 6C 65 61 73 65  ....9....Release
  0000CD70: 0B 14 17 00 3D 14 00 00 07 47 65 74 49 6E 66 6F  ....=....GetInfo
  0000CD80: 0B 14 17 00 3E 14 00 00 09 47 65 74 53 74 61 74  ....>....GetStat
  0000CD90: 75 73 F2 F1 0B 14 17 00 43 14 00 00 07 50 72 6F  us......C....Pro
  0000CDA0: 63 65 73 73 0B 14 17 00 44 14 00 00 0D 44 69 73  cess....D....Dis
  0000CDB0: 63 6F 6E 74 69 6E 75 69 74 79 F2 F1 0B 14 17 00  continuity......
  0000CDC0: 44 14 00 00 05 46 6C 75 73 68 F2 F1 0B 14 03 00  D....Flush......
  0000CDD0: 45 14 00 00 0E 51 75 65 72 79 49 6E 74 65 72 66  E....QueryInterf
  0000CDE0: 61 63 65 F1 0B 14 03 00 46 14 00 00 09 53 65 74  ace.....F....Set
  0000CDF0: 46 6F 72 6D 61 74 F2 F1 0B 14 03 00 47 14 00 00  Format......G...
  0000CE00: 0C 53 65 74 46 72 65 71 75 65 6E 63 79 F3 F2 F1  .SetFrequency...
  0000CE10: 0B 14 03 00 48 14 00 00 09 53 65 74 56 6F 6C 75  ....H....SetVolu
  0000CE20: 6D 65 F2 F1 0B 14 03 00 48 14 00 00 08 53 65 74  me......H....Set
  0000CE30: 50 69 74 63 68 F3 F2 F1 0B 14 03 00 49 14 00 00  Pitch.......I...
  0000CE40: 06 53 65 74 4C 46 4F F1 0B 14 03 00 4A 14 00 00  .SetLFO.....J...
  0000CE50: 05 53 65 74 45 47 F2 F1 0B 14 03 00 4B 14 00 00  .SetEG......K...
  0000CE60: 09 53 65 74 46 69 6C 74 65 72 F2 F1 0B 14 03 00  .SetFilter......
  0000CE70: 47 14 00 00 0B 53 65 74 48 65 61 64 72 6F 6F 6D  G....SetHeadroom
  0000CE80: 0B 14 03 00 4C 14 00 00 0F 53 65 74 4F 75 74 70  ....L....SetOutp
  0000CE90: 75 74 42 75 66 66 65 72 0B 14 03 00 4D 14 00 00  utBuffer....M...
  0000CEA0: 0A 53 65 74 4D 69 78 42 69 6E 73 F1 0B 14 03 00  .SetMixBins.....
  0000CEB0: 4D 14 00 00 10 53 65 74 4D 69 78 42 69 6E 56 6F  M....SetMixBinVo
  0000CEC0: 6C 75 6D 65 73 F3 F2 F1 0B 14 03 00 4E 14 00 00  lumes.......N...
  0000CED0: 10 53 65 74 41 6C 6C 50 61 72 61 6D 65 74 65 72  .SetAllParameter
  0000CEE0: 73 F3 F2 F1 0B 14 03 00 4F 14 00 00 0D 53 65 74  s.......O....Set
  0000CEF0: 43 6F 6E 65 41 6E 67 6C 65 73 F2 F1 0B 14 03 00  ConeAngles......
  0000CF00: 50 14 00 00 12 53 65 74 43 6F 6E 65 4F 72 69 65  P....SetConeOrie
  0000CF10: 6E 74 61 74 69 6F 6E F1 0B 14 03 00 51 14 00 00  ntation.....Q...
  0000CF20: 14 53 65 74 43 6F 6E 65 4F 75 74 73 69 64 65 56  .SetConeOutsideV
  0000CF30: 6F 6C 75 6D 65 F3 F2 F1 0B 14 03 00 52 14 00 00  olume.......R...
  0000CF40: 0E 53 65 74 4D 61 78 44 69 73 74 61 6E 63 65 F1  .SetMaxDistance.
  0000CF50: 0B 14 03 00 52 14 00 00 0E 53 65 74 4D 69 6E 44  ....R....SetMinD
  0000CF60: 69 73 74 61 6E 63 65 F1 0B 14 03 00 53 14 00 00  istance.....S...
  0000CF70: 07 53 65 74 4D 6F 64 65 0B 14 03 00 50 14 00 00  .SetMode....P...
  0000CF80: 0B 53 65 74 50 6F 73 69 74 69 6F 6E 0B 14 03 00  .SetPosition....
  0000CF90: 50 14 00 00 0B 53 65 74 56 65 6C 6F 63 69 74 79  P....SetVelocity
  0000CFA0: 0B 14 03 00 52 14 00 00 11 53 65 74 44 69 73 74  ....R....SetDist
  0000CFB0: 61 6E 63 65 46 61 63 74 6F 72 F2 F1 0B 14 03 00  anceFactor......
  0000CFC0: 52 14 00 00 10 53 65 74 44 6F 70 70 6C 65 72 46  R....SetDopplerF
  0000CFD0: 61 63 74 6F 72 F3 F2 F1 0B 14 03 00 52 14 00 00  actor.......R...
  0000CFE0: 10 53 65 74 52 6F 6C 6C 6F 66 66 46 61 63 74 6F  .SetRolloffFacto
  0000CFF0: 72 F3 F2 F1 0B 14 03 00 54 14 00 00 0F 53 65 74  r.......T....Set
  0000D000: 52 6F 6C 6C 6F 66 66 43 75 72 76 65 0B 14 03 00  RolloffCurve....
  0000D010: 55 14 00 00 0E 53 65 74 49 33 44 4C 32 53 6F 75  U....SetI3DL2Sou
  0000D020: 72 63 65 F1 0B 14 03 00 47 14 00 00 05 50 61 75  rce.....G....Pau
  0000D030: 73 65 F2 F1 0B 14 03 00 56 14 00 00 07 50 61 75  se......V....Pau
  0000D040: 73 65 45 78 0B 14 03 00 56 14 00 00 07 46 6C 75  seEx....V....Flu
  0000D050: 73 68 45 78 07 14 02 00 5C 14 00 00 12 49 44 69  shEx....\....IDi
  0000D060: 72 65 63 74 53 6F 75 6E 64 53 74 72 65 61 6D F1  rectSoundStream.
  0000D070: 0A 00 0A 00 07 00 55 55 55 50 F2 F1 2A 00 05 10  ......UUUP..*...
  0000D080: 27 00 02 00 5D 14 00 00 00 00 00 00 5E 14 00 00  '...].......^...
  0000D090: 04 00 12 49 44 69 72 65 63 74 53 6F 75 6E 64 53  ...IDirectSoundS
  0000D0A0: 74 72 65 61 6D F3 F2 F1 1E 00 04 10 00 00 80 00  tream...........
  0000D0B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 08 53  ...............S
  0000D0C0: 77 69 7A 7A 6C 65 72 F1 0A 00 02 10 60 14 00 00  wizzler.....`...
  0000D0D0: 0A 04 00 00 1A 00 09 10 03 00 00 00 60 14 00 00  ............`...
  0000D0E0: 61 14 00 00 0B 00 03 00 FE 13 00 00 00 00 00 00  a...............
  0000D0F0: 1A 00 09 10 03 00 00 00 60 14 00 00 61 14 00 00  ........`...a...
  0000D100: 0B 00 00 00 09 10 00 00 00 00 00 00 12 00 06 12  ................
  0000D110: 03 00 00 00 62 14 00 00 03 00 00 00 63 14 00 00  ....b.......c...
  0000D120: 1A 00 09 10 22 00 00 00 60 14 00 00 61 14 00 00  ...."...`...a...
  0000D130: 0B 00 01 00 BB 10 00 00 00 00 00 00 1A 00 09 10  ................
  0000D140: 22 00 00 00 60 14 00 00 61 14 00 00 0B 00 03 00  "...`...a.......
  0000D150: FE 13 00 00 00 00 00 00 0A 00 01 12 01 00 00 00  ................
  0000D160: 22 00 00 00 1A 00 09 10 22 00 00 00 60 14 00 00  "......."...`...
  0000D170: 61 14 00 00 0B 00 01 00 67 14 00 00 00 00 00 00  a.......g.......
  0000D180: 1A 00 09 10 22 00 00 00 60 14 00 00 61 14 00 00  ...."...`...a...
  0000D190: 0B 00 01 00 67 14 00 00 00 00 00 00 1A 00 09 10  ....g...........
  0000D1A0: 22 00 00 00 60 14 00 00 61 14 00 00 0B 00 00 00  "...`...a.......
  0000D1B0: 09 10 00 00 00 00 00 00 66 02 03 12 05 14 03 00  ........f.......
  0000D1C0: 22 00 00 00 00 00 07 6D 5F 57 69 64 74 68 F2 F1  "......m_Width..
  0000D1D0: 05 14 03 00 22 00 00 00 04 00 08 6D 5F 48 65 69  ...."......m_Hei
  0000D1E0: 67 68 74 F1 05 14 03 00 22 00 00 00 08 00 07 6D  ght....."......m
  0000D1F0: 5F 44 65 70 74 68 F2 F1 05 14 03 00 22 00 00 00  _Depth......"...
  0000D200: 0C 00 07 6D 5F 4D 61 73 6B 55 F2 F1 05 14 03 00  ...m_MaskU......
  0000D210: 22 00 00 00 10 00 07 6D 5F 4D 61 73 6B 56 F2 F1  "......m_MaskV..
  0000D220: 05 14 03 00 22 00 00 00 14 00 07 6D 5F 4D 61 73  ...."......m_Mas
  0000D230: 6B 57 F2 F1 05 14 03 00 22 00 00 00 18 00 03 6D  kW......"......m
  0000D240: 5F 75 F2 F1 05 14 03 00 22 00 00 00 1C 00 03 6D  _u......"......m
  0000D250: 5F 76 F2 F1 05 14 03 00 22 00 00 00 20 00 03 6D  _v......"... ..m
  0000D260: 5F 77 F2 F1 07 14 02 00 64 14 00 00 08 53 77 69  _w......d....Swi
  0000D270: 7A 7A 6C 65 72 F3 F2 F1 0B 14 03 00 62 14 00 00  zzler.......b...
  0000D280: 04 49 6E 69 74 F3 F2 F1 0B 14 03 00 65 14 00 00  .Init.......e...
  0000D290: 08 53 77 69 7A 7A 6C 65 55 F3 F2 F1 0B 14 03 00  .SwizzleU.......
  0000D2A0: 65 14 00 00 08 53 77 69 7A 7A 6C 65 56 F3 F2 F1  e....SwizzleV...
  0000D2B0: 0B 14 03 00 65 14 00 00 08 53 77 69 7A 7A 6C 65  ....e....Swizzle
  0000D2C0: 57 F3 F2 F1 0B 14 03 00 66 14 00 00 07 53 77 69  W.......f....Swi
  0000D2D0: 7A 7A 6C 65 0B 14 03 00 68 14 00 00 0A 55 6E 73  zzle....h....Uns
  0000D2E0: 77 69 7A 7A 6C 65 55 F1 0B 14 03 00 68 14 00 00  wizzleU.....h...
  0000D2F0: 0A 55 6E 73 77 69 7A 7A 6C 65 56 F1 0B 14 03 00  .UnswizzleV.....
  0000D300: 68 14 00 00 0A 55 6E 73 77 69 7A 7A 6C 65 57 F1  h....UnswizzleW.
  0000D310: 0B 14 03 00 69 14 00 00 04 53 65 74 55 F3 F2 F1  ....i....SetU...
  0000D320: 0B 14 03 00 69 14 00 00 04 53 65 74 56 F3 F2 F1  ....i....SetV...
  0000D330: 0B 14 03 00 69 14 00 00 04 53 65 74 57 F3 F2 F1  ....i....SetW...
  0000D340: 0B 14 03 00 69 14 00 00 04 41 64 64 55 F3 F2 F1  ....i....AddU...
  0000D350: 0B 14 03 00 69 14 00 00 04 41 64 64 56 F3 F2 F1  ....i....AddV...
  0000D360: 0B 14 03 00 69 14 00 00 04 41 64 64 57 F3 F2 F1  ....i....AddW...
  0000D370: 0B 14 03 00 69 14 00 00 04 53 75 62 55 F3 F2 F1  ....i....SubU...
  0000D380: 0B 14 03 00 69 14 00 00 04 53 75 62 56 F3 F2 F1  ....i....SubV...
  0000D390: 0B 14 03 00 69 14 00 00 04 53 75 62 57 F3 F2 F1  ....i....SubW...
  0000D3A0: 0B 14 03 00 6A 14 00 00 04 49 6E 63 55 F3 F2 F1  ....j....IncU...
  0000D3B0: 0B 14 03 00 6A 14 00 00 04 49 6E 63 56 F3 F2 F1  ....j....IncV...
  0000D3C0: 0B 14 03 00 6A 14 00 00 04 49 6E 63 57 F3 F2 F1  ....j....IncW...
  0000D3D0: 0B 14 03 00 6A 14 00 00 04 44 65 63 55 F3 F2 F1  ....j....DecU...
  0000D3E0: 0B 14 03 00 6A 14 00 00 04 44 65 63 56 F3 F2 F1  ....j....DecV...
  0000D3F0: 0B 14 03 00 6A 14 00 00 04 44 65 63 57 F3 F2 F1  ....j....DecW...
  0000D400: 0B 14 03 00 6A 14 00 00 05 47 65 74 32 44 F2 F1  ....j....Get2D..
  0000D410: 0B 14 03 00 6A 14 00 00 05 47 65 74 33 44 F2 F1  ....j....Get3D..
  0000D420: 1E 00 04 10 24 00 02 00 6B 14 00 00 00 00 00 00  ....$...k.......
  0000D430: 00 00 00 00 24 00 08 53 77 69 7A 7A 6C 65 72 F1  ....$..Swizzler.
  0000D440: 1E 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  ................
  0000D450: 00 00 00 00 00 00 08 58 47 42 75 66 66 65 72 F1  .......XGBuffer.
  0000D460: 0A 00 02 10 6D 14 00 00 0A 04 00 00 1A 00 09 10  ....m...........
  0000D470: 22 00 00 00 6D 14 00 00 6E 14 00 00 07 00 00 00  "...m...n.......
  0000D480: 09 10 00 00 00 00 00 00 1A 00 09 10 03 04 00 00  ................
  0000D490: 6D 14 00 00 6E 14 00 00 07 00 00 00 09 10 00 00  m...n...........
  0000D4A0: 00 00 00 00 1A 00 09 10 22 00 00 00 6D 14 00 00  ........"...m...
  0000D4B0: 6E 14 00 00 07 00 00 00 09 10 00 00 00 00 00 00  n...............
  0000D4C0: 8A 00 03 12 05 14 03 00 22 00 00 00 00 00 08 72  ........"......r
  0000D4D0: 65 66 43 6F 75 6E 74 F1 05 14 03 00 03 04 00 00  efCount.........
  0000D4E0: 04 00 05 70 44 61 74 61 05 14 03 00 22 00 00 00  ...pData...."...
  0000D4F0: 08 00 04 73 69 7A 65 F1 0B 14 03 00 6F 14 00 00  ...size.....o...
  0000D500: 06 41 64 64 52 65 66 F1 0B 14 03 00 6F 14 00 00  .AddRef.....o...
  0000D510: 07 52 65 6C 65 61 73 65 0B 14 03 00 70 14 00 00  .Release....p...
  0000D520: 10 47 65 74 42 75 66 66 65 72 50 6F 69 6E 74 65  .GetBufferPointe
  0000D530: 72 F3 F2 F1 0B 14 03 00 71 14 00 00 0D 47 65 74  r.......q....Get
  0000D540: 42 75 66 66 65 72 53 69 7A 65 F2 F1 1E 00 05 10  BufferSize......
  0000D550: 07 00 00 00 72 14 00 00 00 00 00 00 00 00 00 00  ....r...........
  0000D560: 0C 00 08 58 47 42 75 66 66 65 72 F1 0A 00 01 10  ...XGBuffer.....
  0000D570: 70 00 00 00 01 00 F2 F1 0A 00 02 10 74 14 00 00  p...........t...
  0000D580: 0A 00 00 00 0A 00 02 10 B5 11 00 00 0A 00 00 00  ................
  0000D590: 32 00 03 12 00 14 03 00 F3 11 00 00 00 00 F2 F1  2...............
  0000D5A0: 05 14 03 00 22 00 00 00 0C 00 06 46 6F 72 6D 61  ...."......Forma
  0000D5B0: 74 F3 F2 F1 05 14 03 00 22 00 00 00 10 00 04 53  t......."......S
  0000D5C0: 69 7A 65 F1 26 00 05 10 03 00 00 00 77 14 00 00  ize.&.......w...
  0000D5D0: 00 00 00 00 00 00 00 00 14 00 11 44 33 44 50 69  ...........D3DPi
  0000D5E0: 78 65 6C 43 6F 6E 74 61 69 6E 65 72 0E 00 03 10  xelContainer....
  0000D5F0: 20 00 00 00 11 00 00 00 00 08 00 F1 22 00 05 10   ..........."...
  0000D600: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000D610: 00 00 0A 58 50 52 5F 48 45 41 44 45 52 F3 F2 F1  ...XPR_HEADER...
  0000D620: 46 00 03 12 05 14 03 00 22 00 00 00 00 00 07 64  F......."......d
  0000D630: 77 4D 61 67 69 63 F2 F1 05 14 03 00 22 00 00 00  wMagic......"...
  0000D640: 04 00 0B 64 77 54 6F 74 61 6C 53 69 7A 65 F2 F1  ...dwTotalSize..
  0000D650: 05 14 03 00 22 00 00 00 08 00 0C 64 77 48 65 61  ...."......dwHea
  0000D660: 64 65 72 53 69 7A 65 F1 22 00 05 10 03 00 00 00  derSize.".......
  0000D670: 7B 14 00 00 00 00 00 00 00 00 00 00 0C 00 0A 58  {..............X
  0000D680: 50 52 5F 48 45 41 44 45 52 F3 F2 F1 0E 00 03 10  PR_HEADER.......
  0000D690: 70 00 00 00 11 00 00 00 00 01 00 F1 0E 00 01 12  p...............
  0000D6A0: 02 00 00 00 02 10 00 00 02 10 00 00 0E 00 08 10  ................
  0000D6B0: 74 00 00 00 07 00 02 00 7E 14 00 00 0E 00 08 10  t.......~.......
  0000D6C0: 22 00 00 00 07 00 00 00 09 10 00 00 0E 00 08 10  "...............
  0000D6D0: 75 00 00 00 07 00 00 00 09 10 00 00 0E 00 08 10  u...............
  0000D6E0: 03 00 00 00 07 00 00 00 09 10 00 00 0E 00 08 10  ................
  0000D6F0: 03 00 00 00 07 00 02 00 B9 10 00 00 0E 00 08 10  ................
  0000D700: 03 00 00 00 07 00 03 00 CA 10 00 00 0E 00 08 10  ................
  0000D710: 03 00 00 00 07 00 02 00 B7 10 00 00 0E 00 08 10  ................
  0000D720: 03 00 00 00 07 00 03 00 CC 10 00 00 0E 00 01 12  ................
  0000D730: 02 00 00 00 69 12 00 00 68 12 00 00 0E 00 08 10  ....i...h.......
  0000D740: 03 00 00 00 07 00 02 00 87 14 00 00 0E 00 01 12  ................
  0000D750: 02 00 00 00 62 10 00 00 75 00 00 00 0E 00 08 10  ....b...u.......
  0000D760: 03 00 00 00 07 00 02 00 89 14 00 00 0E 00 01 12  ................
  0000D770: 02 00 00 00 67 10 00 00 75 00 00 00 0E 00 08 10  ....g...u.......
  0000D780: 03 00 00 00 07 00 02 00 8B 14 00 00 12 00 01 12  ................
  0000D790: 03 00 00 00 6C 10 00 00 EA 11 00 00 75 00 00 00  ....l.......u...
  0000D7A0: 0E 00 08 10 03 00 00 00 07 00 03 00 8D 14 00 00  ................
  0000D7B0: 0A 00 01 12 01 00 00 00 71 10 00 00 0E 00 08 10  ........q.......
  0000D7C0: 03 00 00 00 07 00 01 00 8F 14 00 00 1A 00 01 12  ................
  0000D7D0: 05 00 00 00 76 10 00 00 75 00 00 00 75 00 00 00  ....v...u...u...
  0000D7E0: F4 11 00 00 22 00 00 00 0E 00 08 10 03 00 00 00  ...."...........
  0000D7F0: 07 00 05 00 91 14 00 00 0A 00 01 12 01 00 00 00  ................
  0000D800: 76 10 00 00 0E 00 08 10 03 00 00 00 07 00 01 00  v...............
  0000D810: 93 14 00 00 0A 00 01 12 01 00 00 00 25 11 00 00  ............%...
  0000D820: 0E 00 08 10 03 00 00 00 07 00 01 00 95 14 00 00  ................
  0000D830: 0A 00 01 12 01 00 00 00 51 10 00 00 0E 00 08 10  ........Q.......
  0000D840: 03 00 00 00 07 00 01 00 97 14 00 00 0A 00 01 12  ................
  0000D850: 01 00 00 00 D9 11 00 00 0E 00 08 10 03 00 00 00  ................
  0000D860: 07 00 01 00 99 14 00 00 0A 00 01 12 01 00 00 00  ................
  0000D870: 40 00 00 00 0E 00 08 10 40 00 00 00 07 00 01 00  @.......@.......
  0000D880: 9B 14 00 00 0E 00 08 10 70 00 00 00 07 00 01 00  ........p.......
  0000D890: BB 10 00 00 12 00 01 12 03 00 00 00 69 12 00 00  ............i...
  0000D8A0: 75 14 00 00 74 00 00 00 0E 00 08 10 12 00 00 00  u...t...........
  0000D8B0: 07 00 03 00 9E 14 00 00 A2 00 03 12 05 14 03 00  ................
  0000D8C0: 03 04 00 00 00 00 08 70 76 42 75 66 66 65 72 F1  .......pvBuffer.
  0000D8D0: 05 14 03 00 22 00 00 00 04 00 09 64 77 4D 61 78  ...."......dwMax
  0000D8E0: 53 69 7A 65 05 14 03 00 22 04 00 00 08 00 10 70  Size...."......p
  0000D8F0: 64 77 43 6F 6D 70 6C 65 74 65 64 53 69 7A 65 F1  dwCompletedSize.
  0000D900: 05 14 03 00 22 04 00 00 0C 00 09 70 64 77 53 74  ...."......pdwSt
  0000D910: 61 74 75 73 05 14 03 00 03 04 00 00 10 00 10 68  atus...........h
  0000D920: 43 6F 6D 70 6C 65 74 69 6F 6E 45 76 65 6E 74 F1  CompletionEvent.
  0000D930: 05 14 03 00 03 04 00 00 10 00 08 70 43 6F 6E 74  ...........pCont
  0000D940: 65 78 74 F1 05 14 03 00 13 04 00 00 14 00 0C 70  ext............p
  0000D950: 72 74 54 69 6D 65 73 74 61 6D 70 F1 22 00 05 10  rtTimestamp."...
  0000D960: 07 00 00 00 A0 14 00 00 00 00 00 00 00 00 00 00  ................
  0000D970: 18 00 0D 5F 58 4D 45 44 49 41 50 41 43 4B 45 54  ..._XMEDIAPACKET
  0000D980: 32 00 03 12 05 14 03 00 03 04 00 00 00 00 10 68  2..............h
  0000D990: 43 6F 6D 70 6C 65 74 69 6F 6E 45 76 65 6E 74 F1  CompletionEvent.
  0000D9A0: 05 14 03 00 03 04 00 00 00 00 08 70 43 6F 6E 74  ...........pCont
  0000D9B0: 65 78 74 F1 26 00 06 10 02 00 08 00 A2 14 00 00  ext.&...........
  0000D9C0: 04 00 18 5F 58 4D 45 44 49 41 50 41 43 4B 45 54  ..._XMEDIAPACKET
  0000D9D0: 3A 3A 5F 5F 75 6E 6E 61 6D 65 64 F1 0A 00 01 10  ::__unnamed.....
  0000D9E0: 75 00 00 00 01 00 F2 F1 0E 00 03 10 A4 14 00 00  u...............
  0000D9F0: 11 00 00 00 08 00 00 F1 0E 00 03 10 A5 14 00 00  ................
  0000DA00: 11 00 00 00 58 00 00 F1 0A 00 02 10 EC 13 00 00  ....X...........
  0000DA10: 0A 00 00 00 D2 00 03 12 05 14 03 00 03 04 00 00  ................
  0000DA20: 00 00 0E 6C 70 76 43 6F 64 65 53 65 67 6D 65 6E  ...lpvCodeSegmen
  0000DA30: 74 F3 F2 F1 05 14 03 00 22 00 00 00 04 00 0A 64  t......."......d
  0000DA40: 77 43 6F 64 65 53 69 7A 65 F3 F2 F1 05 14 03 00  wCodeSize.......
  0000DA50: 03 04 00 00 08 00 0F 6C 70 76 53 74 61 74 65 53  .......lpvStateS
  0000DA60: 65 67 6D 65 6E 74 F2 F1 05 14 03 00 22 00 00 00  egment......"...
  0000DA70: 0C 00 0B 64 77 53 74 61 74 65 53 69 7A 65 F2 F1  ...dwStateSize..
  0000DA80: 05 14 03 00 03 04 00 00 10 00 11 6C 70 76 59 4D  ...........lpvYM
  0000DA90: 65 6D 6F 72 79 53 65 67 6D 65 6E 74 05 14 03 00  emorySegment....
  0000DAA0: 22 00 00 00 14 00 0D 64 77 59 4D 65 6D 6F 72 79  "......dwYMemory
  0000DAB0: 53 69 7A 65 05 14 03 00 03 04 00 00 18 00 11 6C  Size...........l
  0000DAC0: 70 76 53 63 72 61 74 63 68 53 65 67 6D 65 6E 74  pvScratchSegment
  0000DAD0: 05 14 03 00 22 00 00 00 1C 00 0D 64 77 53 63 72  ...."......dwScr
  0000DAE0: 61 74 63 68 53 69 7A 65 22 00 05 10 08 00 00 00  atchSize".......
  0000DAF0: A8 14 00 00 00 00 00 00 00 00 00 00 20 00 0C 5F  ............ .._
  0000DB00: 44 53 45 46 46 45 43 54 4D 41 50 F1 0A 00 02 10  DSEFFECTMAP.....
  0000DB10: 89 13 00 00 0A 00 00 00 0A 00 02 10 DF 13 00 00  ................
  0000DB20: 0A 00 00 00 0A 00 02 10 C0 13 00 00 0A 00 00 00  ................
  0000DB30: 36 01 03 12 03 04 03 00 00 00 21 50 53 5F 49 4E  6.........!PS_IN
  0000DB40: 50 55 54 4D 41 50 50 49 4E 47 5F 55 4E 53 49 47  PUTMAPPING_UNSIG
  0000DB50: 4E 45 44 5F 49 44 45 4E 54 49 54 59 03 04 03 00  NED_IDENTITY....
  0000DB60: 20 00 1F 50 53 5F 49 4E 50 55 54 4D 41 50 50 49   ..PS_INPUTMAPPI
  0000DB70: 4E 47 5F 55 4E 53 49 47 4E 45 44 5F 49 4E 56 45  NG_UNSIGNED_INVE
  0000DB80: 52 54 F2 F1 03 04 03 00 40 00 1D 50 53 5F 49 4E  RT......@..PS_IN
  0000DB90: 50 55 54 4D 41 50 50 49 4E 47 5F 45 58 50 41 4E  PUTMAPPING_EXPAN
  0000DBA0: 44 5F 4E 4F 52 4D 41 4C 03 04 03 00 60 00 1D 50  D_NORMAL....`..P
  0000DBB0: 53 5F 49 4E 50 55 54 4D 41 50 50 49 4E 47 5F 45  S_INPUTMAPPING_E
  0000DBC0: 58 50 41 4E 44 5F 4E 45 47 41 54 45 03 04 03 00  XPAND_NEGATE....
  0000DBD0: 80 00 1F 50 53 5F 49 4E 50 55 54 4D 41 50 50 49  ...PS_INPUTMAPPI
  0000DBE0: 4E 47 5F 48 41 4C 46 42 49 41 53 5F 4E 4F 52 4D  NG_HALFBIAS_NORM
  0000DBF0: 41 4C F2 F1 03 04 03 00 A0 00 1F 50 53 5F 49 4E  AL.........PS_IN
  0000DC00: 50 55 54 4D 41 50 50 49 4E 47 5F 48 41 4C 46 42  PUTMAPPING_HALFB
  0000DC10: 49 41 53 5F 4E 45 47 41 54 45 F2 F1 03 04 03 00  IAS_NEGATE......
  0000DC20: C0 00 1F 50 53 5F 49 4E 50 55 54 4D 41 50 50 49  ...PS_INPUTMAPPI
  0000DC30: 4E 47 5F 53 49 47 4E 45 44 5F 49 44 45 4E 54 49  NG_SIGNED_IDENTI
  0000DC40: 54 59 F2 F1 03 04 03 00 E0 00 1D 50 53 5F 49 4E  TY.........PS_IN
  0000DC50: 50 55 54 4D 41 50 50 49 4E 47 5F 53 49 47 4E 45  PUTMAPPING_SIGNE
  0000DC60: 44 5F 4E 45 47 41 54 45 1E 00 07 10 08 00 00 00  D_NEGATE........
  0000DC70: 74 00 00 00 AD 14 00 00 0F 50 53 5F 49 4E 50 55  t........PS_INPU
  0000DC80: 54 4D 41 50 50 49 4E 47 2A 00 03 12 05 14 03 00  TMAPPING*.......
  0000DC90: 22 00 00 00 00 00 08 64 77 4D 69 78 42 69 6E F1  "......dwMixBin.
  0000DCA0: 05 14 03 00 12 00 00 00 04 00 07 6C 56 6F 6C 75  ...........lVolu
  0000DCB0: 6D 65 F2 F1 2A 00 05 10 02 00 00 00 AF 14 00 00  me..*...........
  0000DCC0: 00 00 00 00 00 00 00 00 08 00 13 5F 44 53 4D 49  ..........._DSMI
  0000DCD0: 58 42 49 4E 56 4F 4C 55 4D 45 50 41 49 52 F2 F1  XBINVOLUMEPAIR..
  0000DCE0: 0A 00 02 10 71 13 00 00 0A 00 00 00 0A 00 02 10  ....q...........
  0000DCF0: 97 13 00 00 0A 00 00 00 0E 00 03 10 22 00 00 00  ............"...
  0000DD00: 11 00 00 00 80 00 00 F1 0E 00 03 10 B3 14 00 00  ................
  0000DD10: 11 00 00 00 00 02 00 F1 0A 00 02 10 40 14 00 00  ............@...
  0000DD20: 0A 00 00 00 2A 00 03 12 05 14 03 00 12 00 00 00  ....*...........
  0000DD30: 00 00 08 6C 48 46 4C 65 76 65 6C F1 05 14 03 00  ...lHFLevel.....
  0000DD40: 40 00 00 00 04 00 09 66 6C 4C 46 52 61 74 69 6F  @......flLFRatio
  0000DD50: 2A 00 05 10 02 00 00 00 B6 14 00 00 00 00 00 00  *...............
  0000DD60: 00 00 00 00 08 00 13 5F 44 53 49 33 44 4C 32 4F  ......._DSI3DL2O
  0000DD70: 42 53 54 52 55 43 54 49 4F 4E F2 F1 0A 00 02 10  BSTRUCTION......
  0000DD80: 08 14 00 00 0A 00 00 00 1E 03 03 12 03 04 03 00  ................
  0000DD90: 01 00 0E 44 33 44 54 4F 50 5F 44 49 53 41 42 4C  ...D3DTOP_DISABL
  0000DDA0: 45 F3 F2 F1 03 04 03 00 02 00 11 44 33 44 54 4F  E..........D3DTO
  0000DDB0: 50 5F 53 45 4C 45 43 54 41 52 47 31 03 04 03 00  P_SELECTARG1....
  0000DDC0: 03 00 11 44 33 44 54 4F 50 5F 53 45 4C 45 43 54  ...D3DTOP_SELECT
  0000DDD0: 41 52 47 32 03 04 03 00 04 00 0F 44 33 44 54 4F  ARG2.......D3DTO
  0000DDE0: 50 5F 4D 4F 44 55 4C 41 54 45 F2 F1 03 04 03 00  P_MODULATE......
  0000DDF0: 05 00 11 44 33 44 54 4F 50 5F 4D 4F 44 55 4C 41  ...D3DTOP_MODULA
  0000DE00: 54 45 32 58 03 04 03 00 06 00 11 44 33 44 54 4F  TE2X.......D3DTO
  0000DE10: 50 5F 4D 4F 44 55 4C 41 54 45 34 58 03 04 03 00  P_MODULATE4X....
  0000DE20: 07 00 0A 44 33 44 54 4F 50 5F 41 44 44 F3 F2 F1  ...D3DTOP_ADD...
  0000DE30: 03 04 03 00 08 00 10 44 33 44 54 4F 50 5F 41 44  .......D3DTOP_AD
  0000DE40: 44 53 49 47 4E 45 44 F1 03 04 03 00 09 00 12 44  DSIGNED........D
  0000DE50: 33 44 54 4F 50 5F 41 44 44 53 49 47 4E 45 44 32  3DTOP_ADDSIGNED2
  0000DE60: 58 F3 F2 F1 03 04 03 00 0A 00 0F 44 33 44 54 4F  X..........D3DTO
  0000DE70: 50 5F 53 55 42 54 52 41 43 54 F2 F1 03 04 03 00  P_SUBTRACT......
  0000DE80: 0B 00 10 44 33 44 54 4F 50 5F 41 44 44 53 4D 4F  ...D3DTOP_ADDSMO
  0000DE90: 4F 54 48 F1 03 04 03 00 0C 00 18 44 33 44 54 4F  OTH........D3DTO
  0000DEA0: 50 5F 42 4C 45 4E 44 44 49 46 46 55 53 45 41 4C  P_BLENDDIFFUSEAL
  0000DEB0: 50 48 41 F1 03 04 03 00 0E 00 18 44 33 44 54 4F  PHA........D3DTO
  0000DEC0: 50 5F 42 4C 45 4E 44 54 45 58 54 55 52 45 41 4C  P_BLENDTEXTUREAL
  0000DED0: 50 48 41 F1 03 04 03 00 0F 00 17 44 33 44 54 4F  PHA........D3DTO
  0000DEE0: 50 5F 42 4C 45 4E 44 46 41 43 54 4F 52 41 4C 50  P_BLENDFACTORALP
  0000DEF0: 48 41 F2 F1 03 04 03 00 10 00 1A 44 33 44 54 4F  HA.........D3DTO
  0000DF00: 50 5F 42 4C 45 4E 44 54 45 58 54 55 52 45 41 4C  P_BLENDTEXTUREAL
  0000DF10: 50 48 41 50 4D F3 F2 F1 03 04 03 00 0D 00 18 44  PHAPM..........D
  0000DF20: 33 44 54 4F 50 5F 42 4C 45 4E 44 43 55 52 52 45  3DTOP_BLENDCURRE
  0000DF30: 4E 54 41 4C 50 48 41 F1 03 04 03 00 11 00 12 44  NTALPHA........D
  0000DF40: 33 44 54 4F 50 5F 50 52 45 4D 4F 44 55 4C 41 54  3DTOP_PREMODULAT
  0000DF50: 45 F3 F2 F1 03 04 03 00 12 00 1D 44 33 44 54 4F  E..........D3DTO
  0000DF60: 50 5F 4D 4F 44 55 4C 41 54 45 41 4C 50 48 41 5F  P_MODULATEALPHA_
  0000DF70: 41 44 44 43 4F 4C 4F 52 03 04 03 00 13 00 1D 44  ADDCOLOR.......D
  0000DF80: 33 44 54 4F 50 5F 4D 4F 44 55 4C 41 54 45 43 4F  3DTOP_MODULATECO
  0000DF90: 4C 4F 52 5F 41 44 44 41 4C 50 48 41 03 04 03 00  LOR_ADDALPHA....
  0000DFA0: 14 00 20 44 33 44 54 4F 50 5F 4D 4F 44 55 4C 41  .. D3DTOP_MODULA
  0000DFB0: 54 45 49 4E 56 41 4C 50 48 41 5F 41 44 44 43 4F  TEINVALPHA_ADDCO
  0000DFC0: 4C 4F 52 F1 03 04 03 00 15 00 20 44 33 44 54 4F  LOR....... D3DTO
  0000DFD0: 50 5F 4D 4F 44 55 4C 41 54 45 49 4E 56 43 4F 4C  P_MODULATEINVCOL
  0000DFE0: 4F 52 5F 41 44 44 41 4C 50 48 41 F1 03 04 03 00  OR_ADDALPHA.....
  0000DFF0: 16 00 12 44 33 44 54 4F 50 5F 44 4F 54 50 52 4F  ...D3DTOP_DOTPRO
  0000E000: 44 55 43 54 33 F3 F2 F1 03 04 03 00 17 00 12 44  DUCT3..........D
  0000E010: 33 44 54 4F 50 5F 4D 55 4C 54 49 50 4C 59 41 44  3DTOP_MULTIPLYAD
  0000E020: 44 F3 F2 F1 03 04 03 00 18 00 0B 44 33 44 54 4F  D..........D3DTO
  0000E030: 50 5F 4C 45 52 50 F2 F1 03 04 03 00 19 00 11 44  P_LERP.........D
  0000E040: 33 44 54 4F 50 5F 42 55 4D 50 45 4E 56 4D 41 50  3DTOP_BUMPENVMAP
  0000E050: 03 04 03 00 1A 00 1A 44 33 44 54 4F 50 5F 42 55  .......D3DTOP_BU
  0000E060: 4D 50 45 4E 56 4D 41 50 4C 55 4D 49 4E 41 4E 43  MPENVMAPLUMINANC
  0000E070: 45 F3 F2 F1 03 04 03 00 1B 00 0A 44 33 44 54 4F  E..........D3DTO
  0000E080: 50 5F 4D 41 58 F3 F2 F1 03 04 03 00 04 80 FF FF  P_MAX...........
  0000E090: FF 7F 12 44 33 44 54 4F 50 5F 46 4F 52 43 45 5F  ...D3DTOP_FORCE_
  0000E0A0: 44 57 4F 52 44 F3 F2 F1 1E 00 07 10 1C 00 00 00  DWORD...........
  0000E0B0: 74 00 00 00 B9 14 00 00 0D 5F 44 33 44 54 45 58  t........_D3DTEX
  0000E0C0: 54 55 52 45 4F 50 F2 F1 86 00 03 12 05 14 03 00  TUREOP..........
  0000E0D0: 22 00 00 00 00 00 04 53 77 61 70 F1 05 14 03 00  "......Swap.....
  0000E0E0: 22 00 00 00 04 00 0A 53 77 61 70 56 42 6C 61 6E  "......SwapVBlan
  0000E0F0: 6B F3 F2 F1 05 14 03 00 22 00 00 00 08 00 0D 4D  k......."......M
  0000E100: 69 73 73 65 64 56 42 6C 61 6E 6B 73 05 14 03 00  issedVBlanks....
  0000E110: 22 00 00 00 0C 00 13 54 69 6D 65 55 6E 74 69 6C  "......TimeUntil
  0000E120: 53 77 61 70 56 42 6C 61 6E 6B F2 F1 05 14 03 00  SwapVBlank......
  0000E130: 22 00 00 00 10 00 16 54 69 6D 65 42 65 74 77 65  "......TimeBetwe
  0000E140: 65 6E 53 77 61 70 56 42 6C 61 6E 6B 73 F3 F2 F1  enSwapVBlanks...
  0000E150: 22 00 05 10 05 00 00 00 BB 14 00 00 00 00 00 00  "...............
  0000E160: 00 00 00 00 14 00 0C 5F 44 33 44 53 57 41 50 44  ......._D3DSWAPD
  0000E170: 41 54 41 F1 0A 00 01 10 20 00 00 00 01 00 F2 F1  ATA..... .......
  0000E180: 0E 00 03 10 BD 14 00 00 11 00 00 00 42 00 00 F1  ............B...
  0000E190: 0A 00 02 10 7F 11 00 00 0A 00 00 00 2A 00 03 12  ............*...
  0000E1A0: 05 14 03 00 12 00 00 00 00 00 08 6C 48 46 4C 65  ...........lHFLe
  0000E1B0: 76 65 6C F1 05 14 03 00 40 00 00 00 04 00 09 66  vel.....@......f
  0000E1C0: 6C 4C 46 52 61 74 69 6F 26 00 05 10 02 00 00 00  lLFRatio&.......
  0000E1D0: C0 14 00 00 00 00 00 00 00 00 00 00 08 00 11 5F  ..............._
  0000E1E0: 44 53 49 33 44 4C 32 4F 43 43 4C 55 53 49 4F 4E  DSI3DL2OCCLUSION
  0000E1F0: 0A 00 02 10 3A 14 00 00 0A 00 00 00 62 00 03 12  ....:.......b...
  0000E200: 05 14 03 00 22 00 00 00 00 00 07 64 77 46 6C 61  ...."......dwFla
  0000E210: 67 73 F2 F1 05 14 03 00 22 00 00 00 04 00 0B 64  gs......"......d
  0000E220: 77 49 6E 70 75 74 53 69 7A 65 F2 F1 05 14 03 00  wInputSize......
  0000E230: 22 00 00 00 08 00 0C 64 77 4F 75 74 70 75 74 53  "......dwOutputS
  0000E240: 69 7A 65 F1 05 14 03 00 22 00 00 00 0C 00 0E 64  ize....."......d
  0000E250: 77 4D 61 78 4C 6F 6F 6B 61 68 65 61 64 F3 F2 F1  wMaxLookahead...
  0000E260: 22 00 05 10 04 00 00 00 C3 14 00 00 00 00 00 00  "...............
  0000E270: 00 00 00 00 10 00 0B 5F 58 4D 45 44 49 41 49 4E  ......._XMEDIAIN
  0000E280: 46 4F F2 F1 0A 00 02 10 F1 13 00 00 0A 00 00 00  FO..............
  0000E290: 0A 00 02 10 AC 11 00 00 0A 00 00 00 0A 00 02 10  ................
  0000E2A0: 6C 13 00 00 0A 00 00 00 0E 00 03 10 DA 10 00 00  l...............
  0000E2B0: 11 00 00 00 8C 00 00 F1 0A 00 02 10 86 11 00 00  ................
  0000E2C0: 0A 00 00 00 36 00 03 12 05 14 03 00 22 00 00 00  ....6......."...
  0000E2D0: 00 00 06 56 42 6C 61 6E 6B F3 F2 F1 05 14 03 00  ...VBlank.......
  0000E2E0: 22 00 00 00 04 00 04 53 77 61 70 F1 05 14 03 00  "......Swap.....
  0000E2F0: 22 00 00 00 08 00 05 46 6C 61 67 73 26 00 05 10  "......Flags&...
  0000E300: 03 00 00 00 CA 14 00 00 00 00 00 00 00 00 00 00  ................
  0000E310: 0C 00 0E 5F 44 33 44 56 42 4C 41 4E 4B 44 41 54  ..._D3DVBLANKDAT
  0000E320: 41 F3 F2 F1 0A 00 0A 00 07 00 55 55 55 50 F2 F1  A.........UUUP..
  0000E330: 0A 00 02 10 CC 14 00 00 0A 00 00 00 0A 00 02 10  ................
  0000E340: 38 14 00 00 0A 04 00 00 1A 00 09 10 22 00 00 00  8..........."...
  0000E350: 38 14 00 00 CE 14 00 00 07 00 00 00 09 10 00 00  8...............
  0000E360: 00 00 00 00 1A 00 09 10 12 00 00 00 38 14 00 00  ............8...
  0000E370: CE 14 00 00 07 00 01 00 3C 14 00 00 00 00 00 00  ........<.......
  0000E380: 1A 00 09 10 12 00 00 00 38 14 00 00 CE 14 00 00  ........8.......
  0000E390: 07 00 01 00 82 13 00 00 00 00 00 00 1A 00 09 10  ................
  0000E3A0: 12 00 00 00 38 14 00 00 CE 14 00 00 07 00 02 00  ....8...........
  0000E3B0: 42 14 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  B...............
  0000E3C0: 38 14 00 00 CE 14 00 00 07 00 00 00 09 10 00 00  8...............
  0000E3D0: 00 00 00 00 0A 00 01 10 38 14 00 00 01 00 F2 F1  ........8.......
  0000E3E0: 0A 00 02 10 D4 14 00 00 2A 00 00 00 0A 00 01 12  ........*.......
  0000E3F0: 01 00 00 00 D5 14 00 00 1A 00 09 10 03 00 00 00  ................
  0000E400: 38 14 00 00 CE 14 00 00 0B 00 01 00 D6 14 00 00  8...............
  0000E410: 00 00 00 00 1A 00 09 10 03 00 00 00 38 14 00 00  ............8...
  0000E420: CE 14 00 00 0B 00 00 00 09 10 00 00 00 00 00 00  ................
  0000E430: 12 00 06 12 03 01 00 00 D7 14 00 00 03 01 00 00  ................
  0000E440: D8 14 00 00 BA 00 03 12 09 14 00 00 CD 14 00 00  ................
  0000E450: 0B 14 1B 00 CF 14 00 00 00 00 00 00 06 41 64 64  .............Add
  0000E460: 52 65 66 F1 0B 14 1B 00 CF 14 00 00 04 00 00 00  Ref.............
  0000E470: 07 52 65 6C 65 61 73 65 0B 14 1B 00 D0 14 00 00  .Release........
  0000E480: 08 00 00 00 07 47 65 74 49 6E 66 6F 0B 14 1B 00  .....GetInfo....
  0000E490: D1 14 00 00 0C 00 00 00 09 47 65 74 53 74 61 74  .........GetStat
  0000E4A0: 75 73 F2 F1 0B 14 1B 00 D2 14 00 00 10 00 00 00  us..............
  0000E4B0: 07 50 72 6F 63 65 73 73 0B 14 1B 00 D3 14 00 00  .Process........
  0000E4C0: 14 00 00 00 0D 44 69 73 63 6F 6E 74 69 6E 75 69  .....Discontinui
  0000E4D0: 74 79 F2 F1 0B 14 1B 00 D3 14 00 00 18 00 00 00  ty..............
  0000E4E0: 05 46 6C 75 73 68 F2 F1 07 14 02 00 D9 14 00 00  .Flush..........
  0000E4F0: 0C 58 4D 65 64 69 61 4F 62 6A 65 63 74 F3 F2 F1  .XMediaObject...
  0000E500: 0A 00 0A 00 07 00 55 55 55 50 F2 F1 22 00 05 10  ......UUUP.."...
  0000E510: 0A 00 02 00 DA 14 00 00 00 00 00 00 DB 14 00 00  ................
  0000E520: 04 00 0C 58 4D 65 64 69 61 4F 62 6A 65 63 74 F1  ...XMediaObject.
  0000E530: 2A 00 03 12 05 14 03 00 22 00 00 00 00 00 07 4C  *......."......L
  0000E540: 6F 77 50 61 72 74 F2 F1 05 14 03 00 12 00 00 00  owPart..........
  0000E550: 04 00 08 48 69 67 68 50 61 72 74 F1 2E 00 05 10  ...HighPart.....
  0000E560: 02 00 08 00 DD 14 00 00 00 00 00 00 00 00 00 00  ................
  0000E570: 08 00 19 5F 4C 41 52 47 45 5F 49 4E 54 45 47 45  ..._LARGE_INTEGE
  0000E580: 52 3A 3A 5F 5F 75 6E 6E 61 6D 65 64 4A 00 03 12  R::__unnamedJ...
  0000E590: 05 14 03 00 22 00 00 00 00 00 07 4C 6F 77 50 61  ...."......LowPa
  0000E5A0: 72 74 F2 F1 05 14 03 00 12 00 00 00 04 00 08 48  rt.............H
  0000E5B0: 69 67 68 50 61 72 74 F1 05 14 03 00 DE 14 00 00  ighPart.........
  0000E5C0: 00 00 01 75 05 14 03 00 13 00 00 00 00 00 08 51  ...u...........Q
  0000E5D0: 75 61 64 50 61 72 74 F1 1E 00 06 10 04 00 00 00  uadPart.........
  0000E5E0: DF 14 00 00 08 00 0E 5F 4C 41 52 47 45 5F 49 4E  ......._LARGE_IN
  0000E5F0: 54 45 47 45 52 F3 F2 F1 0A 00 02 10 7B 13 00 00  TEGER.......{...
  0000E600: 0A 00 00 00 0A 00 02 10 19 14 00 00 0A 00 00 00  ................
  0000E610: 0E 00 03 10 DA 10 00 00 11 00 00 00 10 00 00 F1  ................
  0000E620: 0A 00 02 10 C3 13 00 00 0A 00 00 00 0E 01 03 12  ................
  0000E630: 05 14 03 00 40 00 00 00 00 00 03 5F 31 31 F2 F1  ....@......_11..
  0000E640: 05 14 03 00 40 00 00 00 04 00 03 5F 31 32 F2 F1  ....@......_12..
  0000E650: 05 14 03 00 40 00 00 00 08 00 03 5F 31 33 F2 F1  ....@......_13..
  0000E660: 05 14 03 00 40 00 00 00 0C 00 03 5F 31 34 F2 F1  ....@......_14..
  0000E670: 05 14 03 00 40 00 00 00 10 00 03 5F 32 31 F2 F1  ....@......_21..
  0000E680: 05 14 03 00 40 00 00 00 14 00 03 5F 32 32 F2 F1  ....@......_22..
  0000E690: 05 14 03 00 40 00 00 00 18 00 03 5F 32 33 F2 F1  ....@......_23..
  0000E6A0: 05 14 03 00 40 00 00 00 1C 00 03 5F 32 34 F2 F1  ....@......_24..
  0000E6B0: 05 14 03 00 40 00 00 00 20 00 03 5F 33 31 F2 F1  ....@... .._31..
  0000E6C0: 05 14 03 00 40 00 00 00 24 00 03 5F 33 32 F2 F1  ....@...$.._32..
  0000E6D0: 05 14 03 00 40 00 00 00 28 00 03 5F 33 33 F2 F1  ....@...(.._33..
  0000E6E0: 05 14 03 00 40 00 00 00 2C 00 03 5F 33 34 F2 F1  ....@...,.._34..
  0000E6F0: 05 14 03 00 40 00 00 00 30 00 03 5F 34 31 F2 F1  ....@...0.._41..
  0000E700: 05 14 03 00 40 00 00 00 34 00 03 5F 34 32 F2 F1  ....@...4.._42..
  0000E710: 05 14 03 00 40 00 00 00 38 00 03 5F 34 33 F2 F1  ....@...8.._43..
  0000E720: 05 14 03 00 40 00 00 00 3C 00 03 5F 34 34 F2 F1  ....@...<.._44..
  0000E730: 05 14 03 00 1D 12 00 00 00 00 01 6D 22 00 06 10  ...........m"...
  0000E740: 11 00 08 00 E5 14 00 00 40 00 15 5F 44 33 44 4D  ........@.._D3DM
  0000E750: 41 54 52 49 58 3A 3A 5F 5F 75 6E 6E 61 6D 65 64  ATRIX::__unnamed
  0000E760: 02 01 03 12 05 14 03 00 40 00 00 00 00 00 03 5F  ........@......_
  0000E770: 31 31 F2 F1 05 14 03 00 40 00 00 00 04 00 03 5F  11......@......_
  0000E780: 31 32 F2 F1 05 14 03 00 40 00 00 00 08 00 03 5F  12......@......_
  0000E790: 31 33 F2 F1 05 14 03 00 40 00 00 00 0C 00 03 5F  13......@......_
  0000E7A0: 31 34 F2 F1 05 14 03 00 40 00 00 00 10 00 03 5F  14......@......_
  0000E7B0: 32 31 F2 F1 05 14 03 00 40 00 00 00 14 00 03 5F  21......@......_
  0000E7C0: 32 32 F2 F1 05 14 03 00 40 00 00 00 18 00 03 5F  22......@......_
  0000E7D0: 32 33 F2 F1 05 14 03 00 40 00 00 00 1C 00 03 5F  23......@......_
  0000E7E0: 32 34 F2 F1 05 14 03 00 40 00 00 00 20 00 03 5F  24......@... .._
  0000E7F0: 33 31 F2 F1 05 14 03 00 40 00 00 00 24 00 03 5F  31......@...$.._
  0000E800: 33 32 F2 F1 05 14 03 00 40 00 00 00 28 00 03 5F  32......@...(.._
  0000E810: 33 33 F2 F1 05 14 03 00 40 00 00 00 2C 00 03 5F  33......@...,.._
  0000E820: 33 34 F2 F1 05 14 03 00 40 00 00 00 30 00 03 5F  34......@...0.._
  0000E830: 34 31 F2 F1 05 14 03 00 40 00 00 00 34 00 03 5F  41......@...4.._
  0000E840: 34 32 F2 F1 05 14 03 00 40 00 00 00 38 00 03 5F  42......@...8.._
  0000E850: 34 33 F2 F1 05 14 03 00 40 00 00 00 3C 00 03 5F  43......@...<.._
  0000E860: 34 34 F2 F1 36 00 05 10 10 00 08 00 E7 14 00 00  44..6...........
  0000E870: 00 00 00 00 00 00 00 00 40 00 20 5F 44 33 44 4D  ........@. _D3DM
  0000E880: 41 54 52 49 58 3A 3A 5F 5F 75 6E 6E 61 6D 65 64  ATRIX::__unnamed
  0000E890: 3A 3A 5F 5F 75 6E 6E 61 6D 65 64 F1 6E 00 03 12  ::__unnamed.n...
  0000E8A0: 05 14 03 00 22 00 00 00 00 00 0B 53 74 72 65 61  ...."......Strea
  0000E8B0: 6D 49 6E 64 65 78 F2 F1 05 14 03 00 22 00 00 00  mIndex......"...
  0000E8C0: 04 00 06 4F 66 66 73 65 74 F3 F2 F1 05 14 03 00  ...Offset.......
  0000E8D0: 22 00 00 00 08 00 06 46 6F 72 6D 61 74 F3 F2 F1  "......Format...
  0000E8E0: 05 14 03 00 20 00 00 00 0C 00 08 54 65 73 73 54  .... ......TessT
  0000E8F0: 79 70 65 F1 05 14 03 00 20 00 00 00 0D 00 0A 54  ype..... ......T
  0000E900: 65 73 73 53 6F 75 72 63 65 F3 F2 F1 2A 00 05 10  essSource...*...
  0000E910: 05 00 00 00 E9 14 00 00 00 00 00 00 00 00 00 00  ................
  0000E920: 10 00 15 5F 44 33 44 56 45 52 54 45 58 53 48 41  ..._D3DVERTEXSHA
  0000E930: 44 45 52 49 4E 50 55 54 2A 00 03 12 05 14 03 00  DERINPUT*.......
  0000E940: 22 00 00 00 00 00 07 4C 6F 77 50 61 72 74 F2 F1  "......LowPart..
  0000E950: 05 14 03 00 12 00 00 00 04 00 08 48 69 67 68 50  ...........HighP
  0000E960: 61 72 74 F1 2E 00 05 10 02 00 08 00 EB 14 00 00  art.............
  0000E970: 00 00 00 00 00 00 00 00 08 00 19 5F 4C 41 52 47  ..........._LARG
  0000E980: 45 5F 49 4E 54 45 47 45 52 3A 3A 5F 5F 75 6E 6E  E_INTEGER::__unn
  0000E990: 61 6D 65 64 0A 00 02 10 8F 11 00 00 0A 00 00 00  amed............
  0000E9A0: 0A 00 02 10 A2 13 00 00 0A 00 00 00 0A 00 02 10  ................
  0000E9B0: 76 13 00 00 0A 00 00 00 0E 00 03 10 DA 10 00 00  v...............
  0000E9C0: 11 00 00 00 48 01 00 F1 0A 00 02 10 73 13 00 00  ....H.......s...
  0000E9D0: 0A 00 00 00 0A 00 02 10 29 14 00 00 0A 00 00 00  ........).......
  0000E9E0: 0E 00 03 10 DA 10 00 00 11 00 00 00 58 00 00 F1  ............X...
  0000E9F0: 0E 00 03 10 22 00 00 00 11 00 00 00 48 02 00 F1  ....".......H...
  0000EA00: 0A 00 02 10 E7 13 00 00 0A 00 00 00 0A 00 02 10  ................
  0000EA10: 7D 13 00 00 0A 00 00 00 1A 00 03 12 03 04 03 00  }...............
  0000EA20: 14 00 11 4D 41 58 5F 46 56 46 5F 44 45 43 4C 5F  ...MAX_FVF_DECL_
  0000EA30: 53 49 5A 45 22 00 07 10 01 00 00 00 74 00 00 00  SIZE".......t...
  0000EA40: F7 14 00 00 12 5F 4D 41 58 5F 46 56 46 5F 44 45  ....._MAX_FVF_DE
  0000EA50: 43 4C 5F 53 49 5A 45 F1 9A 01 03 12 03 04 03 00  CL_SIZE.........
  0000EA60: 00 00 0F 44 33 44 53 42 44 5F 54 45 58 54 55 52  ...D3DSBD_TEXTUR
  0000EA70: 45 53 F2 F1 03 04 03 00 04 00 12 44 33 44 53 42  ES.........D3DSB
  0000EA80: 44 5F 50 49 58 45 4C 53 48 41 44 45 52 F3 F2 F1  D_PIXELSHADER...
  0000EA90: 03 04 03 00 05 00 13 44 33 44 53 42 44 5F 56 45  .......D3DSBD_VE
  0000EAA0: 52 54 45 58 53 48 41 44 45 52 F2 F1 03 04 03 00  RTEXSHADER......
  0000EAB0: 06 00 0E 44 33 44 53 42 44 5F 49 4E 44 49 43 45  ...D3DSBD_INDICE
  0000EAC0: 53 F3 F2 F1 03 04 03 00 07 00 0E 44 33 44 53 42  S..........D3DSB
  0000EAD0: 44 5F 53 54 52 45 41 4D 53 F3 F2 F1 03 04 03 00  D_STREAMS.......
  0000EAE0: 17 00 1B 44 33 44 53 42 44 5F 50 49 58 45 4C 53  ...D3DSBD_PIXELS
  0000EAF0: 48 41 44 45 52 43 4F 4E 53 54 41 4E 54 53 F2 F1  HADERCONSTANTS..
  0000EB00: 03 04 03 00 27 00 1C 44 33 44 53 42 44 5F 56 45  ....'..D3DSBD_VE
  0000EB10: 52 54 45 58 53 48 41 44 45 52 43 4F 4E 53 54 41  RTEXSHADERCONSTA
  0000EB20: 4E 54 53 F1 03 04 03 00 E7 00 13 44 33 44 53 42  NTS........D3DSB
  0000EB30: 44 5F 52 45 4E 44 45 52 53 54 41 54 45 53 F2 F1  D_RENDERSTATES..
  0000EB40: 03 04 03 00 79 01 14 44 33 44 53 42 44 5F 54 45  ....y..D3DSBD_TE
  0000EB50: 58 54 55 52 45 53 54 41 54 45 53 F1 03 04 03 00  XTURESTATES.....
  0000EB60: F9 01 11 44 33 44 53 42 44 5F 54 52 41 4E 53 46  ...D3DSBD_TRANSF
  0000EB70: 4F 52 4D 53 03 04 03 00 03 02 0F 44 33 44 53 42  ORMS.......D3DSB
  0000EB80: 44 5F 56 49 45 57 50 4F 52 54 F2 F1 03 04 03 00  D_VIEWPORT......
  0000EB90: 04 02 0F 44 33 44 53 42 44 5F 4D 41 54 45 52 49  ...D3DSBD_MATERI
  0000EBA0: 41 4C F2 F1 03 04 03 00 05 02 13 44 33 44 53 42  AL.........D3DSB
  0000EBB0: 44 5F 42 41 43 4B 4D 41 54 45 52 49 41 4C F2 F1  D_BACKMATERIAL..
  0000EBC0: 03 04 03 00 06 02 0A 44 33 44 53 42 44 5F 4D 41  .......D3DSBD_MA
  0000EBD0: 58 F3 F2 F1 03 04 03 00 04 80 FF FF FF 7F 12 44  X..............D
  0000EBE0: 33 44 53 42 44 5F 46 4F 52 43 45 5F 44 57 4F 52  3DSBD_FORCE_DWOR
  0000EBF0: 44 F3 F2 F1 2A 00 07 10 0F 00 00 00 74 00 00 00  D...*.......t...
  0000EC00: F9 14 00 00 18 5F 44 33 44 53 54 41 54 45 42 4C  ....._D3DSTATEBL
  0000EC10: 4F 43 4B 44 49 52 54 59 49 4E 44 45 58 F3 F2 F1  OCKDIRTYINDEX...
  0000EC20: 0A 00 02 10 FA 13 00 00 0A 00 00 00 0A 00 02 10  ................
  0000EC30: 8B 13 00 00 0A 00 00 00 0A 00 02 10 C8 13 00 00  ................
  0000EC40: 0A 00 00 00 EE 01 03 12 03 04 03 00 00 00 10 50  ...............P
  0000EC50: 53 5F 52 45 47 49 53 54 45 52 5F 5A 45 52 4F F1  S_REGISTER_ZERO.
  0000EC60: 03 04 03 00 00 00 13 50 53 5F 52 45 47 49 53 54  .......PS_REGIST
  0000EC70: 45 52 5F 44 49 53 43 41 52 44 F2 F1 03 04 03 00  ER_DISCARD......
  0000EC80: 01 00 0E 50 53 5F 52 45 47 49 53 54 45 52 5F 43  ...PS_REGISTER_C
  0000EC90: 30 F3 F2 F1 03 04 03 00 02 00 0E 50 53 5F 52 45  0..........PS_RE
  0000ECA0: 47 49 53 54 45 52 5F 43 31 F3 F2 F1 03 04 03 00  GISTER_C1.......
  0000ECB0: 03 00 0F 50 53 5F 52 45 47 49 53 54 45 52 5F 46  ...PS_REGISTER_F
  0000ECC0: 4F 47 F2 F1 03 04 03 00 04 00 0E 50 53 5F 52 45  OG.........PS_RE
  0000ECD0: 47 49 53 54 45 52 5F 56 30 F3 F2 F1 03 04 03 00  GISTER_V0.......
  0000ECE0: 05 00 0E 50 53 5F 52 45 47 49 53 54 45 52 5F 56  ...PS_REGISTER_V
  0000ECF0: 31 F3 F2 F1 03 04 03 00 08 00 0E 50 53 5F 52 45  1..........PS_RE
  0000ED00: 47 49 53 54 45 52 5F 54 30 F3 F2 F1 03 04 03 00  GISTER_T0.......
  0000ED10: 09 00 0E 50 53 5F 52 45 47 49 53 54 45 52 5F 54  ...PS_REGISTER_T
  0000ED20: 31 F3 F2 F1 03 04 03 00 0A 00 0E 50 53 5F 52 45  1..........PS_RE
  0000ED30: 47 49 53 54 45 52 5F 54 32 F3 F2 F1 03 04 03 00  GISTER_T2.......
  0000ED40: 0B 00 0E 50 53 5F 52 45 47 49 53 54 45 52 5F 54  ...PS_REGISTER_T
  0000ED50: 33 F3 F2 F1 03 04 03 00 0C 00 0E 50 53 5F 52 45  3..........PS_RE
  0000ED60: 47 49 53 54 45 52 5F 52 30 F3 F2 F1 03 04 03 00  GISTER_R0.......
  0000ED70: 0D 00 0E 50 53 5F 52 45 47 49 53 54 45 52 5F 52  ...PS_REGISTER_R
  0000ED80: 31 F3 F2 F1 03 04 03 00 0E 00 14 50 53 5F 52 45  1..........PS_RE
  0000ED90: 47 49 53 54 45 52 5F 56 31 52 30 5F 53 55 4D F1  GISTER_V1R0_SUM.
  0000EDA0: 03 04 03 00 0F 00 13 50 53 5F 52 45 47 49 53 54  .......PS_REGIST
  0000EDB0: 45 52 5F 45 46 5F 50 52 4F 44 F2 F1 03 04 03 00  ER_EF_PROD......
  0000EDC0: 20 00 0F 50 53 5F 52 45 47 49 53 54 45 52 5F 4F   ..PS_REGISTER_O
  0000EDD0: 4E 45 F2 F1 03 04 03 00 40 00 18 50 53 5F 52 45  NE......@..PS_RE
  0000EDE0: 47 49 53 54 45 52 5F 4E 45 47 41 54 49 56 45 5F  GISTER_NEGATIVE_
  0000EDF0: 4F 4E 45 F1 03 04 03 00 A0 00 14 50 53 5F 52 45  ONE........PS_RE
  0000EE00: 47 49 53 54 45 52 5F 4F 4E 45 5F 48 41 4C 46 F1  GISTER_ONE_HALF.
  0000EE10: 03 04 03 00 80 00 1D 50 53 5F 52 45 47 49 53 54  .......PS_REGIST
  0000EE20: 45 52 5F 4E 45 47 41 54 49 56 45 5F 4F 4E 45 5F  ER_NEGATIVE_ONE_
  0000EE30: 48 41 4C 46 1A 00 07 10 13 00 00 00 74 00 00 00  HALF........t...
  0000EE40: FE 14 00 00 0B 50 53 5F 52 45 47 49 53 54 45 52  .....PS_REGISTER

SECTION HEADER #16
.debug$S name
       0 physical address
       0 virtual address
      28 size of raw data
   11877 file pointer to raw data (00011877 to 0001189E)
   1189F file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #16
  00000000: 26 00 08 10 A6 14 00 00 00 00 00 00 00 00 19 44  &..............D
  00000010: 33 44 50 52 49 4D 49 54 49 56 45 54 4F 56 45 52  3DPRIMITIVETOVER
  00000020: 54 45 58 43 4F 55 4E 54                          TEXCOUNT

RELOCATIONS #16
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000008  SECREL                     00000000        16  _D3DPRIMITIVETOVERTEXCOUNT
 0000000C  SECTION                        0000        16  _D3DPRIMITIVETOVERTEXCOUNT

SECTION HEADER #17
.debug$S name
       0 physical address
       0 virtual address
      29 size of raw data
   118B3 file pointer to raw data (000118B3 to 000118DB)
   118DC file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #17
  00000000: 27 00 08 10 F0 14 00 00 00 00 00 00 00 00 1A 44  '..............D
  00000010: 33 44 53 49 4D 50 4C 45 52 45 4E 44 45 52 53 54  3DSIMPLERENDERST
  00000020: 41 54 45 45 4E 43 4F 44 45                       ATEENCODE

RELOCATIONS #17
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000008  SECREL                     00000000        13  _D3DSIMPLERENDERSTATEENCODE
 0000000C  SECTION                        0000        13  _D3DSIMPLERENDERSTATEENCODE

SECTION HEADER #18
.debug$S name
       0 physical address
       0 virtual address
      25 size of raw data
   118F0 file pointer to raw data (000118F0 to 00011914)
   11915 file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #18
  00000000: 23 00 08 10 E3 14 00 00 00 00 00 00 00 00 16 44  #..............D
  00000010: 33 44 54 45 58 54 55 52 45 44 49 52 45 43 54 45  3DTEXTUREDIRECTE
  00000020: 4E 43 4F 44 45                                   NCODE

RELOCATIONS #18
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000008  SECREL                     00000000        10  _D3DTEXTUREDIRECTENCODE
 0000000C  SECTION                        0000        10  _D3DTEXTUREDIRECTENCODE

SECTION HEADER #19
.debug$S name
       0 physical address
       0 virtual address
      26 size of raw data
   11929 file pointer to raw data (00011929 to 0001194E)
   1194F file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #19
  00000000: 24 00 08 10 C8 14 00 00 00 00 00 00 00 00 17 44  $..............D
  00000010: 33 44 44 49 52 54 59 46 52 4F 4D 52 45 4E 44 45  3DDIRTYFROMRENDE
  00000020: 52 53 54 41 54 45                                RSTATE

RELOCATIONS #19
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000008  SECREL                     00000000         D  _D3DDIRTYFROMRENDERSTATE
 0000000C  SECTION                        0000         D  _D3DDIRTYFROMRENDERSTATE

SECTION HEADER #1A
.debug$S name
       0 physical address
       0 virtual address
      27 size of raw data
   11963 file pointer to raw data (00011963 to 00011989)
   1198A file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #1A
  00000000: 25 00 08 10 F3 14 00 00 00 00 00 00 00 00 18 44  %..............D
  00000010: 33 44 44 49 52 54 59 46 52 4F 4D 54 45 58 54 55  3DDIRTYFROMTEXTU
  00000020: 52 45 53 54 41 54 45                             RESTATE

RELOCATIONS #1A
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000008  SECREL                     00000000         A  _D3DDIRTYFROMTEXTURESTATE
 0000000C  SECTION                        0000         A  _D3DDIRTYFROMTEXTURESTATE

SECTION HEADER #1B
.debug$S name
       0 physical address
       0 virtual address
      29 size of raw data
   1199E file pointer to raw data (0001199E to 000119C6)
   119C7 file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #1B
  00000000: 27 00 08 10 BE 14 00 00 00 00 00 00 00 00 1A 58  '..............X
  00000010: 47 52 41 50 48 49 43 53 3A 3A 67 5F 54 65 78 74  GRAPHICS::g_Text
  00000020: 75 72 65 46 6F 72 6D 61 74                       ureFormat

RELOCATIONS #1B
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000008  SECREL                     00000000         7  ?g_TextureFormat@XGRAPHICS@@3QBEB (unsigned char const * const XGRAPHICS::g_TextureFormat)
 0000000C  SECTION                        0000         7  ?g_TextureFormat@XGRAPHICS@@3QBEB (unsigned char const * const XGRAPHICS::g_TextureFormat)

COFF SYMBOL TABLE
000 00000019 DEBUG  notype       Filename     | .file
    ..\writexpr.cpp
002 001D2426 ABS    notype       Static       | @comp.id
003 00000000 SECT1  notype       Static       | .debug$S
    Section length 1A7B, #relocs    0, #linenums    0, checksum        0
005 00000000 SECT2  notype       Static       | .rdata
    Section length   42, #relocs    0, #linenums    0, checksum DC39E582, selection    2 (pick any)
007 00000000 SECT2  notype       External     | ?g_TextureFormat@XGRAPHICS@@3QBEB (unsigned char const * const XGRAPHICS::g_TextureFormat)
008 00000000 SECT3  notype       Static       | .rdata
    Section length   58, #relocs    0, #linenums    0, checksum C5165846, selection    2 (pick any)
00A 00000000 SECT3  notype       External     | _D3DDIRTYFROMTEXTURESTATE
00B 00000000 SECT4  notype       Static       | .rdata
    Section length   8C, #relocs    0, #linenums    0, checksum C94CCAFD, selection    2 (pick any)
00D 00000000 SECT4  notype       External     | _D3DDIRTYFROMRENDERSTATE
00E 00000000 SECT5  notype       Static       | .rdata
    Section length   10, #relocs    0, #linenums    0, checksum 73FA7410, selection    2 (pick any)
010 00000000 SECT5  notype       External     | _D3DTEXTUREDIRECTENCODE
011 00000000 SECT6  notype       Static       | .rdata
    Section length  148, #relocs    0, #linenums    0, checksum 2ED435D5, selection    2 (pick any)
013 00000000 SECT6  notype       External     | _D3DSIMPLERENDERSTATEENCODE
014 00000000 SECT7  notype       Static       | .rdata
    Section length   58, #relocs    0, #linenums    0, checksum 42D5A7C7, selection    2 (pick any)
016 00000000 SECT7  notype       External     | _D3DPRIMITIVETOVERTEXCOUNT
017 00000000 SECT8  notype       Static       | .text
    Section length    3, #relocs    0, #linenums    1, checksum F647872A, selection    2 (pick any)
019 00000044 DEBUG  notype       Filename     | .file
    d:\xbox\public\sdk\inc\d3d8.h
01C 00000000 SECT8  notype ()    Static       | _D3DSurface_UnlockRect@4
    tag index 0000001E size 00000003 lines 000021A0 next function 00000000
01E 00000000 SECT8  notype       BeginFunction | .bf
    line# 0a76 end 00000000
020 00000001 SECT8  notype       .bf or.ef    | .lf
021 00000003 SECT8  notype       EndFunction  | .ef
    line# 0a76
023 00000000 SECT9  notype       Static       | .debug$S
    Section length   53, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x8)
025 00000000 SECTA  notype       Static       | .debug$F
    Section length   10, #relocs    1, #linenums    0, checksum        0, selection    5 (pick associative Section 0x8)
027 00000000 SECTB  notype       Static       | .text
    Section length   1A, #relocs    1, #linenums    1, checksum 98F76C4F, selection    2 (pick any)
029 00000000 SECTB  notype ()    External     | ?LockRect@D3DSurface@@QAGJPAU_D3DLOCKED_RECT@@PBUtagRECT@@K@Z (public: long __stdcall D3DSurface::LockRect(struct _D3DLOCKED_RECT *,struct tagRECT const *,unsigned long))
    tag index 0000002C size 0000001A lines 0000224B next function 00000000
02B 00000000 UNDEF  notype ()    External     | _D3DSurface_LockRect@16
02C 00000000 SECTB  notype       BeginFunction | .bf
    line# 0a8c end 00000000
02E 00000001 SECTB  notype       .bf or.ef    | .lf
02F 0000001A SECTB  notype       EndFunction  | .ef
    line# 0a8c
031 00000000 SECTC  notype       Static       | .debug$S
    Section length   8D, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0xB)
033 00000000 SECTD  notype       Static       | .debug$F
    Section length   10, #relocs    1, #linenums    0, checksum        0, selection    5 (pick associative Section 0xB)
035 00000000 SECTE  notype       Static       | .text
    Section length    5, #relocs    0, #linenums    1, checksum 668BAB7A, selection    2 (pick any)
037 00000000 SECTE  notype ()    External     | ?UnlockRect@D3DSurface@@QAGJXZ (public: long __stdcall D3DSurface::UnlockRect(void))
    tag index 00000039 size 00000005 lines 00002311 next function 00000000
039 00000000 SECTE  notype       BeginFunction | .bf
    line# 0a8d end 00000000
03B 00000001 SECTE  notype       .bf or.ef    | .lf
03C 00000005 SECTE  notype       EndFunction  | .ef
    line# 0a8d
03E 00000000 SECTF  notype       Static       | .debug$S
    Section length   53, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0xE)
040 00000000 SECT10 notype       Static       | .debug$F
    Section length   10, #relocs    1, #linenums    0, checksum        0, selection    5 (pick associative Section 0xE)
042 00000000 SECT11 notype       Static       | .text
    Section length  297, #relocs   11, #linenums   33, checksum DB24F16F, selection    1 (pick no duplicates)
044 00000000 DEBUG  notype       Filename     | .file
    d:\xbox\private\windows\directx\dxg\xgraphics\misc\writexpr.cpp
049 00000000 SECT11 notype ()    External     | _XGWriteSurfaceOrTextureToXPR@12
    tag index 00000054 size 00000297 lines 000026D9 next function 00000000
04B 00000000 UNDEF  notype ()    External     | _CloseHandle@4
04C 00000000 UNDEF  notype ()    External     | _WriteFile@20
04D 00000000 UNDEF  notype ()    External     | _sprintf
04E 00000000 SECT12 notype       Static       | .rdata
    Section length   25, #relocs    0, #linenums    0, checksum BF689332, selection    2 (pick any)
050 00000000 SECT12 notype       External     | ??_C@_0CF@GEEGBDKJ@Unable?5to?5open?5file?5?$CI?$CFs?$CJ?3?5?5error@ (`string')
051 00000000 UNDEF  notype ()    External     | _GetLastError@0
052 00000000 UNDEF  notype ()    External     | _CreateFileA@28
053 00000000 UNDEF  notype ()    External     | ?EncodeFormat@XGRAPHICS@@YGKKKKKW4_D3DFORMAT@@K_N1PAK2@Z (unsigned long __stdcall XGRAPHICS::EncodeFormat(unsigned long,unsigned long,unsigned long,unsigned long,enum _D3DFORMAT,unsigned long,bool,bool,unsigned long *,unsigned long *))
054 00000000 SECT11 notype       BeginFunction | .bf
    line# 0021 end 00000000
056 00000033 SECT11 notype       .bf or.ef    | .lf
057 00000297 SECT11 notype       EndFunction  | .ef
    line# 00bc
059 00000000 SECT13 notype       Static       | .debug$S
    Section length  1C9, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x11)
05B 00000000 SECT14 notype       Static       | .debug$F
    Section length   10, #relocs    1, #linenums    0, checksum        0, selection    5 (pick associative Section 0x11)
05D 00000000 SECT15 notype       Static       | .debug$T
    Section length EE50, #relocs    0, #linenums    0, checksum        0
05F 00000000 SECT16 notype       Static       | .debug$S
    Section length   28, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x7)
061 00000000 SECT17 notype       Static       | .debug$S
    Section length   29, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x6)
063 00000000 SECT18 notype       Static       | .debug$S
    Section length   25, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x5)
065 00000000 SECT19 notype       Static       | .debug$S
    Section length   26, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x4)
067 00000000 SECT1A notype       Static       | .debug$S
    Section length   27, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x3)
069 00000000 SECT1B notype       Static       | .debug$S
    Section length   29, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x2)

String Table Size = 0x212 bytes

Archive member name at 12E36: /22             obj\i386\surfacetofile.obj
3CBBA79E time/date Mon Apr 15 21:25:02 2002
         uid
         gid
  100666 mode
   1285E size
correct header end

FILE HEADER VALUES
             14C machine (x86)
              1F number of sections
        3CBBA79C time date stamp Mon Apr 15 21:25:00 2002
           11D6F file pointer to symbol table
              7D number of symbols
               0 size of optional header
               0 characteristics

SECTION HEADER #1
.drectve name
       0 physical address
       0 virtual address
      5E size of raw data
     4EC file pointer to raw data (000004EC to 00000549)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
  100A00 flags
         Info
         Remove
         1 byte align

RAW DATA #1
  00000000: 2F 6D 65 72 67 65 3A 58 47 52 50 48 5F 52 44 3D  /merge:XGRPH_RD=
  00000010: 58 47 52 50 48 20 2F 6D 65 72 67 65 3A 58 47 52  XGRPH /merge:XGR
  00000020: 50 48 5F 52 57 3D 58 47 52 50 48 20 2F 73 65 63  PH_RW=XGRPH /sec
  00000030: 74 69 6F 6E 3A 58 47 52 50 48 2C 45 52 57 20 2F  tion:XGRPH,ERW /
  00000040: 69 6E 63 6C 75 64 65 3A 5F 58 47 72 61 70 68 69  include:_XGraphi
  00000050: 63 73 42 75 69 6C 64 4E 75 6D 62 65 72 20        csBuildNumber 

   Linker Directives
   -----------------
   /merge:XGRPH_RD=XGRPH
   /merge:XGRPH_RW=XGRPH
   /section:XGRPH,ERW
   /include:_XGraphicsBuildNumber

SECTION HEADER #2
.debug$S name
       0 physical address
       0 virtual address
    1B0E size of raw data
     54A file pointer to raw data (0000054A to 00002057)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
42100040 flags
         Initialized Data
         Discardable
         1 byte align
         Read Only

RAW DATA #2
  00000000: 02 00 00 00 59 00 09 00 00 00 00 00 52 44 3A 5C  ....Y.......RD:\
  00000010: 78 62 6F 78 5C 70 72 69 76 61 74 65 5C 77 69 6E  xbox\private\win
  00000020: 64 6F 77 73 5C 64 69 72 65 63 74 78 5C 64 78 67  dows\directx\dxg
  00000030: 5C 78 67 72 61 70 68 69 63 73 5C 6D 69 73 63 5C  \xgraphics\misc\
  00000040: 78 62 6F 78 5C 6F 62 6A 5C 69 33 38 36 5C 73 75  xbox\obj\i386\su
  00000050: 72 66 61 63 65 74 6F 66 69 6C 65 2E 6F 62 6A 38  rfacetofile.obj8
  00000060: 00 13 10 01 00 00 00 06 00 0D 00 00 00 26 24 0D  .............&$.
  00000070: 00 00 00 26 24 21 4D 69 63 72 6F 73 6F 66 74 20  ...&$!Microsoft 
  00000080: 28 52 29 20 4F 70 74 69 6D 69 7A 69 6E 67 20 43  (R) Optimizing C
  00000090: 6F 6D 70 69 6C 65 72 00 00 28 00 02 10 AD 14 00  ompiler..(......
  000000A0: 00 A0 00 1F 50 53 5F 49 4E 50 55 54 4D 41 50 50  ....PS_INPUTMAPP
  000000B0: 49 4E 47 5F 48 41 4C 46 42 49 41 53 5F 4E 45 47  ING_HALFBIAS_NEG
  000000C0: 41 54 45 12 00 02 10 90 10 00 00 0A 00 09 44 33  ATE...........D3
  000000D0: 44 54 53 5F 4D 41 58 1A 00 02 10 FA 14 00 00 F9  DTS_MAX.........
  000000E0: 01 11 44 33 44 53 42 44 5F 54 52 41 4E 53 46 4F  ..D3DSBD_TRANSFO
  000000F0: 52 4D 53 19 00 02 10 B6 10 00 00 52 00 10 44 33  RMS........R..D3
  00000100: 44 52 53 5F 53 49 4D 50 4C 45 5F 4D 41 58 1B 00  DRS_SIMPLE_MAX..
  00000110: 02 10 B6 10 00 00 75 00 12 44 33 44 52 53 5F 44  ......u..D3DRS_D
  00000120: 45 46 45 52 52 45 44 5F 4D 41 58 1D 00 02 10 B6  EFERRED_MAX.....
  00000130: 10 00 00 75 00 14 44 33 44 52 53 5F 50 53 54 45  ...u..D3DRS_PSTE
  00000140: 58 54 55 52 45 4D 4F 44 45 53 1A 00 02 10 B6 10  XTUREMODES......
  00000150: 00 00 76 00 11 44 33 44 52 53 5F 56 45 52 54 45  ..v..D3DRS_VERTE
  00000160: 58 42 4C 45 4E 44 17 00 02 10 B6 10 00 00 77 00  XBLEND........w.
  00000170: 0E 44 33 44 52 53 5F 46 4F 47 43 4F 4C 4F 52 17  .D3DRS_FOGCOLOR.
  00000180: 00 02 10 B6 10 00 00 78 00 0E 44 33 44 52 53 5F  .......x..D3DRS_
  00000190: 46 49 4C 4C 4D 4F 44 45 1B 00 02 10 B6 10 00 00  FILLMODE........
  000001A0: 79 00 12 44 33 44 52 53 5F 42 41 43 4B 46 49 4C  y..D3DRS_BACKFIL
  000001B0: 4C 4D 4F 44 45 1F 00 02 10 B6 10 00 00 7A 00 16  LMODE........z..
  000001C0: 44 33 44 52 53 5F 54 57 4F 53 49 44 45 44 4C 49  D3DRS_TWOSIDEDLI
  000001D0: 47 48 54 49 4E 47 1F 00 02 10 B6 10 00 00 7B 00  GHTING........{.
  000001E0: 16 44 33 44 52 53 5F 4E 4F 52 4D 41 4C 49 5A 45  .D3DRS_NORMALIZE
  000001F0: 4E 4F 52 4D 41 4C 53 16 00 02 10 B6 10 00 00 7C  NORMALS........|
  00000200: 00 0D 44 33 44 52 53 5F 5A 45 4E 41 42 4C 45 1C  ..D3DRS_ZENABLE.
  00000210: 00 02 10 B6 10 00 00 7D 00 13 44 33 44 52 53 5F  .......}..D3DRS_
  00000220: 53 54 45 4E 43 49 4C 45 4E 41 42 4C 45 1A 00 02  STENCILENABLE...
  00000230: 10 B6 10 00 00 7E 00 11 44 33 44 52 53 5F 53 54  .....~..D3DRS_ST
  00000240: 45 4E 43 49 4C 46 41 49 4C 18 00 02 10 B6 10 00  ENCILFAIL.......
  00000250: 00 7F 00 0F 44 33 44 52 53 5F 46 52 4F 4E 54 46  ....D3DRS_FRONTF
  00000260: 41 43 45 17 00 02 10 B6 10 00 00 80 00 0E 44 33  ACE...........D3
  00000270: 44 52 53 5F 43 55 4C 4C 4D 4F 44 45 1C 00 02 10  DRS_CULLMODE....
  00000280: B6 10 00 00 81 00 13 44 33 44 52 53 5F 54 45 58  .......D3DRS_TEX
  00000290: 54 55 52 45 46 41 43 54 4F 52 14 00 02 10 B6 10  TUREFACTOR......
  000002A0: 00 00 82 00 0B 44 33 44 52 53 5F 5A 42 49 41 53  .....D3DRS_ZBIAS
  000002B0: 16 00 02 10 B6 10 00 00 83 00 0D 44 33 44 52 53  ...........D3DRS
  000002C0: 5F 4C 4F 47 49 43 4F 50 1C 00 02 10 B6 10 00 00  _LOGICOP........
  000002D0: 84 00 13 44 33 44 52 53 5F 45 44 47 45 41 4E 54  ...D3DRS_EDGEANT
  000002E0: 49 41 4C 49 41 53 23 00 02 10 B6 10 00 00 85 00  IALIAS#.........
  000002F0: 1A 44 33 44 52 53 5F 4D 55 4C 54 49 53 41 4D 50  .D3DRS_MULTISAMP
  00000300: 4C 45 41 4E 54 49 41 4C 49 41 53 1E 00 02 10 B6  LEANTIALIAS.....
  00000310: 10 00 00 86 00 15 44 33 44 52 53 5F 4D 55 4C 54  ......D3DRS_MULT
  00000320: 49 53 41 4D 50 4C 45 4D 41 53 4B 1E 00 02 10 B6  ISAMPLEMASK.....
  00000330: 10 00 00 87 00 15 44 33 44 52 53 5F 4D 55 4C 54  ......D3DRS_MULT
  00000340: 49 53 41 4D 50 4C 45 4D 4F 44 45 2A 00 02 10 B6  ISAMPLEMODE*....
  00000350: 10 00 00 88 00 21 44 33 44 52 53 5F 4D 55 4C 54  .....!D3DRS_MULT
  00000360: 49 53 41 4D 50 4C 45 52 45 4E 44 45 52 54 41 52  ISAMPLERENDERTAR
  00000370: 47 45 54 4D 4F 44 45 19 00 02 10 B6 10 00 00 89  GETMODE.........
  00000380: 00 10 44 33 44 52 53 5F 53 48 41 44 4F 57 46 55  ..D3DRS_SHADOWFU
  00000390: 4E 43 18 00 02 10 B6 10 00 00 8A 00 0F 44 33 44  NC...........D3D
  000003A0: 52 53 5F 4C 49 4E 45 57 49 44 54 48 1E 00 02 10  RS_LINEWIDTH....
  000003B0: B6 10 00 00 8B 00 15 44 33 44 52 53 5F 44 58 54  .......D3DRS_DXT
  000003C0: 31 4E 4F 49 53 45 45 4E 41 42 4C 45 18 00 02 10  1NOISEENABLE....
  000003D0: B6 10 00 00 8C 00 0F 44 33 44 52 53 5F 59 55 56  .......D3DRS_YUV
  000003E0: 45 4E 41 42 4C 45 22 00 02 10 B6 10 00 00 8D 00  ENABLE".........
  000003F0: 19 44 33 44 52 53 5F 4F 43 43 4C 55 53 49 4F 4E  .D3DRS_OCCLUSION
  00000400: 43 55 4C 4C 45 4E 41 42 4C 45 20 00 02 10 B6 10  CULLENABLE .....
  00000410: 00 00 8E 00 17 44 33 44 52 53 5F 53 54 45 4E 43  .....D3DRS_STENC
  00000420: 49 4C 43 55 4C 4C 45 4E 41 42 4C 45 20 00 02 10  ILCULLENABLE ...
  00000430: B6 10 00 00 8F 00 17 44 33 44 52 53 5F 52 4F 50  .......D3DRS_ROP
  00000440: 5A 43 4D 50 41 4C 57 41 59 53 52 45 41 44 17 00  ZCMPALWAYSREAD..
  00000450: 02 10 B6 10 00 00 90 00 0E 44 33 44 52 53 5F 52  .........D3DRS_R
  00000460: 4F 50 5A 52 45 41 44 24 00 02 10 B6 10 00 00 91  OPZREAD$........
  00000470: 00 1B 44 33 44 52 53 5F 44 4F 4E 4F 54 43 55 4C  ..D3DRS_DONOTCUL
  00000480: 4C 55 4E 43 4F 4D 50 52 45 53 53 45 44 12 00 02  LUNCOMPRESSED...
  00000490: 10 B6 10 00 00 92 00 09 44 33 44 52 53 5F 4D 41  ........D3DRS_MA
  000004A0: 58 2A 00 02 10 C9 10 00 00 0C 00 21 44 33 44 54  X*.........!D3DT
  000004B0: 53 53 5F 44 45 46 45 52 52 45 44 5F 54 45 58 54  SS_DEFERRED_TEXT
  000004C0: 55 52 45 5F 53 54 41 54 45 5F 4D 41 58 17 00 02  URE_STATE_MAX...
  000004D0: 10 C9 10 00 00 0C 00 0E 44 33 44 54 53 53 5F 43  ........D3DTSS_C
  000004E0: 4F 4C 4F 52 4F 50 1C 00 02 10 C9 10 00 00 16 00  OLOROP..........
  000004F0: 13 44 33 44 54 53 53 5F 44 45 46 45 52 52 45 44  .D3DTSS_DEFERRED
  00000500: 5F 4D 41 58 1C 00 02 10 C9 10 00 00 16 00 13 44  _MAX...........D
  00000510: 33 44 54 53 53 5F 42 55 4D 50 45 4E 56 4D 41 54  3DTSS_BUMPENVMAT
  00000520: 30 30 1E 00 02 10 C9 10 00 00 1B 00 15 44 33 44  00...........D3D
  00000530: 54 53 53 5F 42 55 4D 50 45 4E 56 4C 4F 46 46 53  TSS_BUMPENVLOFFS
  00000540: 45 54 1D 00 02 10 C9 10 00 00 1C 00 14 44 33 44  ET...........D3D
  00000550: 54 53 53 5F 54 45 58 43 4F 4F 52 44 49 4E 44 45  TSS_TEXCOORDINDE
  00000560: 58 1B 00 02 10 C9 10 00 00 1D 00 12 44 33 44 54  X...........D3DT
  00000570: 53 53 5F 42 4F 52 44 45 52 43 4F 4C 4F 52 1D 00  SS_BORDERCOLOR..
  00000580: 02 10 C9 10 00 00 1E 00 14 44 33 44 54 53 53 5F  .........D3DTSS_
  00000590: 43 4F 4C 4F 52 4B 45 59 43 4F 4C 4F 52 13 00 02  COLORKEYCOLOR...
  000005A0: 10 C9 10 00 00 20 00 0A 44 33 44 54 53 53 5F 4D  ..... ..D3DTSS_M
  000005B0: 41 58 1A 00 02 10 BB 14 00 00 19 00 11 44 33 44  AX...........D3D
  000005C0: 54 4F 50 5F 42 55 4D 50 45 4E 56 4D 41 50 1C 00  TOP_BUMPENVMAP..
  000005D0: 02 10 1B 10 00 00 12 00 13 44 33 44 46 4D 54 5F  .........D3DFMT_
  000005E0: 4C 49 4E 5F 41 38 52 38 47 38 42 38 1A 00 02 10  LIN_A8R8G8B8....
  000005F0: 1B 10 00 00 11 00 11 44 33 44 46 4D 54 5F 4C 49  .......D3DFMT_LI
  00000600: 4E 5F 52 35 47 36 42 35 1C 00 02 10 1B 10 00 00  N_R5G6B5........
  00000610: 1C 00 13 44 33 44 46 4D 54 5F 4C 49 4E 5F 58 31  ...D3DFMT_LIN_X1
  00000620: 52 35 47 35 42 35 1C 00 02 10 1B 10 00 00 1E 00  R5G5B5..........
  00000630: 13 44 33 44 46 4D 54 5F 4C 49 4E 5F 58 38 52 38  .D3DFMT_LIN_X8R8
  00000640: 47 38 42 38 28 00 02 10 AD 14 00 00 20 00 1F 50  G8B8(....... ..P
  00000650: 53 5F 49 4E 50 55 54 4D 41 50 50 49 4E 47 5F 55  S_INPUTMAPPING_U
  00000660: 4E 53 49 47 4E 45 44 5F 49 4E 56 45 52 54 26 00  NSIGNED_INVERT&.
  00000670: 02 10 AD 14 00 00 40 00 1D 50 53 5F 49 4E 50 55  ......@..PS_INPU
  00000680: 54 4D 41 50 50 49 4E 47 5F 45 58 50 41 4E 44 5F  TMAPPING_EXPAND_
  00000690: 4E 4F 52 4D 41 4C 28 00 02 10 AD 14 00 00 80 00  NORMAL(.........
  000006A0: 1F 50 53 5F 49 4E 50 55 54 4D 41 50 50 49 4E 47  .PS_INPUTMAPPING
  000006B0: 5F 48 41 4C 46 42 49 41 53 5F 4E 4F 52 4D 41 4C  _HALFBIAS_NORMAL
  000006C0: 0C 00 03 10 22 00 00 00 05 55 4C 4F 4E 47 17 00  ...."....ULONG..
  000006D0: 03 10 D3 13 00 00 10 44 53 45 46 46 45 43 54 49  .......DSEFFECTI
  000006E0: 4D 41 47 45 4C 4F 43 12 00 03 10 FF 14 00 00 0B  MAGELOC.........
  000006F0: 50 53 5F 52 45 47 49 53 54 45 52 10 00 03 10 52  PS_REGISTER....R
  00000700: 13 00 00 09 44 33 44 58 43 4F 4C 4F 52 0A 00 03  ....D3DXCOLOR...
  00000710: 10 05 10 00 00 03 49 49 44 0F 00 03 10 13 00 00  ......IID.......
  00000720: 00 08 4C 4F 4E 47 4C 4F 4E 47 10 00 03 10 1B 10  ..LONGLONG......
  00000730: 00 00 09 44 33 44 46 4F 52 4D 41 54 12 00 03 10  ...D3DFORMAT....
  00000740: CB 12 00 00 0B 44 33 44 58 56 45 43 54 4F 52 33  .....D3DXVECTOR3
  00000750: 10 00 03 10 29 12 00 00 09 44 33 44 4C 49 47 48  ....)....D3DLIGH
  00000760: 54 38 17 00 03 10 7E 12 00 00 10 5F 44 33 44 53  T8....~...._D3DS
  00000770: 55 52 46 41 43 45 5F 44 45 53 43 1B 00 03 10 EA  URFACE_DESC.....
  00000780: 14 00 00 14 44 33 44 56 45 52 54 45 58 53 48 41  ....D3DVERTEXSHA
  00000790: 44 45 52 49 4E 50 55 54 15 00 03 10 80 12 00 00  DERINPUT........
  000007A0: 0E 44 33 44 4C 4F 43 4B 45 44 5F 52 45 43 54 1F  .D3DLOCKED_RECT.
  000007B0: 00 03 10 FD 14 00 00 18 4C 50 46 4E 58 4D 45 44  ........LPFNXMED
  000007C0: 49 41 4F 42 4A 45 43 54 43 41 4C 4C 42 41 43 4B  IAOBJECTCALLBACK
  000007D0: 15 00 03 10 2D 12 00 00 0E 44 33 44 42 61 73 65  ....-....D3DBase
  000007E0: 54 65 78 74 75 72 65 1A 00 03 10 FC 14 00 00 13  Texture.........
  000007F0: 4C 50 44 53 45 46 46 45 43 54 49 4D 41 47 45 44  LPDSEFFECTIMAGED
  00000800: 45 53 43 0D 00 03 10 03 04 00 00 06 4C 50 56 4F  ESC.........LPVO
  00000810: 49 44 1C 00 03 10 B0 11 00 00 15 44 33 44 50 52  ID.........D3DPR
  00000820: 45 53 45 4E 54 5F 50 41 52 41 4D 45 54 45 52 53  ESENT_PARAMETERS
  00000830: 14 00 03 10 FB 14 00 00 0D 4C 50 43 44 53 33 44  .........LPCDS3D
  00000840: 42 55 46 46 45 52 16 00 03 10 1F 10 00 00 0F 44  BUFFER.........D
  00000850: 33 44 52 45 53 4F 55 52 43 45 54 59 50 45 1F 00  3DRESOURCETYPE..
  00000860: 03 10 FA 14 00 00 18 5F 44 33 44 53 54 41 54 45  ......._D3DSTATE
  00000870: 42 4C 4F 43 4B 44 49 52 54 59 49 4E 44 45 58 19  BLOCKDIRTYINDEX.
  00000880: 00 03 10 F8 14 00 00 12 5F 4D 41 58 5F 46 56 46  ........_MAX_FVF
  00000890: 5F 44 45 43 4C 5F 53 49 5A 45 20 00 03 10 31 12  _DECL_SIZE ...1.
  000008A0: 00 00 19 5F 44 33 44 56 45 52 54 45 58 41 54 54  ..._D3DVERTEXATT
  000008B0: 52 49 42 55 54 45 46 4F 52 4D 41 54 10 00 03 10  RIBUTEFORMAT....
  000008C0: 1F 12 00 00 09 44 33 44 4D 41 54 52 49 58 19 00  .....D3DMATRIX..
  000008D0: 03 10 22 00 00 00 12 44 33 44 42 41 43 4B 42 55  .."....D3DBACKBU
  000008E0: 46 46 45 52 5F 54 59 50 45 1B 00 03 10 13 12 00  FFER_TYPE.......
  000008F0: 00 14 5F 44 33 44 43 4F 50 59 52 45 43 54 52 4F  .._D3DCOPYRECTRO
  00000900: 50 53 54 41 54 45 0E 00 03 10 66 12 00 00 07 44  PSTATE....f....D
  00000910: 33 44 54 49 4C 45 15 00 03 10 8F 12 00 00 0E 5F  3DTILE........._
  00000920: 44 33 44 4C 4F 43 4B 45 44 5F 42 4F 58 1A 00 03  D3DLOCKED_BOX...
  00000930: 10 F6 14 00 00 13 4C 50 44 49 52 45 43 54 53 4F  ......LPDIRECTSO
  00000940: 55 4E 44 53 54 52 45 41 4D 18 00 03 10 19 12 00  UNDSTREAM.......
  00000950: 00 11 5F 44 33 44 43 4F 50 59 52 45 43 54 53 54  .._D3DCOPYRECTST
  00000960: 41 54 45 1B 00 03 10 91 12 00 00 14 44 33 44 56  ATE.........D3DV
  00000970: 45 52 54 45 58 42 55 46 46 45 52 5F 44 45 53 43  ERTEXBUFFER_DESC
  00000980: 12 00 03 10 AF 12 00 00 0B 44 33 44 58 56 45 43  .........D3DXVEC
  00000990: 54 4F 52 32 13 00 03 10 F5 14 00 00 0C 4C 50 43  TOR2.........LPC
  000009A0: 44 53 4C 46 4F 44 45 53 43 10 00 03 10 23 00 00  DSLFODESC....#..
  000009B0: 00 09 55 4C 4F 4E 47 4C 4F 4E 47 16 00 03 10 64  ..ULONGLONG....d
  000009C0: 12 00 00 0F 44 33 44 53 54 52 45 41 4D 5F 49 4E  ....D3DSTREAM_IN
  000009D0: 50 55 54 15 00 03 10 07 12 00 00 0E 44 33 44 49  PUT.........D3DI
  000009E0: 6E 64 65 78 42 75 66 66 65 72 0F 00 03 10 BF 13  ndexBuffer......
  000009F0: 00 00 08 49 55 6E 6B 6E 6F 77 6E 18 00 03 10 BE  ...IUnknown.....
  00000A00: 10 00 00 11 44 33 44 53 54 41 54 45 42 4C 4F 43  ....D3DSTATEBLOC
  00000A10: 4B 54 59 50 45 19 00 03 10 B8 14 00 00 12 44 53  KTYPE.........DS
  00000A20: 49 33 44 4C 32 4F 42 53 54 52 55 43 54 49 4F 4E  I3DL2OBSTRUCTION
  00000A30: 14 00 03 10 34 14 00 00 0D 44 53 49 33 44 4C 32  ....4....DSI3DL2
  00000A40: 42 55 46 46 45 52 18 00 03 10 3C 12 00 00 11 5F  BUFFER....<...._
  00000A50: 44 33 44 54 52 49 50 41 54 43 48 5F 49 4E 46 4F  D3DTRIPATCH_INFO
  00000A60: 16 00 03 10 DB 13 00 00 0F 5F 44 53 4F 55 54 50  ........._DSOUTP
  00000A70: 55 54 4C 45 56 45 4C 53 10 00 03 10 8B 12 00 00  UTLEVELS........
  00000A80: 09 44 33 44 56 6F 6C 75 6D 65 1F 00 03 10 C9 10  .D3DVolume......
  00000A90: 00 00 18 44 33 44 54 45 58 54 55 52 45 53 54 41  ...D3DTEXTURESTA
  00000AA0: 47 45 53 54 41 54 45 54 59 50 45 17 00 03 10 C0  GESTATETYPE.....
  00000AB0: 14 00 00 10 44 53 49 33 44 4C 32 4F 43 43 4C 55  ....DSI3DL2OCCLU
  00000AC0: 53 49 4F 4E 0E 00 03 10 22 04 00 00 07 4C 50 44  SION...."....LPD
  00000AD0: 57 4F 52 44 1C 00 03 10 F2 14 00 00 15 4C 50 43  WORD.........LPC
  00000AE0: 44 53 4D 49 58 42 49 4E 56 4F 4C 55 4D 45 50 41  DSMIXBINVOLUMEPA
  00000AF0: 49 52 14 00 03 10 21 12 00 00 0D 5F 44 33 44 56  IR....!...._D3DV
  00000B00: 49 45 57 50 4F 52 54 38 20 00 03 10 C9 10 00 00  IEWPORT8 .......
  00000B10: 19 5F 44 33 44 54 45 58 54 55 52 45 53 54 41 47  ._D3DTEXTURESTAG
  00000B20: 45 53 54 41 54 45 54 59 50 45 15 00 03 10 82 12  ESTATETYPE......
  00000B30: 00 00 0E 44 33 44 56 4F 4C 55 4D 45 5F 44 45 53  ...D3DVOLUME_DES
  00000B40: 43 13 00 03 10 20 14 00 00 0C 57 41 56 45 46 4F  C.... ....WAVEFO
  00000B50: 52 4D 41 54 45 58 1C 00 03 10 90 10 00 00 15 44  RMATEX.........D
  00000B60: 33 44 54 52 41 4E 53 46 4F 52 4D 53 54 41 54 45  3DTRANSFORMSTATE
  00000B70: 54 59 50 45 1A 00 03 10 F1 14 00 00 13 4C 50 44  TYPE.........LPD
  00000B80: 49 52 45 43 54 53 4F 55 4E 44 42 55 46 46 45 52  IRECTSOUNDBUFFER
  00000B90: 11 00 03 10 30 14 00 00 0A 44 53 33 44 42 55 46  ....0....DS3DBUF
  00000BA0: 46 45 52 17 00 03 10 EA 11 00 00 10 44 33 44 43  FER.........D3DC
  00000BB0: 55 42 45 4D 41 50 5F 46 41 43 45 53 0B 00 03 10  UBEMAP_FACES....
  00000BC0: 74 00 00 00 04 42 4F 4F 4C 11 00 03 10 1B 10 00  t....BOOL.......
  00000BD0: 00 0A 5F 44 33 44 46 4F 52 4D 41 54 15 00 03 10  .._D3DFORMAT....
  00000BE0: 3A 10 00 00 0E 44 33 44 44 49 53 50 4C 41 59 4D  :....D3DDISPLAYM
  00000BF0: 4F 44 45 15 00 03 10 34 14 00 00 0E 5F 44 53 49  ODE....4...._DSI
  00000C00: 33 44 4C 32 42 55 46 46 45 52 12 00 03 10 7C 12  3DL2BUFFER....|.
  00000C10: 00 00 0B 44 33 44 52 65 73 6F 75 72 63 65 14 00  ...D3DResource..
  00000C20: 03 10 CB 13 00 00 0D 5F 44 53 53 54 52 45 41 4D  ......._DSSTREAM
  00000C30: 44 45 53 43 0F 00 03 10 3C 10 00 00 08 44 33 44  DESC....<....D3D
  00000C40: 43 41 50 53 38 15 00 03 10 1E 13 00 00 0E 44 33  CAPS8.........D3
  00000C50: 44 58 51 55 41 54 45 52 4E 49 4F 4E 0F 00 03 10  DXQUATERNION....
  00000C60: 22 00 00 00 08 44 33 44 43 4F 4C 4F 52 19 00 03  "....D3DCOLOR...
  00000C70: 10 B1 14 00 00 12 44 53 4D 49 58 42 49 4E 56 4F  ......DSMIXBINVO
  00000C80: 4C 55 4D 45 50 41 49 52 10 00 03 10 54 13 00 00  LUMEPAIR....T...
  00000C90: 09 44 33 44 56 45 43 54 4F 52 0E 00 03 10 22 00  .D3DVECTOR....".
  00000CA0: 00 00 07 44 33 44 50 4F 4F 4C 11 00 03 10 C3 11  ...D3DPOOL......
  00000CB0: 00 00 0A 44 33 44 53 75 72 66 61 63 65 13 00 03  ...D3DSurface...
  00000CC0: 10 3E 12 00 00 0C 44 33 44 46 49 45 4C 44 54 59  .>....D3DFIELDTY
  00000CD0: 50 45 13 00 03 10 BD 14 00 00 0C 5F 44 33 44 53  PE........._D3DS
  00000CE0: 57 41 50 44 41 54 41 10 00 03 10 EF 14 00 00 09  WAPDATA.........
  00000CF0: 4C 50 55 4E 4B 4E 4F 57 4E 19 00 03 10 EE 14 00  LPUNKNOWN.......
  00000D00: 00 12 4C 50 43 44 53 49 33 44 4C 32 4C 49 53 54  ..LPCDSI3DL2LIST
  00000D10: 45 4E 45 52 12 00 03 10 ED 14 00 00 0B 44 33 44  ENER.........D3D
  00000D20: 43 41 4C 4C 42 41 43 4B 0D 00 03 10 CD 13 00 00  CALLBACK........
  00000D30: 06 48 57 4E 44 5F 5F 24 00 03 10 B2 11 00 00 1D  .HWND__$........
  00000D40: 44 33 44 44 45 56 49 43 45 5F 43 52 45 41 54 49  D3DDEVICE_CREATI
  00000D50: 4F 4E 5F 50 41 52 41 4D 45 54 45 52 53 15 00 03  ON_PARAMETERS...
  00000D60: 10 E0 14 00 00 0E 5F 4C 41 52 47 45 5F 49 4E 54  ......_LARGE_INT
  00000D70: 45 47 45 52 19 00 03 10 D1 13 00 00 12 5F 44 53  EGER........._DS
  00000D80: 45 46 46 45 43 54 49 4D 41 47 45 44 45 53 43 1D  EFFECTIMAGEDESC.
  00000D90: 00 03 10 90 10 00 00 16 5F 44 33 44 54 52 41 4E  ........_D3DTRAN
  00000DA0: 53 46 4F 52 4D 53 54 41 54 45 54 59 50 45 1C 00  SFORMSTATETYPE..
  00000DB0: 03 10 EA 14 00 00 15 5F 44 33 44 56 45 52 54 45  ......._D3DVERTE
  00000DC0: 58 53 48 41 44 45 52 49 4E 50 55 54 15 00 03 10  XSHADERINPUT....
  00000DD0: DB 13 00 00 0E 44 53 4F 55 54 50 55 54 4C 45 56  .....DSOUTPUTLEV
  00000DE0: 45 4C 53 11 00 03 10 1F 12 00 00 0A 5F 44 33 44  ELS........._D3D
  00000DF0: 4D 41 54 52 49 58 13 00 03 10 E4 14 00 00 0C 4C  MATRIX.........L
  00000E00: 50 43 44 53 4D 49 58 42 49 4E 53 11 00 03 10 19  PCDSMIXBINS.....
  00000E10: 10 00 00 0A 44 33 44 44 45 56 54 59 50 45 0C 00  ....D3DDEVTYPE..
  00000E20: 03 10 11 12 00 00 05 50 4F 49 4E 54 15 00 03 10  .......POINT....
  00000E30: 56 13 00 00 0E 5F 44 33 44 43 4F 4C 4F 52 56 41  V...._D3DCOLORVA
  00000E40: 4C 55 45 17 00 03 10 D9 13 00 00 10 5F 44 53 49  LUE........._DSI
  00000E50: 33 44 4C 32 4C 49 53 54 45 4E 45 52 11 00 03 10  3DL2LISTENER....
  00000E60: 0F 12 00 00 0A 44 33 44 50 61 6C 65 74 74 65 16  .....D3DPalette.
  00000E70: 00 03 10 24 14 00 00 0F 5F 44 53 45 4E 56 45 4C  ...$...._DSENVEL
  00000E80: 4F 50 45 44 45 53 43 14 00 03 10 C8 11 00 00 0D  OPEDESC.........
  00000E90: 5F 44 33 44 47 41 4D 4D 41 52 41 4D 50 19 00 03  _D3DGAMMARAMP...
  00000EA0: 10 B6 10 00 00 12 44 33 44 52 45 4E 44 45 52 53  ......D3DRENDERS
  00000EB0: 54 41 54 45 54 59 50 45 11 00 03 10 29 12 00 00  TATETYPE....)...
  00000EC0: 0A 5F 44 33 44 4C 49 47 48 54 38 19 00 03 10 5F  ._D3DLIGHT8...._
  00000ED0: 14 00 00 12 49 44 69 72 65 63 74 53 6F 75 6E 64  ....IDirectSound
  00000EE0: 53 74 72 65 61 6D 1B 00 03 10 E2 14 00 00 14 4C  Stream.........L
  00000EF0: 50 43 44 53 42 50 4F 53 49 54 49 4F 4E 4E 4F 54  PCDSBPOSITIONNOT
  00000F00: 49 46 59 0E 00 03 10 8D 12 00 00 07 5F 44 33 44  IFY........._D3D
  00000F10: 42 4F 58 16 00 03 10 E1 14 00 00 0F 4C 50 43 44  BOX.........LPCD
  00000F20: 53 53 54 52 45 41 4D 44 45 53 43 17 00 03 10 E6  SSTREAMDESC.....
  00000F30: 11 00 00 10 44 33 44 56 6F 6C 75 6D 65 54 65 78  ....D3DVolumeTex
  00000F40: 74 75 72 65 19 00 03 10 36 14 00 00 12 5F 44 53  ture....6...._DS
  00000F50: 42 50 4F 53 49 54 49 4F 4E 4E 4F 54 49 46 59 0F  BPOSITIONNOTIFY.
  00000F60: 00 03 10 6C 14 00 00 08 53 77 69 7A 7A 6C 65 72  ...l....Swizzler
  00000F70: 15 00 03 10 13 00 00 00 0E 52 45 46 45 52 45 4E  .........REFEREN
  00000F80: 43 45 5F 54 49 4D 45 14 00 03 10 CA 14 00 00 0D  CE_TIME.........
  00000F90: 44 33 44 56 42 4C 41 4E 4B 44 41 54 41 13 00 03  D3DVBLANKDATA...
  00000FA0: 10 A8 14 00 00 0C 5F 44 53 45 46 46 45 43 54 4D  ......_DSEFFECTM
  00000FB0: 41 50 14 00 03 10 E0 14 00 00 0D 4C 41 52 47 45  AP.........LARGE
  00000FC0: 5F 49 4E 54 45 47 45 52 15 00 03 10 F2 11 00 00  _INTEGER........
  00000FD0: 0E 44 33 44 43 75 62 65 54 65 78 74 75 72 65 13  .D3DCubeTexture.
  00000FE0: 00 03 10 DC 14 00 00 0C 58 4D 65 64 69 61 4F 62  ........XMediaOb
  00000FF0: 6A 65 63 74 18 00 03 10 C5 11 00 00 11 5F 44 33  ject........._D3
  00001000: 44 52 41 53 54 45 52 5F 53 54 41 54 55 53 14 00  DRASTER_STATUS..
  00001010: 03 10 AB 11 00 00 0D 44 33 44 53 57 41 50 45 46  .......D3DSWAPEF
  00001020: 46 45 43 54 16 00 03 10 D9 13 00 00 0F 44 53 49  FECT.........DSI
  00001030: 33 44 4C 32 4C 49 53 54 45 4E 45 52 0C 00 03 10  3DL2LISTENER....
  00001040: 03 04 00 00 05 50 56 4F 49 44 15 00 03 10 CA 14  .....PVOID......
  00001050: 00 00 0E 5F 44 33 44 56 42 4C 41 4E 4B 44 41 54  ..._D3DVBLANKDAT
  00001060: 41 15 00 03 10 23 11 00 00 0E 44 33 44 50 41 4C  A....#....D3DPAL
  00001070: 45 54 54 45 53 49 5A 45 14 00 03 10 24 12 00 00  ETTESIZE....$...
  00001080: 0D 5F 44 33 44 4D 41 54 45 52 49 41 4C 38 15 00  ._D3DMATERIAL8..
  00001090: 03 10 24 14 00 00 0E 44 53 45 4E 56 45 4C 4F 50  ..$....DSENVELOP
  000010A0: 45 44 45 53 43 0E 00 03 10 22 00 00 00 07 53 57  EDESC...."....SW
  000010B0: 49 5A 4E 55 4D 17 00 03 10 64 12 00 00 10 5F 44  IZNUM....d...._D
  000010C0: 33 44 53 54 52 45 41 4D 5F 49 4E 50 55 54 13 00  3DSTREAM_INPUT..
  000010D0: 03 10 36 12 00 00 0C 44 33 44 42 41 53 49 53 54  ..6....D3DBASIST
  000010E0: 59 50 45 16 00 03 10 40 12 00 00 0F 44 33 44 46  YPE....@....D3DF
  000010F0: 49 45 4C 44 5F 53 54 41 54 55 53 16 00 03 10 82  IELD_STATUS.....
  00001100: 12 00 00 0F 5F 44 33 44 56 4F 4C 55 4D 45 5F 44  ...._D3DVOLUME_D
  00001110: 45 53 43 1D 00 03 10 15 12 00 00 16 44 33 44 43  ESC.........D3DC
  00001120: 4F 50 59 52 45 43 54 43 4F 4C 4F 52 46 4F 52 4D  OPYRECTCOLORFORM
  00001130: 41 54 17 00 03 10 19 12 00 00 10 44 33 44 43 4F  AT.........D3DCO
  00001140: 50 59 52 45 43 54 53 54 41 54 45 16 00 03 10 C8  PYRECTSTATE.....
  00001150: 14 00 00 0F 44 33 44 53 57 41 50 43 41 4C 4C 42  ....D3DSWAPCALLB
  00001160: 41 43 4B 1E 00 03 10 B0 11 00 00 17 5F 44 33 44  ACK........._D3D
  00001170: 50 52 45 53 45 4E 54 5F 50 41 52 41 4D 45 54 45  PRESENT_PARAMETE
  00001180: 52 53 5F 19 00 03 10 3A 12 00 00 12 5F 44 33 44  RS_....:...._D3D
  00001190: 52 45 43 54 50 41 54 43 48 5F 49 4E 46 4F 0C 00  RECTPATCH_INFO..
  000011A0: 03 10 22 00 00 00 05 44 57 4F 52 44 13 00 03 10  .."....DWORD....
  000011B0: 38 12 00 00 0C 44 33 44 4F 52 44 45 52 54 59 50  8....D3DORDERTYP
  000011C0: 45 18 00 03 10 3A 12 00 00 11 44 33 44 52 45 43  E....:....D3DREC
  000011D0: 54 50 41 54 43 48 5F 49 4E 46 4F 0D 00 03 10 03  TPATCH_INFO.....
  000011E0: 04 00 00 06 48 41 4E 44 4C 45 12 00 03 10 E3 12  ....HANDLE......
  000011F0: 00 00 0B 44 33 44 58 56 45 43 54 4F 52 34 17 00  ...D3DXVECTOR4..
  00001200: 03 10 40 12 00 00 10 5F 44 33 44 46 49 45 4C 44  ..@...._D3DFIELD
  00001210: 5F 53 54 41 54 55 53 0B 00 03 10 21 00 00 00 04  _STATUS....!....
  00001220: 57 4F 52 44 13 00 03 10 21 12 00 00 0C 44 33 44  WORD....!....D3D
  00001230: 56 49 45 57 50 4F 52 54 38 0B 00 03 10 20 00 00  VIEWPORT8.... ..
  00001240: 00 04 42 59 54 45 12 00 03 10 30 14 00 00 0B 5F  ..BYTE....0...._
  00001250: 44 53 33 44 42 55 46 46 45 52 16 00 03 10 8E 11  DS3DBUFFER......
  00001260: 00 00 0F 44 33 44 43 41 4C 4C 42 41 43 4B 54 59  ...D3DCALLBACKTY
  00001270: 50 45 0E 00 03 10 D5 10 00 00 07 4C 50 43 56 4F  PE.........LPCVO
  00001280: 49 44 0E 00 03 10 1B 12 00 00 07 44 33 44 52 45  ID.........D3DRE
  00001290: 43 54 0F 00 03 10 C6 14 00 00 08 4C 50 44 53 43  CT.........LPDSC
  000012A0: 41 50 53 12 00 03 10 C3 14 00 00 0B 5F 58 4D 45  APS........._XME
  000012B0: 44 49 41 49 4E 46 4F 17 00 03 10 C5 11 00 00 10  DIAINFO.........
  000012C0: 44 33 44 52 41 53 54 45 52 5F 53 54 41 54 55 53  D3DRASTER_STATUS
  000012D0: 14 00 03 10 20 14 00 00 0D 74 57 41 56 45 46 4F  .... ....tWAVEFO
  000012E0: 52 4D 41 54 45 58 0B 00 03 10 C5 14 00 00 04 48  RMATEX.........H
  000012F0: 57 4E 44 18 00 03 10 36 14 00 00 11 44 53 42 50  WND....6....DSBP
  00001300: 4F 53 49 54 49 4F 4E 4E 4F 54 49 46 59 10 00 03  OSITIONNOTIFY...
  00001310: 10 A9 11 00 00 09 44 33 44 44 65 76 69 63 65 16  ......D3DDevice.
  00001320: 00 03 10 C4 14 00 00 0F 4C 50 43 44 53 46 49 4C  ........LPCDSFIL
  00001330: 54 45 52 44 45 53 43 13 00 03 10 C1 14 00 00 0C  TERDESC.........
  00001340: 4C 50 58 4D 45 44 49 41 49 4E 46 4F 1E 00 03 10  LPXMEDIAINFO....
  00001350: 38 10 00 00 17 5F 44 33 44 41 44 41 50 54 45 52  8...._D3DADAPTER
  00001360: 5F 49 44 45 4E 54 49 46 49 45 52 38 0C 00 03 10  _IDENTIFIER8....
  00001370: 11 00 00 00 05 53 48 4F 52 54 0B 00 03 10 12 00  .....SHORT......
  00001380: 00 00 04 4C 4F 4E 47 13 00 03 10 24 12 00 00 0C  ...LONG....$....
  00001390: 44 33 44 4D 41 54 45 52 49 41 4C 38 10 00 03 10  D3DMATERIAL8....
  000013A0: 22 14 00 00 09 44 53 4C 46 4F 44 45 53 43 0C 00  "....DSLFODESC..
  000013B0: 03 10 40 00 00 00 05 46 4C 4F 41 54 1B 00 03 10  ..@....FLOAT....
  000013C0: 93 12 00 00 14 5F 44 33 44 49 4E 44 45 58 42 55  ....._D3DINDEXBU
  000013D0: 46 46 45 52 5F 44 45 53 43 18 00 03 10 C0 14 00  FFER_DESC.......
  000013E0: 00 11 5F 44 53 49 33 44 4C 32 4F 43 43 4C 55 53  .._DSI3DL2OCCLUS
  000013F0: 49 4F 4E 1B 00 03 10 17 12 00 00 14 44 33 44 43  ION.........D3DC
  00001400: 4F 50 59 52 45 43 54 4F 50 45 52 41 54 49 4F 4E  OPYRECTOPERATION
  00001410: 11 00 03 10 05 13 00 00 0A 44 33 44 58 4D 41 54  .........D3DXMAT
  00001420: 52 49 58 14 00 03 10 8F 12 00 00 0D 44 33 44 4C  RIX.........D3DL
  00001430: 4F 43 4B 45 44 5F 42 4F 58 0F 00 03 10 1B 12 00  OCKED_BOX.......
  00001440: 00 08 5F 44 33 44 52 45 43 54 18 00 03 10 BE 14  .._D3DRECT......
  00001450: 00 00 11 44 33 44 56 42 4C 41 4E 4B 43 41 4C 4C  ...D3DVBLANKCALL
  00001460: 42 41 43 4B 13 00 03 10 D7 13 00 00 0C 44 53 33  BACK.........DS3
  00001470: 44 4C 49 53 54 45 4E 45 52 1C 00 03 10 22 00 00  DLISTENER...."..
  00001480: 00 15 44 33 44 53 48 41 44 45 52 43 4F 4E 53 54  ..D3DSHADERCONST
  00001490: 41 4E 54 4D 4F 44 45 16 00 03 10 13 04 00 00 0F  ANTMODE.........
  000014A0: 50 52 45 46 45 52 45 4E 43 45 5F 54 49 4D 45 25  PREFERENCE_TIME%
  000014B0: 00 03 10 79 14 00 00 1E 58 47 52 41 50 48 49 43  ...y....XGRAPHIC
  000014C0: 53 3A 3A 74 61 67 42 49 54 4D 41 50 46 49 4C 45  S::tagBITMAPFILE
  000014D0: 48 45 41 44 45 52 17 00 03 10 79 14 00 00 10 42  HEADER....y....B
  000014E0: 49 54 4D 41 50 46 49 4C 45 48 45 41 44 45 52 17  ITMAPFILEHEADER.
  000014F0: 00 03 10 7C 14 00 00 10 42 49 54 4D 41 50 49 4E  ...|....BITMAPIN
  00001500: 46 4F 48 45 41 44 45 52 25 00 03 10 7C 14 00 00  FOHEADER%...|...
  00001510: 1E 58 47 52 41 50 48 49 43 53 3A 3A 74 61 67 42  .XGRAPHICS::tagB
  00001520: 49 54 4D 41 50 49 4E 46 4F 48 45 41 44 45 52 12  ITMAPINFOHEADER.
  00001530: 00 03 10 BD 14 00 00 0B 44 33 44 53 57 41 50 44  ........D3DSWAPD
  00001540: 41 54 41 0D 00 03 10 8D 12 00 00 06 44 33 44 42  ATA.........D3DB
  00001550: 4F 58 14 00 03 10 BB 14 00 00 0D 5F 44 33 44 54  OX........._D3DT
  00001560: 45 58 54 55 52 45 4F 50 0B 00 03 10 B4 11 00 00  EXTUREOP........
  00001570: 04 52 45 43 54 18 00 03 10 34 12 00 00 11 44 33  .RECT....4....D3
  00001580: 44 50 49 58 45 4C 53 48 41 44 45 52 44 45 46 13  DPIXELSHADERDEF.
  00001590: 00 03 10 CB 13 00 00 0C 44 53 53 54 52 45 41 4D  ........DSSTREAM
  000015A0: 44 45 53 43 17 00 03 10 B9 14 00 00 10 4C 50 43  DESC.........LPC
  000015B0: 44 53 49 33 44 4C 32 42 55 46 46 45 52 16 00 03  DSI3DL2BUFFER...
  000015C0: 10 80 12 00 00 0F 5F 44 33 44 4C 4F 43 4B 45 44  ......_D3DLOCKED
  000015D0: 5F 52 45 43 54 19 00 03 10 34 12 00 00 12 5F 44  _RECT....4...._D
  000015E0: 33 44 50 69 78 65 6C 53 68 61 64 65 72 44 65 66  3DPixelShaderDef
  000015F0: 1A 00 03 10 B8 14 00 00 13 5F 44 53 49 33 44 4C  ........._DSI3DL
  00001600: 32 4F 42 53 54 52 55 43 54 49 4F 4E 0E 00 03 10  2OBSTRUCTION....
  00001610: AF 13 00 00 07 5F 44 53 43 41 50 53 16 00 03 10  ....._DSCAPS....
  00001620: B6 14 00 00 0F 4C 50 43 58 4D 45 44 49 41 50 41  .....LPCXMEDIAPA
  00001630: 43 4B 45 54 13 00 03 10 AD 13 00 00 0C 49 44 69  CKET.........IDi
  00001640: 72 65 63 74 53 6F 75 6E 64 0C 00 03 10 05 10 00  rectSound.......
  00001650: 00 05 5F 47 55 49 44 0F 00 03 10 66 12 00 00 08  .._GUID....f....
  00001660: 5F 44 33 44 54 49 4C 45 0E 00 03 10 B4 11 00 00  _D3DTILE........
  00001670: 07 74 61 67 52 45 43 54 17 00 03 10 3C 12 00 00  .tagRECT....<...
  00001680: 10 44 33 44 54 52 49 50 41 54 43 48 5F 49 4E 46  .D3DTRIPATCH_INF
  00001690: 4F 10 00 03 10 68 12 00 00 09 44 33 44 4D 45 4D  O....h....D3DMEM
  000016A0: 4F 52 59 11 00 03 10 54 13 00 00 0A 5F 44 33 44  ORY....T...._D3D
  000016B0: 56 45 43 54 4F 52 18 00 03 10 D3 13 00 00 11 5F  VECTOR........._
  000016C0: 44 53 45 46 46 45 43 54 49 4D 41 47 45 4C 4F 43  DSEFFECTIMAGELOC
  000016D0: 13 00 03 10 C6 13 00 00 0C 44 53 42 55 46 46 45  .........DSBUFFE
  000016E0: 52 44 45 53 43 14 00 03 10 27 14 00 00 0D 5F 44  RDESC....'...._D
  000016F0: 53 46 49 4C 54 45 52 44 45 53 43 16 00 03 10 7E  SFILTERDESC....~
  00001700: 12 00 00 0F 44 33 44 53 55 52 46 41 43 45 5F 44  ....D3DSURFACE_D
  00001710: 45 53 43 16 00 03 10 B3 14 00 00 0F 4C 50 43 44  ESC.........LPCD
  00001720: 53 33 44 4C 49 53 54 45 4E 45 52 13 00 03 10 27  S3DLISTENER....'
  00001730: 14 00 00 0C 44 53 46 49 4C 54 45 52 44 45 53 43  ....DSFILTERDESC
  00001740: 13 00 03 10 A0 14 00 00 0C 58 4D 45 44 49 41 50  .........XMEDIAP
  00001750: 41 43 4B 45 54 19 00 03 10 1E 14 00 00 12 49 44  ACKET.........ID
  00001760: 69 72 65 63 74 53 6F 75 6E 64 42 75 66 66 65 72  irectSoundBuffer
  00001770: 11 00 03 10 2C 14 00 00 0A 5F 44 53 4D 49 58 42  ....,...._DSMIXB
  00001780: 49 4E 53 10 00 03 10 3C 10 00 00 09 5F 44 33 44  INS....<...._D3D
  00001790: 43 41 50 53 38 13 00 03 10 26 12 00 00 0C 44 33  CAPS8....&....D3
  000017A0: 44 4C 49 47 48 54 54 59 50 45 16 00 03 10 FE 11  DLIGHTTYPE......
  000017B0: 00 00 0F 44 33 44 56 65 72 74 65 78 42 75 66 66  ...D3DVertexBuff
  000017C0: 65 72 1C 00 03 10 91 12 00 00 15 5F 44 33 44 56  er........._D3DV
  000017D0: 45 52 54 45 58 42 55 46 46 45 52 5F 44 45 53 43  ERTEXBUFFER_DESC
  000017E0: 1A 00 03 10 93 12 00 00 13 44 33 44 49 4E 44 45  .........D3DINDE
  000017F0: 58 42 55 46 46 45 52 5F 44 45 53 43 1A 00 03 10  XBUFFER_DESC....
  00001800: 22 00 00 00 13 44 33 44 4D 55 4C 54 49 53 41 4D  "....D3DMULTISAM
  00001810: 50 4C 45 5F 54 59 50 45 10 00 03 10 2E 13 00 00  PLE_TYPE........
  00001820: 09 44 33 44 58 50 4C 41 4E 45 0A 00 03 10 74 00  .D3DXPLANE....t.
  00001830: 00 00 03 49 4E 54 16 00 03 10 3A 10 00 00 0F 5F  ...INT....:...._
  00001840: 44 33 44 44 49 53 50 4C 41 59 4D 4F 44 45 0F 00  D3DDISPLAYMODE..
  00001850: 03 10 34 10 00 00 08 44 69 72 65 63 74 33 44 16  ..4....Direct3D.
  00001860: 00 03 10 B2 14 00 00 0F 4C 50 43 44 53 42 55 46  ........LPCDSBUF
  00001870: 46 45 52 44 45 53 43 1F 00 03 10 31 12 00 00 18  FERDESC....1....
  00001880: 44 33 44 56 45 52 54 45 58 41 54 54 52 49 42 55  D3DVERTEXATTRIBU
  00001890: 54 45 46 4F 52 4D 41 54 1A 00 03 10 B1 14 00 00  TEFORMAT........
  000018A0: 13 5F 44 53 4D 49 58 42 49 4E 56 4F 4C 55 4D 45  ._DSMIXBINVOLUME
  000018B0: 50 41 49 52 0B 00 03 10 05 10 00 00 04 47 55 49  PAIR.........GUI
  000018C0: 44 14 00 03 10 62 12 00 00 0D 44 33 44 50 75 73  D....b....D3DPus
  000018D0: 68 42 75 66 66 65 72 1A 00 03 10 13 12 00 00 13  hBuffer.........
  000018E0: 44 33 44 43 4F 50 59 52 45 43 54 52 4F 50 53 54  D3DCOPYRECTROPST
  000018F0: 41 54 45 10 00 03 10 2C 14 00 00 09 44 53 4D 49  ATE....,....DSMI
  00001900: 58 42 49 4E 53 0F 00 03 10 73 14 00 00 08 58 47  XBINS....s....XG
  00001910: 42 75 66 66 65 72 18 00 03 10 AF 14 00 00 11 44  Buffer.........D
  00001920: 33 44 50 69 78 65 6C 43 6F 6E 74 61 69 6E 65 72  3DPixelContainer
  00001930: 14 00 03 10 D7 13 00 00 0D 5F 44 53 33 44 4C 49  ........._DS3DLI
  00001940: 53 54 45 4E 45 52 13 00 03 10 C8 11 00 00 0C 44  STENER.........D
  00001950: 33 44 47 41 4D 4D 41 52 41 4D 50 25 00 03 10 B2  3DGAMMARAMP%....
  00001960: 11 00 00 1E 5F 44 33 44 44 45 56 49 43 45 5F 43  ...._D3DDEVICE_C
  00001970: 52 45 41 54 49 4F 4E 5F 50 41 52 41 4D 45 54 45  REATION_PARAMETE
  00001980: 52 53 16 00 03 10 AD 14 00 00 0F 50 53 5F 49 4E  RS.........PS_IN
  00001990: 50 55 54 4D 41 50 50 49 4E 47 15 00 03 10 AB 14  PUTMAPPING......
  000019A0: 00 00 0E 4C 50 57 41 56 45 46 4F 52 4D 41 54 45  ...LPWAVEFORMATE
  000019B0: 58 1D 00 03 10 38 10 00 00 16 44 33 44 41 44 41  X....8....D3DADA
  000019C0: 50 54 45 52 5F 49 44 45 4E 54 49 46 49 45 52 38  PTER_IDENTIFIER8
  000019D0: 1A 00 03 10 B6 10 00 00 13 5F 44 33 44 52 45 4E  ........._D3DREN
  000019E0: 44 45 52 53 54 41 54 45 54 59 50 45 11 00 03 10  DERSTATETYPE....
  000019F0: 22 14 00 00 0A 5F 44 53 4C 46 4F 44 45 53 43 16  "...._DSLFODESC.
  00001A00: 00 03 10 AA 14 00 00 0F 4C 50 43 57 41 56 45 46  ........LPCWAVEF
  00001A10: 4F 52 4D 41 54 45 58 14 00 03 10 56 13 00 00 0D  ORMATEX....V....
  00001A20: 44 33 44 43 4F 4C 4F 52 56 41 4C 55 45 0F 00 03  D3DCOLORVALUE...
  00001A30: 10 11 12 00 00 08 74 61 67 50 4F 49 4E 54 1A 00  ......tagPOINT..
  00001A40: 03 10 A9 14 00 00 13 4C 50 43 44 53 45 46 46 45  .......LPCDSEFFE
  00001A50: 43 54 49 4D 41 47 45 4C 4F 43 0E 00 03 10 12 00  CTIMAGELOC......
  00001A60: 00 00 07 48 52 45 53 55 4C 54 12 00 03 10 A8 14  ...HRESULT......
  00001A70: 00 00 0B 44 53 45 46 46 45 43 54 4D 41 50 0B 00  ...DSEFFECTMAP..
  00001A80: 03 10 75 00 00 00 04 55 49 4E 54 14 00 03 10 C6  ..u....UINT.....
  00001A90: 13 00 00 0D 5F 44 53 42 55 46 46 45 52 44 45 53  ...._DSBUFFERDES
  00001AA0: 43 18 00 03 10 A6 14 00 00 11 4C 50 43 44 53 45  C.........LPCDSE
  00001AB0: 4E 56 45 4C 4F 50 45 44 45 53 43 11 00 03 10 D2  NVELOPEDESC.....
  00001AC0: 11 00 00 0A 44 33 44 54 65 78 74 75 72 65 0F 00  ....D3DTexture..
  00001AD0: 03 10 45 12 00 00 08 44 33 44 46 69 78 75 70 14  ..E....D3DFixup.
  00001AE0: 00 03 10 A0 14 00 00 0D 5F 58 4D 45 44 49 41 50  ........_XMEDIAP
  00001AF0: 41 43 4B 45 54 17 00 03 10 CF 10 00 00 10 44 33  ACKET.........D3
  00001B00: 44 50 52 49 4D 49 54 49 56 45 54 59 50 45        DPRIMITIVETYPE

SECTION HEADER #3
XGRPH_RD name
       0 physical address
       0 virtual address
      58 size of raw data
    2058 file pointer to raw data (00002058 to 000020AF)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
40401040 flags
         Initialized Data
         COMDAT; sym= _D3DDIRTYFROMTEXTURESTATE
         8 byte align
         Read Only

RAW DATA #3
  00000000: 0F 00 00 00 0F 00 00 00 0F 00 00 00 0F 00 00 00  ................
  00000010: 0F 00 00 00 0F 00 00 00 0F 00 00 00 0F 00 00 00  ................
  00000020: 0F 00 00 00 0F 00 00 00 0F 00 00 00 0F 00 00 00  ................
  00000030: 0F 48 00 00 00 08 00 00 00 08 00 00 00 08 00 00  .H..............
  00000040: 00 08 00 00 00 08 00 00 00 08 00 00 00 08 00 00  ................
  00000050: 00 08 00 00 00 04 00 00                          ........

SECTION HEADER #4
XGRPH_RD name
       0 physical address
       0 virtual address
      8C size of raw data
    20B0 file pointer to raw data (000020B0 to 0000213B)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
40401040 flags
         Initialized Data
         COMDAT; sym= _D3DDIRTYFROMRENDERSTATE
         8 byte align
         Read Only

RAW DATA #4
  00000000: 00 20 00 00 00 20 00 00 00 20 00 00 00 20 00 00  . ... ... ... ..
  00000010: 00 20 00 00 00 20 00 00 0F 00 00 00 0F 00 00 00  . ... ..........
  00000020: 0F 00 00 00 0F 00 00 00 00 12 00 00 00 30 00 00  .............0..
  00000030: 00 10 00 00 00 10 00 00 00 10 00 00 00 10 00 00  ................
  00000040: 00 10 00 00 00 10 00 00 00 10 00 00 00 10 00 00  ................
  00000050: 00 10 00 00 00 10 00 00 00 10 00 00 00 10 00 00  ................
  00000060: 00 01 00 00 00 01 00 00 00 09 00 00 00 01 00 00  ................
  00000070: 00 01 00 00 00 01 00 00 00 01 00 00 00 01 00 00  ................
  00000080: 00 00 00 00 00 00 00 00 00 00 00 00              ............

SECTION HEADER #5
XGRPH_RD name
       0 physical address
       0 virtual address
      10 size of raw data
    213C file pointer to raw data (0000213C to 0000214B)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
40301040 flags
         Initialized Data
         COMDAT; sym= _D3DTEXTUREDIRECTENCODE
         4 byte align
         Read Only

RAW DATA #5
  00000000: 00 1B 08 00 40 1B 08 00 80 1B 08 00 C0 1B 08 00  ....@...........

SECTION HEADER #6
XGRPH_RD name
       0 physical address
       0 virtual address
     148 size of raw data
    214C file pointer to raw data (0000214C to 00002293)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
40401040 flags
         Initialized Data
         COMDAT; sym= _D3DSIMPLERENDERSTATEENCODE
         8 byte align
         Read Only

RAW DATA #6
  00000000: 60 02 04 00 64 02 04 00 68 02 04 00 6C 02 04 00  `...d...h...l...
  00000010: 70 02 04 00 74 02 04 00 78 02 04 00 7C 02 04 00  p...t...x...|...
  00000020: 88 02 04 00 8C 02 04 00 60 0A 04 00 64 0A 04 00  ........`...d...
  00000030: 68 0A 04 00 6C 0A 04 00 70 0A 04 00 74 0A 04 00  h...l...p...t...
  00000040: 78 0A 04 00 7C 0A 04 00 80 0A 04 00 84 0A 04 00  x...|...........
  00000050: 88 0A 04 00 8C 0A 04 00 90 0A 04 00 94 0A 04 00  ................
  00000060: 98 0A 04 00 9C 0A 04 00 A0 0A 04 00 A4 0A 04 00  ................
  00000070: A8 0A 04 00 AC 0A 04 00 B0 0A 04 00 B4 0A 04 00  ................
  00000080: B8 0A 04 00 BC 0A 04 00 C0 0A 04 00 C4 0A 04 00  ................
  00000090: C8 0A 04 00 CC 0A 04 00 D0 0A 04 00 D4 0A 04 00  ................
  000000A0: D8 0A 04 00 DC 0A 04 00 F8 17 04 00 20 1E 04 00  ............ ...
  000000B0: 24 1E 04 00 40 1E 04 00 44 1E 04 00 48 1E 04 00  $...@...D...H...
  000000C0: 4C 1E 04 00 50 1E 04 00 54 1E 04 00 58 1E 04 00  L...P...T...X...
  000000D0: 5C 1E 04 00 60 1E 04 00 90 1D 04 00 74 1E 04 00  \...`.......t...
  000000E0: 78 1E 04 00 54 03 04 00 3C 03 04 00 04 03 04 00  x...T...<.......
  000000F0: 00 03 04 00 40 03 04 00 44 03 04 00 48 03 04 00  ....@...D...H...
  00000100: 5C 03 04 00 10 03 04 00 7C 03 04 00 58 03 04 00  \.......|...X...
  00000110: 74 03 04 00 78 03 04 00 64 03 04 00 68 03 04 00  t...x...d...h...
  00000120: 6C 03 04 00 60 03 04 00 50 03 04 00 4C 03 04 00  l...`...P...L...
  00000130: F8 09 04 00 84 03 04 00 88 03 04 00 30 03 04 00  ............0...
  00000140: 34 03 04 00 38 03 04 00                          4...8...

SECTION HEADER #7
XGRPH_RD name
       0 physical address
       0 virtual address
      58 size of raw data
    2294 file pointer to raw data (00002294 to 000022EB)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
40401040 flags
         Initialized Data
         COMDAT; sym= _D3DPRIMITIVETOVERTEXCOUNT
         8 byte align
         Read Only

RAW DATA #7
  00000000: 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  ................
  00000010: 02 00 00 00 00 00 00 00 01 00 00 00 01 00 00 00  ................
  00000020: 01 00 00 00 01 00 00 00 03 00 00 00 00 00 00 00  ................
  00000030: 01 00 00 00 02 00 00 00 01 00 00 00 02 00 00 00  ................
  00000040: 04 00 00 00 00 00 00 00 02 00 00 00 02 00 00 00  ................
  00000050: 00 00 00 00 00 00 00 00                          ........

SECTION HEADER #8
 .XBLD$V name
       0 physical address
       0 virtual address
      10 size of raw data
    22EC file pointer to raw data (000022EC to 000022FB)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
C0301040 flags
         Initialized Data
         COMDAT; sym= _XGraphicsBuildNumber
         4 byte align
         Read Write

RAW DATA #8
  00000000: 58 47 52 41 50 48 43 00 01 00 00 00 30 11 01 40  XGRAPHC.....0..@

SECTION HEADER #9
   XGRPH name
       0 physical address
       0 virtual address
       3 size of raw data
    22FC file pointer to raw data (000022FC to 000022FE)
       0 file pointer to relocation table
    22FF file pointer to line numbers
       0 number of relocations
       1 number of line numbers
60101020 flags
         Code
         COMDAT; sym= _D3DSurface_UnlockRect@4
         1 byte align
         Execute Read

RAW DATA #9
  00000000: C2 04 00                                         ...

LINENUMBERS #9

 Symbol index:       1F Base line number:  2678
 Symbol name = _D3DSurface_UnlockRect@4

SECTION HEADER #A
.debug$S name
       0 physical address
       0 virtual address
      53 size of raw data
    2305 file pointer to raw data (00002305 to 00002357)
    2358 file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #A
  00000000: 3B 00 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  ;...............
  00000010: 03 00 00 00 00 00 00 00 00 00 00 00 98 14 00 00  ................
  00000020: 00 00 00 00 00 00 00 15 44 33 44 53 75 72 66 61  ........D3DSurfa
  00000030: 63 65 5F 55 6E 6C 6F 63 6B 52 65 63 74 10 00 06  ce_UnlockRect...
  00000040: 10 04 00 00 00 51 10 00 00 05 70 54 68 69 73 02  .....Q....pThis.
  00000050: 00 06 00                                         ...

RELOCATIONS #A
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000020  SECREL                     00000000        1F  _D3DSurface_UnlockRect@4
 00000024  SECTION                        0000        1F  _D3DSurface_UnlockRect@4

SECTION HEADER #B
.debug$F name
       0 physical address
       0 virtual address
      10 size of raw data
    236C file pointer to raw data (0000236C to 0000237B)
    237C file pointer to relocation table
       0 file pointer to line numbers
       1 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #B
  00000000: 00 00 00 00 03 00 00 00 00 00 00 00 01 00 00 00  ................

FPO Data (1)
                                             Use Has  Frame
 RVA      Proc Size   Locals  Regs   Prolog  BP  SEH  Type   Params
 00000000         3        0     0        0   N   N    fpo        4

RELOCATIONS #B
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000000  DIR32NB                    00000000        1F  _D3DSurface_UnlockRect@4

SECTION HEADER #C
   XGRPH name
       0 physical address
       0 virtual address
      12 size of raw data
    2386 file pointer to raw data (00002386 to 00002397)
    2398 file pointer to relocation table
    23A2 file pointer to line numbers
       1 number of relocations
       1 number of line numbers
60101020 flags
         Code
         COMDAT; sym= "public: long __stdcall D3DSurface::GetDesc(struct _D3DSURFACE_DESC *)" (?GetDesc@D3DSurface@@QAGJPAU_D3DSURFACE_DESC@@@Z)
         1 byte align
         Execute Read

RAW DATA #C
  00000000: FF 74 24 08 FF 74 24 08 E8 00 00 00 00 33 C0 C2  .t$..t$......3..
  00000010: 08 00                                            ..

RELOCATIONS #C
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000009  REL32                      00000000        2E  _D3DSurface_GetDesc@8

LINENUMBERS #C

 Symbol index:       2C Base line number:  2699
 Symbol name = ?GetDesc@D3DSurface@@QAGJPAU_D3DSURFACE_DESC@@@Z (public: long __stdcall D3DSurface::GetDesc(struct _D3DSURFACE_DESC *))

SECTION HEADER #D
.debug$S name
       0 physical address
       0 virtual address
      62 size of raw data
    23A8 file pointer to raw data (000023A8 to 00002409)
    240A file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #D
  00000000: 39 00 0B 10 00 00 00 00 00 00 00 00 00 00 00 00  9...............
  00000010: 12 00 00 00 00 00 00 00 0F 00 00 00 BC 11 00 00  ................
  00000020: 00 00 00 00 00 00 00 13 44 33 44 53 75 72 66 61  ........D3DSurfa
  00000030: 63 65 3A 3A 47 65 74 44 65 73 63 0F 00 06 10 04  ce::GetDesc.....
  00000040: 00 00 00 B7 11 00 00 04 74 68 69 73 10 00 06 10  ........this....
  00000050: 08 00 00 00 BA 11 00 00 05 70 44 65 73 63 02 00  .........pDesc..
  00000060: 06 00                                            ..

RELOCATIONS #D
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000020  SECREL                     00000000        2C  ?GetDesc@D3DSurface@@QAGJPAU_D3DSURFACE_DESC@@@Z (public: long __stdcall D3DSurface::GetDesc(struct _D3DSURFACE_DESC *))
 00000024  SECTION                        0000        2C  ?GetDesc@D3DSurface@@QAGJPAU_D3DSURFACE_DESC@@@Z (public: long __stdcall D3DSurface::GetDesc(struct _D3DSURFACE_DESC *))

SECTION HEADER #E
.debug$F name
       0 physical address
       0 virtual address
      10 size of raw data
    241E file pointer to raw data (0000241E to 0000242D)
    242E file pointer to relocation table
       0 file pointer to line numbers
       1 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #E
  00000000: 00 00 00 00 12 00 00 00 00 00 00 00 02 00 00 00  ................

FPO Data (1)
                                             Use Has  Frame
 RVA      Proc Size   Locals  Regs   Prolog  BP  SEH  Type   Params
 00000000        18        0     0        0   N   N    fpo        8

RELOCATIONS #E
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000000  DIR32NB                    00000000        2C  ?GetDesc@D3DSurface@@QAGJPAU_D3DSURFACE_DESC@@@Z (public: long __stdcall D3DSurface::GetDesc(struct _D3DSURFACE_DESC *))

SECTION HEADER #F
   XGRPH name
       0 physical address
       0 virtual address
      1A size of raw data
    2438 file pointer to raw data (00002438 to 00002451)
    2452 file pointer to relocation table
    245C file pointer to line numbers
       1 number of relocations
       1 number of line numbers
60101020 flags
         Code
         COMDAT; sym= "public: long __stdcall D3DSurface::LockRect(struct _D3DLOCKED_RECT *,struct tagRECT const *,unsigned long)" (?LockRect@D3DSurface@@QAGJPAU_D3DLOCKED_RECT@@PBUtagRECT@@K@Z)
         1 byte align
         Execute Read

RAW DATA #F
  00000000: FF 74 24 10 FF 74 24 10 FF 74 24 10 FF 74 24 10  .t$..t$..t$..t$.
  00000010: E8 00 00 00 00 33 C0 C2 10 00                    .....3....

RELOCATIONS #F
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000011  REL32                      00000000        3C  _D3DSurface_LockRect@16

LINENUMBERS #F

 Symbol index:       3A Base line number:  2700
 Symbol name = ?LockRect@D3DSurface@@QAGJPAU_D3DLOCKED_RECT@@PBUtagRECT@@K@Z (public: long __stdcall D3DSurface::LockRect(struct _D3DLOCKED_RECT *,struct tagRECT const *,unsigned long))

SECTION HEADER #10
.debug$S name
       0 physical address
       0 virtual address
      8D size of raw data
    2462 file pointer to raw data (00002462 to 000024EE)
    24EF file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #10
  00000000: 3A 00 0B 10 00 00 00 00 00 00 00 00 00 00 00 00  :...............
  00000010: 1A 00 00 00 00 00 00 00 17 00 00 00 C0 11 00 00  ................
  00000020: 00 00 00 00 00 00 00 14 44 33 44 53 75 72 66 61  ........D3DSurfa
  00000030: 63 65 3A 3A 4C 6F 63 6B 52 65 63 74 0F 00 06 10  ce::LockRect....
  00000040: 04 00 00 00 B7 11 00 00 04 74 68 69 73 16 00 06  .........this...
  00000050: 10 08 00 00 00 BE 11 00 00 0B 70 4C 6F 63 6B 65  ..........pLocke
  00000060: 64 52 65 63 74 10 00 06 10 0C 00 00 00 4D 10 00  dRect........M..
  00000070: 00 05 70 52 65 63 74 10 00 06 10 10 00 00 00 22  ..pRect........"
  00000080: 00 00 00 05 46 6C 61 67 73 02 00 06 00           ....Flags....

RELOCATIONS #10
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000020  SECREL                     00000000        3A  ?LockRect@D3DSurface@@QAGJPAU_D3DLOCKED_RECT@@PBUtagRECT@@K@Z (public: long __stdcall D3DSurface::LockRect(struct _D3DLOCKED_RECT *,struct tagRECT const *,unsigned long))
 00000024  SECTION                        0000        3A  ?LockRect@D3DSurface@@QAGJPAU_D3DLOCKED_RECT@@PBUtagRECT@@K@Z (public: long __stdcall D3DSurface::LockRect(struct _D3DLOCKED_RECT *,struct tagRECT const *,unsigned long))

SECTION HEADER #11
.debug$F name
       0 physical address
       0 virtual address
      10 size of raw data
    2503 file pointer to raw data (00002503 to 00002512)
    2513 file pointer to relocation table
       0 file pointer to line numbers
       1 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #11
  00000000: 00 00 00 00 1A 00 00 00 00 00 00 00 04 00 00 00  ................

FPO Data (1)
                                             Use Has  Frame
 RVA      Proc Size   Locals  Regs   Prolog  BP  SEH  Type   Params
 00000000        26        0     0        0   N   N    fpo       16

RELOCATIONS #11
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000000  DIR32NB                    00000000        3A  ?LockRect@D3DSurface@@QAGJPAU_D3DLOCKED_RECT@@PBUtagRECT@@K@Z (public: long __stdcall D3DSurface::LockRect(struct _D3DLOCKED_RECT *,struct tagRECT const *,unsigned long))

SECTION HEADER #12
   XGRPH name
       0 physical address
       0 virtual address
       5 size of raw data
    251D file pointer to raw data (0000251D to 00002521)
       0 file pointer to relocation table
    2522 file pointer to line numbers
       0 number of relocations
       1 number of line numbers
60101020 flags
         Code
         COMDAT; sym= "public: long __stdcall D3DSurface::UnlockRect(void)" (?UnlockRect@D3DSurface@@QAGJXZ)
         1 byte align
         Execute Read

RAW DATA #12
  00000000: 33 C0 C2 04 00                                   3....

LINENUMBERS #12

 Symbol index:       48 Base line number:  2701
 Symbol name = ?UnlockRect@D3DSurface@@QAGJXZ (public: long __stdcall D3DSurface::UnlockRect(void))

SECTION HEADER #13
.debug$S name
       0 physical address
       0 virtual address
      53 size of raw data
    2528 file pointer to raw data (00002528 to 0000257A)
    257B file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #13
  00000000: 3C 00 0B 10 00 00 00 00 00 00 00 00 00 00 00 00  <...............
  00000010: 05 00 00 00 00 00 00 00 02 00 00 00 C1 11 00 00  ................
  00000020: 00 00 00 00 00 00 00 16 44 33 44 53 75 72 66 61  ........D3DSurfa
  00000030: 63 65 3A 3A 55 6E 6C 6F 63 6B 52 65 63 74 0F 00  ce::UnlockRect..
  00000040: 06 10 04 00 00 00 B7 11 00 00 04 74 68 69 73 02  ...........this.
  00000050: 00 06 00                                         ...

RELOCATIONS #13
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000020  SECREL                     00000000        48  ?UnlockRect@D3DSurface@@QAGJXZ (public: long __stdcall D3DSurface::UnlockRect(void))
 00000024  SECTION                        0000        48  ?UnlockRect@D3DSurface@@QAGJXZ (public: long __stdcall D3DSurface::UnlockRect(void))

SECTION HEADER #14
.debug$F name
       0 physical address
       0 virtual address
      10 size of raw data
    258F file pointer to raw data (0000258F to 0000259E)
    259F file pointer to relocation table
       0 file pointer to line numbers
       1 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #14
  00000000: 00 00 00 00 05 00 00 00 00 00 00 00 01 00 00 00  ................

FPO Data (1)
                                             Use Has  Frame
 RVA      Proc Size   Locals  Regs   Prolog  BP  SEH  Type   Params
 00000000         5        0     0        0   N   N    fpo        4

RELOCATIONS #14
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000000  DIR32NB                    00000000        48  ?UnlockRect@D3DSurface@@QAGJXZ (public: long __stdcall D3DSurface::UnlockRect(void))

SECTION HEADER #15
   XGRPH name
       0 physical address
       0 virtual address
     2C5 size of raw data
    25A9 file pointer to raw data (000025A9 to 0000286D)
    286E file pointer to relocation table
    2904 file pointer to line numbers
       F number of relocations
      3B number of line numbers
60101020 flags
         Code
         COMDAT; sym= _XGWriteSurfaceToFile@8
         1 byte align
         Execute Read

RAW DATA #15
  00000000: 55 8B EC 81 EC 6C 03 00 00 53 56 57 8D 45 CC 50  U....l...SVW.E.P
  00000010: FF 75 08 E8 00 00 00 00 8B 4D E4 8B 55 E0 8B C1  .u.......M..U...
  00000020: 0F AF C2 8D 1C 40 8B 45 CC 83 F8 11 89 5D F4 0F  .....@.E.....]..
  00000030: 8C 8E 00 00 00 83 F8 12 7E 0A 83 F8 1C 74 05 83  ........~....t..
  00000040: F8 1E 75 7F 33 FF 6A 28 5E 57 57 6A 02 57 57 68  ..u.3.j(^WWj.WWh
  00000050: 00 00 00 40 FF 75 0C 8D 43 36 66 C7 45 A2 18 00  ...@.u..C6f.E...
  00000060: 89 7D A4 89 75 94 89 55 98 89 4D 9C 66 C7 45 A0  .}..u..U..M.f.E.
  00000070: 01 00 89 5D A8 89 7D AC 89 7D B0 89 7D B4 89 7D  ...]..}..}..}..}
  00000080: B8 66 C7 45 BC 42 4D 89 45 BE 66 89 7D C2 66 89  .f.E.BM.E.f.}.f.
  00000090: 7D C4 C7 45 C6 36 00 00 00 E8 00 00 00 00 83 F8  }..E.6..........
  000000A0: FF 89 45 FC 75 29 E8 00 00 00 00 50 FF 75 0C 8D  ..E.u).....P.u..
  000000B0: 85 94 FE FF FF 68 00 00 00 00 50 E8 00 00 00 00  .....h....P.....
  000000C0: 83 C4 10 B8 05 40 00 80 5F 5E 5B C9 C2 08 00 57  .....@.._^[....W
  000000D0: 8D 4D F8 51 6A 0E 8D 4D BC 51 50 E8 00 00 00 00  .M.Qj..M.QP.....
  000000E0: 57 8D 45 F8 50 56 8D 45 94 50 FF 75 FC E8 00 00  W.E.PV.E.P.u....
  000000F0: 00 00 68 C0 00 00 00 57 8D 45 EC 50 FF 75 08 E8  ..h....W.E.P.u..
  00000100: 00 00 00 00 53 33 F6 E8 00 00 00 00 3B C7 59 89  ....S3......;.Y.
  00000110: 45 E8 74 0A 8B D8 8B 45 F4 89 45 F4 EB 0D 8D 9D  E.t....E..E.....
  00000120: 94 FC FF FF C7 45 F4 00 02 00 00 8B 45 CC 83 E8  .....E......E...
  00000130: 11 0F 84 F3 00 00 00 48 74 0D 83 E8 0A 74 73 48  .......Ht....tsH
  00000140: 48 0F 85 61 01 00 00 8B 45 E4 48 3B C7 89 45 08  H..a....E.H;..E.
  00000150: 0F 8C 43 01 00 00 8B 7D EC 0F AF 7D 08 03 7D F0  ..C....}...}..}.
  00000160: 83 65 0C 00 83 7D E0 00 7E 3E 8A 07 88 04 33 8A  .e...}..~>....3.
  00000170: 47 01 46 88 04 33 8A 47 02 46 88 04 33 8B 45 F4  G.F..3.G.F..3.E.
  00000180: 46 83 C0 FE 83 C7 04 3B F0 72 12 6A 00 8D 45 F8  F......;.r.j..E.
  00000190: 50 56 53 FF 75 FC E8 00 00 00 00 33 F6 FF 45 0C  PVS.u......3..E.
  000001A0: 8B 45 0C 3B 45 E0 7C C2 FF 4D 08 79 A9 E9 E5 00  .E.;E.|..M.y....
  000001B0: 00 00 8B 45 E4 48 3B C7 89 45 08 0F 8C D8 00 00  ...E.H;..E......
  000001C0: 00 8B 7D EC 0F AF 7D 08 03 7D F0 83 65 0C 00 83  ..}...}..}..e...
  000001D0: 7D E0 00 7E 4E 8A 07 C0 E0 03 88 04 33 33 C0 66  }..~N.......33.f
  000001E0: 8B 07 46 C1 E8 02 24 F8 88 04 33 33 C0 66 8B 07  ..F...$...33.f..
  000001F0: 46 C1 E8 07 24 F8 88 04 33 8B 45 F4 46 47 83 C0  F...$...3.E.FG..
  00000200: FE 47 3B F0 72 12 6A 00 8D 45 F8 50 56 53 FF 75  .G;.r.j..E.PVS.u
  00000210: FC E8 00 00 00 00 33 F6 FF 45 0C 8B 45 0C 3B 45  ......3..E..E.;E
  00000220: E0 7C B2 FF 4D 08 79 99 EB 6D 8B 45 E4 48 3B C7  .|..M.y..m.E.H;.
  00000230: 89 45 08 7C 64 8B 7D EC 0F AF 7D 08 03 7D F0 83  .E.|d.}...}..}..
  00000240: 65 0C 00 83 7D E0 00 7E 49 8A 07 C0 E0 03 88 04  e...}..~I.......
  00000250: 33 33 C0 66 8B 07 46 C1 E8 03 24 FC 88 04 33 8A  33.f..F...$...3.
  00000260: 47 01 24 F8 46 88 04 33 8B 45 F4 46 47 83 C0 FE  G.$.F..3.E.FG...
  00000270: 47 3B F0 72 12 6A 00 8D 45 F8 50 56 53 FF 75 FC  G;.r.j..E.PVS.u.
  00000280: E8 00 00 00 00 33 F6 FF 45 0C 8B 45 0C 3B 45 E0  .....3..E..E.;E.
  00000290: 7C B7 FF 4D 08 79 9E 33 FF 57 8D 45 F8 50 56 53  |..M.y.3.W.E.PVS
  000002A0: FF 75 FC E8 00 00 00 00 FF 75 FC E8 00 00 00 00  .u.......u......
  000002B0: 39 7D E8 74 09 FF 75 E8 E8 00 00 00 00 59 33 C0  9}.t..u......Y3.
  000002C0: E9 03 FE FF FF                                   .....

RELOCATIONS #15
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000014  REL32                      00000000        2E  _D3DSurface_GetDesc@8
 0000009A  REL32                      00000000        65  _CreateFileA@28
 000000A7  REL32                      00000000        64  _GetLastError@0
 000000B6  DIR32                      00000000        63  ??_C@_0CF@GEEGBDKJ@Unable?5to?5open?5file?5?$CI?$CFs?$CJ?3?5?5error@ (`string')
 000000BC  REL32                      00000000        60  _sprintf
 000000DC  REL32                      00000000        5F  _WriteFile@20
 000000EE  REL32                      00000000        5F  _WriteFile@20
 00000100  REL32                      00000000        3C  _D3DSurface_LockRect@16
 00000108  REL32                      00000000        5E  ??2@YAPAXI@Z (void * __cdecl operator new(unsigned int))
 00000197  REL32                      00000000        5F  _WriteFile@20
 00000212  REL32                      00000000        5F  _WriteFile@20
 00000281  REL32                      00000000        5F  _WriteFile@20
 000002A4  REL32                      00000000        5F  _WriteFile@20
 000002AC  REL32                      00000000        5D  _CloseHandle@4
 000002B9  REL32                      00000000        5C  ??3@YAXPAX@Z (void __cdecl operator delete(void *))

LINENUMBERS #15

 Symbol index:       5A Base line number:    70
 Symbol name = _XGWriteSurfaceToFile@8
 0000000C(   75)  00000018(   77)  00000026(   86)  00000044(   99)
 00000046(  100)  00000049(  131)  0000009E(  133)  000000A6(  136)
 000000C3(   95)  000000CB(  250)  000000CF(  141)  000000E0(  142)
 000000F2(  144)  00000104(  155)  0000010C(  157)  00000114(  160)
 00000116(  161)  0000011C(  163)  0000011E(  167)  00000124(  168)
 0000012B(  174)  00000147(  178)  00000156(  180)  00000160(  181)
 0000016A(  183)  0000016F(  184)  00000176(  185)  0000017D(  187)
 0000018B(  189)  0000019B(  190)  000001A8(  178)  000001AD(  196)
 000001B2(  221)  000001C1(  223)  000001CB(  224)  000001D5(  226)
 000001DD(  227)  000001EB(  228)  000001F9(  230)  00000206(  232)
 00000216(  233)  00000223(  221)  00000228(  239)  0000022A(  199)
 00000235(  201)  0000023F(  202)  00000249(  204)  00000251(  205)
 0000025F(  206)  00000268(  208)  00000275(  210)  00000285(  211)
 00000292(  199)  00000299(  215)  000002A8(  244)  000002B0(  246)
 000002B5(  247)  000002BE(  249)

SECTION HEADER #16
XGRPH_RD name
       0 physical address
       0 virtual address
      25 size of raw data
    2A66 file pointer to raw data (00002A66 to 00002A8A)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
40301040 flags
         Initialized Data
         COMDAT; sym= "`string'" (??_C@_0CF@GEEGBDKJ@Unable?5to?5open?5file?5?$CI?$CFs?$CJ?3?5?5error@)
         4 byte align
         Read Only

RAW DATA #16
  00000000: 55 6E 61 62 6C 65 20 74 6F 20 6F 70 65 6E 20 66  Unable to open f
  00000010: 69 6C 65 20 28 25 73 29 3A 20 20 65 72 72 6F 72  ile (%s):  error
  00000020: 20 25 78 0A 00                                    %x..

SECTION HEADER #17
.debug$S name
       0 physical address
       0 virtual address
     170 size of raw data
    2A8B file pointer to raw data (00002A8B to 00002BFA)
    2BFB file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #17
  00000000: 3A 00 0B 10 00 00 00 00 00 00 00 00 00 00 00 00  :...............
  00000010: C5 02 00 00 0C 00 00 00 CB 00 00 00 9E 14 00 00  ................
  00000020: 00 00 00 00 00 00 01 14 58 47 57 72 69 74 65 53  ........XGWriteS
  00000030: 75 72 66 61 63 65 54 6F 46 69 6C 65 10 00 06 10  urfaceToFile....
  00000040: 08 00 00 00 51 10 00 00 05 70 53 75 72 66 10 00  ....Q....pSurf..
  00000050: 06 10 0C 00 00 00 75 14 00 00 05 63 50 61 74 68  ......u....cPath
  00000060: 13 00 06 10 CC FF FF FF 7E 12 00 00 08 53 75 72  ........~....Sur
  00000070: 66 44 65 73 63 14 00 06 10 94 FF FF FF 7C 14 00  fDesc........|..
  00000080: 00 09 62 6D 69 68 65 61 64 65 72 15 00 06 10 BC  ..bmiheader.....
  00000090: FF FF FF 79 14 00 00 0A 66 69 6C 65 68 65 61 64  ...y....filehead
  000000A0: 65 72 11 00 06 10 EC FF FF FF 80 12 00 00 06 42  er.............B
  000000B0: 42 4C 6F 63 6B 14 00 06 10 F4 FF FF FF 22 00 00  BLock........"..
  000000C0: 00 09 49 6D 61 67 65 53 69 7A 65 15 00 06 10 F4  ..ImageSize.....
  000000D0: FF FF FF 22 00 00 00 0A 74 6D 70 62 75 66 73 69  ..."....tmpbufsi
  000000E0: 7A 65 15 00 06 10 E8 FF FF FF 20 04 00 00 0A 68  ze........ ....h
  000000F0: 65 61 70 62 75 66 66 65 72 17 00 06 10 F8 FF FF  eapbuffer.......
  00000100: FF 22 00 00 00 0C 42 79 74 65 73 57 72 69 74 74  ."....BytesWritt
  00000110: 65 6E 10 00 06 10 FC FF FF FF 03 04 00 00 05 68  en.............h
  00000120: 46 69 6C 65 16 00 06 10 94 FC FF FF 76 14 00 00  File........v...
  00000130: 0B 73 74 61 63 6B 70 69 78 62 75 66 0E 00 06 10  .stackpixbuf....
  00000140: 08 00 00 00 74 00 00 00 03 72 6F 77 0E 00 06 10  ....t....row....
  00000150: 0C 00 00 00 74 00 00 00 03 63 6F 6C 0E 00 06 10  ....t....col....
  00000160: 94 FE FF FF 7D 14 00 00 03 62 75 66 02 00 06 00  ....}....buf....

RELOCATIONS #17
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000020  SECREL                     00000000        5A  _XGWriteSurfaceToFile@8
 00000024  SECTION                        0000        5A  _XGWriteSurfaceToFile@8

SECTION HEADER #18
.debug$F name
       0 physical address
       0 virtual address
      10 size of raw data
    2C0F file pointer to raw data (00002C0F to 00002C1E)
    2C1F file pointer to relocation table
       0 file pointer to line numbers
       1 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #18
  00000000: 00 00 00 00 C5 02 00 00 DC 00 00 00 02 00 0C D3  ................

FPO Data (1)
                                             Use Has  Frame
 RVA      Proc Size   Locals  Regs   Prolog  BP  SEH  Type   Params
 00000000       709      880     3       12   Y   N    std        8

RELOCATIONS #18
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000000  DIR32NB                    00000000        5A  _XGWriteSurfaceToFile@8

SECTION HEADER #19
.debug$T name
       0 physical address
       0 virtual address
    EFE8 size of raw data
    2C29 file pointer to raw data (00002C29 to 00011C10)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
42100040 flags
         Initialized Data
         Discardable
         1 byte align
         Read Only

RAW DATA #19
  00000000: 02 00 00 00 1A 00 05 10 00 00 80 00 00 00 00 00  ................
  00000010: 00 00 00 00 00 00 00 00 00 00 05 5F 47 55 49 44  ..........._GUID
  00000020: 0A 00 01 10 00 10 00 00 01 00 F2 F1 0A 00 02 10  ................
  00000030: 01 10 00 00 2A 00 00 00 0E 00 03 10 20 00 00 00  ....*....... ...
  00000040: 11 00 00 00 08 00 00 F1 42 00 03 12 05 14 03 00  ........B.......
  00000050: 22 00 00 00 00 00 05 44 61 74 61 31 05 14 03 00  "......Data1....
  00000060: 21 00 00 00 04 00 05 44 61 74 61 32 05 14 03 00  !......Data2....
  00000070: 21 00 00 00 06 00 05 44 61 74 61 33 05 14 03 00  !......Data3....
  00000080: 03 10 00 00 08 00 05 44 61 74 61 34 1A 00 05 10  .......Data4....
  00000090: 04 00 00 00 04 10 00 00 00 00 00 00 00 00 00 00  ................
  000000A0: 10 00 05 5F 47 55 49 44 0A 00 02 10 03 04 00 00  ..._GUID........
  000000B0: 0A 00 00 00 1E 00 05 10 00 00 80 00 00 00 00 00  ................
  000000C0: 00 00 00 00 00 00 00 00 00 00 08 44 69 72 65 63  ...........Direc
  000000D0: 74 33 44 F1 0A 00 02 10 07 10 00 00 0A 00 00 00  t3D.............
  000000E0: 06 00 01 12 00 00 00 00 1A 00 09 10 22 00 00 00  ............"...
  000000F0: 07 10 00 00 00 00 00 00 07 00 00 00 09 10 00 00  ................
  00000100: 00 00 00 00 1A 00 09 10 75 00 00 00 07 10 00 00  ........u.......
  00000110: 00 00 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  00000120: 2E 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  ................
  00000130: 00 00 00 00 00 00 17 5F 44 33 44 41 44 41 50 54  ......._D3DADAPT
  00000140: 45 52 5F 49 44 45 4E 54 49 46 49 45 52 38 F2 F1  ER_IDENTIFIER8..
  00000150: 0A 00 02 10 0C 10 00 00 0A 00 00 00 12 00 01 12  ................
  00000160: 03 00 00 00 75 00 00 00 22 00 00 00 0D 10 00 00  ....u...".......
  00000170: 1A 00 09 10 12 00 00 00 07 10 00 00 00 00 00 00  ................
  00000180: 07 00 03 00 0E 10 00 00 00 00 00 00 0A 00 01 12  ................
  00000190: 01 00 00 00 75 00 00 00 1A 00 09 10 75 00 00 00  ....u.......u...
  000001A0: 07 10 00 00 00 00 00 00 07 00 01 00 10 10 00 00  ................
  000001B0: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  000001C0: 00 00 00 00 00 00 00 00 00 00 0F 5F 44 33 44 44  ..........._D3DD
  000001D0: 49 53 50 4C 41 59 4D 4F 44 45 F2 F1 0A 00 02 10  ISPLAYMODE......
  000001E0: 12 10 00 00 0A 00 00 00 12 00 01 12 03 00 00 00  ................
  000001F0: 75 00 00 00 75 00 00 00 13 10 00 00 1A 00 09 10  u...u...........
  00000200: 12 00 00 00 07 10 00 00 00 00 00 00 07 00 03 00  ................
  00000210: 14 10 00 00 00 00 00 00 0E 00 01 12 02 00 00 00  ................
  00000220: 75 00 00 00 13 10 00 00 1A 00 09 10 12 00 00 00  u...............
  00000230: 07 10 00 00 00 00 00 00 07 00 02 00 16 10 00 00  ................
  00000240: 00 00 00 00 6A 00 03 12 03 04 03 00 01 00 0E 44  ....j..........D
  00000250: 33 44 44 45 56 54 59 50 45 5F 48 41 4C F3 F2 F1  3DDEVTYPE_HAL...
  00000260: 03 04 03 00 02 00 0E 44 33 44 44 45 56 54 59 50  .......D3DDEVTYP
  00000270: 45 5F 52 45 46 F3 F2 F1 03 04 03 00 03 00 0D 44  E_REF..........D
  00000280: 33 44 44 45 56 54 59 50 45 5F 53 57 03 04 03 00  3DDEVTYPE_SW....
  00000290: 04 80 FF FF FF 7F 16 44 33 44 44 45 56 54 59 50  .......D3DDEVTYP
  000002A0: 45 5F 46 4F 52 43 45 5F 44 57 4F 52 44 F3 F2 F1  E_FORCE_DWORD...
  000002B0: 1A 00 07 10 04 00 00 00 74 00 00 00 18 10 00 00  ........t.......
  000002C0: 0B 5F 44 33 44 44 45 56 54 59 50 45 42 06 03 12  ._D3DDEVTYPEB...
  000002D0: 03 04 03 00 00 80 FF 0E 44 33 44 46 4D 54 5F 55  ........D3DFMT_U
  000002E0: 4E 4B 4E 4F 57 4E F2 F1 03 04 03 00 06 00 0F 44  NKNOWN.........D
  000002F0: 33 44 46 4D 54 5F 41 38 52 38 47 38 42 38 F2 F1  3DFMT_A8R8G8B8..
  00000300: 03 04 03 00 07 00 0F 44 33 44 46 4D 54 5F 58 38  .......D3DFMT_X8
  00000310: 52 38 47 38 42 38 F2 F1 03 04 03 00 05 00 0D 44  R8G8B8.........D
  00000320: 33 44 46 4D 54 5F 52 35 47 36 42 35 03 04 03 00  3DFMT_R5G6B5....
  00000330: 27 00 0D 44 33 44 46 4D 54 5F 52 36 47 35 42 35  '..D3DFMT_R6G5B5
  00000340: 03 04 03 00 03 00 0F 44 33 44 46 4D 54 5F 58 31  .......D3DFMT_X1
  00000350: 52 35 47 35 42 35 F2 F1 03 04 03 00 02 00 0F 44  R5G5B5.........D
  00000360: 33 44 46 4D 54 5F 41 31 52 35 47 35 42 35 F2 F1  3DFMT_A1R5G5B5..
  00000370: 03 04 03 00 04 00 0F 44 33 44 46 4D 54 5F 41 34  .......D3DFMT_A4
  00000380: 52 34 47 34 42 34 F2 F1 03 04 03 00 19 00 09 44  R4G4B4.........D
  00000390: 33 44 46 4D 54 5F 41 38 03 04 03 00 3A 00 0F 44  3DFMT_A8....:..D
  000003A0: 33 44 46 4D 54 5F 41 38 42 38 47 38 52 38 F2 F1  3DFMT_A8B8G8R8..
  000003B0: 03 04 03 00 3B 00 0F 44 33 44 46 4D 54 5F 42 38  ....;..D3DFMT_B8
  000003C0: 47 38 52 38 41 38 F2 F1 03 04 03 00 39 00 0F 44  G8R8A8......9..D
  000003D0: 33 44 46 4D 54 5F 52 34 47 34 42 34 41 34 F2 F1  3DFMT_R4G4B4A4..
  000003E0: 03 04 03 00 38 00 0F 44 33 44 46 4D 54 5F 52 35  ....8..D3DFMT_R5
  000003F0: 47 35 42 35 41 31 F2 F1 03 04 03 00 3C 00 0F 44  G5B5A1......<..D
  00000400: 33 44 46 4D 54 5F 52 38 47 38 42 38 41 38 F2 F1  3DFMT_R8G8B8A8..
  00000410: 03 04 03 00 29 00 0B 44 33 44 46 4D 54 5F 52 38  ....)..D3DFMT_R8
  00000420: 42 38 F2 F1 03 04 03 00 28 00 0B 44 33 44 46 4D  B8......(..D3DFM
  00000430: 54 5F 47 38 42 38 F2 F1 03 04 03 00 0B 00 09 44  T_G8B8.........D
  00000440: 33 44 46 4D 54 5F 50 38 03 04 03 00 00 00 09 44  3DFMT_P8.......D
  00000450: 33 44 46 4D 54 5F 4C 38 03 04 03 00 1A 00 0B 44  3DFMT_L8.......D
  00000460: 33 44 46 4D 54 5F 41 38 4C 38 F2 F1 03 04 03 00  3DFMT_A8L8......
  00000470: 01 00 0A 44 33 44 46 4D 54 5F 41 4C 38 F3 F2 F1  ...D3DFMT_AL8...
  00000480: 03 04 03 00 32 00 0A 44 33 44 46 4D 54 5F 4C 31  ....2..D3DFMT_L1
  00000490: 36 F3 F2 F1 03 04 03 00 28 00 0B 44 33 44 46 4D  6.......(..D3DFM
  000004A0: 54 5F 56 38 55 38 F2 F1 03 04 03 00 27 00 0D 44  T_V8U8......'..D
  000004B0: 33 44 46 4D 54 5F 4C 36 56 35 55 35 03 04 03 00  3DFMT_L6V5U5....
  000004C0: 07 00 0F 44 33 44 46 4D 54 5F 58 38 4C 38 56 38  ...D3DFMT_X8L8V8
  000004D0: 55 38 F2 F1 03 04 03 00 3A 00 0F 44 33 44 46 4D  U8......:..D3DFM
  000004E0: 54 5F 51 38 57 38 56 38 55 38 F2 F1 03 04 03 00  T_Q8W8V8U8......
  000004F0: 33 00 0D 44 33 44 46 4D 54 5F 56 31 36 55 31 36  3..D3DFMT_V16U16
  00000500: 03 04 03 00 2C 00 13 44 33 44 46 4D 54 5F 44 31  ....,..D3DFMT_D1
  00000510: 36 5F 4C 4F 43 4B 41 42 4C 45 F2 F1 03 04 03 00  6_LOCKABLE......
  00000520: 2C 00 0A 44 33 44 46 4D 54 5F 44 31 36 F3 F2 F1  ,..D3DFMT_D16...
  00000530: 03 04 03 00 2A 00 0C 44 33 44 46 4D 54 5F 44 32  ....*..D3DFMT_D2
  00000540: 34 53 38 F1 03 04 03 00 2D 00 0A 44 33 44 46 4D  4S8.....-..D3DFM
  00000550: 54 5F 46 31 36 F3 F2 F1 03 04 03 00 2B 00 0C 44  T_F16.......+..D
  00000560: 33 44 46 4D 54 5F 46 32 34 53 38 F1 03 04 03 00  3DFMT_F24S8.....
  00000570: 24 00 0B 44 33 44 46 4D 54 5F 59 55 59 32 F2 F1  $..D3DFMT_YUY2..
  00000580: 03 04 03 00 25 00 0B 44 33 44 46 4D 54 5F 55 59  ....%..D3DFMT_UY
  00000590: 56 59 F2 F1 03 04 03 00 0C 00 0B 44 33 44 46 4D  VY.........D3DFM
  000005A0: 54 5F 44 58 54 31 F2 F1 03 04 03 00 0E 00 0B 44  T_DXT1.........D
  000005B0: 33 44 46 4D 54 5F 44 58 54 32 F2 F1 03 04 03 00  3DFMT_DXT2......
  000005C0: 0E 00 0B 44 33 44 46 4D 54 5F 44 58 54 33 F2 F1  ...D3DFMT_DXT3..
  000005D0: 03 04 03 00 0F 00 0B 44 33 44 46 4D 54 5F 44 58  .......D3DFMT_DX
  000005E0: 54 34 F2 F1 03 04 03 00 0F 00 0B 44 33 44 46 4D  T4.........D3DFM
  000005F0: 54 5F 44 58 54 35 F2 F1 03 04 03 00 10 00 13 44  T_DXT5.........D
  00000600: 33 44 46 4D 54 5F 4C 49 4E 5F 41 31 52 35 47 35  3DFMT_LIN_A1R5G5
  00000610: 42 35 F2 F1 03 04 03 00 1D 00 13 44 33 44 46 4D  B5.........D3DFM
  00000620: 54 5F 4C 49 4E 5F 41 34 52 34 47 34 42 34 F2 F1  T_LIN_A4R4G4B4..
  00000630: 03 04 03 00 1F 00 0D 44 33 44 46 4D 54 5F 4C 49  .......D3DFMT_LI
  00000640: 4E 5F 41 38 03 04 03 00 3F 00 13 44 33 44 46 4D  N_A8....?..D3DFM
  00000650: 54 5F 4C 49 4E 5F 41 38 42 38 47 38 52 38 F2 F1  T_LIN_A8B8G8R8..
  00000660: 03 04 03 00 12 00 13 44 33 44 46 4D 54 5F 4C 49  .......D3DFMT_LI
  00000670: 4E 5F 41 38 52 38 47 38 42 38 F2 F1 03 04 03 00  N_A8R8G8B8......
  00000680: 40 00 13 44 33 44 46 4D 54 5F 4C 49 4E 5F 42 38  @..D3DFMT_LIN_B8
  00000690: 47 38 52 38 41 38 F2 F1 03 04 03 00 17 00 0F 44  G8R8A8.........D
  000006A0: 33 44 46 4D 54 5F 4C 49 4E 5F 47 38 42 38 F2 F1  3DFMT_LIN_G8B8..
  000006B0: 03 04 03 00 3E 00 13 44 33 44 46 4D 54 5F 4C 49  ....>..D3DFMT_LI
  000006C0: 4E 5F 52 34 47 34 42 34 41 34 F2 F1 03 04 03 00  N_R4G4B4A4......
  000006D0: 3D 00 13 44 33 44 46 4D 54 5F 4C 49 4E 5F 52 35  =..D3DFMT_LIN_R5
  000006E0: 47 35 42 35 41 31 F2 F1 03 04 03 00 11 00 11 44  G5B5A1.........D
  000006F0: 33 44 46 4D 54 5F 4C 49 4E 5F 52 35 47 36 42 35  3DFMT_LIN_R5G6B5
  00000700: 03 04 03 00 37 00 11 44 33 44 46 4D 54 5F 4C 49  ....7..D3DFMT_LI
  00000710: 4E 5F 52 36 47 35 42 35 03 04 03 00 16 00 0F 44  N_R6G5B5.......D
  00000720: 33 44 46 4D 54 5F 4C 49 4E 5F 52 38 42 38 F2 F1  3DFMT_LIN_R8B8..
  00000730: 03 04 03 00 41 00 13 44 33 44 46 4D 54 5F 4C 49  ....A..D3DFMT_LI
  00000740: 4E 5F 52 38 47 38 42 38 41 38 F2 F1 03 04 03 00  N_R8G8B8A8......
  00000750: 1C 00 13 44 33 44 46 4D 54 5F 4C 49 4E 5F 58 31  ...D3DFMT_LIN_X1
  00000760: 52 35 47 35 42 35 F2 F1 03 04 03 00 1E 00 13 44  R5G5B5.........D
  00000770: 33 44 46 4D 54 5F 4C 49 4E 5F 58 38 52 38 47 38  3DFMT_LIN_X8R8G8
  00000780: 42 38 F2 F1 03 04 03 00 20 00 0F 44 33 44 46 4D  B8...... ..D3DFM
  00000790: 54 5F 4C 49 4E 5F 41 38 4C 38 F2 F1 03 04 03 00  T_LIN_A8L8......
  000007A0: 1B 00 0E 44 33 44 46 4D 54 5F 4C 49 4E 5F 41 4C  ...D3DFMT_LIN_AL
  000007B0: 38 F3 F2 F1 03 04 03 00 35 00 0E 44 33 44 46 4D  8.......5..D3DFM
  000007C0: 54 5F 4C 49 4E 5F 4C 31 36 F3 F2 F1 03 04 03 00  T_LIN_L16.......
  000007D0: 13 00 0D 44 33 44 46 4D 54 5F 4C 49 4E 5F 4C 38  ...D3DFMT_LIN_L8
  000007E0: 03 04 03 00 36 00 11 44 33 44 46 4D 54 5F 4C 49  ....6..D3DFMT_LI
  000007F0: 4E 5F 56 31 36 55 31 36 03 04 03 00 17 00 0F 44  N_V16U16.......D
  00000800: 33 44 46 4D 54 5F 4C 49 4E 5F 56 38 55 38 F2 F1  3DFMT_LIN_V8U8..
  00000810: 03 04 03 00 37 00 11 44 33 44 46 4D 54 5F 4C 49  ....7..D3DFMT_LI
  00000820: 4E 5F 4C 36 56 35 55 35 03 04 03 00 1E 00 13 44  N_L6V5U5.......D
  00000830: 33 44 46 4D 54 5F 4C 49 4E 5F 58 38 4C 38 56 38  3DFMT_LIN_X8L8V8
  00000840: 55 38 F2 F1 03 04 03 00 12 00 13 44 33 44 46 4D  U8.........D3DFM
  00000850: 54 5F 4C 49 4E 5F 51 38 57 38 56 38 55 38 F2 F1  T_LIN_Q8W8V8U8..
  00000860: 03 04 03 00 2E 00 10 44 33 44 46 4D 54 5F 4C 49  .......D3DFMT_LI
  00000870: 4E 5F 44 32 34 53 38 F1 03 04 03 00 2F 00 10 44  N_D24S8...../..D
  00000880: 33 44 46 4D 54 5F 4C 49 4E 5F 46 32 34 53 38 F1  3DFMT_LIN_F24S8.
  00000890: 03 04 03 00 30 00 0E 44 33 44 46 4D 54 5F 4C 49  ....0..D3DFMT_LI
  000008A0: 4E 5F 44 31 36 F3 F2 F1 03 04 03 00 31 00 0E 44  N_D16.......1..D
  000008B0: 33 44 46 4D 54 5F 4C 49 4E 5F 46 31 36 F3 F2 F1  3DFMT_LIN_F16...
  000008C0: 03 04 03 00 64 00 11 44 33 44 46 4D 54 5F 56 45  ....d..D3DFMT_VE
  000008D0: 52 54 45 58 44 41 54 41 03 04 03 00 65 00 0E 44  RTEXDATA....e..D
  000008E0: 33 44 46 4D 54 5F 49 4E 44 45 58 31 36 F3 F2 F1  3DFMT_INDEX16...
  000008F0: 03 04 03 00 04 80 FF FF FF 7F 12 44 33 44 46 4D  ...........D3DFM
  00000900: 54 5F 46 4F 52 43 45 5F 44 57 4F 52 44 F3 F2 F1  T_FORCE_DWORD...
  00000910: 1A 00 07 10 45 00 00 00 74 00 00 00 1A 10 00 00  ....E...t.......
  00000920: 0A 5F 44 33 44 46 4F 52 4D 41 54 F1 1A 00 01 12  ._D3DFORMAT.....
  00000930: 05 00 00 00 75 00 00 00 19 10 00 00 1B 10 00 00  ....u...........
  00000940: 1B 10 00 00 74 00 00 00 1A 00 09 10 12 00 00 00  ....t...........
  00000950: 07 10 00 00 00 00 00 00 07 00 05 00 1C 10 00 00  ................
  00000960: 00 00 00 00 3E 01 03 12 03 04 03 00 00 00 0D 44  ....>..........D
  00000970: 33 44 52 54 59 50 45 5F 4E 4F 4E 45 03 04 03 00  3DRTYPE_NONE....
  00000980: 01 00 10 44 33 44 52 54 59 50 45 5F 53 55 52 46  ...D3DRTYPE_SURF
  00000990: 41 43 45 F1 03 04 03 00 02 00 0F 44 33 44 52 54  ACE........D3DRT
  000009A0: 59 50 45 5F 56 4F 4C 55 4D 45 F2 F1 03 04 03 00  YPE_VOLUME......
  000009B0: 03 00 10 44 33 44 52 54 59 50 45 5F 54 45 58 54  ...D3DRTYPE_TEXT
  000009C0: 55 52 45 F1 03 04 03 00 04 00 16 44 33 44 52 54  URE........D3DRT
  000009D0: 59 50 45 5F 56 4F 4C 55 4D 45 54 45 58 54 55 52  YPE_VOLUMETEXTUR
  000009E0: 45 F3 F2 F1 03 04 03 00 05 00 14 44 33 44 52 54  E..........D3DRT
  000009F0: 59 50 45 5F 43 55 42 45 54 45 58 54 55 52 45 F1  YPE_CUBETEXTURE.
  00000A00: 03 04 03 00 06 00 15 44 33 44 52 54 59 50 45 5F  .......D3DRTYPE_
  00000A10: 56 45 52 54 45 58 42 55 46 46 45 52 03 04 03 00  VERTEXBUFFER....
  00000A20: 07 00 14 44 33 44 52 54 59 50 45 5F 49 4E 44 45  ...D3DRTYPE_INDE
  00000A30: 58 42 55 46 46 45 52 F1 03 04 03 00 08 00 13 44  XBUFFER........D
  00000A40: 33 44 52 54 59 50 45 5F 50 55 53 48 42 55 46 46  3DRTYPE_PUSHBUFF
  00000A50: 45 52 F2 F1 03 04 03 00 09 00 10 44 33 44 52 54  ER.........D3DRT
  00000A60: 59 50 45 5F 50 41 4C 45 54 54 45 F1 03 04 03 00  YPE_PALETTE.....
  00000A70: 0A 00 0E 44 33 44 52 54 59 50 45 5F 46 49 58 55  ...D3DRTYPE_FIXU
  00000A80: 50 F3 F2 F1 03 04 03 00 04 80 FF FF FF 7F 14 44  P..............D
  00000A90: 33 44 52 54 59 50 45 5F 46 4F 52 43 45 5F 44 57  3DRTYPE_FORCE_DW
  00000AA0: 4F 52 44 F1 22 00 07 10 0C 00 00 00 74 00 00 00  ORD.".......t...
  00000AB0: 1E 10 00 00 10 5F 44 33 44 52 45 53 4F 55 52 43  ....._D3DRESOURC
  00000AC0: 45 54 59 50 45 F3 F2 F1 1E 00 01 12 06 00 00 00  ETYPE...........
  00000AD0: 75 00 00 00 19 10 00 00 1B 10 00 00 22 00 00 00  u..........."...
  00000AE0: 1F 10 00 00 1B 10 00 00 1A 00 09 10 12 00 00 00  ................
  00000AF0: 07 10 00 00 00 00 00 00 07 00 06 00 20 10 00 00  ............ ...
  00000B00: 00 00 00 00 1A 00 01 12 05 00 00 00 75 00 00 00  ............u...
  00000B10: 19 10 00 00 1B 10 00 00 74 00 00 00 22 00 00 00  ........t..."...
  00000B20: 1A 00 09 10 12 00 00 00 07 10 00 00 00 00 00 00  ................
  00000B30: 07 00 05 00 22 10 00 00 00 00 00 00 1A 00 01 12  ...."...........
  00000B40: 05 00 00 00 75 00 00 00 19 10 00 00 1B 10 00 00  ....u...........
  00000B50: 1B 10 00 00 1B 10 00 00 1A 00 09 10 12 00 00 00  ................
  00000B60: 07 10 00 00 00 00 00 00 07 00 05 00 24 10 00 00  ............$...
  00000B70: 00 00 00 00 1E 00 05 10 00 00 80 00 00 00 00 00  ................
  00000B80: 00 00 00 00 00 00 00 00 00 00 09 5F 44 33 44 43  ..........._D3DC
  00000B90: 41 50 53 38 0A 00 02 10 26 10 00 00 0A 00 00 00  APS8....&.......
  00000BA0: 12 00 01 12 03 00 00 00 75 00 00 00 19 10 00 00  ........u.......
  00000BB0: 27 10 00 00 1A 00 09 10 12 00 00 00 07 10 00 00  '...............
  00000BC0: 00 00 00 00 07 00 03 00 28 10 00 00 00 00 00 00  ........(.......
  00000BD0: 2E 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  ................
  00000BE0: 00 00 00 00 00 00 17 5F 44 33 44 50 52 45 53 45  ......._D3DPRESE
  00000BF0: 4E 54 5F 50 41 52 41 4D 45 54 45 52 53 5F F2 F1  NT_PARAMETERS_..
  00000C00: 0A 00 02 10 2A 10 00 00 0A 00 00 00 1E 00 05 10  ....*...........
  00000C10: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00000C20: 00 00 09 44 33 44 44 65 76 69 63 65 0A 00 02 10  ...D3DDevice....
  00000C30: 2C 10 00 00 0A 00 00 00 0A 00 02 10 2D 10 00 00  ,...........-...
  00000C40: 0A 00 00 00 1E 00 01 12 06 00 00 00 75 00 00 00  ............u...
  00000C50: 19 10 00 00 03 04 00 00 22 00 00 00 2B 10 00 00  ........"...+...
  00000C60: 2E 10 00 00 1A 00 09 10 12 00 00 00 07 10 00 00  ................
  00000C70: 00 00 00 00 07 00 06 00 2F 10 00 00 00 00 00 00  ......../.......
  00000C80: 0E 00 01 12 02 00 00 00 22 00 00 00 22 00 00 00  ........"..."...
  00000C90: 1A 00 09 10 12 00 00 00 07 10 00 00 00 00 00 00  ................
  00000CA0: 07 00 02 00 31 10 00 00 00 00 00 00 76 01 03 12  ....1.......v...
  00000CB0: 0B 14 0B 00 0A 10 00 00 06 41 64 64 52 65 66 F1  .........AddRef.
  00000CC0: 0B 14 0B 00 0A 10 00 00 07 52 65 6C 65 61 73 65  .........Release
  00000CD0: 0B 14 0B 00 0B 10 00 00 0F 47 65 74 41 64 61 70  .........GetAdap
  00000CE0: 74 65 72 43 6F 75 6E 74 0B 14 0B 00 0F 10 00 00  terCount........
  00000CF0: 14 47 65 74 41 64 61 70 74 65 72 49 64 65 6E 74  .GetAdapterIdent
  00000D00: 69 66 69 65 72 F3 F2 F1 0B 14 0B 00 11 10 00 00  ifier...........
  00000D10: 13 47 65 74 41 64 61 70 74 65 72 4D 6F 64 65 43  .GetAdapterModeC
  00000D20: 6F 75 6E 74 0B 14 0B 00 15 10 00 00 10 45 6E 75  ount.........Enu
  00000D30: 6D 41 64 61 70 74 65 72 4D 6F 64 65 73 F3 F2 F1  mAdapterModes...
  00000D40: 0B 14 0B 00 17 10 00 00 15 47 65 74 41 64 61 70  .........GetAdap
  00000D50: 74 65 72 44 69 73 70 6C 61 79 4D 6F 64 65 F2 F1  terDisplayMode..
  00000D60: 0B 14 0B 00 1D 10 00 00 0F 43 68 65 63 6B 44 65  .........CheckDe
  00000D70: 76 69 63 65 54 79 70 65 0B 14 0B 00 21 10 00 00  viceType....!...
  00000D80: 11 43 68 65 63 6B 44 65 76 69 63 65 46 6F 72 6D  .CheckDeviceForm
  00000D90: 61 74 F2 F1 0B 14 0B 00 23 10 00 00 1A 43 68 65  at......#....Che
  00000DA0: 63 6B 44 65 76 69 63 65 4D 75 6C 74 69 53 61 6D  ckDeviceMultiSam
  00000DB0: 70 6C 65 54 79 70 65 F1 0B 14 0B 00 25 10 00 00  pleType.....%...
  00000DC0: 16 43 68 65 63 6B 44 65 70 74 68 53 74 65 6E 63  .CheckDepthStenc
  00000DD0: 69 6C 4D 61 74 63 68 F1 0B 14 0B 00 29 10 00 00  ilMatch.....)...
  00000DE0: 0D 47 65 74 44 65 76 69 63 65 43 61 70 73 F2 F1  .GetDeviceCaps..
  00000DF0: 0B 14 0B 00 30 10 00 00 0C 43 72 65 61 74 65 44  ....0....CreateD
  00000E00: 65 76 69 63 65 F3 F2 F1 0B 14 0B 00 32 10 00 00  evice.......2...
  00000E10: 11 53 65 74 50 75 73 68 42 75 66 66 65 72 53 69  .SetPushBufferSi
  00000E20: 7A 65 F2 F1 1E 00 05 10 0E 00 00 00 33 10 00 00  ze..........3...
  00000E30: 00 00 00 00 00 00 00 00 01 00 08 44 69 72 65 63  ...........Direc
  00000E40: 74 33 44 F1 0E 00 03 10 70 00 00 00 11 00 00 00  t3D.....p.......
  00000E50: 00 02 00 F1 1E 00 06 10 00 00 80 00 00 00 00 00  ................
  00000E60: 00 00 0E 5F 4C 41 52 47 45 5F 49 4E 54 45 47 45  ..._LARGE_INTEGE
  00000E70: 52 F3 F2 F1 C6 00 03 12 05 14 03 00 35 10 00 00  R...........5...
  00000E80: 00 00 06 44 72 69 76 65 72 F3 F2 F1 05 14 03 00  ...Driver.......
  00000E90: 35 10 00 00 00 02 0B 44 65 73 63 72 69 70 74 69  5......Descripti
  00000EA0: 6F 6E F2 F1 05 14 03 00 36 10 00 00 00 04 0D 44  on......6......D
  00000EB0: 72 69 76 65 72 56 65 72 73 69 6F 6E 05 14 03 00  riverVersion....
  00000EC0: 22 00 00 00 08 04 08 56 65 6E 64 6F 72 49 64 F1  "......VendorId.
  00000ED0: 05 14 03 00 22 00 00 00 0C 04 08 44 65 76 69 63  ...."......Devic
  00000EE0: 65 49 64 F1 05 14 03 00 22 00 00 00 10 04 08 53  eId....."......S
  00000EF0: 75 62 53 79 73 49 64 F1 05 14 03 00 22 00 00 00  ubSysId....."...
  00000F00: 14 04 08 52 65 76 69 73 69 6F 6E F1 05 14 03 00  ...Revision.....
  00000F10: 00 10 00 00 18 04 10 44 65 76 69 63 65 49 64 65  .......DeviceIde
  00000F20: 6E 74 69 66 69 65 72 F1 05 14 03 00 22 00 00 00  ntifier....."...
  00000F30: 28 04 09 57 48 51 4C 4C 65 76 65 6C 2E 00 05 10  (..WHQLLevel....
  00000F40: 09 00 00 00 37 10 00 00 00 00 00 00 00 00 00 00  ....7...........
  00000F50: 2C 04 17 5F 44 33 44 41 44 41 50 54 45 52 5F 49  ,.._D3DADAPTER_I
  00000F60: 44 45 4E 54 49 46 49 45 52 38 F2 F1 62 00 03 12  DENTIFIER8..b...
  00000F70: 05 14 03 00 75 00 00 00 00 00 05 57 69 64 74 68  ....u......Width
  00000F80: 05 14 03 00 75 00 00 00 04 00 06 48 65 69 67 68  ....u......Heigh
  00000F90: 74 F3 F2 F1 05 14 03 00 75 00 00 00 08 00 0B 52  t.......u......R
  00000FA0: 65 66 72 65 73 68 52 61 74 65 F2 F1 05 14 03 00  efreshRate......
  00000FB0: 22 00 00 00 0C 00 05 46 6C 61 67 73 05 14 03 00  "......Flags....
  00000FC0: 1B 10 00 00 10 00 06 46 6F 72 6D 61 74 F3 F2 F1  .......Format...
  00000FD0: 26 00 05 10 05 00 00 00 39 10 00 00 00 00 00 00  &.......9.......
  00000FE0: 00 00 00 00 14 00 0F 5F 44 33 44 44 49 53 50 4C  ......._D3DDISPL
  00000FF0: 41 59 4D 4F 44 45 F2 F1 92 05 03 12 05 14 03 00  AYMODE..........
  00001000: 19 10 00 00 00 00 0A 44 65 76 69 63 65 54 79 70  .......DeviceTyp
  00001010: 65 F3 F2 F1 05 14 03 00 75 00 00 00 04 00 0E 41  e.......u......A
  00001020: 64 61 70 74 65 72 4F 72 64 69 6E 61 6C F3 F2 F1  dapterOrdinal...
  00001030: 05 14 03 00 22 00 00 00 08 00 04 43 61 70 73 F1  ...."......Caps.
  00001040: 05 14 03 00 22 00 00 00 0C 00 05 43 61 70 73 32  ...."......Caps2
  00001050: 05 14 03 00 22 00 00 00 10 00 05 43 61 70 73 33  ...."......Caps3
  00001060: 05 14 03 00 22 00 00 00 14 00 15 50 72 65 73 65  ...."......Prese
  00001070: 6E 74 61 74 69 6F 6E 49 6E 74 65 72 76 61 6C 73  ntationIntervals
  00001080: 05 14 03 00 22 00 00 00 18 00 0A 43 75 72 73 6F  ...."......Curso
  00001090: 72 43 61 70 73 F3 F2 F1 05 14 03 00 22 00 00 00  rCaps......."...
  000010A0: 1C 00 07 44 65 76 43 61 70 73 F2 F1 05 14 03 00  ...DevCaps......
  000010B0: 22 00 00 00 20 00 11 50 72 69 6D 69 74 69 76 65  "... ..Primitive
  000010C0: 4D 69 73 63 43 61 70 73 05 14 03 00 22 00 00 00  MiscCaps...."...
  000010D0: 24 00 0A 52 61 73 74 65 72 43 61 70 73 F3 F2 F1  $..RasterCaps...
  000010E0: 05 14 03 00 22 00 00 00 28 00 08 5A 43 6D 70 43  ...."...(..ZCmpC
  000010F0: 61 70 73 F1 05 14 03 00 22 00 00 00 2C 00 0C 53  aps....."...,..S
  00001100: 72 63 42 6C 65 6E 64 43 61 70 73 F1 05 14 03 00  rcBlendCaps.....
  00001110: 22 00 00 00 30 00 0D 44 65 73 74 42 6C 65 6E 64  "...0..DestBlend
  00001120: 43 61 70 73 05 14 03 00 22 00 00 00 34 00 0C 41  Caps...."...4..A
  00001130: 6C 70 68 61 43 6D 70 43 61 70 73 F1 05 14 03 00  lphaCmpCaps.....
  00001140: 22 00 00 00 38 00 09 53 68 61 64 65 43 61 70 73  "...8..ShadeCaps
  00001150: 05 14 03 00 22 00 00 00 3C 00 0B 54 65 78 74 75  ...."...<..Textu
  00001160: 72 65 43 61 70 73 F2 F1 05 14 03 00 22 00 00 00  reCaps......"...
  00001170: 40 00 11 54 65 78 74 75 72 65 46 69 6C 74 65 72  @..TextureFilter
  00001180: 43 61 70 73 05 14 03 00 22 00 00 00 44 00 15 43  Caps...."...D..C
  00001190: 75 62 65 54 65 78 74 75 72 65 46 69 6C 74 65 72  ubeTextureFilter
  000011A0: 43 61 70 73 05 14 03 00 22 00 00 00 48 00 17 56  Caps...."...H..V
  000011B0: 6F 6C 75 6D 65 54 65 78 74 75 72 65 46 69 6C 74  olumeTextureFilt
  000011C0: 65 72 43 61 70 73 F2 F1 05 14 03 00 22 00 00 00  erCaps......"...
  000011D0: 4C 00 12 54 65 78 74 75 72 65 41 64 64 72 65 73  L..TextureAddres
  000011E0: 73 43 61 70 73 F3 F2 F1 05 14 03 00 22 00 00 00  sCaps......."...
  000011F0: 50 00 18 56 6F 6C 75 6D 65 54 65 78 74 75 72 65  P..VolumeTexture
  00001200: 41 64 64 72 65 73 73 43 61 70 73 F1 05 14 03 00  AddressCaps.....
  00001210: 22 00 00 00 54 00 08 4C 69 6E 65 43 61 70 73 F1  "...T..LineCaps.
  00001220: 05 14 03 00 22 00 00 00 58 00 0F 4D 61 78 54 65  ...."...X..MaxTe
  00001230: 78 74 75 72 65 57 69 64 74 68 F2 F1 05 14 03 00  xtureWidth......
  00001240: 22 00 00 00 5C 00 10 4D 61 78 54 65 78 74 75 72  "...\..MaxTextur
  00001250: 65 48 65 69 67 68 74 F1 05 14 03 00 22 00 00 00  eHeight....."...
  00001260: 60 00 0F 4D 61 78 56 6F 6C 75 6D 65 45 78 74 65  `..MaxVolumeExte
  00001270: 6E 74 F2 F1 05 14 03 00 22 00 00 00 64 00 10 4D  nt......"...d..M
  00001280: 61 78 54 65 78 74 75 72 65 52 65 70 65 61 74 F1  axTextureRepeat.
  00001290: 05 14 03 00 22 00 00 00 68 00 15 4D 61 78 54 65  ...."...h..MaxTe
  000012A0: 78 74 75 72 65 41 73 70 65 63 74 52 61 74 69 6F  xtureAspectRatio
  000012B0: 05 14 03 00 22 00 00 00 6C 00 0D 4D 61 78 41 6E  ...."...l..MaxAn
  000012C0: 69 73 6F 74 72 6F 70 79 05 14 03 00 40 00 00 00  isotropy....@...
  000012D0: 70 00 0A 4D 61 78 56 65 72 74 65 78 57 F3 F2 F1  p..MaxVertexW...
  000012E0: 05 14 03 00 40 00 00 00 74 00 0D 47 75 61 72 64  ....@...t..Guard
  000012F0: 42 61 6E 64 4C 65 66 74 05 14 03 00 40 00 00 00  BandLeft....@...
  00001300: 78 00 0C 47 75 61 72 64 42 61 6E 64 54 6F 70 F1  x..GuardBandTop.
  00001310: 05 14 03 00 40 00 00 00 7C 00 0E 47 75 61 72 64  ....@...|..Guard
  00001320: 42 61 6E 64 52 69 67 68 74 F3 F2 F1 05 14 03 00  BandRight.......
  00001330: 40 00 00 00 80 00 0F 47 75 61 72 64 42 61 6E 64  @......GuardBand
  00001340: 42 6F 74 74 6F 6D F2 F1 05 14 03 00 40 00 00 00  Bottom......@...
  00001350: 84 00 0D 45 78 74 65 6E 74 73 41 64 6A 75 73 74  ...ExtentsAdjust
  00001360: 05 14 03 00 22 00 00 00 88 00 0B 53 74 65 6E 63  ...."......Stenc
  00001370: 69 6C 43 61 70 73 F2 F1 05 14 03 00 22 00 00 00  ilCaps......"...
  00001380: 8C 00 07 46 56 46 43 61 70 73 F2 F1 05 14 03 00  ...FVFCaps......
  00001390: 22 00 00 00 90 00 0D 54 65 78 74 75 72 65 4F 70  "......TextureOp
  000013A0: 43 61 70 73 05 14 03 00 22 00 00 00 94 00 15 4D  Caps...."......M
  000013B0: 61 78 54 65 78 74 75 72 65 42 6C 65 6E 64 53 74  axTextureBlendSt
  000013C0: 61 67 65 73 05 14 03 00 22 00 00 00 98 00 17 4D  ages...."......M
  000013D0: 61 78 53 69 6D 75 6C 74 61 6E 65 6F 75 73 54 65  axSimultaneousTe
  000013E0: 78 74 75 72 65 73 F2 F1 05 14 03 00 22 00 00 00  xtures......"...
  000013F0: 9C 00 14 56 65 72 74 65 78 50 72 6F 63 65 73 73  ...VertexProcess
  00001400: 69 6E 67 43 61 70 73 F1 05 14 03 00 22 00 00 00  ingCaps....."...
  00001410: A0 00 0F 4D 61 78 41 63 74 69 76 65 4C 69 67 68  ...MaxActiveLigh
  00001420: 74 73 F2 F1 05 14 03 00 22 00 00 00 A4 00 11 4D  ts......"......M
  00001430: 61 78 55 73 65 72 43 6C 69 70 50 6C 61 6E 65 73  axUserClipPlanes
  00001440: 05 14 03 00 22 00 00 00 A8 00 16 4D 61 78 56 65  ...."......MaxVe
  00001450: 72 74 65 78 42 6C 65 6E 64 4D 61 74 72 69 63 65  rtexBlendMatrice
  00001460: 73 F3 F2 F1 05 14 03 00 22 00 00 00 AC 00 19 4D  s......."......M
  00001470: 61 78 56 65 72 74 65 78 42 6C 65 6E 64 4D 61 74  axVertexBlendMat
  00001480: 72 69 78 49 6E 64 65 78 05 14 03 00 40 00 00 00  rixIndex....@...
  00001490: B0 00 0C 4D 61 78 50 6F 69 6E 74 53 69 7A 65 F1  ...MaxPointSize.
  000014A0: 05 14 03 00 22 00 00 00 B4 00 11 4D 61 78 50 72  ...."......MaxPr
  000014B0: 69 6D 69 74 69 76 65 43 6F 75 6E 74 05 14 03 00  imitiveCount....
  000014C0: 22 00 00 00 B8 00 0E 4D 61 78 56 65 72 74 65 78  "......MaxVertex
  000014D0: 49 6E 64 65 78 F3 F2 F1 05 14 03 00 22 00 00 00  Index......."...
  000014E0: BC 00 0A 4D 61 78 53 74 72 65 61 6D 73 F3 F2 F1  ...MaxStreams...
  000014F0: 05 14 03 00 22 00 00 00 C0 00 0F 4D 61 78 53 74  ...."......MaxSt
  00001500: 72 65 61 6D 53 74 72 69 64 65 F2 F1 05 14 03 00  reamStride......
  00001510: 22 00 00 00 C4 00 13 56 65 72 74 65 78 53 68 61  "......VertexSha
  00001520: 64 65 72 56 65 72 73 69 6F 6E F2 F1 05 14 03 00  derVersion......
  00001530: 22 00 00 00 C8 00 14 4D 61 78 56 65 72 74 65 78  "......MaxVertex
  00001540: 53 68 61 64 65 72 43 6F 6E 73 74 F1 05 14 03 00  ShaderConst.....
  00001550: 22 00 00 00 CC 00 12 50 69 78 65 6C 53 68 61 64  "......PixelShad
  00001560: 65 72 56 65 72 73 69 6F 6E F3 F2 F1 05 14 03 00  erVersion.......
  00001570: 40 00 00 00 D0 00 13 4D 61 78 50 69 78 65 6C 53  @......MaxPixelS
  00001580: 68 61 64 65 72 56 61 6C 75 65 F2 F1 1E 00 05 10  haderValue......
  00001590: 35 00 00 00 3B 10 00 00 00 00 00 00 00 00 00 00  5...;...........
  000015A0: D4 00 09 5F 44 33 44 43 41 50 53 38 1A 00 09 10  ..._D3DCAPS8....
  000015B0: 22 00 00 00 2C 10 00 00 00 00 00 00 07 00 00 00  "...,...........
  000015C0: 09 10 00 00 00 00 00 00 0A 00 02 10 08 10 00 00  ................
  000015D0: 0A 00 00 00 0A 00 01 12 01 00 00 00 3E 10 00 00  ............>...
  000015E0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  000015F0: 07 00 01 00 3F 10 00 00 00 00 00 00 0A 00 01 12  ....?...........
  00001600: 01 00 00 00 27 10 00 00 1A 00 09 10 12 00 00 00  ....'...........
  00001610: 2C 10 00 00 00 00 00 00 07 00 01 00 41 10 00 00  ,...........A...
  00001620: 00 00 00 00 0A 00 01 12 01 00 00 00 13 10 00 00  ................
  00001630: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00001640: 07 00 01 00 43 10 00 00 00 00 00 00 36 00 05 10  ....C.......6...
  00001650: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00001660: 00 00 1E 5F 44 33 44 44 45 56 49 43 45 5F 43 52  ..._D3DDEVICE_CR
  00001670: 45 41 54 49 4F 4E 5F 50 41 52 41 4D 45 54 45 52  EATION_PARAMETER
  00001680: 53 F3 F2 F1 0A 00 02 10 45 10 00 00 0A 00 00 00  S.......E.......
  00001690: 0A 00 01 12 01 00 00 00 46 10 00 00 1A 00 09 10  ........F.......
  000016A0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 01 00  ....,...........
  000016B0: 47 10 00 00 00 00 00 00 0A 00 01 12 01 00 00 00  G...............
  000016C0: 2B 10 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  +...........,...
  000016D0: 00 00 00 00 07 00 01 00 49 10 00 00 00 00 00 00  ........I.......
  000016E0: 1E 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  ................
  000016F0: 00 00 00 00 00 00 07 74 61 67 52 45 43 54 F2 F1  .......tagRECT..
  00001700: 0A 00 01 10 4B 10 00 00 01 00 F2 F1 0A 00 02 10  ....K...........
  00001710: 4C 10 00 00 0A 00 00 00 16 00 01 12 04 00 00 00  L...............
  00001720: 4D 10 00 00 4D 10 00 00 03 04 00 00 03 04 00 00  M...M...........
  00001730: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00001740: 07 00 04 00 4E 10 00 00 00 00 00 00 22 00 05 10  ....N......."...
  00001750: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00001760: 00 00 0A 44 33 44 53 75 72 66 61 63 65 F3 F2 F1  ...D3DSurface...
  00001770: 0A 00 02 10 50 10 00 00 0A 00 00 00 0A 00 02 10  ....P...........
  00001780: 51 10 00 00 0A 00 00 00 12 00 01 12 03 00 00 00  Q...............
  00001790: 74 00 00 00 22 00 00 00 52 10 00 00 1A 00 09 10  t..."...R.......
  000017A0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  000017B0: 53 10 00 00 00 00 00 00 26 00 05 10 00 00 80 00  S.......&.......
  000017C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 11 5F  ..............._
  000017D0: 44 33 44 52 41 53 54 45 52 5F 53 54 41 54 55 53  D3DRASTER_STATUS
  000017E0: 0A 00 02 10 55 10 00 00 0A 00 00 00 0A 00 01 12  ....U...........
  000017F0: 01 00 00 00 56 10 00 00 1A 00 09 10 12 00 00 00  ....V...........
  00001800: 2C 10 00 00 00 00 00 00 07 00 01 00 57 10 00 00  ,...........W...
  00001810: 00 00 00 00 22 00 05 10 00 00 80 00 00 00 00 00  ...."...........
  00001820: 00 00 00 00 00 00 00 00 00 00 0D 5F 44 33 44 47  ..........._D3DG
  00001830: 41 4D 4D 41 52 41 4D 50 0A 00 01 10 59 10 00 00  AMMARAMP....Y...
  00001840: 01 00 F2 F1 0A 00 02 10 5A 10 00 00 0A 00 00 00  ........Z.......
  00001850: 0E 00 01 12 02 00 00 00 22 00 00 00 5B 10 00 00  ........"...[...
  00001860: 1A 00 09 10 03 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00001870: 07 00 02 00 5C 10 00 00 00 00 00 00 0A 00 02 10  ....\...........
  00001880: 59 10 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  Y...............
  00001890: 5E 10 00 00 1A 00 09 10 03 00 00 00 2C 10 00 00  ^...........,...
  000018A0: 00 00 00 00 07 00 01 00 5F 10 00 00 00 00 00 00  ........_.......
  000018B0: 22 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  "...............
  000018C0: 00 00 00 00 00 00 0A 44 33 44 54 65 78 74 75 72  .......D3DTextur
  000018D0: 65 F3 F2 F1 0A 00 02 10 61 10 00 00 0A 00 00 00  e.......a.......
  000018E0: 0A 00 02 10 62 10 00 00 0A 00 00 00 22 00 01 12  ....b......."...
  000018F0: 07 00 00 00 75 00 00 00 75 00 00 00 75 00 00 00  ....u...u...u...
  00001900: 22 00 00 00 1B 10 00 00 22 00 00 00 63 10 00 00  "......."...c...
  00001910: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00001920: 07 00 07 00 64 10 00 00 00 00 00 00 26 00 05 10  ....d.......&...
  00001930: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00001940: 00 00 10 44 33 44 56 6F 6C 75 6D 65 54 65 78 74  ...D3DVolumeText
  00001950: 75 72 65 F1 0A 00 02 10 66 10 00 00 0A 00 00 00  ure.....f.......
  00001960: 0A 00 02 10 67 10 00 00 0A 00 00 00 26 00 01 12  ....g.......&...
  00001970: 08 00 00 00 75 00 00 00 75 00 00 00 75 00 00 00  ....u...u...u...
  00001980: 75 00 00 00 22 00 00 00 1B 10 00 00 22 00 00 00  u..."......."...
  00001990: 68 10 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  h...........,...
  000019A0: 00 00 00 00 07 00 08 00 69 10 00 00 00 00 00 00  ........i.......
  000019B0: 26 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  &...............
  000019C0: 00 00 00 00 00 00 0E 44 33 44 43 75 62 65 54 65  .......D3DCubeTe
  000019D0: 78 74 75 72 65 F3 F2 F1 0A 00 02 10 6B 10 00 00  xture.......k...
  000019E0: 0A 00 00 00 0A 00 02 10 6C 10 00 00 0A 00 00 00  ........l.......
  000019F0: 1E 00 01 12 06 00 00 00 75 00 00 00 75 00 00 00  ........u...u...
  00001A00: 22 00 00 00 1B 10 00 00 22 00 00 00 6D 10 00 00  "......."...m...
  00001A10: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00001A20: 07 00 06 00 6E 10 00 00 00 00 00 00 26 00 05 10  ....n.......&...
  00001A30: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00001A40: 00 00 0F 44 33 44 56 65 72 74 65 78 42 75 66 66  ...D3DVertexBuff
  00001A50: 65 72 F2 F1 0A 00 02 10 70 10 00 00 0A 00 00 00  er......p.......
  00001A60: 0A 00 02 10 71 10 00 00 0A 00 00 00 1A 00 01 12  ....q...........
  00001A70: 05 00 00 00 75 00 00 00 22 00 00 00 22 00 00 00  ....u..."..."...
  00001A80: 22 00 00 00 72 10 00 00 1A 00 09 10 12 00 00 00  "...r...........
  00001A90: 2C 10 00 00 00 00 00 00 07 00 05 00 73 10 00 00  ,...........s...
  00001AA0: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  00001AB0: 00 00 00 00 00 00 00 00 00 00 0E 44 33 44 49 6E  ...........D3DIn
  00001AC0: 64 65 78 42 75 66 66 65 72 F3 F2 F1 0A 00 02 10  dexBuffer.......
  00001AD0: 75 10 00 00 0A 00 00 00 0A 00 02 10 76 10 00 00  u...........v...
  00001AE0: 0A 00 00 00 1A 00 01 12 05 00 00 00 75 00 00 00  ............u...
  00001AF0: 22 00 00 00 1B 10 00 00 22 00 00 00 77 10 00 00  "......."...w...
  00001B00: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00001B10: 07 00 05 00 78 10 00 00 00 00 00 00 1E 00 01 12  ....x...........
  00001B20: 06 00 00 00 75 00 00 00 75 00 00 00 1B 10 00 00  ....u...u.......
  00001B30: 22 00 00 00 74 00 00 00 52 10 00 00 1A 00 09 10  "...t...R.......
  00001B40: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 06 00  ....,...........
  00001B50: 7A 10 00 00 00 00 00 00 1A 00 01 12 05 00 00 00  z...............
  00001B60: 75 00 00 00 75 00 00 00 1B 10 00 00 22 00 00 00  u...u......."...
  00001B70: 52 10 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  R...........,...
  00001B80: 00 00 00 00 07 00 05 00 7C 10 00 00 00 00 00 00  ........|.......
  00001B90: 16 00 01 12 04 00 00 00 75 00 00 00 75 00 00 00  ........u...u...
  00001BA0: 1B 10 00 00 52 10 00 00 1A 00 09 10 12 00 00 00  ....R...........
  00001BB0: 2C 10 00 00 00 00 00 00 07 00 04 00 7E 10 00 00  ,...........~...
  00001BC0: 00 00 00 00 1E 00 05 10 00 00 80 00 00 00 00 00  ................
  00001BD0: 00 00 00 00 00 00 00 00 00 00 08 74 61 67 50 4F  ...........tagPO
  00001BE0: 49 4E 54 F1 0A 00 01 10 80 10 00 00 01 00 F2 F1  INT.............
  00001BF0: 0A 00 02 10 81 10 00 00 0A 00 00 00 1A 00 01 12  ................
  00001C00: 05 00 00 00 51 10 00 00 4D 10 00 00 75 00 00 00  ....Q...M...u...
  00001C10: 51 10 00 00 82 10 00 00 1A 00 09 10 12 00 00 00  Q...............
  00001C20: 2C 10 00 00 00 00 00 00 07 00 05 00 83 10 00 00  ,...............
  00001C30: 00 00 00 00 0E 00 01 12 02 00 00 00 51 10 00 00  ............Q...
  00001C40: 51 10 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  Q...........,...
  00001C50: 00 00 00 00 07 00 02 00 85 10 00 00 00 00 00 00  ................
  00001C60: 0A 00 01 12 01 00 00 00 52 10 00 00 1A 00 09 10  ........R.......
  00001C70: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 01 00  ....,...........
  00001C80: 87 10 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  00001C90: 2C 10 00 00 00 00 00 00 07 00 00 00 09 10 00 00  ,...............
  00001CA0: 00 00 00 00 1E 00 05 10 00 00 80 00 00 00 00 00  ................
  00001CB0: 00 00 00 00 00 00 00 00 00 00 08 5F 44 33 44 52  ..........._D3DR
  00001CC0: 45 43 54 F1 0A 00 01 10 8A 10 00 00 01 00 F2 F1  ECT.............
  00001CD0: 0A 00 02 10 8B 10 00 00 0A 00 00 00 1E 00 01 12  ................
  00001CE0: 06 00 00 00 22 00 00 00 8C 10 00 00 22 00 00 00  ...."......."...
  00001CF0: 22 00 00 00 40 00 00 00 22 00 00 00 1A 00 09 10  "...@...".......
  00001D00: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 06 00  ....,...........
  00001D10: 8D 10 00 00 00 00 00 00 0A 01 03 12 03 04 03 00  ................
  00001D20: 00 00 0A 44 33 44 54 53 5F 56 49 45 57 F3 F2 F1  ...D3DTS_VIEW...
  00001D30: 03 04 03 00 01 00 10 44 33 44 54 53 5F 50 52 4F  .......D3DTS_PRO
  00001D40: 4A 45 43 54 49 4F 4E F1 03 04 03 00 02 00 0E 44  JECTION........D
  00001D50: 33 44 54 53 5F 54 45 58 54 55 52 45 30 F3 F2 F1  3DTS_TEXTURE0...
  00001D60: 03 04 03 00 03 00 0E 44 33 44 54 53 5F 54 45 58  .......D3DTS_TEX
  00001D70: 54 55 52 45 31 F3 F2 F1 03 04 03 00 04 00 0E 44  TURE1..........D
  00001D80: 33 44 54 53 5F 54 45 58 54 55 52 45 32 F3 F2 F1  3DTS_TEXTURE2...
  00001D90: 03 04 03 00 05 00 0E 44 33 44 54 53 5F 54 45 58  .......D3DTS_TEX
  00001DA0: 54 55 52 45 33 F3 F2 F1 03 04 03 00 06 00 0B 44  TURE3..........D
  00001DB0: 33 44 54 53 5F 57 4F 52 4C 44 F2 F1 03 04 03 00  3DTS_WORLD......
  00001DC0: 07 00 0C 44 33 44 54 53 5F 57 4F 52 4C 44 31 F1  ...D3DTS_WORLD1.
  00001DD0: 03 04 03 00 08 00 0C 44 33 44 54 53 5F 57 4F 52  .......D3DTS_WOR
  00001DE0: 4C 44 32 F1 03 04 03 00 09 00 0C 44 33 44 54 53  LD2........D3DTS
  00001DF0: 5F 57 4F 52 4C 44 33 F1 03 04 03 00 0A 00 09 44  _WORLD3........D
  00001E00: 33 44 54 53 5F 4D 41 58 03 04 03 00 04 80 FF FF  3DTS_MAX........
  00001E10: FF 7F 11 44 33 44 54 53 5F 46 4F 52 43 45 5F 44  ...D3DTS_FORCE_D
  00001E20: 57 4F 52 44 26 00 07 10 0C 00 00 00 74 00 00 00  WORD&.......t...
  00001E30: 8F 10 00 00 16 5F 44 33 44 54 52 41 4E 53 46 4F  ....._D3DTRANSFO
  00001E40: 52 4D 53 54 41 54 45 54 59 50 45 F1 22 00 05 10  RMSTATETYPE."...
  00001E50: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00001E60: 00 00 0A 5F 44 33 44 4D 41 54 52 49 58 F3 F2 F1  ..._D3DMATRIX...
  00001E70: 0A 00 01 10 91 10 00 00 01 00 F2 F1 0A 00 02 10  ................
  00001E80: 92 10 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  00001E90: 90 10 00 00 93 10 00 00 1A 00 09 10 12 00 00 00  ................
  00001EA0: 2C 10 00 00 00 00 00 00 07 00 02 00 94 10 00 00  ,...............
  00001EB0: 00 00 00 00 0A 00 02 10 91 10 00 00 0A 00 00 00  ................
  00001EC0: 0E 00 01 12 02 00 00 00 90 10 00 00 96 10 00 00  ................
  00001ED0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00001EE0: 07 00 02 00 97 10 00 00 00 00 00 00 22 00 05 10  ............"...
  00001EF0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00001F00: 00 00 0D 5F 44 33 44 56 49 45 57 50 4F 52 54 38  ..._D3DVIEWPORT8
  00001F10: 0A 00 01 10 99 10 00 00 01 00 F2 F1 0A 00 02 10  ................
  00001F20: 9A 10 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  ................
  00001F30: 9B 10 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  ............,...
  00001F40: 00 00 00 00 07 00 01 00 9C 10 00 00 00 00 00 00  ................
  00001F50: 0A 00 02 10 99 10 00 00 0A 00 00 00 0A 00 01 12  ................
  00001F60: 01 00 00 00 9E 10 00 00 1A 00 09 10 12 00 00 00  ................
  00001F70: 2C 10 00 00 00 00 00 00 07 00 01 00 9F 10 00 00  ,...............
  00001F80: 00 00 00 00 22 00 05 10 00 00 80 00 00 00 00 00  ...."...........
  00001F90: 00 00 00 00 00 00 00 00 00 00 0D 5F 44 33 44 4D  ..........._D3DM
  00001FA0: 41 54 45 52 49 41 4C 38 0A 00 01 10 A1 10 00 00  ATERIAL8........
  00001FB0: 01 00 F2 F1 0A 00 02 10 A2 10 00 00 0A 00 00 00  ................
  00001FC0: 0A 00 01 12 01 00 00 00 A3 10 00 00 1A 00 09 10  ................
  00001FD0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 01 00  ....,...........
  00001FE0: A4 10 00 00 00 00 00 00 0A 00 02 10 A1 10 00 00  ................
  00001FF0: 0A 00 00 00 0A 00 01 12 01 00 00 00 A6 10 00 00  ................
  00002000: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00002010: 07 00 01 00 A7 10 00 00 00 00 00 00 22 00 05 10  ............"...
  00002020: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00002030: 00 00 0A 5F 44 33 44 4C 49 47 48 54 38 F3 F2 F1  ..._D3DLIGHT8...
  00002040: 0A 00 01 10 A9 10 00 00 01 00 F2 F1 0A 00 02 10  ................
  00002050: AA 10 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  00002060: 22 00 00 00 AB 10 00 00 1A 00 09 10 12 00 00 00  "...............
  00002070: 2C 10 00 00 00 00 00 00 07 00 02 00 AC 10 00 00  ,...............
  00002080: 00 00 00 00 0A 00 02 10 A9 10 00 00 0A 00 00 00  ................
  00002090: 0E 00 01 12 02 00 00 00 22 00 00 00 AE 10 00 00  ........".......
  000020A0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  000020B0: 07 00 02 00 AF 10 00 00 00 00 00 00 0E 00 01 12  ................
  000020C0: 02 00 00 00 22 00 00 00 74 00 00 00 1A 00 09 10  ...."...t.......
  000020D0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  ....,...........
  000020E0: B1 10 00 00 00 00 00 00 0E 00 01 12 02 00 00 00  ................
  000020F0: 22 00 00 00 74 04 00 00 1A 00 09 10 12 00 00 00  "...t...........
  00002100: 2C 10 00 00 00 00 00 00 07 00 02 00 B3 10 00 00  ,...............
  00002110: 00 00 00 00 7E 10 03 12 03 04 03 00 00 00 0C 44  ....~..........D
  00002120: 33 44 52 53 5F 50 53 5F 4D 49 4E F1 03 04 03 00  3DRS_PS_MIN.....
  00002130: 00 00 14 44 33 44 52 53 5F 50 53 41 4C 50 48 41  ...D3DRS_PSALPHA
  00002140: 49 4E 50 55 54 53 30 F1 03 04 03 00 01 00 14 44  INPUTS0........D
  00002150: 33 44 52 53 5F 50 53 41 4C 50 48 41 49 4E 50 55  3DRS_PSALPHAINPU
  00002160: 54 53 31 F1 03 04 03 00 02 00 14 44 33 44 52 53  TS1........D3DRS
  00002170: 5F 50 53 41 4C 50 48 41 49 4E 50 55 54 53 32 F1  _PSALPHAINPUTS2.
  00002180: 03 04 03 00 03 00 14 44 33 44 52 53 5F 50 53 41  .......D3DRS_PSA
  00002190: 4C 50 48 41 49 4E 50 55 54 53 33 F1 03 04 03 00  LPHAINPUTS3.....
  000021A0: 04 00 14 44 33 44 52 53 5F 50 53 41 4C 50 48 41  ...D3DRS_PSALPHA
  000021B0: 49 4E 50 55 54 53 34 F1 03 04 03 00 05 00 14 44  INPUTS4........D
  000021C0: 33 44 52 53 5F 50 53 41 4C 50 48 41 49 4E 50 55  3DRS_PSALPHAINPU
  000021D0: 54 53 35 F1 03 04 03 00 06 00 14 44 33 44 52 53  TS5........D3DRS
  000021E0: 5F 50 53 41 4C 50 48 41 49 4E 50 55 54 53 36 F1  _PSALPHAINPUTS6.
  000021F0: 03 04 03 00 07 00 14 44 33 44 52 53 5F 50 53 41  .......D3DRS_PSA
  00002200: 4C 50 48 41 49 4E 50 55 54 53 37 F1 03 04 03 00  LPHAINPUTS7.....
  00002210: 08 00 1F 44 33 44 52 53 5F 50 53 46 49 4E 41 4C  ...D3DRS_PSFINAL
  00002220: 43 4F 4D 42 49 4E 45 52 49 4E 50 55 54 53 41 42  COMBINERINPUTSAB
  00002230: 43 44 F2 F1 03 04 03 00 09 00 1E 44 33 44 52 53  CD.........D3DRS
  00002240: 5F 50 53 46 49 4E 41 4C 43 4F 4D 42 49 4E 45 52  _PSFINALCOMBINER
  00002250: 49 4E 50 55 54 53 45 46 47 F3 F2 F1 03 04 03 00  INPUTSEFG.......
  00002260: 0A 00 13 44 33 44 52 53 5F 50 53 43 4F 4E 53 54  ...D3DRS_PSCONST
  00002270: 41 4E 54 30 5F 30 F2 F1 03 04 03 00 0B 00 13 44  ANT0_0.........D
  00002280: 33 44 52 53 5F 50 53 43 4F 4E 53 54 41 4E 54 30  3DRS_PSCONSTANT0
  00002290: 5F 31 F2 F1 03 04 03 00 0C 00 13 44 33 44 52 53  _1.........D3DRS
  000022A0: 5F 50 53 43 4F 4E 53 54 41 4E 54 30 5F 32 F2 F1  _PSCONSTANT0_2..
  000022B0: 03 04 03 00 0D 00 13 44 33 44 52 53 5F 50 53 43  .......D3DRS_PSC
  000022C0: 4F 4E 53 54 41 4E 54 30 5F 33 F2 F1 03 04 03 00  ONSTANT0_3......
  000022D0: 0E 00 13 44 33 44 52 53 5F 50 53 43 4F 4E 53 54  ...D3DRS_PSCONST
  000022E0: 41 4E 54 30 5F 34 F2 F1 03 04 03 00 0F 00 13 44  ANT0_4.........D
  000022F0: 33 44 52 53 5F 50 53 43 4F 4E 53 54 41 4E 54 30  3DRS_PSCONSTANT0
  00002300: 5F 35 F2 F1 03 04 03 00 10 00 13 44 33 44 52 53  _5.........D3DRS
  00002310: 5F 50 53 43 4F 4E 53 54 41 4E 54 30 5F 36 F2 F1  _PSCONSTANT0_6..
  00002320: 03 04 03 00 11 00 13 44 33 44 52 53 5F 50 53 43  .......D3DRS_PSC
  00002330: 4F 4E 53 54 41 4E 54 30 5F 37 F2 F1 03 04 03 00  ONSTANT0_7......
  00002340: 12 00 13 44 33 44 52 53 5F 50 53 43 4F 4E 53 54  ...D3DRS_PSCONST
  00002350: 41 4E 54 31 5F 30 F2 F1 03 04 03 00 13 00 13 44  ANT1_0.........D
  00002360: 33 44 52 53 5F 50 53 43 4F 4E 53 54 41 4E 54 31  3DRS_PSCONSTANT1
  00002370: 5F 31 F2 F1 03 04 03 00 14 00 13 44 33 44 52 53  _1.........D3DRS
  00002380: 5F 50 53 43 4F 4E 53 54 41 4E 54 31 5F 32 F2 F1  _PSCONSTANT1_2..
  00002390: 03 04 03 00 15 00 13 44 33 44 52 53 5F 50 53 43  .......D3DRS_PSC
  000023A0: 4F 4E 53 54 41 4E 54 31 5F 33 F2 F1 03 04 03 00  ONSTANT1_3......
  000023B0: 16 00 13 44 33 44 52 53 5F 50 53 43 4F 4E 53 54  ...D3DRS_PSCONST
  000023C0: 41 4E 54 31 5F 34 F2 F1 03 04 03 00 17 00 13 44  ANT1_4.........D
  000023D0: 33 44 52 53 5F 50 53 43 4F 4E 53 54 41 4E 54 31  3DRS_PSCONSTANT1
  000023E0: 5F 35 F2 F1 03 04 03 00 18 00 13 44 33 44 52 53  _5.........D3DRS
  000023F0: 5F 50 53 43 4F 4E 53 54 41 4E 54 31 5F 36 F2 F1  _PSCONSTANT1_6..
  00002400: 03 04 03 00 19 00 13 44 33 44 52 53 5F 50 53 43  .......D3DRS_PSC
  00002410: 4F 4E 53 54 41 4E 54 31 5F 37 F2 F1 03 04 03 00  ONSTANT1_7......
  00002420: 1A 00 15 44 33 44 52 53 5F 50 53 41 4C 50 48 41  ...D3DRS_PSALPHA
  00002430: 4F 55 54 50 55 54 53 30 03 04 03 00 1B 00 15 44  OUTPUTS0.......D
  00002440: 33 44 52 53 5F 50 53 41 4C 50 48 41 4F 55 54 50  3DRS_PSALPHAOUTP
  00002450: 55 54 53 31 03 04 03 00 1C 00 15 44 33 44 52 53  UTS1.......D3DRS
  00002460: 5F 50 53 41 4C 50 48 41 4F 55 54 50 55 54 53 32  _PSALPHAOUTPUTS2
  00002470: 03 04 03 00 1D 00 15 44 33 44 52 53 5F 50 53 41  .......D3DRS_PSA
  00002480: 4C 50 48 41 4F 55 54 50 55 54 53 33 03 04 03 00  LPHAOUTPUTS3....
  00002490: 1E 00 15 44 33 44 52 53 5F 50 53 41 4C 50 48 41  ...D3DRS_PSALPHA
  000024A0: 4F 55 54 50 55 54 53 34 03 04 03 00 1F 00 15 44  OUTPUTS4.......D
  000024B0: 33 44 52 53 5F 50 53 41 4C 50 48 41 4F 55 54 50  3DRS_PSALPHAOUTP
  000024C0: 55 54 53 35 03 04 03 00 20 00 15 44 33 44 52 53  UTS5.... ..D3DRS
  000024D0: 5F 50 53 41 4C 50 48 41 4F 55 54 50 55 54 53 36  _PSALPHAOUTPUTS6
  000024E0: 03 04 03 00 21 00 15 44 33 44 52 53 5F 50 53 41  ....!..D3DRS_PSA
  000024F0: 4C 50 48 41 4F 55 54 50 55 54 53 37 03 04 03 00  LPHAOUTPUTS7....
  00002500: 22 00 12 44 33 44 52 53 5F 50 53 52 47 42 49 4E  "..D3DRS_PSRGBIN
  00002510: 50 55 54 53 30 F3 F2 F1 03 04 03 00 23 00 12 44  PUTS0.......#..D
  00002520: 33 44 52 53 5F 50 53 52 47 42 49 4E 50 55 54 53  3DRS_PSRGBINPUTS
  00002530: 31 F3 F2 F1 03 04 03 00 24 00 12 44 33 44 52 53  1.......$..D3DRS
  00002540: 5F 50 53 52 47 42 49 4E 50 55 54 53 32 F3 F2 F1  _PSRGBINPUTS2...
  00002550: 03 04 03 00 25 00 12 44 33 44 52 53 5F 50 53 52  ....%..D3DRS_PSR
  00002560: 47 42 49 4E 50 55 54 53 33 F3 F2 F1 03 04 03 00  GBINPUTS3.......
  00002570: 26 00 12 44 33 44 52 53 5F 50 53 52 47 42 49 4E  &..D3DRS_PSRGBIN
  00002580: 50 55 54 53 34 F3 F2 F1 03 04 03 00 27 00 12 44  PUTS4.......'..D
  00002590: 33 44 52 53 5F 50 53 52 47 42 49 4E 50 55 54 53  3DRS_PSRGBINPUTS
  000025A0: 35 F3 F2 F1 03 04 03 00 28 00 12 44 33 44 52 53  5.......(..D3DRS
  000025B0: 5F 50 53 52 47 42 49 4E 50 55 54 53 36 F3 F2 F1  _PSRGBINPUTS6...
  000025C0: 03 04 03 00 29 00 12 44 33 44 52 53 5F 50 53 52  ....)..D3DRS_PSR
  000025D0: 47 42 49 4E 50 55 54 53 37 F3 F2 F1 03 04 03 00  GBINPUTS7.......
  000025E0: 2A 00 13 44 33 44 52 53 5F 50 53 43 4F 4D 50 41  *..D3DRS_PSCOMPA
  000025F0: 52 45 4D 4F 44 45 F2 F1 03 04 03 00 2B 00 1E 44  REMODE......+..D
  00002600: 33 44 52 53 5F 50 53 46 49 4E 41 4C 43 4F 4D 42  3DRS_PSFINALCOMB
  00002610: 49 4E 45 52 43 4F 4E 53 54 41 4E 54 30 F3 F2 F1  INERCONSTANT0...
  00002620: 03 04 03 00 2C 00 1E 44 33 44 52 53 5F 50 53 46  ....,..D3DRS_PSF
  00002630: 49 4E 41 4C 43 4F 4D 42 49 4E 45 52 43 4F 4E 53  INALCOMBINERCONS
  00002640: 54 41 4E 54 31 F3 F2 F1 03 04 03 00 2D 00 13 44  TANT1.......-..D
  00002650: 33 44 52 53 5F 50 53 52 47 42 4F 55 54 50 55 54  3DRS_PSRGBOUTPUT
  00002660: 53 30 F2 F1 03 04 03 00 2E 00 13 44 33 44 52 53  S0.........D3DRS
  00002670: 5F 50 53 52 47 42 4F 55 54 50 55 54 53 31 F2 F1  _PSRGBOUTPUTS1..
  00002680: 03 04 03 00 2F 00 13 44 33 44 52 53 5F 50 53 52  ..../..D3DRS_PSR
  00002690: 47 42 4F 55 54 50 55 54 53 32 F2 F1 03 04 03 00  GBOUTPUTS2......
  000026A0: 30 00 13 44 33 44 52 53 5F 50 53 52 47 42 4F 55  0..D3DRS_PSRGBOU
  000026B0: 54 50 55 54 53 33 F2 F1 03 04 03 00 31 00 13 44  TPUTS3......1..D
  000026C0: 33 44 52 53 5F 50 53 52 47 42 4F 55 54 50 55 54  3DRS_PSRGBOUTPUT
  000026D0: 53 34 F2 F1 03 04 03 00 32 00 13 44 33 44 52 53  S4......2..D3DRS
  000026E0: 5F 50 53 52 47 42 4F 55 54 50 55 54 53 35 F2 F1  _PSRGBOUTPUTS5..
  000026F0: 03 04 03 00 33 00 13 44 33 44 52 53 5F 50 53 52  ....3..D3DRS_PSR
  00002700: 47 42 4F 55 54 50 55 54 53 36 F2 F1 03 04 03 00  GBOUTPUTS6......
  00002710: 34 00 13 44 33 44 52 53 5F 50 53 52 47 42 4F 55  4..D3DRS_PSRGBOU
  00002720: 54 50 55 54 53 37 F2 F1 03 04 03 00 35 00 15 44  TPUTS7......5..D
  00002730: 33 44 52 53 5F 50 53 43 4F 4D 42 49 4E 45 52 43  3DRS_PSCOMBINERC
  00002740: 4F 55 4E 54 03 04 03 00 37 00 12 44 33 44 52 53  OUNT....7..D3DRS
  00002750: 5F 50 53 44 4F 54 4D 41 50 50 49 4E 47 F3 F2 F1  _PSDOTMAPPING...
  00002760: 03 04 03 00 38 00 14 44 33 44 52 53 5F 50 53 49  ....8..D3DRS_PSI
  00002770: 4E 50 55 54 54 45 58 54 55 52 45 F1 03 04 03 00  NPUTTEXTURE.....
  00002780: 39 00 0C 44 33 44 52 53 5F 50 53 5F 4D 41 58 F1  9..D3DRS_PS_MAX.
  00002790: 03 04 03 00 39 00 0B 44 33 44 52 53 5F 5A 46 55  ....9..D3DRS_ZFU
  000027A0: 4E 43 F2 F1 03 04 03 00 3A 00 0F 44 33 44 52 53  NC......:..D3DRS
  000027B0: 5F 41 4C 50 48 41 46 55 4E 43 F2 F1 03 04 03 00  _ALPHAFUNC......
  000027C0: 3B 00 16 44 33 44 52 53 5F 41 4C 50 48 41 42 4C  ;..D3DRS_ALPHABL
  000027D0: 45 4E 44 45 4E 41 42 4C 45 F3 F2 F1 03 04 03 00  ENDENABLE.......
  000027E0: 3C 00 15 44 33 44 52 53 5F 41 4C 50 48 41 54 45  <..D3DRS_ALPHATE
  000027F0: 53 54 45 4E 41 42 4C 45 03 04 03 00 3D 00 0E 44  STENABLE....=..D
  00002800: 33 44 52 53 5F 41 4C 50 48 41 52 45 46 F3 F2 F1  3DRS_ALPHAREF...
  00002810: 03 04 03 00 3E 00 0E 44 33 44 52 53 5F 53 52 43  ....>..D3DRS_SRC
  00002820: 42 4C 45 4E 44 F3 F2 F1 03 04 03 00 3F 00 0F 44  BLEND.......?..D
  00002830: 33 44 52 53 5F 44 45 53 54 42 4C 45 4E 44 F2 F1  3DRS_DESTBLEND..
  00002840: 03 04 03 00 40 00 12 44 33 44 52 53 5F 5A 57 52  ....@..D3DRS_ZWR
  00002850: 49 54 45 45 4E 41 42 4C 45 F3 F2 F1 03 04 03 00  ITEENABLE.......
  00002860: 41 00 12 44 33 44 52 53 5F 44 49 54 48 45 52 45  A..D3DRS_DITHERE
  00002870: 4E 41 42 4C 45 F3 F2 F1 03 04 03 00 42 00 0F 44  NABLE.......B..D
  00002880: 33 44 52 53 5F 53 48 41 44 45 4D 4F 44 45 F2 F1  3DRS_SHADEMODE..
  00002890: 03 04 03 00 43 00 16 44 33 44 52 53 5F 43 4F 4C  ....C..D3DRS_COL
  000028A0: 4F 52 57 52 49 54 45 45 4E 41 42 4C 45 F3 F2 F1  ORWRITEENABLE...
  000028B0: 03 04 03 00 44 00 12 44 33 44 52 53 5F 53 54 45  ....D..D3DRS_STE
  000028C0: 4E 43 49 4C 5A 46 41 49 4C F3 F2 F1 03 04 03 00  NCILZFAIL.......
  000028D0: 45 00 11 44 33 44 52 53 5F 53 54 45 4E 43 49 4C  E..D3DRS_STENCIL
  000028E0: 50 41 53 53 03 04 03 00 46 00 11 44 33 44 52 53  PASS....F..D3DRS
  000028F0: 5F 53 54 45 4E 43 49 4C 46 55 4E 43 03 04 03 00  _STENCILFUNC....
  00002900: 47 00 10 44 33 44 52 53 5F 53 54 45 4E 43 49 4C  G..D3DRS_STENCIL
  00002910: 52 45 46 F1 03 04 03 00 48 00 11 44 33 44 52 53  REF.....H..D3DRS
  00002920: 5F 53 54 45 4E 43 49 4C 4D 41 53 4B 03 04 03 00  _STENCILMASK....
  00002930: 49 00 16 44 33 44 52 53 5F 53 54 45 4E 43 49 4C  I..D3DRS_STENCIL
  00002940: 57 52 49 54 45 4D 41 53 4B F3 F2 F1 03 04 03 00  WRITEMASK.......
  00002950: 4A 00 0D 44 33 44 52 53 5F 42 4C 45 4E 44 4F 50  J..D3DRS_BLENDOP
  00002960: 03 04 03 00 4B 00 10 44 33 44 52 53 5F 42 4C 45  ....K..D3DRS_BLE
  00002970: 4E 44 43 4F 4C 4F 52 F1 03 04 03 00 4C 00 10 44  NDCOLOR.....L..D
  00002980: 33 44 52 53 5F 53 57 41 54 48 57 49 44 54 48 F1  3DRS_SWATHWIDTH.
  00002990: 03 04 03 00 4D 00 1E 44 33 44 52 53 5F 50 4F 4C  ....M..D3DRS_POL
  000029A0: 59 47 4F 4E 4F 46 46 53 45 54 5A 53 4C 4F 50 45  YGONOFFSETZSLOPE
  000029B0: 53 43 41 4C 45 F3 F2 F1 03 04 03 00 4E 00 1A 44  SCALE.......N..D
  000029C0: 33 44 52 53 5F 50 4F 4C 59 47 4F 4E 4F 46 46 53  3DRS_POLYGONOFFS
  000029D0: 45 54 5A 4F 46 46 53 45 54 F3 F2 F1 03 04 03 00  ETZOFFSET.......
  000029E0: 4F 00 17 44 33 44 52 53 5F 50 4F 49 4E 54 4F 46  O..D3DRS_POINTOF
  000029F0: 46 53 45 54 45 4E 41 42 4C 45 F2 F1 03 04 03 00  FSETENABLE......
  00002A00: 50 00 1B 44 33 44 52 53 5F 57 49 52 45 46 52 41  P..D3DRS_WIREFRA
  00002A10: 4D 45 4F 46 46 53 45 54 45 4E 41 42 4C 45 F2 F1  MEOFFSETENABLE..
  00002A20: 03 04 03 00 51 00 17 44 33 44 52 53 5F 53 4F 4C  ....Q..D3DRS_SOL
  00002A30: 49 44 4F 46 46 53 45 54 45 4E 41 42 4C 45 F2 F1  IDOFFSETENABLE..
  00002A40: 03 04 03 00 52 00 10 44 33 44 52 53 5F 53 49 4D  ....R..D3DRS_SIM
  00002A50: 50 4C 45 5F 4D 41 58 F1 03 04 03 00 52 00 0F 44  PLE_MAX.....R..D
  00002A60: 33 44 52 53 5F 46 4F 47 45 4E 41 42 4C 45 F2 F1  3DRS_FOGENABLE..
  00002A70: 03 04 03 00 53 00 12 44 33 44 52 53 5F 46 4F 47  ....S..D3DRS_FOG
  00002A80: 54 41 42 4C 45 4D 4F 44 45 F3 F2 F1 03 04 03 00  TABLEMODE.......
  00002A90: 54 00 0E 44 33 44 52 53 5F 46 4F 47 53 54 41 52  T..D3DRS_FOGSTAR
  00002AA0: 54 F3 F2 F1 03 04 03 00 55 00 0C 44 33 44 52 53  T.......U..D3DRS
  00002AB0: 5F 46 4F 47 45 4E 44 F1 03 04 03 00 56 00 10 44  _FOGEND.....V..D
  00002AC0: 33 44 52 53 5F 46 4F 47 44 45 4E 53 49 54 59 F1  3DRS_FOGDENSITY.
  00002AD0: 03 04 03 00 57 00 14 44 33 44 52 53 5F 52 41 4E  ....W..D3DRS_RAN
  00002AE0: 47 45 46 4F 47 45 4E 41 42 4C 45 F1 03 04 03 00  GEFOGENABLE.....
  00002AF0: 58 00 0B 44 33 44 52 53 5F 57 52 41 50 30 F2 F1  X..D3DRS_WRAP0..
  00002B00: 03 04 03 00 59 00 0B 44 33 44 52 53 5F 57 52 41  ....Y..D3DRS_WRA
  00002B10: 50 31 F2 F1 03 04 03 00 5A 00 0B 44 33 44 52 53  P1......Z..D3DRS
  00002B20: 5F 57 52 41 50 32 F2 F1 03 04 03 00 5B 00 0B 44  _WRAP2......[..D
  00002B30: 33 44 52 53 5F 57 52 41 50 33 F2 F1 03 04 03 00  3DRS_WRAP3......
  00002B40: 5C 00 0E 44 33 44 52 53 5F 4C 49 47 48 54 49 4E  \..D3DRS_LIGHTIN
  00002B50: 47 F3 F2 F1 03 04 03 00 5D 00 14 44 33 44 52 53  G.......]..D3DRS
  00002B60: 5F 53 50 45 43 55 4C 41 52 45 4E 41 42 4C 45 F1  _SPECULARENABLE.
  00002B70: 03 04 03 00 5E 00 11 44 33 44 52 53 5F 4C 4F 43  ....^..D3DRS_LOC
  00002B80: 41 4C 56 49 45 57 45 52 03 04 03 00 5F 00 11 44  ALVIEWER...._..D
  00002B90: 33 44 52 53 5F 43 4F 4C 4F 52 56 45 52 54 45 58  3DRS_COLORVERTEX
  00002BA0: 03 04 03 00 60 00 20 44 33 44 52 53 5F 42 41 43  ....`. D3DRS_BAC
  00002BB0: 4B 53 50 45 43 55 4C 41 52 4D 41 54 45 52 49 41  KSPECULARMATERIA
  00002BC0: 4C 53 4F 55 52 43 45 F1 03 04 03 00 61 00 1F 44  LSOURCE.....a..D
  00002BD0: 33 44 52 53 5F 42 41 43 4B 44 49 46 46 55 53 45  3DRS_BACKDIFFUSE
  00002BE0: 4D 41 54 45 52 49 41 4C 53 4F 55 52 43 45 F2 F1  MATERIALSOURCE..
  00002BF0: 03 04 03 00 62 00 1F 44 33 44 52 53 5F 42 41 43  ....b..D3DRS_BAC
  00002C00: 4B 41 4D 42 49 45 4E 54 4D 41 54 45 52 49 41 4C  KAMBIENTMATERIAL
  00002C10: 53 4F 55 52 43 45 F2 F1 03 04 03 00 63 00 20 44  SOURCE......c. D
  00002C20: 33 44 52 53 5F 42 41 43 4B 45 4D 49 53 53 49 56  3DRS_BACKEMISSIV
  00002C30: 45 4D 41 54 45 52 49 41 4C 53 4F 55 52 43 45 F1  EMATERIALSOURCE.
  00002C40: 03 04 03 00 64 00 1C 44 33 44 52 53 5F 53 50 45  ....d..D3DRS_SPE
  00002C50: 43 55 4C 41 52 4D 41 54 45 52 49 41 4C 53 4F 55  CULARMATERIALSOU
  00002C60: 52 43 45 F1 03 04 03 00 65 00 1B 44 33 44 52 53  RCE.....e..D3DRS
  00002C70: 5F 44 49 46 46 55 53 45 4D 41 54 45 52 49 41 4C  _DIFFUSEMATERIAL
  00002C80: 53 4F 55 52 43 45 F2 F1 03 04 03 00 66 00 1B 44  SOURCE......f..D
  00002C90: 33 44 52 53 5F 41 4D 42 49 45 4E 54 4D 41 54 45  3DRS_AMBIENTMATE
  00002CA0: 52 49 41 4C 53 4F 55 52 43 45 F2 F1 03 04 03 00  RIALSOURCE......
  00002CB0: 67 00 1C 44 33 44 52 53 5F 45 4D 49 53 53 49 56  g..D3DRS_EMISSIV
  00002CC0: 45 4D 41 54 45 52 49 41 4C 53 4F 55 52 43 45 F1  EMATERIALSOURCE.
  00002CD0: 03 04 03 00 68 00 11 44 33 44 52 53 5F 42 41 43  ....h..D3DRS_BAC
  00002CE0: 4B 41 4D 42 49 45 4E 54 03 04 03 00 69 00 0D 44  KAMBIENT....i..D
  00002CF0: 33 44 52 53 5F 41 4D 42 49 45 4E 54 03 04 03 00  3DRS_AMBIENT....
  00002D00: 6A 00 0F 44 33 44 52 53 5F 50 4F 49 4E 54 53 49  j..D3DRS_POINTSI
  00002D10: 5A 45 F2 F1 03 04 03 00 6B 00 13 44 33 44 52 53  ZE......k..D3DRS
  00002D20: 5F 50 4F 49 4E 54 53 49 5A 45 5F 4D 49 4E F2 F1  _POINTSIZE_MIN..
  00002D30: 03 04 03 00 6C 00 17 44 33 44 52 53 5F 50 4F 49  ....l..D3DRS_POI
  00002D40: 4E 54 53 50 52 49 54 45 45 4E 41 42 4C 45 F2 F1  NTSPRITEENABLE..
  00002D50: 03 04 03 00 6D 00 16 44 33 44 52 53 5F 50 4F 49  ....m..D3DRS_POI
  00002D60: 4E 54 53 43 41 4C 45 45 4E 41 42 4C 45 F3 F2 F1  NTSCALEENABLE...
  00002D70: 03 04 03 00 6E 00 12 44 33 44 52 53 5F 50 4F 49  ....n..D3DRS_POI
  00002D80: 4E 54 53 43 41 4C 45 5F 41 F3 F2 F1 03 04 03 00  NTSCALE_A.......
  00002D90: 6F 00 12 44 33 44 52 53 5F 50 4F 49 4E 54 53 43  o..D3DRS_POINTSC
  00002DA0: 41 4C 45 5F 42 F3 F2 F1 03 04 03 00 70 00 12 44  ALE_B.......p..D
  00002DB0: 33 44 52 53 5F 50 4F 49 4E 54 53 43 41 4C 45 5F  3DRS_POINTSCALE_
  00002DC0: 43 F3 F2 F1 03 04 03 00 71 00 13 44 33 44 52 53  C.......q..D3DRS
  00002DD0: 5F 50 4F 49 4E 54 53 49 5A 45 5F 4D 41 58 F2 F1  _POINTSIZE_MAX..
  00002DE0: 03 04 03 00 72 00 14 44 33 44 52 53 5F 50 41 54  ....r..D3DRS_PAT
  00002DF0: 43 48 45 44 47 45 53 54 59 4C 45 F1 03 04 03 00  CHEDGESTYLE.....
  00002E00: 73 00 13 44 33 44 52 53 5F 50 41 54 43 48 53 45  s..D3DRS_PATCHSE
  00002E10: 47 4D 45 4E 54 53 F2 F1 03 04 03 00 74 00 10 44  GMENTS......t..D
  00002E20: 33 44 52 53 5F 53 57 41 50 46 49 4C 54 45 52 F1  3DRS_SWAPFILTER.
  00002E30: 03 04 03 00 75 00 12 44 33 44 52 53 5F 44 45 46  ....u..D3DRS_DEF
  00002E40: 45 52 52 45 44 5F 4D 41 58 F3 F2 F1 03 04 03 00  ERRED_MAX.......
  00002E50: 75 00 14 44 33 44 52 53 5F 50 53 54 45 58 54 55  u..D3DRS_PSTEXTU
  00002E60: 52 45 4D 4F 44 45 53 F1 03 04 03 00 76 00 11 44  REMODES.....v..D
  00002E70: 33 44 52 53 5F 56 45 52 54 45 58 42 4C 45 4E 44  3DRS_VERTEXBLEND
  00002E80: 03 04 03 00 77 00 0E 44 33 44 52 53 5F 46 4F 47  ....w..D3DRS_FOG
  00002E90: 43 4F 4C 4F 52 F3 F2 F1 03 04 03 00 78 00 0E 44  COLOR.......x..D
  00002EA0: 33 44 52 53 5F 46 49 4C 4C 4D 4F 44 45 F3 F2 F1  3DRS_FILLMODE...
  00002EB0: 03 04 03 00 79 00 12 44 33 44 52 53 5F 42 41 43  ....y..D3DRS_BAC
  00002EC0: 4B 46 49 4C 4C 4D 4F 44 45 F3 F2 F1 03 04 03 00  KFILLMODE.......
  00002ED0: 7A 00 16 44 33 44 52 53 5F 54 57 4F 53 49 44 45  z..D3DRS_TWOSIDE
  00002EE0: 44 4C 49 47 48 54 49 4E 47 F3 F2 F1 03 04 03 00  DLIGHTING.......
  00002EF0: 7B 00 16 44 33 44 52 53 5F 4E 4F 52 4D 41 4C 49  {..D3DRS_NORMALI
  00002F00: 5A 45 4E 4F 52 4D 41 4C 53 F3 F2 F1 03 04 03 00  ZENORMALS.......
  00002F10: 7C 00 0D 44 33 44 52 53 5F 5A 45 4E 41 42 4C 45  |..D3DRS_ZENABLE
  00002F20: 03 04 03 00 7D 00 13 44 33 44 52 53 5F 53 54 45  ....}..D3DRS_STE
  00002F30: 4E 43 49 4C 45 4E 41 42 4C 45 F2 F1 03 04 03 00  NCILENABLE......
  00002F40: 7E 00 11 44 33 44 52 53 5F 53 54 45 4E 43 49 4C  ~..D3DRS_STENCIL
  00002F50: 46 41 49 4C 03 04 03 00 7F 00 0F 44 33 44 52 53  FAIL.......D3DRS
  00002F60: 5F 46 52 4F 4E 54 46 41 43 45 F2 F1 03 04 03 00  _FRONTFACE......
  00002F70: 80 00 0E 44 33 44 52 53 5F 43 55 4C 4C 4D 4F 44  ...D3DRS_CULLMOD
  00002F80: 45 F3 F2 F1 03 04 03 00 81 00 13 44 33 44 52 53  E..........D3DRS
  00002F90: 5F 54 45 58 54 55 52 45 46 41 43 54 4F 52 F2 F1  _TEXTUREFACTOR..
  00002FA0: 03 04 03 00 82 00 0B 44 33 44 52 53 5F 5A 42 49  .......D3DRS_ZBI
  00002FB0: 41 53 F2 F1 03 04 03 00 83 00 0D 44 33 44 52 53  AS.........D3DRS
  00002FC0: 5F 4C 4F 47 49 43 4F 50 03 04 03 00 84 00 13 44  _LOGICOP.......D
  00002FD0: 33 44 52 53 5F 45 44 47 45 41 4E 54 49 41 4C 49  3DRS_EDGEANTIALI
  00002FE0: 41 53 F2 F1 03 04 03 00 85 00 1A 44 33 44 52 53  AS.........D3DRS
  00002FF0: 5F 4D 55 4C 54 49 53 41 4D 50 4C 45 41 4E 54 49  _MULTISAMPLEANTI
  00003000: 41 4C 49 41 53 F3 F2 F1 03 04 03 00 86 00 15 44  ALIAS..........D
  00003010: 33 44 52 53 5F 4D 55 4C 54 49 53 41 4D 50 4C 45  3DRS_MULTISAMPLE
  00003020: 4D 41 53 4B 03 04 03 00 87 00 15 44 33 44 52 53  MASK.......D3DRS
  00003030: 5F 4D 55 4C 54 49 53 41 4D 50 4C 45 4D 4F 44 45  _MULTISAMPLEMODE
  00003040: 03 04 03 00 88 00 21 44 33 44 52 53 5F 4D 55 4C  ......!D3DRS_MUL
  00003050: 54 49 53 41 4D 50 4C 45 52 45 4E 44 45 52 54 41  TISAMPLERENDERTA
  00003060: 52 47 45 54 4D 4F 44 45 03 04 03 00 89 00 10 44  RGETMODE.......D
  00003070: 33 44 52 53 5F 53 48 41 44 4F 57 46 55 4E 43 F1  3DRS_SHADOWFUNC.
  00003080: 03 04 03 00 8A 00 0F 44 33 44 52 53 5F 4C 49 4E  .......D3DRS_LIN
  00003090: 45 57 49 44 54 48 F2 F1 03 04 03 00 8B 00 15 44  EWIDTH.........D
  000030A0: 33 44 52 53 5F 44 58 54 31 4E 4F 49 53 45 45 4E  3DRS_DXT1NOISEEN
  000030B0: 41 42 4C 45 03 04 03 00 8C 00 0F 44 33 44 52 53  ABLE.......D3DRS
  000030C0: 5F 59 55 56 45 4E 41 42 4C 45 F2 F1 03 04 03 00  _YUVENABLE......
  000030D0: 8D 00 19 44 33 44 52 53 5F 4F 43 43 4C 55 53 49  ...D3DRS_OCCLUSI
  000030E0: 4F 4E 43 55 4C 4C 45 4E 41 42 4C 45 03 04 03 00  ONCULLENABLE....
  000030F0: 8E 00 17 44 33 44 52 53 5F 53 54 45 4E 43 49 4C  ...D3DRS_STENCIL
  00003100: 43 55 4C 4C 45 4E 41 42 4C 45 F2 F1 03 04 03 00  CULLENABLE......
  00003110: 8F 00 17 44 33 44 52 53 5F 52 4F 50 5A 43 4D 50  ...D3DRS_ROPZCMP
  00003120: 41 4C 57 41 59 53 52 45 41 44 F2 F1 03 04 03 00  ALWAYSREAD......
  00003130: 90 00 0E 44 33 44 52 53 5F 52 4F 50 5A 52 45 41  ...D3DRS_ROPZREA
  00003140: 44 F3 F2 F1 03 04 03 00 91 00 1B 44 33 44 52 53  D..........D3DRS
  00003150: 5F 44 4F 4E 4F 54 43 55 4C 4C 55 4E 43 4F 4D 50  _DONOTCULLUNCOMP
  00003160: 52 45 53 53 45 44 F2 F1 03 04 03 00 92 00 09 44  RESSED.........D
  00003170: 33 44 52 53 5F 4D 41 58 03 04 03 00 04 80 FF FF  3DRS_MAX........
  00003180: FF 7F 11 44 33 44 52 53 5F 46 4F 52 43 45 5F 44  ...D3DRS_FORCE_D
  00003190: 57 4F 52 44 22 00 07 10 97 00 00 00 74 00 00 00  WORD".......t...
  000031A0: B5 10 00 00 13 5F 44 33 44 52 45 4E 44 45 52 53  ....._D3DRENDERS
  000031B0: 54 41 54 45 54 59 50 45 0E 00 01 12 02 00 00 00  TATETYPE........
  000031C0: B6 10 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  ...."...........
  000031D0: 2C 10 00 00 00 00 00 00 07 00 02 00 B7 10 00 00  ,...............
  000031E0: 00 00 00 00 0E 00 01 12 02 00 00 00 B6 10 00 00  ................
  000031F0: 22 04 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  "...........,...
  00003200: 00 00 00 00 07 00 02 00 B9 10 00 00 00 00 00 00  ................
  00003210: 0A 00 01 12 01 00 00 00 22 00 00 00 1A 00 09 10  ........".......
  00003220: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 01 00  ....,...........
  00003230: BB 10 00 00 00 00 00 00 6A 00 03 12 03 04 03 00  ........j.......
  00003240: 01 00 0A 44 33 44 53 42 54 5F 41 4C 4C F3 F2 F1  ...D3DSBT_ALL...
  00003250: 03 04 03 00 02 00 11 44 33 44 53 42 54 5F 50 49  .......D3DSBT_PI
  00003260: 58 45 4C 53 54 41 54 45 03 04 03 00 03 00 12 44  XELSTATE.......D
  00003270: 33 44 53 42 54 5F 56 45 52 54 45 58 53 54 41 54  3DSBT_VERTEXSTAT
  00003280: 45 F3 F2 F1 03 04 03 00 04 80 FF FF FF 7F 12 44  E..............D
  00003290: 33 44 53 42 54 5F 46 4F 52 43 45 5F 44 57 4F 52  3DSBT_FORCE_DWOR
  000032A0: 44 F3 F2 F1 22 00 07 10 04 00 00 00 74 00 00 00  D...".......t...
  000032B0: BD 10 00 00 12 5F 44 33 44 53 54 41 54 45 42 4C  ....._D3DSTATEBL
  000032C0: 4F 43 4B 54 59 50 45 F1 0E 00 01 12 02 00 00 00  OCKTYPE.........
  000032D0: BE 10 00 00 22 04 00 00 1A 00 09 10 12 00 00 00  ...."...........
  000032E0: 2C 10 00 00 00 00 00 00 07 00 02 00 BF 10 00 00  ,...............
  000032F0: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  00003300: 00 00 00 00 00 00 00 00 00 00 0E 44 33 44 42 61  ...........D3DBa
  00003310: 73 65 54 65 78 74 75 72 65 F3 F2 F1 0A 00 02 10  seTexture.......
  00003320: C1 10 00 00 0A 00 00 00 0A 00 02 10 C2 10 00 00  ................
  00003330: 0A 00 00 00 0E 00 01 12 02 00 00 00 22 00 00 00  ............"...
  00003340: C3 10 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  ............,...
  00003350: 00 00 00 00 07 00 02 00 C4 10 00 00 00 00 00 00  ................
  00003360: 0E 00 01 12 02 00 00 00 22 00 00 00 C2 10 00 00  ........".......
  00003370: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003380: 07 00 02 00 C6 10 00 00 00 00 00 00 9E 03 03 12  ................
  00003390: 03 04 03 00 00 00 0F 44 33 44 54 53 53 5F 41 44  .......D3DTSS_AD
  000033A0: 44 52 45 53 53 55 F2 F1 03 04 03 00 01 00 0F 44  DRESSU.........D
  000033B0: 33 44 54 53 53 5F 41 44 44 52 45 53 53 56 F2 F1  3DTSS_ADDRESSV..
  000033C0: 03 04 03 00 02 00 0F 44 33 44 54 53 53 5F 41 44  .......D3DTSS_AD
  000033D0: 44 52 45 53 53 57 F2 F1 03 04 03 00 03 00 10 44  DRESSW.........D
  000033E0: 33 44 54 53 53 5F 4D 41 47 46 49 4C 54 45 52 F1  3DTSS_MAGFILTER.
  000033F0: 03 04 03 00 04 00 10 44 33 44 54 53 53 5F 4D 49  .......D3DTSS_MI
  00003400: 4E 46 49 4C 54 45 52 F1 03 04 03 00 05 00 10 44  NFILTER........D
  00003410: 33 44 54 53 53 5F 4D 49 50 46 49 4C 54 45 52 F1  3DTSS_MIPFILTER.
  00003420: 03 04 03 00 06 00 14 44 33 44 54 53 53 5F 4D 49  .......D3DTSS_MI
  00003430: 50 4D 41 50 4C 4F 44 42 49 41 53 F1 03 04 03 00  PMAPLODBIAS.....
  00003440: 07 00 12 44 33 44 54 53 53 5F 4D 41 58 4D 49 50  ...D3DTSS_MAXMIP
  00003450: 4C 45 56 45 4C F3 F2 F1 03 04 03 00 08 00 14 44  LEVEL..........D
  00003460: 33 44 54 53 53 5F 4D 41 58 41 4E 49 53 4F 54 52  3DTSS_MAXANISOTR
  00003470: 4F 50 59 F1 03 04 03 00 09 00 11 44 33 44 54 53  OPY........D3DTS
  00003480: 53 5F 43 4F 4C 4F 52 4B 45 59 4F 50 03 04 03 00  S_COLORKEYOP....
  00003490: 0A 00 10 44 33 44 54 53 53 5F 43 4F 4C 4F 52 53  ...D3DTSS_COLORS
  000034A0: 49 47 4E F1 03 04 03 00 0B 00 10 44 33 44 54 53  IGN........D3DTS
  000034B0: 53 5F 41 4C 50 48 41 4B 49 4C 4C F1 03 04 03 00  S_ALPHAKILL.....
  000034C0: 0C 00 21 44 33 44 54 53 53 5F 44 45 46 45 52 52  ..!D3DTSS_DEFERR
  000034D0: 45 44 5F 54 45 58 54 55 52 45 5F 53 54 41 54 45  ED_TEXTURE_STATE
  000034E0: 5F 4D 41 58 03 04 03 00 0C 00 0E 44 33 44 54 53  _MAX.......D3DTS
  000034F0: 53 5F 43 4F 4C 4F 52 4F 50 F3 F2 F1 03 04 03 00  S_COLOROP.......
  00003500: 0D 00 10 44 33 44 54 53 53 5F 43 4F 4C 4F 52 41  ...D3DTSS_COLORA
  00003510: 52 47 30 F1 03 04 03 00 0E 00 10 44 33 44 54 53  RG0........D3DTS
  00003520: 53 5F 43 4F 4C 4F 52 41 52 47 31 F1 03 04 03 00  S_COLORARG1.....
  00003530: 0F 00 10 44 33 44 54 53 53 5F 43 4F 4C 4F 52 41  ...D3DTSS_COLORA
  00003540: 52 47 32 F1 03 04 03 00 10 00 0E 44 33 44 54 53  RG2........D3DTS
  00003550: 53 5F 41 4C 50 48 41 4F 50 F3 F2 F1 03 04 03 00  S_ALPHAOP.......
  00003560: 11 00 10 44 33 44 54 53 53 5F 41 4C 50 48 41 41  ...D3DTSS_ALPHAA
  00003570: 52 47 30 F1 03 04 03 00 12 00 10 44 33 44 54 53  RG0........D3DTS
  00003580: 53 5F 41 4C 50 48 41 41 52 47 31 F1 03 04 03 00  S_ALPHAARG1.....
  00003590: 13 00 10 44 33 44 54 53 53 5F 41 4C 50 48 41 41  ...D3DTSS_ALPHAA
  000035A0: 52 47 32 F1 03 04 03 00 14 00 10 44 33 44 54 53  RG2........D3DTS
  000035B0: 53 5F 52 45 53 55 4C 54 41 52 47 F1 03 04 03 00  S_RESULTARG.....
  000035C0: 15 00 1C 44 33 44 54 53 53 5F 54 45 58 54 55 52  ...D3DTSS_TEXTUR
  000035D0: 45 54 52 41 4E 53 46 4F 52 4D 46 4C 41 47 53 F1  ETRANSFORMFLAGS.
  000035E0: 03 04 03 00 16 00 13 44 33 44 54 53 53 5F 44 45  .......D3DTSS_DE
  000035F0: 46 45 52 52 45 44 5F 4D 41 58 F2 F1 03 04 03 00  FERRED_MAX......
  00003600: 16 00 13 44 33 44 54 53 53 5F 42 55 4D 50 45 4E  ...D3DTSS_BUMPEN
  00003610: 56 4D 41 54 30 30 F2 F1 03 04 03 00 17 00 13 44  VMAT00.........D
  00003620: 33 44 54 53 53 5F 42 55 4D 50 45 4E 56 4D 41 54  3DTSS_BUMPENVMAT
  00003630: 30 31 F2 F1 03 04 03 00 18 00 13 44 33 44 54 53  01.........D3DTS
  00003640: 53 5F 42 55 4D 50 45 4E 56 4D 41 54 31 31 F2 F1  S_BUMPENVMAT11..
  00003650: 03 04 03 00 19 00 13 44 33 44 54 53 53 5F 42 55  .......D3DTSS_BU
  00003660: 4D 50 45 4E 56 4D 41 54 31 30 F2 F1 03 04 03 00  MPENVMAT10......
  00003670: 1A 00 14 44 33 44 54 53 53 5F 42 55 4D 50 45 4E  ...D3DTSS_BUMPEN
  00003680: 56 4C 53 43 41 4C 45 F1 03 04 03 00 1B 00 15 44  VLSCALE........D
  00003690: 33 44 54 53 53 5F 42 55 4D 50 45 4E 56 4C 4F 46  3DTSS_BUMPENVLOF
  000036A0: 46 53 45 54 03 04 03 00 1C 00 14 44 33 44 54 53  FSET.......D3DTS
  000036B0: 53 5F 54 45 58 43 4F 4F 52 44 49 4E 44 45 58 F1  S_TEXCOORDINDEX.
  000036C0: 03 04 03 00 1D 00 12 44 33 44 54 53 53 5F 42 4F  .......D3DTSS_BO
  000036D0: 52 44 45 52 43 4F 4C 4F 52 F3 F2 F1 03 04 03 00  RDERCOLOR.......
  000036E0: 1E 00 14 44 33 44 54 53 53 5F 43 4F 4C 4F 52 4B  ...D3DTSS_COLORK
  000036F0: 45 59 43 4F 4C 4F 52 F1 03 04 03 00 20 00 0A 44  EYCOLOR..... ..D
  00003700: 33 44 54 53 53 5F 4D 41 58 F3 F2 F1 03 04 03 00  3DTSS_MAX.......
  00003710: 04 80 FF FF FF 7F 12 44 33 44 54 53 53 5F 46 4F  .......D3DTSS_FO
  00003720: 52 43 45 5F 44 57 4F 52 44 F3 F2 F1 2A 00 07 10  RCE_DWORD...*...
  00003730: 23 00 00 00 74 00 00 00 C8 10 00 00 19 5F 44 33  #...t........_D3
  00003740: 44 54 45 58 54 55 52 45 53 54 41 47 45 53 54 41  DTEXTURESTAGESTA
  00003750: 54 45 54 59 50 45 F2 F1 12 00 01 12 03 00 00 00  TETYPE..........
  00003760: 22 00 00 00 C9 10 00 00 22 04 00 00 1A 00 09 10  ".......".......
  00003770: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  00003780: CA 10 00 00 00 00 00 00 12 00 01 12 03 00 00 00  ................
  00003790: 22 00 00 00 C9 10 00 00 22 00 00 00 1A 00 09 10  ".......".......
  000037A0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  000037B0: CC 10 00 00 00 00 00 00 22 01 03 12 03 04 03 00  ........".......
  000037C0: 01 00 0F 44 33 44 50 54 5F 50 4F 49 4E 54 4C 49  ...D3DPT_POINTLI
  000037D0: 53 54 F2 F1 03 04 03 00 02 00 0E 44 33 44 50 54  ST.........D3DPT
  000037E0: 5F 4C 49 4E 45 4C 49 53 54 F3 F2 F1 03 04 03 00  _LINELIST.......
  000037F0: 03 00 0E 44 33 44 50 54 5F 4C 49 4E 45 4C 4F 4F  ...D3DPT_LINELOO
  00003800: 50 F3 F2 F1 03 04 03 00 04 00 0F 44 33 44 50 54  P..........D3DPT
  00003810: 5F 4C 49 4E 45 53 54 52 49 50 F2 F1 03 04 03 00  _LINESTRIP......
  00003820: 05 00 12 44 33 44 50 54 5F 54 52 49 41 4E 47 4C  ...D3DPT_TRIANGL
  00003830: 45 4C 49 53 54 F3 F2 F1 03 04 03 00 06 00 13 44  ELIST..........D
  00003840: 33 44 50 54 5F 54 52 49 41 4E 47 4C 45 53 54 52  3DPT_TRIANGLESTR
  00003850: 49 50 F2 F1 03 04 03 00 07 00 11 44 33 44 50 54  IP.........D3DPT
  00003860: 5F 54 52 49 41 4E 47 4C 45 46 41 4E 03 04 03 00  _TRIANGLEFAN....
  00003870: 08 00 0E 44 33 44 50 54 5F 51 55 41 44 4C 49 53  ...D3DPT_QUADLIS
  00003880: 54 F3 F2 F1 03 04 03 00 09 00 0F 44 33 44 50 54  T..........D3DPT
  00003890: 5F 51 55 41 44 53 54 52 49 50 F2 F1 03 04 03 00  _QUADSTRIP......
  000038A0: 0A 00 0D 44 33 44 50 54 5F 50 4F 4C 59 47 4F 4E  ...D3DPT_POLYGON
  000038B0: 03 04 03 00 0B 00 09 44 33 44 50 54 5F 4D 41 58  .......D3DPT_MAX
  000038C0: 03 04 03 00 04 80 FF FF FF 7F 11 44 33 44 50 54  ...........D3DPT
  000038D0: 5F 46 4F 52 43 45 5F 44 57 4F 52 44 22 00 07 10  _FORCE_DWORD"...
  000038E0: 0C 00 00 00 74 00 00 00 CE 10 00 00 11 5F 44 33  ....t........_D3
  000038F0: 44 50 52 49 4D 49 54 49 56 45 54 59 50 45 F2 F1  DPRIMITIVETYPE..
  00003900: 12 00 01 12 03 00 00 00 CF 10 00 00 75 00 00 00  ............u...
  00003910: 75 00 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  u...........,...
  00003920: 00 00 00 00 07 00 03 00 D0 10 00 00 00 00 00 00  ................
  00003930: 1A 00 01 12 05 00 00 00 CF 10 00 00 75 00 00 00  ............u...
  00003940: 75 00 00 00 75 00 00 00 75 00 00 00 1A 00 09 10  u...u...u.......
  00003950: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 05 00  ....,...........
  00003960: D2 10 00 00 00 00 00 00 0A 00 01 10 03 00 00 00  ................
  00003970: 01 00 F2 F1 0A 00 02 10 D4 10 00 00 0A 00 00 00  ................
  00003980: 16 00 01 12 04 00 00 00 CF 10 00 00 75 00 00 00  ............u...
  00003990: D5 10 00 00 75 00 00 00 1A 00 09 10 12 00 00 00  ....u...........
  000039A0: 2C 10 00 00 00 00 00 00 07 00 04 00 D6 10 00 00  ,...............
  000039B0: 00 00 00 00 26 00 01 12 08 00 00 00 CF 10 00 00  ....&...........
  000039C0: 75 00 00 00 75 00 00 00 75 00 00 00 D5 10 00 00  u...u...u.......
  000039D0: 1B 10 00 00 D5 10 00 00 75 00 00 00 1A 00 09 10  ........u.......
  000039E0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 08 00  ....,...........
  000039F0: D8 10 00 00 00 00 00 00 0A 00 01 10 22 00 00 00  ............"...
  00003A00: 01 00 F2 F1 0A 00 02 10 DA 10 00 00 0A 00 00 00  ................
  00003A10: 16 00 01 12 04 00 00 00 DB 10 00 00 DB 10 00 00  ................
  00003A20: 22 04 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  "..."...........
  00003A30: 2C 10 00 00 00 00 00 00 07 00 04 00 DC 10 00 00  ,...............
  00003A40: 00 00 00 00 0A 00 01 12 01 00 00 00 22 04 00 00  ............"...
  00003A50: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003A60: 07 00 01 00 DE 10 00 00 00 00 00 00 12 00 01 12  ................
  00003A70: 03 00 00 00 74 00 00 00 D5 10 00 00 22 00 00 00  ....t......."...
  00003A80: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003A90: 07 00 03 00 E0 10 00 00 00 00 00 00 12 00 01 12  ................
  00003AA0: 03 00 00 00 74 00 00 00 03 04 00 00 22 00 00 00  ....t......."...
  00003AB0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003AC0: 07 00 03 00 E2 10 00 00 00 00 00 00 12 00 01 12  ................
  00003AD0: 03 00 00 00 22 00 00 00 03 04 00 00 22 04 00 00  ...."......."...
  00003AE0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003AF0: 07 00 03 00 E4 10 00 00 00 00 00 00 12 00 01 12  ................
  00003B00: 03 00 00 00 75 00 00 00 71 10 00 00 75 00 00 00  ....u...q...u...
  00003B10: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003B20: 07 00 03 00 E6 10 00 00 00 00 00 00 12 00 01 12  ................
  00003B30: 03 00 00 00 75 00 00 00 72 10 00 00 75 04 00 00  ....u...r...u...
  00003B40: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003B50: 07 00 03 00 E8 10 00 00 00 00 00 00 0E 00 01 12  ................
  00003B60: 02 00 00 00 76 10 00 00 75 00 00 00 1A 00 09 10  ....v...u.......
  00003B70: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  ....,...........
  00003B80: EA 10 00 00 00 00 00 00 0E 00 01 12 02 00 00 00  ................
  00003B90: 77 10 00 00 75 04 00 00 1A 00 09 10 12 00 00 00  w...u...........
  00003BA0: 2C 10 00 00 00 00 00 00 07 00 02 00 EC 10 00 00  ,...............
  00003BB0: 00 00 00 00 2A 00 05 10 00 00 80 00 00 00 00 00  ....*...........
  00003BC0: 00 00 00 00 00 00 00 00 00 00 12 5F 44 33 44 50  ..........._D3DP
  00003BD0: 69 78 65 6C 53 68 61 64 65 72 44 65 66 F3 F2 F1  ixelShaderDef...
  00003BE0: 0A 00 01 10 EE 10 00 00 01 00 F2 F1 0A 00 02 10  ................
  00003BF0: EF 10 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  00003C00: F0 10 00 00 22 04 00 00 1A 00 09 10 12 00 00 00  ...."...........
  00003C10: 2C 10 00 00 00 00 00 00 07 00 02 00 F1 10 00 00  ,...............
  00003C20: 00 00 00 00 0A 00 01 12 01 00 00 00 F0 10 00 00  ................
  00003C30: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003C40: 07 00 01 00 F3 10 00 00 00 00 00 00 12 00 01 12  ................
  00003C50: 03 00 00 00 22 00 00 00 D5 10 00 00 22 00 00 00  ...."......."...
  00003C60: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003C70: 07 00 03 00 F5 10 00 00 00 00 00 00 12 00 01 12  ................
  00003C80: 03 00 00 00 22 00 00 00 03 04 00 00 22 00 00 00  ...."......."...
  00003C90: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003CA0: 07 00 03 00 F7 10 00 00 00 00 00 00 0A 00 02 10  ................
  00003CB0: EE 10 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  00003CC0: 22 00 00 00 F9 10 00 00 1A 00 09 10 12 00 00 00  "...............
  00003CD0: 2C 10 00 00 00 00 00 00 07 00 02 00 FA 10 00 00  ,...............
  00003CE0: 00 00 00 00 0A 00 01 10 40 00 00 00 01 00 F2 F1  ........@.......
  00003CF0: 0A 00 02 10 FC 10 00 00 0A 00 00 00 2A 00 05 10  ............*...
  00003D00: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00003D10: 00 00 12 5F 44 33 44 52 45 43 54 50 41 54 43 48  ..._D3DRECTPATCH
  00003D20: 5F 49 4E 46 4F F3 F2 F1 0A 00 01 10 FE 10 00 00  _INFO...........
  00003D30: 01 00 F2 F1 0A 00 02 10 FF 10 00 00 0A 00 00 00  ................
  00003D40: 12 00 01 12 03 00 00 00 75 00 00 00 FD 10 00 00  ........u.......
  00003D50: 00 11 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  ............,...
  00003D60: 00 00 00 00 07 00 03 00 01 11 00 00 00 00 00 00  ................
  00003D70: 26 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  &...............
  00003D80: 00 00 00 00 00 00 11 5F 44 33 44 54 52 49 50 41  ......._D3DTRIPA
  00003D90: 54 43 48 5F 49 4E 46 4F 0A 00 01 10 03 11 00 00  TCH_INFO........
  00003DA0: 01 00 F2 F1 0A 00 02 10 04 11 00 00 0A 00 00 00  ................
  00003DB0: 12 00 01 12 03 00 00 00 75 00 00 00 FD 10 00 00  ........u.......
  00003DC0: 05 11 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  ............,...
  00003DD0: 00 00 00 00 07 00 03 00 06 11 00 00 00 00 00 00  ................
  00003DE0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003DF0: 07 00 01 00 10 10 00 00 00 00 00 00 0A 00 01 12  ................
  00003E00: 01 00 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  ...."...........
  00003E10: 2C 10 00 00 00 00 00 00 07 00 01 00 09 11 00 00  ,...............
  00003E20: 00 00 00 00 0A 00 01 12 01 00 00 00 22 04 00 00  ............"...
  00003E30: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003E40: 07 00 01 00 0B 11 00 00 00 00 00 00 1A 00 09 10  ................
  00003E50: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  ....,...........
  00003E60: 31 10 00 00 00 00 00 00 0E 00 01 12 02 00 00 00  1...............
  00003E70: DB 10 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  ...."...........
  00003E80: 2C 10 00 00 00 00 00 00 07 00 02 00 0E 11 00 00  ,...............
  00003E90: 00 00 00 00 2E 00 05 10 00 00 80 00 00 00 00 00  ................
  00003EA0: 00 00 00 00 00 00 00 00 00 00 19 5F 44 33 44 56  ..........._D3DV
  00003EB0: 45 52 54 45 58 41 54 54 52 49 42 55 54 45 46 4F  ERTEXATTRIBUTEFO
  00003EC0: 52 4D 41 54 0A 00 02 10 10 11 00 00 0A 00 00 00  RMAT............
  00003ED0: 0E 00 01 12 02 00 00 00 11 11 00 00 22 00 00 00  ............"...
  00003EE0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003EF0: 07 00 02 00 12 11 00 00 00 00 00 00 0E 00 01 12  ................
  00003F00: 02 00 00 00 22 00 00 00 FD 10 00 00 1A 00 09 10  ...."...........
  00003F10: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  ....,...........
  00003F20: 14 11 00 00 00 00 00 00 0E 00 01 12 02 00 00 00  ................
  00003F30: 22 00 00 00 75 04 00 00 1A 00 09 10 12 00 00 00  "...u...........
  00003F40: 2C 10 00 00 00 00 00 00 07 00 02 00 16 11 00 00  ,...............
  00003F50: 00 00 00 00 0E 00 01 12 02 00 00 00 22 00 00 00  ............"...
  00003F60: 22 04 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  "...........,...
  00003F70: 00 00 00 00 07 00 02 00 18 11 00 00 00 00 00 00  ................
  00003F80: 0A 00 01 10 21 00 00 00 01 00 F2 F1 0A 00 02 10  ....!...........
  00003F90: 1A 11 00 00 0A 00 00 00 12 00 01 12 03 00 00 00  ................
  00003FA0: CF 10 00 00 75 00 00 00 1B 11 00 00 1A 00 09 10  ....u...........
  00003FB0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  00003FC0: 1C 11 00 00 00 00 00 00 1A 00 01 12 05 00 00 00  ................
  00003FD0: CF 10 00 00 75 00 00 00 D5 10 00 00 D5 10 00 00  ....u...........
  00003FE0: 75 00 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  u...........,...
  00003FF0: 00 00 00 00 07 00 05 00 1E 11 00 00 00 00 00 00  ................
  00004000: 0E 00 01 12 02 00 00 00 75 00 00 00 1B 11 00 00  ........u.......
  00004010: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00004020: 07 00 02 00 20 11 00 00 00 00 00 00 96 00 03 12  .... ...........
  00004030: 03 04 03 00 00 00 0E 44 33 44 50 41 4C 45 54 54  .......D3DPALETT
  00004040: 45 5F 32 35 36 F3 F2 F1 03 04 03 00 01 00 0E 44  E_256..........D
  00004050: 33 44 50 41 4C 45 54 54 45 5F 31 32 38 F3 F2 F1  3DPALETTE_128...
  00004060: 03 04 03 00 02 00 0D 44 33 44 50 41 4C 45 54 54  .......D3DPALETT
  00004070: 45 5F 36 34 03 04 03 00 03 00 0D 44 33 44 50 41  E_64.......D3DPA
  00004080: 4C 45 54 54 45 5F 33 32 03 04 03 00 04 00 0E 44  LETTE_32.......D
  00004090: 33 44 50 41 4C 45 54 54 45 5F 4D 41 58 F3 F2 F1  3DPALETTE_MAX...
  000040A0: 03 04 03 00 04 80 FF FF FF 7F 16 44 33 44 50 41  ...........D3DPA
  000040B0: 4C 45 54 54 45 5F 46 4F 52 43 45 5F 44 57 4F 52  LETTE_FORCE_DWOR
  000040C0: 44 F3 F2 F1 1E 00 07 10 06 00 00 00 74 00 00 00  D...........t...
  000040D0: 22 11 00 00 0F 5F 44 33 44 50 41 4C 45 54 54 45  "...._D3DPALETTE
  000040E0: 53 49 5A 45 22 00 05 10 00 00 80 00 00 00 00 00  SIZE"...........
  000040F0: 00 00 00 00 00 00 00 00 00 00 0A 44 33 44 50 61  ...........D3DPa
  00004100: 6C 65 74 74 65 F3 F2 F1 0A 00 02 10 24 11 00 00  lette.......$...
  00004110: 0A 00 00 00 0A 00 02 10 25 11 00 00 0A 00 00 00  ........%.......
  00004120: 0E 00 01 12 02 00 00 00 23 11 00 00 26 11 00 00  ........#...&...
  00004130: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00004140: 07 00 02 00 27 11 00 00 00 00 00 00 0E 00 01 12  ....'...........
  00004150: 02 00 00 00 22 00 00 00 26 11 00 00 1A 00 09 10  ...."...&.......
  00004160: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  ....,...........
  00004170: 29 11 00 00 00 00 00 00 0E 00 01 12 02 00 00 00  )...............
  00004180: 22 00 00 00 25 11 00 00 1A 00 09 10 12 00 00 00  "...%...........
  00004190: 2C 10 00 00 00 00 00 00 07 00 02 00 2B 11 00 00  ,...........+...
  000041A0: 00 00 00 00 1A 00 01 12 05 00 00 00 51 10 00 00  ............Q...
  000041B0: 4D 10 00 00 4D 10 00 00 74 00 00 00 22 00 00 00  M...M...t..."...
  000041C0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  000041D0: 07 00 05 00 2D 11 00 00 00 00 00 00 0A 00 01 12  ....-...........
  000041E0: 01 00 00 00 74 00 00 00 1A 00 09 10 12 00 00 00  ....t...........
  000041F0: 2C 10 00 00 00 00 00 00 07 00 01 00 2F 11 00 00  ,.........../...
  00004200: 00 00 00 00 12 00 01 12 03 00 00 00 22 00 00 00  ............"...
  00004210: 75 04 00 00 23 04 00 00 1A 00 09 10 12 00 00 00  u...#...........
  00004220: 2C 10 00 00 00 00 00 00 07 00 03 00 31 11 00 00  ,...........1...
  00004230: 00 00 00 00 1A 00 09 10 74 00 00 00 2C 10 00 00  ........t...,...
  00004240: 00 00 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  00004250: 26 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  &...............
  00004260: 00 00 00 00 00 00 10 5F 44 33 44 46 49 45 4C 44  ......._D3DFIELD
  00004270: 5F 53 54 41 54 55 53 F1 0A 00 02 10 34 11 00 00  _STATUS.....4...
  00004280: 0A 00 00 00 0A 00 01 12 01 00 00 00 35 11 00 00  ............5...
  00004290: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  000042A0: 07 00 01 00 36 11 00 00 00 00 00 00 12 00 01 12  ....6...........
  000042B0: 03 00 00 00 74 00 00 00 40 00 00 00 40 00 00 00  ....t...@...@...
  000042C0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  000042D0: 07 00 03 00 38 11 00 00 00 00 00 00 1A 00 01 12  ....8...........
  000042E0: 05 00 00 00 74 00 00 00 40 00 00 00 40 00 00 00  ....t...@...@...
  000042F0: 40 00 00 00 40 00 00 00 1A 00 09 10 12 00 00 00  @...@...........
  00004300: 2C 10 00 00 00 00 00 00 07 00 05 00 3A 11 00 00  ,...........:...
  00004310: 00 00 00 00 12 00 01 12 03 00 00 00 74 00 00 00  ............t...
  00004320: 11 00 00 00 11 00 00 00 1A 00 09 10 12 00 00 00  ................
  00004330: 2C 10 00 00 00 00 00 00 07 00 03 00 3C 11 00 00  ,...........<...
  00004340: 00 00 00 00 1A 00 01 12 05 00 00 00 74 00 00 00  ............t...
  00004350: 11 00 00 00 11 00 00 00 11 00 00 00 11 00 00 00  ................
  00004360: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00004370: 07 00 05 00 3E 11 00 00 00 00 00 00 1A 00 01 12  ....>...........
  00004380: 05 00 00 00 74 00 00 00 20 00 00 00 20 00 00 00  ....t... ... ...
  00004390: 20 00 00 00 20 00 00 00 1A 00 09 10 12 00 00 00   ... ...........
  000043A0: 2C 10 00 00 00 00 00 00 07 00 05 00 40 11 00 00  ,...........@...
  000043B0: 00 00 00 00 0E 00 01 12 02 00 00 00 74 00 00 00  ............t...
  000043C0: 22 00 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  "...........,...
  000043D0: 00 00 00 00 07 00 02 00 42 11 00 00 00 00 00 00  ........B.......
  000043E0: 0A 00 01 12 01 00 00 00 CF 10 00 00 1A 00 09 10  ................
  000043F0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 01 00  ....,...........
  00004400: 44 11 00 00 00 00 00 00 1E 00 05 10 00 00 80 00  D...............
  00004410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 08 44  ...............D
  00004420: 33 44 46 69 78 75 70 F1 0A 00 02 10 46 11 00 00  3DFixup.....F...
  00004430: 0A 00 00 00 0A 00 02 10 47 11 00 00 0A 00 00 00  ........G.......
  00004440: 0E 00 01 12 02 00 00 00 75 00 00 00 48 11 00 00  ........u...H...
  00004450: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00004460: 07 00 02 00 49 11 00 00 00 00 00 00 22 00 05 10  ....I......."...
  00004470: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00004480: 00 00 0D 44 33 44 50 75 73 68 42 75 66 66 65 72  ...D3DPushBuffer
  00004490: 0A 00 02 10 4B 11 00 00 0A 00 00 00 0A 00 02 10  ....K...........
  000044A0: 4C 11 00 00 0A 00 00 00 12 00 01 12 03 00 00 00  L...............
  000044B0: 75 00 00 00 74 00 00 00 4D 11 00 00 1A 00 09 10  u...t...M.......
  000044C0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  000044D0: 4E 11 00 00 00 00 00 00 0A 00 01 12 01 00 00 00  N...............
  000044E0: 4C 11 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  L...........,...
  000044F0: 00 00 00 00 07 00 01 00 50 11 00 00 00 00 00 00  ........P.......
  00004500: 0E 00 01 12 02 00 00 00 4C 11 00 00 47 11 00 00  ........L...G...
  00004510: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00004520: 07 00 02 00 52 11 00 00 00 00 00 00 0A 00 01 12  ....R...........
  00004530: 01 00 00 00 96 10 00 00 1A 00 09 10 12 00 00 00  ................
  00004540: 2C 10 00 00 00 00 00 00 07 00 01 00 54 11 00 00  ,...........T...
  00004550: 00 00 00 00 12 00 01 12 03 00 00 00 93 10 00 00  ................
  00004560: 93 10 00 00 93 10 00 00 1A 00 09 10 12 00 00 00  ................
  00004570: 2C 10 00 00 00 00 00 00 07 00 03 00 56 11 00 00  ,...........V...
  00004580: 00 00 00 00 16 00 01 12 04 00 00 00 75 00 00 00  ............u...
  00004590: 93 10 00 00 93 10 00 00 93 10 00 00 1A 00 09 10  ................
  000045A0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 04 00  ....,...........
  000045B0: 58 11 00 00 00 00 00 00 12 00 01 12 03 00 00 00  X...............
  000045C0: 75 00 00 00 96 10 00 00 96 10 00 00 1A 00 09 10  u...............
  000045D0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  000045E0: 5A 11 00 00 00 00 00 00 26 00 05 10 00 00 80 00  Z.......&.......
  000045F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10 5F  ..............._
  00004600: 44 33 44 53 54 52 45 41 4D 5F 49 4E 50 55 54 F1  D3DSTREAM_INPUT.
  00004610: 0A 00 01 10 5C 11 00 00 01 00 F2 F1 0A 00 02 10  ....\...........
  00004620: 5D 11 00 00 0A 00 00 00 12 00 01 12 03 00 00 00  ]...............
  00004630: 22 00 00 00 75 00 00 00 5E 11 00 00 1A 00 09 10  "...u...^.......
  00004640: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  00004650: 5F 11 00 00 00 00 00 00 12 00 01 12 03 00 00 00  _...............
  00004660: 11 11 00 00 75 00 00 00 5E 11 00 00 1A 00 09 10  ....u...^.......
  00004670: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  00004680: 61 11 00 00 00 00 00 00 0A 00 02 10 5C 11 00 00  a...........\...
  00004690: 0A 00 00 00 12 00 01 12 03 00 00 00 22 04 00 00  ............"...
  000046A0: 75 04 00 00 63 11 00 00 1A 00 09 10 12 00 00 00  u...c...........
  000046B0: 2C 10 00 00 00 00 00 00 07 00 03 00 64 11 00 00  ,...........d...
  000046C0: 00 00 00 00 12 00 01 12 03 00 00 00 22 00 00 00  ............"...
  000046D0: 74 00 00 00 8C 10 00 00 1A 00 09 10 12 00 00 00  t...............
  000046E0: 2C 10 00 00 00 00 00 00 07 00 03 00 66 11 00 00  ,...........f...
  000046F0: 00 00 00 00 0A 00 02 10 8A 10 00 00 0A 00 00 00  ................
  00004700: 12 00 01 12 03 00 00 00 22 04 00 00 74 04 00 00  ........"...t...
  00004710: 68 11 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  h...........,...
  00004720: 00 00 00 00 07 00 03 00 69 11 00 00 00 00 00 00  ........i.......
  00004730: 1E 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  ................
  00004740: 00 00 00 00 00 00 08 5F 44 33 44 54 49 4C 45 F1  ......._D3DTILE.
  00004750: 0A 00 01 10 6B 11 00 00 01 00 F2 F1 0A 00 02 10  ....k...........
  00004760: 6C 11 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  l...............
  00004770: 22 00 00 00 6D 11 00 00 1A 00 09 10 12 00 00 00  "...m...........
  00004780: 2C 10 00 00 00 00 00 00 07 00 02 00 6E 11 00 00  ,...........n...
  00004790: 00 00 00 00 0A 00 02 10 6B 11 00 00 0A 00 00 00  ........k.......
  000047A0: 0E 00 01 12 02 00 00 00 22 00 00 00 70 11 00 00  ........"...p...
  000047B0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  000047C0: 07 00 02 00 71 11 00 00 00 00 00 00 1A 00 09 10  ....q...........
  000047D0: 22 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  "...,...........
  000047E0: 31 10 00 00 00 00 00 00 16 00 01 12 04 00 00 00  1...............
  000047F0: 22 00 00 00 22 00 00 00 DB 10 00 00 22 00 00 00  "..."......."...
  00004800: 1A 00 09 10 03 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00004810: 07 00 04 00 74 11 00 00 00 00 00 00 16 00 01 12  ....t...........
  00004820: 04 00 00 00 22 00 00 00 22 00 00 00 22 04 00 00  ...."..."..."...
  00004830: 22 00 00 00 1A 00 09 10 03 00 00 00 2C 10 00 00  "...........,...
  00004840: 00 00 00 00 07 00 04 00 76 11 00 00 00 00 00 00  ........v.......
  00004850: 0A 00 02 10 22 04 00 00 0A 00 00 00 0E 00 01 12  ...."...........
  00004860: 02 00 00 00 22 00 00 00 78 11 00 00 1A 00 09 10  ...."...x.......
  00004870: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  ....,...........
  00004880: 79 11 00 00 00 00 00 00 1A 00 09 10 03 00 00 00  y...............
  00004890: 2C 10 00 00 00 00 00 00 07 00 00 00 09 10 00 00  ,...............
  000048A0: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  000048B0: 00 00 00 00 00 00 00 00 00 00 0E 5F 44 33 44 56  ..........._D3DV
  000048C0: 42 4C 41 4E 4B 44 41 54 41 F3 F2 F1 0A 00 02 10  BLANKDATA.......
  000048D0: 7C 11 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  |...............
  000048E0: 7D 11 00 00 0E 00 08 10 03 00 00 00 00 00 01 00  }...............
  000048F0: 7E 11 00 00 0A 00 02 10 7F 11 00 00 0A 00 00 00  ~...............
  00004900: 0A 00 01 12 01 00 00 00 80 11 00 00 1A 00 09 10  ................
  00004910: 03 00 00 00 2C 10 00 00 00 00 00 00 07 00 01 00  ....,...........
  00004920: 81 11 00 00 00 00 00 00 22 00 05 10 00 00 80 00  ........".......
  00004930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0C 5F  ..............._
  00004940: 44 33 44 53 57 41 50 44 41 54 41 F1 0A 00 02 10  D3DSWAPDATA.....
  00004950: 83 11 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  ................
  00004960: 84 11 00 00 0E 00 08 10 03 00 00 00 00 00 01 00  ................
  00004970: 85 11 00 00 0A 00 02 10 86 11 00 00 0A 00 00 00  ................
  00004980: 0A 00 01 12 01 00 00 00 87 11 00 00 1A 00 09 10  ................
  00004990: 03 00 00 00 2C 10 00 00 00 00 00 00 07 00 01 00  ....,...........
  000049A0: 88 11 00 00 00 00 00 00 1A 00 09 10 22 00 00 00  ............"...
  000049B0: 2C 10 00 00 00 00 00 00 07 00 00 00 09 10 00 00  ,...............
  000049C0: 00 00 00 00 1A 00 09 10 74 00 00 00 2C 10 00 00  ........t...,...
  000049D0: 00 00 00 00 07 00 01 00 BB 10 00 00 00 00 00 00  ................
  000049E0: 1A 00 09 10 03 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  000049F0: 07 00 01 00 BB 10 00 00 00 00 00 00 5A 00 03 12  ............Z...
  00004A00: 03 04 03 00 00 00 10 44 33 44 43 41 4C 4C 42 41  .......D3DCALLBA
  00004A10: 43 4B 5F 52 45 41 44 F1 03 04 03 00 01 00 11 44  CK_READ........D
  00004A20: 33 44 43 41 4C 4C 42 41 43 4B 5F 57 52 49 54 45  3DCALLBACK_WRITE
  00004A30: 03 04 03 00 04 80 FF FF FF 7F 1B 44 33 44 43 41  ...........D3DCA
  00004A40: 4C 4C 42 41 43 4B 54 59 50 45 5F 46 4F 52 43 45  LLBACKTYPE_FORCE
  00004A50: 5F 44 57 4F 52 44 F2 F1 22 00 07 10 03 00 00 00  _DWORD..".......
  00004A60: 74 00 00 00 8D 11 00 00 10 5F 44 33 44 43 41 4C  t........_D3DCAL
  00004A70: 4C 42 41 43 4B 54 59 50 45 F3 F2 F1 0E 00 08 10  LBACKTYPE.......
  00004A80: 03 00 00 00 00 00 01 00 BB 10 00 00 0A 00 02 10  ................
  00004A90: 8F 11 00 00 0A 00 00 00 12 00 01 12 03 00 00 00  ................
  00004AA0: 8E 11 00 00 90 11 00 00 22 00 00 00 1A 00 09 10  ........".......
  00004AB0: 03 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  00004AC0: 91 11 00 00 00 00 00 00 1A 00 09 10 03 00 00 00  ................
  00004AD0: 2C 10 00 00 00 00 00 00 07 00 01 00 2F 11 00 00  ,.........../...
  00004AE0: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  00004AF0: 00 00 00 00 00 00 00 00 00 00 11 5F 44 33 44 43  ..........._D3DC
  00004B00: 4F 50 59 52 45 43 54 53 54 41 54 45 0A 00 01 10  OPYRECTSTATE....
  00004B10: 94 11 00 00 01 00 F2 F1 0A 00 02 10 95 11 00 00  ................
  00004B20: 0A 00 00 00 2A 00 05 10 00 00 80 00 00 00 00 00  ....*...........
  00004B30: 00 00 00 00 00 00 00 00 00 00 14 5F 44 33 44 43  ..........._D3DC
  00004B40: 4F 50 59 52 45 43 54 52 4F 50 53 54 41 54 45 F1  OPYRECTROPSTATE.
  00004B50: 0A 00 01 10 97 11 00 00 01 00 F2 F1 0A 00 02 10  ................
  00004B60: 98 11 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  00004B70: 96 11 00 00 99 11 00 00 1A 00 09 10 12 00 00 00  ................
  00004B80: 2C 10 00 00 00 00 00 00 07 00 02 00 9A 11 00 00  ,...............
  00004B90: 00 00 00 00 0A 00 02 10 94 11 00 00 0A 00 00 00  ................
  00004BA0: 0A 00 02 10 97 11 00 00 0A 00 00 00 0E 00 01 12  ................
  00004BB0: 02 00 00 00 9C 11 00 00 9D 11 00 00 1A 00 09 10  ................
  00004BC0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  ....,...........
  00004BD0: 9E 11 00 00 00 00 00 00 1A 00 09 10 22 00 00 00  ............"...
  00004BE0: 2C 10 00 00 00 00 00 00 07 00 01 00 BB 10 00 00  ,...............
  00004BF0: 00 00 00 00 0E 00 01 12 02 00 00 00 40 00 00 00  ............@...
  00004C00: 40 00 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  @...........,...
  00004C10: 00 00 00 00 07 00 02 00 A1 11 00 00 00 00 00 00  ................
  00004C20: 0E 00 01 12 02 00 00 00 40 04 00 00 40 04 00 00  ........@...@...
  00004C30: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00004C40: 07 00 02 00 A3 11 00 00 00 00 00 00 0A 00 01 12  ................
  00004C50: 01 00 00 00 22 00 00 00 1A 00 09 10 03 00 00 00  ...."...........
  00004C60: 2C 10 00 00 00 00 00 00 07 00 01 00 A5 11 00 00  ,...............
  00004C70: 00 00 00 00 1A 00 09 10 22 00 00 00 2C 10 00 00  ........"...,...
  00004C80: 00 00 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  00004C90: 7A 10 03 12 0B 14 0B 00 3D 10 00 00 06 41 64 64  z.......=....Add
  00004CA0: 52 65 66 F1 0B 14 0B 00 3D 10 00 00 07 52 65 6C  Ref.....=....Rel
  00004CB0: 65 61 73 65 0B 14 0B 00 40 10 00 00 0B 47 65 74  ease....@....Get
  00004CC0: 44 69 72 65 63 74 33 44 0B 14 0B 00 42 10 00 00  Direct3D....B...
  00004CD0: 0D 47 65 74 44 65 76 69 63 65 43 61 70 73 F2 F1  .GetDeviceCaps..
  00004CE0: 0B 14 0B 00 44 10 00 00 0E 47 65 74 44 69 73 70  ....D....GetDisp
  00004CF0: 6C 61 79 4D 6F 64 65 F1 0B 14 0B 00 48 10 00 00  layMode.....H...
  00004D00: 15 47 65 74 43 72 65 61 74 69 6F 6E 50 61 72 61  .GetCreationPara
  00004D10: 6D 65 74 65 72 73 F2 F1 0B 14 0B 00 4A 10 00 00  meters......J...
  00004D20: 05 52 65 73 65 74 F2 F1 0B 14 0B 00 4F 10 00 00  .Reset......O...
  00004D30: 07 50 72 65 73 65 6E 74 0B 14 0B 00 54 10 00 00  .Present....T...
  00004D40: 0D 47 65 74 42 61 63 6B 42 75 66 66 65 72 F2 F1  .GetBackBuffer..
  00004D50: 0B 14 0B 00 58 10 00 00 0F 47 65 74 52 61 73 74  ....X....GetRast
  00004D60: 65 72 53 74 61 74 75 73 0B 14 0B 00 5D 10 00 00  erStatus....]...
  00004D70: 0C 53 65 74 47 61 6D 6D 61 52 61 6D 70 F3 F2 F1  .SetGammaRamp...
  00004D80: 0B 14 0B 00 60 10 00 00 0C 47 65 74 47 61 6D 6D  ....`....GetGamm
  00004D90: 61 52 61 6D 70 F3 F2 F1 0B 14 0B 00 65 10 00 00  aRamp.......e...
  00004DA0: 0D 43 72 65 61 74 65 54 65 78 74 75 72 65 F2 F1  .CreateTexture..
  00004DB0: 0B 14 0B 00 6A 10 00 00 13 43 72 65 61 74 65 56  ....j....CreateV
  00004DC0: 6F 6C 75 6D 65 54 65 78 74 75 72 65 0B 14 0B 00  olumeTexture....
  00004DD0: 6F 10 00 00 11 43 72 65 61 74 65 43 75 62 65 54  o....CreateCubeT
  00004DE0: 65 78 74 75 72 65 F2 F1 0B 14 0B 00 74 10 00 00  exture......t...
  00004DF0: 12 43 72 65 61 74 65 56 65 72 74 65 78 42 75 66  .CreateVertexBuf
  00004E00: 66 65 72 F1 0B 14 0B 00 79 10 00 00 11 43 72 65  fer.....y....Cre
  00004E10: 61 74 65 49 6E 64 65 78 42 75 66 66 65 72 F2 F1  ateIndexBuffer..
  00004E20: 0B 14 0B 00 7B 10 00 00 12 43 72 65 61 74 65 52  ....{....CreateR
  00004E30: 65 6E 64 65 72 54 61 72 67 65 74 F1 0B 14 0B 00  enderTarget.....
  00004E40: 7D 10 00 00 19 43 72 65 61 74 65 44 65 70 74 68  }....CreateDepth
  00004E50: 53 74 65 6E 63 69 6C 53 75 72 66 61 63 65 F2 F1  StencilSurface..
  00004E60: 0B 14 0B 00 7F 10 00 00 12 43 72 65 61 74 65 49  .........CreateI
  00004E70: 6D 61 67 65 53 75 72 66 61 63 65 F1 0B 14 0B 00  mageSurface.....
  00004E80: 84 10 00 00 09 43 6F 70 79 52 65 63 74 73 F2 F1  .....CopyRects..
  00004E90: 0B 14 0B 00 86 10 00 00 0F 53 65 74 52 65 6E 64  .........SetRend
  00004EA0: 65 72 54 61 72 67 65 74 0B 14 0B 00 88 10 00 00  erTarget........
  00004EB0: 0F 47 65 74 52 65 6E 64 65 72 54 61 72 67 65 74  .GetRenderTarget
  00004EC0: 0B 14 0B 00 88 10 00 00 16 47 65 74 44 65 70 74  .........GetDept
  00004ED0: 68 53 74 65 6E 63 69 6C 53 75 72 66 61 63 65 F1  hStencilSurface.
  00004EE0: 0B 14 0B 00 89 10 00 00 0A 42 65 67 69 6E 53 63  .........BeginSc
  00004EF0: 65 6E 65 F1 0B 14 0B 00 89 10 00 00 08 45 6E 64  ene..........End
  00004F00: 53 63 65 6E 65 F3 F2 F1 0B 14 0B 00 8E 10 00 00  Scene...........
  00004F10: 05 43 6C 65 61 72 F2 F1 0B 14 0B 00 95 10 00 00  .Clear..........
  00004F20: 0C 53 65 74 54 72 61 6E 73 66 6F 72 6D F3 F2 F1  .SetTransform...
  00004F30: 0B 14 0B 00 98 10 00 00 0C 47 65 74 54 72 61 6E  .........GetTran
  00004F40: 73 66 6F 72 6D F3 F2 F1 0B 14 0B 00 95 10 00 00  sform...........
  00004F50: 11 4D 75 6C 74 69 70 6C 79 54 72 61 6E 73 66 6F  .MultiplyTransfo
  00004F60: 72 6D F2 F1 0B 14 0B 00 9D 10 00 00 0B 53 65 74  rm...........Set
  00004F70: 56 69 65 77 70 6F 72 74 0B 14 0B 00 A0 10 00 00  Viewport........
  00004F80: 0B 47 65 74 56 69 65 77 70 6F 72 74 0B 14 0B 00  .GetViewport....
  00004F90: A5 10 00 00 0B 53 65 74 4D 61 74 65 72 69 61 6C  .....SetMaterial
  00004FA0: 0B 14 0B 00 A8 10 00 00 0B 47 65 74 4D 61 74 65  .........GetMate
  00004FB0: 72 69 61 6C 0B 14 0B 00 AD 10 00 00 08 53 65 74  rial.........Set
  00004FC0: 4C 69 67 68 74 F3 F2 F1 0B 14 0B 00 B0 10 00 00  Light...........
  00004FD0: 08 47 65 74 4C 69 67 68 74 F3 F2 F1 0B 14 0B 00  .GetLight.......
  00004FE0: B2 10 00 00 0B 4C 69 67 68 74 45 6E 61 62 6C 65  .....LightEnable
  00004FF0: 0B 14 0B 00 B4 10 00 00 0E 47 65 74 4C 69 67 68  .........GetLigh
  00005000: 74 45 6E 61 62 6C 65 F1 0B 14 0B 00 B8 10 00 00  tEnable.........
  00005010: 0E 53 65 74 52 65 6E 64 65 72 53 74 61 74 65 F1  .SetRenderState.
  00005020: 0B 14 0B 00 BA 10 00 00 0E 47 65 74 52 65 6E 64  .........GetRend
  00005030: 65 72 53 74 61 74 65 F1 0B 14 0B 00 BC 10 00 00  erState.........
  00005040: 0F 41 70 70 6C 79 53 74 61 74 65 42 6C 6F 63 6B  .ApplyStateBlock
  00005050: 0B 14 0B 00 BC 10 00 00 11 43 61 70 74 75 72 65  .........Capture
  00005060: 53 74 61 74 65 42 6C 6F 63 6B F2 F1 0B 14 0B 00  StateBlock......
  00005070: BC 10 00 00 10 44 65 6C 65 74 65 53 74 61 74 65  .....DeleteState
  00005080: 42 6C 6F 63 6B F3 F2 F1 0B 14 0B 00 C0 10 00 00  Block...........
  00005090: 10 43 72 65 61 74 65 53 74 61 74 65 42 6C 6F 63  .CreateStateBloc
  000050A0: 6B F3 F2 F1 0B 14 0B 00 C5 10 00 00 0A 47 65 74  k............Get
  000050B0: 54 65 78 74 75 72 65 F1 0B 14 0B 00 C7 10 00 00  Texture.........
  000050C0: 0A 53 65 74 54 65 78 74 75 72 65 F1 0B 14 0B 00  .SetTexture.....
  000050D0: CB 10 00 00 14 47 65 74 54 65 78 74 75 72 65 53  .....GetTextureS
  000050E0: 74 61 67 65 53 74 61 74 65 F3 F2 F1 0B 14 0B 00  tageState.......
  000050F0: CD 10 00 00 14 53 65 74 54 65 78 74 75 72 65 53  .....SetTextureS
  00005100: 74 61 67 65 53 74 61 74 65 F3 F2 F1 0B 14 0B 00  tageState.......
  00005110: D1 10 00 00 0D 44 72 61 77 50 72 69 6D 69 74 69  .....DrawPrimiti
  00005120: 76 65 F2 F1 0B 14 0B 00 D3 10 00 00 14 44 72 61  ve...........Dra
  00005130: 77 49 6E 64 65 78 65 64 50 72 69 6D 69 74 69 76  wIndexedPrimitiv
  00005140: 65 F3 F2 F1 0B 14 0B 00 D7 10 00 00 0F 44 72 61  e............Dra
  00005150: 77 50 72 69 6D 69 74 69 76 65 55 50 0B 14 0B 00  wPrimitiveUP....
  00005160: D9 10 00 00 16 44 72 61 77 49 6E 64 65 78 65 64  .....DrawIndexed
  00005170: 50 72 69 6D 69 74 69 76 65 55 50 F1 0B 14 0B 00  PrimitiveUP.....
  00005180: DD 10 00 00 12 43 72 65 61 74 65 56 65 72 74 65  .....CreateVerte
  00005190: 78 53 68 61 64 65 72 F1 0B 14 0B 00 BC 10 00 00  xShader.........
  000051A0: 0F 53 65 74 56 65 72 74 65 78 53 68 61 64 65 72  .SetVertexShader
  000051B0: 0B 14 0B 00 DF 10 00 00 0F 47 65 74 56 65 72 74  .........GetVert
  000051C0: 65 78 53 68 61 64 65 72 0B 14 0B 00 BC 10 00 00  exShader........
  000051D0: 12 44 65 6C 65 74 65 56 65 72 74 65 78 53 68 61  .DeleteVertexSha
  000051E0: 64 65 72 F1 0B 14 0B 00 E1 10 00 00 17 53 65 74  der..........Set
  000051F0: 56 65 72 74 65 78 53 68 61 64 65 72 43 6F 6E 73  VertexShaderCons
  00005200: 74 61 6E 74 0B 14 0B 00 E3 10 00 00 17 47 65 74  tant.........Get
  00005210: 56 65 72 74 65 78 53 68 61 64 65 72 43 6F 6E 73  VertexShaderCons
  00005220: 74 61 6E 74 0B 14 0B 00 E5 10 00 00 1A 47 65 74  tant.........Get
  00005230: 56 65 72 74 65 78 53 68 61 64 65 72 44 65 63 6C  VertexShaderDecl
  00005240: 61 72 61 74 69 6F 6E F1 0B 14 0B 00 E5 10 00 00  aration.........
  00005250: 17 47 65 74 56 65 72 74 65 78 53 68 61 64 65 72  .GetVertexShader
  00005260: 46 75 6E 63 74 69 6F 6E 0B 14 0B 00 E7 10 00 00  Function........
  00005270: 0F 53 65 74 53 74 72 65 61 6D 53 6F 75 72 63 65  .SetStreamSource
  00005280: 0B 14 0B 00 E9 10 00 00 0F 47 65 74 53 74 72 65  .........GetStre
  00005290: 61 6D 53 6F 75 72 63 65 0B 14 0B 00 EB 10 00 00  amSource........
  000052A0: 0A 53 65 74 49 6E 64 69 63 65 73 F1 0B 14 0B 00  .SetIndices.....
  000052B0: ED 10 00 00 0A 47 65 74 49 6E 64 69 63 65 73 F1  .....GetIndices.
  000052C0: 0B 14 0B 00 F2 10 00 00 11 43 72 65 61 74 65 50  .........CreateP
  000052D0: 69 78 65 6C 53 68 61 64 65 72 F2 F1 0B 14 0B 00  ixelShader......
  000052E0: BC 10 00 00 0E 53 65 74 50 69 78 65 6C 53 68 61  .....SetPixelSha
  000052F0: 64 65 72 F1 0B 14 0B 00 F4 10 00 00 15 53 65 74  der..........Set
  00005300: 50 69 78 65 6C 53 68 61 64 65 72 50 72 6F 67 72  PixelShaderProgr
  00005310: 61 6D F2 F1 0B 14 0B 00 DF 10 00 00 0E 47 65 74  am...........Get
  00005320: 50 69 78 65 6C 53 68 61 64 65 72 F1 0B 14 0B 00  PixelShader.....
  00005330: BC 10 00 00 11 44 65 6C 65 74 65 50 69 78 65 6C  .....DeletePixel
  00005340: 53 68 61 64 65 72 F2 F1 0B 14 0B 00 F6 10 00 00  Shader..........
  00005350: 16 53 65 74 50 69 78 65 6C 53 68 61 64 65 72 43  .SetPixelShaderC
  00005360: 6F 6E 73 74 61 6E 74 F1 0B 14 0B 00 F8 10 00 00  onstant.........
  00005370: 16 47 65 74 50 69 78 65 6C 53 68 61 64 65 72 43  .GetPixelShaderC
  00005380: 6F 6E 73 74 61 6E 74 F1 0B 14 0B 00 FB 10 00 00  onstant.........
  00005390: 16 47 65 74 50 69 78 65 6C 53 68 61 64 65 72 46  .GetPixelShaderF
  000053A0: 75 6E 63 74 69 6F 6E F1 0B 14 0B 00 02 11 00 00  unction.........
  000053B0: 0D 44 72 61 77 52 65 63 74 50 61 74 63 68 F2 F1  .DrawRectPatch..
  000053C0: 0B 14 0B 00 07 11 00 00 0C 44 72 61 77 54 72 69  .........DrawTri
  000053D0: 50 61 74 63 68 F3 F2 F1 0B 14 0B 00 08 11 00 00  Patch...........
  000053E0: 0B 44 65 6C 65 74 65 50 61 74 63 68 0B 14 0B 00  .DeletePatch....
  000053F0: 0A 11 00 00 15 53 65 74 53 68 61 64 65 72 43 6F  .....SetShaderCo
  00005400: 6E 73 74 61 6E 74 4D 6F 64 65 F2 F1 0B 14 0B 00  nstantMode......
  00005410: 0C 11 00 00 15 47 65 74 53 68 61 64 65 72 43 6F  .....GetShaderCo
  00005420: 6E 73 74 61 6E 74 4D 6F 64 65 F2 F1 0B 14 0B 00  nstantMode......
  00005430: 0D 11 00 00 10 4C 6F 61 64 56 65 72 74 65 78 53  .....LoadVertexS
  00005440: 68 61 64 65 72 F3 F2 F1 0B 14 0B 00 0F 11 00 00  hader...........
  00005450: 17 4C 6F 61 64 56 65 72 74 65 78 53 68 61 64 65  .LoadVertexShade
  00005460: 72 50 72 6F 67 72 61 6D 0B 14 0B 00 0D 11 00 00  rProgram........
  00005470: 12 53 65 6C 65 63 74 56 65 72 74 65 78 53 68 61  .SelectVertexSha
  00005480: 64 65 72 F1 0B 14 0B 00 13 11 00 00 18 53 65 6C  der..........Sel
  00005490: 65 63 74 56 65 72 74 65 78 53 68 61 64 65 72 44  ectVertexShaderD
  000054A0: 69 72 65 63 74 F3 F2 F1 0B 14 0B 00 15 11 00 00  irect...........
  000054B0: 14 52 75 6E 56 65 72 74 65 78 53 74 61 74 65 53  .RunVertexStateS
  000054C0: 68 61 64 65 72 F3 F2 F1 0B 14 0B 00 17 11 00 00  hader...........
  000054D0: 13 47 65 74 56 65 72 74 65 78 53 68 61 64 65 72  .GetVertexShader
  000054E0: 53 69 7A 65 0B 14 0B 00 19 11 00 00 13 47 65 74  Size.........Get
  000054F0: 56 65 72 74 65 78 53 68 61 64 65 72 54 79 70 65  VertexShaderType
  00005500: 0B 14 0B 00 D1 10 00 00 0C 44 72 61 77 56 65 72  .........DrawVer
  00005510: 74 69 63 65 73 F3 F2 F1 0B 14 0B 00 1D 11 00 00  tices...........
  00005520: 13 44 72 61 77 49 6E 64 65 78 65 64 56 65 72 74  .DrawIndexedVert
  00005530: 69 63 65 73 0B 14 0B 00 D7 10 00 00 0E 44 72 61  ices.........Dra
  00005540: 77 56 65 72 74 69 63 65 73 55 50 F1 0B 14 0B 00  wVerticesUP.....
  00005550: 1F 11 00 00 15 44 72 61 77 49 6E 64 65 78 65 64  .....DrawIndexed
  00005560: 56 65 72 74 69 63 65 73 55 50 F2 F1 0B 14 0B 00  VerticesUP......
  00005570: 21 11 00 00 10 50 72 69 6D 65 56 65 72 74 65 78  !....PrimeVertex
  00005580: 43 61 63 68 65 F3 F2 F1 0B 14 0B 00 28 11 00 00  Cache.......(...
  00005590: 0D 43 72 65 61 74 65 50 61 6C 65 74 74 65 F2 F1  .CreatePalette..
  000055A0: 0B 14 0B 00 2A 11 00 00 0A 47 65 74 50 61 6C 65  ....*....GetPale
  000055B0: 74 74 65 F1 0B 14 0B 00 2C 11 00 00 0A 53 65 74  tte.....,....Set
  000055C0: 50 61 6C 65 74 74 65 F1 0B 14 0B 00 CD 10 00 00  Palette.........
  000055D0: 1D 53 65 74 54 65 78 74 75 72 65 53 74 61 67 65  .SetTextureStage
  000055E0: 53 74 61 74 65 4E 6F 74 49 6E 6C 69 6E 65 F2 F1  StateNotInline..
  000055F0: 0B 14 0B 00 B8 10 00 00 17 53 65 74 52 65 6E 64  .........SetRend
  00005600: 65 72 53 74 61 74 65 4E 6F 74 49 6E 6C 69 6E 65  erStateNotInline
  00005610: 0B 14 0B 00 A5 10 00 00 0F 53 65 74 42 61 63 6B  .........SetBack
  00005620: 4D 61 74 65 72 69 61 6C 0B 14 0B 00 A8 10 00 00  Material........
  00005630: 0F 47 65 74 42 61 63 6B 4D 61 74 65 72 69 61 6C  .GetBackMaterial
  00005640: 0B 14 0B 00 2E 11 00 00 0D 55 70 64 61 74 65 4F  .........UpdateO
  00005650: 76 65 72 6C 61 79 F2 F1 0B 14 0B 00 30 11 00 00  verlay......0...
  00005660: 0D 45 6E 61 62 6C 65 4F 76 65 72 6C 61 79 F2 F1  .EnableOverlay..
  00005670: 0B 14 0B 00 89 10 00 00 13 42 65 67 69 6E 56 69  .........BeginVi
  00005680: 73 69 62 69 6C 69 74 79 54 65 73 74 0B 14 0B 00  sibilityTest....
  00005690: BC 10 00 00 11 45 6E 64 56 69 73 69 62 69 6C 69  .....EndVisibili
  000056A0: 74 79 54 65 73 74 F2 F1 0B 14 0B 00 32 11 00 00  tyTest......2...
  000056B0: 17 47 65 74 56 69 73 69 62 69 6C 69 74 79 54 65  .GetVisibilityTe
  000056C0: 73 74 52 65 73 75 6C 74 0B 14 0B 00 33 11 00 00  stResult....3...
  000056D0: 16 47 65 74 4F 76 65 72 6C 61 79 55 70 64 61 74  .GetOverlayUpdat
  000056E0: 65 53 74 61 74 75 73 F1 0B 14 0B 00 37 11 00 00  eStatus.....7...
  000056F0: 15 47 65 74 44 69 73 70 6C 61 79 46 69 65 6C 64  .GetDisplayField
  00005700: 53 74 61 74 75 73 F2 F1 0B 14 0B 00 39 11 00 00  Status......9...
  00005710: 0F 53 65 74 56 65 72 74 65 78 44 61 74 61 32 66  .SetVertexData2f
  00005720: 0B 14 0B 00 3B 11 00 00 0F 53 65 74 56 65 72 74  ....;....SetVert
  00005730: 65 78 44 61 74 61 34 66 0B 14 0B 00 3D 11 00 00  exData4f....=...
  00005740: 0F 53 65 74 56 65 72 74 65 78 44 61 74 61 32 73  .SetVertexData2s
  00005750: 0B 14 0B 00 3F 11 00 00 0F 53 65 74 56 65 72 74  ....?....SetVert
  00005760: 65 78 44 61 74 61 34 73 0B 14 0B 00 41 11 00 00  exData4s....A...
  00005770: 10 53 65 74 56 65 72 74 65 78 44 61 74 61 34 75  .SetVertexData4u
  00005780: 62 F3 F2 F1 0B 14 0B 00 43 11 00 00 12 53 65 74  b.......C....Set
  00005790: 56 65 72 74 65 78 44 61 74 61 43 6F 6C 6F 72 F1  VertexDataColor.
  000057A0: 0B 14 0B 00 45 11 00 00 05 42 65 67 69 6E F2 F1  ....E....Begin..
  000057B0: 0B 14 0B 00 89 10 00 00 03 45 6E 64 0B 14 0B 00  .........End....
  000057C0: 4A 11 00 00 0B 43 72 65 61 74 65 46 69 78 75 70  J....CreateFixup
  000057D0: 0B 14 0B 00 4F 11 00 00 10 43 72 65 61 74 65 50  ....O....CreateP
  000057E0: 75 73 68 42 75 66 66 65 72 F3 F2 F1 0B 14 0B 00  ushBuffer.......
  000057F0: 51 11 00 00 0F 42 65 67 69 6E 50 75 73 68 42 75  Q....BeginPushBu
  00005800: 66 66 65 72 0B 14 0B 00 89 10 00 00 0D 45 6E 64  ffer.........End
  00005810: 50 75 73 68 42 75 66 66 65 72 F2 F1 0B 14 0B 00  PushBuffer......
  00005820: 53 11 00 00 0D 52 75 6E 50 75 73 68 42 75 66 66  S....RunPushBuff
  00005830: 65 72 F2 F1 0B 14 0B 00 DF 10 00 00 13 47 65 74  er...........Get
  00005840: 50 75 73 68 42 75 66 66 65 72 4F 66 66 73 65 74  PushBufferOffset
  00005850: 0B 14 0B 00 89 10 00 00 03 4E 6F 70 0B 14 0B 00  .........Nop....
  00005860: 55 11 00 00 1B 47 65 74 50 72 6F 6A 65 63 74 69  U....GetProjecti
  00005870: 6F 6E 56 69 65 77 70 6F 72 74 4D 61 74 72 69 78  onViewportMatrix
  00005880: 0B 14 0B 00 57 11 00 00 0C 53 65 74 4D 6F 64 65  ....W....SetMode
  00005890: 6C 56 69 65 77 F3 F2 F1 0B 14 0B 00 55 11 00 00  lView.......U...
  000058A0: 0C 47 65 74 4D 6F 64 65 6C 56 69 65 77 F3 F2 F1  .GetModelView...
  000058B0: 0B 14 0B 00 59 11 00 00 17 53 65 74 56 65 72 74  ....Y....SetVert
  000058C0: 65 78 42 6C 65 6E 64 4D 6F 64 65 6C 56 69 65 77  exBlendModelView
  000058D0: 0B 14 0B 00 5B 11 00 00 17 47 65 74 56 65 72 74  ....[....GetVert
  000058E0: 65 78 42 6C 65 6E 64 4D 6F 64 65 6C 56 69 65 77  exBlendModelView
  000058F0: 0B 14 0B 00 60 11 00 00 14 53 65 74 56 65 72 74  ....`....SetVert
  00005900: 65 78 53 68 61 64 65 72 49 6E 70 75 74 F3 F2 F1  exShaderInput...
  00005910: 0B 14 0B 00 62 11 00 00 1A 53 65 74 56 65 72 74  ....b....SetVert
  00005920: 65 78 53 68 61 64 65 72 49 6E 70 75 74 44 69 72  exShaderInputDir
  00005930: 65 63 74 F1 0B 14 0B 00 65 11 00 00 14 47 65 74  ect.....e....Get
  00005940: 56 65 72 74 65 78 53 68 61 64 65 72 49 6E 70 75  VertexShaderInpu
  00005950: 74 F3 F2 F1 0B 14 0B 00 C7 10 00 00 0D 53 77 69  t............Swi
  00005960: 74 63 68 54 65 78 74 75 72 65 F2 F1 0B 14 0B 00  tchTexture......
  00005970: 89 10 00 00 07 53 75 73 70 65 6E 64 0B 14 0B 00  .....Suspend....
  00005980: 30 11 00 00 06 52 65 73 75 6D 65 F1 0B 14 0B 00  0....Resume.....
  00005990: 67 11 00 00 0B 53 65 74 53 63 69 73 73 6F 72 73  g....SetScissors
  000059A0: 0B 14 0B 00 6A 11 00 00 0B 47 65 74 53 63 69 73  ....j....GetScis
  000059B0: 73 6F 72 73 0B 14 0B 00 6F 11 00 00 07 53 65 74  sors....o....Set
  000059C0: 54 69 6C 65 0B 14 0B 00 72 11 00 00 07 47 65 74  Tile....r....Get
  000059D0: 54 69 6C 65 0B 14 0B 00 73 11 00 00 16 47 65 74  Tile....s....Get
  000059E0: 54 69 6C 65 43 6F 6D 70 72 65 73 73 69 6F 6E 54  TileCompressionT
  000059F0: 61 67 73 F1 0B 14 0B 00 75 11 00 00 19 53 65 74  ags.....u....Set
  00005A00: 54 69 6C 65 43 6F 6D 70 72 65 73 73 69 6F 6E 54  TileCompressionT
  00005A10: 61 67 42 69 74 73 F2 F1 0B 14 0B 00 77 11 00 00  agBits......w...
  00005A20: 19 47 65 74 54 69 6C 65 43 6F 6D 70 72 65 73 73  .GetTileCompress
  00005A30: 69 6F 6E 54 61 67 42 69 74 73 F2 F1 0B 14 0B 00  ionTagBits......
  00005A40: 7A 11 00 00 09 42 65 67 69 6E 50 75 73 68 F2 F1  z....BeginPush..
  00005A50: 0B 14 0B 00 DF 10 00 00 07 45 6E 64 50 75 73 68  .........EndPush
  00005A60: 0B 14 0B 00 33 11 00 00 06 49 73 42 75 73 79 F1  ....3....IsBusy.
  00005A70: 0B 14 0B 00 7B 11 00 00 0E 42 6C 6F 63 6B 55 6E  ....{....BlockUn
  00005A80: 74 69 6C 49 64 6C 65 F1 0B 14 0B 00 7B 11 00 00  tilIdle.....{...
  00005A90: 0E 4B 69 63 6B 50 75 73 68 42 75 66 66 65 72 F1  .KickPushBuffer.
  00005AA0: 0B 14 0B 00 82 11 00 00 18 53 65 74 56 65 72 74  .........SetVert
  00005AB0: 69 63 61 6C 42 6C 61 6E 6B 43 61 6C 6C 62 61 63  icalBlankCallbac
  00005AC0: 6B F3 F2 F1 0B 14 0B 00 89 11 00 00 0F 53 65 74  k............Set
  00005AD0: 53 77 61 70 43 61 6C 6C 62 61 63 6B 0B 14 0B 00  SwapCallback....
  00005AE0: 7B 11 00 00 17 42 6C 6F 63 6B 55 6E 74 69 6C 56  {....BlockUntilV
  00005AF0: 65 72 74 69 63 61 6C 42 6C 61 6E 6B 0B 14 0B 00  erticalBlank....
  00005B00: 8A 11 00 00 0B 49 6E 73 65 72 74 46 65 6E 63 65  .....InsertFence
  00005B10: 0B 14 0B 00 8B 11 00 00 0E 49 73 46 65 6E 63 65  .........IsFence
  00005B20: 50 65 6E 64 69 6E 67 F1 0B 14 0B 00 8C 11 00 00  Pending.........
  00005B30: 0C 42 6C 6F 63 6B 4F 6E 46 65 6E 63 65 F3 F2 F1  .BlockOnFence...
  00005B40: 0B 14 0B 00 92 11 00 00 0E 49 6E 73 65 72 74 43  .........InsertC
  00005B50: 61 6C 6C 62 61 63 6B F1 0B 14 0B 00 7B 11 00 00  allback.....{...
  00005B60: 10 46 6C 75 73 68 56 65 72 74 65 78 43 61 63 68  .FlushVertexCach
  00005B70: 65 F3 F2 F1 0B 14 0B 00 8C 11 00 00 10 53 65 74  e............Set
  00005B80: 46 6C 69 63 6B 65 72 46 69 6C 74 65 72 F3 F2 F1  FlickerFilter...
  00005B90: 0B 14 0B 00 93 11 00 00 14 53 65 74 53 6F 66 74  .........SetSoft
  00005BA0: 44 69 73 70 6C 61 79 46 69 6C 74 65 72 F3 F2 F1  DisplayFilter...
  00005BB0: 0B 14 0B 00 9B 11 00 00 11 53 65 74 43 6F 70 79  .........SetCopy
  00005BC0: 52 65 63 74 73 53 74 61 74 65 F2 F1 0B 14 0B 00  RectsState......
  00005BD0: 9F 11 00 00 11 47 65 74 43 6F 70 79 52 65 63 74  .....GetCopyRect
  00005BE0: 73 53 74 61 74 65 F2 F1 0B 14 0B 00 89 10 00 00  sState..........
  00005BF0: 0E 50 65 72 73 69 73 74 44 69 73 70 6C 61 79 F1  .PersistDisplay.
  00005C00: 0B 14 0B 00 88 10 00 00 13 47 65 74 50 65 72 73  .........GetPers
  00005C10: 69 73 74 65 64 53 75 72 66 61 63 65 0B 14 0B 00  istedSurface....
  00005C20: A0 11 00 00 04 53 77 61 70 F3 F2 F1 0B 14 0B 00  .....Swap.......
  00005C30: A2 11 00 00 12 53 65 74 42 61 63 6B 42 75 66 66  .....SetBackBuff
  00005C40: 65 72 53 63 61 6C 65 F1 0B 14 0B 00 A4 11 00 00  erScale.........
  00005C50: 12 47 65 74 42 61 63 6B 42 75 66 66 65 72 53 63  .GetBackBufferSc
  00005C60: 61 6C 65 F1 0B 14 0B 00 A2 11 00 00 14 53 65 74  ale..........Set
  00005C70: 53 63 72 65 65 6E 53 70 61 63 65 4F 66 66 73 65  ScreenSpaceOffse
  00005C80: 74 F3 F2 F1 0B 14 0B 00 A4 11 00 00 14 47 65 74  t............Get
  00005C90: 53 63 72 65 65 6E 53 70 61 63 65 4F 66 66 73 65  ScreenSpaceOffse
  00005CA0: 74 F3 F2 F1 0B 14 0B 00 A6 11 00 00 10 53 65 74  t............Set
  00005CB0: 4F 76 65 72 73 63 61 6E 43 6F 6C 6F 72 F3 F2 F1  OverscanColor...
  00005CC0: 0B 14 0B 00 A7 11 00 00 10 47 65 74 4F 76 65 72  .........GetOver
  00005CD0: 73 63 61 6E 43 6F 6C 6F 72 F3 F2 F1 0B 14 0B 00  scanColor.......
  00005CE0: A0 11 00 00 0E 53 65 74 44 65 62 75 67 4D 61 72  .....SetDebugMar
  00005CF0: 6B 65 72 F1 0B 14 0B 00 8A 11 00 00 0E 47 65 74  ker..........Get
  00005D00: 44 65 62 75 67 4D 61 72 6B 65 72 F1 1E 00 05 10  DebugMarker.....
  00005D10: A4 00 00 00 A8 11 00 00 00 00 00 00 00 00 00 00  ................
  00005D20: 01 00 09 44 33 44 44 65 76 69 63 65 9A 00 03 12  ...D3DDevice....
  00005D30: 03 04 03 00 01 00 15 44 33 44 53 57 41 50 45 46  .......D3DSWAPEF
  00005D40: 46 45 43 54 5F 44 49 53 43 41 52 44 03 04 03 00  FECT_DISCARD....
  00005D50: 02 00 12 44 33 44 53 57 41 50 45 46 46 45 43 54  ...D3DSWAPEFFECT
  00005D60: 5F 46 4C 49 50 F3 F2 F1 03 04 03 00 03 00 12 44  _FLIP..........D
  00005D70: 33 44 53 57 41 50 45 46 46 45 43 54 5F 43 4F 50  3DSWAPEFFECT_COP
  00005D80: 59 F3 F2 F1 03 04 03 00 04 00 18 44 33 44 53 57  Y..........D3DSW
  00005D90: 41 50 45 46 46 45 43 54 5F 43 4F 50 59 5F 56 53  APEFFECT_COPY_VS
  00005DA0: 59 4E 43 F1 03 04 03 00 04 80 FF FF FF 7F 19 44  YNC............D
  00005DB0: 33 44 53 57 41 50 45 46 46 45 43 54 5F 46 4F 52  3DSWAPEFFECT_FOR
  00005DC0: 43 45 5F 44 57 4F 52 44 1E 00 07 10 05 00 00 00  CE_DWORD........
  00005DD0: 74 00 00 00 AA 11 00 00 0E 5F 44 33 44 53 57 41  t........_D3DSWA
  00005DE0: 50 45 46 46 45 43 54 F1 1E 00 05 10 00 00 80 00  PEFFECT.........
  00005DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 06 48  ...............H
  00005E00: 57 4E 44 5F 5F F3 F2 F1 0A 00 02 10 AC 11 00 00  WND__...........
  00005E10: 0A 00 00 00 0E 00 03 10 51 10 00 00 11 00 00 00  ........Q.......
  00005E20: 0C 00 00 F1 BA 01 03 12 05 14 03 00 75 00 00 00  ............u...
  00005E30: 00 00 0F 42 61 63 6B 42 75 66 66 65 72 57 69 64  ...BackBufferWid
  00005E40: 74 68 F2 F1 05 14 03 00 75 00 00 00 04 00 10 42  th......u......B
  00005E50: 61 63 6B 42 75 66 66 65 72 48 65 69 67 68 74 F1  ackBufferHeight.
  00005E60: 05 14 03 00 1B 10 00 00 08 00 10 42 61 63 6B 42  ...........BackB
  00005E70: 75 66 66 65 72 46 6F 72 6D 61 74 F1 05 14 03 00  ufferFormat.....
  00005E80: 75 00 00 00 0C 00 0F 42 61 63 6B 42 75 66 66 65  u......BackBuffe
  00005E90: 72 43 6F 75 6E 74 F2 F1 05 14 03 00 22 00 00 00  rCount......"...
  00005EA0: 10 00 0F 4D 75 6C 74 69 53 61 6D 70 6C 65 54 79  ...MultiSampleTy
  00005EB0: 70 65 F2 F1 05 14 03 00 AB 11 00 00 14 00 0A 53  pe.............S
  00005EC0: 77 61 70 45 66 66 65 63 74 F3 F2 F1 05 14 03 00  wapEffect.......
  00005ED0: AD 11 00 00 18 00 0D 68 44 65 76 69 63 65 57 69  .......hDeviceWi
  00005EE0: 6E 64 6F 77 05 14 03 00 74 00 00 00 1C 00 08 57  ndow....t......W
  00005EF0: 69 6E 64 6F 77 65 64 F1 05 14 03 00 74 00 00 00  indowed.....t...
  00005F00: 20 00 16 45 6E 61 62 6C 65 41 75 74 6F 44 65 70   ..EnableAutoDep
  00005F10: 74 68 53 74 65 6E 63 69 6C F3 F2 F1 05 14 03 00  thStencil.......
  00005F20: 1B 10 00 00 24 00 16 41 75 74 6F 44 65 70 74 68  ....$..AutoDepth
  00005F30: 53 74 65 6E 63 69 6C 46 6F 72 6D 61 74 F3 F2 F1  StencilFormat...
  00005F40: 05 14 03 00 22 00 00 00 28 00 05 46 6C 61 67 73  ...."...(..Flags
  00005F50: 05 14 03 00 75 00 00 00 2C 00 1A 46 75 6C 6C 53  ....u...,..FullS
  00005F60: 63 72 65 65 6E 5F 52 65 66 72 65 73 68 52 61 74  creen_RefreshRat
  00005F70: 65 49 6E 48 7A F3 F2 F1 05 14 03 00 75 00 00 00  eInHz.......u...
  00005F80: 30 00 1F 46 75 6C 6C 53 63 72 65 65 6E 5F 50 72  0..FullScreen_Pr
  00005F90: 65 73 65 6E 74 61 74 69 6F 6E 49 6E 74 65 72 76  esentationInterv
  00005FA0: 61 6C F2 F1 05 14 03 00 AE 11 00 00 34 00 0E 42  al..........4..B
  00005FB0: 75 66 66 65 72 53 75 72 66 61 63 65 73 F3 F2 F1  ufferSurfaces...
  00005FC0: 05 14 03 00 51 10 00 00 40 00 13 44 65 70 74 68  ....Q...@..Depth
  00005FD0: 53 74 65 6E 63 69 6C 53 75 72 66 61 63 65 F2 F1  StencilSurface..
  00005FE0: 2E 00 05 10 0F 00 00 00 AF 11 00 00 00 00 00 00  ................
  00005FF0: 00 00 00 00 44 00 17 5F 44 33 44 50 52 45 53 45  ....D.._D3DPRESE
  00006000: 4E 54 5F 50 41 52 41 4D 45 54 45 52 53 5F F2 F1  NT_PARAMETERS_..
  00006010: 66 00 03 12 05 14 03 00 75 00 00 00 00 00 0E 41  f.......u......A
  00006020: 64 61 70 74 65 72 4F 72 64 69 6E 61 6C F3 F2 F1  dapterOrdinal...
  00006030: 05 14 03 00 19 10 00 00 04 00 0A 44 65 76 69 63  ...........Devic
  00006040: 65 54 79 70 65 F3 F2 F1 05 14 03 00 AD 11 00 00  eType...........
  00006050: 08 00 0C 68 46 6F 63 75 73 57 69 6E 64 6F 77 F1  ...hFocusWindow.
  00006060: 05 14 03 00 22 00 00 00 0C 00 0D 42 65 68 61 76  ...."......Behav
  00006070: 69 6F 72 46 6C 61 67 73 36 00 05 10 04 00 00 00  iorFlags6.......
  00006080: B1 11 00 00 00 00 00 00 00 00 00 00 10 00 1E 5F  ..............._
  00006090: 44 33 44 44 45 56 49 43 45 5F 43 52 45 41 54 49  D3DDEVICE_CREATI
  000060A0: 4F 4E 5F 50 41 52 41 4D 45 54 45 52 53 F3 F2 F1  ON_PARAMETERS...
  000060B0: 46 00 03 12 05 14 03 00 12 00 00 00 00 00 04 6C  F..............l
  000060C0: 65 66 74 F1 05 14 03 00 12 00 00 00 04 00 03 74  eft............t
  000060D0: 6F 70 F2 F1 05 14 03 00 12 00 00 00 08 00 05 72  op.............r
  000060E0: 69 67 68 74 05 14 03 00 12 00 00 00 0C 00 06 62  ight...........b
  000060F0: 6F 74 74 6F 6D F3 F2 F1 1E 00 05 10 04 00 00 00  ottom...........
  00006100: B3 11 00 00 00 00 00 00 00 00 00 00 10 00 07 74  ...............t
  00006110: 61 67 52 45 43 54 F2 F1 26 00 05 10 00 00 80 00  agRECT..&.......
  00006120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 11 44  ...............D
  00006130: 33 44 50 69 78 65 6C 43 6F 6E 74 61 69 6E 65 72  3DPixelContainer
  00006140: 0A 00 01 12 01 00 00 00 C3 10 00 00 0A 00 02 10  ................
  00006150: 50 10 00 00 0A 04 00 00 1A 00 09 10 12 00 00 00  P...............
  00006160: 50 10 00 00 B7 11 00 00 07 00 01 00 B6 11 00 00  P...............
  00006170: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  00006180: 00 00 00 00 00 00 00 00 00 00 10 5F 44 33 44 53  ..........._D3DS
  00006190: 55 52 46 41 43 45 5F 44 45 53 43 F1 0A 00 02 10  URFACE_DESC.....
  000061A0: B9 11 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  ................
  000061B0: BA 11 00 00 1A 00 09 10 12 00 00 00 50 10 00 00  ............P...
  000061C0: B7 11 00 00 07 00 01 00 BB 11 00 00 00 00 00 00  ................
  000061D0: 26 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  &...............
  000061E0: 00 00 00 00 00 00 0F 5F 44 33 44 4C 4F 43 4B 45  ......._D3DLOCKE
  000061F0: 44 5F 52 45 43 54 F2 F1 0A 00 02 10 BD 11 00 00  D_RECT..........
  00006200: 0A 00 00 00 12 00 01 12 03 00 00 00 BE 11 00 00  ................
  00006210: 4D 10 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  M..."...........
  00006220: 50 10 00 00 B7 11 00 00 07 00 03 00 BF 11 00 00  P...............
  00006230: 00 00 00 00 1A 00 09 10 12 00 00 00 50 10 00 00  ............P...
  00006240: B7 11 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  00006250: 72 00 03 12 00 14 03 00 B5 11 00 00 00 00 F2 F1  r...............
  00006260: 0B 14 03 00 B8 11 00 00 0C 47 65 74 43 6F 6E 74  .........GetCont
  00006270: 61 69 6E 65 72 F3 F2 F1 0B 14 03 00 BC 11 00 00  ainer...........
  00006280: 07 47 65 74 44 65 73 63 0B 14 03 00 C0 11 00 00  .GetDesc........
  00006290: 08 4C 6F 63 6B 52 65 63 74 F3 F2 F1 0B 14 03 00  .LockRect.......
  000062A0: C1 11 00 00 0A 55 6E 6C 6F 63 6B 52 65 63 74 F1  .....UnlockRect.
  000062B0: 05 14 03 00 C2 10 00 00 14 00 06 50 61 72 65 6E  ...........Paren
  000062C0: 74 F3 F2 F1 22 00 05 10 06 00 00 00 C2 11 00 00  t..."...........
  000062D0: 00 00 00 00 00 00 00 00 18 00 0A 44 33 44 53 75  ...........D3DSu
  000062E0: 72 66 61 63 65 F3 F2 F1 2A 00 03 12 05 14 03 00  rface...*.......
  000062F0: 74 00 00 00 00 00 08 49 6E 56 42 6C 61 6E 6B F1  t......InVBlank.
  00006300: 05 14 03 00 75 00 00 00 04 00 08 53 63 61 6E 4C  ....u......ScanL
  00006310: 69 6E 65 F1 26 00 05 10 02 00 00 00 C4 11 00 00  ine.&...........
  00006320: 00 00 00 00 00 00 00 00 08 00 11 5F 44 33 44 52  ..........._D3DR
  00006330: 41 53 54 45 52 5F 53 54 41 54 55 53 0E 00 03 10  ASTER_STATUS....
  00006340: 20 00 00 00 11 00 00 00 00 01 00 F1 32 00 03 12   ...........2...
  00006350: 05 14 03 00 C6 11 00 00 00 00 03 72 65 64 F2 F1  ...........red..
  00006360: 05 14 03 00 C6 11 00 00 00 01 05 67 72 65 65 6E  ...........green
  00006370: 05 14 03 00 C6 11 00 00 00 02 04 62 6C 75 65 F1  ...........blue.
  00006380: 22 00 05 10 03 00 00 00 C7 11 00 00 00 00 00 00  "...............
  00006390: 00 00 00 00 00 03 0D 5F 44 33 44 47 41 4D 4D 41  ......._D3DGAMMA
  000063A0: 52 41 4D 50 0E 00 01 12 02 00 00 00 75 00 00 00  RAMP........u...
  000063B0: BA 11 00 00 0A 00 02 10 61 10 00 00 0A 04 00 00  ........a.......
  000063C0: 1A 00 09 10 12 00 00 00 61 10 00 00 CA 11 00 00  ........a.......
  000063D0: 07 00 02 00 C9 11 00 00 00 00 00 00 0E 00 01 12  ................
  000063E0: 02 00 00 00 75 00 00 00 52 10 00 00 1A 00 09 10  ....u...R.......
  000063F0: 12 00 00 00 61 10 00 00 CA 11 00 00 07 00 02 00  ....a...........
  00006400: CC 11 00 00 00 00 00 00 16 00 01 12 04 00 00 00  ................
  00006410: 75 00 00 00 BE 11 00 00 4D 10 00 00 22 00 00 00  u.......M..."...
  00006420: 1A 00 09 10 12 00 00 00 61 10 00 00 CA 11 00 00  ........a.......
  00006430: 07 00 04 00 CE 11 00 00 00 00 00 00 1A 00 09 10  ................
  00006440: 12 00 00 00 61 10 00 00 CA 11 00 00 07 00 01 00  ....a...........
  00006450: 10 10 00 00 00 00 00 00 66 00 03 12 00 14 03 00  ........f.......
  00006460: C1 10 00 00 00 00 F2 F1 0B 14 03 00 CB 11 00 00  ................
  00006470: 0C 47 65 74 4C 65 76 65 6C 44 65 73 63 F3 F2 F1  .GetLevelDesc...
  00006480: 0B 14 03 00 CD 11 00 00 0F 47 65 74 53 75 72 66  .........GetSurf
  00006490: 61 63 65 4C 65 76 65 6C 0B 14 03 00 CF 11 00 00  aceLevel........
  000064A0: 08 4C 6F 63 6B 52 65 63 74 F3 F2 F1 0B 14 03 00  .LockRect.......
  000064B0: D0 11 00 00 0A 55 6E 6C 6F 63 6B 52 65 63 74 F1  .....UnlockRect.
  000064C0: 22 00 05 10 05 00 00 00 D1 11 00 00 00 00 00 00  "...............
  000064D0: 00 00 00 00 14 00 0A 44 33 44 54 65 78 74 75 72  .......D3DTextur
  000064E0: 65 F3 F2 F1 26 00 05 10 00 00 80 00 00 00 00 00  e...&...........
  000064F0: 00 00 00 00 00 00 00 00 00 00 0F 5F 44 33 44 56  ..........._D3DV
  00006500: 4F 4C 55 4D 45 5F 44 45 53 43 F2 F1 0A 00 02 10  OLUME_DESC......
  00006510: D3 11 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  00006520: 75 00 00 00 D4 11 00 00 0A 00 02 10 66 10 00 00  u...........f...
  00006530: 0A 04 00 00 1A 00 09 10 12 00 00 00 66 10 00 00  ............f...
  00006540: D6 11 00 00 07 00 02 00 D5 11 00 00 00 00 00 00  ................
  00006550: 1E 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  ................
  00006560: 00 00 00 00 00 00 09 44 33 44 56 6F 6C 75 6D 65  .......D3DVolume
  00006570: 0A 00 02 10 D8 11 00 00 0A 00 00 00 0A 00 02 10  ................
  00006580: D9 11 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  00006590: 75 00 00 00 DA 11 00 00 1A 00 09 10 12 00 00 00  u...............
  000065A0: 66 10 00 00 D6 11 00 00 07 00 02 00 DB 11 00 00  f...............
  000065B0: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  000065C0: 00 00 00 00 00 00 00 00 00 00 0E 5F 44 33 44 4C  ..........._D3DL
  000065D0: 4F 43 4B 45 44 5F 42 4F 58 F3 F2 F1 0A 00 02 10  OCKED_BOX.......
  000065E0: DD 11 00 00 0A 00 00 00 1E 00 05 10 00 00 80 00  ................
  000065F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 07 5F  ..............._
  00006600: 44 33 44 42 4F 58 F2 F1 0A 00 01 10 DF 11 00 00  D3DBOX..........
  00006610: 01 00 F2 F1 0A 00 02 10 E0 11 00 00 0A 00 00 00  ................
  00006620: 16 00 01 12 04 00 00 00 75 00 00 00 DE 11 00 00  ........u.......
  00006630: E1 11 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  ...."...........
  00006640: 66 10 00 00 D6 11 00 00 07 00 04 00 E2 11 00 00  f...............
  00006650: 00 00 00 00 1A 00 09 10 12 00 00 00 66 10 00 00  ............f...
  00006660: D6 11 00 00 07 00 01 00 10 10 00 00 00 00 00 00  ................
  00006670: 62 00 03 12 00 14 03 00 C1 10 00 00 00 00 F2 F1  b...............
  00006680: 0B 14 03 00 D7 11 00 00 0C 47 65 74 4C 65 76 65  .........GetLeve
  00006690: 6C 44 65 73 63 F3 F2 F1 0B 14 03 00 DC 11 00 00  lDesc...........
  000066A0: 0E 47 65 74 56 6F 6C 75 6D 65 4C 65 76 65 6C F1  .GetVolumeLevel.
  000066B0: 0B 14 03 00 E3 11 00 00 07 4C 6F 63 6B 42 6F 78  .........LockBox
  000066C0: 0B 14 03 00 E4 11 00 00 09 55 6E 6C 6F 63 6B 42  .........UnlockB
  000066D0: 6F 78 F2 F1 26 00 05 10 05 00 00 00 E5 11 00 00  ox..&...........
  000066E0: 00 00 00 00 00 00 00 00 14 00 10 44 33 44 56 6F  ...........D3DVo
  000066F0: 6C 75 6D 65 54 65 78 74 75 72 65 F1 0A 00 02 10  lumeTexture.....
  00006700: 6B 10 00 00 0A 04 00 00 1A 00 09 10 12 00 00 00  k...............
  00006710: 6B 10 00 00 E7 11 00 00 07 00 02 00 C9 11 00 00  k...............
  00006720: 00 00 00 00 02 01 03 12 03 04 03 00 00 00 1A 44  ...............D
  00006730: 33 44 43 55 42 45 4D 41 50 5F 46 41 43 45 5F 50  3DCUBEMAP_FACE_P
  00006740: 4F 53 49 54 49 56 45 5F 58 F3 F2 F1 03 04 03 00  OSITIVE_X.......
  00006750: 01 00 1A 44 33 44 43 55 42 45 4D 41 50 5F 46 41  ...D3DCUBEMAP_FA
  00006760: 43 45 5F 4E 45 47 41 54 49 56 45 5F 58 F3 F2 F1  CE_NEGATIVE_X...
  00006770: 03 04 03 00 02 00 1A 44 33 44 43 55 42 45 4D 41  .......D3DCUBEMA
  00006780: 50 5F 46 41 43 45 5F 50 4F 53 49 54 49 56 45 5F  P_FACE_POSITIVE_
  00006790: 59 F3 F2 F1 03 04 03 00 03 00 1A 44 33 44 43 55  Y..........D3DCU
  000067A0: 42 45 4D 41 50 5F 46 41 43 45 5F 4E 45 47 41 54  BEMAP_FACE_NEGAT
  000067B0: 49 56 45 5F 59 F3 F2 F1 03 04 03 00 04 00 1A 44  IVE_Y..........D
  000067C0: 33 44 43 55 42 45 4D 41 50 5F 46 41 43 45 5F 50  3DCUBEMAP_FACE_P
  000067D0: 4F 53 49 54 49 56 45 5F 5A F3 F2 F1 03 04 03 00  OSITIVE_Z.......
  000067E0: 05 00 1A 44 33 44 43 55 42 45 4D 41 50 5F 46 41  ...D3DCUBEMAP_FA
  000067F0: 43 45 5F 4E 45 47 41 54 49 56 45 5F 5A F3 F2 F1  CE_NEGATIVE_Z...
  00006800: 03 04 03 00 04 80 FF FF FF 7F 1B 44 33 44 43 55  ...........D3DCU
  00006810: 42 45 4D 41 50 5F 46 41 43 45 5F 46 4F 52 43 45  BEMAP_FACE_FORCE
  00006820: 5F 44 57 4F 52 44 F2 F1 22 00 07 10 07 00 00 00  _DWORD..".......
  00006830: 74 00 00 00 E9 11 00 00 11 5F 44 33 44 43 55 42  t........_D3DCUB
  00006840: 45 4D 41 50 5F 46 41 43 45 53 F2 F1 12 00 01 12  EMAP_FACES......
  00006850: 03 00 00 00 EA 11 00 00 75 00 00 00 52 10 00 00  ........u...R...
  00006860: 1A 00 09 10 12 00 00 00 6B 10 00 00 E7 11 00 00  ........k.......
  00006870: 07 00 03 00 EB 11 00 00 00 00 00 00 1A 00 01 12  ................
  00006880: 05 00 00 00 EA 11 00 00 75 00 00 00 BE 11 00 00  ........u.......
  00006890: 4D 10 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  M..."...........
  000068A0: 6B 10 00 00 E7 11 00 00 07 00 05 00 ED 11 00 00  k...............
  000068B0: 00 00 00 00 0E 00 01 12 02 00 00 00 EA 11 00 00  ................
  000068C0: 75 00 00 00 1A 00 09 10 12 00 00 00 6B 10 00 00  u...........k...
  000068D0: E7 11 00 00 07 00 02 00 EF 11 00 00 00 00 00 00  ................
  000068E0: 6A 00 03 12 00 14 03 00 C1 10 00 00 00 00 F2 F1  j...............
  000068F0: 0B 14 03 00 E8 11 00 00 0C 47 65 74 4C 65 76 65  .........GetLeve
  00006900: 6C 44 65 73 63 F3 F2 F1 0B 14 03 00 EC 11 00 00  lDesc...........
  00006910: 11 47 65 74 43 75 62 65 4D 61 70 53 75 72 66 61  .GetCubeMapSurfa
  00006920: 63 65 F2 F1 0B 14 03 00 EE 11 00 00 08 4C 6F 63  ce...........Loc
  00006930: 6B 52 65 63 74 F3 F2 F1 0B 14 03 00 F0 11 00 00  kRect...........
  00006940: 0A 55 6E 6C 6F 63 6B 52 65 63 74 F1 26 00 05 10  .UnlockRect.&...
  00006950: 05 00 00 00 F1 11 00 00 00 00 00 00 00 00 00 00  ................
  00006960: 14 00 0E 44 33 44 43 75 62 65 54 65 78 74 75 72  ...D3DCubeTextur
  00006970: 65 F3 F2 F1 22 00 05 10 00 00 80 00 00 00 00 00  e..."...........
  00006980: 00 00 00 00 00 00 00 00 00 00 0B 44 33 44 52 65  ...........D3DRe
  00006990: 73 6F 75 72 63 65 F2 F1 0A 00 02 10 20 04 00 00  source...... ...
  000069A0: 0A 00 00 00 16 00 01 12 04 00 00 00 75 00 00 00  ............u...
  000069B0: 75 00 00 00 F4 11 00 00 22 00 00 00 0A 00 02 10  u.......".......
  000069C0: 70 10 00 00 0A 04 00 00 1A 00 09 10 12 00 00 00  p...............
  000069D0: 70 10 00 00 F6 11 00 00 07 00 04 00 F5 11 00 00  p...............
  000069E0: 00 00 00 00 1A 00 09 10 12 00 00 00 70 10 00 00  ............p...
  000069F0: F6 11 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  00006A00: 2A 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  *...............
  00006A10: 00 00 00 00 00 00 15 5F 44 33 44 56 45 52 54 45  ......._D3DVERTE
  00006A20: 58 42 55 46 46 45 52 5F 44 45 53 43 0A 00 02 10  XBUFFER_DESC....
  00006A30: F9 11 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  ................
  00006A40: FA 11 00 00 1A 00 09 10 12 00 00 00 70 10 00 00  ............p...
  00006A50: F6 11 00 00 07 00 01 00 FB 11 00 00 00 00 00 00  ................
  00006A60: 3E 00 03 12 00 14 03 00 F3 11 00 00 00 00 F2 F1  >...............
  00006A70: 0B 14 03 00 F7 11 00 00 04 4C 6F 63 6B F3 F2 F1  .........Lock...
  00006A80: 0B 14 03 00 F8 11 00 00 06 55 6E 6C 6F 63 6B F1  .........Unlock.
  00006A90: 0B 14 03 00 FC 11 00 00 07 47 65 74 44 65 73 63  .........GetDesc
  00006AA0: 26 00 05 10 04 00 00 00 FD 11 00 00 00 00 00 00  &...............
  00006AB0: 00 00 00 00 0C 00 0F 44 33 44 56 65 72 74 65 78  .......D3DVertex
  00006AC0: 42 75 66 66 65 72 F2 F1 0A 00 02 10 75 10 00 00  Buffer......u...
  00006AD0: 0A 04 00 00 1A 00 09 10 12 00 00 00 75 10 00 00  ............u...
  00006AE0: FF 11 00 00 07 00 04 00 F5 11 00 00 00 00 00 00  ................
  00006AF0: 1A 00 09 10 12 00 00 00 75 10 00 00 FF 11 00 00  ........u.......
  00006B00: 07 00 00 00 09 10 00 00 00 00 00 00 2A 00 05 10  ............*...
  00006B10: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00006B20: 00 00 14 5F 44 33 44 49 4E 44 45 58 42 55 46 46  ..._D3DINDEXBUFF
  00006B30: 45 52 5F 44 45 53 43 F1 0A 00 02 10 02 12 00 00  ER_DESC.........
  00006B40: 0A 00 00 00 0A 00 01 12 01 00 00 00 03 12 00 00  ................
  00006B50: 1A 00 09 10 12 00 00 00 75 10 00 00 FF 11 00 00  ........u.......
  00006B60: 07 00 01 00 04 12 00 00 00 00 00 00 3E 00 03 12  ............>...
  00006B70: 00 14 03 00 F3 11 00 00 00 00 F2 F1 0B 14 03 00  ................
  00006B80: 00 12 00 00 04 4C 6F 63 6B F3 F2 F1 0B 14 03 00  .....Lock.......
  00006B90: 01 12 00 00 06 55 6E 6C 6F 63 6B F1 0B 14 03 00  .....Unlock.....
  00006BA0: 05 12 00 00 07 47 65 74 44 65 73 63 26 00 05 10  .....GetDesc&...
  00006BB0: 04 00 00 00 06 12 00 00 00 00 00 00 00 00 00 00  ................
  00006BC0: 0C 00 0E 44 33 44 49 6E 64 65 78 42 75 66 66 65  ...D3DIndexBuffe
  00006BD0: 72 F3 F2 F1 0A 00 02 10 22 04 00 00 0A 00 00 00  r.......".......
  00006BE0: 0E 00 01 12 02 00 00 00 08 12 00 00 22 00 00 00  ............"...
  00006BF0: 0A 00 02 10 24 11 00 00 0A 04 00 00 1A 00 09 10  ....$...........
  00006C00: 12 00 00 00 24 11 00 00 0A 12 00 00 07 00 02 00  ....$...........
  00006C10: 09 12 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  00006C20: 24 11 00 00 0A 12 00 00 07 00 00 00 09 10 00 00  $...............
  00006C30: 00 00 00 00 1A 00 09 10 23 11 00 00 24 11 00 00  ........#...$...
  00006C40: 0A 12 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  00006C50: 3E 00 03 12 00 14 03 00 F3 11 00 00 00 00 F2 F1  >...............
  00006C60: 0B 14 03 00 0B 12 00 00 04 4C 6F 63 6B F3 F2 F1  .........Lock...
  00006C70: 0B 14 03 00 0C 12 00 00 06 55 6E 6C 6F 63 6B F1  .........Unlock.
  00006C80: 0B 14 03 00 0D 12 00 00 07 47 65 74 53 69 7A 65  .........GetSize
  00006C90: 22 00 05 10 04 00 00 00 0E 12 00 00 00 00 00 00  "...............
  00006CA0: 00 00 00 00 0C 00 0A 44 33 44 50 61 6C 65 74 74  .......D3DPalett
  00006CB0: 65 F3 F2 F1 1A 00 03 12 05 14 03 00 12 00 00 00  e...............
  00006CC0: 00 00 01 78 05 14 03 00 12 00 00 00 04 00 01 79  ...x...........y
  00006CD0: 1E 00 05 10 02 00 00 00 10 12 00 00 00 00 00 00  ................
  00006CE0: 00 00 00 00 08 00 08 74 61 67 50 4F 49 4E 54 F1  .......tagPOINT.
  00006CF0: B2 00 03 12 05 14 03 00 22 00 00 00 00 00 03 52  ........"......R
  00006D00: 6F 70 F2 F1 05 14 03 00 22 00 00 00 04 00 05 53  op......"......S
  00006D10: 68 61 70 65 05 14 03 00 22 00 00 00 08 00 0D 50  hape...."......P
  00006D20: 61 74 74 65 72 6E 53 65 6C 65 63 74 05 14 03 00  atternSelect....
  00006D30: 22 00 00 00 0C 00 0A 4D 6F 6E 6F 43 6F 6C 6F 72  "......MonoColor
  00006D40: 30 F3 F2 F1 05 14 03 00 22 00 00 00 10 00 0A 4D  0......."......M
  00006D50: 6F 6E 6F 43 6F 6C 6F 72 31 F3 F2 F1 05 14 03 00  onoColor1.......
  00006D60: 22 00 00 00 14 00 0C 4D 6F 6E 6F 50 61 74 74 65  "......MonoPatte
  00006D70: 72 6E 30 F1 05 14 03 00 22 00 00 00 18 00 0C 4D  rn0....."......M
  00006D80: 6F 6E 6F 50 61 74 74 65 72 6E 31 F1 05 14 03 00  onoPattern1.....
  00006D90: DB 10 00 00 1C 00 0C 43 6F 6C 6F 72 50 61 74 74  .......ColorPatt
  00006DA0: 65 72 6E F1 2A 00 05 10 08 00 00 00 12 12 00 00  ern.*...........
  00006DB0: 00 00 00 00 00 00 00 00 20 00 14 5F 44 33 44 43  ........ .._D3DC
  00006DC0: 4F 50 59 52 45 43 54 52 4F 50 53 54 41 54 45 F1  OPYRECTROPSTATE.
  00006DD0: 56 02 03 12 03 04 03 00 00 00 20 44 33 44 43 4F  V......... D3DCO
  00006DE0: 50 59 52 45 43 54 5F 43 4F 4C 4F 52 5F 46 4F 52  PYRECT_COLOR_FOR
  00006DF0: 4D 41 54 5F 44 45 46 41 55 4C 54 F1 03 04 03 00  MAT_DEFAULT.....
  00006E00: 01 00 1B 44 33 44 43 4F 50 59 52 45 43 54 5F 43  ...D3DCOPYRECT_C
  00006E10: 4F 4C 4F 52 5F 46 4F 52 4D 41 54 5F 59 38 F2 F1  OLOR_FORMAT_Y8..
  00006E20: 03 04 03 00 02 00 2A 44 33 44 43 4F 50 59 52 45  ......*D3DCOPYRE
  00006E30: 43 54 5F 43 4F 4C 4F 52 5F 46 4F 52 4D 41 54 5F  CT_COLOR_FORMAT_
  00006E40: 58 31 52 35 47 35 42 35 5F 5A 31 52 35 47 35 42  X1R5G5B5_Z1R5G5B
  00006E50: 35 F3 F2 F1 03 04 03 00 03 00 2A 44 33 44 43 4F  5.........*D3DCO
  00006E60: 50 59 52 45 43 54 5F 43 4F 4C 4F 52 5F 46 4F 52  PYRECT_COLOR_FOR
  00006E70: 4D 41 54 5F 58 31 52 35 47 35 42 35 5F 4F 31 52  MAT_X1R5G5B5_O1R
  00006E80: 35 47 35 42 35 F3 F2 F1 03 04 03 00 04 00 1F 44  5G5B5..........D
  00006E90: 33 44 43 4F 50 59 52 45 43 54 5F 43 4F 4C 4F 52  3DCOPYRECT_COLOR
  00006EA0: 5F 46 4F 52 4D 41 54 5F 52 35 47 36 42 35 F2 F1  _FORMAT_R5G6B5..
  00006EB0: 03 04 03 00 05 00 1C 44 33 44 43 4F 50 59 52 45  .......D3DCOPYRE
  00006EC0: 43 54 5F 43 4F 4C 4F 52 5F 46 4F 52 4D 41 54 5F  CT_COLOR_FORMAT_
  00006ED0: 59 31 36 F1 03 04 03 00 06 00 2A 44 33 44 43 4F  Y16.......*D3DCO
  00006EE0: 50 59 52 45 43 54 5F 43 4F 4C 4F 52 5F 46 4F 52  PYRECT_COLOR_FOR
  00006EF0: 4D 41 54 5F 58 38 52 38 47 38 42 38 5F 5A 38 52  MAT_X8R8G8B8_Z8R
  00006F00: 38 47 38 42 38 F3 F2 F1 03 04 03 00 07 00 2A 44  8G8B8.........*D
  00006F10: 33 44 43 4F 50 59 52 45 43 54 5F 43 4F 4C 4F 52  3DCOPYRECT_COLOR
  00006F20: 5F 46 4F 52 4D 41 54 5F 58 38 52 38 47 38 42 38  _FORMAT_X8R8G8B8
  00006F30: 5F 4F 38 52 38 47 38 42 38 F3 F2 F1 03 04 03 00  _O8R8G8B8.......
  00006F40: 08 00 2E 44 33 44 43 4F 50 59 52 45 43 54 5F 43  ...D3DCOPYRECT_C
  00006F50: 4F 4C 4F 52 5F 46 4F 52 4D 41 54 5F 58 31 41 37  OLOR_FORMAT_X1A7
  00006F60: 52 38 47 38 42 38 5F 5A 31 41 37 52 38 47 38 42  R8G8B8_Z1A7R8G8B
  00006F70: 38 F3 F2 F1 03 04 03 00 09 00 2E 44 33 44 43 4F  8..........D3DCO
  00006F80: 50 59 52 45 43 54 5F 43 4F 4C 4F 52 5F 46 4F 52  PYRECT_COLOR_FOR
  00006F90: 4D 41 54 5F 58 31 41 37 52 38 47 38 42 38 5F 4F  MAT_X1A7R8G8B8_O
  00006FA0: 31 41 37 52 38 47 38 42 38 F3 F2 F1 03 04 03 00  1A7R8G8B8.......
  00006FB0: 0A 00 21 44 33 44 43 4F 50 59 52 45 43 54 5F 43  ..!D3DCOPYRECT_C
  00006FC0: 4F 4C 4F 52 5F 46 4F 52 4D 41 54 5F 41 38 52 38  OLOR_FORMAT_A8R8
  00006FD0: 47 38 42 38 03 04 03 00 0B 00 1C 44 33 44 43 4F  G8B8.......D3DCO
  00006FE0: 50 59 52 45 43 54 5F 43 4F 4C 4F 52 5F 46 4F 52  PYRECT_COLOR_FOR
  00006FF0: 4D 41 54 5F 59 33 32 F1 03 04 03 00 04 80 FF FF  MAT_Y32.........
  00007000: FF 7F 24 44 33 44 43 4F 50 59 52 45 43 54 5F 43  ..$D3DCOPYRECT_C
  00007010: 4F 4C 4F 52 5F 46 4F 52 4D 41 54 5F 46 4F 52 43  OLOR_FORMAT_FORC
  00007020: 45 5F 44 57 4F 52 44 F1 26 00 07 10 0D 00 00 00  E_DWORD.&.......
  00007030: 74 00 00 00 14 12 00 00 17 5F 44 33 44 43 4F 50  t........_D3DCOP
  00007040: 59 52 45 43 54 43 4F 4C 4F 52 46 4F 52 4D 41 54  YRECTCOLORFORMAT
  00007050: DE 00 03 12 03 04 03 00 00 00 17 44 33 44 43 4F  ...........D3DCO
  00007060: 50 59 52 45 43 54 5F 53 52 43 43 4F 50 59 5F 41  PYRECT_SRCCOPY_A
  00007070: 4E 44 F2 F1 03 04 03 00 01 00 13 44 33 44 43 4F  ND.........D3DCO
  00007080: 50 59 52 45 43 54 5F 52 4F 50 5F 41 4E 44 F2 F1  PYRECT_ROP_AND..
  00007090: 03 04 03 00 02 00 15 44 33 44 43 4F 50 59 52 45  .......D3DCOPYRE
  000070A0: 43 54 5F 42 4C 45 4E 44 5F 41 4E 44 03 04 03 00  CT_BLEND_AND....
  000070B0: 03 00 13 44 33 44 43 4F 50 59 52 45 43 54 5F 53  ...D3DCOPYRECT_S
  000070C0: 52 43 43 4F 50 59 F2 F1 03 04 03 00 04 00 1B 44  RCCOPY.........D
  000070D0: 33 44 43 4F 50 59 52 45 43 54 5F 53 52 43 43 4F  3DCOPYRECT_SRCCO
  000070E0: 50 59 5F 50 52 45 4D 55 4C 54 F2 F1 03 04 03 00  PY_PREMULT......
  000070F0: 05 00 19 44 33 44 43 4F 50 59 52 45 43 54 5F 42  ...D3DCOPYRECT_B
  00007100: 4C 45 4E 44 5F 50 52 45 4D 55 4C 54 03 04 03 00  LEND_PREMULT....
  00007110: 04 80 FF FF FF 7F 17 44 33 44 43 4F 50 59 52 45  .......D3DCOPYRE
  00007120: 43 54 5F 46 4F 52 43 45 5F 44 57 4F 52 44 F2 F1  CT_FORCE_DWORD..
  00007130: 26 00 07 10 07 00 00 00 74 00 00 00 16 12 00 00  &.......t.......
  00007140: 15 5F 44 33 44 43 4F 50 59 52 45 43 54 4F 50 45  ._D3DCOPYRECTOPE
  00007150: 52 41 54 49 4F 4E F2 F1 C2 00 03 12 05 14 03 00  RATION..........
  00007160: 15 12 00 00 00 00 0B 43 6F 6C 6F 72 46 6F 72 6D  .......ColorForm
  00007170: 61 74 F2 F1 05 14 03 00 17 12 00 00 04 00 09 4F  at.............O
  00007180: 70 65 72 61 74 69 6F 6E 05 14 03 00 74 00 00 00  peration....t...
  00007190: 08 00 0E 43 6F 6C 6F 72 4B 65 79 45 6E 61 62 6C  ...ColorKeyEnabl
  000071A0: 65 F3 F2 F1 05 14 03 00 22 00 00 00 0C 00 0D 43  e......."......C
  000071B0: 6F 6C 6F 72 4B 65 79 56 61 6C 75 65 05 14 03 00  olorKeyValue....
  000071C0: 22 00 00 00 10 00 0A 42 6C 65 6E 64 41 6C 70 68  "......BlendAlph
  000071D0: 61 F3 F2 F1 05 14 03 00 22 00 00 00 14 00 0C 50  a......."......P
  000071E0: 72 65 6D 75 6C 74 41 6C 70 68 61 F1 05 14 03 00  remultAlpha.....
  000071F0: 22 00 00 00 18 00 0D 43 6C 69 70 70 69 6E 67 50  "......ClippingP
  00007200: 6F 69 6E 74 05 14 03 00 22 00 00 00 1C 00 0C 43  oint...."......C
  00007210: 6C 69 70 70 69 6E 67 53 69 7A 65 F1 26 00 05 10  lippingSize.&...
  00007220: 08 00 00 00 18 12 00 00 00 00 00 00 00 00 00 00  ................
  00007230: 20 00 11 5F 44 33 44 43 4F 50 59 52 45 43 54 53   .._D3DCOPYRECTS
  00007240: 54 41 54 45 42 00 03 12 05 14 03 00 12 00 00 00  TATEB...........
  00007250: 00 00 02 78 31 F3 F2 F1 05 14 03 00 12 00 00 00  ...x1...........
  00007260: 04 00 02 79 31 F3 F2 F1 05 14 03 00 12 00 00 00  ...y1...........
  00007270: 08 00 02 78 32 F3 F2 F1 05 14 03 00 12 00 00 00  ...x2...........
  00007280: 0C 00 02 79 32 F3 F2 F1 1E 00 05 10 04 00 00 00  ...y2...........
  00007290: 1A 12 00 00 00 00 00 00 00 00 00 00 10 00 08 5F  ..............._
  000072A0: 44 33 44 52 45 43 54 F1 0E 00 03 10 40 00 00 00  D3DRECT.....@...
  000072B0: 11 00 00 00 10 00 00 F1 0E 00 03 10 1C 12 00 00  ................
  000072C0: 11 00 00 00 40 00 00 F1 0E 01 03 12 05 14 03 00  ....@...........
  000072D0: 40 00 00 00 00 00 03 5F 31 31 F2 F1 05 14 03 00  @......_11......
  000072E0: 40 00 00 00 04 00 03 5F 31 32 F2 F1 05 14 03 00  @......_12......
  000072F0: 40 00 00 00 08 00 03 5F 31 33 F2 F1 05 14 03 00  @......_13......
  00007300: 40 00 00 00 0C 00 03 5F 31 34 F2 F1 05 14 03 00  @......_14......
  00007310: 40 00 00 00 10 00 03 5F 32 31 F2 F1 05 14 03 00  @......_21......
  00007320: 40 00 00 00 14 00 03 5F 32 32 F2 F1 05 14 03 00  @......_22......
  00007330: 40 00 00 00 18 00 03 5F 32 33 F2 F1 05 14 03 00  @......_23......
  00007340: 40 00 00 00 1C 00 03 5F 32 34 F2 F1 05 14 03 00  @......_24......
  00007350: 40 00 00 00 20 00 03 5F 33 31 F2 F1 05 14 03 00  @... .._31......
  00007360: 40 00 00 00 24 00 03 5F 33 32 F2 F1 05 14 03 00  @...$.._32......
  00007370: 40 00 00 00 28 00 03 5F 33 33 F2 F1 05 14 03 00  @...(.._33......
  00007380: 40 00 00 00 2C 00 03 5F 33 34 F2 F1 05 14 03 00  @...,.._34......
  00007390: 40 00 00 00 30 00 03 5F 34 31 F2 F1 05 14 03 00  @...0.._41......
  000073A0: 40 00 00 00 34 00 03 5F 34 32 F2 F1 05 14 03 00  @...4.._42......
  000073B0: 40 00 00 00 38 00 03 5F 34 33 F2 F1 05 14 03 00  @...8.._43......
  000073C0: 40 00 00 00 3C 00 03 5F 34 34 F2 F1 05 14 03 00  @...<.._44......
  000073D0: 1D 12 00 00 00 00 01 6D 22 00 05 10 11 00 00 00  .......m".......
  000073E0: 1E 12 00 00 00 00 00 00 00 00 00 00 40 00 0A 5F  ............@.._
  000073F0: 44 33 44 4D 41 54 52 49 58 F3 F2 F1 5E 00 03 12  D3DMATRIX...^...
  00007400: 05 14 03 00 22 00 00 00 00 00 01 58 05 14 03 00  ...."......X....
  00007410: 22 00 00 00 04 00 01 59 05 14 03 00 22 00 00 00  "......Y...."...
  00007420: 08 00 05 57 69 64 74 68 05 14 03 00 22 00 00 00  ...Width...."...
  00007430: 0C 00 06 48 65 69 67 68 74 F3 F2 F1 05 14 03 00  ...Height.......
  00007440: 40 00 00 00 10 00 04 4D 69 6E 5A F1 05 14 03 00  @......MinZ.....
  00007450: 40 00 00 00 14 00 04 4D 61 78 5A F1 22 00 05 10  @......MaxZ."...
  00007460: 06 00 00 00 20 12 00 00 00 00 00 00 00 00 00 00  .... ...........
  00007470: 18 00 0D 5F 44 33 44 56 49 45 57 50 4F 52 54 38  ..._D3DVIEWPORT8
  00007480: 26 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  &...............
  00007490: 00 00 00 00 00 00 0E 5F 44 33 44 43 4F 4C 4F 52  ......._D3DCOLOR
  000074A0: 56 41 4C 55 45 F3 F2 F1 62 00 03 12 05 14 03 00  VALUE...b.......
  000074B0: 22 12 00 00 00 00 07 44 69 66 66 75 73 65 F2 F1  "......Diffuse..
  000074C0: 05 14 03 00 22 12 00 00 10 00 07 41 6D 62 69 65  ...."......Ambie
  000074D0: 6E 74 F2 F1 05 14 03 00 22 12 00 00 20 00 08 53  nt......"... ..S
  000074E0: 70 65 63 75 6C 61 72 F1 05 14 03 00 22 12 00 00  pecular....."...
  000074F0: 30 00 08 45 6D 69 73 73 69 76 65 F1 05 14 03 00  0..Emissive.....
  00007500: 40 00 00 00 40 00 05 50 6F 77 65 72 22 00 05 10  @...@..Power"...
  00007510: 05 00 00 00 23 12 00 00 00 00 00 00 00 00 00 00  ....#...........
  00007520: 44 00 0D 5F 44 33 44 4D 41 54 45 52 49 41 4C 38  D.._D3DMATERIAL8
  00007530: 6A 00 03 12 03 04 03 00 01 00 0E 44 33 44 4C 49  j..........D3DLI
  00007540: 47 48 54 5F 50 4F 49 4E 54 F3 F2 F1 03 04 03 00  GHT_POINT.......
  00007550: 02 00 0D 44 33 44 4C 49 47 48 54 5F 53 50 4F 54  ...D3DLIGHT_SPOT
  00007560: 03 04 03 00 03 00 14 44 33 44 4C 49 47 48 54 5F  .......D3DLIGHT_
  00007570: 44 49 52 45 43 54 49 4F 4E 41 4C F1 03 04 03 00  DIRECTIONAL.....
  00007580: 04 80 FF FF FF 7F 14 44 33 44 4C 49 47 48 54 5F  .......D3DLIGHT_
  00007590: 46 4F 52 43 45 5F 44 57 4F 52 44 F1 1E 00 07 10  FORCE_DWORD.....
  000075A0: 04 00 00 00 74 00 00 00 25 12 00 00 0D 5F 44 33  ....t...%...._D3
  000075B0: 44 4C 49 47 48 54 54 59 50 45 F2 F1 22 00 05 10  DLIGHTTYPE.."...
  000075C0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  000075D0: 00 00 0A 5F 44 33 44 56 45 43 54 4F 52 F3 F2 F1  ..._D3DVECTOR...
  000075E0: 02 01 03 12 05 14 03 00 26 12 00 00 00 00 04 54  ........&......T
  000075F0: 79 70 65 F1 05 14 03 00 22 12 00 00 04 00 07 44  ype....."......D
  00007600: 69 66 66 75 73 65 F2 F1 05 14 03 00 22 12 00 00  iffuse......"...
  00007610: 14 00 08 53 70 65 63 75 6C 61 72 F1 05 14 03 00  ...Specular.....
  00007620: 22 12 00 00 24 00 07 41 6D 62 69 65 6E 74 F2 F1  "...$..Ambient..
  00007630: 05 14 03 00 27 12 00 00 34 00 08 50 6F 73 69 74  ....'...4..Posit
  00007640: 69 6F 6E F1 05 14 03 00 27 12 00 00 40 00 09 44  ion.....'...@..D
  00007650: 69 72 65 63 74 69 6F 6E 05 14 03 00 40 00 00 00  irection....@...
  00007660: 4C 00 05 52 61 6E 67 65 05 14 03 00 40 00 00 00  L..Range....@...
  00007670: 50 00 07 46 61 6C 6C 6F 66 66 F2 F1 05 14 03 00  P..Falloff......
  00007680: 40 00 00 00 54 00 0C 41 74 74 65 6E 75 61 74 69  @...T..Attenuati
  00007690: 6F 6E 30 F1 05 14 03 00 40 00 00 00 58 00 0C 41  on0.....@...X..A
  000076A0: 74 74 65 6E 75 61 74 69 6F 6E 31 F1 05 14 03 00  ttenuation1.....
  000076B0: 40 00 00 00 5C 00 0C 41 74 74 65 6E 75 61 74 69  @...\..Attenuati
  000076C0: 6F 6E 32 F1 05 14 03 00 40 00 00 00 60 00 05 54  on2.....@...`..T
  000076D0: 68 65 74 61 05 14 03 00 40 00 00 00 64 00 03 50  heta....@...d..P
  000076E0: 68 69 F2 F1 22 00 05 10 0D 00 00 00 28 12 00 00  hi..".......(...
  000076F0: 00 00 00 00 00 00 00 00 68 00 0A 5F 44 33 44 4C  ........h.._D3DL
  00007700: 49 47 48 54 38 F3 F2 F1 0A 00 02 10 C1 10 00 00  IGHT8...........
  00007710: 0A 04 00 00 1A 00 09 10 22 00 00 00 C1 10 00 00  ........".......
  00007720: 2A 12 00 00 07 00 00 00 09 10 00 00 00 00 00 00  *...............
  00007730: 26 00 03 12 00 14 03 00 B5 11 00 00 00 00 F2 F1  &...............
  00007740: 0B 14 03 00 2B 12 00 00 0D 47 65 74 4C 65 76 65  ....+....GetLeve
  00007750: 6C 43 6F 75 6E 74 F2 F1 26 00 05 10 02 00 00 00  lCount..&.......
  00007760: 2C 12 00 00 00 00 00 00 00 00 00 00 14 00 0E 44  ,..............D
  00007770: 33 44 42 61 73 65 54 65 78 74 75 72 65 F3 F2 F1  3DBaseTexture...
  00007780: 2A 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  *...............
  00007790: 00 00 00 00 00 00 15 5F 44 33 44 56 45 52 54 45  ......._D3DVERTE
  000077A0: 58 53 48 41 44 45 52 49 4E 50 55 54 0E 00 03 10  XSHADERINPUT....
  000077B0: 2E 12 00 00 11 00 00 00 00 01 00 F1 12 00 03 12  ................
  000077C0: 05 14 03 00 2F 12 00 00 00 00 05 49 6E 70 75 74  ..../......Input
  000077D0: 2E 00 05 10 01 00 00 00 30 12 00 00 00 00 00 00  ........0.......
  000077E0: 00 00 00 00 00 01 19 5F 44 33 44 56 45 52 54 45  ......._D3DVERTE
  000077F0: 58 41 54 54 52 49 42 55 54 45 46 4F 52 4D 41 54  XATTRIBUTEFORMAT
  00007800: 0E 00 03 10 22 00 00 00 11 00 00 00 20 00 00 F1  ...."....... ...
  00007810: FE 01 03 12 05 14 03 00 32 12 00 00 00 00 0D 50  ........2......P
  00007820: 53 41 6C 70 68 61 49 6E 70 75 74 73 05 14 03 00  SAlphaInputs....
  00007830: 22 00 00 00 20 00 19 50 53 46 69 6E 61 6C 43 6F  "... ..PSFinalCo
  00007840: 6D 62 69 6E 65 72 49 6E 70 75 74 73 41 42 43 44  mbinerInputsABCD
  00007850: 05 14 03 00 22 00 00 00 24 00 18 50 53 46 69 6E  ...."...$..PSFin
  00007860: 61 6C 43 6F 6D 62 69 6E 65 72 49 6E 70 75 74 73  alCombinerInputs
  00007870: 45 46 47 F1 05 14 03 00 32 12 00 00 28 00 0B 50  EFG.....2...(..P
  00007880: 53 43 6F 6E 73 74 61 6E 74 30 F2 F1 05 14 03 00  SConstant0......
  00007890: 32 12 00 00 48 00 0B 50 53 43 6F 6E 73 74 61 6E  2...H..PSConstan
  000078A0: 74 31 F2 F1 05 14 03 00 32 12 00 00 68 00 0E 50  t1......2...h..P
  000078B0: 53 41 6C 70 68 61 4F 75 74 70 75 74 73 F3 F2 F1  SAlphaOutputs...
  000078C0: 05 14 03 00 32 12 00 00 88 00 0B 50 53 52 47 42  ....2......PSRGB
  000078D0: 49 6E 70 75 74 73 F2 F1 05 14 03 00 22 00 00 00  Inputs......"...
  000078E0: A8 00 0D 50 53 43 6F 6D 70 61 72 65 4D 6F 64 65  ...PSCompareMode
  000078F0: 05 14 03 00 22 00 00 00 AC 00 18 50 53 46 69 6E  ...."......PSFin
  00007900: 61 6C 43 6F 6D 62 69 6E 65 72 43 6F 6E 73 74 61  alCombinerConsta
  00007910: 6E 74 30 F1 05 14 03 00 22 00 00 00 B0 00 18 50  nt0....."......P
  00007920: 53 46 69 6E 61 6C 43 6F 6D 62 69 6E 65 72 43 6F  SFinalCombinerCo
  00007930: 6E 73 74 61 6E 74 31 F1 05 14 03 00 32 12 00 00  nstant1.....2...
  00007940: B4 00 0C 50 53 52 47 42 4F 75 74 70 75 74 73 F1  ...PSRGBOutputs.
  00007950: 05 14 03 00 22 00 00 00 D4 00 0F 50 53 43 6F 6D  ...."......PSCom
  00007960: 62 69 6E 65 72 43 6F 75 6E 74 F2 F1 05 14 03 00  binerCount......
  00007970: 22 00 00 00 D8 00 0E 50 53 54 65 78 74 75 72 65  "......PSTexture
  00007980: 4D 6F 64 65 73 F3 F2 F1 05 14 03 00 22 00 00 00  Modes......."...
  00007990: DC 00 0C 50 53 44 6F 74 4D 61 70 70 69 6E 67 F1  ...PSDotMapping.
  000079A0: 05 14 03 00 22 00 00 00 E0 00 0E 50 53 49 6E 70  ...."......PSInp
  000079B0: 75 74 54 65 78 74 75 72 65 F3 F2 F1 05 14 03 00  utTexture.......
  000079C0: 22 00 00 00 E4 00 0B 50 53 43 30 4D 61 70 70 69  "......PSC0Mappi
  000079D0: 6E 67 F2 F1 05 14 03 00 22 00 00 00 E8 00 0B 50  ng......"......P
  000079E0: 53 43 31 4D 61 70 70 69 6E 67 F2 F1 05 14 03 00  SC1Mapping......
  000079F0: 22 00 00 00 EC 00 18 50 53 46 69 6E 61 6C 43 6F  "......PSFinalCo
  00007A00: 6D 62 69 6E 65 72 43 6F 6E 73 74 61 6E 74 73 F1  mbinerConstants.
  00007A10: 2A 00 05 10 12 00 00 00 33 12 00 00 00 00 00 00  *.......3.......
  00007A20: 00 00 00 00 F0 00 12 5F 44 33 44 50 69 78 65 6C  ......._D3DPixel
  00007A30: 53 68 61 64 65 72 44 65 66 F3 F2 F1 6E 00 03 12  ShaderDef...n...
  00007A40: 03 04 03 00 00 00 0F 44 33 44 42 41 53 49 53 5F  .......D3DBASIS_
  00007A50: 42 45 5A 49 45 52 F2 F1 03 04 03 00 01 00 10 44  BEZIER.........D
  00007A60: 33 44 42 41 53 49 53 5F 42 53 50 4C 49 4E 45 F1  3DBASIS_BSPLINE.
  00007A70: 03 04 03 00 02 00 14 44 33 44 42 41 53 49 53 5F  .......D3DBASIS_
  00007A80: 49 4E 54 45 52 50 4F 4C 41 54 45 F1 03 04 03 00  INTERPOLATE.....
  00007A90: 04 80 FF FF FF 7F 14 44 33 44 42 41 53 49 53 5F  .......D3DBASIS_
  00007AA0: 46 4F 52 43 45 5F 44 57 4F 52 44 F1 1E 00 07 10  FORCE_DWORD.....
  00007AB0: 04 00 00 00 74 00 00 00 35 12 00 00 0D 5F 44 33  ....t...5...._D3
  00007AC0: 44 42 41 53 49 53 54 59 50 45 F2 F1 6A 00 03 12  DBASISTYPE..j...
  00007AD0: 03 04 03 00 01 00 0F 44 33 44 4F 52 44 45 52 5F  .......D3DORDER_
  00007AE0: 4C 49 4E 45 41 52 F2 F1 03 04 03 00 03 00 0E 44  LINEAR.........D
  00007AF0: 33 44 4F 52 44 45 52 5F 43 55 42 49 43 F3 F2 F1  3DORDER_CUBIC...
  00007B00: 03 04 03 00 05 00 10 44 33 44 4F 52 44 45 52 5F  .......D3DORDER_
  00007B10: 51 55 49 4E 54 49 43 F1 03 04 03 00 04 80 FF FF  QUINTIC.........
  00007B20: FF 7F 14 44 33 44 4F 52 44 45 52 5F 46 4F 52 43  ...D3DORDER_FORC
  00007B30: 45 5F 44 57 4F 52 44 F1 1E 00 07 10 04 00 00 00  E_DWORD.........
  00007B40: 74 00 00 00 37 12 00 00 0D 5F 44 33 44 4F 52 44  t...7...._D3DORD
  00007B50: 45 52 54 59 50 45 F2 F1 A2 00 03 12 05 14 03 00  ERTYPE..........
  00007B60: 75 00 00 00 00 00 16 53 74 61 72 74 56 65 72 74  u......StartVert
  00007B70: 65 78 4F 66 66 73 65 74 57 69 64 74 68 F3 F2 F1  exOffsetWidth...
  00007B80: 05 14 03 00 75 00 00 00 04 00 17 53 74 61 72 74  ....u......Start
  00007B90: 56 65 72 74 65 78 4F 66 66 73 65 74 48 65 69 67  VertexOffsetHeig
  00007BA0: 68 74 F2 F1 05 14 03 00 75 00 00 00 08 00 05 57  ht......u......W
  00007BB0: 69 64 74 68 05 14 03 00 75 00 00 00 0C 00 06 48  idth....u......H
  00007BC0: 65 69 67 68 74 F3 F2 F1 05 14 03 00 75 00 00 00  eight.......u...
  00007BD0: 10 00 06 53 74 72 69 64 65 F3 F2 F1 05 14 03 00  ...Stride.......
  00007BE0: 36 12 00 00 14 00 05 42 61 73 69 73 05 14 03 00  6......Basis....
  00007BF0: 38 12 00 00 18 00 05 4F 72 64 65 72 2A 00 05 10  8......Order*...
  00007C00: 07 00 00 00 39 12 00 00 00 00 00 00 00 00 00 00  ....9...........
  00007C10: 1C 00 12 5F 44 33 44 52 45 43 54 50 41 54 43 48  ..._D3DRECTPATCH
  00007C20: 5F 49 4E 46 4F F3 F2 F1 56 00 03 12 05 14 03 00  _INFO...V.......
  00007C30: 75 00 00 00 00 00 11 53 74 61 72 74 56 65 72 74  u......StartVert
  00007C40: 65 78 4F 66 66 73 65 74 05 14 03 00 75 00 00 00  exOffset....u...
  00007C50: 04 00 0B 4E 75 6D 56 65 72 74 69 63 65 73 F2 F1  ...NumVertices..
  00007C60: 05 14 03 00 36 12 00 00 08 00 05 42 61 73 69 73  ....6......Basis
  00007C70: 05 14 03 00 38 12 00 00 0C 00 05 4F 72 64 65 72  ....8......Order
  00007C80: 26 00 05 10 04 00 00 00 3B 12 00 00 00 00 00 00  &.......;.......
  00007C90: 00 00 00 00 10 00 11 5F 44 33 44 54 52 49 50 41  ......._D3DTRIPA
  00007CA0: 54 43 48 5F 49 4E 46 4F 66 00 03 12 03 04 03 00  TCH_INFOf.......
  00007CB0: 01 00 0C 44 33 44 46 49 45 4C 44 5F 4F 44 44 F1  ...D3DFIELD_ODD.
  00007CC0: 03 04 03 00 02 00 0D 44 33 44 46 49 45 4C 44 5F  .......D3DFIELD_
  00007CD0: 45 56 45 4E 03 04 03 00 03 00 14 44 33 44 46 49  EVEN.......D3DFI
  00007CE0: 45 4C 44 5F 50 52 4F 47 52 45 53 53 49 56 45 F1  ELD_PROGRESSIVE.
  00007CF0: 03 04 03 00 04 80 FF FF FF 7F 14 44 33 44 46 49  ...........D3DFI
  00007D00: 45 4C 44 5F 46 4F 52 43 45 5F 44 57 4F 52 44 F1  ELD_FORCE_DWORD.
  00007D10: 1E 00 07 10 04 00 00 00 74 00 00 00 3D 12 00 00  ........t...=...
  00007D20: 0D 5F 44 33 44 46 49 45 4C 44 54 59 50 45 F2 F1  ._D3DFIELDTYPE..
  00007D30: 2A 00 03 12 05 14 03 00 3E 12 00 00 00 00 05 46  *.......>......F
  00007D40: 69 65 6C 64 05 14 03 00 75 00 00 00 04 00 0B 56  ield....u......V
  00007D50: 42 6C 61 6E 6B 43 6F 75 6E 74 F2 F1 26 00 05 10  BlankCount..&...
  00007D60: 02 00 00 00 3F 12 00 00 00 00 00 00 00 00 00 00  ....?...........
  00007D70: 08 00 10 5F 44 33 44 46 49 45 4C 44 5F 53 54 41  ..._D3DFIELD_STA
  00007D80: 54 55 53 F1 0A 00 02 10 46 11 00 00 0A 04 00 00  TUS.....F.......
  00007D90: 1A 00 09 10 12 00 00 00 46 11 00 00 41 12 00 00  ........F...A...
  00007DA0: 07 00 00 00 09 10 00 00 00 00 00 00 1A 00 09 10  ................
  00007DB0: 12 00 00 00 46 11 00 00 41 12 00 00 07 00 01 00  ....F...A.......
  00007DC0: DE 10 00 00 00 00 00 00 72 00 03 12 00 14 03 00  ........r.......
  00007DD0: F3 11 00 00 00 00 F2 F1 0B 14 03 00 42 12 00 00  ............B...
  00007DE0: 05 52 65 73 65 74 F2 F1 0B 14 03 00 43 12 00 00  .Reset......C...
  00007DF0: 07 47 65 74 53 69 7A 65 0B 14 03 00 43 12 00 00  .GetSize....C...
  00007E00: 08 47 65 74 53 70 61 63 65 F3 F2 F1 05 14 03 00  .GetSpace.......
  00007E10: 22 00 00 00 0C 00 03 52 75 6E F2 F1 05 14 03 00  "......Run......
  00007E20: 22 00 00 00 10 00 04 4E 65 78 74 F1 05 14 03 00  "......Next.....
  00007E30: 22 00 00 00 14 00 04 53 69 7A 65 F1 1E 00 05 10  "......Size.....
  00007E40: 07 00 00 00 44 12 00 00 00 00 00 00 00 00 00 00  ....D...........
  00007E50: 18 00 08 44 33 44 46 69 78 75 70 F1 0A 00 02 10  ...D3DFixup.....
  00007E60: 4B 11 00 00 0A 04 00 00 1A 00 09 10 12 00 00 00  K...............
  00007E70: 4B 11 00 00 46 12 00 00 07 00 01 00 2F 11 00 00  K...F......./...
  00007E80: 00 00 00 00 0E 00 01 12 02 00 00 00 47 11 00 00  ............G...
  00007E90: 74 00 00 00 1A 00 09 10 12 00 00 00 4B 11 00 00  t...........K...
  00007EA0: 46 12 00 00 07 00 02 00 48 12 00 00 00 00 00 00  F.......H.......
  00007EB0: 1A 00 09 10 12 00 00 00 4B 11 00 00 46 12 00 00  ........K...F...
  00007EC0: 07 00 00 00 09 10 00 00 00 00 00 00 12 00 01 12  ................
  00007ED0: 03 00 00 00 22 00 00 00 4C 11 00 00 47 11 00 00  ...."...L...G...
  00007EE0: 1A 00 09 10 12 00 00 00 4B 11 00 00 46 12 00 00  ........K...F...
  00007EF0: 07 00 03 00 4B 12 00 00 00 00 00 00 16 00 01 12  ....K...........
  00007F00: 04 00 00 00 22 00 00 00 93 10 00 00 93 10 00 00  ...."...........
  00007F10: 93 10 00 00 1A 00 09 10 12 00 00 00 4B 11 00 00  ............K...
  00007F20: 46 12 00 00 07 00 04 00 4D 12 00 00 00 00 00 00  F.......M.......
  00007F30: 1A 00 01 12 05 00 00 00 22 00 00 00 75 00 00 00  ........"...u...
  00007F40: 93 10 00 00 93 10 00 00 93 10 00 00 1A 00 09 10  ................
  00007F50: 12 00 00 00 4B 11 00 00 46 12 00 00 07 00 05 00  ....K...F.......
  00007F60: 4F 12 00 00 00 00 00 00 16 00 01 12 04 00 00 00  O...............
  00007F70: 22 00 00 00 22 00 00 00 75 00 00 00 5E 11 00 00  "..."...u...^...
  00007F80: 1A 00 09 10 12 00 00 00 4B 11 00 00 46 12 00 00  ........K...F...
  00007F90: 07 00 04 00 51 12 00 00 00 00 00 00 16 00 01 12  ....Q...........
  00007FA0: 04 00 00 00 22 00 00 00 11 11 00 00 75 00 00 00  ....".......u...
  00007FB0: 5E 11 00 00 1A 00 09 10 12 00 00 00 4B 11 00 00  ^...........K...
  00007FC0: 46 12 00 00 07 00 04 00 53 12 00 00 00 00 00 00  F.......S.......
  00007FD0: 12 00 01 12 03 00 00 00 22 00 00 00 51 10 00 00  ........"...Q...
  00007FE0: 51 10 00 00 1A 00 09 10 12 00 00 00 4B 11 00 00  Q...........K...
  00007FF0: 46 12 00 00 07 00 03 00 55 12 00 00 00 00 00 00  F.......U.......
  00008000: 12 00 01 12 03 00 00 00 22 00 00 00 22 00 00 00  ........"..."...
  00008010: C2 10 00 00 1A 00 09 10 12 00 00 00 4B 11 00 00  ............K...
  00008020: 46 12 00 00 07 00 03 00 57 12 00 00 00 00 00 00  F.......W.......
  00008030: 12 00 01 12 03 00 00 00 22 00 00 00 22 00 00 00  ........"..."...
  00008040: 25 11 00 00 1A 00 09 10 12 00 00 00 4B 11 00 00  %...........K...
  00008050: 46 12 00 00 07 00 03 00 59 12 00 00 00 00 00 00  F.......Y.......
  00008060: 1A 00 09 10 12 00 00 00 4B 11 00 00 46 12 00 00  ........K...F...
  00008070: 07 00 02 00 31 10 00 00 00 00 00 00 16 00 01 12  ....1...........
  00008080: 04 00 00 00 22 00 00 00 74 00 00 00 D5 10 00 00  ...."...t.......
  00008090: 22 00 00 00 1A 00 09 10 12 00 00 00 4B 11 00 00  "...........K...
  000080A0: 46 12 00 00 07 00 04 00 5C 12 00 00 00 00 00 00  F.......\.......
  000080B0: 0E 00 01 12 02 00 00 00 22 00 00 00 75 00 00 00  ........"...u...
  000080C0: 1A 00 09 10 12 00 00 00 4B 11 00 00 46 12 00 00  ........K...F...
  000080D0: 07 00 02 00 5E 12 00 00 00 00 00 00 1A 00 09 10  ....^...........
  000080E0: 12 00 00 00 4B 11 00 00 46 12 00 00 07 00 01 00  ....K...F.......
  000080F0: DE 10 00 00 00 00 00 00 A2 01 03 12 00 14 03 00  ................
  00008100: F3 11 00 00 00 00 F2 F1 0B 14 03 00 47 12 00 00  ............G...
  00008110: 06 56 65 72 69 66 79 F1 0B 14 03 00 49 12 00 00  .Verify.....I...
  00008120: 0A 42 65 67 69 6E 46 69 78 75 70 F1 0B 14 03 00  .BeginFixup.....
  00008130: 4A 12 00 00 08 45 6E 64 46 69 78 75 70 F3 F2 F1  J....EndFixup...
  00008140: 0B 14 03 00 4C 12 00 00 0D 52 75 6E 50 75 73 68  ....L....RunPush
  00008150: 42 75 66 66 65 72 F2 F1 0B 14 03 00 4E 12 00 00  Buffer......N...
  00008160: 0C 53 65 74 4D 6F 64 65 6C 56 69 65 77 F3 F2 F1  .SetModelView...
  00008170: 0B 14 03 00 50 12 00 00 17 53 65 74 56 65 72 74  ....P....SetVert
  00008180: 65 78 42 6C 65 6E 64 4D 6F 64 65 6C 56 69 65 77  exBlendModelView
  00008190: 0B 14 03 00 52 12 00 00 14 53 65 74 56 65 72 74  ....R....SetVert
  000081A0: 65 78 53 68 61 64 65 72 49 6E 70 75 74 F3 F2 F1  exShaderInput...
  000081B0: 0B 14 03 00 54 12 00 00 1A 53 65 74 56 65 72 74  ....T....SetVert
  000081C0: 65 78 53 68 61 64 65 72 49 6E 70 75 74 44 69 72  exShaderInputDir
  000081D0: 65 63 74 F1 0B 14 03 00 56 12 00 00 0F 53 65 74  ect.....V....Set
  000081E0: 52 65 6E 64 65 72 54 61 72 67 65 74 0B 14 03 00  RenderTarget....
  000081F0: 58 12 00 00 0A 53 65 74 54 65 78 74 75 72 65 F1  X....SetTexture.
  00008200: 0B 14 03 00 5A 12 00 00 0A 53 65 74 50 61 6C 65  ....Z....SetPale
  00008210: 74 74 65 F1 0B 14 03 00 5B 12 00 00 11 45 6E 64  tte.....[....End
  00008220: 56 69 73 69 62 69 6C 69 74 79 54 65 73 74 F2 F1  VisibilityTest..
  00008230: 0B 14 03 00 5D 12 00 00 17 53 65 74 56 65 72 74  ....]....SetVert
  00008240: 65 78 53 68 61 64 65 72 43 6F 6E 73 74 61 6E 74  exShaderConstant
  00008250: 0B 14 03 00 5F 12 00 00 04 4A 75 6D 70 F3 F2 F1  ...._....Jump...
  00008260: 0B 14 03 00 60 12 00 00 07 47 65 74 53 69 7A 65  ....`....GetSize
  00008270: 05 14 03 00 22 00 00 00 0C 00 04 53 69 7A 65 F1  ...."......Size.
  00008280: 05 14 03 00 22 00 00 00 10 00 0E 41 6C 6C 6F 63  ...."......Alloc
  00008290: 61 74 69 6F 6E 53 69 7A 65 F3 F2 F1 22 00 05 10  ationSize..."...
  000082A0: 12 00 00 00 61 12 00 00 00 00 00 00 00 00 00 00  ....a...........
  000082B0: 14 00 0D 44 33 44 50 75 73 68 42 75 66 66 65 72  ...D3DPushBuffer
  000082C0: 42 00 03 12 05 14 03 00 71 10 00 00 00 00 0C 56  B.......q......V
  000082D0: 65 72 74 65 78 42 75 66 66 65 72 F1 05 14 03 00  ertexBuffer.....
  000082E0: 75 00 00 00 04 00 06 53 74 72 69 64 65 F3 F2 F1  u......Stride...
  000082F0: 05 14 03 00 75 00 00 00 08 00 06 4F 66 66 73 65  ....u......Offse
  00008300: 74 F3 F2 F1 26 00 05 10 03 00 00 00 63 12 00 00  t...&.......c...
  00008310: 00 00 00 00 00 00 00 00 0C 00 10 5F 44 33 44 53  ..........._D3DS
  00008320: 54 52 45 41 4D 5F 49 4E 50 55 54 F1 6E 00 03 12  TREAM_INPUT.n...
  00008330: 05 14 03 00 22 00 00 00 00 00 05 46 6C 61 67 73  ...."......Flags
  00008340: 05 14 03 00 03 04 00 00 04 00 07 70 4D 65 6D 6F  ...........pMemo
  00008350: 72 79 F2 F1 05 14 03 00 22 00 00 00 08 00 04 53  ry......"......S
  00008360: 69 7A 65 F1 05 14 03 00 22 00 00 00 0C 00 05 50  ize....."......P
  00008370: 69 74 63 68 05 14 03 00 22 00 00 00 10 00 09 5A  itch...."......Z
  00008380: 53 74 61 72 74 54 61 67 05 14 03 00 22 00 00 00  StartTag...."...
  00008390: 14 00 07 5A 4F 66 66 73 65 74 F2 F1 1E 00 05 10  ...ZOffset......
  000083A0: 06 00 00 00 65 12 00 00 00 00 00 00 00 00 00 00  ....e...........
  000083B0: 18 00 08 5F 44 33 44 54 49 4C 45 F1 2A 00 03 12  ..._D3DTILE.*...
  000083C0: 03 04 03 00 00 00 0A 44 33 44 4D 45 4D 5F 41 47  .......D3DMEM_AG
  000083D0: 50 F3 F2 F1 03 04 03 00 01 00 0C 44 33 44 4D 45  P..........D3DME
  000083E0: 4D 5F 56 49 44 45 4F F1 1A 00 07 10 02 00 00 00  M_VIDEO.........
  000083F0: 74 00 00 00 67 12 00 00 0A 5F 44 33 44 4D 45 4D  t...g...._D3DMEM
  00008400: 4F 52 59 F1 0A 00 02 10 F3 11 00 00 0A 00 00 00  ORY.............
  00008410: 0A 00 02 10 F3 11 00 00 0A 04 00 00 1A 00 09 10  ................
  00008420: 22 00 00 00 F3 11 00 00 6A 12 00 00 07 00 00 00  ".......j.......
  00008430: 09 10 00 00 00 00 00 00 0A 00 01 12 01 00 00 00  ................
  00008440: 2E 10 00 00 1A 00 09 10 12 00 00 00 F3 11 00 00  ................
  00008450: 6A 12 00 00 07 00 01 00 6C 12 00 00 00 00 00 00  j.......l.......
  00008460: 1A 00 09 10 1F 10 00 00 F3 11 00 00 6A 12 00 00  ............j...
  00008470: 07 00 00 00 09 10 00 00 00 00 00 00 16 00 01 12  ................
  00008480: 04 00 00 00 02 10 00 00 D5 10 00 00 22 00 00 00  ............"...
  00008490: 22 00 00 00 1A 00 09 10 12 00 00 00 F3 11 00 00  "...............
  000084A0: 6A 12 00 00 07 00 04 00 6F 12 00 00 00 00 00 00  j.......o.......
  000084B0: 12 00 01 12 03 00 00 00 02 10 00 00 03 04 00 00  ................
  000084C0: 22 04 00 00 1A 00 09 10 12 00 00 00 F3 11 00 00  "...............
  000084D0: 6A 12 00 00 07 00 03 00 71 12 00 00 00 00 00 00  j.......q.......
  000084E0: 0A 00 01 12 01 00 00 00 02 10 00 00 1A 00 09 10  ................
  000084F0: 12 00 00 00 F3 11 00 00 6A 12 00 00 07 00 01 00  ........j.......
  00008500: 73 12 00 00 00 00 00 00 1A 00 09 10 74 00 00 00  s...........t...
  00008510: F3 11 00 00 6A 12 00 00 07 00 00 00 09 10 00 00  ....j...........
  00008520: 00 00 00 00 1A 00 09 10 03 00 00 00 F3 11 00 00  ................
  00008530: 6A 12 00 00 07 00 00 00 09 10 00 00 00 00 00 00  j...............
  00008540: 0A 00 01 12 01 00 00 00 68 12 00 00 1A 00 09 10  ........h.......
  00008550: 03 00 00 00 F3 11 00 00 6A 12 00 00 07 00 01 00  ........j.......
  00008560: 77 12 00 00 00 00 00 00 0A 00 01 12 01 00 00 00  w...............
  00008570: 03 04 00 00 1A 00 09 10 03 00 00 00 F3 11 00 00  ................
  00008580: 6A 12 00 00 07 00 01 00 79 12 00 00 00 00 00 00  j.......y.......
  00008590: 1E 01 03 12 0B 14 03 00 6B 12 00 00 06 41 64 64  ........k....Add
  000085A0: 52 65 66 F1 0B 14 03 00 6B 12 00 00 07 52 65 6C  Ref.....k....Rel
  000085B0: 65 61 73 65 0B 14 03 00 6D 12 00 00 09 47 65 74  ease....m....Get
  000085C0: 44 65 76 69 63 65 F2 F1 0B 14 03 00 6E 12 00 00  Device......n...
  000085D0: 07 47 65 74 54 79 70 65 0B 14 03 00 70 12 00 00  .GetType....p...
  000085E0: 0E 53 65 74 50 72 69 76 61 74 65 44 61 74 61 F1  .SetPrivateData.
  000085F0: 0B 14 03 00 72 12 00 00 0E 47 65 74 50 72 69 76  ....r....GetPriv
  00008600: 61 74 65 44 61 74 61 F1 0B 14 03 00 74 12 00 00  ateData.....t...
  00008610: 0F 46 72 65 65 50 72 69 76 61 74 65 44 61 74 61  .FreePrivateData
  00008620: 0B 14 03 00 75 12 00 00 06 49 73 42 75 73 79 F1  ....u....IsBusy.
  00008630: 0B 14 03 00 76 12 00 00 11 42 6C 6F 63 6B 55 6E  ....v....BlockUn
  00008640: 74 69 6C 4E 6F 74 42 75 73 79 F2 F1 0B 14 03 00  tilNotBusy......
  00008650: 78 12 00 00 12 4D 6F 76 65 52 65 73 6F 75 72 63  x....MoveResourc
  00008660: 65 4D 65 6D 6F 72 79 F1 0B 14 03 00 7A 12 00 00  eMemory.....z...
  00008670: 08 52 65 67 69 73 74 65 72 F3 F2 F1 05 14 03 00  .Register.......
  00008680: 22 00 00 00 00 00 06 43 6F 6D 6D 6F 6E F3 F2 F1  "......Common...
  00008690: 05 14 03 00 22 00 00 00 04 00 04 44 61 74 61 F1  ...."......Data.
  000086A0: 05 14 03 00 22 00 00 00 08 00 04 4C 6F 63 6B F1  ...."......Lock.
  000086B0: 22 00 05 10 0E 00 00 00 7B 12 00 00 00 00 00 00  ".......{.......
  000086C0: 00 00 00 00 0C 00 0B 44 33 44 52 65 73 6F 75 72  .......D3DResour
  000086D0: 63 65 F2 F1 86 00 03 12 05 14 03 00 1B 10 00 00  ce..............
  000086E0: 00 00 06 46 6F 72 6D 61 74 F3 F2 F1 05 14 03 00  ...Format.......
  000086F0: 1F 10 00 00 04 00 04 54 79 70 65 F1 05 14 03 00  .......Type.....
  00008700: 22 00 00 00 08 00 05 55 73 61 67 65 05 14 03 00  "......Usage....
  00008710: 75 00 00 00 0C 00 04 53 69 7A 65 F1 05 14 03 00  u......Size.....
  00008720: 22 00 00 00 10 00 0F 4D 75 6C 74 69 53 61 6D 70  "......MultiSamp
  00008730: 6C 65 54 79 70 65 F2 F1 05 14 03 00 75 00 00 00  leType......u...
  00008740: 14 00 05 57 69 64 74 68 05 14 03 00 75 00 00 00  ...Width....u...
  00008750: 18 00 06 48 65 69 67 68 74 F3 F2 F1 26 00 05 10  ...Height...&...
  00008760: 07 00 00 00 7D 12 00 00 00 00 00 00 00 00 00 00  ....}...........
  00008770: 1C 00 10 5F 44 33 44 53 55 52 46 41 43 45 5F 44  ..._D3DSURFACE_D
  00008780: 45 53 43 F1 22 00 03 12 05 14 03 00 74 00 00 00  ESC.".......t...
  00008790: 00 00 05 50 69 74 63 68 05 14 03 00 03 04 00 00  ...Pitch........
  000087A0: 04 00 05 70 42 69 74 73 26 00 05 10 02 00 00 00  ...pBits&.......
  000087B0: 7F 12 00 00 00 00 00 00 00 00 00 00 08 00 0F 5F  ..............._
  000087C0: 44 33 44 4C 4F 43 4B 45 44 5F 52 45 43 54 F2 F1  D3DLOCKED_RECT..
  000087D0: 7A 00 03 12 05 14 03 00 1B 10 00 00 00 00 06 46  z..............F
  000087E0: 6F 72 6D 61 74 F3 F2 F1 05 14 03 00 1F 10 00 00  ormat...........
  000087F0: 04 00 04 54 79 70 65 F1 05 14 03 00 22 00 00 00  ...Type....."...
  00008800: 08 00 05 55 73 61 67 65 05 14 03 00 75 00 00 00  ...Usage....u...
  00008810: 0C 00 04 53 69 7A 65 F1 05 14 03 00 75 00 00 00  ...Size.....u...
  00008820: 10 00 05 57 69 64 74 68 05 14 03 00 75 00 00 00  ...Width....u...
  00008830: 14 00 06 48 65 69 67 68 74 F3 F2 F1 05 14 03 00  ...Height.......
  00008840: 75 00 00 00 18 00 05 44 65 70 74 68 26 00 05 10  u......Depth&...
  00008850: 07 00 00 00 81 12 00 00 00 00 00 00 00 00 00 00  ................
  00008860: 1C 00 0F 5F 44 33 44 56 4F 4C 55 4D 45 5F 44 45  ..._D3DVOLUME_DE
  00008870: 53 43 F2 F1 0A 00 02 10 D8 11 00 00 0A 04 00 00  SC..............
  00008880: 1A 00 09 10 12 00 00 00 D8 11 00 00 83 12 00 00  ................
  00008890: 07 00 01 00 B6 11 00 00 00 00 00 00 0A 00 01 12  ................
  000088A0: 01 00 00 00 D4 11 00 00 1A 00 09 10 12 00 00 00  ................
  000088B0: D8 11 00 00 83 12 00 00 07 00 01 00 85 12 00 00  ................
  000088C0: 00 00 00 00 12 00 01 12 03 00 00 00 DE 11 00 00  ................
  000088D0: E1 11 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  ...."...........
  000088E0: D8 11 00 00 83 12 00 00 07 00 03 00 87 12 00 00  ................
  000088F0: 00 00 00 00 1A 00 09 10 12 00 00 00 D8 11 00 00  ................
  00008900: 83 12 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  00008910: 6E 00 03 12 00 14 03 00 B5 11 00 00 00 00 F2 F1  n...............
  00008920: 0B 14 03 00 84 12 00 00 0C 47 65 74 43 6F 6E 74  .........GetCont
  00008930: 61 69 6E 65 72 F3 F2 F1 0B 14 03 00 86 12 00 00  ainer...........
  00008940: 07 47 65 74 44 65 73 63 0B 14 03 00 88 12 00 00  .GetDesc........
  00008950: 07 4C 6F 63 6B 42 6F 78 0B 14 03 00 89 12 00 00  .LockBox........
  00008960: 09 55 6E 6C 6F 63 6B 42 6F 78 F2 F1 05 14 03 00  .UnlockBox......
  00008970: C2 10 00 00 14 00 06 50 61 72 65 6E 74 F3 F2 F1  .......Parent...
  00008980: 1E 00 05 10 06 00 00 00 8A 12 00 00 00 00 00 00  ................
  00008990: 00 00 00 00 18 00 09 44 33 44 56 6F 6C 75 6D 65  .......D3DVolume
  000089A0: 66 00 03 12 05 14 03 00 75 00 00 00 00 00 04 4C  f.......u......L
  000089B0: 65 66 74 F1 05 14 03 00 75 00 00 00 04 00 03 54  eft.....u......T
  000089C0: 6F 70 F2 F1 05 14 03 00 75 00 00 00 08 00 05 52  op......u......R
  000089D0: 69 67 68 74 05 14 03 00 75 00 00 00 0C 00 06 42  ight....u......B
  000089E0: 6F 74 74 6F 6D F3 F2 F1 05 14 03 00 75 00 00 00  ottom.......u...
  000089F0: 10 00 05 46 72 6F 6E 74 05 14 03 00 75 00 00 00  ...Front....u...
  00008A00: 14 00 04 42 61 63 6B F1 1E 00 05 10 06 00 00 00  ...Back.........
  00008A10: 8C 12 00 00 00 00 00 00 00 00 00 00 18 00 07 5F  ..............._
  00008A20: 44 33 44 42 4F 58 F2 F1 3E 00 03 12 05 14 03 00  D3DBOX..>.......
  00008A30: 74 00 00 00 00 00 08 52 6F 77 50 69 74 63 68 F1  t......RowPitch.
  00008A40: 05 14 03 00 74 00 00 00 04 00 0A 53 6C 69 63 65  ....t......Slice
  00008A50: 50 69 74 63 68 F3 F2 F1 05 14 03 00 03 04 00 00  Pitch...........
  00008A60: 08 00 05 70 42 69 74 73 26 00 05 10 03 00 00 00  ...pBits&.......
  00008A70: 8E 12 00 00 00 00 00 00 00 00 00 00 0C 00 0E 5F  ..............._
  00008A80: 44 33 44 4C 4F 43 4B 45 44 5F 42 4F 58 F3 F2 F1  D3DLOCKED_BOX...
  00008A90: 26 00 03 12 05 14 03 00 1B 10 00 00 00 00 06 46  &..............F
  00008AA0: 6F 72 6D 61 74 F3 F2 F1 05 14 03 00 1F 10 00 00  ormat...........
  00008AB0: 04 00 04 54 79 70 65 F1 2A 00 05 10 02 00 00 00  ...Type.*.......
  00008AC0: 90 12 00 00 00 00 00 00 00 00 00 00 08 00 15 5F  ..............._
  00008AD0: 44 33 44 56 45 52 54 45 58 42 55 46 46 45 52 5F  D3DVERTEXBUFFER_
  00008AE0: 44 45 53 43 26 00 03 12 05 14 03 00 1B 10 00 00  DESC&...........
  00008AF0: 00 00 06 46 6F 72 6D 61 74 F3 F2 F1 05 14 03 00  ...Format.......
  00008B00: 1F 10 00 00 04 00 04 54 79 70 65 F1 2A 00 05 10  .......Type.*...
  00008B10: 02 00 00 00 92 12 00 00 00 00 00 00 00 00 00 00  ................
  00008B20: 08 00 14 5F 44 33 44 49 4E 44 45 58 42 55 46 46  ..._D3DINDEXBUFF
  00008B30: 45 52 5F 44 45 53 43 F1 22 00 05 10 00 00 80 00  ER_DESC.".......
  00008B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0B 44  ...............D
  00008B50: 33 44 58 56 45 43 54 4F 52 32 F2 F1 0A 00 02 10  3DXVECTOR2......
  00008B60: 94 12 00 00 0A 04 00 00 0E 00 01 12 02 00 00 00  ................
  00008B70: 40 00 00 00 40 00 00 00 1A 00 09 10 03 00 00 00  @...@...........
  00008B80: 94 12 00 00 95 12 00 00 0B 00 02 00 96 12 00 00  ................
  00008B90: 00 00 00 00 0A 00 01 10 40 00 00 00 01 00 F2 F1  ........@.......
  00008BA0: 0A 00 02 10 98 12 00 00 0A 00 00 00 0A 00 01 12  ................
  00008BB0: 01 00 00 00 99 12 00 00 1A 00 09 10 03 00 00 00  ................
  00008BC0: 94 12 00 00 95 12 00 00 0B 00 01 00 9A 12 00 00  ................
  00008BD0: 00 00 00 00 1A 00 09 10 03 00 00 00 94 12 00 00  ................
  00008BE0: 95 12 00 00 0B 00 00 00 09 10 00 00 00 00 00 00  ................
  00008BF0: 1A 00 06 12 03 00 00 00 97 12 00 00 03 00 00 00  ................
  00008C00: 9B 12 00 00 03 00 00 00 9C 12 00 00 1A 00 09 10  ................
  00008C10: 40 04 00 00 94 12 00 00 95 12 00 00 0B 00 00 00  @...............
  00008C20: 09 10 00 00 00 00 00 00 0A 00 01 10 94 12 00 00  ................
  00008C30: 01 00 F2 F1 0A 00 02 10 9F 12 00 00 0A 04 00 00  ................
  00008C40: 1A 00 09 10 99 12 00 00 94 12 00 00 A0 12 00 00  ................
  00008C50: 0B 00 00 00 09 10 00 00 00 00 00 00 0A 00 02 10  ................
  00008C60: 94 12 00 00 2A 00 00 00 0A 00 02 10 9F 12 00 00  ....*...........
  00008C70: 2A 00 00 00 0A 00 01 12 01 00 00 00 A3 12 00 00  *...............
  00008C80: 1A 00 09 10 A2 12 00 00 94 12 00 00 95 12 00 00  ................
  00008C90: 0B 00 01 00 A4 12 00 00 00 00 00 00 0A 00 01 12  ................
  00008CA0: 01 00 00 00 40 00 00 00 1A 00 09 10 A2 12 00 00  ....@...........
  00008CB0: 94 12 00 00 95 12 00 00 0B 00 01 00 A6 12 00 00  ................
  00008CC0: 00 00 00 00 1A 00 09 10 94 12 00 00 94 12 00 00  ................
  00008CD0: A0 12 00 00 0B 00 01 00 A4 12 00 00 00 00 00 00  ................
  00008CE0: 1A 00 09 10 94 12 00 00 94 12 00 00 A0 12 00 00  ................
  00008CF0: 0B 00 00 00 09 10 00 00 00 00 00 00 12 00 06 12  ................
  00008D00: 03 00 00 00 A8 12 00 00 03 00 00 00 A9 12 00 00  ................
  00008D10: 12 00 06 12 03 00 00 00 A8 12 00 00 03 00 00 00  ................
  00008D20: A9 12 00 00 1A 00 09 10 94 12 00 00 94 12 00 00  ................
  00008D30: A0 12 00 00 0B 00 01 00 A6 12 00 00 00 00 00 00  ................
  00008D40: 1A 00 09 10 74 00 00 00 94 12 00 00 A0 12 00 00  ....t...........
  00008D50: 0B 00 01 00 A4 12 00 00 00 00 00 00 32 01 03 12  ............2...
  00008D60: 07 14 03 00 9D 12 00 00 0B 44 33 44 58 56 45 43  .........D3DXVEC
  00008D70: 54 4F 52 32 0B 14 03 00 9E 12 00 00 10 6F 70 65  TOR2.........ope
  00008D80: 72 61 74 6F 72 20 66 6C 6F 61 74 20 2A F3 F2 F1  rator float *...
  00008D90: 0B 14 03 00 A1 12 00 00 16 6F 70 65 72 61 74 6F  .........operato
  00008DA0: 72 20 63 6F 6E 73 74 20 66 6C 6F 61 74 20 2A F1  r const float *.
  00008DB0: 0B 14 03 00 A5 12 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  00008DC0: 72 2B 3D F1 0B 14 03 00 A5 12 00 00 0A 6F 70 65  r+=..........ope
  00008DD0: 72 61 74 6F 72 2D 3D F1 0B 14 03 00 A7 12 00 00  rator-=.........
  00008DE0: 0A 6F 70 65 72 61 74 6F 72 2A 3D F1 0B 14 03 00  .operator*=.....
  00008DF0: A7 12 00 00 0A 6F 70 65 72 61 74 6F 72 2F 3D F1  .....operator/=.
  00008E00: 07 14 02 00 AA 12 00 00 09 6F 70 65 72 61 74 6F  .........operato
  00008E10: 72 2B F2 F1 07 14 02 00 AB 12 00 00 09 6F 70 65  r+...........ope
  00008E20: 72 61 74 6F 72 2D F2 F1 0B 14 03 00 AC 12 00 00  rator-..........
  00008E30: 09 6F 70 65 72 61 74 6F 72 2A F2 F1 0B 14 03 00  .operator*......
  00008E40: AC 12 00 00 09 6F 70 65 72 61 74 6F 72 2F F2 F1  .....operator/..
  00008E50: 0B 14 03 00 AD 12 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  00008E60: 72 3D 3D F1 0B 14 03 00 AD 12 00 00 0A 6F 70 65  r==..........ope
  00008E70: 72 61 74 6F 72 21 3D F1 05 14 03 00 40 00 00 00  rator!=.....@...
  00008E80: 00 00 01 78 05 14 03 00 40 00 00 00 04 00 01 79  ...x....@......y
  00008E90: 22 00 05 10 13 00 46 00 AE 12 00 00 00 00 00 00  ".....F.........
  00008EA0: 00 00 00 00 08 00 0B 44 33 44 58 56 45 43 54 4F  .......D3DXVECTO
  00008EB0: 52 32 F2 F1 22 00 05 10 00 00 80 00 00 00 00 00  R2.."...........
  00008EC0: 00 00 00 00 00 00 00 00 00 00 0B 44 33 44 58 56  ...........D3DXV
  00008ED0: 45 43 54 4F 52 33 F2 F1 0A 00 02 10 B0 12 00 00  ECTOR3..........
  00008EE0: 0A 04 00 00 12 00 01 12 03 00 00 00 40 00 00 00  ............@...
  00008EF0: 40 00 00 00 40 00 00 00 1A 00 09 10 03 00 00 00  @...@...........
  00008F00: B0 12 00 00 B1 12 00 00 0B 00 03 00 B2 12 00 00  ................
  00008F10: 00 00 00 00 0A 00 01 10 27 12 00 00 01 00 F2 F1  ........'.......
  00008F20: 0A 00 02 10 B4 12 00 00 2A 00 00 00 0A 00 01 12  ........*.......
  00008F30: 01 00 00 00 B5 12 00 00 1A 00 09 10 03 00 00 00  ................
  00008F40: B0 12 00 00 B1 12 00 00 0B 00 01 00 B6 12 00 00  ................
  00008F50: 00 00 00 00 1A 00 09 10 03 00 00 00 B0 12 00 00  ................
  00008F60: B1 12 00 00 0B 00 01 00 9A 12 00 00 00 00 00 00  ................
  00008F70: 1A 00 09 10 03 00 00 00 B0 12 00 00 B1 12 00 00  ................
  00008F80: 0B 00 00 00 09 10 00 00 00 00 00 00 22 00 06 12  ............"...
  00008F90: 03 00 00 00 B3 12 00 00 03 00 00 00 B7 12 00 00  ................
  00008FA0: 03 00 00 00 B8 12 00 00 03 00 00 00 B9 12 00 00  ................
  00008FB0: 1A 00 09 10 40 04 00 00 B0 12 00 00 B1 12 00 00  ....@...........
  00008FC0: 0B 00 00 00 09 10 00 00 00 00 00 00 0A 00 01 10  ................
  00008FD0: B0 12 00 00 01 00 F2 F1 0A 00 02 10 BC 12 00 00  ................
  00008FE0: 0A 04 00 00 1A 00 09 10 99 12 00 00 B0 12 00 00  ................
  00008FF0: BD 12 00 00 0B 00 00 00 09 10 00 00 00 00 00 00  ................
  00009000: 0A 00 02 10 B0 12 00 00 2A 00 00 00 0A 00 02 10  ........*.......
  00009010: BC 12 00 00 2A 00 00 00 0A 00 01 12 01 00 00 00  ....*...........
  00009020: C0 12 00 00 1A 00 09 10 BF 12 00 00 B0 12 00 00  ................
  00009030: B1 12 00 00 0B 00 01 00 C1 12 00 00 00 00 00 00  ................
  00009040: 1A 00 09 10 BF 12 00 00 B0 12 00 00 B1 12 00 00  ................
  00009050: 0B 00 01 00 A6 12 00 00 00 00 00 00 1A 00 09 10  ................
  00009060: B0 12 00 00 B0 12 00 00 BD 12 00 00 0B 00 01 00  ................
  00009070: C1 12 00 00 00 00 00 00 1A 00 09 10 B0 12 00 00  ................
  00009080: B0 12 00 00 BD 12 00 00 0B 00 00 00 09 10 00 00  ................
  00009090: 00 00 00 00 12 00 06 12 03 00 00 00 C4 12 00 00  ................
  000090A0: 03 00 00 00 C5 12 00 00 12 00 06 12 03 00 00 00  ................
  000090B0: C4 12 00 00 03 00 00 00 C5 12 00 00 1A 00 09 10  ................
  000090C0: B0 12 00 00 B0 12 00 00 BD 12 00 00 0B 00 01 00  ................
  000090D0: A6 12 00 00 00 00 00 00 1A 00 09 10 74 00 00 00  ............t...
  000090E0: B0 12 00 00 BD 12 00 00 0B 00 01 00 C1 12 00 00  ................
  000090F0: 00 00 00 00 26 01 03 12 00 14 03 00 27 12 00 00  ....&.......'...
  00009100: 00 00 F2 F1 07 14 04 00 BA 12 00 00 0B 44 33 44  .............D3D
  00009110: 58 56 45 43 54 4F 52 33 0B 14 03 00 BB 12 00 00  XVECTOR3........
  00009120: 10 6F 70 65 72 61 74 6F 72 20 66 6C 6F 61 74 20  .operator float 
  00009130: 2A F3 F2 F1 0B 14 03 00 BE 12 00 00 16 6F 70 65  *............ope
  00009140: 72 61 74 6F 72 20 63 6F 6E 73 74 20 66 6C 6F 61  rator const floa
  00009150: 74 20 2A F1 0B 14 03 00 C2 12 00 00 0A 6F 70 65  t *..........ope
  00009160: 72 61 74 6F 72 2B 3D F1 0B 14 03 00 C2 12 00 00  rator+=.........
  00009170: 0A 6F 70 65 72 61 74 6F 72 2D 3D F1 0B 14 03 00  .operator-=.....
  00009180: C3 12 00 00 0A 6F 70 65 72 61 74 6F 72 2A 3D F1  .....operator*=.
  00009190: 0B 14 03 00 C3 12 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  000091A0: 72 2F 3D F1 07 14 02 00 C6 12 00 00 09 6F 70 65  r/=..........ope
  000091B0: 72 61 74 6F 72 2B F2 F1 07 14 02 00 C7 12 00 00  rator+..........
  000091C0: 09 6F 70 65 72 61 74 6F 72 2D F2 F1 0B 14 03 00  .operator-......
  000091D0: C8 12 00 00 09 6F 70 65 72 61 74 6F 72 2A F2 F1  .....operator*..
  000091E0: 0B 14 03 00 C8 12 00 00 09 6F 70 65 72 61 74 6F  .........operato
  000091F0: 72 2F F2 F1 0B 14 03 00 C9 12 00 00 0A 6F 70 65  r/...........ope
  00009200: 72 61 74 6F 72 3D 3D F1 0B 14 03 00 C9 12 00 00  rator==.........
  00009210: 0A 6F 70 65 72 61 74 6F 72 21 3D F1 22 00 05 10  .operator!=."...
  00009220: 13 00 46 00 CA 12 00 00 00 00 00 00 00 00 00 00  ..F.............
  00009230: 0C 00 0B 44 33 44 58 56 45 43 54 4F 52 33 F2 F1  ...D3DXVECTOR3..
  00009240: 22 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  "...............
  00009250: 00 00 00 00 00 00 0B 44 33 44 58 56 45 43 54 4F  .......D3DXVECTO
  00009260: 52 34 F2 F1 0A 00 02 10 CC 12 00 00 0A 04 00 00  R4..............
  00009270: 16 00 01 12 04 00 00 00 40 00 00 00 40 00 00 00  ........@...@...
  00009280: 40 00 00 00 40 00 00 00 1A 00 09 10 03 00 00 00  @...@...........
  00009290: CC 12 00 00 CD 12 00 00 0B 00 04 00 CE 12 00 00  ................
  000092A0: 00 00 00 00 1A 00 09 10 03 00 00 00 CC 12 00 00  ................
  000092B0: CD 12 00 00 0B 00 01 00 9A 12 00 00 00 00 00 00  ................
  000092C0: 1A 00 09 10 03 00 00 00 CC 12 00 00 CD 12 00 00  ................
  000092D0: 0B 00 00 00 09 10 00 00 00 00 00 00 1A 00 06 12  ................
  000092E0: 03 00 00 00 CF 12 00 00 03 00 00 00 D0 12 00 00  ................
  000092F0: 03 00 00 00 D1 12 00 00 1A 00 09 10 40 04 00 00  ............@...
  00009300: CC 12 00 00 CD 12 00 00 0B 00 00 00 09 10 00 00  ................
  00009310: 00 00 00 00 0A 00 01 10 CC 12 00 00 01 00 F2 F1  ................
  00009320: 0A 00 02 10 D4 12 00 00 0A 04 00 00 1A 00 09 10  ................
  00009330: 99 12 00 00 CC 12 00 00 D5 12 00 00 0B 00 00 00  ................
  00009340: 09 10 00 00 00 00 00 00 0A 00 02 10 CC 12 00 00  ................
  00009350: 2A 00 00 00 0A 00 02 10 D4 12 00 00 2A 00 00 00  *...........*...
  00009360: 0A 00 01 12 01 00 00 00 D8 12 00 00 1A 00 09 10  ................
  00009370: D7 12 00 00 CC 12 00 00 CD 12 00 00 0B 00 01 00  ................
  00009380: D9 12 00 00 00 00 00 00 1A 00 09 10 D7 12 00 00  ................
  00009390: CC 12 00 00 CD 12 00 00 0B 00 01 00 A6 12 00 00  ................
  000093A0: 00 00 00 00 1A 00 09 10 CC 12 00 00 CC 12 00 00  ................
  000093B0: D5 12 00 00 0B 00 01 00 D9 12 00 00 00 00 00 00  ................
  000093C0: 1A 00 09 10 CC 12 00 00 CC 12 00 00 D5 12 00 00  ................
  000093D0: 0B 00 00 00 09 10 00 00 00 00 00 00 12 00 06 12  ................
  000093E0: 03 00 00 00 DC 12 00 00 03 00 00 00 DD 12 00 00  ................
  000093F0: 12 00 06 12 03 00 00 00 DC 12 00 00 03 00 00 00  ................
  00009400: DD 12 00 00 1A 00 09 10 CC 12 00 00 CC 12 00 00  ................
  00009410: D5 12 00 00 0B 00 01 00 A6 12 00 00 00 00 00 00  ................
  00009420: 1A 00 09 10 74 00 00 00 CC 12 00 00 D5 12 00 00  ....t...........
  00009430: 0B 00 01 00 D9 12 00 00 00 00 00 00 4A 01 03 12  ............J...
  00009440: 07 14 03 00 D2 12 00 00 0B 44 33 44 58 56 45 43  .........D3DXVEC
  00009450: 54 4F 52 34 0B 14 03 00 D3 12 00 00 10 6F 70 65  TOR4.........ope
  00009460: 72 61 74 6F 72 20 66 6C 6F 61 74 20 2A F3 F2 F1  rator float *...
  00009470: 0B 14 03 00 D6 12 00 00 16 6F 70 65 72 61 74 6F  .........operato
  00009480: 72 20 63 6F 6E 73 74 20 66 6C 6F 61 74 20 2A F1  r const float *.
  00009490: 0B 14 03 00 DA 12 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  000094A0: 72 2B 3D F1 0B 14 03 00 DA 12 00 00 0A 6F 70 65  r+=..........ope
  000094B0: 72 61 74 6F 72 2D 3D F1 0B 14 03 00 DB 12 00 00  rator-=.........
  000094C0: 0A 6F 70 65 72 61 74 6F 72 2A 3D F1 0B 14 03 00  .operator*=.....
  000094D0: DB 12 00 00 0A 6F 70 65 72 61 74 6F 72 2F 3D F1  .....operator/=.
  000094E0: 07 14 02 00 DE 12 00 00 09 6F 70 65 72 61 74 6F  .........operato
  000094F0: 72 2B F2 F1 07 14 02 00 DF 12 00 00 09 6F 70 65  r+...........ope
  00009500: 72 61 74 6F 72 2D F2 F1 0B 14 03 00 E0 12 00 00  rator-..........
  00009510: 09 6F 70 65 72 61 74 6F 72 2A F2 F1 0B 14 03 00  .operator*......
  00009520: E0 12 00 00 09 6F 70 65 72 61 74 6F 72 2F F2 F1  .....operator/..
  00009530: 0B 14 03 00 E1 12 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  00009540: 72 3D 3D F1 0B 14 03 00 E1 12 00 00 0A 6F 70 65  r==..........ope
  00009550: 72 61 74 6F 72 21 3D F1 05 14 03 00 40 00 00 00  rator!=.....@...
  00009560: 00 00 01 78 05 14 03 00 40 00 00 00 04 00 01 79  ...x....@......y
  00009570: 05 14 03 00 40 00 00 00 08 00 01 7A 05 14 03 00  ....@......z....
  00009580: 40 00 00 00 0C 00 01 77 22 00 05 10 15 00 46 00  @......w".....F.
  00009590: E2 12 00 00 00 00 00 00 00 00 00 00 10 00 0B 44  ...............D
  000095A0: 33 44 58 56 45 43 54 4F 52 34 F2 F1 22 00 05 10  3DXVECTOR4.."...
  000095B0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  000095C0: 00 00 0A 44 33 44 58 4D 41 54 52 49 58 F3 F2 F1  ...D3DXMATRIX...
  000095D0: 0A 00 02 10 E4 12 00 00 0A 04 00 00 46 00 01 12  ............F...
  000095E0: 10 00 00 00 40 00 00 00 40 00 00 00 40 00 00 00  ....@...@...@...
  000095F0: 40 00 00 00 40 00 00 00 40 00 00 00 40 00 00 00  @...@...@...@...
  00009600: 40 00 00 00 40 00 00 00 40 00 00 00 40 00 00 00  @...@...@...@...
  00009610: 40 00 00 00 40 00 00 00 40 00 00 00 40 00 00 00  @...@...@...@...
  00009620: 40 00 00 00 1A 00 09 10 03 00 00 00 E4 12 00 00  @...............
  00009630: E5 12 00 00 0B 00 10 00 E6 12 00 00 00 00 00 00  ................
  00009640: 0A 00 02 10 92 10 00 00 2A 00 00 00 0A 00 01 12  ........*.......
  00009650: 01 00 00 00 E8 12 00 00 1A 00 09 10 03 00 00 00  ................
  00009660: E4 12 00 00 E5 12 00 00 0B 00 01 00 E9 12 00 00  ................
  00009670: 00 00 00 00 1A 00 09 10 03 00 00 00 E4 12 00 00  ................
  00009680: E5 12 00 00 0B 00 01 00 9A 12 00 00 00 00 00 00  ................
  00009690: 1A 00 09 10 03 00 00 00 E4 12 00 00 E5 12 00 00  ................
  000096A0: 0B 00 00 00 09 10 00 00 00 00 00 00 22 00 06 12  ............"...
  000096B0: 03 00 00 00 E7 12 00 00 03 00 00 00 EA 12 00 00  ................
  000096C0: 03 00 00 00 EB 12 00 00 03 00 00 00 EC 12 00 00  ................
  000096D0: 0E 00 01 12 02 00 00 00 75 00 00 00 75 00 00 00  ........u...u...
  000096E0: 0A 00 01 10 E4 12 00 00 01 00 F2 F1 0A 00 02 10  ................
  000096F0: EF 12 00 00 0A 04 00 00 1A 00 09 10 40 00 00 00  ............@...
  00009700: E4 12 00 00 F0 12 00 00 0B 00 02 00 EE 12 00 00  ................
  00009710: 00 00 00 00 0A 00 02 10 40 00 00 00 2A 00 00 00  ........@...*...
  00009720: 1A 00 09 10 F2 12 00 00 E4 12 00 00 E5 12 00 00  ................
  00009730: 0B 00 02 00 EE 12 00 00 00 00 00 00 12 00 06 12  ................
  00009740: 03 00 00 00 F1 12 00 00 03 00 00 00 F3 12 00 00  ................
  00009750: 1A 00 09 10 40 04 00 00 E4 12 00 00 E5 12 00 00  ....@...........
  00009760: 0B 00 00 00 09 10 00 00 00 00 00 00 1A 00 09 10  ................
  00009770: 99 12 00 00 E4 12 00 00 F0 12 00 00 0B 00 00 00  ................
  00009780: 09 10 00 00 00 00 00 00 0A 00 02 10 E4 12 00 00  ................
  00009790: 2A 00 00 00 1A 00 09 10 F7 12 00 00 E4 12 00 00  *...............
  000097A0: E5 12 00 00 0B 00 01 00 A6 12 00 00 00 00 00 00  ................
  000097B0: 0A 00 02 10 EF 12 00 00 2A 00 00 00 0A 00 01 12  ........*.......
  000097C0: 01 00 00 00 F9 12 00 00 1A 00 09 10 F7 12 00 00  ................
  000097D0: E4 12 00 00 E5 12 00 00 0B 00 01 00 FA 12 00 00  ................
  000097E0: 00 00 00 00 12 00 06 12 03 00 00 00 F8 12 00 00  ................
  000097F0: 03 00 00 00 FB 12 00 00 1A 00 09 10 E4 12 00 00  ................
  00009800: E4 12 00 00 F0 12 00 00 0B 00 01 00 FA 12 00 00  ................
  00009810: 00 00 00 00 1A 00 09 10 E4 12 00 00 E4 12 00 00  ................
  00009820: F0 12 00 00 0B 00 00 00 09 10 00 00 00 00 00 00  ................
  00009830: 12 00 06 12 03 00 00 00 FD 12 00 00 03 00 00 00  ................
  00009840: FE 12 00 00 12 00 06 12 03 00 00 00 FD 12 00 00  ................
  00009850: 03 00 00 00 FE 12 00 00 1A 00 09 10 E4 12 00 00  ................
  00009860: E4 12 00 00 F0 12 00 00 0B 00 01 00 A6 12 00 00  ................
  00009870: 00 00 00 00 12 00 06 12 03 00 00 00 01 13 00 00  ................
  00009880: 03 00 00 00 FD 12 00 00 1A 00 09 10 74 00 00 00  ............t...
  00009890: E4 12 00 00 F0 12 00 00 0B 00 01 00 FA 12 00 00  ................
  000098A0: 00 00 00 00 3A 01 03 12 00 14 03 00 91 10 00 00  ....:...........
  000098B0: 00 00 F2 F1 07 14 04 00 ED 12 00 00 0A 44 33 44  .............D3D
  000098C0: 58 4D 41 54 52 49 58 F1 07 14 02 00 F4 12 00 00  XMATRIX.........
  000098D0: 0A 6F 70 65 72 61 74 6F 72 28 29 F1 0B 14 03 00  .operator().....
  000098E0: F5 12 00 00 10 6F 70 65 72 61 74 6F 72 20 66 6C  .....operator fl
  000098F0: 6F 61 74 20 2A F3 F2 F1 0B 14 03 00 F6 12 00 00  oat *...........
  00009900: 16 6F 70 65 72 61 74 6F 72 20 63 6F 6E 73 74 20  .operator const 
  00009910: 66 6C 6F 61 74 20 2A F1 07 14 02 00 FC 12 00 00  float *.........
  00009920: 0A 6F 70 65 72 61 74 6F 72 2A 3D F1 0B 14 03 00  .operator*=.....
  00009930: FB 12 00 00 0A 6F 70 65 72 61 74 6F 72 2B 3D F1  .....operator+=.
  00009940: 0B 14 03 00 FB 12 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  00009950: 72 2D 3D F1 0B 14 03 00 F8 12 00 00 0A 6F 70 65  r-=..........ope
  00009960: 72 61 74 6F 72 2F 3D F1 07 14 02 00 FF 12 00 00  rator/=.........
  00009970: 09 6F 70 65 72 61 74 6F 72 2B F2 F1 07 14 02 00  .operator+......
  00009980: 00 13 00 00 09 6F 70 65 72 61 74 6F 72 2D F2 F1  .....operator-..
  00009990: 07 14 02 00 02 13 00 00 09 6F 70 65 72 61 74 6F  .........operato
  000099A0: 72 2A F2 F1 0B 14 03 00 01 13 00 00 09 6F 70 65  r*...........ope
  000099B0: 72 61 74 6F 72 2F F2 F1 0B 14 03 00 03 13 00 00  rator/..........
  000099C0: 0A 6F 70 65 72 61 74 6F 72 3D 3D F1 0B 14 03 00  .operator==.....
  000099D0: 03 13 00 00 0A 6F 70 65 72 61 74 6F 72 21 3D F1  .....operator!=.
  000099E0: 22 00 05 10 17 00 46 00 04 13 00 00 00 00 00 00  ".....F.........
  000099F0: 00 00 00 00 40 00 0A 44 33 44 58 4D 41 54 52 49  ....@..D3DXMATRI
  00009A00: 58 F3 F2 F1 26 00 05 10 00 00 80 00 00 00 00 00  X...&...........
  00009A10: 00 00 00 00 00 00 00 00 00 00 0E 44 33 44 58 51  ...........D3DXQ
  00009A20: 55 41 54 45 52 4E 49 4F 4E F3 F2 F1 0A 00 02 10  UATERNION.......
  00009A30: 06 13 00 00 0A 04 00 00 1A 00 09 10 03 00 00 00  ................
  00009A40: 06 13 00 00 07 13 00 00 0B 00 04 00 CE 12 00 00  ................
  00009A50: 00 00 00 00 1A 00 09 10 03 00 00 00 06 13 00 00  ................
  00009A60: 07 13 00 00 0B 00 01 00 9A 12 00 00 00 00 00 00  ................
  00009A70: 1A 00 09 10 03 00 00 00 06 13 00 00 07 13 00 00  ................
  00009A80: 0B 00 00 00 09 10 00 00 00 00 00 00 1A 00 06 12  ................
  00009A90: 03 00 00 00 08 13 00 00 03 00 00 00 09 13 00 00  ................
  00009AA0: 03 00 00 00 0A 13 00 00 1A 00 09 10 40 04 00 00  ............@...
  00009AB0: 06 13 00 00 07 13 00 00 0B 00 00 00 09 10 00 00  ................
  00009AC0: 00 00 00 00 0A 00 01 10 06 13 00 00 01 00 F2 F1  ................
  00009AD0: 0A 00 02 10 0D 13 00 00 0A 04 00 00 1A 00 09 10  ................
  00009AE0: 99 12 00 00 06 13 00 00 0E 13 00 00 0B 00 00 00  ................
  00009AF0: 09 10 00 00 00 00 00 00 0A 00 02 10 06 13 00 00  ................
  00009B00: 2A 00 00 00 0A 00 02 10 0D 13 00 00 2A 00 00 00  *...........*...
  00009B10: 0A 00 01 12 01 00 00 00 11 13 00 00 1A 00 09 10  ................
  00009B20: 10 13 00 00 06 13 00 00 07 13 00 00 0B 00 01 00  ................
  00009B30: 12 13 00 00 00 00 00 00 1A 00 09 10 10 13 00 00  ................
  00009B40: 06 13 00 00 07 13 00 00 0B 00 01 00 A6 12 00 00  ................
  00009B50: 00 00 00 00 12 00 06 12 03 00 00 00 14 13 00 00  ................
  00009B60: 03 00 00 00 13 13 00 00 1A 00 09 10 06 13 00 00  ................
  00009B70: 06 13 00 00 0E 13 00 00 0B 00 01 00 12 13 00 00  ................
  00009B80: 00 00 00 00 1A 00 09 10 06 13 00 00 06 13 00 00  ................
  00009B90: 0E 13 00 00 0B 00 00 00 09 10 00 00 00 00 00 00  ................
  00009BA0: 12 00 06 12 03 00 00 00 16 13 00 00 03 00 00 00  ................
  00009BB0: 17 13 00 00 12 00 06 12 03 00 00 00 16 13 00 00  ................
  00009BC0: 03 00 00 00 17 13 00 00 1A 00 09 10 06 13 00 00  ................
  00009BD0: 06 13 00 00 0E 13 00 00 0B 00 01 00 A6 12 00 00  ................
  00009BE0: 00 00 00 00 12 00 06 12 03 00 00 00 1A 13 00 00  ................
  00009BF0: 03 00 00 00 16 13 00 00 1A 00 09 10 74 00 00 00  ............t...
  00009C00: 06 13 00 00 0E 13 00 00 0B 00 01 00 12 13 00 00  ................
  00009C10: 00 00 00 00 4E 01 03 12 07 14 03 00 0B 13 00 00  ....N...........
  00009C20: 0E 44 33 44 58 51 55 41 54 45 52 4E 49 4F 4E F1  .D3DXQUATERNION.
  00009C30: 0B 14 03 00 0C 13 00 00 10 6F 70 65 72 61 74 6F  .........operato
  00009C40: 72 20 66 6C 6F 61 74 20 2A F3 F2 F1 0B 14 03 00  r float *.......
  00009C50: 0F 13 00 00 16 6F 70 65 72 61 74 6F 72 20 63 6F  .....operator co
  00009C60: 6E 73 74 20 66 6C 6F 61 74 20 2A F1 0B 14 03 00  nst float *.....
  00009C70: 13 13 00 00 0A 6F 70 65 72 61 74 6F 72 2B 3D F1  .....operator+=.
  00009C80: 0B 14 03 00 13 13 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  00009C90: 72 2D 3D F1 07 14 02 00 15 13 00 00 0A 6F 70 65  r-=..........ope
  00009CA0: 72 61 74 6F 72 2A 3D F1 0B 14 03 00 14 13 00 00  rator*=.........
  00009CB0: 0A 6F 70 65 72 61 74 6F 72 2F 3D F1 07 14 02 00  .operator/=.....
  00009CC0: 18 13 00 00 09 6F 70 65 72 61 74 6F 72 2B F2 F1  .....operator+..
  00009CD0: 07 14 02 00 19 13 00 00 09 6F 70 65 72 61 74 6F  .........operato
  00009CE0: 72 2D F2 F1 07 14 02 00 1B 13 00 00 09 6F 70 65  r-...........ope
  00009CF0: 72 61 74 6F 72 2A F2 F1 0B 14 03 00 1A 13 00 00  rator*..........
  00009D00: 09 6F 70 65 72 61 74 6F 72 2F F2 F1 0B 14 03 00  .operator/......
  00009D10: 1C 13 00 00 0A 6F 70 65 72 61 74 6F 72 3D 3D F1  .....operator==.
  00009D20: 0B 14 03 00 1C 13 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  00009D30: 72 21 3D F1 05 14 03 00 40 00 00 00 00 00 01 78  r!=.....@......x
  00009D40: 05 14 03 00 40 00 00 00 04 00 01 79 05 14 03 00  ....@......y....
  00009D50: 40 00 00 00 08 00 01 7A 05 14 03 00 40 00 00 00  @......z....@...
  00009D60: 0C 00 01 77 26 00 05 10 17 00 46 00 1D 13 00 00  ...w&.....F.....
  00009D70: 00 00 00 00 00 00 00 00 10 00 0E 44 33 44 58 51  ...........D3DXQ
  00009D80: 55 41 54 45 52 4E 49 4F 4E F3 F2 F1 1E 00 05 10  UATERNION.......
  00009D90: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00009DA0: 00 00 09 44 33 44 58 50 4C 41 4E 45 0A 00 02 10  ...D3DXPLANE....
  00009DB0: 1F 13 00 00 0A 04 00 00 1A 00 09 10 03 00 00 00  ................
  00009DC0: 1F 13 00 00 20 13 00 00 0B 00 04 00 CE 12 00 00  .... ...........
  00009DD0: 00 00 00 00 1A 00 09 10 03 00 00 00 1F 13 00 00  ................
  00009DE0: 20 13 00 00 0B 00 01 00 9A 12 00 00 00 00 00 00   ...............
  00009DF0: 1A 00 09 10 03 00 00 00 1F 13 00 00 20 13 00 00  ............ ...
  00009E00: 0B 00 00 00 09 10 00 00 00 00 00 00 1A 00 06 12  ................
  00009E10: 03 00 00 00 21 13 00 00 03 00 00 00 22 13 00 00  ....!......."...
  00009E20: 03 00 00 00 23 13 00 00 1A 00 09 10 40 04 00 00  ....#.......@...
  00009E30: 1F 13 00 00 20 13 00 00 0B 00 00 00 09 10 00 00  .... ...........
  00009E40: 00 00 00 00 0A 00 01 10 1F 13 00 00 01 00 F2 F1  ................
  00009E50: 0A 00 02 10 26 13 00 00 0A 04 00 00 1A 00 09 10  ....&...........
  00009E60: 99 12 00 00 1F 13 00 00 27 13 00 00 0B 00 00 00  ........'.......
  00009E70: 09 10 00 00 00 00 00 00 1A 00 09 10 1F 13 00 00  ................
  00009E80: 1F 13 00 00 27 13 00 00 0B 00 00 00 09 10 00 00  ....'...........
  00009E90: 00 00 00 00 0A 00 02 10 26 13 00 00 2A 00 00 00  ........&...*...
  00009EA0: 0A 00 01 12 01 00 00 00 2A 13 00 00 1A 00 09 10  ........*.......
  00009EB0: 74 00 00 00 1F 13 00 00 27 13 00 00 0B 00 01 00  t.......'.......
  00009EC0: 2B 13 00 00 00 00 00 00 D2 00 03 12 07 14 03 00  +...............
  00009ED0: 24 13 00 00 09 44 33 44 58 50 4C 41 4E 45 F2 F1  $....D3DXPLANE..
  00009EE0: 0B 14 03 00 25 13 00 00 10 6F 70 65 72 61 74 6F  ....%....operato
  00009EF0: 72 20 66 6C 6F 61 74 20 2A F3 F2 F1 0B 14 03 00  r float *.......
  00009F00: 28 13 00 00 16 6F 70 65 72 61 74 6F 72 20 63 6F  (....operator co
  00009F10: 6E 73 74 20 66 6C 6F 61 74 20 2A F1 0B 14 03 00  nst float *.....
  00009F20: 29 13 00 00 09 6F 70 65 72 61 74 6F 72 2B F2 F1  )....operator+..
  00009F30: 0B 14 03 00 29 13 00 00 09 6F 70 65 72 61 74 6F  ....)....operato
  00009F40: 72 2D F2 F1 0B 14 03 00 2C 13 00 00 0A 6F 70 65  r-......,....ope
  00009F50: 72 61 74 6F 72 3D 3D F1 0B 14 03 00 2C 13 00 00  rator==.....,...
  00009F60: 0A 6F 70 65 72 61 74 6F 72 21 3D F1 05 14 03 00  .operator!=.....
  00009F70: 40 00 00 00 00 00 01 61 05 14 03 00 40 00 00 00  @......a....@...
  00009F80: 04 00 01 62 05 14 03 00 40 00 00 00 08 00 01 63  ...b....@......c
  00009F90: 05 14 03 00 40 00 00 00 0C 00 01 64 1E 00 05 10  ....@......d....
  00009FA0: 0D 00 46 00 2D 13 00 00 00 00 00 00 00 00 00 00  ..F.-...........
  00009FB0: 10 00 09 44 33 44 58 50 4C 41 4E 45 1E 00 05 10  ...D3DXPLANE....
  00009FC0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00009FD0: 00 00 09 44 33 44 58 43 4F 4C 4F 52 0A 00 02 10  ...D3DXCOLOR....
  00009FE0: 2F 13 00 00 0A 04 00 00 1A 00 09 10 03 00 00 00  /...............
  00009FF0: 2F 13 00 00 30 13 00 00 0B 00 04 00 CE 12 00 00  /...0...........
  0000A000: 00 00 00 00 0A 00 01 10 22 12 00 00 01 00 F2 F1  ........".......
  0000A010: 0A 00 02 10 32 13 00 00 2A 00 00 00 0A 00 01 12  ....2...*.......
  0000A020: 01 00 00 00 33 13 00 00 1A 00 09 10 03 00 00 00  ....3...........
  0000A030: 2F 13 00 00 30 13 00 00 0B 00 01 00 34 13 00 00  /...0.......4...
  0000A040: 00 00 00 00 1A 00 09 10 03 00 00 00 2F 13 00 00  ............/...
  0000A050: 30 13 00 00 0B 00 01 00 9A 12 00 00 00 00 00 00  0...............
  0000A060: 1A 00 09 10 03 00 00 00 2F 13 00 00 30 13 00 00  ......../...0...
  0000A070: 0B 00 01 00 BB 10 00 00 00 00 00 00 1A 00 09 10  ................
  0000A080: 03 00 00 00 2F 13 00 00 30 13 00 00 0B 00 00 00  ..../...0.......
  0000A090: 09 10 00 00 00 00 00 00 2A 00 06 12 03 00 00 00  ........*.......
  0000A0A0: 31 13 00 00 03 00 00 00 35 13 00 00 03 00 00 00  1.......5.......
  0000A0B0: 36 13 00 00 03 00 00 00 37 13 00 00 03 00 00 00  6.......7.......
  0000A0C0: 38 13 00 00 0A 00 01 10 2F 13 00 00 01 00 F2 F1  8......./.......
  0000A0D0: 0A 00 02 10 3A 13 00 00 0A 04 00 00 1A 00 09 10  ....:...........
  0000A0E0: 22 00 00 00 2F 13 00 00 3B 13 00 00 0B 00 00 00  ".../...;.......
  0000A0F0: 09 10 00 00 00 00 00 00 1A 00 09 10 40 04 00 00  ............@...
  0000A100: 2F 13 00 00 30 13 00 00 0B 00 00 00 09 10 00 00  /...0...........
  0000A110: 00 00 00 00 1A 00 09 10 99 12 00 00 2F 13 00 00  ............/...
  0000A120: 3B 13 00 00 0B 00 00 00 09 10 00 00 00 00 00 00  ;...............
  0000A130: 0A 00 02 10 22 12 00 00 0A 00 00 00 1A 00 09 10  ...."...........
  0000A140: 3F 13 00 00 2F 13 00 00 30 13 00 00 0B 00 00 00  ?.../...0.......
  0000A150: 09 10 00 00 00 00 00 00 0A 00 02 10 32 13 00 00  ............2...
  0000A160: 0A 00 00 00 1A 00 09 10 41 13 00 00 2F 13 00 00  ........A.../...
  0000A170: 3B 13 00 00 0B 00 00 00 09 10 00 00 00 00 00 00  ;...............
  0000A180: 0A 00 02 10 22 12 00 00 2A 00 00 00 1A 00 09 10  ...."...*.......
  0000A190: 43 13 00 00 2F 13 00 00 30 13 00 00 0B 00 00 00  C.../...0.......
  0000A1A0: 09 10 00 00 00 00 00 00 1A 00 09 10 33 13 00 00  ............3...
  0000A1B0: 2F 13 00 00 3B 13 00 00 0B 00 00 00 09 10 00 00  /...;...........
  0000A1C0: 00 00 00 00 0A 00 02 10 2F 13 00 00 2A 00 00 00  ......../...*...
  0000A1D0: 0A 00 02 10 3A 13 00 00 2A 00 00 00 0A 00 01 12  ....:...*.......
  0000A1E0: 01 00 00 00 47 13 00 00 1A 00 09 10 46 13 00 00  ....G.......F...
  0000A1F0: 2F 13 00 00 30 13 00 00 0B 00 01 00 48 13 00 00  /...0.......H...
  0000A200: 00 00 00 00 1A 00 09 10 46 13 00 00 2F 13 00 00  ........F.../...
  0000A210: 30 13 00 00 0B 00 01 00 A6 12 00 00 00 00 00 00  0...............
  0000A220: 1A 00 09 10 2F 13 00 00 2F 13 00 00 3B 13 00 00  ..../.../...;...
  0000A230: 0B 00 01 00 48 13 00 00 00 00 00 00 1A 00 09 10  ....H...........
  0000A240: 2F 13 00 00 2F 13 00 00 3B 13 00 00 0B 00 00 00  /.../...;.......
  0000A250: 09 10 00 00 00 00 00 00 12 00 06 12 03 00 00 00  ................
  0000A260: 4B 13 00 00 03 00 00 00 4C 13 00 00 12 00 06 12  K.......L.......
  0000A270: 03 00 00 00 4B 13 00 00 03 00 00 00 4C 13 00 00  ....K.......L...
  0000A280: 1A 00 09 10 2F 13 00 00 2F 13 00 00 3B 13 00 00  ..../.../...;...
  0000A290: 0B 00 01 00 A6 12 00 00 00 00 00 00 1A 00 09 10  ................
  0000A2A0: 74 00 00 00 2F 13 00 00 3B 13 00 00 0B 00 01 00  t.../...;.......
  0000A2B0: 48 13 00 00 00 00 00 00 22 02 03 12 07 14 05 00  H.......".......
  0000A2C0: 39 13 00 00 09 44 33 44 58 43 4F 4C 4F 52 F2 F1  9....D3DXCOLOR..
  0000A2D0: 0B 14 03 00 3C 13 00 00 16 6F 70 65 72 61 74 6F  ....<....operato
  0000A2E0: 72 20 75 6E 73 69 67 6E 65 64 20 6C 6F 6E 67 F1  r unsigned long.
  0000A2F0: 0B 14 03 00 3D 13 00 00 10 6F 70 65 72 61 74 6F  ....=....operato
  0000A300: 72 20 66 6C 6F 61 74 20 2A F3 F2 F1 0B 14 03 00  r float *.......
  0000A310: 3E 13 00 00 16 6F 70 65 72 61 74 6F 72 20 63 6F  >....operator co
  0000A320: 6E 73 74 20 66 6C 6F 61 74 20 2A F1 0B 14 03 00  nst float *.....
  0000A330: 40 13 00 00 20 6F 70 65 72 61 74 6F 72 20 73 74  @... operator st
  0000A340: 72 75 63 74 20 5F 44 33 44 43 4F 4C 4F 52 56 41  ruct _D3DCOLORVA
  0000A350: 4C 55 45 20 2A F3 F2 F1 0B 14 03 00 42 13 00 00  LUE *.......B...
  0000A360: 26 6F 70 65 72 61 74 6F 72 20 63 6F 6E 73 74 20  &operator const 
  0000A370: 73 74 72 75 63 74 20 5F 44 33 44 43 4F 4C 4F 52  struct _D3DCOLOR
  0000A380: 56 41 4C 55 45 20 2A F1 0B 14 03 00 44 13 00 00  VALUE *.....D...
  0000A390: 20 6F 70 65 72 61 74 6F 72 20 73 74 72 75 63 74   operator struct
  0000A3A0: 20 5F 44 33 44 43 4F 4C 4F 52 56 41 4C 55 45 20   _D3DCOLORVALUE 
  0000A3B0: 26 F3 F2 F1 0B 14 03 00 45 13 00 00 26 6F 70 65  &.......E...&ope
  0000A3C0: 72 61 74 6F 72 20 63 6F 6E 73 74 20 73 74 72 75  rator const stru
  0000A3D0: 63 74 20 5F 44 33 44 43 4F 4C 4F 52 56 41 4C 55  ct _D3DCOLORVALU
  0000A3E0: 45 20 26 F1 0B 14 03 00 49 13 00 00 0A 6F 70 65  E &.....I....ope
  0000A3F0: 72 61 74 6F 72 2B 3D F1 0B 14 03 00 49 13 00 00  rator+=.....I...
  0000A400: 0A 6F 70 65 72 61 74 6F 72 2D 3D F1 0B 14 03 00  .operator-=.....
  0000A410: 4A 13 00 00 0A 6F 70 65 72 61 74 6F 72 2A 3D F1  J....operator*=.
  0000A420: 0B 14 03 00 4A 13 00 00 0A 6F 70 65 72 61 74 6F  ....J....operato
  0000A430: 72 2F 3D F1 07 14 02 00 4D 13 00 00 09 6F 70 65  r/=.....M....ope
  0000A440: 72 61 74 6F 72 2B F2 F1 07 14 02 00 4E 13 00 00  rator+......N...
  0000A450: 09 6F 70 65 72 61 74 6F 72 2D F2 F1 0B 14 03 00  .operator-......
  0000A460: 4F 13 00 00 09 6F 70 65 72 61 74 6F 72 2A F2 F1  O....operator*..
  0000A470: 0B 14 03 00 4F 13 00 00 09 6F 70 65 72 61 74 6F  ....O....operato
  0000A480: 72 2F F2 F1 0B 14 03 00 50 13 00 00 0A 6F 70 65  r/......P....ope
  0000A490: 72 61 74 6F 72 3D 3D F1 0B 14 03 00 50 13 00 00  rator==.....P...
  0000A4A0: 0A 6F 70 65 72 61 74 6F 72 21 3D F1 05 14 03 00  .operator!=.....
  0000A4B0: 40 00 00 00 00 00 01 72 05 14 03 00 40 00 00 00  @......r....@...
  0000A4C0: 04 00 01 67 05 14 03 00 40 00 00 00 08 00 01 62  ...g....@......b
  0000A4D0: 05 14 03 00 40 00 00 00 0C 00 01 61 1E 00 05 10  ....@......a....
  0000A4E0: 1C 00 46 00 51 13 00 00 00 00 00 00 00 00 00 00  ..F.Q...........
  0000A4F0: 10 00 09 44 33 44 58 43 4F 4C 4F 52 26 00 03 12  ...D3DXCOLOR&...
  0000A500: 05 14 03 00 40 00 00 00 00 00 01 78 05 14 03 00  ....@......x....
  0000A510: 40 00 00 00 04 00 01 79 05 14 03 00 40 00 00 00  @......y....@...
  0000A520: 08 00 01 7A 22 00 05 10 03 00 00 00 53 13 00 00  ...z".......S...
  0000A530: 00 00 00 00 00 00 00 00 0C 00 0A 5F 44 33 44 56  ..........._D3DV
  0000A540: 45 43 54 4F 52 F3 F2 F1 32 00 03 12 05 14 03 00  ECTOR...2.......
  0000A550: 40 00 00 00 00 00 01 72 05 14 03 00 40 00 00 00  @......r....@...
  0000A560: 04 00 01 67 05 14 03 00 40 00 00 00 08 00 01 62  ...g....@......b
  0000A570: 05 14 03 00 40 00 00 00 0C 00 01 61 26 00 05 10  ....@......a&...
  0000A580: 04 00 00 00 55 13 00 00 00 00 00 00 00 00 00 00  ....U...........
  0000A590: 10 00 0E 5F 44 33 44 43 4F 4C 4F 52 56 41 4C 55  ..._D3DCOLORVALU
  0000A5A0: 45 F3 F2 F1 0A 00 02 10 9F 12 00 00 0A 00 00 00  E...............
  0000A5B0: 0A 00 02 10 94 12 00 00 0A 00 00 00 0A 00 02 10  ................
  0000A5C0: BC 12 00 00 0A 00 00 00 0A 00 02 10 B0 12 00 00  ................
  0000A5D0: 0A 00 00 00 0A 00 02 10 D4 12 00 00 0A 00 00 00  ................
  0000A5E0: 0A 00 02 10 CC 12 00 00 0A 00 00 00 0A 00 02 10  ................
  0000A5F0: E4 12 00 00 0A 00 00 00 0A 00 02 10 EF 12 00 00  ................
  0000A600: 0A 00 00 00 0A 00 02 10 0D 13 00 00 0A 00 00 00  ................
  0000A610: 0A 00 02 10 06 13 00 00 0A 00 00 00 0A 00 02 10  ................
  0000A620: 26 13 00 00 0A 00 00 00 0A 00 02 10 3A 13 00 00  &...........:...
  0000A630: 0A 00 00 00 0A 00 02 10 2F 13 00 00 0A 00 00 00  ......../.......
  0000A640: 0A 00 02 10 03 04 00 00 0A 00 00 00 0A 00 01 10  ................
  0000A650: 00 10 00 00 01 00 F2 F1 0A 00 02 10 65 13 00 00  ............e...
  0000A660: 2A 00 00 00 22 00 05 10 00 00 80 00 00 00 00 00  *..."...........
  0000A670: 00 00 00 00 00 00 00 00 00 00 0C 49 44 69 72 65  ...........IDire
  0000A680: 63 74 53 6F 75 6E 64 F1 0A 00 02 10 67 13 00 00  ctSound.....g...
  0000A690: 0A 04 00 00 0E 00 01 12 02 00 00 00 66 13 00 00  ............f...
  0000A6A0: 64 13 00 00 1A 00 09 10 12 00 00 00 67 13 00 00  d...........g...
  0000A6B0: 68 13 00 00 07 00 02 00 69 13 00 00 00 00 00 00  h.......i.......
  0000A6C0: 1A 00 09 10 22 00 00 00 67 13 00 00 68 13 00 00  ...."...g...h...
  0000A6D0: 07 00 00 00 09 10 00 00 00 00 00 00 1E 00 05 10  ................
  0000A6E0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000A6F0: 00 00 07 5F 44 53 43 41 50 53 F2 F1 0A 00 02 10  ..._DSCAPS......
  0000A700: 6C 13 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  l...............
  0000A710: 6D 13 00 00 1A 00 09 10 12 00 00 00 67 13 00 00  m...........g...
  0000A720: 68 13 00 00 07 00 01 00 6E 13 00 00 00 00 00 00  h.......n.......
  0000A730: 22 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  "...............
  0000A740: 00 00 00 00 00 00 0D 5F 44 53 42 55 46 46 45 52  ......._DSBUFFER
  0000A750: 44 45 53 43 0A 00 01 10 70 13 00 00 01 00 F2 F1  DESC....p.......
  0000A760: 0A 00 02 10 71 13 00 00 0A 00 00 00 2A 00 05 10  ....q.......*...
  0000A770: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000A780: 00 00 12 49 44 69 72 65 63 74 53 6F 75 6E 64 42  ...IDirectSoundB
  0000A790: 75 66 66 65 72 F3 F2 F1 0A 00 02 10 73 13 00 00  uffer.......s...
  0000A7A0: 0A 00 00 00 0A 00 02 10 74 13 00 00 0A 00 00 00  ........t.......
  0000A7B0: 1E 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  ................
  0000A7C0: 00 00 00 00 00 00 08 49 55 6E 6B 6E 6F 77 6E F1  .......IUnknown.
  0000A7D0: 0A 00 02 10 76 13 00 00 0A 00 00 00 12 00 01 12  ....v...........
  0000A7E0: 03 00 00 00 72 13 00 00 75 13 00 00 77 13 00 00  ....r...u...w...
  0000A7F0: 1A 00 09 10 12 00 00 00 67 13 00 00 68 13 00 00  ........g...h...
  0000A800: 07 00 03 00 78 13 00 00 00 00 00 00 22 00 05 10  ....x......."...
  0000A810: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000A820: 00 00 0D 5F 44 53 53 54 52 45 41 4D 44 45 53 43  ..._DSSTREAMDESC
  0000A830: 0A 00 01 10 7A 13 00 00 01 00 F2 F1 0A 00 02 10  ....z...........
  0000A840: 7B 13 00 00 0A 00 00 00 2A 00 05 10 00 00 80 00  {.......*.......
  0000A850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 12 49  ...............I
  0000A860: 44 69 72 65 63 74 53 6F 75 6E 64 53 74 72 65 61  DirectSoundStrea
  0000A870: 6D F3 F2 F1 0A 00 02 10 7D 13 00 00 0A 00 00 00  m.......}.......
  0000A880: 0A 00 02 10 7E 13 00 00 0A 00 00 00 12 00 01 12  ....~...........
  0000A890: 03 00 00 00 7C 13 00 00 7F 13 00 00 77 13 00 00  ....|.......w...
  0000A8A0: 1A 00 09 10 12 00 00 00 67 13 00 00 68 13 00 00  ........g...h...
  0000A8B0: 07 00 03 00 80 13 00 00 00 00 00 00 0A 00 01 12  ................
  0000A8C0: 01 00 00 00 22 04 00 00 1A 00 09 10 12 00 00 00  ...."...........
  0000A8D0: 67 13 00 00 68 13 00 00 07 00 01 00 82 13 00 00  g...h...........
  0000A8E0: 00 00 00 00 0E 00 01 12 02 00 00 00 AD 11 00 00  ................
  0000A8F0: 22 00 00 00 1A 00 09 10 12 00 00 00 67 13 00 00  "...........g...
  0000A900: 68 13 00 00 07 00 02 00 84 13 00 00 00 00 00 00  h...............
  0000A910: 1A 00 09 10 12 00 00 00 67 13 00 00 68 13 00 00  ........g...h...
  0000A920: 07 00 00 00 09 10 00 00 00 00 00 00 0A 00 02 10  ................
  0000A930: D4 10 00 00 0A 00 00 00 26 00 05 10 00 00 80 00  ........&.......
  0000A940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 11 5F  ..............._
  0000A950: 44 53 45 46 46 45 43 54 49 4D 41 47 45 4C 4F 43  DSEFFECTIMAGELOC
  0000A960: 0A 00 01 10 88 13 00 00 01 00 F2 F1 0A 00 02 10  ................
  0000A970: 89 13 00 00 0A 00 00 00 2A 00 05 10 00 00 80 00  ........*.......
  0000A980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 12 5F  ..............._
  0000A990: 44 53 45 46 46 45 43 54 49 4D 41 47 45 44 45 53  DSEFFECTIMAGEDES
  0000A9A0: 43 F3 F2 F1 0A 00 02 10 8B 13 00 00 0A 00 00 00  C...............
  0000A9B0: 0A 00 02 10 8C 13 00 00 0A 00 00 00 16 00 01 12  ................
  0000A9C0: 04 00 00 00 87 13 00 00 22 00 00 00 8A 13 00 00  ........".......
  0000A9D0: 8D 13 00 00 1A 00 09 10 12 00 00 00 67 13 00 00  ............g...
  0000A9E0: 68 13 00 00 07 00 04 00 8E 13 00 00 00 00 00 00  h...............
  0000A9F0: 16 00 01 12 04 00 00 00 22 00 00 00 22 00 00 00  ........"..."...
  0000AA00: 03 04 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  ...."...........
  0000AA10: 67 13 00 00 68 13 00 00 07 00 04 00 90 13 00 00  g...h...........
  0000AA20: 00 00 00 00 1A 00 01 12 05 00 00 00 22 00 00 00  ............"...
  0000AA30: 22 00 00 00 87 13 00 00 22 00 00 00 22 00 00 00  "......."..."...
  0000AA40: 1A 00 09 10 12 00 00 00 67 13 00 00 68 13 00 00  ........g...h...
  0000AA50: 07 00 05 00 92 13 00 00 00 00 00 00 1A 00 09 10  ................
  0000AA60: 12 00 00 00 67 13 00 00 68 13 00 00 07 00 01 00  ....g...h.......
  0000AA70: 2F 11 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  /...............
  0000AA80: 67 13 00 00 68 13 00 00 07 00 02 00 31 10 00 00  g...h.......1...
  0000AA90: 00 00 00 00 22 00 05 10 00 00 80 00 00 00 00 00  ...."...........
  0000AAA0: 00 00 00 00 00 00 00 00 00 00 0D 5F 44 53 33 44  ..........._DS3D
  0000AAB0: 4C 49 53 54 45 4E 45 52 0A 00 01 10 96 13 00 00  LISTENER........
  0000AAC0: 01 00 F2 F1 0A 00 02 10 97 13 00 00 0A 00 00 00  ................
  0000AAD0: 0E 00 01 12 02 00 00 00 98 13 00 00 22 00 00 00  ............"...
  0000AAE0: 1A 00 09 10 12 00 00 00 67 13 00 00 68 13 00 00  ........g...h...
  0000AAF0: 07 00 02 00 99 13 00 00 00 00 00 00 0E 00 01 12  ................
  0000AB00: 02 00 00 00 40 00 00 00 22 00 00 00 1A 00 09 10  ....@...".......
  0000AB10: 12 00 00 00 67 13 00 00 68 13 00 00 07 00 02 00  ....g...h.......
  0000AB20: 9B 13 00 00 00 00 00 00 22 00 01 12 07 00 00 00  ........".......
  0000AB30: 40 00 00 00 40 00 00 00 40 00 00 00 40 00 00 00  @...@...@...@...
  0000AB40: 40 00 00 00 40 00 00 00 22 00 00 00 1A 00 09 10  @...@...".......
  0000AB50: 12 00 00 00 67 13 00 00 68 13 00 00 07 00 07 00  ....g...h.......
  0000AB60: 9D 13 00 00 00 00 00 00 16 00 01 12 04 00 00 00  ................
  0000AB70: 40 00 00 00 40 00 00 00 40 00 00 00 22 00 00 00  @...@...@..."...
  0000AB80: 1A 00 09 10 12 00 00 00 67 13 00 00 68 13 00 00  ........g...h...
  0000AB90: 07 00 04 00 9F 13 00 00 00 00 00 00 26 00 05 10  ............&...
  0000ABA0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000ABB0: 00 00 10 5F 44 53 49 33 44 4C 32 4C 49 53 54 45  ..._DSI3DL2LISTE
  0000ABC0: 4E 45 52 F1 0A 00 01 10 A1 13 00 00 01 00 F2 F1  NER.............
  0000ABD0: 0A 00 02 10 A2 13 00 00 0A 00 00 00 0E 00 01 12  ................
  0000ABE0: 02 00 00 00 A3 13 00 00 22 00 00 00 1A 00 09 10  ........".......
  0000ABF0: 12 00 00 00 67 13 00 00 68 13 00 00 07 00 02 00  ....g...h.......
  0000AC00: A4 13 00 00 00 00 00 00 0A 00 01 12 01 00 00 00  ................
  0000AC10: 13 04 00 00 1A 00 09 10 12 00 00 00 67 13 00 00  ............g...
  0000AC20: 68 13 00 00 07 00 01 00 A6 13 00 00 00 00 00 00  h...............
  0000AC30: 26 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  &...............
  0000AC40: 00 00 00 00 00 00 0F 5F 44 53 4F 55 54 50 55 54  ......._DSOUTPUT
  0000AC50: 4C 45 56 45 4C 53 F2 F1 0A 00 02 10 A8 13 00 00  LEVELS..........
  0000AC60: 0A 00 00 00 0E 00 01 12 02 00 00 00 A9 13 00 00  ................
  0000AC70: 74 00 00 00 1A 00 09 10 12 00 00 00 67 13 00 00  t...........g...
  0000AC80: 68 13 00 00 07 00 02 00 AA 13 00 00 00 00 00 00  h...............
  0000AC90: 82 02 03 12 0B 14 03 00 6A 13 00 00 0E 51 75 65  ........j....Que
  0000ACA0: 72 79 49 6E 74 65 72 66 61 63 65 F1 0B 14 03 00  ryInterface.....
  0000ACB0: 6B 13 00 00 06 41 64 64 52 65 66 F1 0B 14 03 00  k....AddRef.....
  0000ACC0: 6B 13 00 00 07 52 65 6C 65 61 73 65 0B 14 03 00  k....Release....
  0000ACD0: 6F 13 00 00 07 47 65 74 43 61 70 73 0B 14 03 00  o....GetCaps....
  0000ACE0: 79 13 00 00 11 43 72 65 61 74 65 53 6F 75 6E 64  y....CreateSound
  0000ACF0: 42 75 66 66 65 72 F2 F1 0B 14 03 00 81 13 00 00  Buffer..........
  0000AD00: 11 43 72 65 61 74 65 53 6F 75 6E 64 53 74 72 65  .CreateSoundStre
  0000AD10: 61 6D F2 F1 0B 14 03 00 83 13 00 00 10 47 65 74  am...........Get
  0000AD20: 53 70 65 61 6B 65 72 43 6F 6E 66 69 67 F3 F2 F1  SpeakerConfig...
  0000AD30: 0B 14 03 00 85 13 00 00 13 53 65 74 43 6F 6F 70  .........SetCoop
  0000AD40: 65 72 61 74 69 76 65 4C 65 76 65 6C 0B 14 03 00  erativeLevel....
  0000AD50: 86 13 00 00 07 43 6F 6D 70 61 63 74 0B 14 03 00  .....Compact....
  0000AD60: 8F 13 00 00 14 44 6F 77 6E 6C 6F 61 64 45 66 66  .....DownloadEff
  0000AD70: 65 63 74 73 49 6D 61 67 65 F3 F2 F1 0B 14 03 00  ectsImage.......
  0000AD80: 91 13 00 00 0D 47 65 74 45 66 66 65 63 74 44 61  .....GetEffectDa
  0000AD90: 74 61 F2 F1 0B 14 03 00 93 13 00 00 0D 53 65 74  ta...........Set
  0000ADA0: 45 66 66 65 63 74 44 61 74 61 F2 F1 0B 14 03 00  EffectData......
  0000ADB0: 86 13 00 00 10 43 6F 6D 6D 69 74 45 66 66 65 63  .....CommitEffec
  0000ADC0: 74 44 61 74 61 F3 F2 F1 0B 14 03 00 94 13 00 00  tData...........
  0000ADD0: 10 45 6E 61 62 6C 65 48 65 61 64 70 68 6F 6E 65  .EnableHeadphone
  0000ADE0: 73 F3 F2 F1 0B 14 03 00 95 13 00 00 11 53 65 74  s............Set
  0000ADF0: 4D 69 78 42 69 6E 48 65 61 64 72 6F 6F 6D F2 F1  MixBinHeadroom..
  0000AE00: 0B 14 03 00 9A 13 00 00 10 53 65 74 41 6C 6C 50  .........SetAllP
  0000AE10: 61 72 61 6D 65 74 65 72 73 F3 F2 F1 0B 14 03 00  arameters.......
  0000AE20: 9C 13 00 00 11 53 65 74 44 69 73 74 61 6E 63 65  .....SetDistance
  0000AE30: 46 61 63 74 6F 72 F2 F1 0B 14 03 00 9C 13 00 00  Factor..........
  0000AE40: 10 53 65 74 44 6F 70 70 6C 65 72 46 61 63 74 6F  .SetDopplerFacto
  0000AE50: 72 F3 F2 F1 0B 14 03 00 9E 13 00 00 0E 53 65 74  r............Set
  0000AE60: 4F 72 69 65 6E 74 61 74 69 6F 6E F1 0B 14 03 00  Orientation.....
  0000AE70: A0 13 00 00 0B 53 65 74 50 6F 73 69 74 69 6F 6E  .....SetPosition
  0000AE80: 0B 14 03 00 9C 13 00 00 10 53 65 74 52 6F 6C 6C  .........SetRoll
  0000AE90: 6F 66 66 46 61 63 74 6F 72 F3 F2 F1 0B 14 03 00  offFactor.......
  0000AEA0: A0 13 00 00 0B 53 65 74 56 65 6C 6F 63 69 74 79  .....SetVelocity
  0000AEB0: 0B 14 03 00 A5 13 00 00 10 53 65 74 49 33 44 4C  .........SetI3DL
  0000AEC0: 32 4C 69 73 74 65 6E 65 72 F3 F2 F1 0B 14 03 00  2Listener.......
  0000AED0: 86 13 00 00 16 43 6F 6D 6D 69 74 44 65 66 65 72  .....CommitDefer
  0000AEE0: 72 65 64 53 65 74 74 69 6E 67 73 F1 0B 14 03 00  redSettings.....
  0000AEF0: A7 13 00 00 07 47 65 74 54 69 6D 65 0B 14 03 00  .....GetTime....
  0000AF00: AB 13 00 00 0F 47 65 74 4F 75 74 70 75 74 4C 65  .....GetOutputLe
  0000AF10: 76 65 6C 73 22 00 05 10 1A 00 00 00 AC 13 00 00  vels"...........
  0000AF20: 00 00 00 00 00 00 00 00 01 00 0C 49 44 69 72 65  ...........IDire
  0000AF30: 63 74 53 6F 75 6E 64 F1 72 00 03 12 05 14 03 00  ctSound.r.......
  0000AF40: 22 00 00 00 00 00 0F 64 77 46 72 65 65 32 44 42  "......dwFree2DB
  0000AF50: 75 66 66 65 72 73 F2 F1 05 14 03 00 22 00 00 00  uffers......"...
  0000AF60: 04 00 0F 64 77 46 72 65 65 33 44 42 75 66 66 65  ...dwFree3DBuffe
  0000AF70: 72 73 F2 F1 05 14 03 00 22 00 00 00 08 00 10 64  rs......"......d
  0000AF80: 77 46 72 65 65 42 75 66 66 65 72 53 47 45 73 F1  wFreeBufferSGEs.
  0000AF90: 05 14 03 00 22 00 00 00 0C 00 11 64 77 4D 65 6D  ...."......dwMem
  0000AFA0: 6F 72 79 41 6C 6C 6F 63 61 74 65 64 1E 00 05 10  oryAllocated....
  0000AFB0: 04 00 00 00 AE 13 00 00 00 00 00 00 00 00 00 00  ................
  0000AFC0: 10 00 07 5F 44 53 43 41 50 53 F2 F1 06 00 0A 00  ..._DSCAPS......
  0000AFD0: 03 00 55 50 0A 00 02 10 B0 13 00 00 0A 00 00 00  ..UP............
  0000AFE0: 0A 00 02 10 03 04 00 00 0A 00 00 00 0E 00 01 12  ................
  0000AFF0: 02 00 00 00 66 13 00 00 B2 13 00 00 0A 00 02 10  ....f...........
  0000B000: 76 13 00 00 0A 04 00 00 1A 00 09 10 12 00 00 00  v...............
  0000B010: 76 13 00 00 B4 13 00 00 07 00 02 00 B3 13 00 00  v...............
  0000B020: 00 00 00 00 1A 00 09 10 22 00 00 00 76 13 00 00  ........"...v...
  0000B030: B4 13 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  0000B040: 0A 00 01 10 76 13 00 00 01 00 F2 F1 0A 00 02 10  ....v...........
  0000B050: B7 13 00 00 2A 00 00 00 0A 00 01 12 01 00 00 00  ....*...........
  0000B060: B8 13 00 00 1A 00 09 10 03 00 00 00 76 13 00 00  ............v...
  0000B070: B4 13 00 00 0B 00 01 00 B9 13 00 00 00 00 00 00  ................
  0000B080: 1A 00 09 10 03 00 00 00 76 13 00 00 B4 13 00 00  ........v.......
  0000B090: 0B 00 00 00 09 10 00 00 00 00 00 00 12 00 06 12  ................
  0000B0A0: 03 01 00 00 BA 13 00 00 03 01 00 00 BB 13 00 00  ................
  0000B0B0: 62 00 03 12 09 14 00 00 B1 13 00 00 0B 14 1B 00  b...............
  0000B0C0: B5 13 00 00 00 00 00 00 0E 51 75 65 72 79 49 6E  .........QueryIn
  0000B0D0: 74 65 72 66 61 63 65 F1 0B 14 1B 00 B6 13 00 00  terface.........
  0000B0E0: 04 00 00 00 06 41 64 64 52 65 66 F1 0B 14 1B 00  .....AddRef.....
  0000B0F0: B6 13 00 00 08 00 00 00 07 52 65 6C 65 61 73 65  .........Release
  0000B100: 07 14 02 00 BC 13 00 00 08 49 55 6E 6B 6E 6F 77  .........IUnknow
  0000B110: 6E F3 F2 F1 06 00 0A 00 03 00 55 50 1E 00 05 10  n.........UP....
  0000B120: 06 00 02 00 BD 13 00 00 00 00 00 00 BE 13 00 00  ................
  0000B130: 04 00 08 49 55 6E 6B 6E 6F 77 6E F1 22 00 05 10  ...IUnknown."...
  0000B140: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000B150: 00 00 0D 74 57 41 56 45 46 4F 52 4D 41 54 45 58  ...tWAVEFORMATEX
  0000B160: 0A 00 02 10 C0 13 00 00 0A 00 00 00 22 00 05 10  ............"...
  0000B170: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000B180: 00 00 0A 5F 44 53 4D 49 58 42 49 4E 53 F3 F2 F1  ..._DSMIXBINS...
  0000B190: 0A 00 01 10 C2 13 00 00 01 00 F2 F1 0A 00 02 10  ................
  0000B1A0: C3 13 00 00 0A 00 00 00 86 00 03 12 05 14 03 00  ................
  0000B1B0: 22 00 00 00 00 00 06 64 77 53 69 7A 65 F3 F2 F1  "......dwSize...
  0000B1C0: 05 14 03 00 22 00 00 00 04 00 07 64 77 46 6C 61  ...."......dwFla
  0000B1D0: 67 73 F2 F1 05 14 03 00 22 00 00 00 08 00 0D 64  gs......"......d
  0000B1E0: 77 42 75 66 66 65 72 42 79 74 65 73 05 14 03 00  wBufferBytes....
  0000B1F0: C1 13 00 00 0C 00 0B 6C 70 77 66 78 46 6F 72 6D  .......lpwfxForm
  0000B200: 61 74 F2 F1 05 14 03 00 C4 13 00 00 10 00 09 6C  at.............l
  0000B210: 70 4D 69 78 42 69 6E 73 05 14 03 00 22 00 00 00  pMixBins...."...
  0000B220: 14 00 0D 64 77 49 6E 70 75 74 4D 69 78 42 69 6E  ...dwInputMixBin
  0000B230: 22 00 05 10 06 00 00 00 C5 13 00 00 00 00 00 00  "...............
  0000B240: 00 00 00 00 18 00 0D 5F 44 53 42 55 46 46 45 52  ......._DSBUFFER
  0000B250: 44 45 53 43 12 00 01 12 03 00 00 00 03 04 00 00  DESC............
  0000B260: 03 04 00 00 22 00 00 00 0E 00 08 10 03 00 00 00  ...."...........
  0000B270: 07 00 03 00 C7 13 00 00 0A 00 02 10 C8 13 00 00  ................
  0000B280: 0A 00 00 00 92 00 03 12 05 14 03 00 22 00 00 00  ............"...
  0000B290: 00 00 07 64 77 46 6C 61 67 73 F2 F1 05 14 03 00  ...dwFlags......
  0000B2A0: 22 00 00 00 04 00 14 64 77 4D 61 78 41 74 74 61  "......dwMaxAtta
  0000B2B0: 63 68 65 64 50 61 63 6B 65 74 73 F1 05 14 03 00  chedPackets.....
  0000B2C0: C1 13 00 00 08 00 0B 6C 70 77 66 78 46 6F 72 6D  .......lpwfxForm
  0000B2D0: 61 74 F2 F1 05 14 03 00 C9 13 00 00 0C 00 0C 6C  at.............l
  0000B2E0: 70 66 6E 43 61 6C 6C 62 61 63 6B F1 05 14 03 00  pfnCallback.....
  0000B2F0: 03 04 00 00 10 00 0A 6C 70 76 43 6F 6E 74 65 78  .......lpvContex
  0000B300: 74 F3 F2 F1 05 14 03 00 C4 13 00 00 14 00 09 6C  t..............l
  0000B310: 70 4D 69 78 42 69 6E 73 22 00 05 10 06 00 00 00  pMixBins".......
  0000B320: CA 13 00 00 00 00 00 00 00 00 00 00 18 00 0D 5F  ..............._
  0000B330: 44 53 53 54 52 45 41 4D 44 45 53 43 16 00 03 12  DSSTREAMDESC....
  0000B340: 05 14 03 00 74 00 00 00 00 00 06 75 6E 75 73 65  ....t......unuse
  0000B350: 64 F3 F2 F1 1E 00 05 10 01 00 00 00 CC 13 00 00  d...............
  0000B360: 00 00 00 00 00 00 00 00 04 00 06 48 57 4E 44 5F  ...........HWND_
  0000B370: 5F F3 F2 F1 22 00 05 10 00 00 80 00 00 00 00 00  _..."...........
  0000B380: 00 00 00 00 00 00 00 00 00 00 0C 5F 44 53 45 46  ..........._DSEF
  0000B390: 46 45 43 54 4D 41 50 F1 0E 00 03 10 CE 13 00 00  FECTMAP.........
  0000B3A0: 11 00 00 00 20 00 00 F1 52 00 03 12 05 14 03 00  .... ...R.......
  0000B3B0: 22 00 00 00 00 00 0D 64 77 45 66 66 65 63 74 43  "......dwEffectC
  0000B3C0: 6F 75 6E 74 05 14 03 00 22 00 00 00 04 00 12 64  ount...."......d
  0000B3D0: 77 54 6F 74 61 6C 53 63 72 61 74 63 68 53 69 7A  wTotalScratchSiz
  0000B3E0: 65 F3 F2 F1 05 14 03 00 CF 13 00 00 08 00 0B 61  e..............a
  0000B3F0: 45 66 66 65 63 74 4D 61 70 73 F2 F1 2A 00 05 10  EffectMaps..*...
  0000B400: 03 00 00 00 D0 13 00 00 00 00 00 00 00 00 00 00  ................
  0000B410: 28 00 12 5F 44 53 45 46 46 45 43 54 49 4D 41 47  (.._DSEFFECTIMAG
  0000B420: 45 44 45 53 43 F3 F2 F1 3E 00 03 12 05 14 03 00  EDESC...>.......
  0000B430: 22 00 00 00 00 00 12 64 77 49 33 44 4C 32 52 65  "......dwI3DL2Re
  0000B440: 76 65 72 62 49 6E 64 65 78 F3 F2 F1 05 14 03 00  verbIndex.......
  0000B450: 22 00 00 00 04 00 10 64 77 43 72 6F 73 73 74 61  "......dwCrossta
  0000B460: 6C 6B 49 6E 64 65 78 F1 26 00 05 10 02 00 00 00  lkIndex.&.......
  0000B470: D2 13 00 00 00 00 00 00 00 00 00 00 08 00 11 5F  ..............._
  0000B480: 44 53 45 46 46 45 43 54 49 4D 41 47 45 4C 4F 43  DSEFFECTIMAGELOC
  0000B490: 0A 00 02 10 96 13 00 00 0A 04 00 00 1A 00 09 10  ................
  0000B4A0: 03 00 00 00 96 13 00 00 D4 13 00 00 0B 00 00 00  ................
  0000B4B0: 09 10 00 00 00 00 00 00 DA 00 03 12 05 14 03 00  ................
  0000B4C0: 22 00 00 00 00 00 06 64 77 53 69 7A 65 F3 F2 F1  "......dwSize...
  0000B4D0: 05 14 03 00 B0 12 00 00 04 00 09 76 50 6F 73 69  ...........vPosi
  0000B4E0: 74 69 6F 6E 05 14 03 00 B0 12 00 00 10 00 09 76  tion...........v
  0000B4F0: 56 65 6C 6F 63 69 74 79 05 14 03 00 B0 12 00 00  Velocity........
  0000B500: 1C 00 0C 76 4F 72 69 65 6E 74 46 72 6F 6E 74 F1  ...vOrientFront.
  0000B510: 05 14 03 00 B0 12 00 00 28 00 0A 76 4F 72 69 65  ........(..vOrie
  0000B520: 6E 74 54 6F 70 F3 F2 F1 05 14 03 00 40 00 00 00  ntTop.......@...
  0000B530: 34 00 10 66 6C 44 69 73 74 61 6E 63 65 46 61 63  4..flDistanceFac
  0000B540: 74 6F 72 F1 05 14 03 00 40 00 00 00 38 00 0F 66  tor.....@...8..f
  0000B550: 6C 52 6F 6C 6C 6F 66 66 46 61 63 74 6F 72 F2 F1  lRolloffFactor..
  0000B560: 05 14 03 00 40 00 00 00 3C 00 0F 66 6C 44 6F 70  ....@...<..flDop
  0000B570: 70 6C 65 72 46 61 63 74 6F 72 F2 F1 0B 14 03 01  plerFactor......
  0000B580: D5 13 00 00 0D 5F 44 53 33 44 4C 49 53 54 45 4E  ....._DS3DLISTEN
  0000B590: 45 52 F2 F1 22 00 05 10 09 00 02 00 D6 13 00 00  ER.."...........
  0000B5A0: 00 00 00 00 00 00 00 00 40 00 0D 5F 44 53 33 44  ........@.._DS3D
  0000B5B0: 4C 49 53 54 45 4E 45 52 22 01 03 12 05 14 03 00  LISTENER".......
  0000B5C0: 12 00 00 00 00 00 05 6C 52 6F 6F 6D 05 14 03 00  .......lRoom....
  0000B5D0: 12 00 00 00 04 00 07 6C 52 6F 6F 6D 48 46 F2 F1  .......lRoomHF..
  0000B5E0: 05 14 03 00 40 00 00 00 08 00 13 66 6C 52 6F 6F  ....@......flRoo
  0000B5F0: 6D 52 6F 6C 6C 6F 66 66 46 61 63 74 6F 72 F2 F1  mRolloffFactor..
  0000B600: 05 14 03 00 40 00 00 00 0C 00 0B 66 6C 44 65 63  ....@......flDec
  0000B610: 61 79 54 69 6D 65 F2 F1 05 14 03 00 40 00 00 00  ayTime......@...
  0000B620: 10 00 0E 66 6C 44 65 63 61 79 48 46 52 61 74 69  ...flDecayHFRati
  0000B630: 6F F3 F2 F1 05 14 03 00 12 00 00 00 14 00 0C 6C  o..............l
  0000B640: 52 65 66 6C 65 63 74 69 6F 6E 73 F1 05 14 03 00  Reflections.....
  0000B650: 40 00 00 00 18 00 12 66 6C 52 65 66 6C 65 63 74  @......flReflect
  0000B660: 69 6F 6E 73 44 65 6C 61 79 F3 F2 F1 05 14 03 00  ionsDelay.......
  0000B670: 12 00 00 00 1C 00 07 6C 52 65 76 65 72 62 F2 F1  .......lReverb..
  0000B680: 05 14 03 00 40 00 00 00 20 00 0D 66 6C 52 65 76  ....@... ..flRev
  0000B690: 65 72 62 44 65 6C 61 79 05 14 03 00 40 00 00 00  erbDelay....@...
  0000B6A0: 24 00 0B 66 6C 44 69 66 66 75 73 69 6F 6E F2 F1  $..flDiffusion..
  0000B6B0: 05 14 03 00 40 00 00 00 28 00 09 66 6C 44 65 6E  ....@...(..flDen
  0000B6C0: 73 69 74 79 05 14 03 00 40 00 00 00 2C 00 0D 66  sity....@...,..f
  0000B6D0: 6C 48 46 52 65 66 65 72 65 6E 63 65 26 00 05 10  lHFReference&...
  0000B6E0: 0C 00 00 00 D8 13 00 00 00 00 00 00 00 00 00 00  ................
  0000B6F0: 30 00 10 5F 44 53 49 33 44 4C 32 4C 49 53 54 45  0.._DSI3DL2LISTE
  0000B700: 4E 45 52 F1 26 02 03 12 05 14 03 00 22 00 00 00  NER.&......."...
  0000B710: 00 00 15 64 77 41 6E 61 6C 6F 67 4C 65 66 74 54  ...dwAnalogLeftT
  0000B720: 6F 74 61 6C 50 65 61 6B 05 14 03 00 22 00 00 00  otalPeak...."...
  0000B730: 04 00 16 64 77 41 6E 61 6C 6F 67 52 69 67 68 74  ...dwAnalogRight
  0000B740: 54 6F 74 61 6C 50 65 61 6B F3 F2 F1 05 14 03 00  TotalPeak.......
  0000B750: 22 00 00 00 08 00 14 64 77 41 6E 61 6C 6F 67 4C  "......dwAnalogL
  0000B760: 65 66 74 54 6F 74 61 6C 52 4D 53 F1 05 14 03 00  eftTotalRMS.....
  0000B770: 22 00 00 00 0C 00 15 64 77 41 6E 61 6C 6F 67 52  "......dwAnalogR
  0000B780: 69 67 68 74 54 6F 74 61 6C 52 4D 53 05 14 03 00  ightTotalRMS....
  0000B790: 22 00 00 00 10 00 16 64 77 44 69 67 69 74 61 6C  "......dwDigital
  0000B7A0: 46 72 6F 6E 74 4C 65 66 74 50 65 61 6B F3 F2 F1  FrontLeftPeak...
  0000B7B0: 05 14 03 00 22 00 00 00 14 00 18 64 77 44 69 67  ...."......dwDig
  0000B7C0: 69 74 61 6C 46 72 6F 6E 74 43 65 6E 74 65 72 50  italFrontCenterP
  0000B7D0: 65 61 6B F1 05 14 03 00 22 00 00 00 18 00 17 64  eak....."......d
  0000B7E0: 77 44 69 67 69 74 61 6C 46 72 6F 6E 74 52 69 67  wDigitalFrontRig
  0000B7F0: 68 74 50 65 61 6B F2 F1 05 14 03 00 22 00 00 00  htPeak......"...
  0000B800: 1C 00 15 64 77 44 69 67 69 74 61 6C 42 61 63 6B  ...dwDigitalBack
  0000B810: 4C 65 66 74 50 65 61 6B 05 14 03 00 22 00 00 00  LeftPeak...."...
  0000B820: 20 00 16 64 77 44 69 67 69 74 61 6C 42 61 63 6B   ..dwDigitalBack
  0000B830: 52 69 67 68 74 50 65 61 6B F3 F2 F1 05 14 03 00  RightPeak.......
  0000B840: 22 00 00 00 24 00 19 64 77 44 69 67 69 74 61 6C  "...$..dwDigital
  0000B850: 4C 6F 77 46 72 65 71 75 65 6E 63 79 50 65 61 6B  LowFrequencyPeak
  0000B860: 05 14 03 00 22 00 00 00 28 00 15 64 77 44 69 67  ...."...(..dwDig
  0000B870: 69 74 61 6C 46 72 6F 6E 74 4C 65 66 74 52 4D 53  italFrontLeftRMS
  0000B880: 05 14 03 00 22 00 00 00 2C 00 17 64 77 44 69 67  ...."...,..dwDig
  0000B890: 69 74 61 6C 46 72 6F 6E 74 43 65 6E 74 65 72 52  italFrontCenterR
  0000B8A0: 4D 53 F2 F1 05 14 03 00 22 00 00 00 30 00 16 64  MS......"...0..d
  0000B8B0: 77 44 69 67 69 74 61 6C 46 72 6F 6E 74 52 69 67  wDigitalFrontRig
  0000B8C0: 68 74 52 4D 53 F3 F2 F1 05 14 03 00 22 00 00 00  htRMS......."...
  0000B8D0: 34 00 14 64 77 44 69 67 69 74 61 6C 42 61 63 6B  4..dwDigitalBack
  0000B8E0: 4C 65 66 74 52 4D 53 F1 05 14 03 00 22 00 00 00  LeftRMS....."...
  0000B8F0: 38 00 15 64 77 44 69 67 69 74 61 6C 42 61 63 6B  8..dwDigitalBack
  0000B900: 52 69 67 68 74 52 4D 53 05 14 03 00 22 00 00 00  RightRMS...."...
  0000B910: 3C 00 18 64 77 44 69 67 69 74 61 6C 4C 6F 77 46  <..dwDigitalLowF
  0000B920: 72 65 71 75 65 6E 63 79 52 4D 53 F1 26 00 05 10  requencyRMS.&...
  0000B930: 10 00 00 00 DA 13 00 00 00 00 00 00 00 00 00 00  ................
  0000B940: 40 00 0F 5F 44 53 4F 55 54 50 55 54 4C 45 56 45  @.._DSOUTPUTLEVE
  0000B950: 4C 53 F2 F1 0A 00 02 10 73 13 00 00 0A 04 00 00  LS......s.......
  0000B960: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000B970: 07 00 02 00 69 13 00 00 00 00 00 00 1A 00 09 10  ....i...........
  0000B980: 22 00 00 00 73 13 00 00 DC 13 00 00 07 00 00 00  "...s...........
  0000B990: 09 10 00 00 00 00 00 00 0A 00 01 10 C0 13 00 00  ................
  0000B9A0: 01 00 F2 F1 0A 00 02 10 DF 13 00 00 0A 00 00 00  ................
  0000B9B0: 0A 00 01 12 01 00 00 00 E0 13 00 00 1A 00 09 10  ................
  0000B9C0: 12 00 00 00 73 13 00 00 DC 13 00 00 07 00 01 00  ....s...........
  0000B9D0: E1 13 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000B9E0: 73 13 00 00 DC 13 00 00 07 00 01 00 BB 10 00 00  s...............
  0000B9F0: 00 00 00 00 0A 00 01 12 01 00 00 00 12 00 00 00  ................
  0000BA00: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000BA10: 07 00 01 00 E4 13 00 00 00 00 00 00 22 00 05 10  ............"...
  0000BA20: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000BA30: 00 00 0A 5F 44 53 4C 46 4F 44 45 53 43 F3 F2 F1  ..._DSLFODESC...
  0000BA40: 0A 00 01 10 E6 13 00 00 01 00 F2 F1 0A 00 02 10  ................
  0000BA50: E7 13 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  ................
  0000BA60: E8 13 00 00 1A 00 09 10 12 00 00 00 73 13 00 00  ............s...
  0000BA70: DC 13 00 00 07 00 01 00 E9 13 00 00 00 00 00 00  ................
  0000BA80: 26 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  &...............
  0000BA90: 00 00 00 00 00 00 0F 5F 44 53 45 4E 56 45 4C 4F  ......._DSENVELO
  0000BAA0: 50 45 44 45 53 43 F2 F1 0A 00 01 10 EB 13 00 00  PEDESC..........
  0000BAB0: 01 00 F2 F1 0A 00 02 10 EC 13 00 00 0A 00 00 00  ................
  0000BAC0: 0A 00 01 12 01 00 00 00 ED 13 00 00 1A 00 09 10  ................
  0000BAD0: 12 00 00 00 73 13 00 00 DC 13 00 00 07 00 01 00  ....s...........
  0000BAE0: EE 13 00 00 00 00 00 00 22 00 05 10 00 00 80 00  ........".......
  0000BAF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0D 5F  ..............._
  0000BB00: 44 53 46 49 4C 54 45 52 44 45 53 43 0A 00 01 10  DSFILTERDESC....
  0000BB10: F0 13 00 00 01 00 F2 F1 0A 00 02 10 F1 13 00 00  ................
  0000BB20: 0A 00 00 00 0A 00 01 12 01 00 00 00 F2 13 00 00  ................
  0000BB30: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000BB40: 07 00 01 00 F3 13 00 00 00 00 00 00 0A 00 01 12  ................
  0000BB50: 01 00 00 00 74 13 00 00 1A 00 09 10 12 00 00 00  ....t...........
  0000BB60: 73 13 00 00 DC 13 00 00 07 00 01 00 F5 13 00 00  s...............
  0000BB70: 00 00 00 00 0A 00 01 12 01 00 00 00 C4 13 00 00  ................
  0000BB80: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000BB90: 07 00 01 00 F7 13 00 00 00 00 00 00 22 00 05 10  ............"...
  0000BBA0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000BBB0: 00 00 0B 5F 44 53 33 44 42 55 46 46 45 52 F2 F1  ..._DS3DBUFFER..
  0000BBC0: 0A 00 01 10 F9 13 00 00 01 00 F2 F1 0A 00 02 10  ................
  0000BBD0: FA 13 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  0000BBE0: FB 13 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  ...."...........
  0000BBF0: 73 13 00 00 DC 13 00 00 07 00 02 00 FC 13 00 00  s...............
  0000BC00: 00 00 00 00 12 00 01 12 03 00 00 00 22 00 00 00  ............"...
  0000BC10: 22 00 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  "..."...........
  0000BC20: 73 13 00 00 DC 13 00 00 07 00 03 00 FE 13 00 00  s...............
  0000BC30: 00 00 00 00 1A 00 09 10 12 00 00 00 73 13 00 00  ............s...
  0000BC40: DC 13 00 00 07 00 04 00 9F 13 00 00 00 00 00 00  ................
  0000BC50: 0E 00 01 12 02 00 00 00 12 00 00 00 22 00 00 00  ............"...
  0000BC60: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000BC70: 07 00 02 00 01 14 00 00 00 00 00 00 1A 00 09 10  ................
  0000BC80: 12 00 00 00 73 13 00 00 DC 13 00 00 07 00 02 00  ....s...........
  0000BC90: 9B 13 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000BCA0: 73 13 00 00 DC 13 00 00 07 00 02 00 31 10 00 00  s...........1...
  0000BCB0: 00 00 00 00 12 00 01 12 03 00 00 00 99 12 00 00  ................
  0000BCC0: 22 00 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  "..."...........
  0000BCD0: 73 13 00 00 DC 13 00 00 07 00 03 00 05 14 00 00  s...............
  0000BCE0: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  0000BCF0: 00 00 00 00 00 00 00 00 00 00 0E 5F 44 53 49 33  ..........._DSI3
  0000BD00: 44 4C 32 42 55 46 46 45 52 F3 F2 F1 0A 00 01 10  DL2BUFFER.......
  0000BD10: 07 14 00 00 01 00 F2 F1 0A 00 02 10 08 14 00 00  ................
  0000BD20: 0A 00 00 00 0E 00 01 12 02 00 00 00 09 14 00 00  ................
  0000BD30: 22 00 00 00 1A 00 09 10 12 00 00 00 73 13 00 00  "...........s...
  0000BD40: DC 13 00 00 07 00 02 00 0A 14 00 00 00 00 00 00  ................
  0000BD50: 0E 00 01 12 02 00 00 00 13 00 00 00 22 00 00 00  ............"...
  0000BD60: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000BD70: 07 00 02 00 0C 14 00 00 00 00 00 00 1A 00 09 10  ................
  0000BD80: 12 00 00 00 73 13 00 00 DC 13 00 00 07 00 00 00  ....s...........
  0000BD90: 09 10 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000BDA0: 73 13 00 00 DC 13 00 00 07 00 01 00 82 13 00 00  s...............
  0000BDB0: 00 00 00 00 0E 00 01 12 02 00 00 00 22 04 00 00  ............"...
  0000BDC0: 22 04 00 00 1A 00 09 10 12 00 00 00 73 13 00 00  "...........s...
  0000BDD0: DC 13 00 00 07 00 02 00 10 14 00 00 00 00 00 00  ................
  0000BDE0: 0E 00 01 12 02 00 00 00 03 04 00 00 22 00 00 00  ............"...
  0000BDF0: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000BE00: 07 00 02 00 12 14 00 00 00 00 00 00 22 00 01 12  ............"...
  0000BE10: 07 00 00 00 22 00 00 00 22 00 00 00 64 13 00 00  ...."..."...d...
  0000BE20: 22 04 00 00 64 13 00 00 22 04 00 00 22 00 00 00  "...d..."..."...
  0000BE30: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000BE40: 07 00 07 00 14 14 00 00 00 00 00 00 16 00 01 12  ................
  0000BE50: 04 00 00 00 03 04 00 00 22 00 00 00 03 04 00 00  ........".......
  0000BE60: 22 00 00 00 1A 00 09 10 12 00 00 00 73 13 00 00  "...........s...
  0000BE70: DC 13 00 00 07 00 04 00 16 14 00 00 00 00 00 00  ................
  0000BE80: 2A 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  *...............
  0000BE90: 00 00 00 00 00 00 12 5F 44 53 42 50 4F 53 49 54  ......._DSBPOSIT
  0000BEA0: 49 4F 4E 4E 4F 54 49 46 59 F3 F2 F1 0A 00 01 10  IONNOTIFY.......
  0000BEB0: 18 14 00 00 01 00 F2 F1 0A 00 02 10 19 14 00 00  ................
  0000BEC0: 0A 00 00 00 0E 00 01 12 02 00 00 00 22 00 00 00  ............"...
  0000BED0: 1A 14 00 00 1A 00 09 10 12 00 00 00 73 13 00 00  ............s...
  0000BEE0: DC 13 00 00 07 00 02 00 1B 14 00 00 00 00 00 00  ................
  0000BEF0: A2 03 03 12 0B 14 03 00 DD 13 00 00 0E 51 75 65  .............Que
  0000BF00: 72 79 49 6E 74 65 72 66 61 63 65 F1 0B 14 03 00  ryInterface.....
  0000BF10: DE 13 00 00 06 41 64 64 52 65 66 F1 0B 14 03 00  .....AddRef.....
  0000BF20: DE 13 00 00 07 52 65 6C 65 61 73 65 0B 14 03 00  .....Release....
  0000BF30: E2 13 00 00 09 53 65 74 46 6F 72 6D 61 74 F2 F1  .....SetFormat..
  0000BF40: 0B 14 03 00 E3 13 00 00 0C 53 65 74 46 72 65 71  .........SetFreq
  0000BF50: 75 65 6E 63 79 F3 F2 F1 0B 14 03 00 E5 13 00 00  uency...........
  0000BF60: 09 53 65 74 56 6F 6C 75 6D 65 F2 F1 0B 14 03 00  .SetVolume......
  0000BF70: E5 13 00 00 08 53 65 74 50 69 74 63 68 F3 F2 F1  .....SetPitch...
  0000BF80: 0B 14 03 00 EA 13 00 00 06 53 65 74 4C 46 4F F1  .........SetLFO.
  0000BF90: 0B 14 03 00 EF 13 00 00 05 53 65 74 45 47 F2 F1  .........SetEG..
  0000BFA0: 0B 14 03 00 F4 13 00 00 09 53 65 74 46 69 6C 74  .........SetFilt
  0000BFB0: 65 72 F2 F1 0B 14 03 00 E3 13 00 00 0B 53 65 74  er...........Set
  0000BFC0: 48 65 61 64 72 6F 6F 6D 0B 14 03 00 F6 13 00 00  Headroom........
  0000BFD0: 0F 53 65 74 4F 75 74 70 75 74 42 75 66 66 65 72  .SetOutputBuffer
  0000BFE0: 0B 14 03 00 F8 13 00 00 0A 53 65 74 4D 69 78 42  .........SetMixB
  0000BFF0: 69 6E 73 F1 0B 14 03 00 F8 13 00 00 10 53 65 74  ins..........Set
  0000C000: 4D 69 78 42 69 6E 56 6F 6C 75 6D 65 73 F3 F2 F1  MixBinVolumes...
  0000C010: 0B 14 03 00 FD 13 00 00 10 53 65 74 41 6C 6C 50  .........SetAllP
  0000C020: 61 72 61 6D 65 74 65 72 73 F3 F2 F1 0B 14 03 00  arameters.......
  0000C030: FF 13 00 00 0D 53 65 74 43 6F 6E 65 41 6E 67 6C  .....SetConeAngl
  0000C040: 65 73 F2 F1 0B 14 03 00 00 14 00 00 12 53 65 74  es...........Set
  0000C050: 43 6F 6E 65 4F 72 69 65 6E 74 61 74 69 6F 6E F1  ConeOrientation.
  0000C060: 0B 14 03 00 02 14 00 00 14 53 65 74 43 6F 6E 65  .........SetCone
  0000C070: 4F 75 74 73 69 64 65 56 6F 6C 75 6D 65 F3 F2 F1  OutsideVolume...
  0000C080: 0B 14 03 00 03 14 00 00 0E 53 65 74 4D 61 78 44  .........SetMaxD
  0000C090: 69 73 74 61 6E 63 65 F1 0B 14 03 00 03 14 00 00  istance.........
  0000C0A0: 0E 53 65 74 4D 69 6E 44 69 73 74 61 6E 63 65 F1  .SetMinDistance.
  0000C0B0: 0B 14 03 00 04 14 00 00 07 53 65 74 4D 6F 64 65  .........SetMode
  0000C0C0: 0B 14 03 00 00 14 00 00 0B 53 65 74 50 6F 73 69  .........SetPosi
  0000C0D0: 74 69 6F 6E 0B 14 03 00 00 14 00 00 0B 53 65 74  tion.........Set
  0000C0E0: 56 65 6C 6F 63 69 74 79 0B 14 03 00 03 14 00 00  Velocity........
  0000C0F0: 11 53 65 74 44 69 73 74 61 6E 63 65 46 61 63 74  .SetDistanceFact
  0000C100: 6F 72 F2 F1 0B 14 03 00 03 14 00 00 10 53 65 74  or...........Set
  0000C110: 44 6F 70 70 6C 65 72 46 61 63 74 6F 72 F3 F2 F1  DopplerFactor...
  0000C120: 0B 14 03 00 03 14 00 00 10 53 65 74 52 6F 6C 6C  .........SetRoll
  0000C130: 6F 66 66 46 61 63 74 6F 72 F3 F2 F1 0B 14 03 00  offFactor.......
  0000C140: 06 14 00 00 0F 53 65 74 52 6F 6C 6C 6F 66 66 43  .....SetRolloffC
  0000C150: 75 72 76 65 0B 14 03 00 0B 14 00 00 0E 53 65 74  urve.........Set
  0000C160: 49 33 44 4C 32 53 6F 75 72 63 65 F1 0B 14 03 00  I3DL2Source.....
  0000C170: FF 13 00 00 04 50 6C 61 79 F3 F2 F1 0B 14 03 00  .....Play.......
  0000C180: 0D 14 00 00 06 50 6C 61 79 45 78 F1 0B 14 03 00  .....PlayEx.....
  0000C190: 0E 14 00 00 04 53 74 6F 70 F3 F2 F1 0B 14 03 00  .....Stop.......
  0000C1A0: 0D 14 00 00 06 53 74 6F 70 45 78 F1 0B 14 03 00  .....StopEx.....
  0000C1B0: 04 14 00 00 0D 53 65 74 50 6C 61 79 52 65 67 69  .....SetPlayRegi
  0000C1C0: 6F 6E F2 F1 0B 14 03 00 04 14 00 00 0D 53 65 74  on...........Set
  0000C1D0: 4C 6F 6F 70 52 65 67 69 6F 6E F2 F1 0B 14 03 00  LoopRegion......
  0000C1E0: 0F 14 00 00 09 47 65 74 53 74 61 74 75 73 F2 F1  .....GetStatus..
  0000C1F0: 0B 14 03 00 11 14 00 00 12 47 65 74 43 75 72 72  .........GetCurr
  0000C200: 65 6E 74 50 6F 73 69 74 69 6F 6E F1 0B 14 03 00  entPosition.....
  0000C210: E3 13 00 00 12 53 65 74 43 75 72 72 65 6E 74 50  .....SetCurrentP
  0000C220: 6F 73 69 74 69 6F 6E F1 0B 14 03 00 13 14 00 00  osition.........
  0000C230: 0D 53 65 74 42 75 66 66 65 72 44 61 74 61 F2 F1  .SetBufferData..
  0000C240: 0B 14 03 00 15 14 00 00 04 4C 6F 63 6B F3 F2 F1  .........Lock...
  0000C250: 0B 14 03 00 17 14 00 00 06 55 6E 6C 6F 63 6B F1  .........Unlock.
  0000C260: 0B 14 03 00 0E 14 00 00 07 52 65 73 74 6F 72 65  .........Restore
  0000C270: 0B 14 03 00 1C 14 00 00 18 53 65 74 4E 6F 74 69  .........SetNoti
  0000C280: 66 69 63 61 74 69 6F 6E 50 6F 73 69 74 69 6F 6E  ficationPosition
  0000C290: 73 F3 F2 F1 2A 00 05 10 2A 00 00 00 1D 14 00 00  s...*...*.......
  0000C2A0: 00 00 00 00 00 00 00 00 01 00 12 49 44 69 72 65  ...........IDire
  0000C2B0: 63 74 53 6F 75 6E 64 42 75 66 66 65 72 F3 F2 F1  ctSoundBuffer...
  0000C2C0: AE 00 03 12 05 14 03 00 21 00 00 00 00 00 0A 77  ........!......w
  0000C2D0: 46 6F 72 6D 61 74 54 61 67 F3 F2 F1 05 14 03 00  FormatTag.......
  0000C2E0: 21 00 00 00 02 00 09 6E 43 68 61 6E 6E 65 6C 73  !......nChannels
  0000C2F0: 05 14 03 00 22 00 00 00 04 00 0E 6E 53 61 6D 70  ...."......nSamp
  0000C300: 6C 65 73 50 65 72 53 65 63 F3 F2 F1 05 14 03 00  lesPerSec.......
  0000C310: 22 00 00 00 08 00 0F 6E 41 76 67 42 79 74 65 73  "......nAvgBytes
  0000C320: 50 65 72 53 65 63 F2 F1 05 14 03 00 21 00 00 00  PerSec......!...
  0000C330: 0C 00 0B 6E 42 6C 6F 63 6B 41 6C 69 67 6E F2 F1  ...nBlockAlign..
  0000C340: 05 14 03 00 21 00 00 00 0E 00 0E 77 42 69 74 73  ....!......wBits
  0000C350: 50 65 72 53 61 6D 70 6C 65 F3 F2 F1 05 14 03 00  PerSample.......
  0000C360: 21 00 00 00 10 00 06 63 62 53 69 7A 65 F3 F2 F1  !......cbSize...
  0000C370: 22 00 05 10 07 00 00 00 1F 14 00 00 00 00 00 00  "...............
  0000C380: 00 00 00 00 12 00 0D 74 57 41 56 45 46 4F 52 4D  .......tWAVEFORM
  0000C390: 41 54 45 58 96 00 03 12 05 14 03 00 22 00 00 00  ATEX........"...
  0000C3A0: 00 00 05 64 77 4C 46 4F 05 14 03 00 22 00 00 00  ...dwLFO...."...
  0000C3B0: 04 00 07 64 77 44 65 6C 61 79 F2 F1 05 14 03 00  ...dwDelay......
  0000C3C0: 22 00 00 00 08 00 07 64 77 44 65 6C 74 61 F2 F1  "......dwDelta..
  0000C3D0: 05 14 03 00 12 00 00 00 0C 00 10 6C 50 69 74 63  ...........lPitc
  0000C3E0: 68 4D 6F 64 75 6C 61 74 69 6F 6E F1 05 14 03 00  hModulation.....
  0000C3F0: 12 00 00 00 10 00 12 6C 46 69 6C 74 65 72 43 75  .......lFilterCu
  0000C400: 74 4F 66 66 52 61 6E 67 65 F3 F2 F1 05 14 03 00  tOffRange.......
  0000C410: 12 00 00 00 14 00 14 6C 41 6D 70 6C 69 74 75 64  .......lAmplitud
  0000C420: 65 4D 6F 64 75 6C 61 74 69 6F 6E F1 22 00 05 10  eModulation."...
  0000C430: 06 00 00 00 21 14 00 00 00 00 00 00 00 00 00 00  ....!...........
  0000C440: 18 00 0A 5F 44 53 4C 46 4F 44 45 53 43 F3 F2 F1  ..._DSLFODESC...
  0000C450: CE 00 03 12 05 14 03 00 22 00 00 00 00 00 04 64  ........"......d
  0000C460: 77 45 47 F1 05 14 03 00 22 00 00 00 04 00 06 64  wEG....."......d
  0000C470: 77 4D 6F 64 65 F3 F2 F1 05 14 03 00 22 00 00 00  wMode......."...
  0000C480: 08 00 07 64 77 44 65 6C 61 79 F2 F1 05 14 03 00  ...dwDelay......
  0000C490: 22 00 00 00 0C 00 08 64 77 41 74 74 61 63 6B F1  "......dwAttack.
  0000C4A0: 05 14 03 00 22 00 00 00 10 00 06 64 77 48 6F 6C  ...."......dwHol
  0000C4B0: 64 F3 F2 F1 05 14 03 00 22 00 00 00 14 00 07 64  d......."......d
  0000C4C0: 77 44 65 63 61 79 F2 F1 05 14 03 00 22 00 00 00  wDecay......"...
  0000C4D0: 18 00 09 64 77 52 65 6C 65 61 73 65 05 14 03 00  ...dwRelease....
  0000C4E0: 22 00 00 00 1C 00 09 64 77 53 75 73 74 61 69 6E  "......dwSustain
  0000C4F0: 05 14 03 00 12 00 00 00 20 00 0B 6C 50 69 74 63  ........ ..lPitc
  0000C500: 68 53 63 61 6C 65 F2 F1 05 14 03 00 12 00 00 00  hScale..........
  0000C510: 24 00 0D 6C 46 69 6C 74 65 72 43 75 74 4F 66 66  $..lFilterCutOff
  0000C520: 26 00 05 10 0A 00 00 00 23 14 00 00 00 00 00 00  &.......#.......
  0000C530: 00 00 00 00 28 00 0F 5F 44 53 45 4E 56 45 4C 4F  ....(.._DSENVELO
  0000C540: 50 45 44 45 53 43 F2 F1 0E 00 03 10 22 00 00 00  PEDESC......"...
  0000C550: 11 00 00 00 10 00 00 F1 4E 00 03 12 05 14 03 00  ........N.......
  0000C560: 22 00 00 00 00 00 06 64 77 4D 6F 64 65 F3 F2 F1  "......dwMode...
  0000C570: 05 14 03 00 22 00 00 00 04 00 0E 64 77 51 43 6F  ...."......dwQCo
  0000C580: 65 66 66 69 63 69 65 6E 74 F3 F2 F1 05 14 03 00  efficient.......
  0000C590: 25 14 00 00 08 00 0F 61 64 77 43 6F 65 66 66 69  %......adwCoeffi
  0000C5A0: 63 69 65 6E 74 73 F2 F1 22 00 05 10 03 00 00 00  cients..".......
  0000C5B0: 26 14 00 00 00 00 00 00 00 00 00 00 18 00 0D 5F  &.............._
  0000C5C0: 44 53 46 49 4C 54 45 52 44 45 53 43 2A 00 05 10  DSFILTERDESC*...
  0000C5D0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000C5E0: 00 00 13 5F 44 53 4D 49 58 42 49 4E 56 4F 4C 55  ..._DSMIXBINVOLU
  0000C5F0: 4D 45 50 41 49 52 F2 F1 0A 00 01 10 28 14 00 00  MEPAIR......(...
  0000C600: 01 00 F2 F1 0A 00 02 10 29 14 00 00 0A 00 00 00  ........).......
  0000C610: 3A 00 03 12 05 14 03 00 22 00 00 00 00 00 0D 64  :......."......d
  0000C620: 77 4D 69 78 42 69 6E 43 6F 75 6E 74 05 14 03 00  wMixBinCount....
  0000C630: 2A 14 00 00 04 00 13 6C 70 4D 69 78 42 69 6E 56  *......lpMixBinV
  0000C640: 6F 6C 75 6D 65 50 61 69 72 73 F2 F1 22 00 05 10  olumePairs.."...
  0000C650: 02 00 00 00 2B 14 00 00 00 00 00 00 00 00 00 00  ....+...........
  0000C660: 08 00 0A 5F 44 53 4D 49 58 42 49 4E 53 F3 F2 F1  ..._DSMIXBINS...
  0000C670: 0A 00 02 10 F9 13 00 00 0A 04 00 00 1A 00 09 10  ................
  0000C680: 03 00 00 00 F9 13 00 00 2D 14 00 00 0B 00 00 00  ........-.......
  0000C690: 09 10 00 00 00 00 00 00 62 01 03 12 05 14 03 00  ........b.......
  0000C6A0: 22 00 00 00 00 00 06 64 77 53 69 7A 65 F3 F2 F1  "......dwSize...
  0000C6B0: 05 14 03 00 B0 12 00 00 04 00 09 76 50 6F 73 69  ...........vPosi
  0000C6C0: 74 69 6F 6E 05 14 03 00 B0 12 00 00 10 00 09 76  tion...........v
  0000C6D0: 56 65 6C 6F 63 69 74 79 05 14 03 00 22 00 00 00  Velocity...."...
  0000C6E0: 1C 00 11 64 77 49 6E 73 69 64 65 43 6F 6E 65 41  ...dwInsideConeA
  0000C6F0: 6E 67 6C 65 05 14 03 00 22 00 00 00 20 00 12 64  ngle...."... ..d
  0000C700: 77 4F 75 74 73 69 64 65 43 6F 6E 65 41 6E 67 6C  wOutsideConeAngl
  0000C710: 65 F3 F2 F1 05 14 03 00 B0 12 00 00 24 00 10 76  e...........$..v
  0000C720: 43 6F 6E 65 4F 72 69 65 6E 74 61 74 69 6F 6E F1  ConeOrientation.
  0000C730: 05 14 03 00 12 00 00 00 30 00 12 6C 43 6F 6E 65  ........0..lCone
  0000C740: 4F 75 74 73 69 64 65 56 6F 6C 75 6D 65 F3 F2 F1  OutsideVolume...
  0000C750: 05 14 03 00 40 00 00 00 34 00 0D 66 6C 4D 69 6E  ....@...4..flMin
  0000C760: 44 69 73 74 61 6E 63 65 05 14 03 00 40 00 00 00  Distance....@...
  0000C770: 38 00 0D 66 6C 4D 61 78 44 69 73 74 61 6E 63 65  8..flMaxDistance
  0000C780: 05 14 03 00 22 00 00 00 3C 00 06 64 77 4D 6F 64  ...."...<..dwMod
  0000C790: 65 F3 F2 F1 05 14 03 00 40 00 00 00 40 00 10 66  e.......@...@..f
  0000C7A0: 6C 44 69 73 74 61 6E 63 65 46 61 63 74 6F 72 F1  lDistanceFactor.
  0000C7B0: 05 14 03 00 40 00 00 00 44 00 0F 66 6C 52 6F 6C  ....@...D..flRol
  0000C7C0: 6C 6F 66 66 46 61 63 74 6F 72 F2 F1 05 14 03 00  loffFactor......
  0000C7D0: 40 00 00 00 48 00 0F 66 6C 44 6F 70 70 6C 65 72  @...H..flDoppler
  0000C7E0: 46 61 63 74 6F 72 F2 F1 0B 14 03 01 2E 14 00 00  Factor..........
  0000C7F0: 0B 5F 44 53 33 44 42 55 46 46 45 52 22 00 05 10  ._DS3DBUFFER"...
  0000C800: 0E 00 02 00 2F 14 00 00 00 00 00 00 00 00 00 00  ..../...........
  0000C810: 4C 00 0B 5F 44 53 33 44 42 55 46 46 45 52 F2 F1  L.._DS3DBUFFER..
  0000C820: 2A 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  *...............
  0000C830: 00 00 00 00 00 00 13 5F 44 53 49 33 44 4C 32 4F  ......._DSI3DL2O
  0000C840: 42 53 54 52 55 43 54 49 4F 4E F2 F1 26 00 05 10  BSTRUCTION..&...
  0000C850: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000C860: 00 00 11 5F 44 53 49 33 44 4C 32 4F 43 43 4C 55  ..._DSI3DL2OCCLU
  0000C870: 53 49 4F 4E 9A 00 03 12 05 14 03 00 12 00 00 00  SION............
  0000C880: 00 00 07 6C 44 69 72 65 63 74 F2 F1 05 14 03 00  ...lDirect......
  0000C890: 12 00 00 00 04 00 09 6C 44 69 72 65 63 74 48 46  .......lDirectHF
  0000C8A0: 05 14 03 00 12 00 00 00 08 00 05 6C 52 6F 6F 6D  ...........lRoom
  0000C8B0: 05 14 03 00 12 00 00 00 0C 00 07 6C 52 6F 6F 6D  ...........lRoom
  0000C8C0: 48 46 F2 F1 05 14 03 00 40 00 00 00 10 00 13 66  HF......@......f
  0000C8D0: 6C 52 6F 6F 6D 52 6F 6C 6C 6F 66 66 46 61 63 74  lRoomRolloffFact
  0000C8E0: 6F 72 F2 F1 05 14 03 00 31 14 00 00 14 00 0B 4F  or......1......O
  0000C8F0: 62 73 74 72 75 63 74 69 6F 6E F2 F1 05 14 03 00  bstruction......
  0000C900: 32 14 00 00 1C 00 09 4F 63 63 6C 75 73 69 6F 6E  2......Occlusion
  0000C910: 26 00 05 10 07 00 00 00 33 14 00 00 00 00 00 00  &.......3.......
  0000C920: 00 00 00 00 24 00 0E 5F 44 53 49 33 44 4C 32 42  ....$.._DSI3DL2B
  0000C930: 55 46 46 45 52 F3 F2 F1 2E 00 03 12 05 14 03 00  UFFER...........
  0000C940: 22 00 00 00 00 00 08 64 77 4F 66 66 73 65 74 F1  "......dwOffset.
  0000C950: 05 14 03 00 03 04 00 00 04 00 0C 68 45 76 65 6E  ...........hEven
  0000C960: 74 4E 6F 74 69 66 79 F1 2A 00 05 10 02 00 00 00  tNotify.*.......
  0000C970: 35 14 00 00 00 00 00 00 00 00 00 00 08 00 12 5F  5.............._
  0000C980: 44 53 42 50 4F 53 49 54 49 4F 4E 4E 4F 54 49 46  DSBPOSITIONNOTIF
  0000C990: 59 F3 F2 F1 0A 00 02 10 7D 13 00 00 0A 04 00 00  Y.......}.......
  0000C9A0: 22 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  "...............
  0000C9B0: 00 00 00 00 00 00 0C 58 4D 65 64 69 61 4F 62 6A  .......XMediaObj
  0000C9C0: 65 63 74 F1 1A 00 09 10 22 00 00 00 7D 13 00 00  ect....."...}...
  0000C9D0: 37 14 00 00 07 00 00 00 09 10 00 00 00 00 00 00  7...............
  0000C9E0: 22 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  "...............
  0000C9F0: 00 00 00 00 00 00 0B 5F 58 4D 45 44 49 41 49 4E  ......._XMEDIAIN
  0000CA00: 46 4F F2 F1 0A 00 02 10 3A 14 00 00 0A 00 00 00  FO......:.......
  0000CA10: 0A 00 01 12 01 00 00 00 3B 14 00 00 1A 00 09 10  ........;.......
  0000CA20: 12 00 00 00 7D 13 00 00 37 14 00 00 07 00 01 00  ....}...7.......
  0000CA30: 3C 14 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  <...............
  0000CA40: 7D 13 00 00 37 14 00 00 07 00 01 00 82 13 00 00  }...7...........
  0000CA50: 00 00 00 00 22 00 05 10 00 00 80 00 00 00 00 00  ...."...........
  0000CA60: 00 00 00 00 00 00 00 00 00 00 0D 5F 58 4D 45 44  ..........._XMED
  0000CA70: 49 41 50 41 43 4B 45 54 0A 00 01 10 3F 14 00 00  IAPACKET....?...
  0000CA80: 01 00 F2 F1 0A 00 02 10 40 14 00 00 0A 00 00 00  ........@.......
  0000CA90: 0E 00 01 12 02 00 00 00 41 14 00 00 41 14 00 00  ........A...A...
  0000CAA0: 1A 00 09 10 12 00 00 00 7D 13 00 00 37 14 00 00  ........}...7...
  0000CAB0: 07 00 02 00 42 14 00 00 00 00 00 00 1A 00 09 10  ....B...........
  0000CAC0: 12 00 00 00 7D 13 00 00 37 14 00 00 07 00 00 00  ....}...7.......
  0000CAD0: 09 10 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000CAE0: 7D 13 00 00 37 14 00 00 07 00 02 00 69 13 00 00  }...7.......i...
  0000CAF0: 00 00 00 00 1A 00 09 10 12 00 00 00 7D 13 00 00  ............}...
  0000CB00: 37 14 00 00 07 00 01 00 E1 13 00 00 00 00 00 00  7...............
  0000CB10: 1A 00 09 10 12 00 00 00 7D 13 00 00 37 14 00 00  ........}...7...
  0000CB20: 07 00 01 00 BB 10 00 00 00 00 00 00 1A 00 09 10  ................
  0000CB30: 12 00 00 00 7D 13 00 00 37 14 00 00 07 00 01 00  ....}...7.......
  0000CB40: E4 13 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000CB50: 7D 13 00 00 37 14 00 00 07 00 01 00 E9 13 00 00  }...7...........
  0000CB60: 00 00 00 00 1A 00 09 10 12 00 00 00 7D 13 00 00  ............}...
  0000CB70: 37 14 00 00 07 00 01 00 EE 13 00 00 00 00 00 00  7...............
  0000CB80: 1A 00 09 10 12 00 00 00 7D 13 00 00 37 14 00 00  ........}...7...
  0000CB90: 07 00 01 00 F3 13 00 00 00 00 00 00 1A 00 09 10  ................
  0000CBA0: 12 00 00 00 7D 13 00 00 37 14 00 00 07 00 01 00  ....}...7.......
  0000CBB0: F5 13 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000CBC0: 7D 13 00 00 37 14 00 00 07 00 01 00 F7 13 00 00  }...7...........
  0000CBD0: 00 00 00 00 1A 00 09 10 12 00 00 00 7D 13 00 00  ............}...
  0000CBE0: 37 14 00 00 07 00 02 00 FC 13 00 00 00 00 00 00  7...............
  0000CBF0: 1A 00 09 10 12 00 00 00 7D 13 00 00 37 14 00 00  ........}...7...
  0000CC00: 07 00 03 00 FE 13 00 00 00 00 00 00 1A 00 09 10  ................
  0000CC10: 12 00 00 00 7D 13 00 00 37 14 00 00 07 00 04 00  ....}...7.......
  0000CC20: 9F 13 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000CC30: 7D 13 00 00 37 14 00 00 07 00 02 00 01 14 00 00  }...7...........
  0000CC40: 00 00 00 00 1A 00 09 10 12 00 00 00 7D 13 00 00  ............}...
  0000CC50: 37 14 00 00 07 00 02 00 9B 13 00 00 00 00 00 00  7...............
  0000CC60: 1A 00 09 10 12 00 00 00 7D 13 00 00 37 14 00 00  ........}...7...
  0000CC70: 07 00 02 00 31 10 00 00 00 00 00 00 1A 00 09 10  ....1...........
  0000CC80: 12 00 00 00 7D 13 00 00 37 14 00 00 07 00 03 00  ....}...7.......
  0000CC90: 05 14 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000CCA0: 7D 13 00 00 37 14 00 00 07 00 02 00 0A 14 00 00  }...7...........
  0000CCB0: 00 00 00 00 1A 00 09 10 12 00 00 00 7D 13 00 00  ............}...
  0000CCC0: 37 14 00 00 07 00 02 00 0C 14 00 00 00 00 00 00  7...............
  0000CCD0: 0A 00 01 10 7D 13 00 00 01 00 F2 F1 0A 00 02 10  ....}...........
  0000CCE0: 57 14 00 00 2A 00 00 00 0A 00 01 12 01 00 00 00  W...*...........
  0000CCF0: 58 14 00 00 1A 00 09 10 03 00 00 00 7D 13 00 00  X...........}...
  0000CD00: 37 14 00 00 0B 00 01 00 59 14 00 00 00 00 00 00  7.......Y.......
  0000CD10: 1A 00 09 10 03 00 00 00 7D 13 00 00 37 14 00 00  ........}...7...
  0000CD20: 0B 00 00 00 09 10 00 00 00 00 00 00 12 00 06 12  ................
  0000CD30: 03 01 00 00 5A 14 00 00 03 01 00 00 5B 14 00 00  ....Z.......[...
  0000CD40: 2E 03 03 12 00 14 03 00 38 14 00 00 00 00 F2 F1  ........8.......
  0000CD50: 0B 14 17 00 39 14 00 00 06 41 64 64 52 65 66 F1  ....9....AddRef.
  0000CD60: 0B 14 17 00 39 14 00 00 07 52 65 6C 65 61 73 65  ....9....Release
  0000CD70: 0B 14 17 00 3D 14 00 00 07 47 65 74 49 6E 66 6F  ....=....GetInfo
  0000CD80: 0B 14 17 00 3E 14 00 00 09 47 65 74 53 74 61 74  ....>....GetStat
  0000CD90: 75 73 F2 F1 0B 14 17 00 43 14 00 00 07 50 72 6F  us......C....Pro
  0000CDA0: 63 65 73 73 0B 14 17 00 44 14 00 00 0D 44 69 73  cess....D....Dis
  0000CDB0: 63 6F 6E 74 69 6E 75 69 74 79 F2 F1 0B 14 17 00  continuity......
  0000CDC0: 44 14 00 00 05 46 6C 75 73 68 F2 F1 0B 14 03 00  D....Flush......
  0000CDD0: 45 14 00 00 0E 51 75 65 72 79 49 6E 74 65 72 66  E....QueryInterf
  0000CDE0: 61 63 65 F1 0B 14 03 00 46 14 00 00 09 53 65 74  ace.....F....Set
  0000CDF0: 46 6F 72 6D 61 74 F2 F1 0B 14 03 00 47 14 00 00  Format......G...
  0000CE00: 0C 53 65 74 46 72 65 71 75 65 6E 63 79 F3 F2 F1  .SetFrequency...
  0000CE10: 0B 14 03 00 48 14 00 00 09 53 65 74 56 6F 6C 75  ....H....SetVolu
  0000CE20: 6D 65 F2 F1 0B 14 03 00 48 14 00 00 08 53 65 74  me......H....Set
  0000CE30: 50 69 74 63 68 F3 F2 F1 0B 14 03 00 49 14 00 00  Pitch.......I...
  0000CE40: 06 53 65 74 4C 46 4F F1 0B 14 03 00 4A 14 00 00  .SetLFO.....J...
  0000CE50: 05 53 65 74 45 47 F2 F1 0B 14 03 00 4B 14 00 00  .SetEG......K...
  0000CE60: 09 53 65 74 46 69 6C 74 65 72 F2 F1 0B 14 03 00  .SetFilter......
  0000CE70: 47 14 00 00 0B 53 65 74 48 65 61 64 72 6F 6F 6D  G....SetHeadroom
  0000CE80: 0B 14 03 00 4C 14 00 00 0F 53 65 74 4F 75 74 70  ....L....SetOutp
  0000CE90: 75 74 42 75 66 66 65 72 0B 14 03 00 4D 14 00 00  utBuffer....M...
  0000CEA0: 0A 53 65 74 4D 69 78 42 69 6E 73 F1 0B 14 03 00  .SetMixBins.....
  0000CEB0: 4D 14 00 00 10 53 65 74 4D 69 78 42 69 6E 56 6F  M....SetMixBinVo
  0000CEC0: 6C 75 6D 65 73 F3 F2 F1 0B 14 03 00 4E 14 00 00  lumes.......N...
  0000CED0: 10 53 65 74 41 6C 6C 50 61 72 61 6D 65 74 65 72  .SetAllParameter
  0000CEE0: 73 F3 F2 F1 0B 14 03 00 4F 14 00 00 0D 53 65 74  s.......O....Set
  0000CEF0: 43 6F 6E 65 41 6E 67 6C 65 73 F2 F1 0B 14 03 00  ConeAngles......
  0000CF00: 50 14 00 00 12 53 65 74 43 6F 6E 65 4F 72 69 65  P....SetConeOrie
  0000CF10: 6E 74 61 74 69 6F 6E F1 0B 14 03 00 51 14 00 00  ntation.....Q...
  0000CF20: 14 53 65 74 43 6F 6E 65 4F 75 74 73 69 64 65 56  .SetConeOutsideV
  0000CF30: 6F 6C 75 6D 65 F3 F2 F1 0B 14 03 00 52 14 00 00  olume.......R...
  0000CF40: 0E 53 65 74 4D 61 78 44 69 73 74 61 6E 63 65 F1  .SetMaxDistance.
  0000CF50: 0B 14 03 00 52 14 00 00 0E 53 65 74 4D 69 6E 44  ....R....SetMinD
  0000CF60: 69 73 74 61 6E 63 65 F1 0B 14 03 00 53 14 00 00  istance.....S...
  0000CF70: 07 53 65 74 4D 6F 64 65 0B 14 03 00 50 14 00 00  .SetMode....P...
  0000CF80: 0B 53 65 74 50 6F 73 69 74 69 6F 6E 0B 14 03 00  .SetPosition....
  0000CF90: 50 14 00 00 0B 53 65 74 56 65 6C 6F 63 69 74 79  P....SetVelocity
  0000CFA0: 0B 14 03 00 52 14 00 00 11 53 65 74 44 69 73 74  ....R....SetDist
  0000CFB0: 61 6E 63 65 46 61 63 74 6F 72 F2 F1 0B 14 03 00  anceFactor......
  0000CFC0: 52 14 00 00 10 53 65 74 44 6F 70 70 6C 65 72 46  R....SetDopplerF
  0000CFD0: 61 63 74 6F 72 F3 F2 F1 0B 14 03 00 52 14 00 00  actor.......R...
  0000CFE0: 10 53 65 74 52 6F 6C 6C 6F 66 66 46 61 63 74 6F  .SetRolloffFacto
  0000CFF0: 72 F3 F2 F1 0B 14 03 00 54 14 00 00 0F 53 65 74  r.......T....Set
  0000D000: 52 6F 6C 6C 6F 66 66 43 75 72 76 65 0B 14 03 00  RolloffCurve....
  0000D010: 55 14 00 00 0E 53 65 74 49 33 44 4C 32 53 6F 75  U....SetI3DL2Sou
  0000D020: 72 63 65 F1 0B 14 03 00 47 14 00 00 05 50 61 75  rce.....G....Pau
  0000D030: 73 65 F2 F1 0B 14 03 00 56 14 00 00 07 50 61 75  se......V....Pau
  0000D040: 73 65 45 78 0B 14 03 00 56 14 00 00 07 46 6C 75  seEx....V....Flu
  0000D050: 73 68 45 78 07 14 02 00 5C 14 00 00 12 49 44 69  shEx....\....IDi
  0000D060: 72 65 63 74 53 6F 75 6E 64 53 74 72 65 61 6D F1  rectSoundStream.
  0000D070: 0A 00 0A 00 07 00 55 55 55 50 F2 F1 2A 00 05 10  ......UUUP..*...
  0000D080: 27 00 02 00 5D 14 00 00 00 00 00 00 5E 14 00 00  '...].......^...
  0000D090: 04 00 12 49 44 69 72 65 63 74 53 6F 75 6E 64 53  ...IDirectSoundS
  0000D0A0: 74 72 65 61 6D F3 F2 F1 1E 00 04 10 00 00 80 00  tream...........
  0000D0B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 08 53  ...............S
  0000D0C0: 77 69 7A 7A 6C 65 72 F1 0A 00 02 10 60 14 00 00  wizzler.....`...
  0000D0D0: 0A 04 00 00 1A 00 09 10 03 00 00 00 60 14 00 00  ............`...
  0000D0E0: 61 14 00 00 0B 00 03 00 FE 13 00 00 00 00 00 00  a...............
  0000D0F0: 1A 00 09 10 03 00 00 00 60 14 00 00 61 14 00 00  ........`...a...
  0000D100: 0B 00 00 00 09 10 00 00 00 00 00 00 12 00 06 12  ................
  0000D110: 03 00 00 00 62 14 00 00 03 00 00 00 63 14 00 00  ....b.......c...
  0000D120: 1A 00 09 10 22 00 00 00 60 14 00 00 61 14 00 00  ...."...`...a...
  0000D130: 0B 00 01 00 BB 10 00 00 00 00 00 00 1A 00 09 10  ................
  0000D140: 22 00 00 00 60 14 00 00 61 14 00 00 0B 00 03 00  "...`...a.......
  0000D150: FE 13 00 00 00 00 00 00 0A 00 01 12 01 00 00 00  ................
  0000D160: 22 00 00 00 1A 00 09 10 22 00 00 00 60 14 00 00  "......."...`...
  0000D170: 61 14 00 00 0B 00 01 00 67 14 00 00 00 00 00 00  a.......g.......
  0000D180: 1A 00 09 10 22 00 00 00 60 14 00 00 61 14 00 00  ...."...`...a...
  0000D190: 0B 00 01 00 67 14 00 00 00 00 00 00 1A 00 09 10  ....g...........
  0000D1A0: 22 00 00 00 60 14 00 00 61 14 00 00 0B 00 00 00  "...`...a.......
  0000D1B0: 09 10 00 00 00 00 00 00 66 02 03 12 05 14 03 00  ........f.......
  0000D1C0: 22 00 00 00 00 00 07 6D 5F 57 69 64 74 68 F2 F1  "......m_Width..
  0000D1D0: 05 14 03 00 22 00 00 00 04 00 08 6D 5F 48 65 69  ...."......m_Hei
  0000D1E0: 67 68 74 F1 05 14 03 00 22 00 00 00 08 00 07 6D  ght....."......m
  0000D1F0: 5F 44 65 70 74 68 F2 F1 05 14 03 00 22 00 00 00  _Depth......"...
  0000D200: 0C 00 07 6D 5F 4D 61 73 6B 55 F2 F1 05 14 03 00  ...m_MaskU......
  0000D210: 22 00 00 00 10 00 07 6D 5F 4D 61 73 6B 56 F2 F1  "......m_MaskV..
  0000D220: 05 14 03 00 22 00 00 00 14 00 07 6D 5F 4D 61 73  ...."......m_Mas
  0000D230: 6B 57 F2 F1 05 14 03 00 22 00 00 00 18 00 03 6D  kW......"......m
  0000D240: 5F 75 F2 F1 05 14 03 00 22 00 00 00 1C 00 03 6D  _u......"......m
  0000D250: 5F 76 F2 F1 05 14 03 00 22 00 00 00 20 00 03 6D  _v......"... ..m
  0000D260: 5F 77 F2 F1 07 14 02 00 64 14 00 00 08 53 77 69  _w......d....Swi
  0000D270: 7A 7A 6C 65 72 F3 F2 F1 0B 14 03 00 62 14 00 00  zzler.......b...
  0000D280: 04 49 6E 69 74 F3 F2 F1 0B 14 03 00 65 14 00 00  .Init.......e...
  0000D290: 08 53 77 69 7A 7A 6C 65 55 F3 F2 F1 0B 14 03 00  .SwizzleU.......
  0000D2A0: 65 14 00 00 08 53 77 69 7A 7A 6C 65 56 F3 F2 F1  e....SwizzleV...
  0000D2B0: 0B 14 03 00 65 14 00 00 08 53 77 69 7A 7A 6C 65  ....e....Swizzle
  0000D2C0: 57 F3 F2 F1 0B 14 03 00 66 14 00 00 07 53 77 69  W.......f....Swi
  0000D2D0: 7A 7A 6C 65 0B 14 03 00 68 14 00 00 0A 55 6E 73  zzle....h....Uns
  0000D2E0: 77 69 7A 7A 6C 65 55 F1 0B 14 03 00 68 14 00 00  wizzleU.....h...
  0000D2F0: 0A 55 6E 73 77 69 7A 7A 6C 65 56 F1 0B 14 03 00  .UnswizzleV.....
  0000D300: 68 14 00 00 0A 55 6E 73 77 69 7A 7A 6C 65 57 F1  h....UnswizzleW.
  0000D310: 0B 14 03 00 69 14 00 00 04 53 65 74 55 F3 F2 F1  ....i....SetU...
  0000D320: 0B 14 03 00 69 14 00 00 04 53 65 74 56 F3 F2 F1  ....i....SetV...
  0000D330: 0B 14 03 00 69 14 00 00 04 53 65 74 57 F3 F2 F1  ....i....SetW...
  0000D340: 0B 14 03 00 69 14 00 00 04 41 64 64 55 F3 F2 F1  ....i....AddU...
  0000D350: 0B 14 03 00 69 14 00 00 04 41 64 64 56 F3 F2 F1  ....i....AddV...
  0000D360: 0B 14 03 00 69 14 00 00 04 41 64 64 57 F3 F2 F1  ....i....AddW...
  0000D370: 0B 14 03 00 69 14 00 00 04 53 75 62 55 F3 F2 F1  ....i....SubU...
  0000D380: 0B 14 03 00 69 14 00 00 04 53 75 62 56 F3 F2 F1  ....i....SubV...
  0000D390: 0B 14 03 00 69 14 00 00 04 53 75 62 57 F3 F2 F1  ....i....SubW...
  0000D3A0: 0B 14 03 00 6A 14 00 00 04 49 6E 63 55 F3 F2 F1  ....j....IncU...
  0000D3B0: 0B 14 03 00 6A 14 00 00 04 49 6E 63 56 F3 F2 F1  ....j....IncV...
  0000D3C0: 0B 14 03 00 6A 14 00 00 04 49 6E 63 57 F3 F2 F1  ....j....IncW...
  0000D3D0: 0B 14 03 00 6A 14 00 00 04 44 65 63 55 F3 F2 F1  ....j....DecU...
  0000D3E0: 0B 14 03 00 6A 14 00 00 04 44 65 63 56 F3 F2 F1  ....j....DecV...
  0000D3F0: 0B 14 03 00 6A 14 00 00 04 44 65 63 57 F3 F2 F1  ....j....DecW...
  0000D400: 0B 14 03 00 6A 14 00 00 05 47 65 74 32 44 F2 F1  ....j....Get2D..
  0000D410: 0B 14 03 00 6A 14 00 00 05 47 65 74 33 44 F2 F1  ....j....Get3D..
  0000D420: 1E 00 04 10 24 00 02 00 6B 14 00 00 00 00 00 00  ....$...k.......
  0000D430: 00 00 00 00 24 00 08 53 77 69 7A 7A 6C 65 72 F1  ....$..Swizzler.
  0000D440: 1E 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  ................
  0000D450: 00 00 00 00 00 00 08 58 47 42 75 66 66 65 72 F1  .......XGBuffer.
  0000D460: 0A 00 02 10 6D 14 00 00 0A 04 00 00 1A 00 09 10  ....m...........
  0000D470: 22 00 00 00 6D 14 00 00 6E 14 00 00 07 00 00 00  "...m...n.......
  0000D480: 09 10 00 00 00 00 00 00 1A 00 09 10 03 04 00 00  ................
  0000D490: 6D 14 00 00 6E 14 00 00 07 00 00 00 09 10 00 00  m...n...........
  0000D4A0: 00 00 00 00 1A 00 09 10 22 00 00 00 6D 14 00 00  ........"...m...
  0000D4B0: 6E 14 00 00 07 00 00 00 09 10 00 00 00 00 00 00  n...............
  0000D4C0: 8A 00 03 12 05 14 03 00 22 00 00 00 00 00 08 72  ........"......r
  0000D4D0: 65 66 43 6F 75 6E 74 F1 05 14 03 00 03 04 00 00  efCount.........
  0000D4E0: 04 00 05 70 44 61 74 61 05 14 03 00 22 00 00 00  ...pData...."...
  0000D4F0: 08 00 04 73 69 7A 65 F1 0B 14 03 00 6F 14 00 00  ...size.....o...
  0000D500: 06 41 64 64 52 65 66 F1 0B 14 03 00 6F 14 00 00  .AddRef.....o...
  0000D510: 07 52 65 6C 65 61 73 65 0B 14 03 00 70 14 00 00  .Release....p...
  0000D520: 10 47 65 74 42 75 66 66 65 72 50 6F 69 6E 74 65  .GetBufferPointe
  0000D530: 72 F3 F2 F1 0B 14 03 00 71 14 00 00 0D 47 65 74  r.......q....Get
  0000D540: 42 75 66 66 65 72 53 69 7A 65 F2 F1 1E 00 05 10  BufferSize......
  0000D550: 07 00 00 00 72 14 00 00 00 00 00 00 00 00 00 00  ....r...........
  0000D560: 0C 00 08 58 47 42 75 66 66 65 72 F1 0A 00 01 10  ...XGBuffer.....
  0000D570: 70 00 00 00 01 00 F2 F1 0A 00 02 10 74 14 00 00  p...........t...
  0000D580: 0A 00 00 00 0E 00 03 10 20 00 00 00 11 00 00 00  ........ .......
  0000D590: 00 02 00 F1 36 00 05 10 00 00 80 00 00 00 00 00  ....6...........
  0000D5A0: 00 00 00 00 00 00 00 00 00 00 1E 58 47 52 41 50  ...........XGRAP
  0000D5B0: 48 49 43 53 3A 3A 74 61 67 42 49 54 4D 41 50 46  HICS::tagBITMAPF
  0000D5C0: 49 4C 45 48 45 41 44 45 52 F3 F2 F1 6E 00 03 12  ILEHEADER...n...
  0000D5D0: 05 14 03 00 21 00 00 00 00 00 06 62 66 54 79 70  ....!......bfTyp
  0000D5E0: 65 F3 F2 F1 05 14 03 00 22 00 00 00 02 00 06 62  e......."......b
  0000D5F0: 66 53 69 7A 65 F3 F2 F1 05 14 03 00 21 00 00 00  fSize.......!...
  0000D600: 06 00 0B 62 66 52 65 73 65 72 76 65 64 31 F2 F1  ...bfReserved1..
  0000D610: 05 14 03 00 21 00 00 00 08 00 0B 62 66 52 65 73  ....!......bfRes
  0000D620: 65 72 76 65 64 32 F2 F1 05 14 03 00 22 00 00 00  erved2......"...
  0000D630: 0A 00 09 62 66 4F 66 66 42 69 74 73 36 00 05 10  ...bfOffBits6...
  0000D640: 05 00 00 00 78 14 00 00 00 00 00 00 00 00 00 00  ....x...........
  0000D650: 0E 00 1E 58 47 52 41 50 48 49 43 53 3A 3A 74 61  ...XGRAPHICS::ta
  0000D660: 67 42 49 54 4D 41 50 46 49 4C 45 48 45 41 44 45  gBITMAPFILEHEADE
  0000D670: 52 F3 F2 F1 36 00 05 10 00 00 80 00 00 00 00 00  R...6...........
  0000D680: 00 00 00 00 00 00 00 00 00 00 1E 58 47 52 41 50  ...........XGRAP
  0000D690: 48 49 43 53 3A 3A 74 61 67 42 49 54 4D 41 50 49  HICS::tagBITMAPI
  0000D6A0: 4E 46 4F 48 45 41 44 45 52 F3 F2 F1 02 01 03 12  NFOHEADER.......
  0000D6B0: 05 14 03 00 22 00 00 00 00 00 06 62 69 53 69 7A  ...."......biSiz
  0000D6C0: 65 F3 F2 F1 05 14 03 00 12 00 00 00 04 00 07 62  e..............b
  0000D6D0: 69 57 69 64 74 68 F2 F1 05 14 03 00 12 00 00 00  iWidth..........
  0000D6E0: 08 00 08 62 69 48 65 69 67 68 74 F1 05 14 03 00  ...biHeight.....
  0000D6F0: 21 00 00 00 0C 00 08 62 69 50 6C 61 6E 65 73 F1  !......biPlanes.
  0000D700: 05 14 03 00 21 00 00 00 0E 00 0A 62 69 42 69 74  ....!......biBit
  0000D710: 43 6F 75 6E 74 F3 F2 F1 05 14 03 00 22 00 00 00  Count......."...
  0000D720: 10 00 0D 62 69 43 6F 6D 70 72 65 73 73 69 6F 6E  ...biCompression
  0000D730: 05 14 03 00 22 00 00 00 14 00 0B 62 69 53 69 7A  ...."......biSiz
  0000D740: 65 49 6D 61 67 65 F2 F1 05 14 03 00 12 00 00 00  eImage..........
  0000D750: 18 00 0F 62 69 58 50 65 6C 73 50 65 72 4D 65 74  ...biXPelsPerMet
  0000D760: 65 72 F2 F1 05 14 03 00 12 00 00 00 1C 00 0F 62  er.............b
  0000D770: 69 59 50 65 6C 73 50 65 72 4D 65 74 65 72 F2 F1  iYPelsPerMeter..
  0000D780: 05 14 03 00 22 00 00 00 20 00 09 62 69 43 6C 72  ...."... ..biClr
  0000D790: 55 73 65 64 05 14 03 00 22 00 00 00 24 00 0E 62  Used...."...$..b
  0000D7A0: 69 43 6C 72 49 6D 70 6F 72 74 61 6E 74 F3 F2 F1  iClrImportant...
  0000D7B0: 36 00 05 10 0B 00 00 00 7B 14 00 00 00 00 00 00  6.......{.......
  0000D7C0: 00 00 00 00 28 00 1E 58 47 52 41 50 48 49 43 53  ....(..XGRAPHICS
  0000D7D0: 3A 3A 74 61 67 42 49 54 4D 41 50 49 4E 46 4F 48  ::tagBITMAPINFOH
  0000D7E0: 45 41 44 45 52 F3 F2 F1 0E 00 03 10 70 00 00 00  EADER.......p...
  0000D7F0: 11 00 00 00 00 01 00 F1 0E 00 01 12 02 00 00 00  ................
  0000D800: 02 10 00 00 02 10 00 00 0E 00 08 10 74 00 00 00  ............t...
  0000D810: 07 00 02 00 7E 14 00 00 0E 00 08 10 22 00 00 00  ....~......."...
  0000D820: 07 00 00 00 09 10 00 00 0E 00 08 10 75 00 00 00  ............u...
  0000D830: 07 00 00 00 09 10 00 00 0E 00 08 10 03 00 00 00  ................
  0000D840: 07 00 00 00 09 10 00 00 0E 00 08 10 03 00 00 00  ................
  0000D850: 07 00 02 00 B9 10 00 00 0E 00 08 10 03 00 00 00  ................
  0000D860: 07 00 03 00 CA 10 00 00 0E 00 08 10 03 00 00 00  ................
  0000D870: 07 00 02 00 B7 10 00 00 0E 00 08 10 03 00 00 00  ................
  0000D880: 07 00 03 00 CC 10 00 00 0E 00 01 12 02 00 00 00  ................
  0000D890: 69 12 00 00 68 12 00 00 0E 00 08 10 03 00 00 00  i...h...........
  0000D8A0: 07 00 02 00 87 14 00 00 0E 00 01 12 02 00 00 00  ................
  0000D8B0: 62 10 00 00 75 00 00 00 0E 00 08 10 03 00 00 00  b...u...........
  0000D8C0: 07 00 02 00 89 14 00 00 0E 00 01 12 02 00 00 00  ................
  0000D8D0: 67 10 00 00 75 00 00 00 0E 00 08 10 03 00 00 00  g...u...........
  0000D8E0: 07 00 02 00 8B 14 00 00 12 00 01 12 03 00 00 00  ................
  0000D8F0: 6C 10 00 00 EA 11 00 00 75 00 00 00 0E 00 08 10  l.......u.......
  0000D900: 03 00 00 00 07 00 03 00 8D 14 00 00 0A 00 01 12  ................
  0000D910: 01 00 00 00 71 10 00 00 0E 00 08 10 03 00 00 00  ....q...........
  0000D920: 07 00 01 00 8F 14 00 00 1A 00 01 12 05 00 00 00  ................
  0000D930: 76 10 00 00 75 00 00 00 75 00 00 00 F4 11 00 00  v...u...u.......
  0000D940: 22 00 00 00 0E 00 08 10 03 00 00 00 07 00 05 00  "...............
  0000D950: 91 14 00 00 0A 00 01 12 01 00 00 00 76 10 00 00  ............v...
  0000D960: 0E 00 08 10 03 00 00 00 07 00 01 00 93 14 00 00  ................
  0000D970: 0A 00 01 12 01 00 00 00 25 11 00 00 0E 00 08 10  ........%.......
  0000D980: 03 00 00 00 07 00 01 00 95 14 00 00 0A 00 01 12  ................
  0000D990: 01 00 00 00 51 10 00 00 0E 00 08 10 03 00 00 00  ....Q...........
  0000D9A0: 07 00 01 00 97 14 00 00 0A 00 01 12 01 00 00 00  ................
  0000D9B0: D9 11 00 00 0E 00 08 10 03 00 00 00 07 00 01 00  ................
  0000D9C0: 99 14 00 00 0A 00 01 12 01 00 00 00 40 00 00 00  ............@...
  0000D9D0: 0E 00 08 10 40 00 00 00 07 00 01 00 9B 14 00 00  ....@...........
  0000D9E0: 0E 00 01 12 02 00 00 00 51 10 00 00 75 14 00 00  ........Q...u...
  0000D9F0: 0E 00 08 10 12 00 00 00 07 00 02 00 9D 14 00 00  ................
  0000DA00: A2 00 03 12 05 14 03 00 03 04 00 00 00 00 08 70  ...............p
  0000DA10: 76 42 75 66 66 65 72 F1 05 14 03 00 22 00 00 00  vBuffer....."...
  0000DA20: 04 00 09 64 77 4D 61 78 53 69 7A 65 05 14 03 00  ...dwMaxSize....
  0000DA30: 22 04 00 00 08 00 10 70 64 77 43 6F 6D 70 6C 65  "......pdwComple
  0000DA40: 74 65 64 53 69 7A 65 F1 05 14 03 00 22 04 00 00  tedSize....."...
  0000DA50: 0C 00 09 70 64 77 53 74 61 74 75 73 05 14 03 00  ...pdwStatus....
  0000DA60: 03 04 00 00 10 00 10 68 43 6F 6D 70 6C 65 74 69  .......hCompleti
  0000DA70: 6F 6E 45 76 65 6E 74 F1 05 14 03 00 03 04 00 00  onEvent.........
  0000DA80: 10 00 08 70 43 6F 6E 74 65 78 74 F1 05 14 03 00  ...pContext.....
  0000DA90: 13 04 00 00 14 00 0C 70 72 74 54 69 6D 65 73 74  .......prtTimest
  0000DAA0: 61 6D 70 F1 22 00 05 10 07 00 00 00 9F 14 00 00  amp."...........
  0000DAB0: 00 00 00 00 00 00 00 00 18 00 0D 5F 58 4D 45 44  ..........._XMED
  0000DAC0: 49 41 50 41 43 4B 45 54 32 00 03 12 05 14 03 00  IAPACKET2.......
  0000DAD0: 03 04 00 00 00 00 10 68 43 6F 6D 70 6C 65 74 69  .......hCompleti
  0000DAE0: 6F 6E 45 76 65 6E 74 F1 05 14 03 00 03 04 00 00  onEvent.........
  0000DAF0: 00 00 08 70 43 6F 6E 74 65 78 74 F1 26 00 06 10  ...pContext.&...
  0000DB00: 02 00 08 00 A1 14 00 00 04 00 18 5F 58 4D 45 44  ..........._XMED
  0000DB10: 49 41 50 41 43 4B 45 54 3A 3A 5F 5F 75 6E 6E 61  IAPACKET::__unna
  0000DB20: 6D 65 64 F1 0A 00 01 10 75 00 00 00 01 00 F2 F1  med.....u.......
  0000DB30: 0E 00 03 10 A3 14 00 00 11 00 00 00 08 00 00 F1  ................
  0000DB40: 0E 00 03 10 A4 14 00 00 11 00 00 00 58 00 00 F1  ............X...
  0000DB50: 0A 00 02 10 EC 13 00 00 0A 00 00 00 D2 00 03 12  ................
  0000DB60: 05 14 03 00 03 04 00 00 00 00 0E 6C 70 76 43 6F  ...........lpvCo
  0000DB70: 64 65 53 65 67 6D 65 6E 74 F3 F2 F1 05 14 03 00  deSegment.......
  0000DB80: 22 00 00 00 04 00 0A 64 77 43 6F 64 65 53 69 7A  "......dwCodeSiz
  0000DB90: 65 F3 F2 F1 05 14 03 00 03 04 00 00 08 00 0F 6C  e..............l
  0000DBA0: 70 76 53 74 61 74 65 53 65 67 6D 65 6E 74 F2 F1  pvStateSegment..
  0000DBB0: 05 14 03 00 22 00 00 00 0C 00 0B 64 77 53 74 61  ...."......dwSta
  0000DBC0: 74 65 53 69 7A 65 F2 F1 05 14 03 00 03 04 00 00  teSize..........
  0000DBD0: 10 00 11 6C 70 76 59 4D 65 6D 6F 72 79 53 65 67  ...lpvYMemorySeg
  0000DBE0: 6D 65 6E 74 05 14 03 00 22 00 00 00 14 00 0D 64  ment...."......d
  0000DBF0: 77 59 4D 65 6D 6F 72 79 53 69 7A 65 05 14 03 00  wYMemorySize....
  0000DC00: 03 04 00 00 18 00 11 6C 70 76 53 63 72 61 74 63  .......lpvScratc
  0000DC10: 68 53 65 67 6D 65 6E 74 05 14 03 00 22 00 00 00  hSegment...."...
  0000DC20: 1C 00 0D 64 77 53 63 72 61 74 63 68 53 69 7A 65  ...dwScratchSize
  0000DC30: 22 00 05 10 08 00 00 00 A7 14 00 00 00 00 00 00  "...............
  0000DC40: 00 00 00 00 20 00 0C 5F 44 53 45 46 46 45 43 54  .... .._DSEFFECT
  0000DC50: 4D 41 50 F1 0A 00 02 10 89 13 00 00 0A 00 00 00  MAP.............
  0000DC60: 0A 00 02 10 DF 13 00 00 0A 00 00 00 0A 00 02 10  ................
  0000DC70: C0 13 00 00 0A 00 00 00 36 01 03 12 03 04 03 00  ........6.......
  0000DC80: 00 00 21 50 53 5F 49 4E 50 55 54 4D 41 50 50 49  ..!PS_INPUTMAPPI
  0000DC90: 4E 47 5F 55 4E 53 49 47 4E 45 44 5F 49 44 45 4E  NG_UNSIGNED_IDEN
  0000DCA0: 54 49 54 59 03 04 03 00 20 00 1F 50 53 5F 49 4E  TITY.... ..PS_IN
  0000DCB0: 50 55 54 4D 41 50 50 49 4E 47 5F 55 4E 53 49 47  PUTMAPPING_UNSIG
  0000DCC0: 4E 45 44 5F 49 4E 56 45 52 54 F2 F1 03 04 03 00  NED_INVERT......
  0000DCD0: 40 00 1D 50 53 5F 49 4E 50 55 54 4D 41 50 50 49  @..PS_INPUTMAPPI
  0000DCE0: 4E 47 5F 45 58 50 41 4E 44 5F 4E 4F 52 4D 41 4C  NG_EXPAND_NORMAL
  0000DCF0: 03 04 03 00 60 00 1D 50 53 5F 49 4E 50 55 54 4D  ....`..PS_INPUTM
  0000DD00: 41 50 50 49 4E 47 5F 45 58 50 41 4E 44 5F 4E 45  APPING_EXPAND_NE
  0000DD10: 47 41 54 45 03 04 03 00 80 00 1F 50 53 5F 49 4E  GATE.......PS_IN
  0000DD20: 50 55 54 4D 41 50 50 49 4E 47 5F 48 41 4C 46 42  PUTMAPPING_HALFB
  0000DD30: 49 41 53 5F 4E 4F 52 4D 41 4C F2 F1 03 04 03 00  IAS_NORMAL......
  0000DD40: A0 00 1F 50 53 5F 49 4E 50 55 54 4D 41 50 50 49  ...PS_INPUTMAPPI
  0000DD50: 4E 47 5F 48 41 4C 46 42 49 41 53 5F 4E 45 47 41  NG_HALFBIAS_NEGA
  0000DD60: 54 45 F2 F1 03 04 03 00 C0 00 1F 50 53 5F 49 4E  TE.........PS_IN
  0000DD70: 50 55 54 4D 41 50 50 49 4E 47 5F 53 49 47 4E 45  PUTMAPPING_SIGNE
  0000DD80: 44 5F 49 44 45 4E 54 49 54 59 F2 F1 03 04 03 00  D_IDENTITY......
  0000DD90: E0 00 1D 50 53 5F 49 4E 50 55 54 4D 41 50 50 49  ...PS_INPUTMAPPI
  0000DDA0: 4E 47 5F 53 49 47 4E 45 44 5F 4E 45 47 41 54 45  NG_SIGNED_NEGATE
  0000DDB0: 1E 00 07 10 08 00 00 00 74 00 00 00 AC 14 00 00  ........t.......
  0000DDC0: 0F 50 53 5F 49 4E 50 55 54 4D 41 50 50 49 4E 47  .PS_INPUTMAPPING
  0000DDD0: 32 00 03 12 00 14 03 00 F3 11 00 00 00 00 F2 F1  2...............
  0000DDE0: 05 14 03 00 22 00 00 00 0C 00 06 46 6F 72 6D 61  ...."......Forma
  0000DDF0: 74 F3 F2 F1 05 14 03 00 22 00 00 00 10 00 04 53  t......."......S
  0000DE00: 69 7A 65 F1 26 00 05 10 03 00 00 00 AE 14 00 00  ize.&...........
  0000DE10: 00 00 00 00 00 00 00 00 14 00 11 44 33 44 50 69  ...........D3DPi
  0000DE20: 78 65 6C 43 6F 6E 74 61 69 6E 65 72 2A 00 03 12  xelContainer*...
  0000DE30: 05 14 03 00 22 00 00 00 00 00 08 64 77 4D 69 78  ...."......dwMix
  0000DE40: 42 69 6E F1 05 14 03 00 12 00 00 00 04 00 07 6C  Bin............l
  0000DE50: 56 6F 6C 75 6D 65 F2 F1 2A 00 05 10 02 00 00 00  Volume..*.......
  0000DE60: B0 14 00 00 00 00 00 00 00 00 00 00 08 00 13 5F  ..............._
  0000DE70: 44 53 4D 49 58 42 49 4E 56 4F 4C 55 4D 45 50 41  DSMIXBINVOLUMEPA
  0000DE80: 49 52 F2 F1 0A 00 02 10 71 13 00 00 0A 00 00 00  IR......q.......
  0000DE90: 0A 00 02 10 97 13 00 00 0A 00 00 00 0E 00 03 10  ................
  0000DEA0: 22 00 00 00 11 00 00 00 80 00 00 F1 0E 00 03 10  "...............
  0000DEB0: B4 14 00 00 11 00 00 00 00 02 00 F1 0A 00 02 10  ................
  0000DEC0: 40 14 00 00 0A 00 00 00 2A 00 03 12 05 14 03 00  @.......*.......
  0000DED0: 12 00 00 00 00 00 08 6C 48 46 4C 65 76 65 6C F1  .......lHFLevel.
  0000DEE0: 05 14 03 00 40 00 00 00 04 00 09 66 6C 4C 46 52  ....@......flLFR
  0000DEF0: 61 74 69 6F 2A 00 05 10 02 00 00 00 B7 14 00 00  atio*...........
  0000DF00: 00 00 00 00 00 00 00 00 08 00 13 5F 44 53 49 33  ..........._DSI3
  0000DF10: 44 4C 32 4F 42 53 54 52 55 43 54 49 4F 4E F2 F1  DL2OBSTRUCTION..
  0000DF20: 0A 00 02 10 08 14 00 00 0A 00 00 00 1E 03 03 12  ................
  0000DF30: 03 04 03 00 01 00 0E 44 33 44 54 4F 50 5F 44 49  .......D3DTOP_DI
  0000DF40: 53 41 42 4C 45 F3 F2 F1 03 04 03 00 02 00 11 44  SABLE..........D
  0000DF50: 33 44 54 4F 50 5F 53 45 4C 45 43 54 41 52 47 31  3DTOP_SELECTARG1
  0000DF60: 03 04 03 00 03 00 11 44 33 44 54 4F 50 5F 53 45  .......D3DTOP_SE
  0000DF70: 4C 45 43 54 41 52 47 32 03 04 03 00 04 00 0F 44  LECTARG2.......D
  0000DF80: 33 44 54 4F 50 5F 4D 4F 44 55 4C 41 54 45 F2 F1  3DTOP_MODULATE..
  0000DF90: 03 04 03 00 05 00 11 44 33 44 54 4F 50 5F 4D 4F  .......D3DTOP_MO
  0000DFA0: 44 55 4C 41 54 45 32 58 03 04 03 00 06 00 11 44  DULATE2X.......D
  0000DFB0: 33 44 54 4F 50 5F 4D 4F 44 55 4C 41 54 45 34 58  3DTOP_MODULATE4X
  0000DFC0: 03 04 03 00 07 00 0A 44 33 44 54 4F 50 5F 41 44  .......D3DTOP_AD
  0000DFD0: 44 F3 F2 F1 03 04 03 00 08 00 10 44 33 44 54 4F  D..........D3DTO
  0000DFE0: 50 5F 41 44 44 53 49 47 4E 45 44 F1 03 04 03 00  P_ADDSIGNED.....
  0000DFF0: 09 00 12 44 33 44 54 4F 50 5F 41 44 44 53 49 47  ...D3DTOP_ADDSIG
  0000E000: 4E 45 44 32 58 F3 F2 F1 03 04 03 00 0A 00 0F 44  NED2X..........D
  0000E010: 33 44 54 4F 50 5F 53 55 42 54 52 41 43 54 F2 F1  3DTOP_SUBTRACT..
  0000E020: 03 04 03 00 0B 00 10 44 33 44 54 4F 50 5F 41 44  .......D3DTOP_AD
  0000E030: 44 53 4D 4F 4F 54 48 F1 03 04 03 00 0C 00 18 44  DSMOOTH........D
  0000E040: 33 44 54 4F 50 5F 42 4C 45 4E 44 44 49 46 46 55  3DTOP_BLENDDIFFU
  0000E050: 53 45 41 4C 50 48 41 F1 03 04 03 00 0E 00 18 44  SEALPHA........D
  0000E060: 33 44 54 4F 50 5F 42 4C 45 4E 44 54 45 58 54 55  3DTOP_BLENDTEXTU
  0000E070: 52 45 41 4C 50 48 41 F1 03 04 03 00 0F 00 17 44  REALPHA........D
  0000E080: 33 44 54 4F 50 5F 42 4C 45 4E 44 46 41 43 54 4F  3DTOP_BLENDFACTO
  0000E090: 52 41 4C 50 48 41 F2 F1 03 04 03 00 10 00 1A 44  RALPHA.........D
  0000E0A0: 33 44 54 4F 50 5F 42 4C 45 4E 44 54 45 58 54 55  3DTOP_BLENDTEXTU
  0000E0B0: 52 45 41 4C 50 48 41 50 4D F3 F2 F1 03 04 03 00  REALPHAPM.......
  0000E0C0: 0D 00 18 44 33 44 54 4F 50 5F 42 4C 45 4E 44 43  ...D3DTOP_BLENDC
  0000E0D0: 55 52 52 45 4E 54 41 4C 50 48 41 F1 03 04 03 00  URRENTALPHA.....
  0000E0E0: 11 00 12 44 33 44 54 4F 50 5F 50 52 45 4D 4F 44  ...D3DTOP_PREMOD
  0000E0F0: 55 4C 41 54 45 F3 F2 F1 03 04 03 00 12 00 1D 44  ULATE..........D
  0000E100: 33 44 54 4F 50 5F 4D 4F 44 55 4C 41 54 45 41 4C  3DTOP_MODULATEAL
  0000E110: 50 48 41 5F 41 44 44 43 4F 4C 4F 52 03 04 03 00  PHA_ADDCOLOR....
  0000E120: 13 00 1D 44 33 44 54 4F 50 5F 4D 4F 44 55 4C 41  ...D3DTOP_MODULA
  0000E130: 54 45 43 4F 4C 4F 52 5F 41 44 44 41 4C 50 48 41  TECOLOR_ADDALPHA
  0000E140: 03 04 03 00 14 00 20 44 33 44 54 4F 50 5F 4D 4F  ...... D3DTOP_MO
  0000E150: 44 55 4C 41 54 45 49 4E 56 41 4C 50 48 41 5F 41  DULATEINVALPHA_A
  0000E160: 44 44 43 4F 4C 4F 52 F1 03 04 03 00 15 00 20 44  DDCOLOR....... D
  0000E170: 33 44 54 4F 50 5F 4D 4F 44 55 4C 41 54 45 49 4E  3DTOP_MODULATEIN
  0000E180: 56 43 4F 4C 4F 52 5F 41 44 44 41 4C 50 48 41 F1  VCOLOR_ADDALPHA.
  0000E190: 03 04 03 00 16 00 12 44 33 44 54 4F 50 5F 44 4F  .......D3DTOP_DO
  0000E1A0: 54 50 52 4F 44 55 43 54 33 F3 F2 F1 03 04 03 00  TPRODUCT3.......
  0000E1B0: 17 00 12 44 33 44 54 4F 50 5F 4D 55 4C 54 49 50  ...D3DTOP_MULTIP
  0000E1C0: 4C 59 41 44 44 F3 F2 F1 03 04 03 00 18 00 0B 44  LYADD..........D
  0000E1D0: 33 44 54 4F 50 5F 4C 45 52 50 F2 F1 03 04 03 00  3DTOP_LERP......
  0000E1E0: 19 00 11 44 33 44 54 4F 50 5F 42 55 4D 50 45 4E  ...D3DTOP_BUMPEN
  0000E1F0: 56 4D 41 50 03 04 03 00 1A 00 1A 44 33 44 54 4F  VMAP.......D3DTO
  0000E200: 50 5F 42 55 4D 50 45 4E 56 4D 41 50 4C 55 4D 49  P_BUMPENVMAPLUMI
  0000E210: 4E 41 4E 43 45 F3 F2 F1 03 04 03 00 1B 00 0A 44  NANCE..........D
  0000E220: 33 44 54 4F 50 5F 4D 41 58 F3 F2 F1 03 04 03 00  3DTOP_MAX.......
  0000E230: 04 80 FF FF FF 7F 12 44 33 44 54 4F 50 5F 46 4F  .......D3DTOP_FO
  0000E240: 52 43 45 5F 44 57 4F 52 44 F3 F2 F1 1E 00 07 10  RCE_DWORD.......
  0000E250: 1C 00 00 00 74 00 00 00 BA 14 00 00 0D 5F 44 33  ....t........_D3
  0000E260: 44 54 45 58 54 55 52 45 4F 50 F2 F1 86 00 03 12  DTEXTUREOP......
  0000E270: 05 14 03 00 22 00 00 00 00 00 04 53 77 61 70 F1  ...."......Swap.
  0000E280: 05 14 03 00 22 00 00 00 04 00 0A 53 77 61 70 56  ...."......SwapV
  0000E290: 42 6C 61 6E 6B F3 F2 F1 05 14 03 00 22 00 00 00  Blank......."...
  0000E2A0: 08 00 0D 4D 69 73 73 65 64 56 42 6C 61 6E 6B 73  ...MissedVBlanks
  0000E2B0: 05 14 03 00 22 00 00 00 0C 00 13 54 69 6D 65 55  ...."......TimeU
  0000E2C0: 6E 74 69 6C 53 77 61 70 56 42 6C 61 6E 6B F2 F1  ntilSwapVBlank..
  0000E2D0: 05 14 03 00 22 00 00 00 10 00 16 54 69 6D 65 42  ...."......TimeB
  0000E2E0: 65 74 77 65 65 6E 53 77 61 70 56 42 6C 61 6E 6B  etweenSwapVBlank
  0000E2F0: 73 F3 F2 F1 22 00 05 10 05 00 00 00 BC 14 00 00  s..."...........
  0000E300: 00 00 00 00 00 00 00 00 14 00 0C 5F 44 33 44 53  ..........._D3DS
  0000E310: 57 41 50 44 41 54 41 F1 0A 00 02 10 7F 11 00 00  WAPDATA.........
  0000E320: 0A 00 00 00 2A 00 03 12 05 14 03 00 12 00 00 00  ....*...........
  0000E330: 00 00 08 6C 48 46 4C 65 76 65 6C F1 05 14 03 00  ...lHFLevel.....
  0000E340: 40 00 00 00 04 00 09 66 6C 4C 46 52 61 74 69 6F  @......flLFRatio
  0000E350: 26 00 05 10 02 00 00 00 BF 14 00 00 00 00 00 00  &...............
  0000E360: 00 00 00 00 08 00 11 5F 44 53 49 33 44 4C 32 4F  ......._DSI3DL2O
  0000E370: 43 43 4C 55 53 49 4F 4E 0A 00 02 10 3A 14 00 00  CCLUSION....:...
  0000E380: 0A 00 00 00 62 00 03 12 05 14 03 00 22 00 00 00  ....b......."...
  0000E390: 00 00 07 64 77 46 6C 61 67 73 F2 F1 05 14 03 00  ...dwFlags......
  0000E3A0: 22 00 00 00 04 00 0B 64 77 49 6E 70 75 74 53 69  "......dwInputSi
  0000E3B0: 7A 65 F2 F1 05 14 03 00 22 00 00 00 08 00 0C 64  ze......"......d
  0000E3C0: 77 4F 75 74 70 75 74 53 69 7A 65 F1 05 14 03 00  wOutputSize.....
  0000E3D0: 22 00 00 00 0C 00 0E 64 77 4D 61 78 4C 6F 6F 6B  "......dwMaxLook
  0000E3E0: 61 68 65 61 64 F3 F2 F1 22 00 05 10 04 00 00 00  ahead...".......
  0000E3F0: C2 14 00 00 00 00 00 00 00 00 00 00 10 00 0B 5F  ..............._
  0000E400: 58 4D 45 44 49 41 49 4E 46 4F F2 F1 0A 00 02 10  XMEDIAINFO......
  0000E410: F1 13 00 00 0A 00 00 00 0A 00 02 10 AC 11 00 00  ................
  0000E420: 0A 00 00 00 0A 00 02 10 6C 13 00 00 0A 00 00 00  ........l.......
  0000E430: 0E 00 03 10 DA 10 00 00 11 00 00 00 8C 00 00 F1  ................
  0000E440: 0A 00 02 10 86 11 00 00 0A 00 00 00 36 00 03 12  ............6...
  0000E450: 05 14 03 00 22 00 00 00 00 00 06 56 42 6C 61 6E  ...."......VBlan
  0000E460: 6B F3 F2 F1 05 14 03 00 22 00 00 00 04 00 04 53  k......."......S
  0000E470: 77 61 70 F1 05 14 03 00 22 00 00 00 08 00 05 46  wap....."......F
  0000E480: 6C 61 67 73 26 00 05 10 03 00 00 00 C9 14 00 00  lags&...........
  0000E490: 00 00 00 00 00 00 00 00 0C 00 0E 5F 44 33 44 56  ..........._D3DV
  0000E4A0: 42 4C 41 4E 4B 44 41 54 41 F3 F2 F1 0E 00 03 10  BLANKDATA.......
  0000E4B0: 21 00 00 00 11 00 00 00 10 00 00 F1 0A 00 0A 00  !...............
  0000E4C0: 07 00 55 55 55 50 F2 F1 0A 00 02 10 CC 14 00 00  ..UUUP..........
  0000E4D0: 0A 00 00 00 0A 00 02 10 38 14 00 00 0A 04 00 00  ........8.......
  0000E4E0: 1A 00 09 10 22 00 00 00 38 14 00 00 CE 14 00 00  ...."...8.......
  0000E4F0: 07 00 00 00 09 10 00 00 00 00 00 00 1A 00 09 10  ................
  0000E500: 12 00 00 00 38 14 00 00 CE 14 00 00 07 00 01 00  ....8...........
  0000E510: 3C 14 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  <...............
  0000E520: 38 14 00 00 CE 14 00 00 07 00 01 00 82 13 00 00  8...............
  0000E530: 00 00 00 00 1A 00 09 10 12 00 00 00 38 14 00 00  ............8...
  0000E540: CE 14 00 00 07 00 02 00 42 14 00 00 00 00 00 00  ........B.......
  0000E550: 1A 00 09 10 12 00 00 00 38 14 00 00 CE 14 00 00  ........8.......
  0000E560: 07 00 00 00 09 10 00 00 00 00 00 00 0A 00 01 10  ................
  0000E570: 38 14 00 00 01 00 F2 F1 0A 00 02 10 D4 14 00 00  8...............
  0000E580: 2A 00 00 00 0A 00 01 12 01 00 00 00 D5 14 00 00  *...............
  0000E590: 1A 00 09 10 03 00 00 00 38 14 00 00 CE 14 00 00  ........8.......
  0000E5A0: 0B 00 01 00 D6 14 00 00 00 00 00 00 1A 00 09 10  ................
  0000E5B0: 03 00 00 00 38 14 00 00 CE 14 00 00 0B 00 00 00  ....8...........
  0000E5C0: 09 10 00 00 00 00 00 00 12 00 06 12 03 01 00 00  ................
  0000E5D0: D7 14 00 00 03 01 00 00 D8 14 00 00 BA 00 03 12  ................
  0000E5E0: 09 14 00 00 CD 14 00 00 0B 14 1B 00 CF 14 00 00  ................
  0000E5F0: 00 00 00 00 06 41 64 64 52 65 66 F1 0B 14 1B 00  .....AddRef.....
  0000E600: CF 14 00 00 04 00 00 00 07 52 65 6C 65 61 73 65  .........Release
  0000E610: 0B 14 1B 00 D0 14 00 00 08 00 00 00 07 47 65 74  .............Get
  0000E620: 49 6E 66 6F 0B 14 1B 00 D1 14 00 00 0C 00 00 00  Info............
  0000E630: 09 47 65 74 53 74 61 74 75 73 F2 F1 0B 14 1B 00  .GetStatus......
  0000E640: D2 14 00 00 10 00 00 00 07 50 72 6F 63 65 73 73  .........Process
  0000E650: 0B 14 1B 00 D3 14 00 00 14 00 00 00 0D 44 69 73  .............Dis
  0000E660: 63 6F 6E 74 69 6E 75 69 74 79 F2 F1 0B 14 1B 00  continuity......
  0000E670: D3 14 00 00 18 00 00 00 05 46 6C 75 73 68 F2 F1  .........Flush..
  0000E680: 07 14 02 00 D9 14 00 00 0C 58 4D 65 64 69 61 4F  .........XMediaO
  0000E690: 62 6A 65 63 74 F3 F2 F1 0A 00 0A 00 07 00 55 55  bject.........UU
  0000E6A0: 55 50 F2 F1 22 00 05 10 0A 00 02 00 DA 14 00 00  UP.."...........
  0000E6B0: 00 00 00 00 DB 14 00 00 04 00 0C 58 4D 65 64 69  ...........XMedi
  0000E6C0: 61 4F 62 6A 65 63 74 F1 2A 00 03 12 05 14 03 00  aObject.*.......
  0000E6D0: 22 00 00 00 00 00 07 4C 6F 77 50 61 72 74 F2 F1  "......LowPart..
  0000E6E0: 05 14 03 00 12 00 00 00 04 00 08 48 69 67 68 50  ...........HighP
  0000E6F0: 61 72 74 F1 2E 00 05 10 02 00 08 00 DD 14 00 00  art.............
  0000E700: 00 00 00 00 00 00 00 00 08 00 19 5F 4C 41 52 47  ..........._LARG
  0000E710: 45 5F 49 4E 54 45 47 45 52 3A 3A 5F 5F 75 6E 6E  E_INTEGER::__unn
  0000E720: 61 6D 65 64 4A 00 03 12 05 14 03 00 22 00 00 00  amedJ......."...
  0000E730: 00 00 07 4C 6F 77 50 61 72 74 F2 F1 05 14 03 00  ...LowPart......
  0000E740: 12 00 00 00 04 00 08 48 69 67 68 50 61 72 74 F1  .......HighPart.
  0000E750: 05 14 03 00 DE 14 00 00 00 00 01 75 05 14 03 00  ...........u....
  0000E760: 13 00 00 00 00 00 08 51 75 61 64 50 61 72 74 F1  .......QuadPart.
  0000E770: 1E 00 06 10 04 00 00 00 DF 14 00 00 08 00 0E 5F  ..............._
  0000E780: 4C 41 52 47 45 5F 49 4E 54 45 47 45 52 F3 F2 F1  LARGE_INTEGER...
  0000E790: 0A 00 02 10 7B 13 00 00 0A 00 00 00 0A 00 02 10  ....{...........
  0000E7A0: 19 14 00 00 0A 00 00 00 0E 00 03 10 DA 10 00 00  ................
  0000E7B0: 11 00 00 00 10 00 00 F1 0A 00 02 10 C3 13 00 00  ................
  0000E7C0: 0A 00 00 00 0E 01 03 12 05 14 03 00 40 00 00 00  ............@...
  0000E7D0: 00 00 03 5F 31 31 F2 F1 05 14 03 00 40 00 00 00  ..._11......@...
  0000E7E0: 04 00 03 5F 31 32 F2 F1 05 14 03 00 40 00 00 00  ..._12......@...
  0000E7F0: 08 00 03 5F 31 33 F2 F1 05 14 03 00 40 00 00 00  ..._13......@...
  0000E800: 0C 00 03 5F 31 34 F2 F1 05 14 03 00 40 00 00 00  ..._14......@...
  0000E810: 10 00 03 5F 32 31 F2 F1 05 14 03 00 40 00 00 00  ..._21......@...
  0000E820: 14 00 03 5F 32 32 F2 F1 05 14 03 00 40 00 00 00  ..._22......@...
  0000E830: 18 00 03 5F 32 33 F2 F1 05 14 03 00 40 00 00 00  ..._23......@...
  0000E840: 1C 00 03 5F 32 34 F2 F1 05 14 03 00 40 00 00 00  ..._24......@...
  0000E850: 20 00 03 5F 33 31 F2 F1 05 14 03 00 40 00 00 00   .._31......@...
  0000E860: 24 00 03 5F 33 32 F2 F1 05 14 03 00 40 00 00 00  $.._32......@...
  0000E870: 28 00 03 5F 33 33 F2 F1 05 14 03 00 40 00 00 00  (.._33......@...
  0000E880: 2C 00 03 5F 33 34 F2 F1 05 14 03 00 40 00 00 00  ,.._34......@...
  0000E890: 30 00 03 5F 34 31 F2 F1 05 14 03 00 40 00 00 00  0.._41......@...
  0000E8A0: 34 00 03 5F 34 32 F2 F1 05 14 03 00 40 00 00 00  4.._42......@...
  0000E8B0: 38 00 03 5F 34 33 F2 F1 05 14 03 00 40 00 00 00  8.._43......@...
  0000E8C0: 3C 00 03 5F 34 34 F2 F1 05 14 03 00 1D 12 00 00  <.._44..........
  0000E8D0: 00 00 01 6D 22 00 06 10 11 00 08 00 E5 14 00 00  ...m"...........
  0000E8E0: 40 00 15 5F 44 33 44 4D 41 54 52 49 58 3A 3A 5F  @.._D3DMATRIX::_
  0000E8F0: 5F 75 6E 6E 61 6D 65 64 02 01 03 12 05 14 03 00  _unnamed........
  0000E900: 40 00 00 00 00 00 03 5F 31 31 F2 F1 05 14 03 00  @......_11......
  0000E910: 40 00 00 00 04 00 03 5F 31 32 F2 F1 05 14 03 00  @......_12......
  0000E920: 40 00 00 00 08 00 03 5F 31 33 F2 F1 05 14 03 00  @......_13......
  0000E930: 40 00 00 00 0C 00 03 5F 31 34 F2 F1 05 14 03 00  @......_14......
  0000E940: 40 00 00 00 10 00 03 5F 32 31 F2 F1 05 14 03 00  @......_21......
  0000E950: 40 00 00 00 14 00 03 5F 32 32 F2 F1 05 14 03 00  @......_22......
  0000E960: 40 00 00 00 18 00 03 5F 32 33 F2 F1 05 14 03 00  @......_23......
  0000E970: 40 00 00 00 1C 00 03 5F 32 34 F2 F1 05 14 03 00  @......_24......
  0000E980: 40 00 00 00 20 00 03 5F 33 31 F2 F1 05 14 03 00  @... .._31......
  0000E990: 40 00 00 00 24 00 03 5F 33 32 F2 F1 05 14 03 00  @...$.._32......
  0000E9A0: 40 00 00 00 28 00 03 5F 33 33 F2 F1 05 14 03 00  @...(.._33......
  0000E9B0: 40 00 00 00 2C 00 03 5F 33 34 F2 F1 05 14 03 00  @...,.._34......
  0000E9C0: 40 00 00 00 30 00 03 5F 34 31 F2 F1 05 14 03 00  @...0.._41......
  0000E9D0: 40 00 00 00 34 00 03 5F 34 32 F2 F1 05 14 03 00  @...4.._42......
  0000E9E0: 40 00 00 00 38 00 03 5F 34 33 F2 F1 05 14 03 00  @...8.._43......
  0000E9F0: 40 00 00 00 3C 00 03 5F 34 34 F2 F1 36 00 05 10  @...<.._44..6...
  0000EA00: 10 00 08 00 E7 14 00 00 00 00 00 00 00 00 00 00  ................
  0000EA10: 40 00 20 5F 44 33 44 4D 41 54 52 49 58 3A 3A 5F  @. _D3DMATRIX::_
  0000EA20: 5F 75 6E 6E 61 6D 65 64 3A 3A 5F 5F 75 6E 6E 61  _unnamed::__unna
  0000EA30: 6D 65 64 F1 6E 00 03 12 05 14 03 00 22 00 00 00  med.n......."...
  0000EA40: 00 00 0B 53 74 72 65 61 6D 49 6E 64 65 78 F2 F1  ...StreamIndex..
  0000EA50: 05 14 03 00 22 00 00 00 04 00 06 4F 66 66 73 65  ...."......Offse
  0000EA60: 74 F3 F2 F1 05 14 03 00 22 00 00 00 08 00 06 46  t......."......F
  0000EA70: 6F 72 6D 61 74 F3 F2 F1 05 14 03 00 20 00 00 00  ormat....... ...
  0000EA80: 0C 00 08 54 65 73 73 54 79 70 65 F1 05 14 03 00  ...TessType.....
  0000EA90: 20 00 00 00 0D 00 0A 54 65 73 73 53 6F 75 72 63   ......TessSourc
  0000EAA0: 65 F3 F2 F1 2A 00 05 10 05 00 00 00 E9 14 00 00  e...*...........
  0000EAB0: 00 00 00 00 00 00 00 00 10 00 15 5F 44 33 44 56  ..........._D3DV
  0000EAC0: 45 52 54 45 58 53 48 41 44 45 52 49 4E 50 55 54  ERTEXSHADERINPUT
  0000EAD0: 2A 00 03 12 05 14 03 00 22 00 00 00 00 00 07 4C  *......."......L
  0000EAE0: 6F 77 50 61 72 74 F2 F1 05 14 03 00 12 00 00 00  owPart..........
  0000EAF0: 04 00 08 48 69 67 68 50 61 72 74 F1 2E 00 05 10  ...HighPart.....
  0000EB00: 02 00 08 00 EB 14 00 00 00 00 00 00 00 00 00 00  ................
  0000EB10: 08 00 19 5F 4C 41 52 47 45 5F 49 4E 54 45 47 45  ..._LARGE_INTEGE
  0000EB20: 52 3A 3A 5F 5F 75 6E 6E 61 6D 65 64 0A 00 02 10  R::__unnamed....
  0000EB30: 8F 11 00 00 0A 00 00 00 0A 00 02 10 A2 13 00 00  ................
  0000EB40: 0A 00 00 00 0A 00 02 10 76 13 00 00 0A 00 00 00  ........v.......
  0000EB50: 0E 00 03 10 DA 10 00 00 11 00 00 00 48 01 00 F1  ............H...
  0000EB60: 0A 00 02 10 73 13 00 00 0A 00 00 00 0A 00 02 10  ....s...........
  0000EB70: 29 14 00 00 0A 00 00 00 0E 00 03 10 DA 10 00 00  )...............
  0000EB80: 11 00 00 00 58 00 00 F1 0E 00 03 10 22 00 00 00  ....X......."...
  0000EB90: 11 00 00 00 48 02 00 F1 0A 00 02 10 E7 13 00 00  ....H...........
  0000EBA0: 0A 00 00 00 0A 00 02 10 7D 13 00 00 0A 00 00 00  ........}.......
  0000EBB0: 1A 00 03 12 03 04 03 00 14 00 11 4D 41 58 5F 46  ...........MAX_F
  0000EBC0: 56 46 5F 44 45 43 4C 5F 53 49 5A 45 22 00 07 10  VF_DECL_SIZE"...
  0000EBD0: 01 00 00 00 74 00 00 00 F7 14 00 00 12 5F 4D 41  ....t........_MA
  0000EBE0: 58 5F 46 56 46 5F 44 45 43 4C 5F 53 49 5A 45 F1  X_FVF_DECL_SIZE.
  0000EBF0: 9A 01 03 12 03 04 03 00 00 00 0F 44 33 44 53 42  ...........D3DSB
  0000EC00: 44 5F 54 45 58 54 55 52 45 53 F2 F1 03 04 03 00  D_TEXTURES......
  0000EC10: 04 00 12 44 33 44 53 42 44 5F 50 49 58 45 4C 53  ...D3DSBD_PIXELS
  0000EC20: 48 41 44 45 52 F3 F2 F1 03 04 03 00 05 00 13 44  HADER..........D
  0000EC30: 33 44 53 42 44 5F 56 45 52 54 45 58 53 48 41 44  3DSBD_VERTEXSHAD
  0000EC40: 45 52 F2 F1 03 04 03 00 06 00 0E 44 33 44 53 42  ER.........D3DSB
  0000EC50: 44 5F 49 4E 44 49 43 45 53 F3 F2 F1 03 04 03 00  D_INDICES.......
  0000EC60: 07 00 0E 44 33 44 53 42 44 5F 53 54 52 45 41 4D  ...D3DSBD_STREAM
  0000EC70: 53 F3 F2 F1 03 04 03 00 17 00 1B 44 33 44 53 42  S..........D3DSB
  0000EC80: 44 5F 50 49 58 45 4C 53 48 41 44 45 52 43 4F 4E  D_PIXELSHADERCON
  0000EC90: 53 54 41 4E 54 53 F2 F1 03 04 03 00 27 00 1C 44  STANTS......'..D
  0000ECA0: 33 44 53 42 44 5F 56 45 52 54 45 58 53 48 41 44  3DSBD_VERTEXSHAD
  0000ECB0: 45 52 43 4F 4E 53 54 41 4E 54 53 F1 03 04 03 00  ERCONSTANTS.....
  0000ECC0: E7 00 13 44 33 44 53 42 44 5F 52 45 4E 44 45 52  ...D3DSBD_RENDER
  0000ECD0: 53 54 41 54 45 53 F2 F1 03 04 03 00 79 01 14 44  STATES......y..D
  0000ECE0: 33 44 53 42 44 5F 54 45 58 54 55 52 45 53 54 41  3DSBD_TEXTURESTA
  0000ECF0: 54 45 53 F1 03 04 03 00 F9 01 11 44 33 44 53 42  TES........D3DSB
  0000ED00: 44 5F 54 52 41 4E 53 46 4F 52 4D 53 03 04 03 00  D_TRANSFORMS....
  0000ED10: 03 02 0F 44 33 44 53 42 44 5F 56 49 45 57 50 4F  ...D3DSBD_VIEWPO
  0000ED20: 52 54 F2 F1 03 04 03 00 04 02 0F 44 33 44 53 42  RT.........D3DSB
  0000ED30: 44 5F 4D 41 54 45 52 49 41 4C F2 F1 03 04 03 00  D_MATERIAL......
  0000ED40: 05 02 13 44 33 44 53 42 44 5F 42 41 43 4B 4D 41  ...D3DSBD_BACKMA
  0000ED50: 54 45 52 49 41 4C F2 F1 03 04 03 00 06 02 0A 44  TERIAL.........D
  0000ED60: 33 44 53 42 44 5F 4D 41 58 F3 F2 F1 03 04 03 00  3DSBD_MAX.......
  0000ED70: 04 80 FF FF FF 7F 12 44 33 44 53 42 44 5F 46 4F  .......D3DSBD_FO
  0000ED80: 52 43 45 5F 44 57 4F 52 44 F3 F2 F1 2A 00 07 10  RCE_DWORD...*...
  0000ED90: 0F 00 00 00 74 00 00 00 F9 14 00 00 18 5F 44 33  ....t........_D3
  0000EDA0: 44 53 54 41 54 45 42 4C 4F 43 4B 44 49 52 54 59  DSTATEBLOCKDIRTY
  0000EDB0: 49 4E 44 45 58 F3 F2 F1 0A 00 02 10 FA 13 00 00  INDEX...........
  0000EDC0: 0A 00 00 00 0A 00 02 10 8B 13 00 00 0A 00 00 00  ................
  0000EDD0: 0A 00 02 10 C8 13 00 00 0A 00 00 00 EE 01 03 12  ................
  0000EDE0: 03 04 03 00 00 00 10 50 53 5F 52 45 47 49 53 54  .......PS_REGIST
  0000EDF0: 45 52 5F 5A 45 52 4F F1 03 04 03 00 00 00 13 50  ER_ZERO........P
  0000EE00: 53 5F 52 45 47 49 53 54 45 52 5F 44 49 53 43 41  S_REGISTER_DISCA
  0000EE10: 52 44 F2 F1 03 04 03 00 01 00 0E 50 53 5F 52 45  RD.........PS_RE
  0000EE20: 47 49 53 54 45 52 5F 43 30 F3 F2 F1 03 04 03 00  GISTER_C0.......
  0000EE30: 02 00 0E 50 53 5F 52 45 47 49 53 54 45 52 5F 43  ...PS_REGISTER_C
  0000EE40: 31 F3 F2 F1 03 04 03 00 03 00 0F 50 53 5F 52 45  1..........PS_RE
  0000EE50: 47 49 53 54 45 52 5F 46 4F 47 F2 F1 03 04 03 00  GISTER_FOG......
  0000EE60: 04 00 0E 50 53 5F 52 45 47 49 53 54 45 52 5F 56  ...PS_REGISTER_V
  0000EE70: 30 F3 F2 F1 03 04 03 00 05 00 0E 50 53 5F 52 45  0..........PS_RE
  0000EE80: 47 49 53 54 45 52 5F 56 31 F3 F2 F1 03 04 03 00  GISTER_V1.......
  0000EE90: 08 00 0E 50 53 5F 52 45 47 49 53 54 45 52 5F 54  ...PS_REGISTER_T
  0000EEA0: 30 F3 F2 F1 03 04 03 00 09 00 0E 50 53 5F 52 45  0..........PS_RE
  0000EEB0: 47 49 53 54 45 52 5F 54 31 F3 F2 F1 03 04 03 00  GISTER_T1.......
  0000EEC0: 0A 00 0E 50 53 5F 52 45 47 49 53 54 45 52 5F 54  ...PS_REGISTER_T
  0000EED0: 32 F3 F2 F1 03 04 03 00 0B 00 0E 50 53 5F 52 45  2..........PS_RE
  0000EEE0: 47 49 53 54 45 52 5F 54 33 F3 F2 F1 03 04 03 00  GISTER_T3.......
  0000EEF0: 0C 00 0E 50 53 5F 52 45 47 49 53 54 45 52 5F 52  ...PS_REGISTER_R
  0000EF00: 30 F3 F2 F1 03 04 03 00 0D 00 0E 50 53 5F 52 45  0..........PS_RE
  0000EF10: 47 49 53 54 45 52 5F 52 31 F3 F2 F1 03 04 03 00  GISTER_R1.......
  0000EF20: 0E 00 14 50 53 5F 52 45 47 49 53 54 45 52 5F 56  ...PS_REGISTER_V
  0000EF30: 31 52 30 5F 53 55 4D F1 03 04 03 00 0F 00 13 50  1R0_SUM........P
  0000EF40: 53 5F 52 45 47 49 53 54 45 52 5F 45 46 5F 50 52  S_REGISTER_EF_PR
  0000EF50: 4F 44 F2 F1 03 04 03 00 20 00 0F 50 53 5F 52 45  OD...... ..PS_RE
  0000EF60: 47 49 53 54 45 52 5F 4F 4E 45 F2 F1 03 04 03 00  GISTER_ONE......
  0000EF70: 40 00 18 50 53 5F 52 45 47 49 53 54 45 52 5F 4E  @..PS_REGISTER_N
  0000EF80: 45 47 41 54 49 56 45 5F 4F 4E 45 F1 03 04 03 00  EGATIVE_ONE.....
  0000EF90: A0 00 14 50 53 5F 52 45 47 49 53 54 45 52 5F 4F  ...PS_REGISTER_O
  0000EFA0: 4E 45 5F 48 41 4C 46 F1 03 04 03 00 80 00 1D 50  NE_HALF........P
  0000EFB0: 53 5F 52 45 47 49 53 54 45 52 5F 4E 45 47 41 54  S_REGISTER_NEGAT
  0000EFC0: 49 56 45 5F 4F 4E 45 5F 48 41 4C 46 1A 00 07 10  IVE_ONE_HALF....
  0000EFD0: 13 00 00 00 74 00 00 00 FE 14 00 00 0B 50 53 5F  ....t........PS_
  0000EFE0: 52 45 47 49 53 54 45 52                          REGISTER

SECTION HEADER #1A
.debug$S name
       0 physical address
       0 virtual address
      28 size of raw data
   11C11 file pointer to raw data (00011C11 to 00011C38)
   11C39 file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #1A
  00000000: 26 00 08 10 A5 14 00 00 00 00 00 00 00 00 19 44  &..............D
  00000010: 33 44 50 52 49 4D 49 54 49 56 45 54 4F 56 45 52  3DPRIMITIVETOVER
  00000020: 54 45 58 43 4F 55 4E 54                          TEXCOUNT

RELOCATIONS #1A
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000008  SECREL                     00000000        16  _D3DPRIMITIVETOVERTEXCOUNT
 0000000C  SECTION                        0000        16  _D3DPRIMITIVETOVERTEXCOUNT

SECTION HEADER #1B
.debug$S name
       0 physical address
       0 virtual address
      29 size of raw data
   11C4D file pointer to raw data (00011C4D to 00011C75)
   11C76 file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #1B
  00000000: 27 00 08 10 F0 14 00 00 00 00 00 00 00 00 1A 44  '..............D
  00000010: 33 44 53 49 4D 50 4C 45 52 45 4E 44 45 52 53 54  3DSIMPLERENDERST
  00000020: 41 54 45 45 4E 43 4F 44 45                       ATEENCODE

RELOCATIONS #1B
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000008  SECREL                     00000000        13  _D3DSIMPLERENDERSTATEENCODE
 0000000C  SECTION                        0000        13  _D3DSIMPLERENDERSTATEENCODE

SECTION HEADER #1C
.debug$S name
       0 physical address
       0 virtual address
      25 size of raw data
   11C8A file pointer to raw data (00011C8A to 00011CAE)
   11CAF file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #1C
  00000000: 23 00 08 10 E3 14 00 00 00 00 00 00 00 00 16 44  #..............D
  00000010: 33 44 54 45 58 54 55 52 45 44 49 52 45 43 54 45  3DTEXTUREDIRECTE
  00000020: 4E 43 4F 44 45                                   NCODE

RELOCATIONS #1C
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000008  SECREL                     00000000        10  _D3DTEXTUREDIRECTENCODE
 0000000C  SECTION                        0000        10  _D3DTEXTUREDIRECTENCODE

SECTION HEADER #1D
.debug$S name
       0 physical address
       0 virtual address
      26 size of raw data
   11CC3 file pointer to raw data (00011CC3 to 00011CE8)
   11CE9 file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #1D
  00000000: 24 00 08 10 C7 14 00 00 00 00 00 00 00 00 17 44  $..............D
  00000010: 33 44 44 49 52 54 59 46 52 4F 4D 52 45 4E 44 45  3DDIRTYFROMRENDE
  00000020: 52 53 54 41 54 45                                RSTATE

RELOCATIONS #1D
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000008  SECREL                     00000000         D  _D3DDIRTYFROMRENDERSTATE
 0000000C  SECTION                        0000         D  _D3DDIRTYFROMRENDERSTATE

SECTION HEADER #1E
.debug$S name
       0 physical address
       0 virtual address
      27 size of raw data
   11CFD file pointer to raw data (00011CFD to 00011D23)
   11D24 file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #1E
  00000000: 25 00 08 10 F3 14 00 00 00 00 00 00 00 00 18 44  %..............D
  00000010: 33 44 44 49 52 54 59 46 52 4F 4D 54 45 58 54 55  3DDIRTYFROMTEXTU
  00000020: 52 45 53 54 41 54 45                             RESTATE

RELOCATIONS #1E
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000008  SECREL                     00000000         A  _D3DDIRTYFROMTEXTURESTATE
 0000000C  SECTION                        0000         A  _D3DDIRTYFROMTEXTURESTATE

SECTION HEADER #1F
.debug$S name
       0 physical address
       0 virtual address
      23 size of raw data
   11D38 file pointer to raw data (00011D38 to 00011D5A)
   11D5B file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #1F
  00000000: 21 00 08 10 CB 14 00 00 00 00 00 00 00 00 14 58  !..............X
  00000010: 47 72 61 70 68 69 63 73 42 75 69 6C 64 4E 75 6D  GraphicsBuildNum
  00000020: 62 65 72                                         ber

RELOCATIONS #1F
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000008  SECREL                     00000000        19  _XGraphicsBuildNumber
 0000000C  SECTION                        0000        19  _XGraphicsBuildNumber

COFF SYMBOL TABLE
000 0000001C DEBUG  notype       Filename     | .file
    ..\surfacetofile.cpp
003 001D2426 ABS    notype       Static       | @comp.id
004 00000000 SECT1  notype       Static       | .drectve
    Section length   5E, #relocs    0, #linenums    0, checksum        0
006 00000000 SECT2  notype       Static       | .debug$S
    Section length 1B0E, #relocs    0, #linenums    0, checksum        0
008 00000000 SECT3  notype       Static       | XGRPH_RD
    Section length   58, #relocs    0, #linenums    0, checksum C5165846, selection    2 (pick any)
00A 00000000 SECT3  notype       External     | _D3DDIRTYFROMTEXTURESTATE
00B 00000000 SECT4  notype       Static       | XGRPH_RD
    Section length   8C, #relocs    0, #linenums    0, checksum C94CCAFD, selection    2 (pick any)
00D 00000000 SECT4  notype       External     | _D3DDIRTYFROMRENDERSTATE
00E 00000000 SECT5  notype       Static       | XGRPH_RD
    Section length   10, #relocs    0, #linenums    0, checksum 73FA7410, selection    2 (pick any)
010 00000000 SECT5  notype       External     | _D3DTEXTUREDIRECTENCODE
011 00000000 SECT6  notype       Static       | XGRPH_RD
    Section length  148, #relocs    0, #linenums    0, checksum 2ED435D5, selection    2 (pick any)
013 00000000 SECT6  notype       External     | _D3DSIMPLERENDERSTATEENCODE
014 00000000 SECT7  notype       Static       | XGRPH_RD
    Section length   58, #relocs    0, #linenums    0, checksum 42D5A7C7, selection    2 (pick any)
016 00000000 SECT7  notype       External     | _D3DPRIMITIVETOVERTEXCOUNT
017 00000000 SECT8  notype       Static       | .XBLD$V
    Section length   10, #relocs    0, #linenums    0, checksum 27113BFE, selection    2 (pick any)
019 00000000 SECT8  notype       External     | _XGraphicsBuildNumber
01A 00000000 SECT9  notype       Static       | XGRPH
    Section length    3, #relocs    0, #linenums    1, checksum F647872A, selection    2 (pick any)
01C 00000055 DEBUG  notype       Filename     | .file
    d:\xbox\public\sdk\inc\d3d8.h
01F 00000000 SECT9  notype ()    Static       | _D3DSurface_UnlockRect@4
    tag index 00000021 size 00000003 lines 000022FF next function 00000000
021 00000000 SECT9  notype       BeginFunction | .bf
    line# 0a76 end 00000000
023 00000001 SECT9  notype       .bf or.ef    | .lf
024 00000003 SECT9  notype       EndFunction  | .ef
    line# 0a76
026 00000000 SECTA  notype       Static       | .debug$S
    Section length   53, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x9)
028 00000000 SECTB  notype       Static       | .debug$F
    Section length   10, #relocs    1, #linenums    0, checksum        0, selection    5 (pick associative Section 0x9)
02A 00000000 SECTC  notype       Static       | XGRPH
    Section length   12, #relocs    1, #linenums    1, checksum 807D9212, selection    2 (pick any)
02C 00000000 SECTC  notype ()    External     | ?GetDesc@D3DSurface@@QAGJPAU_D3DSURFACE_DESC@@@Z (public: long __stdcall D3DSurface::GetDesc(struct _D3DSURFACE_DESC *))
    tag index 0000002F size 00000012 lines 000023A2 next function 00000000
02E 00000000 UNDEF  notype ()    External     | _D3DSurface_GetDesc@8
02F 00000000 SECTC  notype       BeginFunction | .bf
    line# 0a8b end 00000000
031 00000001 SECTC  notype       .bf or.ef    | .lf
032 00000012 SECTC  notype       EndFunction  | .ef
    line# 0a8b
034 00000000 SECTD  notype       Static       | .debug$S
    Section length   62, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0xC)
036 00000000 SECTE  notype       Static       | .debug$F
    Section length   10, #relocs    1, #linenums    0, checksum        0, selection    5 (pick associative Section 0xC)
038 00000000 SECTF  notype       Static       | XGRPH
    Section length   1A, #relocs    1, #linenums    1, checksum 98F76C4F, selection    2 (pick any)
03A 00000000 SECTF  notype ()    External     | ?LockRect@D3DSurface@@QAGJPAU_D3DLOCKED_RECT@@PBUtagRECT@@K@Z (public: long __stdcall D3DSurface::LockRect(struct _D3DLOCKED_RECT *,struct tagRECT const *,unsigned long))
    tag index 0000003D size 0000001A lines 0000245C next function 00000000
03C 00000000 UNDEF  notype ()    External     | _D3DSurface_LockRect@16
03D 00000000 SECTF  notype       BeginFunction | .bf
    line# 0a8c end 00000000
03F 00000001 SECTF  notype       .bf or.ef    | .lf
040 0000001A SECTF  notype       EndFunction  | .ef
    line# 0a8c
042 00000000 SECT10 notype       Static       | .debug$S
    Section length   8D, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0xF)
044 00000000 SECT11 notype       Static       | .debug$F
    Section length   10, #relocs    1, #linenums    0, checksum        0, selection    5 (pick associative Section 0xF)
046 00000000 SECT12 notype       Static       | XGRPH
    Section length    5, #relocs    0, #linenums    1, checksum 668BAB7A, selection    2 (pick any)
048 00000000 SECT12 notype ()    External     | ?UnlockRect@D3DSurface@@QAGJXZ (public: long __stdcall D3DSurface::UnlockRect(void))
    tag index 0000004A size 00000005 lines 00002522 next function 00000000
04A 00000000 SECT12 notype       BeginFunction | .bf
    line# 0a8d end 00000000
04C 00000001 SECT12 notype       .bf or.ef    | .lf
04D 00000005 SECT12 notype       EndFunction  | .ef
    line# 0a8d
04F 00000000 SECT13 notype       Static       | .debug$S
    Section length   53, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x12)
051 00000000 SECT14 notype       Static       | .debug$F
    Section length   10, #relocs    1, #linenums    0, checksum        0, selection    5 (pick associative Section 0x12)
053 00000000 SECT15 notype       Static       | XGRPH
    Section length  2C5, #relocs    F, #linenums   3B, checksum  A0078EE, selection    1 (pick no duplicates)
055 00000000 DEBUG  notype       Filename     | .file
    d:\xbox\private\windows\directx\dxg\xgraphics\misc\surfacetofile.cpp
05A 00000000 SECT15 notype ()    External     | _XGWriteSurfaceToFile@8
    tag index 00000066 size 000002C5 lines 00002904 next function 00000000
05C 00000000 UNDEF  notype ()    External     | ??3@YAXPAX@Z (void __cdecl operator delete(void *))
05D 00000000 UNDEF  notype ()    External     | _CloseHandle@4
05E 00000000 UNDEF  notype ()    External     | ??2@YAPAXI@Z (void * __cdecl operator new(unsigned int))
05F 00000000 UNDEF  notype ()    External     | _WriteFile@20
060 00000000 UNDEF  notype ()    External     | _sprintf
061 00000000 SECT16 notype       Static       | XGRPH_RD
    Section length   25, #relocs    0, #linenums    0, checksum BF689332, selection    2 (pick any)
063 00000000 SECT16 notype       External     | ??_C@_0CF@GEEGBDKJ@Unable?5to?5open?5file?5?$CI?$CFs?$CJ?3?5?5error@ (`string')
064 00000000 UNDEF  notype ()    External     | _GetLastError@0
065 00000000 UNDEF  notype ()    External     | _CreateFileA@28
066 00000000 SECT15 notype       BeginFunction | .bf
    line# 0046 end 00000000
068 0000003B SECT15 notype       .bf or.ef    | .lf
069 000002C5 SECT15 notype       EndFunction  | .ef
    line# 00f9
06B 00000000 SECT17 notype       Static       | .debug$S
    Section length  170, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x15)
06D 00000000 SECT18 notype       Static       | .debug$F
    Section length   10, #relocs    1, #linenums    0, checksum        0, selection    5 (pick associative Section 0x15)
06F 00000000 SECT19 notype       Static       | .debug$T
    Section length EFE8, #relocs    0, #linenums    0, checksum        0
071 00000000 SECT1A notype       Static       | .debug$S
    Section length   28, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x7)
073 00000000 SECT1B notype       Static       | .debug$S
    Section length   29, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x6)
075 00000000 SECT1C notype       Static       | .debug$S
    Section length   25, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x5)
077 00000000 SECT1D notype       Static       | .debug$S
    Section length   26, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x4)
079 00000000 SECT1E notype       Static       | .debug$S
    Section length   27, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x3)
07B 00000000 SECT1F notype       Static       | .debug$S
    Section length   23, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x8)

String Table Size = 0x225 bytes

Archive member name at 256D0: /49             obj\i386\header.obj
3CBBA79C time/date Mon Apr 15 21:25:00 2002
         uid
         gid
  100666 mode
   147B1 size
correct header end

FILE HEADER VALUES
             14C machine (x86)
              47 number of sections
        3CBBA79B time date stamp Mon Apr 15 21:24:59 2002
           1302C file pointer to symbol table
             120 number of symbols
               0 size of optional header
               0 characteristics

SECTION HEADER #1
.drectve name
       0 physical address
       0 virtual address
      5E size of raw data
     B2C file pointer to raw data (00000B2C to 00000B89)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
  100A00 flags
         Info
         Remove
         1 byte align

RAW DATA #1
  00000000: 2F 6D 65 72 67 65 3A 58 47 52 50 48 5F 52 44 3D  /merge:XGRPH_RD=
  00000010: 58 47 52 50 48 20 2F 6D 65 72 67 65 3A 58 47 52  XGRPH /merge:XGR
  00000020: 50 48 5F 52 57 3D 58 47 52 50 48 20 2F 73 65 63  PH_RW=XGRPH /sec
  00000030: 74 69 6F 6E 3A 58 47 52 50 48 2C 45 52 57 20 2F  tion:XGRPH,ERW /
  00000040: 69 6E 63 6C 75 64 65 3A 5F 58 47 72 61 70 68 69  include:_XGraphi
  00000050: 63 73 42 75 69 6C 64 4E 75 6D 62 65 72 20        csBuildNumber 

   Linker Directives
   -----------------
   /merge:XGRPH_RD=XGRPH
   /merge:XGRPH_RW=XGRPH
   /section:XGRPH,ERW
   /include:_XGraphicsBuildNumber

SECTION HEADER #2
.debug$S name
       0 physical address
       0 virtual address
    1A53 size of raw data
     B8A file pointer to raw data (00000B8A to 000025DC)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
42100040 flags
         Initialized Data
         Discardable
         1 byte align
         Read Only

RAW DATA #2
  00000000: 02 00 00 00 52 00 09 00 00 00 00 00 4B 44 3A 5C  ....R.......KD:\
  00000010: 78 62 6F 78 5C 70 72 69 76 61 74 65 5C 77 69 6E  xbox\private\win
  00000020: 64 6F 77 73 5C 64 69 72 65 63 74 78 5C 64 78 67  dows\directx\dxg
  00000030: 5C 78 67 72 61 70 68 69 63 73 5C 6D 69 73 63 5C  \xgraphics\misc\
  00000040: 78 62 6F 78 5C 6F 62 6A 5C 69 33 38 36 5C 68 65  xbox\obj\i386\he
  00000050: 61 64 65 72 2E 6F 62 6A 38 00 13 10 01 00 00 00  ader.obj8.......
  00000060: 06 00 0D 00 00 00 26 24 0D 00 00 00 26 24 21 4D  ......&$....&$!M
  00000070: 69 63 72 6F 73 6F 66 74 20 28 52 29 20 4F 70 74  icrosoft (R) Opt
  00000080: 69 6D 69 7A 69 6E 67 20 43 6F 6D 70 69 6C 65 72  imizing Compiler
  00000090: 00 00 28 00 02 10 BE 14 00 00 A0 00 1F 50 53 5F  ..(..........PS_
  000000A0: 49 4E 50 55 54 4D 41 50 50 49 4E 47 5F 48 41 4C  INPUTMAPPING_HAL
  000000B0: 46 42 49 41 53 5F 4E 45 47 41 54 45 12 00 02 10  FBIAS_NEGATE....
  000000C0: 90 10 00 00 0A 00 09 44 33 44 54 53 5F 4D 41 58  .......D3DTS_MAX
  000000D0: 1A 00 02 10 0D 15 00 00 F9 01 11 44 33 44 53 42  ...........D3DSB
  000000E0: 44 5F 54 52 41 4E 53 46 4F 52 4D 53 19 00 02 10  D_TRANSFORMS....
  000000F0: B6 10 00 00 52 00 10 44 33 44 52 53 5F 53 49 4D  ....R..D3DRS_SIM
  00000100: 50 4C 45 5F 4D 41 58 1B 00 02 10 B6 10 00 00 75  PLE_MAX........u
  00000110: 00 12 44 33 44 52 53 5F 44 45 46 45 52 52 45 44  ..D3DRS_DEFERRED
  00000120: 5F 4D 41 58 1D 00 02 10 B6 10 00 00 75 00 14 44  _MAX........u..D
  00000130: 33 44 52 53 5F 50 53 54 45 58 54 55 52 45 4D 4F  3DRS_PSTEXTUREMO
  00000140: 44 45 53 1A 00 02 10 B6 10 00 00 76 00 11 44 33  DES........v..D3
  00000150: 44 52 53 5F 56 45 52 54 45 58 42 4C 45 4E 44 17  DRS_VERTEXBLEND.
  00000160: 00 02 10 B6 10 00 00 77 00 0E 44 33 44 52 53 5F  .......w..D3DRS_
  00000170: 46 4F 47 43 4F 4C 4F 52 17 00 02 10 B6 10 00 00  FOGCOLOR........
  00000180: 78 00 0E 44 33 44 52 53 5F 46 49 4C 4C 4D 4F 44  x..D3DRS_FILLMOD
  00000190: 45 1B 00 02 10 B6 10 00 00 79 00 12 44 33 44 52  E........y..D3DR
  000001A0: 53 5F 42 41 43 4B 46 49 4C 4C 4D 4F 44 45 1F 00  S_BACKFILLMODE..
  000001B0: 02 10 B6 10 00 00 7A 00 16 44 33 44 52 53 5F 54  ......z..D3DRS_T
  000001C0: 57 4F 53 49 44 45 44 4C 49 47 48 54 49 4E 47 1F  WOSIDEDLIGHTING.
  000001D0: 00 02 10 B6 10 00 00 7B 00 16 44 33 44 52 53 5F  .......{..D3DRS_
  000001E0: 4E 4F 52 4D 41 4C 49 5A 45 4E 4F 52 4D 41 4C 53  NORMALIZENORMALS
  000001F0: 16 00 02 10 B6 10 00 00 7C 00 0D 44 33 44 52 53  ........|..D3DRS
  00000200: 5F 5A 45 4E 41 42 4C 45 1C 00 02 10 B6 10 00 00  _ZENABLE........
  00000210: 7D 00 13 44 33 44 52 53 5F 53 54 45 4E 43 49 4C  }..D3DRS_STENCIL
  00000220: 45 4E 41 42 4C 45 1A 00 02 10 B6 10 00 00 7E 00  ENABLE........~.
  00000230: 11 44 33 44 52 53 5F 53 54 45 4E 43 49 4C 46 41  .D3DRS_STENCILFA
  00000240: 49 4C 18 00 02 10 B6 10 00 00 7F 00 0F 44 33 44  IL...........D3D
  00000250: 52 53 5F 46 52 4F 4E 54 46 41 43 45 17 00 02 10  RS_FRONTFACE....
  00000260: B6 10 00 00 80 00 0E 44 33 44 52 53 5F 43 55 4C  .......D3DRS_CUL
  00000270: 4C 4D 4F 44 45 1C 00 02 10 B6 10 00 00 81 00 13  LMODE...........
  00000280: 44 33 44 52 53 5F 54 45 58 54 55 52 45 46 41 43  D3DRS_TEXTUREFAC
  00000290: 54 4F 52 14 00 02 10 B6 10 00 00 82 00 0B 44 33  TOR...........D3
  000002A0: 44 52 53 5F 5A 42 49 41 53 16 00 02 10 B6 10 00  DRS_ZBIAS.......
  000002B0: 00 83 00 0D 44 33 44 52 53 5F 4C 4F 47 49 43 4F  ....D3DRS_LOGICO
  000002C0: 50 1C 00 02 10 B6 10 00 00 84 00 13 44 33 44 52  P...........D3DR
  000002D0: 53 5F 45 44 47 45 41 4E 54 49 41 4C 49 41 53 23  S_EDGEANTIALIAS#
  000002E0: 00 02 10 B6 10 00 00 85 00 1A 44 33 44 52 53 5F  ..........D3DRS_
  000002F0: 4D 55 4C 54 49 53 41 4D 50 4C 45 41 4E 54 49 41  MULTISAMPLEANTIA
  00000300: 4C 49 41 53 1E 00 02 10 B6 10 00 00 86 00 15 44  LIAS...........D
  00000310: 33 44 52 53 5F 4D 55 4C 54 49 53 41 4D 50 4C 45  3DRS_MULTISAMPLE
  00000320: 4D 41 53 4B 1E 00 02 10 B6 10 00 00 87 00 15 44  MASK...........D
  00000330: 33 44 52 53 5F 4D 55 4C 54 49 53 41 4D 50 4C 45  3DRS_MULTISAMPLE
  00000340: 4D 4F 44 45 2A 00 02 10 B6 10 00 00 88 00 21 44  MODE*.........!D
  00000350: 33 44 52 53 5F 4D 55 4C 54 49 53 41 4D 50 4C 45  3DRS_MULTISAMPLE
  00000360: 52 45 4E 44 45 52 54 41 52 47 45 54 4D 4F 44 45  RENDERTARGETMODE
  00000370: 19 00 02 10 B6 10 00 00 89 00 10 44 33 44 52 53  ...........D3DRS
  00000380: 5F 53 48 41 44 4F 57 46 55 4E 43 18 00 02 10 B6  _SHADOWFUNC.....
  00000390: 10 00 00 8A 00 0F 44 33 44 52 53 5F 4C 49 4E 45  ......D3DRS_LINE
  000003A0: 57 49 44 54 48 1E 00 02 10 B6 10 00 00 8B 00 15  WIDTH...........
  000003B0: 44 33 44 52 53 5F 44 58 54 31 4E 4F 49 53 45 45  D3DRS_DXT1NOISEE
  000003C0: 4E 41 42 4C 45 18 00 02 10 B6 10 00 00 8C 00 0F  NABLE...........
  000003D0: 44 33 44 52 53 5F 59 55 56 45 4E 41 42 4C 45 22  D3DRS_YUVENABLE"
  000003E0: 00 02 10 B6 10 00 00 8D 00 19 44 33 44 52 53 5F  ..........D3DRS_
  000003F0: 4F 43 43 4C 55 53 49 4F 4E 43 55 4C 4C 45 4E 41  OCCLUSIONCULLENA
  00000400: 42 4C 45 20 00 02 10 B6 10 00 00 8E 00 17 44 33  BLE ..........D3
  00000410: 44 52 53 5F 53 54 45 4E 43 49 4C 43 55 4C 4C 45  DRS_STENCILCULLE
  00000420: 4E 41 42 4C 45 20 00 02 10 B6 10 00 00 8F 00 17  NABLE ..........
  00000430: 44 33 44 52 53 5F 52 4F 50 5A 43 4D 50 41 4C 57  D3DRS_ROPZCMPALW
  00000440: 41 59 53 52 45 41 44 17 00 02 10 B6 10 00 00 90  AYSREAD.........
  00000450: 00 0E 44 33 44 52 53 5F 52 4F 50 5A 52 45 41 44  ..D3DRS_ROPZREAD
  00000460: 24 00 02 10 B6 10 00 00 91 00 1B 44 33 44 52 53  $..........D3DRS
  00000470: 5F 44 4F 4E 4F 54 43 55 4C 4C 55 4E 43 4F 4D 50  _DONOTCULLUNCOMP
  00000480: 52 45 53 53 45 44 12 00 02 10 B6 10 00 00 92 00  RESSED..........
  00000490: 09 44 33 44 52 53 5F 4D 41 58 2A 00 02 10 C9 10  .D3DRS_MAX*.....
  000004A0: 00 00 0C 00 21 44 33 44 54 53 53 5F 44 45 46 45  ....!D3DTSS_DEFE
  000004B0: 52 52 45 44 5F 54 45 58 54 55 52 45 5F 53 54 41  RRED_TEXTURE_STA
  000004C0: 54 45 5F 4D 41 58 17 00 02 10 C9 10 00 00 0C 00  TE_MAX..........
  000004D0: 0E 44 33 44 54 53 53 5F 43 4F 4C 4F 52 4F 50 1C  .D3DTSS_COLOROP.
  000004E0: 00 02 10 C9 10 00 00 16 00 13 44 33 44 54 53 53  ..........D3DTSS
  000004F0: 5F 44 45 46 45 52 52 45 44 5F 4D 41 58 1C 00 02  _DEFERRED_MAX...
  00000500: 10 C9 10 00 00 16 00 13 44 33 44 54 53 53 5F 42  ........D3DTSS_B
  00000510: 55 4D 50 45 4E 56 4D 41 54 30 30 1E 00 02 10 C9  UMPENVMAT00.....
  00000520: 10 00 00 1B 00 15 44 33 44 54 53 53 5F 42 55 4D  ......D3DTSS_BUM
  00000530: 50 45 4E 56 4C 4F 46 46 53 45 54 1D 00 02 10 C9  PENVLOFFSET.....
  00000540: 10 00 00 1C 00 14 44 33 44 54 53 53 5F 54 45 58  ......D3DTSS_TEX
  00000550: 43 4F 4F 52 44 49 4E 44 45 58 1B 00 02 10 C9 10  COORDINDEX......
  00000560: 00 00 1D 00 12 44 33 44 54 53 53 5F 42 4F 52 44  .....D3DTSS_BORD
  00000570: 45 52 43 4F 4C 4F 52 1D 00 02 10 C9 10 00 00 1E  ERCOLOR.........
  00000580: 00 14 44 33 44 54 53 53 5F 43 4F 4C 4F 52 4B 45  ..D3DTSS_COLORKE
  00000590: 59 43 4F 4C 4F 52 13 00 02 10 C9 10 00 00 20 00  YCOLOR........ .
  000005A0: 0A 44 33 44 54 53 53 5F 4D 41 58 1A 00 02 10 CC  .D3DTSS_MAX.....
  000005B0: 14 00 00 19 00 11 44 33 44 54 4F 50 5F 42 55 4D  ......D3DTOP_BUM
  000005C0: 50 45 4E 56 4D 41 50 14 00 02 10 1B 10 00 00 0C  PENVMAP.........
  000005D0: 00 0B 44 33 44 46 4D 54 5F 44 58 54 31 14 00 02  ..D3DFMT_DXT1...
  000005E0: 10 1B 10 00 00 0E 00 0B 44 33 44 46 4D 54 5F 44  ........D3DFMT_D
  000005F0: 58 54 32 14 00 02 10 1B 10 00 00 0F 00 0B 44 33  XT2...........D3
  00000600: 44 46 4D 54 5F 44 58 54 34 28 00 02 10 BE 14 00  DFMT_DXT4(......
  00000610: 00 20 00 1F 50 53 5F 49 4E 50 55 54 4D 41 50 50  . ..PS_INPUTMAPP
  00000620: 49 4E 47 5F 55 4E 53 49 47 4E 45 44 5F 49 4E 56  ING_UNSIGNED_INV
  00000630: 45 52 54 26 00 02 10 BE 14 00 00 40 00 1D 50 53  ERT&.......@..PS
  00000640: 5F 49 4E 50 55 54 4D 41 50 50 49 4E 47 5F 45 58  _INPUTMAPPING_EX
  00000650: 50 41 4E 44 5F 4E 4F 52 4D 41 4C 28 00 02 10 BE  PAND_NORMAL(....
  00000660: 14 00 00 80 00 1F 50 53 5F 49 4E 50 55 54 4D 41  ......PS_INPUTMA
  00000670: 50 50 49 4E 47 5F 48 41 4C 46 42 49 41 53 5F 4E  PPING_HALFBIAS_N
  00000680: 4F 52 4D 41 4C 0C 00 03 10 22 00 00 00 05 55 4C  ORMAL...."....UL
  00000690: 4F 4E 47 17 00 03 10 D3 13 00 00 10 44 53 45 46  ONG.........DSEF
  000006A0: 46 45 43 54 49 4D 41 47 45 4C 4F 43 12 00 03 10  FECTIMAGELOC....
  000006B0: 12 15 00 00 0B 50 53 5F 52 45 47 49 53 54 45 52  .....PS_REGISTER
  000006C0: 10 00 03 10 52 13 00 00 09 44 33 44 58 43 4F 4C  ....R....D3DXCOL
  000006D0: 4F 52 0A 00 03 10 05 10 00 00 03 49 49 44 0F 00  OR.........IID..
  000006E0: 03 10 13 00 00 00 08 4C 4F 4E 47 4C 4F 4E 47 10  .......LONGLONG.
  000006F0: 00 03 10 1B 10 00 00 09 44 33 44 46 4F 52 4D 41  ........D3DFORMA
  00000700: 54 12 00 03 10 CB 12 00 00 0B 44 33 44 58 56 45  T.........D3DXVE
  00000710: 43 54 4F 52 33 10 00 03 10 29 12 00 00 09 44 33  CTOR3....)....D3
  00000720: 44 4C 49 47 48 54 38 17 00 03 10 7E 12 00 00 10  DLIGHT8....~....
  00000730: 5F 44 33 44 53 55 52 46 41 43 45 5F 44 45 53 43  _D3DSURFACE_DESC
  00000740: 1B 00 03 10 FD 14 00 00 14 44 33 44 56 45 52 54  .........D3DVERT
  00000750: 45 58 53 48 41 44 45 52 49 4E 50 55 54 15 00 03  EXSHADERINPUT...
  00000760: 10 80 12 00 00 0E 44 33 44 4C 4F 43 4B 45 44 5F  ......D3DLOCKED_
  00000770: 52 45 43 54 1F 00 03 10 10 15 00 00 18 4C 50 46  RECT.........LPF
  00000780: 4E 58 4D 45 44 49 41 4F 42 4A 45 43 54 43 41 4C  NXMEDIAOBJECTCAL
  00000790: 4C 42 41 43 4B 15 00 03 10 2D 12 00 00 0E 44 33  LBACK....-....D3
  000007A0: 44 42 61 73 65 54 65 78 74 75 72 65 1A 00 03 10  DBaseTexture....
  000007B0: 0F 15 00 00 13 4C 50 44 53 45 46 46 45 43 54 49  .....LPDSEFFECTI
  000007C0: 4D 41 47 45 44 45 53 43 0D 00 03 10 03 04 00 00  MAGEDESC........
  000007D0: 06 4C 50 56 4F 49 44 1C 00 03 10 B0 11 00 00 15  .LPVOID.........
  000007E0: 44 33 44 50 52 45 53 45 4E 54 5F 50 41 52 41 4D  D3DPRESENT_PARAM
  000007F0: 45 54 45 52 53 14 00 03 10 0E 15 00 00 0D 4C 50  ETERS.........LP
  00000800: 43 44 53 33 44 42 55 46 46 45 52 16 00 03 10 1F  CDS3DBUFFER.....
  00000810: 10 00 00 0F 44 33 44 52 45 53 4F 55 52 43 45 54  ....D3DRESOURCET
  00000820: 59 50 45 1F 00 03 10 0D 15 00 00 18 5F 44 33 44  YPE........._D3D
  00000830: 53 54 41 54 45 42 4C 4F 43 4B 44 49 52 54 59 49  STATEBLOCKDIRTYI
  00000840: 4E 44 45 58 19 00 03 10 0B 15 00 00 12 5F 4D 41  NDEX........._MA
  00000850: 58 5F 46 56 46 5F 44 45 43 4C 5F 53 49 5A 45 20  X_FVF_DECL_SIZE 
  00000860: 00 03 10 31 12 00 00 19 5F 44 33 44 56 45 52 54  ...1...._D3DVERT
  00000870: 45 58 41 54 54 52 49 42 55 54 45 46 4F 52 4D 41  EXATTRIBUTEFORMA
  00000880: 54 10 00 03 10 1F 12 00 00 09 44 33 44 4D 41 54  T.........D3DMAT
  00000890: 52 49 58 19 00 03 10 22 00 00 00 12 44 33 44 42  RIX...."....D3DB
  000008A0: 41 43 4B 42 55 46 46 45 52 5F 54 59 50 45 1B 00  ACKBUFFER_TYPE..
  000008B0: 03 10 13 12 00 00 14 5F 44 33 44 43 4F 50 59 52  ......._D3DCOPYR
  000008C0: 45 43 54 52 4F 50 53 54 41 54 45 0E 00 03 10 66  ECTROPSTATE....f
  000008D0: 12 00 00 07 44 33 44 54 49 4C 45 15 00 03 10 8F  ....D3DTILE.....
  000008E0: 12 00 00 0E 5F 44 33 44 4C 4F 43 4B 45 44 5F 42  ...._D3DLOCKED_B
  000008F0: 4F 58 1A 00 03 10 09 15 00 00 13 4C 50 44 49 52  OX.........LPDIR
  00000900: 45 43 54 53 4F 55 4E 44 53 54 52 45 41 4D 18 00  ECTSOUNDSTREAM..
  00000910: 03 10 19 12 00 00 11 5F 44 33 44 43 4F 50 59 52  ......._D3DCOPYR
  00000920: 45 43 54 53 54 41 54 45 1B 00 03 10 91 12 00 00  ECTSTATE........
  00000930: 14 44 33 44 56 45 52 54 45 58 42 55 46 46 45 52  .D3DVERTEXBUFFER
  00000940: 5F 44 45 53 43 12 00 03 10 AF 12 00 00 0B 44 33  _DESC.........D3
  00000950: 44 58 56 45 43 54 4F 52 32 13 00 03 10 08 15 00  DXVECTOR2.......
  00000960: 00 0C 4C 50 43 44 53 4C 46 4F 44 45 53 43 10 00  ..LPCDSLFODESC..
  00000970: 03 10 23 00 00 00 09 55 4C 4F 4E 47 4C 4F 4E 47  ..#....ULONGLONG
  00000980: 16 00 03 10 64 12 00 00 0F 44 33 44 53 54 52 45  ....d....D3DSTRE
  00000990: 41 4D 5F 49 4E 50 55 54 15 00 03 10 07 12 00 00  AM_INPUT........
  000009A0: 0E 44 33 44 49 6E 64 65 78 42 75 66 66 65 72 0F  .D3DIndexBuffer.
  000009B0: 00 03 10 BF 13 00 00 08 49 55 6E 6B 6E 6F 77 6E  ........IUnknown
  000009C0: 18 00 03 10 BE 10 00 00 11 44 33 44 53 54 41 54  .........D3DSTAT
  000009D0: 45 42 4C 4F 43 4B 54 59 50 45 19 00 03 10 C9 14  EBLOCKTYPE......
  000009E0: 00 00 12 44 53 49 33 44 4C 32 4F 42 53 54 52 55  ...DSI3DL2OBSTRU
  000009F0: 43 54 49 4F 4E 14 00 03 10 34 14 00 00 0D 44 53  CTION....4....DS
  00000A00: 49 33 44 4C 32 42 55 46 46 45 52 18 00 03 10 3C  I3DL2BUFFER....<
  00000A10: 12 00 00 11 5F 44 33 44 54 52 49 50 41 54 43 48  ...._D3DTRIPATCH
  00000A20: 5F 49 4E 46 4F 16 00 03 10 DB 13 00 00 0F 5F 44  _INFO........._D
  00000A30: 53 4F 55 54 50 55 54 4C 45 56 45 4C 53 10 00 03  SOUTPUTLEVELS...
  00000A40: 10 8B 12 00 00 09 44 33 44 56 6F 6C 75 6D 65 1F  ......D3DVolume.
  00000A50: 00 03 10 C9 10 00 00 18 44 33 44 54 45 58 54 55  ........D3DTEXTU
  00000A60: 52 45 53 54 41 47 45 53 54 41 54 45 54 59 50 45  RESTAGESTATETYPE
  00000A70: 17 00 03 10 D3 14 00 00 10 44 53 49 33 44 4C 32  .........DSI3DL2
  00000A80: 4F 43 43 4C 55 53 49 4F 4E 0E 00 03 10 22 04 00  OCCLUSION...."..
  00000A90: 00 07 4C 50 44 57 4F 52 44 1C 00 03 10 05 15 00  ..LPDWORD.......
  00000AA0: 00 15 4C 50 43 44 53 4D 49 58 42 49 4E 56 4F 4C  ..LPCDSMIXBINVOL
  00000AB0: 55 4D 45 50 41 49 52 14 00 03 10 21 12 00 00 0D  UMEPAIR....!....
  00000AC0: 5F 44 33 44 56 49 45 57 50 4F 52 54 38 20 00 03  _D3DVIEWPORT8 ..
  00000AD0: 10 C9 10 00 00 19 5F 44 33 44 54 45 58 54 55 52  ......_D3DTEXTUR
  00000AE0: 45 53 54 41 47 45 53 54 41 54 45 54 59 50 45 15  ESTAGESTATETYPE.
  00000AF0: 00 03 10 82 12 00 00 0E 44 33 44 56 4F 4C 55 4D  ........D3DVOLUM
  00000B00: 45 5F 44 45 53 43 13 00 03 10 20 14 00 00 0C 57  E_DESC.... ....W
  00000B10: 41 56 45 46 4F 52 4D 41 54 45 58 1C 00 03 10 90  AVEFORMATEX.....
  00000B20: 10 00 00 15 44 33 44 54 52 41 4E 53 46 4F 52 4D  ....D3DTRANSFORM
  00000B30: 53 54 41 54 45 54 59 50 45 1A 00 03 10 04 15 00  STATETYPE.......
  00000B40: 00 13 4C 50 44 49 52 45 43 54 53 4F 55 4E 44 42  ..LPDIRECTSOUNDB
  00000B50: 55 46 46 45 52 11 00 03 10 30 14 00 00 0A 44 53  UFFER....0....DS
  00000B60: 33 44 42 55 46 46 45 52 17 00 03 10 EA 11 00 00  3DBUFFER........
  00000B70: 10 44 33 44 43 55 42 45 4D 41 50 5F 46 41 43 45  .D3DCUBEMAP_FACE
  00000B80: 53 0B 00 03 10 74 00 00 00 04 42 4F 4F 4C 11 00  S....t....BOOL..
  00000B90: 03 10 1B 10 00 00 0A 5F 44 33 44 46 4F 52 4D 41  ......._D3DFORMA
  00000BA0: 54 15 00 03 10 3A 10 00 00 0E 44 33 44 44 49 53  T....:....D3DDIS
  00000BB0: 50 4C 41 59 4D 4F 44 45 15 00 03 10 34 14 00 00  PLAYMODE....4...
  00000BC0: 0E 5F 44 53 49 33 44 4C 32 42 55 46 46 45 52 12  ._DSI3DL2BUFFER.
  00000BD0: 00 03 10 7C 12 00 00 0B 44 33 44 52 65 73 6F 75  ...|....D3DResou
  00000BE0: 72 63 65 14 00 03 10 CB 13 00 00 0D 5F 44 53 53  rce........._DSS
  00000BF0: 54 52 45 41 4D 44 45 53 43 0F 00 03 10 3C 10 00  TREAMDESC....<..
  00000C00: 00 08 44 33 44 43 41 50 53 38 15 00 03 10 1E 13  ..D3DCAPS8......
  00000C10: 00 00 0E 44 33 44 58 51 55 41 54 45 52 4E 49 4F  ...D3DXQUATERNIO
  00000C20: 4E 0F 00 03 10 22 00 00 00 08 44 33 44 43 4F 4C  N...."....D3DCOL
  00000C30: 4F 52 19 00 03 10 C2 14 00 00 12 44 53 4D 49 58  OR.........DSMIX
  00000C40: 42 49 4E 56 4F 4C 55 4D 45 50 41 49 52 10 00 03  BINVOLUMEPAIR...
  00000C50: 10 54 13 00 00 09 44 33 44 56 45 43 54 4F 52 0E  .T....D3DVECTOR.
  00000C60: 00 03 10 22 00 00 00 07 44 33 44 50 4F 4F 4C 11  ..."....D3DPOOL.
  00000C70: 00 03 10 C3 11 00 00 0A 44 33 44 53 75 72 66 61  ........D3DSurfa
  00000C80: 63 65 13 00 03 10 3E 12 00 00 0C 44 33 44 46 49  ce....>....D3DFI
  00000C90: 45 4C 44 54 59 50 45 13 00 03 10 CE 14 00 00 0C  ELDTYPE.........
  00000CA0: 5F 44 33 44 53 57 41 50 44 41 54 41 10 00 03 10  _D3DSWAPDATA....
  00000CB0: 02 15 00 00 09 4C 50 55 4E 4B 4E 4F 57 4E 19 00  .....LPUNKNOWN..
  00000CC0: 03 10 01 15 00 00 12 4C 50 43 44 53 49 33 44 4C  .......LPCDSI3DL
  00000CD0: 32 4C 49 53 54 45 4E 45 52 12 00 03 10 00 15 00  2LISTENER.......
  00000CE0: 00 0B 44 33 44 43 41 4C 4C 42 41 43 4B 0D 00 03  ..D3DCALLBACK...
  00000CF0: 10 CD 13 00 00 06 48 57 4E 44 5F 5F 24 00 03 10  ......HWND__$...
  00000D00: B2 11 00 00 1D 44 33 44 44 45 56 49 43 45 5F 43  .....D3DDEVICE_C
  00000D10: 52 45 41 54 49 4F 4E 5F 50 41 52 41 4D 45 54 45  REATION_PARAMETE
  00000D20: 52 53 15 00 03 10 F3 14 00 00 0E 5F 4C 41 52 47  RS........._LARG
  00000D30: 45 5F 49 4E 54 45 47 45 52 19 00 03 10 D1 13 00  E_INTEGER.......
  00000D40: 00 12 5F 44 53 45 46 46 45 43 54 49 4D 41 47 45  .._DSEFFECTIMAGE
  00000D50: 44 45 53 43 1D 00 03 10 90 10 00 00 16 5F 44 33  DESC........._D3
  00000D60: 44 54 52 41 4E 53 46 4F 52 4D 53 54 41 54 45 54  DTRANSFORMSTATET
  00000D70: 59 50 45 1C 00 03 10 FD 14 00 00 15 5F 44 33 44  YPE........._D3D
  00000D80: 56 45 52 54 45 58 53 48 41 44 45 52 49 4E 50 55  VERTEXSHADERINPU
  00000D90: 54 15 00 03 10 DB 13 00 00 0E 44 53 4F 55 54 50  T.........DSOUTP
  00000DA0: 55 54 4C 45 56 45 4C 53 11 00 03 10 1F 12 00 00  UTLEVELS........
  00000DB0: 0A 5F 44 33 44 4D 41 54 52 49 58 13 00 03 10 F7  ._D3DMATRIX.....
  00000DC0: 14 00 00 0C 4C 50 43 44 53 4D 49 58 42 49 4E 53  ....LPCDSMIXBINS
  00000DD0: 11 00 03 10 19 10 00 00 0A 44 33 44 44 45 56 54  .........D3DDEVT
  00000DE0: 59 50 45 0C 00 03 10 11 12 00 00 05 50 4F 49 4E  YPE.........POIN
  00000DF0: 54 15 00 03 10 56 13 00 00 0E 5F 44 33 44 43 4F  T....V...._D3DCO
  00000E00: 4C 4F 52 56 41 4C 55 45 17 00 03 10 D9 13 00 00  LORVALUE........
  00000E10: 10 5F 44 53 49 33 44 4C 32 4C 49 53 54 45 4E 45  ._DSI3DL2LISTENE
  00000E20: 52 11 00 03 10 0F 12 00 00 0A 44 33 44 50 61 6C  R.........D3DPal
  00000E30: 65 74 74 65 16 00 03 10 24 14 00 00 0F 5F 44 53  ette....$...._DS
  00000E40: 45 4E 56 45 4C 4F 50 45 44 45 53 43 14 00 03 10  ENVELOPEDESC....
  00000E50: C8 11 00 00 0D 5F 44 33 44 47 41 4D 4D 41 52 41  ....._D3DGAMMARA
  00000E60: 4D 50 19 00 03 10 B6 10 00 00 12 44 33 44 52 45  MP.........D3DRE
  00000E70: 4E 44 45 52 53 54 41 54 45 54 59 50 45 11 00 03  NDERSTATETYPE...
  00000E80: 10 29 12 00 00 0A 5F 44 33 44 4C 49 47 48 54 38  .)...._D3DLIGHT8
  00000E90: 19 00 03 10 5F 14 00 00 12 49 44 69 72 65 63 74  ...._....IDirect
  00000EA0: 53 6F 75 6E 64 53 74 72 65 61 6D 1B 00 03 10 F5  SoundStream.....
  00000EB0: 14 00 00 14 4C 50 43 44 53 42 50 4F 53 49 54 49  ....LPCDSBPOSITI
  00000EC0: 4F 4E 4E 4F 54 49 46 59 0E 00 03 10 8D 12 00 00  ONNOTIFY........
  00000ED0: 07 5F 44 33 44 42 4F 58 16 00 03 10 F4 14 00 00  ._D3DBOX........
  00000EE0: 0F 4C 50 43 44 53 53 54 52 45 41 4D 44 45 53 43  .LPCDSSTREAMDESC
  00000EF0: 17 00 03 10 E6 11 00 00 10 44 33 44 56 6F 6C 75  .........D3DVolu
  00000F00: 6D 65 54 65 78 74 75 72 65 19 00 03 10 36 14 00  meTexture....6..
  00000F10: 00 12 5F 44 53 42 50 4F 53 49 54 49 4F 4E 4E 4F  .._DSBPOSITIONNO
  00000F20: 54 49 46 59 0F 00 03 10 6C 14 00 00 08 53 77 69  TIFY....l....Swi
  00000F30: 7A 7A 6C 65 72 15 00 03 10 13 00 00 00 0E 52 45  zzler.........RE
  00000F40: 46 45 52 45 4E 43 45 5F 54 49 4D 45 14 00 03 10  FERENCE_TIME....
  00000F50: DD 14 00 00 0D 44 33 44 56 42 4C 41 4E 4B 44 41  .....D3DVBLANKDA
  00000F60: 54 41 13 00 03 10 B9 14 00 00 0C 5F 44 53 45 46  TA........._DSEF
  00000F70: 46 45 43 54 4D 41 50 14 00 03 10 F3 14 00 00 0D  FECTMAP.........
  00000F80: 4C 41 52 47 45 5F 49 4E 54 45 47 45 52 15 00 03  LARGE_INTEGER...
  00000F90: 10 F2 11 00 00 0E 44 33 44 43 75 62 65 54 65 78  ......D3DCubeTex
  00000FA0: 74 75 72 65 13 00 03 10 EF 14 00 00 0C 58 4D 65  ture.........XMe
  00000FB0: 64 69 61 4F 62 6A 65 63 74 18 00 03 10 C5 11 00  diaObject.......
  00000FC0: 00 11 5F 44 33 44 52 41 53 54 45 52 5F 53 54 41  .._D3DRASTER_STA
  00000FD0: 54 55 53 14 00 03 10 AB 11 00 00 0D 44 33 44 53  TUS.........D3DS
  00000FE0: 57 41 50 45 46 46 45 43 54 16 00 03 10 D9 13 00  WAPEFFECT.......
  00000FF0: 00 0F 44 53 49 33 44 4C 32 4C 49 53 54 45 4E 45  ..DSI3DL2LISTENE
  00001000: 52 0C 00 03 10 03 04 00 00 05 50 56 4F 49 44 15  R.........PVOID.
  00001010: 00 03 10 DD 14 00 00 0E 5F 44 33 44 56 42 4C 41  ........_D3DVBLA
  00001020: 4E 4B 44 41 54 41 15 00 03 10 23 11 00 00 0E 44  NKDATA....#....D
  00001030: 33 44 50 41 4C 45 54 54 45 53 49 5A 45 14 00 03  3DPALETTESIZE...
  00001040: 10 24 12 00 00 0D 5F 44 33 44 4D 41 54 45 52 49  .$...._D3DMATERI
  00001050: 41 4C 38 15 00 03 10 24 14 00 00 0E 44 53 45 4E  AL8....$....DSEN
  00001060: 56 45 4C 4F 50 45 44 45 53 43 0E 00 03 10 22 00  VELOPEDESC....".
  00001070: 00 00 07 53 57 49 5A 4E 55 4D 17 00 03 10 64 12  ...SWIZNUM....d.
  00001080: 00 00 10 5F 44 33 44 53 54 52 45 41 4D 5F 49 4E  ..._D3DSTREAM_IN
  00001090: 50 55 54 13 00 03 10 36 12 00 00 0C 44 33 44 42  PUT....6....D3DB
  000010A0: 41 53 49 53 54 59 50 45 16 00 03 10 40 12 00 00  ASISTYPE....@...
  000010B0: 0F 44 33 44 46 49 45 4C 44 5F 53 54 41 54 55 53  .D3DFIELD_STATUS
  000010C0: 16 00 03 10 82 12 00 00 0F 5F 44 33 44 56 4F 4C  ........._D3DVOL
  000010D0: 55 4D 45 5F 44 45 53 43 1D 00 03 10 15 12 00 00  UME_DESC........
  000010E0: 16 44 33 44 43 4F 50 59 52 45 43 54 43 4F 4C 4F  .D3DCOPYRECTCOLO
  000010F0: 52 46 4F 52 4D 41 54 17 00 03 10 19 12 00 00 10  RFORMAT.........
  00001100: 44 33 44 43 4F 50 59 52 45 43 54 53 54 41 54 45  D3DCOPYRECTSTATE
  00001110: 16 00 03 10 DB 14 00 00 0F 44 33 44 53 57 41 50  .........D3DSWAP
  00001120: 43 41 4C 4C 42 41 43 4B 1E 00 03 10 B0 11 00 00  CALLBACK........
  00001130: 17 5F 44 33 44 50 52 45 53 45 4E 54 5F 50 41 52  ._D3DPRESENT_PAR
  00001140: 41 4D 45 54 45 52 53 5F 19 00 03 10 3A 12 00 00  AMETERS_....:...
  00001150: 12 5F 44 33 44 52 45 43 54 50 41 54 43 48 5F 49  ._D3DRECTPATCH_I
  00001160: 4E 46 4F 0C 00 03 10 22 00 00 00 05 44 57 4F 52  NFO...."....DWOR
  00001170: 44 13 00 03 10 38 12 00 00 0C 44 33 44 4F 52 44  D....8....D3DORD
  00001180: 45 52 54 59 50 45 18 00 03 10 3A 12 00 00 11 44  ERTYPE....:....D
  00001190: 33 44 52 45 43 54 50 41 54 43 48 5F 49 4E 46 4F  3DRECTPATCH_INFO
  000011A0: 0D 00 03 10 03 04 00 00 06 48 41 4E 44 4C 45 12  .........HANDLE.
  000011B0: 00 03 10 E3 12 00 00 0B 44 33 44 58 56 45 43 54  ........D3DXVECT
  000011C0: 4F 52 34 17 00 03 10 40 12 00 00 10 5F 44 33 44  OR4....@...._D3D
  000011D0: 46 49 45 4C 44 5F 53 54 41 54 55 53 0B 00 03 10  FIELD_STATUS....
  000011E0: 21 00 00 00 04 57 4F 52 44 13 00 03 10 21 12 00  !....WORD....!..
  000011F0: 00 0C 44 33 44 56 49 45 57 50 4F 52 54 38 0B 00  ..D3DVIEWPORT8..
  00001200: 03 10 20 00 00 00 04 42 59 54 45 12 00 03 10 30  .. ....BYTE....0
  00001210: 14 00 00 0B 5F 44 53 33 44 42 55 46 46 45 52 16  ...._DS3DBUFFER.
  00001220: 00 03 10 8E 11 00 00 0F 44 33 44 43 41 4C 4C 42  ........D3DCALLB
  00001230: 41 43 4B 54 59 50 45 0E 00 03 10 D5 10 00 00 07  ACKTYPE.........
  00001240: 4C 50 43 56 4F 49 44 0E 00 03 10 1B 12 00 00 07  LPCVOID.........
  00001250: 44 33 44 52 45 43 54 0F 00 03 10 D9 14 00 00 08  D3DRECT.........
  00001260: 4C 50 44 53 43 41 50 53 12 00 03 10 D6 14 00 00  LPDSCAPS........
  00001270: 0B 5F 58 4D 45 44 49 41 49 4E 46 4F 17 00 03 10  ._XMEDIAINFO....
  00001280: C5 11 00 00 10 44 33 44 52 41 53 54 45 52 5F 53  .....D3DRASTER_S
  00001290: 54 41 54 55 53 14 00 03 10 20 14 00 00 0D 74 57  TATUS.... ....tW
  000012A0: 41 56 45 46 4F 52 4D 41 54 45 58 0B 00 03 10 D8  AVEFORMATEX.....
  000012B0: 14 00 00 04 48 57 4E 44 18 00 03 10 36 14 00 00  ....HWND....6...
  000012C0: 11 44 53 42 50 4F 53 49 54 49 4F 4E 4E 4F 54 49  .DSBPOSITIONNOTI
  000012D0: 46 59 10 00 03 10 A9 11 00 00 09 44 33 44 44 65  FY.........D3DDe
  000012E0: 76 69 63 65 16 00 03 10 D7 14 00 00 0F 4C 50 43  vice.........LPC
  000012F0: 44 53 46 49 4C 54 45 52 44 45 53 43 13 00 03 10  DSFILTERDESC....
  00001300: D4 14 00 00 0C 4C 50 58 4D 45 44 49 41 49 4E 46  .....LPXMEDIAINF
  00001310: 4F 1E 00 03 10 38 10 00 00 17 5F 44 33 44 41 44  O....8...._D3DAD
  00001320: 41 50 54 45 52 5F 49 44 45 4E 54 49 46 49 45 52  APTER_IDENTIFIER
  00001330: 38 0C 00 03 10 11 00 00 00 05 53 48 4F 52 54 0B  8.........SHORT.
  00001340: 00 03 10 12 00 00 00 04 4C 4F 4E 47 13 00 03 10  ........LONG....
  00001350: 24 12 00 00 0C 44 33 44 4D 41 54 45 52 49 41 4C  $....D3DMATERIAL
  00001360: 38 10 00 03 10 22 14 00 00 09 44 53 4C 46 4F 44  8...."....DSLFOD
  00001370: 45 53 43 0C 00 03 10 40 00 00 00 05 46 4C 4F 41  ESC....@....FLOA
  00001380: 54 1B 00 03 10 93 12 00 00 14 5F 44 33 44 49 4E  T........._D3DIN
  00001390: 44 45 58 42 55 46 46 45 52 5F 44 45 53 43 18 00  DEXBUFFER_DESC..
  000013A0: 03 10 D3 14 00 00 11 5F 44 53 49 33 44 4C 32 4F  ......._DSI3DL2O
  000013B0: 43 43 4C 55 53 49 4F 4E 1B 00 03 10 17 12 00 00  CCLUSION........
  000013C0: 14 44 33 44 43 4F 50 59 52 45 43 54 4F 50 45 52  .D3DCOPYRECTOPER
  000013D0: 41 54 49 4F 4E 11 00 03 10 05 13 00 00 0A 44 33  ATION.........D3
  000013E0: 44 58 4D 41 54 52 49 58 14 00 03 10 8F 12 00 00  DXMATRIX........
  000013F0: 0D 44 33 44 4C 4F 43 4B 45 44 5F 42 4F 58 0F 00  .D3DLOCKED_BOX..
  00001400: 03 10 1B 12 00 00 08 5F 44 33 44 52 45 43 54 18  ......._D3DRECT.
  00001410: 00 03 10 D1 14 00 00 11 44 33 44 56 42 4C 41 4E  ........D3DVBLAN
  00001420: 4B 43 41 4C 4C 42 41 43 4B 13 00 03 10 D7 13 00  KCALLBACK.......
  00001430: 00 0C 44 53 33 44 4C 49 53 54 45 4E 45 52 1C 00  ..DS3DLISTENER..
  00001440: 03 10 22 00 00 00 15 44 33 44 53 48 41 44 45 52  .."....D3DSHADER
  00001450: 43 4F 4E 53 54 41 4E 54 4D 4F 44 45 16 00 03 10  CONSTANTMODE....
  00001460: 13 04 00 00 0F 50 52 45 46 45 52 45 4E 43 45 5F  .....PREFERENCE_
  00001470: 54 49 4D 45 12 00 03 10 CE 14 00 00 0B 44 33 44  TIME.........D3D
  00001480: 53 57 41 50 44 41 54 41 0D 00 03 10 8D 12 00 00  SWAPDATA........
  00001490: 06 44 33 44 42 4F 58 14 00 03 10 CC 14 00 00 0D  .D3DBOX.........
  000014A0: 5F 44 33 44 54 45 58 54 55 52 45 4F 50 0B 00 03  _D3DTEXTUREOP...
  000014B0: 10 B4 11 00 00 04 52 45 43 54 18 00 03 10 34 12  ......RECT....4.
  000014C0: 00 00 11 44 33 44 50 49 58 45 4C 53 48 41 44 45  ...D3DPIXELSHADE
  000014D0: 52 44 45 46 13 00 03 10 CB 13 00 00 0C 44 53 53  RDEF.........DSS
  000014E0: 54 52 45 41 4D 44 45 53 43 17 00 03 10 CA 14 00  TREAMDESC.......
  000014F0: 00 10 4C 50 43 44 53 49 33 44 4C 32 42 55 46 46  ..LPCDSI3DL2BUFF
  00001500: 45 52 16 00 03 10 80 12 00 00 0F 5F 44 33 44 4C  ER........._D3DL
  00001510: 4F 43 4B 45 44 5F 52 45 43 54 19 00 03 10 34 12  OCKED_RECT....4.
  00001520: 00 00 12 5F 44 33 44 50 69 78 65 6C 53 68 61 64  ..._D3DPixelShad
  00001530: 65 72 44 65 66 1A 00 03 10 C9 14 00 00 13 5F 44  erDef........._D
  00001540: 53 49 33 44 4C 32 4F 42 53 54 52 55 43 54 49 4F  SI3DL2OBSTRUCTIO
  00001550: 4E 0E 00 03 10 AF 13 00 00 07 5F 44 53 43 41 50  N........._DSCAP
  00001560: 53 16 00 03 10 C7 14 00 00 0F 4C 50 43 58 4D 45  S.........LPCXME
  00001570: 44 49 41 50 41 43 4B 45 54 13 00 03 10 AD 13 00  DIAPACKET.......
  00001580: 00 0C 49 44 69 72 65 63 74 53 6F 75 6E 64 0C 00  ..IDirectSound..
  00001590: 03 10 05 10 00 00 05 5F 47 55 49 44 0F 00 03 10  ......._GUID....
  000015A0: 66 12 00 00 08 5F 44 33 44 54 49 4C 45 0E 00 03  f...._D3DTILE...
  000015B0: 10 B4 11 00 00 07 74 61 67 52 45 43 54 17 00 03  ......tagRECT...
  000015C0: 10 3C 12 00 00 10 44 33 44 54 52 49 50 41 54 43  .<....D3DTRIPATC
  000015D0: 48 5F 49 4E 46 4F 10 00 03 10 68 12 00 00 09 44  H_INFO....h....D
  000015E0: 33 44 4D 45 4D 4F 52 59 11 00 03 10 54 13 00 00  3DMEMORY....T...
  000015F0: 0A 5F 44 33 44 56 45 43 54 4F 52 18 00 03 10 D3  ._D3DVECTOR.....
  00001600: 13 00 00 11 5F 44 53 45 46 46 45 43 54 49 4D 41  ...._DSEFFECTIMA
  00001610: 47 45 4C 4F 43 13 00 03 10 C6 13 00 00 0C 44 53  GELOC.........DS
  00001620: 42 55 46 46 45 52 44 45 53 43 14 00 03 10 27 14  BUFFERDESC....'.
  00001630: 00 00 0D 5F 44 53 46 49 4C 54 45 52 44 45 53 43  ..._DSFILTERDESC
  00001640: 16 00 03 10 7E 12 00 00 0F 44 33 44 53 55 52 46  ....~....D3DSURF
  00001650: 41 43 45 5F 44 45 53 43 16 00 03 10 C4 14 00 00  ACE_DESC........
  00001660: 0F 4C 50 43 44 53 33 44 4C 49 53 54 45 4E 45 52  .LPCDS3DLISTENER
  00001670: 13 00 03 10 27 14 00 00 0C 44 53 46 49 4C 54 45  ....'....DSFILTE
  00001680: 52 44 45 53 43 13 00 03 10 B1 14 00 00 0C 58 4D  RDESC.........XM
  00001690: 45 44 49 41 50 41 43 4B 45 54 19 00 03 10 1E 14  EDIAPACKET......
  000016A0: 00 00 12 49 44 69 72 65 63 74 53 6F 75 6E 64 42  ...IDirectSoundB
  000016B0: 75 66 66 65 72 11 00 03 10 2C 14 00 00 0A 5F 44  uffer....,...._D
  000016C0: 53 4D 49 58 42 49 4E 53 10 00 03 10 3C 10 00 00  SMIXBINS....<...
  000016D0: 09 5F 44 33 44 43 41 50 53 38 13 00 03 10 26 12  ._D3DCAPS8....&.
  000016E0: 00 00 0C 44 33 44 4C 49 47 48 54 54 59 50 45 16  ...D3DLIGHTTYPE.
  000016F0: 00 03 10 FE 11 00 00 0F 44 33 44 56 65 72 74 65  ........D3DVerte
  00001700: 78 42 75 66 66 65 72 1C 00 03 10 91 12 00 00 15  xBuffer.........
  00001710: 5F 44 33 44 56 45 52 54 45 58 42 55 46 46 45 52  _D3DVERTEXBUFFER
  00001720: 5F 44 45 53 43 1A 00 03 10 93 12 00 00 13 44 33  _DESC.........D3
  00001730: 44 49 4E 44 45 58 42 55 46 46 45 52 5F 44 45 53  DINDEXBUFFER_DES
  00001740: 43 1A 00 03 10 22 00 00 00 13 44 33 44 4D 55 4C  C...."....D3DMUL
  00001750: 54 49 53 41 4D 50 4C 45 5F 54 59 50 45 10 00 03  TISAMPLE_TYPE...
  00001760: 10 2E 13 00 00 09 44 33 44 58 50 4C 41 4E 45 0A  ......D3DXPLANE.
  00001770: 00 03 10 74 00 00 00 03 49 4E 54 16 00 03 10 3A  ...t....INT....:
  00001780: 10 00 00 0F 5F 44 33 44 44 49 53 50 4C 41 59 4D  ...._D3DDISPLAYM
  00001790: 4F 44 45 0F 00 03 10 34 10 00 00 08 44 69 72 65  ODE....4....Dire
  000017A0: 63 74 33 44 16 00 03 10 C3 14 00 00 0F 4C 50 43  ct3D.........LPC
  000017B0: 44 53 42 55 46 46 45 52 44 45 53 43 1F 00 03 10  DSBUFFERDESC....
  000017C0: 31 12 00 00 18 44 33 44 56 45 52 54 45 58 41 54  1....D3DVERTEXAT
  000017D0: 54 52 49 42 55 54 45 46 4F 52 4D 41 54 1A 00 03  TRIBUTEFORMAT...
  000017E0: 10 C2 14 00 00 13 5F 44 53 4D 49 58 42 49 4E 56  ......_DSMIXBINV
  000017F0: 4F 4C 55 4D 45 50 41 49 52 0B 00 03 10 05 10 00  OLUMEPAIR.......
  00001800: 00 04 47 55 49 44 14 00 03 10 62 12 00 00 0D 44  ..GUID....b....D
  00001810: 33 44 50 75 73 68 42 75 66 66 65 72 1A 00 03 10  3DPushBuffer....
  00001820: 13 12 00 00 13 44 33 44 43 4F 50 59 52 45 43 54  .....D3DCOPYRECT
  00001830: 52 4F 50 53 54 41 54 45 10 00 03 10 2C 14 00 00  ROPSTATE....,...
  00001840: 09 44 53 4D 49 58 42 49 4E 53 0F 00 03 10 73 14  .DSMIXBINS....s.
  00001850: 00 00 08 58 47 42 75 66 66 65 72 18 00 03 10 C0  ...XGBuffer.....
  00001860: 14 00 00 11 44 33 44 50 69 78 65 6C 43 6F 6E 74  ....D3DPixelCont
  00001870: 61 69 6E 65 72 14 00 03 10 D7 13 00 00 0D 5F 44  ainer........._D
  00001880: 53 33 44 4C 49 53 54 45 4E 45 52 13 00 03 10 C8  S3DLISTENER.....
  00001890: 11 00 00 0C 44 33 44 47 41 4D 4D 41 52 41 4D 50  ....D3DGAMMARAMP
  000018A0: 25 00 03 10 B2 11 00 00 1E 5F 44 33 44 44 45 56  %........_D3DDEV
  000018B0: 49 43 45 5F 43 52 45 41 54 49 4F 4E 5F 50 41 52  ICE_CREATION_PAR
  000018C0: 41 4D 45 54 45 52 53 16 00 03 10 BE 14 00 00 0F  AMETERS.........
  000018D0: 50 53 5F 49 4E 50 55 54 4D 41 50 50 49 4E 47 15  PS_INPUTMAPPING.
  000018E0: 00 03 10 BC 14 00 00 0E 4C 50 57 41 56 45 46 4F  ........LPWAVEFO
  000018F0: 52 4D 41 54 45 58 1D 00 03 10 38 10 00 00 16 44  RMATEX....8....D
  00001900: 33 44 41 44 41 50 54 45 52 5F 49 44 45 4E 54 49  3DADAPTER_IDENTI
  00001910: 46 49 45 52 38 1A 00 03 10 B6 10 00 00 13 5F 44  FIER8........._D
  00001920: 33 44 52 45 4E 44 45 52 53 54 41 54 45 54 59 50  3DRENDERSTATETYP
  00001930: 45 11 00 03 10 22 14 00 00 0A 5F 44 53 4C 46 4F  E...."...._DSLFO
  00001940: 44 45 53 43 16 00 03 10 BB 14 00 00 0F 4C 50 43  DESC.........LPC
  00001950: 57 41 56 45 46 4F 52 4D 41 54 45 58 14 00 03 10  WAVEFORMATEX....
  00001960: 56 13 00 00 0D 44 33 44 43 4F 4C 4F 52 56 41 4C  V....D3DCOLORVAL
  00001970: 55 45 0F 00 03 10 11 12 00 00 08 74 61 67 50 4F  UE.........tagPO
  00001980: 49 4E 54 1A 00 03 10 BA 14 00 00 13 4C 50 43 44  INT.........LPCD
  00001990: 53 45 46 46 45 43 54 49 4D 41 47 45 4C 4F 43 0E  SEFFECTIMAGELOC.
  000019A0: 00 03 10 12 00 00 00 07 48 52 45 53 55 4C 54 12  ........HRESULT.
  000019B0: 00 03 10 B9 14 00 00 0B 44 53 45 46 46 45 43 54  ........DSEFFECT
  000019C0: 4D 41 50 0B 00 03 10 75 00 00 00 04 55 49 4E 54  MAP....u....UINT
  000019D0: 14 00 03 10 C6 13 00 00 0D 5F 44 53 42 55 46 46  ........._DSBUFF
  000019E0: 45 52 44 45 53 43 18 00 03 10 B7 14 00 00 11 4C  ERDESC.........L
  000019F0: 50 43 44 53 45 4E 56 45 4C 4F 50 45 44 45 53 43  PCDSENVELOPEDESC
  00001A00: 11 00 03 10 D2 11 00 00 0A 44 33 44 54 65 78 74  .........D3DText
  00001A10: 75 72 65 0F 00 03 10 45 12 00 00 08 44 33 44 46  ure....E....D3DF
  00001A20: 69 78 75 70 14 00 03 10 B1 14 00 00 0D 5F 58 4D  ixup........._XM
  00001A30: 45 44 49 41 50 41 43 4B 45 54 17 00 03 10 CF 10  EDIAPACKET......
  00001A40: 00 00 10 44 33 44 50 52 49 4D 49 54 49 56 45 54  ...D3DPRIMITIVET
  00001A50: 59 50 45                                         YPE

SECTION HEADER #3
XGRPH_RD name
       0 physical address
       0 virtual address
      42 size of raw data
    25DD file pointer to raw data (000025DD to 0000261E)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
40401040 flags
         Initialized Data
         COMDAT; sym= "unsigned char const * const XGRAPHICS::g_TextureFormat" (?g_TextureFormat@XGRAPHICS@@3QBEB)
         8 byte align
         Read Only

RAW DATA #3
  00000000: 09 09 11 91 11 91 A1 A1 00 00 00 09 04 00 08 08  ................
  00000010: 12 92 A2 0A 00 00 12 12 00 09 11 0A 92 12 A2 0A  ................
  00000020: 12 00 00 00 20 20 00 11 11 11 61 61 51 51 62 62  ....  ....aaQQbb
  00000030: 52 52 11 21 00 12 00 12 11 11 21 21 21 12 12 22  RR.!......!!!.."
  00000040: 22 22                                            ""

SECTION HEADER #4
XGRPH_RD name
       0 physical address
       0 virtual address
      58 size of raw data
    261F file pointer to raw data (0000261F to 00002676)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
40401040 flags
         Initialized Data
         COMDAT; sym= _D3DDIRTYFROMTEXTURESTATE
         8 byte align
         Read Only

RAW DATA #4
  00000000: 0F 00 00 00 0F 00 00 00 0F 00 00 00 0F 00 00 00  ................
  00000010: 0F 00 00 00 0F 00 00 00 0F 00 00 00 0F 00 00 00  ................
  00000020: 0F 00 00 00 0F 00 00 00 0F 00 00 00 0F 00 00 00  ................
  00000030: 0F 48 00 00 00 08 00 00 00 08 00 00 00 08 00 00  .H..............
  00000040: 00 08 00 00 00 08 00 00 00 08 00 00 00 08 00 00  ................
  00000050: 00 08 00 00 00 04 00 00                          ........

SECTION HEADER #5
XGRPH_RD name
       0 physical address
       0 virtual address
      8C size of raw data
    2677 file pointer to raw data (00002677 to 00002702)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
40401040 flags
         Initialized Data
         COMDAT; sym= _D3DDIRTYFROMRENDERSTATE
         8 byte align
         Read Only

RAW DATA #5
  00000000: 00 20 00 00 00 20 00 00 00 20 00 00 00 20 00 00  . ... ... ... ..
  00000010: 00 20 00 00 00 20 00 00 0F 00 00 00 0F 00 00 00  . ... ..........
  00000020: 0F 00 00 00 0F 00 00 00 00 12 00 00 00 30 00 00  .............0..
  00000030: 00 10 00 00 00 10 00 00 00 10 00 00 00 10 00 00  ................
  00000040: 00 10 00 00 00 10 00 00 00 10 00 00 00 10 00 00  ................
  00000050: 00 10 00 00 00 10 00 00 00 10 00 00 00 10 00 00  ................
  00000060: 00 01 00 00 00 01 00 00 00 09 00 00 00 01 00 00  ................
  00000070: 00 01 00 00 00 01 00 00 00 01 00 00 00 01 00 00  ................
  00000080: 00 00 00 00 00 00 00 00 00 00 00 00              ............

SECTION HEADER #6
XGRPH_RD name
       0 physical address
       0 virtual address
      10 size of raw data
    2703 file pointer to raw data (00002703 to 00002712)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
40301040 flags
         Initialized Data
         COMDAT; sym= _D3DTEXTUREDIRECTENCODE
         4 byte align
         Read Only

RAW DATA #6
  00000000: 00 1B 08 00 40 1B 08 00 80 1B 08 00 C0 1B 08 00  ....@...........

SECTION HEADER #7
XGRPH_RD name
       0 physical address
       0 virtual address
     148 size of raw data
    2713 file pointer to raw data (00002713 to 0000285A)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
40401040 flags
         Initialized Data
         COMDAT; sym= _D3DSIMPLERENDERSTATEENCODE
         8 byte align
         Read Only

RAW DATA #7
  00000000: 60 02 04 00 64 02 04 00 68 02 04 00 6C 02 04 00  `...d...h...l...
  00000010: 70 02 04 00 74 02 04 00 78 02 04 00 7C 02 04 00  p...t...x...|...
  00000020: 88 02 04 00 8C 02 04 00 60 0A 04 00 64 0A 04 00  ........`...d...
  00000030: 68 0A 04 00 6C 0A 04 00 70 0A 04 00 74 0A 04 00  h...l...p...t...
  00000040: 78 0A 04 00 7C 0A 04 00 80 0A 04 00 84 0A 04 00  x...|...........
  00000050: 88 0A 04 00 8C 0A 04 00 90 0A 04 00 94 0A 04 00  ................
  00000060: 98 0A 04 00 9C 0A 04 00 A0 0A 04 00 A4 0A 04 00  ................
  00000070: A8 0A 04 00 AC 0A 04 00 B0 0A 04 00 B4 0A 04 00  ................
  00000080: B8 0A 04 00 BC 0A 04 00 C0 0A 04 00 C4 0A 04 00  ................
  00000090: C8 0A 04 00 CC 0A 04 00 D0 0A 04 00 D4 0A 04 00  ................
  000000A0: D8 0A 04 00 DC 0A 04 00 F8 17 04 00 20 1E 04 00  ............ ...
  000000B0: 24 1E 04 00 40 1E 04 00 44 1E 04 00 48 1E 04 00  $...@...D...H...
  000000C0: 4C 1E 04 00 50 1E 04 00 54 1E 04 00 58 1E 04 00  L...P...T...X...
  000000D0: 5C 1E 04 00 60 1E 04 00 90 1D 04 00 74 1E 04 00  \...`.......t...
  000000E0: 78 1E 04 00 54 03 04 00 3C 03 04 00 04 03 04 00  x...T...<.......
  000000F0: 00 03 04 00 40 03 04 00 44 03 04 00 48 03 04 00  ....@...D...H...
  00000100: 5C 03 04 00 10 03 04 00 7C 03 04 00 58 03 04 00  \.......|...X...
  00000110: 74 03 04 00 78 03 04 00 64 03 04 00 68 03 04 00  t...x...d...h...
  00000120: 6C 03 04 00 60 03 04 00 50 03 04 00 4C 03 04 00  l...`...P...L...
  00000130: F8 09 04 00 84 03 04 00 88 03 04 00 30 03 04 00  ............0...
  00000140: 34 03 04 00 38 03 04 00                          4...8...

SECTION HEADER #8
XGRPH_RD name
       0 physical address
       0 virtual address
      58 size of raw data
    285B file pointer to raw data (0000285B to 000028B2)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
40401040 flags
         Initialized Data
         COMDAT; sym= _D3DPRIMITIVETOVERTEXCOUNT
         8 byte align
         Read Only

RAW DATA #8
  00000000: 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  ................
  00000010: 02 00 00 00 00 00 00 00 01 00 00 00 01 00 00 00  ................
  00000020: 01 00 00 00 01 00 00 00 03 00 00 00 00 00 00 00  ................
  00000030: 01 00 00 00 02 00 00 00 01 00 00 00 02 00 00 00  ................
  00000040: 04 00 00 00 00 00 00 00 02 00 00 00 02 00 00 00  ................
  00000050: 00 00 00 00 00 00 00 00                          ........

SECTION HEADER #9
 .XBLD$V name
       0 physical address
       0 virtual address
      10 size of raw data
    28B3 file pointer to raw data (000028B3 to 000028C2)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
C0301040 flags
         Initialized Data
         COMDAT; sym= _XGraphicsBuildNumber
         4 byte align
         Read Write

RAW DATA #9
  00000000: 58 47 52 41 50 48 43 00 01 00 00 00 30 11 01 40  XGRAPHC.....0..@

SECTION HEADER #A
   XGRPH name
       0 physical address
       0 virtual address
      11 size of raw data
    28C3 file pointer to raw data (000028C3 to 000028D3)
    28D4 file pointer to relocation table
    28DE file pointer to line numbers
       1 number of relocations
       3 number of line numbers
60101020 flags
         Code
         COMDAT; sym= "bool __stdcall XGRAPHICS::IsSwizzledD3DFORMAT(enum _D3DFORMAT)" (?IsSwizzledD3DFORMAT@XGRAPHICS@@YG_NW4_D3DFORMAT@@@Z)
         1 byte align
         Execute Read

RAW DATA #A
  00000000: 8B 44 24 04 0F B6 80 00 00 00 00 83 E0 01 C2 04  .D$.............
  00000010: 00                                               .

RELOCATIONS #A
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000007  DIR32                      00000000         9  ?g_TextureFormat@XGRAPHICS@@3QBEB (unsigned char const * const XGRAPHICS::g_TextureFormat)

LINENUMBERS #A

 Symbol index:       23 Base line number:    88
 Symbol name = ?IsSwizzledD3DFORMAT@XGRAPHICS@@YG_NW4_D3DFORMAT@@@Z (bool __stdcall XGRAPHICS::IsSwizzledD3DFORMAT(enum _D3DFORMAT))
 00000000(   89)  0000000E(   90)

SECTION HEADER #B
.debug$S name
       0 physical address
       0 virtual address
      5D size of raw data
    28F0 file pointer to raw data (000028F0 to 0000294C)
    294D file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #B
  00000000: 44 00 0B 10 00 00 00 00 00 00 00 00 00 00 00 00  D...............
  00000010: 11 00 00 00 00 00 00 00 0E 00 00 00 94 14 00 00  ................
  00000020: 00 00 00 00 00 00 00 1E 58 47 52 41 50 48 49 43  ........XGRAPHIC
  00000030: 53 3A 3A 49 73 53 77 69 7A 7A 6C 65 64 44 33 44  S::IsSwizzledD3D
  00000040: 46 4F 52 4D 41 54 11 00 06 10 04 00 00 00 1B 10  FORMAT..........
  00000050: 00 00 06 46 6F 72 6D 61 74 02 00 06 00           ...Format....

RELOCATIONS #B
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000020  SECREL                     00000000        23  ?IsSwizzledD3DFORMAT@XGRAPHICS@@YG_NW4_D3DFORMAT@@@Z (bool __stdcall XGRAPHICS::IsSwizzledD3DFORMAT(enum _D3DFORMAT))
 00000024  SECTION                        0000        23  ?IsSwizzledD3DFORMAT@XGRAPHICS@@YG_NW4_D3DFORMAT@@@Z (bool __stdcall XGRAPHICS::IsSwizzledD3DFORMAT(enum _D3DFORMAT))

SECTION HEADER #C
.debug$F name
       0 physical address
       0 virtual address
      10 size of raw data
    2961 file pointer to raw data (00002961 to 00002970)
    2971 file pointer to relocation table
       0 file pointer to line numbers
       1 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #C
  00000000: 00 00 00 00 11 00 00 00 00 00 00 00 01 00 00 00  ................

FPO Data (1)
                                             Use Has  Frame
 RVA      Proc Size   Locals  Regs   Prolog  BP  SEH  Type   Params
 00000000        17        0     0        0   N   N    fpo        4

RELOCATIONS #C
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000000  DIR32NB                    00000000        23  ?IsSwizzledD3DFORMAT@XGRAPHICS@@YG_NW4_D3DFORMAT@@@Z (bool __stdcall XGRAPHICS::IsSwizzledD3DFORMAT(enum _D3DFORMAT))

SECTION HEADER #D
   XGRPH name
       0 physical address
       0 virtual address
      1C size of raw data
    297B file pointer to raw data (0000297B to 00002996)
       0 file pointer to relocation table
    2997 file pointer to line numbers
       0 number of relocations
       5 number of line numbers
60101020 flags
         Code
         COMDAT; sym= "bool __stdcall XGRAPHICS::IsCompressedD3DFORMAT(unsigned long)" (?IsCompressedD3DFORMAT@XGRAPHICS@@YG_NK@Z)
         1 byte align
         Execute Read

RAW DATA #D
  00000000: 8B 44 24 04 83 F8 0C 74 0E 83 F8 0D 76 05 83 F8  .D$....t....v...
  00000010: 0F 76 04 32 C0 EB 02 B0 01 C2 04 00              .v.2........

LINENUMBERS #D

 Symbol index:       30 Base line number:    95
 Symbol name = ?IsCompressedD3DFORMAT@XGRAPHICS@@YG_NK@Z (bool __stdcall XGRAPHICS::IsCompressedD3DFORMAT(unsigned long))
 00000000(   97)  00000013(  104)  00000017(  101)  00000019(  105)

SECTION HEADER #E
.debug$S name
       0 physical address
       0 virtual address
      5F size of raw data
    29B5 file pointer to raw data (000029B5 to 00002A13)
    2A14 file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #E
  00000000: 46 00 0B 10 00 00 00 00 00 00 00 00 00 00 00 00  F...............
  00000010: 1C 00 00 00 00 00 00 00 19 00 00 00 95 14 00 00  ................
  00000020: 00 00 00 00 00 00 00 20 58 47 52 41 50 48 49 43  ....... XGRAPHIC
  00000030: 53 3A 3A 49 73 43 6F 6D 70 72 65 73 73 65 64 44  S::IsCompressedD
  00000040: 33 44 46 4F 52 4D 41 54 11 00 06 10 04 00 00 00  3DFORMAT........
  00000050: 22 00 00 00 06 46 6F 72 6D 61 74 02 00 06 00     "....Format....

RELOCATIONS #E
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000020  SECREL                     00000000        30  ?IsCompressedD3DFORMAT@XGRAPHICS@@YG_NK@Z (bool __stdcall XGRAPHICS::IsCompressedD3DFORMAT(unsigned long))
 00000024  SECTION                        0000        30  ?IsCompressedD3DFORMAT@XGRAPHICS@@YG_NK@Z (bool __stdcall XGRAPHICS::IsCompressedD3DFORMAT(unsigned long))

SECTION HEADER #F
.debug$F name
       0 physical address
       0 virtual address
      10 size of raw data
    2A28 file pointer to raw data (00002A28 to 00002A37)
    2A38 file pointer to relocation table
       0 file pointer to line numbers
       1 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #F
  00000000: 00 00 00 00 1C 00 00 00 00 00 00 00 01 00 00 00  ................

FPO Data (1)
                                             Use Has  Frame
 RVA      Proc Size   Locals  Regs   Prolog  BP  SEH  Type   Params
 00000000        28        0     0        0   N   N    fpo        4

RELOCATIONS #F
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000000  DIR32NB                    00000000        30  ?IsCompressedD3DFORMAT@XGRAPHICS@@YG_NK@Z (bool __stdcall XGRAPHICS::IsCompressedD3DFORMAT(unsigned long))

SECTION HEADER #10
   XGRPH name
       0 physical address
       0 virtual address
      11 size of raw data
    2A42 file pointer to raw data (00002A42 to 00002A52)
    2A53 file pointer to relocation table
    2A5D file pointer to line numbers
       1 number of relocations
       3 number of line numbers
60101020 flags
         Code
         COMDAT; sym= "int __stdcall XGRAPHICS::IsValidDepthBufferD3DFORMAT(unsigned long)" (?IsValidDepthBufferD3DFORMAT@XGRAPHICS@@YGHK@Z)
         1 byte align
         Execute Read

RAW DATA #10
  00000000: 8B 44 24 04 0F B6 80 00 00 00 00 83 E0 40 C2 04  .D$..........@..
  00000010: 00                                               .

RELOCATIONS #10
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000007  DIR32                      00000000         9  ?g_TextureFormat@XGRAPHICS@@3QBEB (unsigned char const * const XGRAPHICS::g_TextureFormat)

LINENUMBERS #10

 Symbol index:       3D Base line number:   110
 Symbol name = ?IsValidDepthBufferD3DFORMAT@XGRAPHICS@@YGHK@Z (int __stdcall XGRAPHICS::IsValidDepthBufferD3DFORMAT(unsigned long))
 00000000(  111)  0000000E(  112)

SECTION HEADER #11
.debug$S name
       0 physical address
       0 virtual address
      65 size of raw data
    2A6F file pointer to raw data (00002A6F to 00002AD3)
    2AD4 file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #11
  00000000: 4C 00 0B 10 00 00 00 00 00 00 00 00 00 00 00 00  L...............
  00000010: 11 00 00 00 00 00 00 00 0E 00 00 00 96 14 00 00  ................
  00000020: 00 00 00 00 00 00 00 26 58 47 52 41 50 48 49 43  .......&XGRAPHIC
  00000030: 53 3A 3A 49 73 56 61 6C 69 64 44 65 70 74 68 42  S::IsValidDepthB
  00000040: 75 66 66 65 72 44 33 44 46 4F 52 4D 41 54 11 00  ufferD3DFORMAT..
  00000050: 06 10 04 00 00 00 22 00 00 00 06 46 6F 72 6D 61  ......"....Forma
  00000060: 74 02 00 06 00                                   t....

RELOCATIONS #11
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000020  SECREL                     00000000        3D  ?IsValidDepthBufferD3DFORMAT@XGRAPHICS@@YGHK@Z (int __stdcall XGRAPHICS::IsValidDepthBufferD3DFORMAT(unsigned long))
 00000024  SECTION                        0000        3D  ?IsValidDepthBufferD3DFORMAT@XGRAPHICS@@YGHK@Z (int __stdcall XGRAPHICS::IsValidDepthBufferD3DFORMAT(unsigned long))

SECTION HEADER #12
.debug$F name
       0 physical address
       0 virtual address
      10 size of raw data
    2AE8 file pointer to raw data (00002AE8 to 00002AF7)
    2AF8 file pointer to relocation table
       0 file pointer to line numbers
       1 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #12
  00000000: 00 00 00 00 11 00 00 00 00 00 00 00 01 00 00 00  ................

FPO Data (1)
                                             Use Has  Frame
 RVA      Proc Size   Locals  Regs   Prolog  BP  SEH  Type   Params
 00000000        17        0     0        0   N   N    fpo        4

RELOCATIONS #12
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000000  DIR32NB                    00000000        3D  ?IsValidDepthBufferD3DFORMAT@XGRAPHICS@@YGHK@Z (int __stdcall XGRAPHICS::IsValidDepthBufferD3DFORMAT(unsigned long))

SECTION HEADER #13
   XGRPH name
       0 physical address
       0 virtual address
      11 size of raw data
    2B02 file pointer to raw data (00002B02 to 00002B12)
    2B13 file pointer to relocation table
    2B1D file pointer to line numbers
       1 number of relocations
       3 number of line numbers
60101020 flags
         Code
         COMDAT; sym= "unsigned long __stdcall XGRAPHICS::BitsPerPixelOfD3DFORMAT(unsigned long)" (?BitsPerPixelOfD3DFORMAT@XGRAPHICS@@YGKK@Z)
         1 byte align
         Execute Read

RAW DATA #13
  00000000: 8B 44 24 04 0F B6 80 00 00 00 00 83 E0 3C C2 04  .D$..........<..
  00000010: 00                                               .

RELOCATIONS #13
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000007  DIR32                      00000000         9  ?g_TextureFormat@XGRAPHICS@@3QBEB (unsigned char const * const XGRAPHICS::g_TextureFormat)

LINENUMBERS #13

 Symbol index:       4A Base line number:   117
 Symbol name = ?BitsPerPixelOfD3DFORMAT@XGRAPHICS@@YGKK@Z (unsigned long __stdcall XGRAPHICS::BitsPerPixelOfD3DFORMAT(unsigned long))
 00000000(  118)  0000000E(  119)

SECTION HEADER #14
.debug$S name
       0 physical address
       0 virtual address
      61 size of raw data
    2B2F file pointer to raw data (00002B2F to 00002B8F)
    2B90 file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #14
  00000000: 48 00 0B 10 00 00 00 00 00 00 00 00 00 00 00 00  H...............
  00000010: 11 00 00 00 00 00 00 00 0E 00 00 00 97 14 00 00  ................
  00000020: 00 00 00 00 00 00 00 22 58 47 52 41 50 48 49 43  ......."XGRAPHIC
  00000030: 53 3A 3A 42 69 74 73 50 65 72 50 69 78 65 6C 4F  S::BitsPerPixelO
  00000040: 66 44 33 44 46 4F 52 4D 41 54 11 00 06 10 04 00  fD3DFORMAT......
  00000050: 00 00 22 00 00 00 06 46 6F 72 6D 61 74 02 00 06  .."....Format...
  00000060: 00                                               .

RELOCATIONS #14
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000020  SECREL                     00000000        4A  ?BitsPerPixelOfD3DFORMAT@XGRAPHICS@@YGKK@Z (unsigned long __stdcall XGRAPHICS::BitsPerPixelOfD3DFORMAT(unsigned long))
 00000024  SECTION                        0000        4A  ?BitsPerPixelOfD3DFORMAT@XGRAPHICS@@YGKK@Z (unsigned long __stdcall XGRAPHICS::BitsPerPixelOfD3DFORMAT(unsigned long))

SECTION HEADER #15
.debug$F name
       0 physical address
       0 virtual address
      10 size of raw data
    2BA4 file pointer to raw data (00002BA4 to 00002BB3)
    2BB4 file pointer to relocation table
       0 file pointer to line numbers
       1 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #15
  00000000: 00 00 00 00 11 00 00 00 00 00 00 00 01 00 00 00  ................

FPO Data (1)
                                             Use Has  Frame
 RVA      Proc Size   Locals  Regs   Prolog  BP  SEH  Type   Params
 00000000        17        0     0        0   N   N    fpo        4

RELOCATIONS #15
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000000  DIR32NB                    00000000        4A  ?BitsPerPixelOfD3DFORMAT@XGRAPHICS@@YGKK@Z (unsigned long __stdcall XGRAPHICS::BitsPerPixelOfD3DFORMAT(unsigned long))

SECTION HEADER #16
   XGRPH name
       0 physical address
       0 virtual address
       C size of raw data
    2BBE file pointer to raw data (00002BBE to 00002BC9)
       0 file pointer to relocation table
    2BCA file pointer to line numbers
       0 number of relocations
       3 number of line numbers
60101020 flags
         Code
         COMDAT; sym= "unsigned long __fastcall XGRAPHICS::Log2(unsigned long)" (?Log2@XGRAPHICS@@YIKK@Z)
         1 byte align
         Execute Read

RAW DATA #16
  00000000: 51 89 4C 24 00 0F BC 44 24 00 59 C3              Q.L$...D$.Y.

LINENUMBERS #16

 Symbol index:       57 Base line number:   125
 Symbol name = ?Log2@XGRAPHICS@@YIKK@Z (unsigned long __fastcall XGRAPHICS::Log2(unsigned long))
 00000005(  126)  0000000A(  127)

SECTION HEADER #17
.debug$S name
       0 physical address
       0 virtual address
      4B size of raw data
    2BDC file pointer to raw data (00002BDC to 00002C26)
    2C27 file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #17
  00000000: 35 00 0B 10 00 00 00 00 00 00 00 00 00 00 00 00  5...............
  00000010: 0C 00 00 00 05 00 00 00 0A 00 00 00 98 14 00 00  ................
  00000020: 00 00 00 00 00 00 00 0F 58 47 52 41 50 48 49 43  ........XGRAPHIC
  00000030: 53 3A 3A 4C 6F 67 32 0E 00 01 10 22 00 00 00 12  S::Log2...."....
  00000040: 00 05 56 61 6C 75 65 02 00 06 00                 ..Value....

RELOCATIONS #17
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000020  SECREL                     00000000        57  ?Log2@XGRAPHICS@@YIKK@Z (unsigned long __fastcall XGRAPHICS::Log2(unsigned long))
 00000024  SECTION                        0000        57  ?Log2@XGRAPHICS@@YIKK@Z (unsigned long __fastcall XGRAPHICS::Log2(unsigned long))

SECTION HEADER #18
.debug$F name
       0 physical address
       0 virtual address
      10 size of raw data
    2C3B file pointer to raw data (00002C3B to 00002C4A)
    2C4B file pointer to relocation table
       0 file pointer to line numbers
       1 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #18
  00000000: 00 00 00 00 0C 00 00 00 01 00 00 00 00 00 05 00  ................

FPO Data (1)
                                             Use Has  Frame
 RVA      Proc Size   Locals  Regs   Prolog  BP  SEH  Type   Params
 00000000        12        4     0        5   N   N    fpo        0

RELOCATIONS #18
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000000  DIR32NB                    00000000        57  ?Log2@XGRAPHICS@@YIKK@Z (unsigned long __fastcall XGRAPHICS::Log2(unsigned long))

SECTION HEADER #19
   XGRPH name
       0 physical address
       0 virtual address
      13 size of raw data
    2C55 file pointer to raw data (00002C55 to 00002C67)
    2C68 file pointer to relocation table
    2C72 file pointer to line numbers
       1 number of relocations
       3 number of line numbers
60101020 flags
         Code
         COMDAT; sym= "unsigned long __stdcall XGRAPHICS::MinimumTextureSizeOfD3DFORMAT(unsigned long)" (?MinimumTextureSizeOfD3DFORMAT@XGRAPHICS@@YGKK@Z)
         1 byte align
         Execute Read

RAW DATA #19
  00000000: FF 74 24 04 E8 00 00 00 00 F6 D8 1B C0 83 E0 02  .t$.............
  00000010: C2 04 00                                         ...

RELOCATIONS #19
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000005  REL32                      00000000        30  ?IsCompressedD3DFORMAT@XGRAPHICS@@YG_NK@Z (bool __stdcall XGRAPHICS::IsCompressedD3DFORMAT(unsigned long))

LINENUMBERS #19

 Symbol index:       64 Base line number:   133
 Symbol name = ?MinimumTextureSizeOfD3DFORMAT@XGRAPHICS@@YGKK@Z (unsigned long __stdcall XGRAPHICS::MinimumTextureSizeOfD3DFORMAT(unsigned long))
 00000000(  134)  00000010(  135)

SECTION HEADER #1A
.debug$S name
       0 physical address
       0 virtual address
      67 size of raw data
    2C84 file pointer to raw data (00002C84 to 00002CEA)
    2CEB file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #1A
  00000000: 4E 00 0B 10 00 00 00 00 00 00 00 00 00 00 00 00  N...............
  00000010: 13 00 00 00 00 00 00 00 10 00 00 00 97 14 00 00  ................
  00000020: 00 00 00 00 00 00 00 28 58 47 52 41 50 48 49 43  .......(XGRAPHIC
  00000030: 53 3A 3A 4D 69 6E 69 6D 75 6D 54 65 78 74 75 72  S::MinimumTextur
  00000040: 65 53 69 7A 65 4F 66 44 33 44 46 4F 52 4D 41 54  eSizeOfD3DFORMAT
  00000050: 11 00 06 10 04 00 00 00 22 00 00 00 06 46 6F 72  ........"....For
  00000060: 6D 61 74 02 00 06 00                             mat....

RELOCATIONS #1A
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000020  SECREL                     00000000        64  ?MinimumTextureSizeOfD3DFORMAT@XGRAPHICS@@YGKK@Z (unsigned long __stdcall XGRAPHICS::MinimumTextureSizeOfD3DFORMAT(unsigned long))
 00000024  SECTION                        0000        64  ?MinimumTextureSizeOfD3DFORMAT@XGRAPHICS@@YGKK@Z (unsigned long __stdcall XGRAPHICS::MinimumTextureSizeOfD3DFORMAT(unsigned long))

SECTION HEADER #1B
.debug$F name
       0 physical address
       0 virtual address
      10 size of raw data
    2CFF file pointer to raw data (00002CFF to 00002D0E)
    2D0F file pointer to relocation table
       0 file pointer to line numbers
       1 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #1B
  00000000: 00 00 00 00 13 00 00 00 00 00 00 00 01 00 00 00  ................

FPO Data (1)
                                             Use Has  Frame
 RVA      Proc Size   Locals  Regs   Prolog  BP  SEH  Type   Params
 00000000        19        0     0        0   N   N    fpo        4

RELOCATIONS #1B
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000000  DIR32NB                    00000000        64  ?MinimumTextureSizeOfD3DFORMAT@XGRAPHICS@@YGKK@Z (unsigned long __stdcall XGRAPHICS::MinimumTextureSizeOfD3DFORMAT(unsigned long))

SECTION HEADER #1C
   XGRPH name
       0 physical address
       0 virtual address
      15 size of raw data
    2D19 file pointer to raw data (00002D19 to 00002D2D)
       0 file pointer to relocation table
    2D2E file pointer to line numbers
       0 number of relocations
       3 number of line numbers
60101020 flags
         Code
         COMDAT; sym= "unsigned long __stdcall XGRAPHICS::CalcPitch(unsigned long,unsigned long)" (?CalcPitch@XGRAPHICS@@YGKKK@Z)
         1 byte align
         Execute Read

RAW DATA #1C
  00000000: 8B 44 24 04 0F AF 44 24 08 C1 E8 03 83 C0 3F 83  .D$...D$......?.
  00000010: E0 C0 C2 08 00                                   .....

LINENUMBERS #1C

 Symbol index:       71 Base line number:   141
 Symbol name = ?CalcPitch@XGRAPHICS@@YGKKK@Z (unsigned long __stdcall XGRAPHICS::CalcPitch(unsigned long,unsigned long))
 00000000(  143)  00000012(  144)

SECTION HEADER #1D
.debug$S name
       0 physical address
       0 virtual address
      68 size of raw data
    2D40 file pointer to raw data (00002D40 to 00002DA7)
    2DA8 file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #1D
  00000000: 3A 00 0B 10 00 00 00 00 00 00 00 00 00 00 00 00  :...............
  00000010: 15 00 00 00 00 00 00 00 12 00 00 00 99 14 00 00  ................
  00000020: 00 00 00 00 00 00 00 14 58 47 52 41 50 48 49 43  ........XGRAPHIC
  00000030: 53 3A 3A 43 61 6C 63 50 69 74 63 68 10 00 06 10  S::CalcPitch....
  00000040: 04 00 00 00 22 00 00 00 05 57 69 64 74 68 14 00  ...."....Width..
  00000050: 06 10 08 00 00 00 22 00 00 00 09 54 65 78 65 6C  ......"....Texel
  00000060: 53 69 7A 65 02 00 06 00                          Size....

RELOCATIONS #1D
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000020  SECREL                     00000000        71  ?CalcPitch@XGRAPHICS@@YGKKK@Z (unsigned long __stdcall XGRAPHICS::CalcPitch(unsigned long,unsigned long))
 00000024  SECTION                        0000        71  ?CalcPitch@XGRAPHICS@@YGKKK@Z (unsigned long __stdcall XGRAPHICS::CalcPitch(unsigned long,unsigned long))

SECTION HEADER #1E
.debug$F name
       0 physical address
       0 virtual address
      10 size of raw data
    2DBC file pointer to raw data (00002DBC to 00002DCB)
    2DCC file pointer to relocation table
       0 file pointer to line numbers
       1 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #1E
  00000000: 00 00 00 00 15 00 00 00 00 00 00 00 02 00 00 00  ................

FPO Data (1)
                                             Use Has  Frame
 RVA      Proc Size   Locals  Regs   Prolog  BP  SEH  Type   Params
 00000000        21        0     0        0   N   N    fpo        8

RELOCATIONS #1E
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000000  DIR32NB                    00000000        71  ?CalcPitch@XGRAPHICS@@YGKKK@Z (unsigned long __stdcall XGRAPHICS::CalcPitch(unsigned long,unsigned long))

SECTION HEADER #1F
   XGRPH name
       0 physical address
       0 virtual address
     19F size of raw data
    2DD6 file pointer to raw data (00002DD6 to 00002F74)
    2F75 file pointer to relocation table
    2FB1 file pointer to line numbers
       6 number of relocations
      25 number of line numbers
60101020 flags
         Code
         COMDAT; sym= "unsigned long __stdcall XGRAPHICS::EncodeFormat(unsigned long,unsigned long,unsigned long,unsigned long,enum _D3DFORMAT,unsigned long,bool,bool,unsigned long *,unsigned long *)" (?EncodeFormat@XGRAPHICS@@YGKKKKKW4_D3DFORMAT@@K_N1PAK2@Z)
         1 byte align
         Execute Read

RAW DATA #1F
  00000000: 55 8B EC 83 EC 14 8B 4D 18 8A 81 00 00 00 00 33  U......M.......3
  00000010: D2 8A D0 53 8A 5D 20 56 57 33 F6 89 75 FC 83 E2  ...S.] VW3..u...
  00000020: 3C A8 01 8B FA 89 7D EC 75 47 51 E8 00 00 00 00  <.....}.uGQ.....
  00000030: 84 C0 75 3D 33 C0 39 45 14 89 45 F4 89 45 F8 75  ..u=3.9E..E..E.u
  00000040: 07 C7 45 14 01 00 00 00 8B 4D 1C 3B C8 8B 45 08  ..E......M.;..E.
  00000050: 75 0E 0F AF F8 C1 EF 03 83 C7 3F 83 E7 C0 8B CF  u.........?.....
  00000060: 89 45 10 8B 45 0C 89 45 F0 0F AF C1 E9 BF 00 00  .E..E..E........
  00000070: 00 8B 4D 08 E8 00 00 00 00 8B 4D 0C 89 45 F8 E8  ..M.......M..E..
  00000080: 00 00 00 00 8B 4D 10 8B F8 89 7D F4 E8 00 00 00  .....M....}.....
  00000090: 00 FF 75 18 83 65 10 00 83 65 F0 00 8B F0 E8 00  ..u..e...e......
  000000A0: 00 00 00 83 7D 14 00 89 45 08 75 1E 3B FE 8B CF  ....}...E.u.;...
  000000B0: 77 02 8B CE 39 4D F8 76 05 8B 4D F8 EB 08 3B FE  w...9M.v..M...;.
  000000C0: 8B CF 77 02 8B CE 41 89 4D 14 8B 4D 14 85 C9 8B  ..w...A.M..M....
  000000D0: 45 F8 89 7D 20 8B FE 74 42 89 4D 0C 8B 55 08 3B  E..} ..tB.M..U.;
  000000E0: C2 76 02 8B D0 8B 4D 08 39 4D 20 76 03 8B 4D 20  .v....M.9M v..M 
  000000F0: 03 CA 33 D2 42 03 CF D3 E2 0F AF 55 EC C1 EA 03  ..3.B......U....
  00000100: 01 55 FC 85 C0 76 01 48 83 7D 20 00 76 03 FF 4D  .U...v.H.} .v..M
  00000110: 20 85 FF 76 01 4F FF 4D 0C 75 C1 84 DB 8B 4D 1C   ..v.O.M.u....M.
  00000120: 74 11 8B 45 FC 83 C0 7F 83 E0 80 8D 04 40 D1 E0  t..E.........@..
  00000130: 89 45 FC C1 E6 04 0B 75 F4 33 C0 C1 E6 04 0B 75  .E.....u.3.....u
  00000140: F8 5F C1 E6 04 0B 75 14 C1 E6 08 0B 75 18 C1 E6  ._....u.....u...
  00000150: 04 38 45 24 0F 95 C0 40 40 0B F0 8B 45 28 C1 E6  .8E$...@@...E(..
  00000160: 04 F6 DB 1B DB 83 E3 04 0B F3 83 CE 09 89 30 8B  ..............0.
  00000170: 45 10 85 C0 5E 5B 74 1A 8B 55 F0 C1 E9 06 49 C1  E...^[t..U....I.
  00000180: E1 0C 4A 0B CA C1 E1 0C 48 0B C8 8B 45 2C 89 08  ..J.....H...E,..
  00000190: EB 06 8B 45 2C 83 20 00 8B 45 FC C9 C2 28 00     ...E,. ..E...(.

RELOCATIONS #1F
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 0000000B  DIR32                      00000000         9  ?g_TextureFormat@XGRAPHICS@@3QBEB (unsigned char const * const XGRAPHICS::g_TextureFormat)
 0000002C  REL32                      00000000        30  ?IsCompressedD3DFORMAT@XGRAPHICS@@YG_NK@Z (bool __stdcall XGRAPHICS::IsCompressedD3DFORMAT(unsigned long))
 00000075  REL32                      00000000        57  ?Log2@XGRAPHICS@@YIKK@Z (unsigned long __fastcall XGRAPHICS::Log2(unsigned long))
 00000080  REL32                      00000000        57  ?Log2@XGRAPHICS@@YIKK@Z (unsigned long __fastcall XGRAPHICS::Log2(unsigned long))
 0000008D  REL32                      00000000        57  ?Log2@XGRAPHICS@@YIKK@Z (unsigned long __fastcall XGRAPHICS::Log2(unsigned long))
 0000009F  REL32                      00000000        64  ?MinimumTextureSizeOfD3DFORMAT@XGRAPHICS@@YGKK@Z (unsigned long __stdcall XGRAPHICS::MinimumTextureSizeOfD3DFORMAT(unsigned long))

LINENUMBERS #1F

 Symbol index:       83 Base line number:    28
 Symbol name = ?EncodeFormat@XGRAPHICS@@YGKKKKKW4_D3DFORMAT@@K_N1PAK2@Z (unsigned long __stdcall XGRAPHICS::EncodeFormat(unsigned long,unsigned long,unsigned long,unsigned long,enum _D3DFORMAT,unsigned long,bool,bool,unsigned long *,unsigned long *))
 00000006(  128)  00000014(  139)  00000034(  200)  00000036(  205)
 00000041(  207)  00000048(  210)  00000052(  212)  00000060(  215)
 00000063(  216)  00000069(  218)  00000071(  141)  00000079(  142)
 00000084(  143)  00000091(  147)  000000A3(  149)  000000AC(  151)
 000000CA(  165)  000000D9(  160)  000000DC(  167)  000000F0(  169)
 00000103(  171)  00000107(  173)  00000108(  176)  0000010E(  178)
 00000111(  181)  00000115(  183)  00000116(  165)  0000011B(  187)
 0000011D(  192)  00000133(  230)  0000016F(  232)  00000178(  236)
 00000190(  243)  00000192(  245)  00000198(  248)  0000019B(  249)

SECTION HEADER #20
.debug$S name
       0 physical address
       0 virtual address
     1B2 size of raw data
    308F file pointer to raw data (0000308F to 00003240)
    3241 file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #20
  00000000: 3D 00 0B 10 00 00 00 00 00 00 00 00 00 00 00 00  =...............
  00000010: 9F 01 00 00 19 00 00 00 9B 01 00 00 9B 14 00 00  ................
  00000020: 00 00 00 00 00 00 01 17 58 47 52 41 50 48 49 43  ........XGRAPHIC
  00000030: 53 3A 3A 45 6E 63 6F 64 65 46 6F 72 6D 61 74 10  S::EncodeFormat.
  00000040: 00 06 10 08 00 00 00 22 00 00 00 05 57 69 64 74  ......."....Widt
  00000050: 68 11 00 06 10 0C 00 00 00 22 00 00 00 06 48 65  h........"....He
  00000060: 69 67 68 74 10 00 06 10 10 00 00 00 22 00 00 00  ight........"...
  00000070: 05 44 65 70 74 68 11 00 06 10 14 00 00 00 22 00  .Depth........".
  00000080: 00 00 06 4C 65 76 65 6C 73 14 00 06 10 18 00 00  ...Levels.......
  00000090: 00 1B 10 00 00 09 44 33 44 46 6F 72 6D 61 74 10  ......D3DFormat.
  000000A0: 00 06 10 1C 00 00 00 22 00 00 00 05 50 69 74 63  ......."....Pitc
  000000B0: 68 14 00 06 10 20 00 00 00 70 00 00 00 09 69 73  h.... ...p....is
  000000C0: 43 75 62 65 4D 61 70 13 00 06 10 24 00 00 00 70  CubeMap....$...p
  000000D0: 00 00 00 08 69 73 56 6F 6C 75 6D 65 12 00 06 10  ....isVolume....
  000000E0: 28 00 00 00 22 04 00 00 07 70 46 6F 72 6D 61 74  (..."....pFormat
  000000F0: 10 00 06 10 2C 00 00 00 22 04 00 00 05 70 53 69  ....,..."....pSi
  00000100: 7A 65 14 00 06 10 EC FF FF FF 22 00 00 00 09 54  ze........"....T
  00000110: 65 78 65 6C 53 69 7A 65 13 00 06 10 F8 FF FF FF  exelSize........
  00000120: 22 00 00 00 08 4C 6F 67 57 69 64 74 68 14 00 06  "....LogWidth...
  00000130: 10 10 00 00 00 22 00 00 00 09 53 69 7A 65 57 69  ....."....SizeWi
  00000140: 64 74 68 14 00 06 10 F4 FF FF FF 22 00 00 00 09  dth........"....
  00000150: 4C 6F 67 48 65 69 67 68 74 15 00 06 10 F0 FF FF  LogHeight.......
  00000160: FF 22 00 00 00 0A 53 69 7A 65 48 65 69 67 68 74  ."....SizeHeight
  00000170: 0F 00 06 10 FC FF FF FF 22 00 00 00 04 53 69 7A  ........"....Siz
  00000180: 65 11 00 06 10 08 00 00 00 22 00 00 00 06 4C 6F  e........"....Lo
  00000190: 67 4D 69 6E 18 00 06 10 20 00 00 00 22 00 00 00  gMin.... ..."...
  000001A0: 0D 43 75 72 72 65 6E 74 48 65 69 67 68 74 02 00  .CurrentHeight..
  000001B0: 06 00                                            ..

RELOCATIONS #20
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000020  SECREL                     00000000        83  ?EncodeFormat@XGRAPHICS@@YGKKKKKW4_D3DFORMAT@@K_N1PAK2@Z (unsigned long __stdcall XGRAPHICS::EncodeFormat(unsigned long,unsigned long,unsigned long,unsigned long,enum _D3DFORMAT,unsigned long,bool,bool,unsigned long *,unsigned long *))
 00000024  SECTION                        0000        83  ?EncodeFormat@XGRAPHICS@@YGKKKKKW4_D3DFORMAT@@K_N1PAK2@Z (unsigned long __stdcall XGRAPHICS::EncodeFormat(unsigned long,unsigned long,unsigned long,unsigned long,enum _D3DFORMAT,unsigned long,bool,bool,unsigned long *,unsigned long *))

SECTION HEADER #21
.debug$F name
       0 physical address
       0 virtual address
      10 size of raw data
    3255 file pointer to raw data (00003255 to 00003264)
    3265 file pointer to relocation table
       0 file pointer to line numbers
       1 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #21
  00000000: 00 00 00 00 9F 01 00 00 06 00 00 00 0A 00 19 D3  ................

FPO Data (1)
                                             Use Has  Frame
 RVA      Proc Size   Locals  Regs   Prolog  BP  SEH  Type   Params
 00000000       415       24     3       25   Y   N    std       40

RELOCATIONS #21
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000000  DIR32NB                    00000000        83  ?EncodeFormat@XGRAPHICS@@YGKKKKKW4_D3DFORMAT@@K_N1PAK2@Z (unsigned long __stdcall XGRAPHICS::EncodeFormat(unsigned long,unsigned long,unsigned long,unsigned long,enum _D3DFORMAT,unsigned long,bool,bool,unsigned long *,unsigned long *))

SECTION HEADER #22
   XGRPH name
       0 physical address
       0 virtual address
      4C size of raw data
    326F file pointer to raw data (0000326F to 000032BA)
    32BB file pointer to relocation table
    32C5 file pointer to line numbers
       1 number of relocations
       6 number of line numbers
60101020 flags
         Code
         COMDAT; sym= "void __stdcall XGRAPHICS::EncodeTexture(unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,enum _D3DFORMAT,unsigned long,bool,bool,unsigned long,struct D3DBaseTexture *)" (?EncodeTexture@XGRAPHICS@@YGXKKKKKW4_D3DFORMAT@@K_N1KPAUD3DBaseTexture@@@Z)
         1 byte align
         Execute Read

RAW DATA #22
  00000000: 55 8B EC 56 8B 75 30 57 8D 46 10 50 8D 7E 0C 57  U..V.u0W.F.P.~.W
  00000010: FF 75 28 FF 75 24 FF 75 20 FF 75 1C FF 75 14 FF  .u(.u$.u .u..u..
  00000020: 75 10 FF 75 0C FF 75 08 E8 00 00 00 00 F6 45 1A  u..u..u.......E.
  00000030: 01 74 03 83 27 F7 8B 45 2C 83 66 08 00 5F C7 06  .t..'..E,.f.._..
  00000040: 01 00 04 00 89 46 04 5E 5D C2 2C 00              .....F.^].,.

RELOCATIONS #22
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000029  REL32                      00000000        83  ?EncodeFormat@XGRAPHICS@@YGKKKKKW4_D3DFORMAT@@K_N1PAK2@Z (unsigned long __stdcall XGRAPHICS::EncodeFormat(unsigned long,unsigned long,unsigned long,unsigned long,enum _D3DFORMAT,unsigned long,bool,bool,unsigned long *,unsigned long *))

LINENUMBERS #22

 Symbol index:       90 Base line number:   263
 Symbol name = ?EncodeTexture@XGRAPHICS@@YGXKKKKKW4_D3DFORMAT@@K_N1KPAUD3DBaseTexture@@@Z (void __stdcall XGRAPHICS::EncodeTexture(unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,enum _D3DFORMAT,unsigned long,bool,bool,unsigned long,struct D3DBaseTexture *))
 00000004(  273)  0000002D(  275)  00000033(  277)  00000036(  282)
 00000048(  283)

SECTION HEADER #23
.debug$S name
       0 physical address
       0 virtual address
     116 size of raw data
    32E9 file pointer to raw data (000032E9 to 000033FE)
    33FF file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #23
  00000000: 3E 00 0B 10 00 00 00 00 00 00 00 00 00 00 00 00  >...............
  00000010: 4C 00 00 00 08 00 00 00 48 00 00 00 9D 14 00 00  L.......H.......
  00000020: 00 00 00 00 00 00 01 18 58 47 52 41 50 48 49 43  ........XGRAPHIC
  00000030: 53 3A 3A 45 6E 63 6F 64 65 54 65 78 74 75 72 65  S::EncodeTexture
  00000040: 10 00 06 10 08 00 00 00 22 00 00 00 05 57 69 64  ........"....Wid
  00000050: 74 68 11 00 06 10 0C 00 00 00 22 00 00 00 06 48  th........"....H
  00000060: 65 69 67 68 74 10 00 06 10 10 00 00 00 22 00 00  eight........"..
  00000070: 00 05 44 65 70 74 68 11 00 06 10 14 00 00 00 22  ..Depth........"
  00000080: 00 00 00 06 4C 65 76 65 6C 73 10 00 06 10 18 00  ....Levels......
  00000090: 00 00 22 00 00 00 05 55 73 61 67 65 11 00 06 10  .."....Usage....
  000000A0: 1C 00 00 00 1B 10 00 00 06 46 6F 72 6D 61 74 10  .........Format.
  000000B0: 00 06 10 20 00 00 00 22 00 00 00 05 50 69 74 63  ... ..."....Pitc
  000000C0: 68 14 00 06 10 24 00 00 00 70 00 00 00 09 69 73  h....$...p....is
  000000D0: 43 75 62 65 4D 61 70 13 00 06 10 28 00 00 00 70  CubeMap....(...p
  000000E0: 00 00 00 08 69 73 56 6F 6C 75 6D 65 0F 00 06 10  ....isVolume....
  000000F0: 2C 00 00 00 22 00 00 00 04 44 61 74 61 13 00 06  ,..."....Data...
  00000100: 10 30 00 00 00 C2 10 00 00 08 70 54 65 78 74 75  .0........pTextu
  00000110: 72 65 02 00 06 00                                re....

RELOCATIONS #23
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000020  SECREL                     00000000        90  ?EncodeTexture@XGRAPHICS@@YGXKKKKKW4_D3DFORMAT@@K_N1KPAUD3DBaseTexture@@@Z (void __stdcall XGRAPHICS::EncodeTexture(unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,enum _D3DFORMAT,unsigned long,bool,bool,unsigned long,struct D3DBaseTexture *))
 00000024  SECTION                        0000        90  ?EncodeTexture@XGRAPHICS@@YGXKKKKKW4_D3DFORMAT@@K_N1KPAUD3DBaseTexture@@@Z (void __stdcall XGRAPHICS::EncodeTexture(unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,enum _D3DFORMAT,unsigned long,bool,bool,unsigned long,struct D3DBaseTexture *))

SECTION HEADER #24
.debug$F name
       0 physical address
       0 virtual address
      10 size of raw data
    3413 file pointer to raw data (00003413 to 00003422)
    3423 file pointer to relocation table
       0 file pointer to line numbers
       1 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #24
  00000000: 00 00 00 00 4C 00 00 00 01 00 00 00 0B 00 08 D2  ....L...........

FPO Data (1)
                                             Use Has  Frame
 RVA      Proc Size   Locals  Regs   Prolog  BP  SEH  Type   Params
 00000000        76        4     2        8   Y   N    std       44

RELOCATIONS #24
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000000  DIR32NB                    00000000        90  ?EncodeTexture@XGRAPHICS@@YGXKKKKKW4_D3DFORMAT@@K_N1KPAUD3DBaseTexture@@@Z (void __stdcall XGRAPHICS::EncodeTexture(unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,enum _D3DFORMAT,unsigned long,bool,bool,unsigned long,struct D3DBaseTexture *))

SECTION HEADER #25
   XGRPH name
       0 physical address
       0 virtual address
      41 size of raw data
    342D file pointer to raw data (0000342D to 0000346D)
    346E file pointer to relocation table
    3478 file pointer to line numbers
       1 number of relocations
       6 number of line numbers
60101020 flags
         Code
         COMDAT; sym= _XGSetSurfaceHeader@24
         1 byte align
         Execute Read

RAW DATA #25
  00000000: 55 8B EC 56 8B 75 14 8D 46 10 50 8D 46 0C 50 6A  U..V.u..F.P.F.Pj
  00000010: 00 6A 00 FF 75 1C FF 75 10 6A 01 6A 01 FF 75 0C  .j..u..u.j.j..u.
  00000020: FF 75 08 E8 00 00 00 00 83 66 08 00 8B 45 18 83  .u.......f...E..
  00000030: 66 14 00 C7 06 01 00 05 00 89 46 04 5E 5D C2 18  f.........F.^]..
  00000040: 00                                               .

RELOCATIONS #25
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000024  REL32                      00000000        83  ?EncodeFormat@XGRAPHICS@@YGKKKKKW4_D3DFORMAT@@K_N1PAK2@Z (unsigned long __stdcall XGRAPHICS::EncodeFormat(unsigned long,unsigned long,unsigned long,unsigned long,enum _D3DFORMAT,unsigned long,bool,bool,unsigned long *,unsigned long *))

LINENUMBERS #25

 Symbol index:       9D Base line number:   294
 Symbol name = _XGSetSurfaceHeader@24
 00000004(  304)  00000028(  307)  0000002C(  308)  0000002F(  309)
 0000003D(  310)

SECTION HEADER #26
.debug$S name
       0 physical address
       0 virtual address
      AE size of raw data
    349C file pointer to raw data (0000349C to 00003549)
    354A file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #26
  00000000: 38 00 0B 10 00 00 00 00 00 00 00 00 00 00 00 00  8...............
  00000010: 41 00 00 00 04 00 00 00 3D 00 00 00 9F 14 00 00  A.......=.......
  00000020: 00 00 00 00 00 00 01 12 58 47 53 65 74 53 75 72  ........XGSetSur
  00000030: 66 61 63 65 48 65 61 64 65 72 10 00 06 10 08 00  faceHeader......
  00000040: 00 00 75 00 00 00 05 57 69 64 74 68 11 00 06 10  ..u....Width....
  00000050: 0C 00 00 00 75 00 00 00 06 48 65 69 67 68 74 11  ....u....Height.
  00000060: 00 06 10 10 00 00 00 1B 10 00 00 06 46 6F 72 6D  ............Form
  00000070: 61 74 13 00 06 10 14 00 00 00 51 10 00 00 08 70  at........Q....p
  00000080: 53 75 72 66 61 63 65 0F 00 06 10 18 00 00 00 75  Surface........u
  00000090: 00 00 00 04 44 61 74 61 10 00 06 10 1C 00 00 00  ....Data........
  000000A0: 75 00 00 00 05 50 69 74 63 68 02 00 06 00        u....Pitch....

RELOCATIONS #26
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000020  SECREL                     00000000        9D  _XGSetSurfaceHeader@24
 00000024  SECTION                        0000        9D  _XGSetSurfaceHeader@24

SECTION HEADER #27
.debug$F name
       0 physical address
       0 virtual address
      10 size of raw data
    355E file pointer to raw data (0000355E to 0000356D)
    356E file pointer to relocation table
       0 file pointer to line numbers
       1 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #27
  00000000: 00 00 00 00 41 00 00 00 01 00 00 00 06 00 04 D1  ....A...........

FPO Data (1)
                                             Use Has  Frame
 RVA      Proc Size   Locals  Regs   Prolog  BP  SEH  Type   Params
 00000000        65        4     1        4   Y   N    std       24

RELOCATIONS #27
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000000  DIR32NB                    00000000        9D  _XGSetSurfaceHeader@24

SECTION HEADER #28
   XGRPH name
       0 physical address
       0 virtual address
      2A size of raw data
    3578 file pointer to raw data (00003578 to 000035A1)
    35A2 file pointer to relocation table
    35AC file pointer to line numbers
       1 number of relocations
       3 number of line numbers
60101020 flags
         Code
         COMDAT; sym= _XGSetTextureHeader@36
         1 byte align
         Execute Read

RAW DATA #28
  00000000: 55 8B EC FF 75 20 FF 75 24 6A 00 6A 00 FF 75 28  U...u .u$j.j..u(
  00000010: FF 75 18 FF 75 14 FF 75 10 6A 01 FF 75 0C FF 75  .u..u..u.j..u..u
  00000020: 08 E8 00 00 00 00 5D C2 24 00                    ......].$.

RELOCATIONS #28
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000022  REL32                      00000000        90  ?EncodeTexture@XGRAPHICS@@YGXKKKKKW4_D3DFORMAT@@K_N1KPAUD3DBaseTexture@@@Z (void __stdcall XGRAPHICS::EncodeTexture(unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,enum _D3DFORMAT,unsigned long,bool,bool,unsigned long,struct D3DBaseTexture *))

LINENUMBERS #28

 Symbol index:       AA Base line number:   324
 Symbol name = _XGSetTextureHeader@36
 00000003(  335)  00000026(  336)

SECTION HEADER #29
.debug$S name
       0 physical address
       0 virtual address
      E4 size of raw data
    35BE file pointer to raw data (000035BE to 000036A1)
    36A2 file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #29
  00000000: 38 00 0B 10 00 00 00 00 00 00 00 00 00 00 00 00  8...............
  00000010: 2A 00 00 00 03 00 00 00 26 00 00 00 A1 14 00 00  *.......&.......
  00000020: 00 00 00 00 00 00 01 12 58 47 53 65 74 54 65 78  ........XGSetTex
  00000030: 74 75 72 65 48 65 61 64 65 72 10 00 06 10 08 00  tureHeader......
  00000040: 00 00 75 00 00 00 05 57 69 64 74 68 11 00 06 10  ..u....Width....
  00000050: 0C 00 00 00 75 00 00 00 06 48 65 69 67 68 74 11  ....u....Height.
  00000060: 00 06 10 10 00 00 00 75 00 00 00 06 4C 65 76 65  .......u....Leve
  00000070: 6C 73 10 00 06 10 14 00 00 00 22 00 00 00 05 55  ls........"....U
  00000080: 73 61 67 65 11 00 06 10 18 00 00 00 1B 10 00 00  sage............
  00000090: 06 46 6F 72 6D 61 74 0F 00 06 10 1C 00 00 00 22  .Format........"
  000000A0: 00 00 00 04 50 6F 6F 6C 13 00 06 10 20 00 00 00  ....Pool.... ...
  000000B0: 62 10 00 00 08 70 54 65 78 74 75 72 65 0F 00 06  b....pTexture...
  000000C0: 10 24 00 00 00 75 00 00 00 04 44 61 74 61 10 00  .$...u....Data..
  000000D0: 06 10 28 00 00 00 75 00 00 00 05 50 69 74 63 68  ..(...u....Pitch
  000000E0: 02 00 06 00                                      ....

RELOCATIONS #29
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000020  SECREL                     00000000        AA  _XGSetTextureHeader@36
 00000024  SECTION                        0000        AA  _XGSetTextureHeader@36

SECTION HEADER #2A
.debug$F name
       0 physical address
       0 virtual address
      10 size of raw data
    36B6 file pointer to raw data (000036B6 to 000036C5)
    36C6 file pointer to relocation table
       0 file pointer to line numbers
       1 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #2A
  00000000: 00 00 00 00 2A 00 00 00 01 00 00 00 09 00 03 D0  ....*...........

FPO Data (1)
                                             Use Has  Frame
 RVA      Proc Size   Locals  Regs   Prolog  BP  SEH  Type   Params
 00000000        42        4     0        3   Y   N    std       36

RELOCATIONS #2A
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000000  DIR32NB                    00000000        AA  _XGSetTextureHeader@36

SECTION HEADER #2B
   XGRPH name
       0 physical address
       0 virtual address
      2A size of raw data
    36D0 file pointer to raw data (000036D0 to 000036F9)
    36FA file pointer to relocation table
    3704 file pointer to line numbers
       1 number of relocations
       3 number of line numbers
60101020 flags
         Code
         COMDAT; sym= _XGSetCubeTextureHeader@32
         1 byte align
         Execute Read

RAW DATA #2B
  00000000: 55 8B EC FF 75 1C FF 75 20 6A 00 6A 01 FF 75 24  U...u..u j.j..u$
  00000010: FF 75 14 FF 75 10 FF 75 0C 6A 01 FF 75 08 FF 75  .u..u..u.j..u..u
  00000020: 08 E8 00 00 00 00 5D C2 20 00                    ......]. .

RELOCATIONS #2B
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000022  REL32                      00000000        90  ?EncodeTexture@XGRAPHICS@@YGXKKKKKW4_D3DFORMAT@@K_N1KPAUD3DBaseTexture@@@Z (void __stdcall XGRAPHICS::EncodeTexture(unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,enum _D3DFORMAT,unsigned long,bool,bool,unsigned long,struct D3DBaseTexture *))

LINENUMBERS #2B

 Symbol index:       B7 Base line number:   349
 Symbol name = _XGSetCubeTextureHeader@32
 00000003(  360)  00000026(  361)

SECTION HEADER #2C
.debug$S name
       0 physical address
       0 virtual address
      DE size of raw data
    3716 file pointer to raw data (00003716 to 000037F3)
    37F4 file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #2C
  00000000: 3C 00 0B 10 00 00 00 00 00 00 00 00 00 00 00 00  <...............
  00000010: 2A 00 00 00 03 00 00 00 26 00 00 00 A3 14 00 00  *.......&.......
  00000020: 00 00 00 00 00 00 01 16 58 47 53 65 74 43 75 62  ........XGSetCub
  00000030: 65 54 65 78 74 75 72 65 48 65 61 64 65 72 15 00  eTextureHeader..
  00000040: 06 10 08 00 00 00 75 00 00 00 0A 45 64 67 65 4C  ......u....EdgeL
  00000050: 65 6E 67 74 68 11 00 06 10 0C 00 00 00 75 00 00  ength........u..
  00000060: 00 06 4C 65 76 65 6C 73 10 00 06 10 10 00 00 00  ..Levels........
  00000070: 22 00 00 00 05 55 73 61 67 65 11 00 06 10 14 00  "....Usage......
  00000080: 00 00 1B 10 00 00 06 46 6F 72 6D 61 74 0F 00 06  .......Format...
  00000090: 10 18 00 00 00 22 00 00 00 04 50 6F 6F 6C 17 00  ....."....Pool..
  000000A0: 06 10 1C 00 00 00 6C 10 00 00 0C 70 43 75 62 65  ......l....pCube
  000000B0: 54 65 78 74 75 72 65 0F 00 06 10 20 00 00 00 75  Texture.... ...u
  000000C0: 00 00 00 04 44 61 74 61 10 00 06 10 24 00 00 00  ....Data....$...
  000000D0: 75 00 00 00 05 50 69 74 63 68 02 00 06 00        u....Pitch....

RELOCATIONS #2C
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000020  SECREL                     00000000        B7  _XGSetCubeTextureHeader@32
 00000024  SECTION                        0000        B7  _XGSetCubeTextureHeader@32

SECTION HEADER #2D
.debug$F name
       0 physical address
       0 virtual address
      10 size of raw data
    3808 file pointer to raw data (00003808 to 00003817)
    3818 file pointer to relocation table
       0 file pointer to line numbers
       1 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #2D
  00000000: 00 00 00 00 2A 00 00 00 01 00 00 00 08 00 03 D0  ....*...........

FPO Data (1)
                                             Use Has  Frame
 RVA      Proc Size   Locals  Regs   Prolog  BP  SEH  Type   Params
 00000000        42        4     0        3   Y   N    std       32

RELOCATIONS #2D
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000000  DIR32NB                    00000000        B7  _XGSetCubeTextureHeader@32

SECTION HEADER #2E
   XGRPH name
       0 physical address
       0 virtual address
      2B size of raw data
    3822 file pointer to raw data (00003822 to 0000384C)
    384D file pointer to relocation table
    3857 file pointer to line numbers
       1 number of relocations
       3 number of line numbers
60101020 flags
         Code
         COMDAT; sym= _XGSetVolumeTextureHeader@40
         1 byte align
         Execute Read

RAW DATA #2E
  00000000: 55 8B EC FF 75 24 FF 75 28 6A 01 6A 00 FF 75 2C  U...u$.u(j.j..u,
  00000010: FF 75 1C FF 75 18 FF 75 14 FF 75 10 FF 75 0C FF  .u..u..u..u..u..
  00000020: 75 08 E8 00 00 00 00 5D C2 28 00                 u......].(.

RELOCATIONS #2E
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000023  REL32                      00000000        90  ?EncodeTexture@XGRAPHICS@@YGXKKKKKW4_D3DFORMAT@@K_N1KPAUD3DBaseTexture@@@Z (void __stdcall XGRAPHICS::EncodeTexture(unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,enum _D3DFORMAT,unsigned long,bool,bool,unsigned long,struct D3DBaseTexture *))

LINENUMBERS #2E

 Symbol index:       C4 Base line number:   376
 Symbol name = _XGSetVolumeTextureHeader@40
 00000003(  387)  00000027(  388)

SECTION HEADER #2F
.debug$S name
       0 physical address
       0 virtual address
     102 size of raw data
    3869 file pointer to raw data (00003869 to 0000396A)
    396B file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #2F
  00000000: 3E 00 0B 10 00 00 00 00 00 00 00 00 00 00 00 00  >...............
  00000010: 2B 00 00 00 03 00 00 00 27 00 00 00 A5 14 00 00  +.......'.......
  00000020: 00 00 00 00 00 00 01 18 58 47 53 65 74 56